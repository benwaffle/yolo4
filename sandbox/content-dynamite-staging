{
    "basePath": "",
    "baseUrl": "https://dynamite-staging.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Dynamite",
    "description": "",
    "discoveryVersion": "v1",
    "documentationLink": "https://goto.google.com/dynamite",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "dynamite:v1",
    "kind": "discovery#restDescription",
    "name": "dynamite",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "spaces": {
            "resources": {
                "webhooks": {
                    "methods": {
                        "create": {
                            "description": "Create a message through the incoming webhooks API.",
                            "flatPath": "v1/spaces/{spacesId}/webhooks",
                            "httpMethod": "POST",
                            "id": "dynamite.spaces.webhooks.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "conversationKey": {
                                    "description": "[DEPRECATED] see thread_key below.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Space resource name, in the form\n  - \"spaces/*\"",
                                    "location": "path",
                                    "pattern": "^spaces/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "threadKey": {
                                    "description": "Opaque external thread ID generated by apps. Messages with the same\nexternal thread ID will be grouped into the same thread. Has no effect if\n\"thread\" field is set in \"message\".",
                                    "location": "query",
                                    "type": "string"
                                },
                                "token": {
                                    "description": "Encoded secret token.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "topicKey": {
                                    "description": "[DEPRECATED] See conversation_key above.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+parent}/webhooks",
                            "request": {
                                "$ref": "Message"
                            },
                            "response": {
                                "$ref": "Empty"
                            }
                        }
                    }
                }
            }
        }
    },
    "revision": "20190913",
    "rootUrl": "https://dynamite-staging.sandbox.googleapis.com/",
    "schemas": {
        "Action": {
            "id": "Action",
            "properties": {
                "name": {
                    "description": "Text representing the name of the action.\ne.g. \"Open in app\"\ne.g. \"View in Youtube\"\ne.g. \"Watch now\"\ne.g. \"Accept friend request\"",
                    "type": "string"
                },
                "url": {
                    "description": "On mobile devices, if the url is handled by default by another app, then\nnavigating to this url would open that app.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ActionParameter": {
            "description": "List of string parameters that developers can specify when the above\naction method (in apps script) is invoked.  An example use case is for\n3 snooze buttons: snooze now, snooze 1 day, snooze next week.\nDevelopers can have action method = snooze() and pass the snooze type\nand snooze time in list of string parameters.",
            "id": "ActionParameter",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ActionResponse": {
            "id": "ActionResponse",
            "properties": {
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "NEW_MESSAGE",
                        "UPDATE_MESSAGE",
                        "REQUEST_CONFIG"
                    ],
                    "enumDescriptions": [
                        "Default type; will be handled as NEW_MESSAGE.",
                        "Post as a new message in the topic.",
                        "Update the bot's own message. (Only after CARD_CLICKED events.)",
                        "Privately ask the user for additional configuration."
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "URL for users to configure bot. (Only for REQUEST_CONFIG response type.)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Annotation": {
            "description": "Annotations related to the Message text.",
            "id": "Annotation",
            "properties": {
                "length": {
                    "description": "Length of the text_body substring beginning from start_index\nthe Annotation corresponds to.",
                    "format": "int32",
                    "type": "integer"
                },
                "startIndex": {
                    "description": "Start index (0-indexed) of the Message text the Annotation corresponds\nto, inclusive.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "USER_MENTION"
                    ],
                    "enumDescriptions": [
                        "Default value for the enum. DO NOT USE.",
                        ""
                    ],
                    "type": "string"
                },
                "userMention": {
                    "$ref": "UserMentionMetadata"
                }
            },
            "type": "object"
        },
        "ApiActionParameter": {
            "description": "List of string parameters to supply when the action method is invoked.\nFor example, consider three snooze buttons: snooze now, snooze 1 day,\nsnooze next week. You might use action method = snooze(), passing the\nsnooze type and snooze time in the list of string parameters.",
            "id": "ApiActionParameter",
            "properties": {
                "key": {
                    "description": "The name of the parameter for the action script.",
                    "type": "string"
                },
                "value": {
                    "description": "The value of the parameter.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiButton": {
            "description": "A button. Can be a text button or an image button.",
            "id": "ApiButton",
            "properties": {
                "imageButton": {
                    "$ref": "ApiImageButton",
                    "description": "A button with image and onclick action."
                },
                "textButton": {
                    "$ref": "ApiTextButton",
                    "description": "A button with text and onclick action."
                }
            },
            "type": "object"
        },
        "ApiCard": {
            "description": "A card is a UI element that can contain UI widgets such as texts, images.",
            "id": "ApiCard",
            "properties": {
                "cardActions": {
                    "description": "The actions of this card.",
                    "items": {
                        "$ref": "ApiCardAction"
                    },
                    "type": "array"
                },
                "header": {
                    "$ref": "ApiCardHeader",
                    "description": "The header of the card. A header usually contains a title and an image."
                },
                "name": {
                    "description": "Name of the card.",
                    "type": "string"
                },
                "sections": {
                    "description": "Sections are separated by a line divider.",
                    "items": {
                        "$ref": "ApiSection"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ApiCardAction": {
            "description": "A card action is\nthe action associated with the card. For an invoice card, a\ntypical action would be: delete invoice, email invoice or open the\ninvoice in browser.",
            "id": "ApiCardAction",
            "properties": {
                "actionLabel": {
                    "description": "The label used to be displayed in the action menu item.",
                    "type": "string"
                },
                "onClick": {
                    "$ref": "ApiOnClick",
                    "description": "The onclick action for this action item."
                }
            },
            "type": "object"
        },
        "ApiCardHeader": {
            "id": "ApiCardHeader",
            "properties": {
                "imageStyle": {
                    "description": "The image's type (e.g. square border or circular border).",
                    "enum": [
                        "IMAGE_STYLE_UNSPECIFIED",
                        "IMAGE",
                        "AVATAR"
                    ],
                    "enumDescriptions": [
                        "",
                        "Square border.",
                        "Circular border."
                    ],
                    "type": "string"
                },
                "imageUrl": {
                    "description": "The URL of the image in the card header.",
                    "type": "string"
                },
                "subtitle": {
                    "description": "The subtitle of the card header.",
                    "type": "string"
                },
                "title": {
                    "description": "The title must be specified. The header has a fixed height: if both a\ntitle and subtitle is specified, each will take up 1 line. If only the\ntitle is specified, it will take up both lines.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiFormAction": {
            "description": "A form action describes the behavior when the form is submitted.\nFor example, an Apps Script can be invoked to handle the form.",
            "id": "ApiFormAction",
            "properties": {
                "actionMethodName": {
                    "description": "Apps Script function to invoke when the containing element is\nclicked/activated.",
                    "type": "string"
                },
                "parameters": {
                    "description": "List of action parameters.",
                    "items": {
                        "$ref": "ApiActionParameter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ApiImage": {
            "description": "An image that is specified by a URL and can have an onclick action.",
            "id": "ApiImage",
            "properties": {
                "aspectRatio": {
                    "description": "The aspect ratio of this image (width/height).",
                    "format": "double",
                    "type": "number"
                },
                "imageUrl": {
                    "description": "The URL of the image.",
                    "type": "string"
                },
                "onClick": {
                    "$ref": "ApiOnClick",
                    "description": "The onclick action."
                }
            },
            "type": "object"
        },
        "ApiImageButton": {
            "description": "An image button with an onclick action.",
            "id": "ApiImageButton",
            "properties": {
                "icon": {
                    "description": "The icon specified by an enum that indices to an icon provided by Chat\nAPI.",
                    "enum": [
                        "ICON_UNSPECIFIED",
                        "AIRPLANE",
                        "BOOKMARK",
                        "BUS",
                        "CAR",
                        "CLOCK",
                        "CONFIRMATION_NUMBER_ICON",
                        "DOLLAR",
                        "DESCRIPTION",
                        "EMAIL",
                        "EVENT_PERFORMER",
                        "EVENT_SEAT",
                        "FLIGHT_ARRIVAL",
                        "FLIGHT_DEPARTURE",
                        "HOTEL",
                        "HOTEL_ROOM_TYPE",
                        "INVITE",
                        "MAP_PIN",
                        "MEMBERSHIP",
                        "MULTIPLE_PEOPLE",
                        "OFFER",
                        "PERSON",
                        "PHONE",
                        "RESTAURANT_ICON",
                        "SHOPPING_CART",
                        "STAR",
                        "STORE",
                        "TICKET",
                        "TRAIN",
                        "VIDEO_CAMERA",
                        "VIDEO_PLAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "description": "The icon specified by a URL.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of this image_button which will be used for accessibility.\nDefault value will be provided if developers don't specify.",
                    "type": "string"
                },
                "onClick": {
                    "$ref": "ApiOnClick",
                    "description": "The onclick action."
                }
            },
            "type": "object"
        },
        "ApiKeyValue": {
            "description": "A UI element contains a key (label) and a value (content). And this\nelement may also contain some actions such as onclick button.",
            "id": "ApiKeyValue",
            "properties": {
                "bottomLabel": {
                    "description": "The text of the bottom label. Formatted text supported.",
                    "type": "string"
                },
                "button": {
                    "$ref": "ApiButton",
                    "description": "A button that can be clicked to trigger an action."
                },
                "content": {
                    "description": "The text of the content. Formatted text supported and always required.",
                    "type": "string"
                },
                "contentMultiline": {
                    "description": "If the content should be multiline.",
                    "type": "boolean"
                },
                "icon": {
                    "description": "An enum value that will be replaced by the Chat API with the\ncorresponding icon image.",
                    "enum": [
                        "ICON_UNSPECIFIED",
                        "AIRPLANE",
                        "BOOKMARK",
                        "BUS",
                        "CAR",
                        "CLOCK",
                        "CONFIRMATION_NUMBER_ICON",
                        "DOLLAR",
                        "DESCRIPTION",
                        "EMAIL",
                        "EVENT_PERFORMER",
                        "EVENT_SEAT",
                        "FLIGHT_ARRIVAL",
                        "FLIGHT_DEPARTURE",
                        "HOTEL",
                        "HOTEL_ROOM_TYPE",
                        "INVITE",
                        "MAP_PIN",
                        "MEMBERSHIP",
                        "MULTIPLE_PEOPLE",
                        "OFFER",
                        "PERSON",
                        "PHONE",
                        "RESTAURANT_ICON",
                        "SHOPPING_CART",
                        "STAR",
                        "STORE",
                        "TICKET",
                        "TRAIN",
                        "VIDEO_CAMERA",
                        "VIDEO_PLAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "description": "The icon specified by a URL.",
                    "type": "string"
                },
                "onClick": {
                    "$ref": "ApiOnClick",
                    "description": "The onclick action. Only the top label, bottom label and content region\nare clickable."
                },
                "topLabel": {
                    "description": "The text of the top label. Formatted text supported.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiOnClick": {
            "description": "An onclick action (e.g. open a link).",
            "id": "ApiOnClick",
            "properties": {
                "action": {
                    "$ref": "ApiFormAction",
                    "description": "A form action will be trigger by this onclick if specified."
                },
                "openLink": {
                    "$ref": "ApiOpenLink",
                    "description": "This onclick triggers an open link action if specified."
                }
            },
            "type": "object"
        },
        "ApiOpenLink": {
            "description": "A link that opens a new window.",
            "id": "ApiOpenLink",
            "properties": {
                "url": {
                    "description": "The URL to open.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiSection": {
            "description": "A section contains a collection of widgets that are rendered\n(vertically) in the order that they are specified. Across all platforms,\ncards have a narrow fixed width, so\nthere is currently no need for layout properties (e.g. float).",
            "id": "ApiSection",
            "properties": {
                "header": {
                    "description": "The header of the section, text formatted supported.",
                    "type": "string"
                },
                "widgets": {
                    "description": "A section must contain at least 1 widget.",
                    "items": {
                        "$ref": "ApiWidgetMarkup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ApiTextButton": {
            "description": "A button with text and onclick action.",
            "id": "ApiTextButton",
            "properties": {
                "onClick": {
                    "$ref": "ApiOnClick",
                    "description": "The onclick action of the button."
                },
                "text": {
                    "description": "The text of the button.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiTextParagraph": {
            "description": "A paragraph of text. Formatted text supported.",
            "id": "ApiTextParagraph",
            "properties": {
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiWidgetMarkup": {
            "description": "A widget is a UI element that presents texts, images, etc.",
            "id": "ApiWidgetMarkup",
            "properties": {
                "buttons": {
                    "description": "A list of buttons. Buttons is also oneof data and only one of these\nfields should be set.",
                    "items": {
                        "$ref": "ApiButton"
                    },
                    "type": "array"
                },
                "image": {
                    "$ref": "ApiImage",
                    "description": "Display an image in this widget."
                },
                "keyValue": {
                    "$ref": "ApiKeyValue",
                    "description": "Display a key value item in this widget."
                },
                "textParagraph": {
                    "$ref": "ApiTextParagraph",
                    "description": "Display a text paragraph in this widget."
                }
            },
            "type": "object"
        },
        "AutoComplete": {
            "id": "AutoComplete",
            "properties": {
                "items": {
                    "items": {
                        "$ref": "AutoCompleteItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AutoCompleteItem": {
            "id": "AutoCompleteItem",
            "properties": {
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Button": {
            "id": "Button",
            "properties": {
                "imageButton": {
                    "$ref": "ImageButton"
                },
                "textButton": {
                    "$ref": "TextButton"
                }
            },
            "type": "object"
        },
        "Card": {
            "id": "Card",
            "properties": {
                "cardActions": {
                    "items": {
                        "$ref": "CardAction"
                    },
                    "type": "array"
                },
                "displayStyle": {
                    "enum": [
                        "DISPLAY_STYLE_UNSPECIFIED",
                        "PEEK",
                        "REPLACE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "fixedFooter": {
                    "$ref": "FixedFooter"
                },
                "header": {
                    "$ref": "CardHeader"
                },
                "name": {
                    "description": "Name of the card used in CardNavigation.pop_to_card_name.",
                    "type": "string"
                },
                "peekCardHeader": {
                    "$ref": "CardHeader",
                    "description": "When displaying contextual content, the peek card header acts as a\nplaceholder so that the user can navigate forward between the homepage\ncards and the contextual cards."
                },
                "sections": {
                    "items": {
                        "$ref": "Section"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CardAction": {
            "description": "When an AddOn Card is shown in detailed view, a card action is\nthe action associated with the card. For an invoice card, a\ntypical action would be: delete invoice, email invoice or open the\ninvoice in browser.",
            "id": "CardAction",
            "properties": {
                "actionLabel": {
                    "description": "The label used to be displayed in the action menu item.",
                    "type": "string"
                },
                "onClick": {
                    "$ref": "OnClick"
                }
            },
            "type": "object"
        },
        "CardHeader": {
            "id": "CardHeader",
            "properties": {
                "imageAltText": {
                    "description": "The alternative text of this image which will be used for\naccessibility.",
                    "type": "string"
                },
                "imageStyle": {
                    "enum": [
                        "UNKNOWN",
                        "IMAGE",
                        "AVATAR"
                    ],
                    "enumDescriptions": [
                        "",
                        "square border",
                        "circular border"
                    ],
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "subtitle": {
                    "type": "string"
                },
                "title": {
                    "description": "The title must be specified. The header has a fixed height: if both a\ntitle and subtitle is specified, each will take up 1 line. If only the\ntitle is specified, it will take up both lines. The header is rendered\nin collapsed and detailed view.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Conversation": {
            "id": "Conversation",
            "properties": {
                "name": {
                    "description": "Unique, the Conversation's resource name.",
                    "type": "string"
                },
                "retentionSettings": {
                    "$ref": "RetentionSettings",
                    "description": "The retention settings for this message. It is used to indicate to bots if\nOTR is on or off. We do not honor the retention settings in incoming\nmessages from bots."
                }
            },
            "type": "object"
        },
        "DM": {
            "description": "A DM in Hangouts Chat.",
            "id": "DM",
            "properties": {
                "name": {
                    "description": "Unique, the DM's resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DateTimePicker": {
            "id": "DateTimePicker",
            "properties": {
                "label": {
                    "description": "The label for the field, which is displayed to the user.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the text field which is used in FormInput, and uniquely\nidentifies this input.",
                    "type": "string"
                },
                "onChange": {
                    "$ref": "FormAction",
                    "description": "Triggered when the user clicks on the Save, or Clear button from the date\n/ time picker dialog. Will only be triggered if the value changed as a\nresult of the Save / Clear operation."
                },
                "timezoneOffsetDate": {
                    "description": "The number representing the time-zone offset from UTC, in minutes.\nIf set, the value_ms_epoch will be displayed in the specified time zone.\nIf not set, it will use the user's timezone setting in client side.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "The type of the DateTimePicker.",
                    "enum": [
                        "UNSPECIFIED_TYPE",
                        "DATE_AND_TIME",
                        "DATE_ONLY",
                        "TIME_ONLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "valueMsEpoch": {
                    "description": "The value to display which can be the default value before user input\nor previous user input.\nIt is represented in milliseconds (Epoch time).\n- For DATE_AND_TIME type, the full epoch value is used.\n- For DATE_ONLY type, only date of the epoch time is used.\n- For TIME_ONLY type, only time of the epoch time is used. For example,\nyou can set epoch time to 3 * 60 * 60 * 1000 to represent 3am.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "Entity": {
            "id": "Entity",
            "properties": {
                "action": {
                    "$ref": "Action",
                    "description": "Actions that could be exposed in the ThreadList."
                },
                "avatarImageUrl": {
                    "description": "The avatar image url.\nWhen used internaly by the parsers, make sure you\ndon't link here any image for which we don't have the copyright for.\nE.g. In case you are building the Wooz bundle for emails from Wooz, you\nare not supposed to use a static image with the Wooz logo. This is\nbecause that could update.\nHowever, in some cases, it will be useful to use the image we found in\nthe email: a person avatar that we have the url for in the friend\nrequest email.\n\nIn case of 3P, allow them to specify an avatar they want to use for their\nitems.",
                    "type": "string"
                },
                "externalKey": {
                    "description": "Used to group items together.\nRequired.",
                    "type": "string"
                },
                "mainImageUrl": {
                    "description": "The image url. If not present, it falls back to:\n1. If it has a type set, to the default image for that type.\n2. To a default image generic for the items.",
                    "type": "string"
                },
                "subtitle": {
                    "description": "Displays under the title.",
                    "type": "string"
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FixedFooter": {
            "description": "A persistent (sticky) footer that is added to the bottom of the card.",
            "id": "FixedFooter",
            "properties": {
                "buttons": {
                    "items": {
                        "$ref": "Button"
                    },
                    "type": "array"
                },
                "primaryButton": {
                    "$ref": "TextButton"
                },
                "secondaryButton": {
                    "$ref": "TextButton"
                }
            },
            "type": "object"
        },
        "FormAction": {
            "id": "FormAction",
            "properties": {
                "actionMethodName": {
                    "description": "Apps script function that should be invoked in the developer's apps\nscript when the containing element is clicked/activated.",
                    "type": "string"
                },
                "loadIndicator": {
                    "enum": [
                        "SPINNER",
                        "NONE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "parameters": {
                    "items": {
                        "$ref": "ActionParameter"
                    },
                    "type": "array"
                },
                "persistValues": {
                    "description": "Indicates whether form values persist after the action. When false, the\nApps Script is responsible for persisting values, by setting any form\nfield values using the formInputs in the event. Disabling this behavior\ncan be used if the add-on needs the ability to clear form fields, for\nexample, as with persistent values, there is no means for clearing\nexisting values. When disabling persistent values, it is strongly\nrecommended that the add-on use LoadIndicator.SPINNER for all events, as\nthis locks the UI to ensure no changes are made by the user while the\naction is being processed. When using LoadIndicator.NONE for any of the\nactions, persistent values are recommended, as it ensures that any\nchanges made by the user after form / on change actions are sent to the\nserver are not overwritten by the response. Persistent values disabled by\ndefault. While we recommend persistent values be used in the typical use\ncase, we do not enable by default, as doing so would change the current\nbehavior of existing add-ons in prod.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Image": {
            "id": "Image",
            "properties": {
                "altText": {
                    "description": "The alternative text of this image which will be used for accessibility.",
                    "type": "string"
                },
                "aspectRatio": {
                    "description": "The aspect ratio of this image (width/height).",
                    "format": "double",
                    "type": "number"
                },
                "imageUrl": {
                    "description": "Image url specified by developers. Server side, we will\nwrap with FIFE so client apps can configure size/cropping/etc.",
                    "type": "string"
                },
                "onClick": {
                    "$ref": "OnClick"
                }
            },
            "type": "object"
        },
        "ImageButton": {
            "id": "ImageButton",
            "properties": {
                "icon": {
                    "enum": [
                        "NONE",
                        "AIRPLANE",
                        "BOOKMARK",
                        "BUS",
                        "CAR",
                        "CLOCK",
                        "CONFIRMATION_NUMBER_ICON",
                        "DOLLAR",
                        "DESCRIPTION",
                        "EMAIL",
                        "EVENT_PERFORMER",
                        "EVENT_SEAT",
                        "FLIGHT_ARRIVAL",
                        "FLIGHT_DEPARTURE",
                        "HOTEL",
                        "HOTEL_ROOM_TYPE",
                        "INVITE",
                        "MAP_PIN",
                        "MEMBERSHIP",
                        "MULTIPLE_PEOPLE",
                        "OFFER",
                        "PERSON",
                        "PHONE",
                        "RESTAURANT_ICON",
                        "SHOPPING_CART",
                        "STAR",
                        "STORE",
                        "TICKET",
                        "TRAIN",
                        "VIDEO_CAMERA",
                        "VIDEO_PLAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Add new items in alphabetical order.\nNext Available ID: 31"
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "onClick": {
                    "$ref": "OnClick"
                }
            },
            "type": "object"
        },
        "ImageKeyValue": {
            "description": "This is deprecated and please use KeyValue.",
            "id": "ImageKeyValue",
            "properties": {
                "icon": {
                    "enum": [
                        "NONE",
                        "AIRPLANE",
                        "BOOKMARK",
                        "BUS",
                        "CAR",
                        "CLOCK",
                        "CONFIRMATION_NUMBER_ICON",
                        "DOLLAR",
                        "DESCRIPTION",
                        "EMAIL",
                        "EVENT_PERFORMER",
                        "EVENT_SEAT",
                        "FLIGHT_ARRIVAL",
                        "FLIGHT_DEPARTURE",
                        "HOTEL",
                        "HOTEL_ROOM_TYPE",
                        "INVITE",
                        "MAP_PIN",
                        "MEMBERSHIP",
                        "MULTIPLE_PEOPLE",
                        "OFFER",
                        "PERSON",
                        "PHONE",
                        "RESTAURANT_ICON",
                        "SHOPPING_CART",
                        "STAR",
                        "STORE",
                        "TICKET",
                        "TRAIN",
                        "VIDEO_CAMERA",
                        "VIDEO_PLAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Add new items in alphabetical order.\nNext Available ID: 31"
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "onClick": {
                    "$ref": "OnClick"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "KeyValue": {
            "id": "KeyValue",
            "properties": {
                "bottomLabel": {
                    "description": "Formatted text supported.",
                    "type": "string"
                },
                "button": {
                    "$ref": "Button"
                },
                "content": {
                    "description": "Formatted text supported and always required.",
                    "type": "string"
                },
                "contentMultiline": {
                    "type": "boolean"
                },
                "icon": {
                    "enum": [
                        "NONE",
                        "AIRPLANE",
                        "BOOKMARK",
                        "BUS",
                        "CAR",
                        "CLOCK",
                        "CONFIRMATION_NUMBER_ICON",
                        "DOLLAR",
                        "DESCRIPTION",
                        "EMAIL",
                        "EVENT_PERFORMER",
                        "EVENT_SEAT",
                        "FLIGHT_ARRIVAL",
                        "FLIGHT_DEPARTURE",
                        "HOTEL",
                        "HOTEL_ROOM_TYPE",
                        "INVITE",
                        "MAP_PIN",
                        "MEMBERSHIP",
                        "MULTIPLE_PEOPLE",
                        "OFFER",
                        "PERSON",
                        "PHONE",
                        "RESTAURANT_ICON",
                        "SHOPPING_CART",
                        "STAR",
                        "STORE",
                        "TICKET",
                        "TRAIN",
                        "VIDEO_CAMERA",
                        "VIDEO_PLAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Add new items in alphabetical order.\nNext Available ID: 31"
                    ],
                    "type": "string"
                },
                "iconAltText": {
                    "description": "The alternative text of this icon_url which will be used for\naccessibility.",
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "onClick": {
                    "$ref": "OnClick",
                    "description": "Only the top/bottom label + content region is clickable."
                },
                "switchWidget": {
                    "$ref": "SwitchWidget"
                },
                "topLabel": {
                    "description": "Formatted text supported.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Menu": {
            "description": "This is deprecated and please use SelectionControl by setting type to\nDROPDOWN.",
            "id": "Menu",
            "properties": {
                "items": {
                    "items": {
                        "$ref": "MenuItem"
                    },
                    "type": "array"
                },
                "label": {
                    "description": "Label used to be displayed ahead of the menu. It is optional.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the text field which is will be used in FormInput.",
                    "type": "string"
                },
                "onChange": {
                    "$ref": "FormAction",
                    "description": "If specified, form is submitted when\nselection changed. If not specified, developer\nwill need to specify a separate button."
                }
            },
            "type": "object"
        },
        "MenuItem": {
            "id": "MenuItem",
            "properties": {
                "selected": {
                    "type": "boolean"
                },
                "text": {
                    "description": "The text to be displayed.",
                    "type": "string"
                },
                "value": {
                    "description": "The value associated with this item which will be sent back to app\nscripts. Client should use as a form input value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Message": {
            "description": "A message in Dynamite. Based on View API / Gmail AddOn' InboxMarkup and\nContextualAddOnMarkup messages.\n\nNew fields added by Dynamite should start with tag number 1000.",
            "id": "Message",
            "properties": {
                "actionResponse": {
                    "$ref": "ActionResponse",
                    "description": "Parameters that a bot can use to configure how its response is posted.\nThis should only ever be set by bots, never by the server."
                },
                "annotations": {
                    "description": "Annotations about the text in this message.",
                    "items": {
                        "$ref": "Annotation"
                    },
                    "type": "array"
                },
                "apiVersion": {
                    "description": "Message format version. Default will be the latest version.\nCurrent version: 1.0",
                    "type": "string"
                },
                "cards": {
                    "description": "Gmail AddOn Cards that augment the message text.",
                    "items": {
                        "$ref": "Card"
                    },
                    "type": "array"
                },
                "conversation": {
                    "$ref": "Conversation",
                    "description": "The conversation the message belongs to.\nDeprecate when all 1P bots move to use thread."
                },
                "createTime": {
                    "description": "Time when the message was posted.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "dm": {
                    "$ref": "DM",
                    "description": "The direct message of the message."
                },
                "entity": {
                    "$ref": "Entity",
                    "description": "Identifying information of the message."
                },
                "fallbackText": {
                    "description": "A plain-text description of the attachment, used when clients cannot\ndisplay formatted attachment (e.g. mobile push notifications).",
                    "type": "string"
                },
                "name": {
                    "description": "LINT.IfChange\nResource name.",
                    "type": "string"
                },
                "previewText": {
                    "description": "Text for generating preview chips. This text will not be displayed to the\nuser, but any links to images, web pages, videos etc. included here will\ngenerate preview chips.",
                    "type": "string"
                },
                "publicApiCards": {
                    "description": "The cards from public API (ChatService).",
                    "items": {
                        "$ref": "ApiCard"
                    },
                    "type": "array"
                },
                "publisher": {
                    "$ref": "Publisher",
                    "description": "The message's sender."
                },
                "room": {
                    "$ref": "Room",
                    "description": "The room of the message."
                },
                "sender": {
                    "$ref": "User",
                    "description": "User who posted the message."
                },
                "space": {
                    "$ref": "Space",
                    "description": "The room or DM the message belongs to."
                },
                "text": {
                    "description": "Plaintext body of the message.",
                    "type": "string"
                },
                "thread": {
                    "$ref": "Thread",
                    "description": "The thread the message belongs to."
                },
                "toolbar": {
                    "$ref": "Toolbar",
                    "description": "A toolbar with name and icon."
                },
                "updates": {
                    "$ref": "Updates",
                    "description": "Describes what has changed to the item from the last update."
                }
            },
            "type": "object"
        },
        "OnClick": {
            "id": "OnClick",
            "properties": {
                "action": {
                    "$ref": "FormAction"
                },
                "link": {
                    "description": "This can be used as a short form for OpenLink with the default\nOpenAs and OnClose. It may be undeprecated if this proves to be\nhandy for developers.",
                    "type": "string"
                },
                "openLink": {
                    "$ref": "OpenLink"
                },
                "openLinkAction": {
                    "$ref": "FormAction",
                    "description": "An add-on triggers this action when the form action needs to open a\nlink. This differs from the open_link above in that this needs to talk\nto server to get the link. Thus some preparation work is required for\nweb client to do before the open link action response comes back."
                }
            },
            "type": "object"
        },
        "OpenLink": {
            "id": "OpenLink",
            "properties": {
                "loadIndicator": {
                    "description": "Next available ID: 5",
                    "enum": [
                        "NONE",
                        "SPINNER"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "onClose": {
                    "enum": [
                        "NOTHING",
                        "RELOAD_ADD_ON"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "openAs": {
                    "enum": [
                        "FULL_SIZE",
                        "OVERLAY"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Publisher": {
            "id": "Publisher",
            "properties": {
                "apiKey": {
                    "description": "Required. A whitelist of api_key will be checked in\nmessage uploader.  This will allow the different \"from\" addresses to\ngroup together InboxMarkup but using the same api_key.",
                    "type": "string"
                },
                "name": {
                    "description": "The display value for the sender (i.e. \"Google Docs\")",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RetentionSettings": {
            "description": "The settings of retention period of a message or topic.",
            "id": "RetentionSettings",
            "properties": {
                "expiryTimestamp": {
                    "description": "The timestamp after which the message/topic should be removed, in\nmicroseconds since the epoch, when state == EPHEMERAL_ONE_DAY.\nThe value should not be set in other cases.",
                    "format": "int64",
                    "type": "string"
                },
                "state": {
                    "description": "The retention state.",
                    "enum": [
                        "UNKNOWN_RETENTION_STATE",
                        "PERMANENT",
                        "EPHEMERAL_ONE_DAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "The message/topic should be kept permanently.",
                        "The message/topic should be kept with a 24-hour TTL."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Room": {
            "description": "A room in Hangouts Chat.",
            "id": "Room",
            "properties": {
                "displayName": {
                    "description": "The room's display name.",
                    "type": "string"
                },
                "name": {
                    "description": "Unique, the room's resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Section": {
            "description": "Sections are separated by a line divider. They contain a collection of\nwidgets that are rendered (vertically) in the order that they are\nspecified. Across all platforms, AddOns have a narrow fixed width, so\nthere is currently no need for layout properties (e.g. float).",
            "id": "Section",
            "properties": {
                "collapsable": {
                    "description": "Indicating whether this section is collapsable. If a section is\ncollapsable, the description must be given.",
                    "type": "boolean"
                },
                "description": {
                    "description": "The header of the section, text formatted supported.",
                    "type": "string"
                },
                "numUncollapsableWidgets": {
                    "description": "The number of uncollapsable widgets. For example, when a section\ncontains 5 widgets and the num_uncollapsable_widget are set to be 2,\nThe first 2 widgets will always shown and the last 3 is collapsed as\ndefault. Only when collapsable is set to be true, the\nnum_uncollapsable_widget will be taken into account.",
                    "format": "int32",
                    "type": "integer"
                },
                "widgets": {
                    "description": "A section must contain at least 1 widget.",
                    "items": {
                        "$ref": "WidgetMarkup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SelectionControl": {
            "id": "SelectionControl",
            "properties": {
                "items": {
                    "description": "For radio button, at most one of the items will be selected.",
                    "items": {
                        "$ref": "SelectionItem"
                    },
                    "type": "array"
                },
                "label": {
                    "description": "Label used to be displayed ahead of the selection control.\nIt is optional.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the text field which is will be used in FormInput.",
                    "type": "string"
                },
                "onChange": {
                    "$ref": "FormAction",
                    "description": "If specified, form is submitted when\nselection changed. If not specified, developer\nwill need to specify a separate button."
                },
                "type": {
                    "enum": [
                        "CHECK_BOX",
                        "RADIO_BUTTON",
                        "SWITCH",
                        "DROPDOWN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SelectionItem": {
            "id": "SelectionItem",
            "properties": {
                "selected": {
                    "description": "If more than one items are selected for RADIO_BUTTON and DROPDOWN,\nthe first selected item is treated as sElected and the after ones are\nall ignored.",
                    "type": "boolean"
                },
                "text": {
                    "description": "The text to be displayed.",
                    "type": "string"
                },
                "value": {
                    "description": "The value associated with this item which will be sent back to app\nscripts. Client should use as a form input value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Snippet": {
            "id": "Snippet",
            "properties": {
                "icon": {
                    "enum": [
                        "NONE",
                        "AIRPLANE",
                        "BOOKMARK",
                        "BUS",
                        "CAR",
                        "CLOCK",
                        "CONFIRMATION_NUMBER_ICON",
                        "DOLLAR",
                        "DESCRIPTION",
                        "EMAIL",
                        "EVENT_PERFORMER",
                        "EVENT_SEAT",
                        "FLIGHT_ARRIVAL",
                        "FLIGHT_DEPARTURE",
                        "HOTEL",
                        "HOTEL_ROOM_TYPE",
                        "INVITE",
                        "MAP_PIN",
                        "MEMBERSHIP",
                        "MULTIPLE_PEOPLE",
                        "PERSON",
                        "PHONE",
                        "RESTAURANT_ICON",
                        "SHOPPING_CART",
                        "STAR",
                        "STORE",
                        "TICKET",
                        "TRAIN",
                        "VIDEO_CAMERA",
                        "VIDEO_PLAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Used to override past updates in case they aren\u2019t relevant anymore.",
                    "type": "string"
                },
                "message": {
                    "description": "Message to display in the TL as well as as the snippets on the\nmessages in the expanded view.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Space": {
            "description": "A Hangouts Chat Room or DM.",
            "id": "Space",
            "properties": {
                "displayName": {
                    "description": "The display name, if it's a room.",
                    "type": "string"
                },
                "name": {
                    "description": "Unique, the resource name of the Space.",
                    "type": "string"
                },
                "type": {
                    "description": "Indicates whether this space is a room or dm.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "ROOM",
                        "DM"
                    ],
                    "enumDescriptions": [
                        "Default value for the enum. DO NOT USE.",
                        "A room.",
                        "A direct message."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SwitchWidget": {
            "id": "SwitchWidget",
            "properties": {
                "controlType": {
                    "enum": [
                        "UNSPECIFIED",
                        "SWITCH",
                        "CHECKBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The name of the switch widget which is will be used in FormInput.",
                    "type": "string"
                },
                "onChange": {
                    "$ref": "FormAction"
                },
                "selected": {
                    "type": "boolean"
                },
                "value": {
                    "description": "The value is what is passed back in apps script callback.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextButton": {
            "id": "TextButton",
            "properties": {
                "backgroundColor": {
                    "description": "Optional color of the button's background in RAISE mode. The default is\nthe secondary color from addon's manifest.",
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "onClick": {
                    "$ref": "OnClick"
                },
                "style": {
                    "enum": [
                        "UNSPECIFIED",
                        "TEXT",
                        "FILLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Simple text button with ripple touch feedback.",
                        "Button with solid background."
                    ],
                    "type": "string"
                },
                "text": {
                    "description": "Text color can be set via HTML <font color=\"#rgb\"> markup.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextField": {
            "id": "TextField",
            "properties": {
                "autoComplete": {
                    "$ref": "AutoComplete",
                    "description": "The initial set of auto complete items without any user input."
                },
                "autoCompleteCallback": {
                    "$ref": "FormAction",
                    "description": "The refresh function which returns AutoComplete based on the user's\ninput text. If the callback is not specified, auto complete will be\npurely done in client side based on the auto_complete items."
                },
                "autoCompleteMultipleSelections": {
                    "description": "When set to true, a user can input multiple auto-complet items.",
                    "type": "boolean"
                },
                "hintText": {
                    "type": "string"
                },
                "label": {
                    "description": "One of label or hint_text is required to be specified by the developers.",
                    "type": "string"
                },
                "maxLines": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the text field which is will be used in FormInput.",
                    "type": "string"
                },
                "onChange": {
                    "$ref": "FormAction"
                },
                "type": {
                    "enum": [
                        "SINGLE_LINE",
                        "MULTIPLE_LINE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The default value when no input from user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextKeyValue": {
            "description": "This is deprecated and please use KeyValue.",
            "id": "TextKeyValue",
            "properties": {
                "key": {
                    "type": "string"
                },
                "onClick": {
                    "$ref": "OnClick"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TextParagraph": {
            "id": "TextParagraph",
            "properties": {
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Thread": {
            "id": "Thread",
            "properties": {
                "name": {
                    "description": "Unique, the Thread's resource name.",
                    "type": "string"
                },
                "retentionSettings": {
                    "$ref": "RetentionSettings",
                    "description": "The retention settings for this message. It is used to indicate to bots if\nOTR is on or off. We do not honor the retention settings in incoming\nmessages from bots."
                }
            },
            "type": "object"
        },
        "Toolbar": {
            "description": "The Toolbar markup has been deprecated. The information is now specified\nin the manifest.",
            "id": "Toolbar",
            "properties": {
                "color": {
                    "description": "Background color of the toolbar in RBG hex representation.",
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Updates": {
            "description": "Describes what has changed to the item from the last update.\nE.g. In case of a Calendar event:\n\"Victor invited you to a conversation.\"\n\"Bikin accepted your invite.\"\nE.g. In case of buganizer:\n\"Assignee changed to bchiu@\"",
            "id": "Updates",
            "properties": {
                "action": {
                    "$ref": "Action",
                    "description": "Action to show on the messages in the expanded view."
                },
                "snippets": {
                    "items": {
                        "$ref": "Snippet"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "User": {
            "description": "The User resource is directly embedded in parent resources such as Messages,\nfollowing the convention in other Google APIs, such as Google Drive Files,\nGoogle+ Activities, Google+ Comments, and Google Calendar Events resources.",
            "id": "User",
            "properties": {
                "avatarUrl": {
                    "description": "The user's avatar image URL.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The user's display name.",
                    "type": "string"
                },
                "email": {
                    "description": "The user's email address.",
                    "type": "string"
                },
                "name": {
                    "description": "Resource name, in the format \"users/*\".",
                    "type": "string"
                },
                "type": {
                    "description": "User type.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "HUMAN",
                        "BOT"
                    ],
                    "enumDescriptions": [
                        "Default value for the enum. DO NOT USE.",
                        "Human user.",
                        "Bot user."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserMentionMetadata": {
            "description": "Annotation metadata for user mentions (@).",
            "id": "UserMentionMetadata",
            "properties": {
                "type": {
                    "description": "The type of user mention.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "ADD",
                        "MENTION"
                    ],
                    "enumDescriptions": [
                        "Default value for the enum. DO NOT USE.",
                        "Add user.",
                        "Mention user."
                    ],
                    "type": "string"
                },
                "user": {
                    "$ref": "User",
                    "description": "The User mentioned."
                }
            },
            "type": "object"
        },
        "WidgetMarkup": {
            "id": "WidgetMarkup",
            "properties": {
                "buttons": {
                    "description": "buttons is also oneof data and only one of these fields should be set.",
                    "items": {
                        "$ref": "Button"
                    },
                    "type": "array"
                },
                "dateTimePicker": {
                    "$ref": "DateTimePicker"
                },
                "image": {
                    "$ref": "Image"
                },
                "imageKeyValue": {
                    "$ref": "ImageKeyValue"
                },
                "keyValue": {
                    "$ref": "KeyValue"
                },
                "menu": {
                    "$ref": "Menu",
                    "description": "Input Widgets"
                },
                "selectionControl": {
                    "$ref": "SelectionControl"
                },
                "textField": {
                    "$ref": "TextField"
                },
                "textKeyValue": {
                    "$ref": "TextKeyValue"
                },
                "textParagraph": {
                    "$ref": "TextParagraph",
                    "description": "Read-only Widgets"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Dynamite API (staging)",
    "version": "v1",
    "version_module": true
}