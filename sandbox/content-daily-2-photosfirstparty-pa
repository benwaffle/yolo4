{
    "basePath": "",
    "baseUrl": "https://daily-2-photosfirstparty-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "PhotosFirstParty",
    "description": "",
    "discoveryVersion": "v1",
    "documentationLink": "https://goto.google.com/photos-first-party-api",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "daily_2_photosfirstparty_pa_sandbox:v1",
    "kind": "discovery#restDescription",
    "name": "daily_2_photosfirstparty_pa_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "create_media_items": {
            "methods": {
                "create": {
                    "description": "Create MediaItems in the Photos backend",
                    "flatPath": "v1/create_media_items",
                    "httpMethod": "POST",
                    "id": "daily_2_photosfirstparty_pa_sandbox.create_media_items.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/create_media_items",
                    "request": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsResponse"
                    }
                }
            }
        },
        "v1": {
            "methods": {
                "google_photos_create_live_album": {
                    "description": "Create a GooglePhotos Live Album with the given content.",
                    "flatPath": "v1/google_photos_create_live_album",
                    "httpMethod": "POST",
                    "id": "daily_2_photosfirstparty_pa_sandbox.google_photos_create_live_album",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/google_photos_create_live_album",
                    "request": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateLiveAlbumRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateLiveAlbumResponse"
                    }
                },
                "google_photos_create_shared_album": {
                    "description": "Create a GooglePhotos Shared Album with the given content and recipients.",
                    "flatPath": "v1/google_photos_create_shared_album",
                    "httpMethod": "POST",
                    "id": "daily_2_photosfirstparty_pa_sandbox.google_photos_create_shared_album",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/google_photos_create_shared_album",
                    "request": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateSharedAlbumRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateSharedAlbumResponse"
                    }
                },
                "google_photos_read_cluster_items": {
                    "description": "Read MediaItems from a GooglePhotos' Cluster from the Photos backend",
                    "flatPath": "v1/google_photos_read_cluster_items",
                    "httpMethod": "POST",
                    "id": "daily_2_photosfirstparty_pa_sandbox.google_photos_read_cluster_items",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/google_photos_read_cluster_items",
                    "request": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadClusterItemsRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadClusterItemsResponse"
                    }
                },
                "google_photos_read_user_clusters": {
                    "description": "Read GooglePhotos' UserClusters from the Photos backend",
                    "flatPath": "v1/google_photos_read_user_clusters",
                    "httpMethod": "POST",
                    "id": "daily_2_photosfirstparty_pa_sandbox.google_photos_read_user_clusters",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/google_photos_read_user_clusters",
                    "request": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersResponse"
                    }
                },
                "read_items_by_id": {
                    "description": "Read MediaItems with the given ids from the Photos backend",
                    "flatPath": "v1/read_items_by_id",
                    "httpMethod": "POST",
                    "id": "daily_2_photosfirstparty_pa_sandbox.read_items_by_id",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/read_items_by_id",
                    "request": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdResponse"
                    }
                }
            }
        }
    },
    "revision": "20190917",
    "rootUrl": "https://daily-2-photosfirstparty-pa.sandbox.googleapis.com/",
    "schemas": {
        "EmbedsDeepLinkData": {
            "description": "Deep-linking data is used to construct a deep-link URI for an activity or\nframe's embed, such that on click, the user is taken to the right place in\na mobile app. If the app is not installed, the user is taken to the app\nstore. If not on mobile, an analogous web uri is used.",
            "id": "EmbedsDeepLinkData",
            "properties": {
                "appId": {
                    "description": "Application ID (or project ID) from Google API Console.",
                    "format": "int64",
                    "type": "string"
                },
                "client": {
                    "description": "The data for a Google API Console client is entered by a developer during\nclient registration and is stored in PackagingService.",
                    "items": {
                        "$ref": "EmbedsPackagingServiceClient"
                    },
                    "type": "array"
                },
                "deepLinkId": {
                    "description": "The ID for non-URL content. Embeds may either have no analogous web\npresence or prefer a native mobile experience if supported.\nIn the case of no web presence, instead of setting the \"url\" field of an\nembed, such developers will set this field and other content fields, e.g.\nthumbnail, title, description. If set, this field is used to construct the\ndeep-link URI. Note that the native experience is preferred over the web\nlink and the web link is used as a fallback.",
                    "type": "string"
                },
                "url": {
                    "description": "Analogous web presence. Used as desktop fallback or when no native link\ndata is present.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmbedsEmbedClientItem": {
            "description": "Represents an embedded object in an update.\n\nThis is a wrapper class that can contain a single specific item proto in an\nextension field.  Think of it as a base class like `Message` in Java.\n\nEach item proto must declare that it extends this proto:\n\n    message ExampleObject {\n      option (item_type) = EXAMPLE_OBJECT;\n      extend EmbedClientItem {\n        optional ExampleObject example_object = <CL#>;\n      }\n    }\n\nSee go/es-embeds for details.",
            "id": "EmbedsEmbedClientItem",
            "properties": {
                "canonicalId": {
                    "description": "The canonical ID of the embed. If absent, the canonical ID is equal to the\nID; if present, then the canonical ID represents an \"equivalence class\" of\nembeds which really refer to the same object. (For example, the URLs\nhttp://www.foo.com/ and http://foo.com/ refer to the same object) This\nfield may be updated periodically by background processes.",
                    "type": "string"
                },
                "deepLinkData": {
                    "$ref": "EmbedsDeepLinkData",
                    "description": "Deep-linking data to take the user to the right place in a mobile app.\nThis is only used for preview and attribution. Links that are specific\nto a given embed type should live on that specific embed's proto by using\nLink. See http://goto.google.com/mariana-design."
                },
                "id": {
                    "description": "The ID of the embed.  This corresponds to the schema.org ID, as represented\nin the ItemScope.id field.",
                    "type": "string"
                },
                "provenance": {
                    "$ref": "EmbedsProvenance",
                    "description": "The provenance of the embed, populated when the embed originated\nfrom a web fetch. The provenance captures information about the\nweb page the embed had originated, like the URL that was retrieved\nand the retrieved URL's canonical form. This is useful in the case\nwhere the URL shared by the URL redirects (e.g., in the case of\na shortened URL)."
                },
                "renderId": {
                    "description": "The ID used to identify the embed during rendering. This field will match\nID, if set, otherwise it will be the ID of the parent activity.\nThis field is only populated on the server for client use and is not\npersisted to storage.",
                    "type": "string"
                },
                "signature": {
                    "description": "Signature of the embed, used for verification.",
                    "type": "string"
                },
                "transientData": {
                    "$ref": "EmbedsTransientData",
                    "description": "Transient generic data that will not be saved on the server."
                },
                "type": {
                    "description": "The first value in `type` determines which extension field will be set.\nWhen creating an EmbedClientItem, you only need to set the first (primary)\ntype in this field.  When the server receives the item, it will populate\nthe full type list using the parent annotations in the ItemType enum.",
                    "enumDescriptions": [
                        "Largely deprecated, effectively an error condition and should not be in\nstorage.",
                        "Embeds V2 types",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The action of checking in, as opposed to a \"check-in\".",
                        "",
                        "",
                        "The act of commenting, which might result in a comment.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Boswell story (see goto/boswell)",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "A photo stored in photo service owned by a Google account user.\nThis is distinct from PlusPhoto as it isn't tied to GPlus,\nbut is instead intended to be a more general photo tied to a google user.",
                        "A photo album in photo service owned by a Google account user.\nThis is distinct from PlusPhotoAlbum as it isn't tied to GPlus,\nbut is instead intended to be a general photo album tied to a google user.",
                        "An embed used to create a single photo in photo service. This type is never\nstored but is used to create a GOOGLE_USER_PHOTO_V2 or PLUS_PHOTO_V2 embed.",
                        "Embeds V1 types",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "CREATIVE_WORK subtypes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "EVENT subtypes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "ORGANIZATION subtypes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PLACE subtypes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "NOTE(jpanzer): This is a badly designed hierarchy and we should avoid\ndepending on Event properties inside UserInteractions as much as possible\nIMHO.",
                        "",
                        "Intangibles, primarily used as sub-objects of other types",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "CREATIVE_WORK extensions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Single frame for http://goto/carousel.",
                        "EVENT extensions",
                        "No declared proto. Used only as a base type for now.",
                        "",
                        "",
                        "",
                        "",
                        "NOTE(melchang): These correspond to http://schema.org/WebPage/Community and\nhttp://schema.org/WebPage/CommunityInvite. See b/7653610 for why these\nare \"SQUARE\" and not \"COMMUNITY\".",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Data visualizations. See http://code.google.com/apis/chart/index.html",
                        "",
                        "A collection of people that have been recommended to a user.",
                        "A Google+ post.",
                        "An http://schema.org/Date unstructured ISO-8859 timestamp string.",
                        "Embed representing a collection of multiple Drive objects.",
                        "https://schema.org/NewsMediaOrganization"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            "ACTION_V2",
                            "ADD_ACTION_V2",
                            "AGGREGATE_RATING_V2",
                            "ARTICLE_V2",
                            "ASSESS_ACTION_V2",
                            "AUDIO_OBJECT_V2",
                            "BASIC_INTERACTION_V2",
                            "BLOG_POSTING_V2",
                            "BLOG_V2",
                            "BOOK_V2",
                            "BUY_ACTION_V2",
                            "CHECK_IN_ACTION_V2",
                            "CHECKIN_V2",
                            "COLLEXION_V2",
                            "COMMENT_ACTION_V2",
                            "COMMENT_V2",
                            "COMMUNICATE_ACTION_V2",
                            "CONSUME_ACTION_V2",
                            "CREATE_ACTION_V2",
                            "CREATIVE_WORK_V2",
                            "DISCOVER_ACTION_V2",
                            "DOCUMENT_OBJECT_V2",
                            "DRAWING_OBJECT_V2",
                            "DRIVE_OBJECT_V2",
                            "EMOTISHARE_V2",
                            "ENTRY_POINT_V2",
                            "EVENT_TIME_V2",
                            "EVENT_V2",
                            "FILE_OBJECT_V2",
                            "FIND_ACTION_V2",
                            "FINANCIAL_QUOTE_V2",
                            "FORM_OBJECT_V2",
                            "GEO_COORDINATES_V2",
                            "GOOGLE_OFFER_V2",
                            "HANGOUT_CHAT_MESSAGE",
                            "HANGOUT_QUOTE",
                            "HANGOUT_V2",
                            "HOA_PLUS_EVENT_V2",
                            "IMAGE_OBJECT_V2",
                            "INTERACT_ACTION_V2",
                            "INTERACTION_V2",
                            "LISTEN_ACTION_V2",
                            "LOCAL_BUSINESS_V2",
                            "LOCAL_PLUS_PHOTO_ALBUM_V2",
                            "MAGAZINE_V2",
                            "MEDIA_OBJECT_V2",
                            "MOBILE_APPLICATION_V2",
                            "MOVIE_V2",
                            "MUSIC_ALBUM_V2",
                            "MUSIC_GROUP_V2",
                            "MUSIC_PLAYLIST_V2",
                            "MUSIC_RECORDING_V2",
                            "NEWS_ARTICLE_V2",
                            "OFFER_V2",
                            "ORGANIZATION_V2",
                            "ORGANIZE_ACTION_V2",
                            "PERSON_V2",
                            "PLACE_REVIEW_V2",
                            "PLACE_V2",
                            "PLAN_ACTION_V2",
                            "PLAY_MUSIC_ALBUM_V2",
                            "PLAY_MUSIC_TRACK_V2",
                            "PLAY_OBJECT_V2",
                            "PLUS_AUDIO_V2",
                            "PLUS_EVENT_V2",
                            "PLUS_MEDIA_COLLECTION_V2",
                            "PLUS_MEDIA_OBJECT_V2",
                            "PLUS_PAGE_V2",
                            "PLUS_PHOTOS_ADDED_TO_COLLECTION_V2",
                            "PLUS_PHOTO_ALBUM_V2",
                            "PLUS_PHOTO_COLLECTION_V2",
                            "PLUS_PHOTO_V2",
                            "PLUS_POST_V2",
                            "PLUS_RESHARE_V2",
                            "PLUS_SOFTWARE_APPLICATION_V2",
                            "POLL_OPTION_V2",
                            "POLL_V2",
                            "POSTAL_ADDRESS_V2",
                            "PRESENTATION_OBJECT_V2",
                            "PRODUCT_REVIEW_V2",
                            "RATING_V2",
                            "REACT_ACTION_V2",
                            "RESERVATION_V2",
                            "RESERVE_ACTION_V2",
                            "REVIEW_V2",
                            "REVIEW_ACTION_V2",
                            "SOFTWARE_APPLICATION_V2",
                            "SPREADSHEET_OBJECT_V2",
                            "SQUARE_INVITE_V2",
                            "SQUARE_V2",
                            "STICKER_V2",
                            "STORY_V2",
                            "THING_V2",
                            "TRADE_ACTION_V2",
                            "DEPRECATED_TOUR_OBJECT_V2",
                            "TV_EPISODE_V2",
                            "TV_SERIES_V2",
                            "UPDATE_ACTION_V2",
                            "VIEW_ACTION_V2",
                            "VIDEO_OBJECT_V2",
                            "VIDEO_GALLERY_V2",
                            "WANT_ACTION_V2",
                            "WEB_PAGE_V2",
                            "WRITE_ACTION_V2",
                            "YOUTUBE_CHANNEL_V2",
                            "GOOGLE_USER_PHOTO_V2",
                            "GOOGLE_USER_PHOTO_ALBUM",
                            "GOOGLE_PHOTO_RECIPE",
                            "THING",
                            "CREATIVE_WORK",
                            "EVENT",
                            "INTANGIBLE",
                            "ORGANIZATION",
                            "PERSON",
                            "PLACE",
                            "PRODUCT",
                            "ARTICLE",
                            "BLOG_POSTING",
                            "NEWS_ARTICLE",
                            "SCHOLARLY_ARTICLE",
                            "BLOG",
                            "BOOK",
                            "COMMENT",
                            "ITEM_LIST",
                            "MAP",
                            "MEDIA_OBJECT",
                            "AUDIO_OBJECT",
                            "IMAGE_OBJECT",
                            "MUSIC_VIDEO_OBJECT",
                            "VIDEO_OBJECT",
                            "MOVIE",
                            "MUSIC_PLAYLIST",
                            "MUSIC_ALBUM",
                            "MUSIC_RECORDING",
                            "PAINTING",
                            "PHOTOGRAPH",
                            "RECIPE",
                            "REVIEW",
                            "SCULPTURE",
                            "SOFTWARE_APPLICATION",
                            "MOBILE_APPLICATION",
                            "WEB_APPLICATION",
                            "TV_EPISODE",
                            "TV_SEASON",
                            "TV_SERIES",
                            "WEB_PAGE",
                            "ABOUT_PAGE",
                            "CHECKOUT_PAGE",
                            "COLLECTION_PAGE",
                            "IMAGE_GALLERY",
                            "VIDEO_GALLERY",
                            "CONTACT_PAGE",
                            "ITEM_PAGE",
                            "PROFILE_PAGE",
                            "SEARCH_RESULTS_PAGE",
                            "WEB_PAGE_ELEMENT",
                            "SITE_NAVIGATION_ELEMENT",
                            "TABLE",
                            "WP_AD_BLOCK",
                            "WP_FOOTER",
                            "WP_HEADER",
                            "WP_SIDEBAR",
                            "APP_INVITE",
                            "EMOTISHARE",
                            "BUSINESS_EVENT",
                            "CHILDRENS_EVENT",
                            "COMEDY_EVENT",
                            "DANCE_EVENT",
                            "EDUCATION_EVENT",
                            "FESTIVAL",
                            "FOOD_EVENT",
                            "LITERARY_EVENT",
                            "MUSIC_EVENT",
                            "SALE_EVENT",
                            "SOCIAL_EVENT",
                            "SPORTS_EVENT",
                            "THEATER_EVENT",
                            "VISUAL_ARTS_EVENT",
                            "RESERVATION",
                            "TRAVEL_EVENT",
                            "CORPORATION",
                            "EDUCATIONAL_ORGANIZATION",
                            "COLLEGE_OR_UNIVERSITY",
                            "ELEMENTARY_SCHOOL",
                            "HIGH_SCHOOL",
                            "MIDDLE_SCHOOL",
                            "PRESCHOOL",
                            "SCHOOL",
                            "GOVERNMENT_ORGANIZATION",
                            "LOCAL_BUSINESS",
                            "ANIMAL_SHELTER",
                            "AUTOMOTIVE_BUSINESS",
                            "AUTO_BODY_SHOP",
                            "AUTO_DEALER",
                            "AUTO_PARTS_STORE",
                            "AUTO_RENTAL",
                            "AUTO_REPAIR",
                            "AUTO_WASH",
                            "GAS_STATION",
                            "MOTORCYCLE_DEALER",
                            "MOTORCYCLE_REPAIR",
                            "CHILD_CARE",
                            "DRY_CLEANING_OR_LAUNDRY",
                            "EMERGENCY_SERVICE",
                            "FIRE_STATION",
                            "HOSPITAL",
                            "POLICE_STATION",
                            "EMPLOYMENT_AGENGY",
                            "ENTERTAINMENT_BUSINESS",
                            "ADULT_ENTERTAINMENT",
                            "AMUSEMENT_PARK",
                            "ART_GALLERY",
                            "CASINO",
                            "COMEDY_CLUB",
                            "MOVIE_THEATER",
                            "NIGHT_CLUB",
                            "FINANCIAL_SERVICE",
                            "ACCOUNTING_SERVICE",
                            "AUTOMATED_TELLER",
                            "BANK_OR_CREDIT_UNION",
                            "INSURANCE_AGENCY",
                            "FOOD_ESTABLISHMENT",
                            "BAKERY",
                            "BAR_OR_PUB",
                            "BREWERY",
                            "CAFE_OR_COFFEE_SHOP",
                            "FAST_FOOD_RESTAURANT",
                            "ICE_CREAM_SHOP",
                            "RESTAURANT",
                            "WINERY",
                            "GOVERNMENT_OFFICE",
                            "POST_OFFICE",
                            "HEALTH_AND_BEAUTY_BUSINESS",
                            "BEAUTY_SALON",
                            "DAY_SPA",
                            "HAIR_SALON",
                            "HEALTH_CLUB",
                            "NAIL_SALON",
                            "TATTOO_PARLOR",
                            "HOME_AND_CONSTRUCTION_BUSINESS",
                            "ELECTRICIAN",
                            "GENERAL_CONTRACTOR",
                            "HVAC_BUSINESS",
                            "HOUSE_PAINTER",
                            "LOCKSMITH",
                            "MOVING_COMPANY",
                            "PLUMBER",
                            "ROOFING_CONTRACTOR",
                            "INTERNET_CAFE",
                            "LIBRARY",
                            "LODGING_BUSINESS",
                            "BED_AND_BREAKFAST",
                            "HOSTEL",
                            "HOTEL",
                            "MOTEL",
                            "MEDICAL_ORGANIZATION",
                            "DENTIST",
                            "MEDICAL_CLINIC",
                            "OPTICIAN",
                            "PHARMACY",
                            "PHYSICIAN",
                            "VETERINARY_CARE",
                            "PROFESSIONAL_SERVICE",
                            "ATTORNEY",
                            "NOTARY",
                            "RADIO_STATION",
                            "REAL_ESTATE_AGENT",
                            "RECYCLING_CENTER",
                            "SELF_STORAGE",
                            "SHOPPING_CENTER",
                            "SPORTS_ACTIVITY_LOCATION",
                            "BOWLING_ALLEY",
                            "EXERCISE_GYM",
                            "GOLF_COURSE",
                            "PUBLIC_SWIMMING_POOL",
                            "SKI_RESORT",
                            "SPORTS_CLUB",
                            "STADIUM_OR_ARENA",
                            "TENNIS_COMPLEX",
                            "STORE",
                            "BIKE_STORE",
                            "BOOK_STORE",
                            "CLOTHING_STORE",
                            "COMPUTER_STORE",
                            "CONVENIENCE_STORE",
                            "DEPARTMENT_STORE",
                            "ELECTRONICS_STORE",
                            "FLORIST",
                            "FURNITURE_STORE",
                            "GARDEN_STORE",
                            "GROCERY_STORE",
                            "HARDWARE_STORE",
                            "HOBBY_SHOP",
                            "HOME_GOODS_STORE",
                            "JEWELRY_STORE",
                            "LIQUOR_STORE",
                            "MENS_CLOTHING_STORE",
                            "MOBILE_PHONE_STORE",
                            "MOVIE_RENTAL_STORE",
                            "MUSIC_STORE",
                            "OFFICE_EQUIPMENT_STORE",
                            "OUTLET_STORE",
                            "PAWN_SHOP",
                            "PET_STORE",
                            "SHOE_STORE",
                            "SPORTING_GOODS_STORE",
                            "TIRE_SHOP",
                            "TOY_STORE",
                            "WHOLESALE_STORE",
                            "TELEVISION_STATION",
                            "TOURIST_INFORMATION_CENTER",
                            "TRAVEL_AGENCY",
                            "PERFORMING_GROUP",
                            "MUSIC_GROUP",
                            "ADMINISTRATIVE_AREA",
                            "CITY",
                            "COUNTRY",
                            "STATE",
                            "CIVIC_STRUCTURE",
                            "AIRPORT",
                            "AQUARIUM",
                            "BEACH",
                            "BUS_STATION",
                            "BUS_STOP",
                            "CAMPGROUND",
                            "CEMETERY",
                            "CREMATORIUM",
                            "EVENT_VENUE",
                            "GOVERNMENT_BUILDING",
                            "CITY_HALL",
                            "COURTHOUSE",
                            "DEFENCE_ESTABLISHMENT",
                            "EMBASSY",
                            "LEGISLATIVE_BUILDING",
                            "MUSEUM",
                            "MUSIC_VENUE",
                            "PARK",
                            "PARKING_FACILITY",
                            "PERFORMING_ARTS_THEATER",
                            "PLACE_OF_WORSHIP",
                            "BUDDHIST_TEMPLE",
                            "CATHOLIC_CHURCH",
                            "CHURCH",
                            "HINDU_TEMPLE",
                            "MOSQUE",
                            "SYNAGOGUE",
                            "PLAYGROUND",
                            "R_V_PARK",
                            "RESIDENCE",
                            "APARTMENT_COMPLEX",
                            "GATED_RESIDENCE_COMMUNITY",
                            "SINGLE_FAMILY_RESIDENCE",
                            "TOURIST_ATTRACTION",
                            "SUBWAY_STATION",
                            "TAXI_STAND",
                            "TRAIN_STATION",
                            "ZOO",
                            "LANDFORM",
                            "BODY_OF_WATER",
                            "CANAL",
                            "LAKE_BODY_OF_WATER",
                            "OCEAN_BODY_OF_WATER",
                            "POND",
                            "RESERVOIR",
                            "RIVER_BODY_OF_WATER",
                            "SEA_BODY_OF_WATER",
                            "WATERFALL",
                            "CONTINENT",
                            "MOUNTAIN",
                            "VOLCANO",
                            "LANDMARKS_OR_HISTORICAL_BUILDINGS",
                            "USER_INTERACTION",
                            "USER_PLUS_ONES",
                            "ENUMERATION",
                            "BOOK_FORMAT_TYPE",
                            "ITEM_AVAILABILITY",
                            "OFFER_ITEM_CONDITION",
                            "JOB_POSTING",
                            "LANGUAGE",
                            "OFFER",
                            "QUANTITY",
                            "DISTANCE",
                            "DURATION",
                            "ENERGY",
                            "MASS",
                            "RATING",
                            "AGGREGATE_RATING",
                            "STRUCTURED_VALUE",
                            "CONTACT_POINT",
                            "POSTAL_ADDRESS",
                            "GEO_COORDINATES",
                            "GEO_SHAPE",
                            "NUTRITION_INFORMATION",
                            "PRESENTATION_OBJECT",
                            "DOCUMENT_OBJECT",
                            "SPREADSHEET_OBJECT",
                            "FORM_OBJECT",
                            "DRAWING_OBJECT",
                            "PLACE_REVIEW",
                            "FILE_OBJECT",
                            "PLAY_MUSIC_TRACK",
                            "PLAY_MUSIC_ALBUM",
                            "MAGAZINE",
                            "CAROUSEL_FRAME",
                            "PLUS_EVENT",
                            "HANGOUT",
                            "HANGOUT_BROADCAST",
                            "HANGOUT_CONSUMER",
                            "CHECKIN",
                            "EXAMPLE_OBJECT",
                            "SQUARE",
                            "SQUARE_INVITE",
                            "PLUS_PHOTO",
                            "PLUS_PHOTO_ALBUM",
                            "LOCAL_PLUS_PHOTO_ALBUM",
                            "PRODUCT_REVIEW",
                            "FINANCIAL_QUOTE",
                            "DEPRECATED_TOUR_OBJECT",
                            "PLUS_PAGE",
                            "GOOGLE_CHART",
                            "PLUS_PHOTOS_ADDED_TO_COLLECTION",
                            "RECOMMENDED_PEOPLE",
                            "PLUS_POST",
                            "DATE",
                            "DRIVE_OBJECT_COLLECTION",
                            "NEWS_MEDIA_ORGANIZATION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EmbedsPackagingServiceClient": {
            "description": "Developers register a client in Google API Console to get the deep-linking\nfeature on Google+ posts or frames about their apps. The client data is\nstored in this proto.",
            "id": "EmbedsPackagingServiceClient",
            "properties": {
                "androidPackageName": {
                    "description": "Android app's package name to generate the deep-link URI.",
                    "type": "string"
                },
                "iosAppStoreId": {
                    "description": "iOS app's App Store ID to generate the App Store URL when app is not\ninstalled on device.",
                    "type": "string"
                },
                "iosBundleId": {
                    "description": "iOS app's bundle ID to generate the deep-link URI.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of Google API Console client.",
                    "enum": [
                        "ANDROID",
                        "IOS"
                    ],
                    "enumDescriptions": [
                        "Client for Android app.",
                        "Client for iOS app."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmbedsProvenance": {
            "description": "This field records where the ItemScope was retrieved, if it was created\nvia a web fetch.",
            "id": "EmbedsProvenance",
            "properties": {
                "annotationBlob": {
                    "description": "Annotation blob from Annotation Service.",
                    "format": "byte",
                    "type": "string"
                },
                "canonicalUrl": {
                    "description": "Canonical url of the retrieved_url, if one was resolved during retrieval,\nfor example, if a rel=\"canonical\" link tag was provided in the retrieved\nweb page.",
                    "type": "string"
                },
                "inputUrl": {
                    "description": "The url originally passed in the PRS request, which should be used to\nre-discover the content.\nNote that this URL may be a forwarding service or link shortener\n(bit.ly), so it should not be assumed to be canonical, but should be\nused for navigation back to the original source of the itemscope.",
                    "type": "string"
                },
                "itemtype": {
                    "description": "Contains exact types as parsed, whether or not we recognized\nthat type at parse time.\nIf an itemscope is created by merging SchemaOrg markup and open graph\nmarkup then the first itemtype would be schemaorg type, the second would\nbe open graph and so on.\nexample: http://schema.org/VideoObject, og:video.movie\nPlain text; usually a URL",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retrievedTimestampMsec": {
                    "description": "The server retrieved timestamp (in msec).",
                    "format": "uint64",
                    "type": "string"
                },
                "retrievedUrl": {
                    "description": "The final URL that was the actual source of the itemscope, after any\nredirects.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmbedsTransientData": {
            "description": "Transient generic data that will not be saved on the server.",
            "id": "EmbedsTransientData",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1AlbumOptions": {
            "description": "Options for the initial Live Album.",
            "id": "GoogleInternalPhotosFirstpartyV1AlbumOptions",
            "properties": {
                "albumTitle": {
                    "description": "If provided, the new Live Album will have the given title.\nOptional",
                    "type": "string"
                },
                "transactionId": {
                    "description": "If provided, this ID might be used to avoid creating duplicate Live\nAlbums. The server will ensure these do not collide across clients.\nClients should use an unique value, such as the timestamp at which the\nRPC was initially sent, and reuse the transaction_id for all retries.\nOptional",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ContentSource": {
            "description": "The source for the initial content of the Live Album.",
            "id": "GoogleInternalPhotosFirstpartyV1ContentSource",
            "properties": {
                "initialMediaClusters": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1InitialMediaClusters",
                    "description": "Builds a new LiveAlbum from the given MediaClusters.\nRequired"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1EmailRecipient": {
            "description": "Share with a specific email. The user will receive an e-mail notification.",
            "id": "GoogleInternalPhotosFirstpartyV1EmailRecipient",
            "properties": {
                "email": {
                    "description": "The email of the user that will receive the share.\nRequired",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ExistingMediaCollection": {
            "description": "Describes an existing MediaCollection that should be used as the target\nCollection for some request.\n\nThe existing MediaCollection already belongs to some Silo. Any new\nMediaItem(s) added to this collection will now belong to the same Silo.",
            "id": "GoogleInternalPhotosFirstpartyV1ExistingMediaCollection",
            "properties": {
                "collectionMediaKey": {
                    "description": "Media key of the existing MediaCollection to be used.\nRequired",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1GaiaRecipient": {
            "description": "Share with a specific user given their gaia id. Will trigger in-app\nnotifications if the user has the Photos app set-up.",
            "id": "GoogleInternalPhotosFirstpartyV1GaiaRecipient",
            "properties": {
                "obfuscatedUserId": {
                    "description": "The obfuscated gaia id of the user that will receive the share.\nRequired",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1InitialMediaClusters": {
            "description": "The InitialMediaClusters that will be used to build the Live Album",
            "id": "GoogleInternalPhotosFirstpartyV1InitialMediaClusters",
            "properties": {
                "initialMediaCluster": {
                    "description": "The InitialMediaClusters that will be used to build the Live Album.\nRequired",
                    "items": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1InitialMediaClustersInitialMediaCluster"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1InitialMediaClustersInitialMediaCluster": {
            "id": "GoogleInternalPhotosFirstpartyV1InitialMediaClustersInitialMediaCluster",
            "properties": {
                "clusterId": {
                    "$ref": "PhotosMediaClientClusterId"
                },
                "includeExistingPhotos": {
                    "description": "If set, all the photos that are already part of the cluster will be added\nto the Live Album.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1NewMediaCollection": {
            "description": "Describes a new MediaCollection that should be created to be used as the\nrequest\u2019s target Collection.\nNext id: 5",
            "id": "GoogleInternalPhotosFirstpartyV1NewMediaCollection",
            "properties": {
                "collectionTitle": {
                    "description": "The title of the new Collection.\nRequired",
                    "type": "string"
                },
                "createAsTemporaryCollection": {
                    "description": "If set to true, the new MediaCollection will only be transiently persisted\nin the Photos backend -- it will be garbage collected a day after its\nlast modification.\n\nA temporary MediaCollection can always be finalized (made permanent) using\nthe FinalizeTemporaryCollection API method.\nOptional",
                    "type": "boolean"
                },
                "siloIdField": {
                    "$ref": "PhotosBackendSilosSiloIdField",
                    "description": "SiloIdField, which contains the Silo ID that the new Collection belongs\nto. MediaItems that are added to this Collection will also share the same\nSilo ID (go/photos-lockdown-design).\nRequired"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1NewMediaItem": {
            "description": "The data necessary to build a new MediaItem in the PhotosBackend.",
            "id": "GoogleInternalPhotosFirstpartyV1NewMediaItem",
            "properties": {
                "captureTime": {
                    "description": "The timestamp when the original media was captured.\nOptional",
                    "format": "google-datetime",
                    "type": "string"
                },
                "fileName": {
                    "description": "The name of the original media file.\nOptional",
                    "type": "string"
                },
                "filesystemCreateTime": {
                    "description": "The timestamp when the media was created in the caller file system.\nOptional",
                    "format": "google-datetime",
                    "type": "string"
                },
                "filesystemModTime": {
                    "description": "The timestamp when the media was last modified in the caller file system.\nOptional",
                    "format": "google-datetime",
                    "type": "string"
                },
                "sourceSha1": {
                    "description": "SHA1 hash of the original media bytes (before compression, resizing,\nor any other modifications).\n\nThe upload_token may refer to a thumbnail or otherwise compressed\nversion of the original content. That\u2019s okay. We take the SHA1 of the\noriginal bytes, so future requests for the same MediaItem with\na higher UploadQuality can be matched to the same entity in our backend.\nRequired",
                    "format": "byte",
                    "type": "string"
                },
                "uploadQuality": {
                    "description": "The UploadQuality of the media bytes the upload_token points too.\nRequired",
                    "enum": [
                        "UNKNOWN_UPLOAD_QUALITY",
                        "ORIGINAL_BYTES",
                        "COMPRESSED_ORIGINAL",
                        "THUMBNAIL"
                    ],
                    "enumDescriptions": [
                        "",
                        "The upload_token refers to the original media bytes.\n(sha1 (of upload_token media) == source_sha1).",
                        "The upload_token refers to a [perhaps locally] compressed version\nof the original bytes. However, these are  intended to be used\nas the \"original\" bytes in storage. These bytes may be full\nresolution, but (sha1 (of upload_token media) != source_sha1).",
                        "The upload_token refers to a lower pixel resolution than the original.\n(sha1 (of upload_token media) != source_sha1), however the client may\nreplace this thumbnail with a higher quality version of the image."
                    ],
                    "type": "string"
                },
                "uploadToken": {
                    "description": "UploadToken received from the UploadMedia call for the new media bytes.\nRequired",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhoneRecipient": {
            "description": "Share with a specific phone number. If the given phone number is known to\nbe app-reachable, an in-app notifications may be sent. Otherwise,\nwe will fallback and send a SMS notification to the recipient.",
            "id": "GoogleInternalPhotosFirstpartyV1PhoneRecipient",
            "properties": {
                "phoneNumber": {
                    "description": "Phone number that will receive the share. This string must be in\nE.164 format. See go/phonenumbers for more information about E.164.\nRequired",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsRequest": {
            "description": "Request to create MediaItems in the Photos Backend for each of the provided\nupload_tokens. The MediaItems will be added to the targeted MediaCollection.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsRequest",
            "properties": {
                "existingMediaCollection": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1ExistingMediaCollection"
                },
                "newMediaCollection": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1NewMediaCollection"
                },
                "newMediaItem": {
                    "description": "Describe each new MediaItem that you intend to create in the Photos\nbackend. The MediaItems must include the UploadTokens retrieved from the\nUploadMedia requests.\nRequired",
                    "items": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1NewMediaItem"
                    },
                    "type": "array"
                },
                "resultMediaItemMask": {
                    "$ref": "PhotosMediaClientMediaItemMask",
                    "description": "Specifies which fields of the MediaItem protos in the response should be\npopulated.\nRequired"
                },
                "storagePolicy": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1StoragePolicySetting",
                    "description": "The StoragePolicySetting (go/photos-storage-policy) to be applied to the\nnew MediaItems.\nRequired"
                },
                "targetCollectionMask": {
                    "$ref": "PhotosMediaClientMediaCollectionMask",
                    "description": "Specifies which fields of the MediaCollection proto in the response should\nbe populated.\nOptional"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsResponse": {
            "description": "Response received when created MediaItems. Contains the created MediaItems\nand the target MediaCollection based on the request\u2019s provided masks.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsResponse",
            "properties": {
                "newMediaItemResult": {
                    "description": "For each NewMediaItem in the request, a NewMediaItemResult will be\npopulated holding the created MediaItem or an error code in case of\nfailure.",
                    "items": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsResponseNewMediaItemResult"
                    },
                    "type": "array"
                },
                "targetCollection": {
                    "$ref": "PhotosMediaClientMediaCollection",
                    "description": "MediaCollection that the new MediaItems were added to. Fields of this\nproto will only be filled if specified in the MediaCollectionMask field\nof the request."
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsResponseNewMediaItemResult": {
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyCreateMediaItemsResponseNewMediaItemResult",
            "properties": {
                "mediaItem": {
                    "$ref": "PhotosMediaClientMediaItem",
                    "description": "Created MediaItem for this upload_token if no error occurred. Fields of\nthis proto will only be filled if specified in the MediaItemMask\nfield of the request."
                },
                "status": {
                    "$ref": "GoogleRpcStatus",
                    "description": "If an error occurred during the creation of this MediaItem, this field\nwill be populated with an error code."
                },
                "uploadToken": {
                    "description": "The upload_token used to create this new MediaItem",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateLiveAlbumRequest": {
            "description": "Request that creates a private Live Album in Google Photos with the given\nclusters.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateLiveAlbumRequest",
            "properties": {
                "albumOptions": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1AlbumOptions",
                    "description": "Options for the initial Live Album.\nOptional"
                },
                "contentSource": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1ContentSource",
                    "description": "The source for the initial content of the Live Album.\nRequired"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateLiveAlbumResponse": {
            "description": "Response that contains information of the newly created Live Album.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateLiveAlbumResponse",
            "properties": {
                "mediaKey": {
                    "description": "Media key of the created Live Album.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateSharedAlbumRequest": {
            "description": "Request that creates a Shared Album in Google Photos with the given\ncontents and that is shared with the specified users.\nThe specified users will be notified of the action.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateSharedAlbumRequest",
            "properties": {
                "shareContent": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1ShareContent",
                    "description": "The initial content of the new Shared Album.\nRequired"
                },
                "shareOptions": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1ShareOptions",
                    "description": "Additional options that affect the Shared Album and the notifications.\nOptional"
                },
                "shareRecipient": {
                    "description": "Recipients that will be notified of the share via an in-app notification,\nemail or SMS.\nRequired",
                    "items": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1ShareRecipient"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateSharedAlbumResponse": {
            "description": "Response that contains information of the newly created Shared Album.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosCreateSharedAlbumResponse",
            "properties": {
                "mediaKey": {
                    "description": "Media key of the created Shared Album.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadClusterItemsRequest": {
            "description": "Request to read MediaItems from a given Google Photos cluster owned by an\nuser. Results will always be the most recent items in the Cluster.\nClusters are generated from user's photos in Google Photos that share common\nfeatures. For example, if an user takes multiple pictures of the same\nperson, a cluster will be created that includes all photos of such person.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadClusterItemsRequest",
            "properties": {
                "actorMask": {
                    "$ref": "PhotosMediaClientMediaActorMask",
                    "description": "A Mask for the MediaActors that are returned in the response.\nIt specifies the projection of the MediaActors that are returned.\n\nIf actor_mask is provided, MediaActors related to the returned items and\ncollections will be returned. If no actor_mask is provided, no MediaActors\nwill be returned.\nOptional"
                },
                "clusterId": {
                    "$ref": "PhotosMediaClientClusterId",
                    "description": "Id of the Cluster to be queried\nRequired"
                },
                "collectionMask": {
                    "$ref": "PhotosMediaClientMediaCollectionMask",
                    "description": "A Mask for the MediaCollections that are returned in the response.\nIt specifies the projection of the MediaCollections that are returned.\n\nIf collection_mask is provided, MediaCollections related to the items will\nbe returned. If no collection_mask is provided, no MediaCollections will\nbe returned.\nOptional"
                },
                "itemMask": {
                    "$ref": "PhotosMediaClientMediaItemMask",
                    "description": "A Mask for the MediaItems that are returned in the response. It specifies\nthe projection of the MediaItems that are returned.\nRequired"
                },
                "itemsPerPage": {
                    "description": "Limit on the number of items to return in any single response.\nIf not specified, PhotosFirstParty will use a system-defined default value.\nOptional",
                    "format": "int32",
                    "type": "integer"
                },
                "resumeToken": {
                    "description": "Resume a previously-started query. MUST be a resume token from a previous\nReadClusterItemsResponse.\nOptional",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadClusterItemsResponse": {
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadClusterItemsResponse",
            "properties": {
                "actor": {
                    "description": "Actors related to the clusters.\nWill only be populated if actor_mask was set in request.\nThis list should only be used as a map from ActorRefs to more detailed\ninformation about their actors. Do not render this list directly in any\nUI, as there are no guarantees about the ordering of the list or whether\nall included actors are relevant to your specific query.",
                    "items": {
                        "$ref": "PhotosMediaClientMediaActor"
                    },
                    "type": "array"
                },
                "collection": {
                    "description": "Collections containing the returned items.\nWill only be populated if collection_mask was set in request.",
                    "items": {
                        "$ref": "PhotosMediaClientMediaCollection"
                    },
                    "type": "array"
                },
                "item": {
                    "description": "Items in descending timestamp order.",
                    "items": {
                        "$ref": "PhotosMediaClientMediaItem"
                    },
                    "type": "array"
                },
                "resumeToken": {
                    "description": "If populated, there are more results available for this query.  Clients\nmay make another ReadClusterItemsRequest with this resume token to resume\nthe query.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersRequest": {
            "description": "Request to read Google Photos clusters from a user account. go/media-clusters\nClusters are generated from user's photos in Google Photos that share common\nfeatures. For example, if an user takes multiple pictures of the same\nperson, a cluster will be created that includes all photos of such person.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersRequest",
            "properties": {
                "actorMask": {
                    "$ref": "PhotosMediaClientMediaActorMask",
                    "description": "If field is set, associated actors will be returned.\nOptional"
                },
                "clusterCategorySetting": {
                    "$ref": "PhotosMediaClientClusterCategorySetting",
                    "description": "Restrict the clusters to return to those that contain the ClusterCategory\nin the requested ClusterCategorySetting.\nIf left empty, then the request will be non-restrictive, and all categories\n(including clusters with no categories) will be returned.\nOptional"
                },
                "clusterMask": {
                    "$ref": "PhotosMediaClientMediaClusterMask",
                    "description": "Specifies which fields of the MediaCluster protos in the response should be\npopulated.\nRequired"
                },
                "clusterSubjectMask": {
                    "$ref": "PhotosMediaClientMediaClusterSubjectMask",
                    "description": "If field is set, associated cluster subjects will be returned.\nOptional"
                },
                "clustersPerPage": {
                    "description": "Limit on the number of clusters to return in any single response.\nIf not specified, PhotosFirstParty will use a system-defined default value.\nOptional",
                    "format": "int32",
                    "type": "integer"
                },
                "query": {
                    "description": "Specify the Clusters to fetch.\nClusters will be returned in the order of descending ranking value.\nRequired",
                    "items": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1ReadUserClustersQuery"
                    },
                    "type": "array"
                },
                "resumeToken": {
                    "description": "Resume a previously-started query.  MUST be a resume token from a previous\nReadUserClustersRequest.\nOptional",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersResponse": {
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersResponse",
            "properties": {
                "actor": {
                    "description": "Actors related to the clusters.\nThis list should only be used as a map from ActorRefs to more detailed\ninformation about their actors. Do not render this list directly in any\nUI, as there are no guarantees about the ordering of the list or whether\nall included actors are relevant to your specific query.",
                    "items": {
                        "$ref": "PhotosMediaClientMediaActor"
                    },
                    "type": "array"
                },
                "clusterSubject": {
                    "description": "Subjects related to the clusters.\nThis list should only be used as a map from MediaClusterSubjectRefs to more\ndetailed information about their cluster subjects.",
                    "items": {
                        "$ref": "PhotosMediaClientMediaClusterSubject"
                    },
                    "type": "array"
                },
                "resumeToken": {
                    "description": "If populated, there are more results available for this query.  Clients\nmay make another ReadUserClustersRequest with this resume token to resume\nthe query. The resume_token is encrypted and web-safe Base64-encoded.",
                    "type": "string"
                },
                "typedClusters": {
                    "items": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersResponseClusterOfType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersResponseClusterOfType": {
            "description": "Message to contain clusters of a certain type. Clusters are ordered by\ndescending ranking_value.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyGooglePhotosReadUserClustersResponseClusterOfType",
            "properties": {
                "cluster": {
                    "items": {
                        "$ref": "PhotosMediaClientMediaCluster"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_CLUSTER_TYPE",
                        "PERSON",
                        "PLACE",
                        "THING",
                        "DATE"
                    ],
                    "enumDescriptions": [
                        "Should not be specified.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdRequest": {
            "description": "Read specific MediaItems by id.\nThe items do not all need to have the same owner.\n\nItems are returned in the order they are requested.\n\nThere is no hard-limit on the number of items that may be requested\n(we won\u2019t fail requests for asking for too many items), but we may limit the\nnumber of items that are returned in any single request. If this happens, a\nresume-token will be returned that may be used to get more results.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdRequest",
            "properties": {
                "actorMask": {
                    "$ref": "PhotosMediaClientMediaActorMask",
                    "description": "A Mask for the MediaActors that are returned in the response.\nIt specifies the projection of the MediaActors that are returned.\n\nIf actor_mask is provided, MediaActors related to the returned items and\ncollections will be returned. If no actor_mask is provided, no MediaActors\nwill be returned."
                },
                "collectionMask": {
                    "$ref": "PhotosMediaClientMediaCollectionMask",
                    "description": "A Mask for the MediaCollections that are returned in the response.\nIt specifies the projection of the MediaCollections that are returned.\n\nIf collection_mask is provided, MediaCollections related to the items will\nbe returned. If no collection_mask is provided, no MediaCollections will\nbe returned."
                },
                "itemMask": {
                    "$ref": "PhotosMediaClientMediaItemMask",
                    "description": "A Mask for the MediaItems that are returned in the response. It specifies\nthe projection of the MediaItems that are returned.\nRequired"
                },
                "query": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdRequestReadItemsByIdQuery",
                    "description": "Specifies the items to fetch in the request.\nRequired"
                },
                "resumeToken": {
                    "description": "Resume a previously started query. MUST be a resume-token from a previous\nReadItemsRequest for the same ReadItemsByIdQuery.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdRequestReadItemsByIdQuery": {
            "description": "Specify the items to fetch.\nThe items do NOT have to be for the same owner.\nThere is a certain amount of overhead for each unique owner, so queries\nthat target multiple owners will be more expensive than single owner\nqueries.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdRequestReadItemsByIdQuery",
            "properties": {
                "authkey": {
                    "description": "A string that authorizes the viewer to access the items.",
                    "type": "string"
                },
                "itemId": {
                    "description": "ItemIds specifying the items to return.\nRequired",
                    "items": {
                        "$ref": "PhotosMediaClientItemId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdResponse": {
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdResponse",
            "properties": {
                "actor": {
                    "description": "Actors related to the items and collections - owners, contributors, etc.\nThis list should only be used as a map from ActorRefs to more detailed\ninformation about their actors. Do not render this list directly in any\nUI, as there are no guarantees about the ordering of the list or whether\nall included actors are relevant to your specific query.\n\nPresent iff actor_mask was present in the request.",
                    "items": {
                        "$ref": "PhotosMediaClientMediaActor"
                    },
                    "type": "array"
                },
                "collection": {
                    "description": "Collections related to the returned items in arbitrary order.\nPresent iff collection_mask was present in the request.",
                    "items": {
                        "$ref": "PhotosMediaClientMediaCollection"
                    },
                    "type": "array"
                },
                "failedItem": {
                    "description": "Items that could not be read.",
                    "items": {
                        "$ref": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdResponseReadItemsByIdFailedItem"
                    },
                    "type": "array"
                },
                "item": {
                    "description": "Items in query.item_id order",
                    "items": {
                        "$ref": "PhotosMediaClientMediaItem"
                    },
                    "type": "array"
                },
                "resumeToken": {
                    "description": "If populated, there are more results available for this query and clients\nmay make another ReadItemsByIdRequest with this resume token to resume\nthe query.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdResponseReadItemsByIdFailedItem": {
            "description": "An item that could not be read.",
            "id": "GoogleInternalPhotosFirstpartyV1PhotosFirstPartyReadItemsByIdResponseReadItemsByIdFailedItem",
            "properties": {
                "itemId": {
                    "$ref": "PhotosMediaClientItemId",
                    "description": "The ID of the item."
                },
                "status": {
                    "$ref": "GoogleRpcStatus",
                    "description": "Why the read for the item failed."
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ReadUserClustersQuery": {
            "id": "GoogleInternalPhotosFirstpartyV1ReadUserClustersQuery",
            "properties": {
                "sortOrder": {
                    "description": "Specifies the sort order for the returned clusters.\nRequired",
                    "enum": [
                        "UNKNOWN_SORT_ORDER",
                        "RANKING",
                        "FACE_SHARING"
                    ],
                    "enumDescriptions": [
                        "Should not be specified.",
                        "Sort the clusters using only the ranking value.",
                        "This sort order also uses the ranking value to order the clusters however\nthe user's 'me' cluster will be in the first position when available.\nThis ordering is only allowed when ClusterType == PERSON.\nMore info: go/photos-me"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The type of Cluster to query for the user.\nRequired",
                    "enum": [
                        "UNKNOWN_CLUSTER_TYPE",
                        "PERSON",
                        "PLACE",
                        "THING",
                        "DATE"
                    ],
                    "enumDescriptions": [
                        "Should not be specified.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ShareContent": {
            "description": "Describes the initial content the Shared Album will contain.",
            "id": "GoogleInternalPhotosFirstpartyV1ShareContent",
            "properties": {
                "initialMediaCollection": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1ShareContentInitialMediaCollection"
                },
                "initialMediaItems": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1ShareContentInitialMediaItems"
                },
                "shareDescription": {
                    "$ref": "SocialCommonSegments",
                    "description": "The description of the share as described by the user. It will be used\nas part of the notifications to the recipients and will be added\nas a comment in the Shared Album.\nOptional"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ShareContentInitialMediaCollection": {
            "description": "If set, a Shared Album will be created from the given MediaCollection.",
            "id": "GoogleInternalPhotosFirstpartyV1ShareContentInitialMediaCollection",
            "properties": {
                "collectionId": {
                    "$ref": "PhotosMediaClientCollectionId",
                    "description": "CollectionId of the MediaCollection to be shared.\nRequired"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ShareContentInitialMediaItems": {
            "description": "If set, a Shared Album will be created with the given MediaItems.",
            "id": "GoogleInternalPhotosFirstpartyV1ShareContentInitialMediaItems",
            "properties": {
                "itemId": {
                    "description": "The ItemId of the initial MediaItems.\nRequired",
                    "items": {
                        "$ref": "PhotosMediaClientItemId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ShareOptions": {
            "description": "Additional options that might affect the behavior of the shared album\nor the behavior of the share notifications.",
            "id": "GoogleInternalPhotosFirstpartyV1ShareOptions",
            "properties": {
                "showOwnerPrivateName": {
                    "description": "Set this to true only if the client UI has communicated to the user that\ntheir potentially private name will be displayed to viewers of the\nShared Album.\nOptional",
                    "type": "boolean"
                },
                "showSenderEmail": {
                    "description": "Set to true only if the client UI has communicated to the user that\ntheir e-mail will be part of the sharing notification. This enables share\nfeatures that includes the sender e-mail.\nOptional",
                    "type": "boolean"
                },
                "transactionId": {
                    "description": "If provided, this ID might be used to avoid creating duplicate Shared\nAlbums. The server will ensure these do not collide across clients.\nClients should use an unique value, such as the timestamp at which the\nRPC was initially sent, and reuse the transaction_id for all retries.\nOptional",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1ShareRecipient": {
            "description": "Describes an individual recipient that is being add to a Shared Album.",
            "id": "GoogleInternalPhotosFirstpartyV1ShareRecipient",
            "properties": {
                "emailRecipient": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1EmailRecipient"
                },
                "gaiaRecipient": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1GaiaRecipient"
                },
                "phoneRecipient": {
                    "$ref": "GoogleInternalPhotosFirstpartyV1PhoneRecipient"
                }
            },
            "type": "object"
        },
        "GoogleInternalPhotosFirstpartyV1StoragePolicySetting": {
            "description": "Policy setting that defines the quality of the stored MediaItems and whether\nuser\u2019s quota will be charged for it.",
            "id": "GoogleInternalPhotosFirstpartyV1StoragePolicySetting",
            "properties": {
                "storagePolicy": {
                    "description": "Required",
                    "enum": [
                        "UNKNOWN_STORAGE_POLICY",
                        "HIGH_QUALITY_FREE_QUOTA",
                        "ORIGINAL_QUALITY_ON_USER_QUOTA"
                    ],
                    "enumDescriptions": [
                        "",
                        "A \u201chigh quality\u201d version of the uploaded media bytes will be stored\nand the bytes *will not* count towards the user's storage quota\n(Amethyst). Choosing this setting implies that the Photos backend can (at\nany time) apply new resizing and compression methods to the uploaded\nbytes to keep the cost of storing the content manageable while\nmaintaining reasonably high quality versions of the content for\nrendering/playback. When the owner attempts to download the content, they\nnot be able to retrieve the original bytes. They will get a modified\nversion of the content.\n\nNOTE: Do not use without consulting the Photos backend team. Free to\nthe user does not mean free to Google.",
                        "The original uploaded media bytes will be stored and the bytes will count\ntowards the user's storage quota (Amethyst). The Photos backend will\nnot apply any resizing or compression to the user\u2019s original bytes.\nWhen the owner attempts to download the original content, they should\nget their original bytes back."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleRpcStatus": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "id": "GoogleRpcStatus",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleTypeDate": {
            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
            "id": "GoogleTypeDate",
            "properties": {
                "day": {
                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                    "format": "int32",
                    "type": "integer"
                },
                "year": {
                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HumanSensingFaceAttribute": {
            "description": "Defines a generic attribute. The name field is the name of the attribute\n(for example beard, glasses, joy). The confidence defines how reliable the\ngiven annotation is. For binary attributes it is bounded between 0 and 1\nand can be interpreted as the posterior probability. The value field can be\nused for continuous attributes like age.\nInformation returned or stored in this message may be sensitive from a\nprivacy, policy, or legal point of view. Clients should consult with their\np-counsels and the privacy working group (go/pwg) to make sure their use\nrespects Google policies.",
            "id": "HumanSensingFaceAttribute",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "TYPE_UNKNOWN",
                        "FREE_FORM",
                        "FEMALE",
                        "MALE",
                        "AGE",
                        "NON_HUMAN",
                        "GLASSES",
                        "DARK_GLASSES",
                        "HEADWEAR",
                        "EYES_VISIBLE",
                        "MOUTH_OPEN",
                        "FACIAL_HAIR",
                        "LONG_HAIR",
                        "FRONTAL_GAZE",
                        "SMILING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Attribute types that describe the gender of a face. For an attribute\nif type FEMALE the confidence represent the probability of a face to\nbe from a female person. Similarly, for an attribute of type MALE\nthe confidence is the probability of a face to be from a male person.\n4 is reserved for OTHER_GENDER.",
                        "",
                        "Attribute type that represent the age of the face. For an attribute of\nthis type the field value represent the age. Values are assumed to be\nin the range [0, 95].",
                        "This attributes is used to distinguish actual human faces from other\npossible face detections like face of sculptures, cartoons faces, and\nsome false detections.",
                        "Attributes types that describes face appearances/configurations (mouth\nopen, eyes visibles and looking into the camera, smiling) and props\n(glasses, dark glasses, and headwear).",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "value": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ImageContentClippedPixelsScore": {
            "description": "A protocol buffer that stores clipped pixel scores for\na single channel.",
            "id": "ImageContentClippedPixelsScore",
            "properties": {
                "clippedHighlightPixels": {
                    "description": "% of clipped highlight pixels (i.e. pixel value of \"max\")",
                    "format": "float",
                    "type": "number"
                },
                "clippedPixelsScore": {
                    "description": "clipped pixels score works like this:\n0 - everything is good\n<0 - potentially underexposed due to lots of clipped shadow pixels\n>0 - potentially overexpoused due to lots of clipped highlight pixels\ncould be as high/low as +/-16",
                    "format": "float",
                    "type": "number"
                },
                "clippedShadowPixels": {
                    "description": "% of clipped shadow pixels (i.e. pixel value of 0)",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ImageContentExposureQualityScore": {
            "description": "A protocol buffer that stores exposure quality scores for the whole\nimage as well as detected faces.",
            "id": "ImageContentExposureQualityScore",
            "properties": {
                "combinedExposureQualityScore": {
                    "format": "float",
                    "type": "number"
                },
                "faceRegionsWeight": {
                    "format": "float",
                    "type": "number"
                },
                "faceScores": {
                    "items": {
                        "$ref": "ImageContentRegionExposureQualityScore"
                    },
                    "type": "array"
                },
                "wholeFaceScore": {
                    "format": "float",
                    "type": "number"
                },
                "wholeImageScore": {
                    "$ref": "ImageContentRegionExposureQualityScore"
                }
            },
            "type": "object"
        },
        "ImageContentHistogramDistributionScore": {
            "description": "A protocol buffer that stores the histogram distribution statistics\nfor a given channel.",
            "id": "ImageContentHistogramDistributionScore",
            "properties": {
                "areaUnderCdf": {
                    "description": "The area under the cumulative distribution of the histogram.",
                    "format": "float",
                    "type": "number"
                },
                "histogramDistributionScore": {
                    "format": "float",
                    "type": "number"
                },
                "histogramPercentile": {
                    "description": "The 0%, 25%, 50%, 75%, 100% percentile of the histogram.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ImageContentRegionExposureQualityScore": {
            "description": "A protocol buffer that stores exposure quality scores for a region of an\nimage.",
            "id": "ImageContentRegionExposureQualityScore",
            "properties": {
                "clippedBlue": {
                    "$ref": "ImageContentClippedPixelsScore"
                },
                "clippedGreen": {
                    "$ref": "ImageContentClippedPixelsScore"
                },
                "clippedRed": {
                    "$ref": "ImageContentClippedPixelsScore",
                    "description": "Subscores"
                },
                "exposureQualityScore": {
                    "description": "The single score for exposure quality which is computed\nusing all the subscores.  Similar to the subscores:\n0 - everything is good\n<0 - potential underexposure\n>0 - potential overexposure\nvalues could be as high/low as approximately +/-1100",
                    "format": "float",
                    "type": "number"
                },
                "histBlue": {
                    "$ref": "ImageContentHistogramDistributionScore"
                },
                "histGreen": {
                    "$ref": "ImageContentHistogramDistributionScore"
                },
                "histRed": {
                    "$ref": "ImageContentHistogramDistributionScore"
                },
                "tonalBlue": {
                    "$ref": "ImageContentTonalDistributionScore"
                },
                "tonalGreen": {
                    "$ref": "ImageContentTonalDistributionScore"
                },
                "tonalRed": {
                    "$ref": "ImageContentTonalDistributionScore"
                }
            },
            "type": "object"
        },
        "ImageContentTonalDistributionScore": {
            "description": "A protocol buffer that stores tonal statistics for a single channel.\nBy 'zone' we are referring to the zones in the \"zone system\" in\nphotography which is made up zone 0 to zone 10.\nhttp://en.wikipedia.org/wiki/Zone_System",
            "id": "ImageContentTonalDistributionScore",
            "properties": {
                "maximumZone": {
                    "description": "The zone that has the most tones.",
                    "format": "int32",
                    "type": "integer"
                },
                "medianZone": {
                    "description": "The zone where 50% of the values are below.",
                    "format": "int32",
                    "type": "integer"
                },
                "tonalDistributionScore": {
                    "description": "tonal distribution score is less severe than the clipped pixel score\ncould be as high/low as +/-12",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosAnimationMetadata": {
            "id": "PhotosAnimationMetadata",
            "properties": {
                "numFrames": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosBackendSilosSiloIdField": {
            "description": "Wrapper for the SiloId enum, to be used in proto3 messages. This is because\nSiloId is a proto2 enum, which cannot be used directly in proto3.",
            "id": "PhotosBackendSilosSiloIdField",
            "properties": {
                "siloId": {
                    "description": "Required",
                    "enum": [
                        "UNKNOWN_SILO_IDENTIFIER",
                        "SILOLESS",
                        "GOOGLE_PHOTOS",
                        "GOOGLE_PHOTOS_PRINT_ORDERS",
                        "BLOGGER",
                        "HANGOUTS",
                        "DRIVE_SYNC",
                        "GEO",
                        "OFFLINE_SALES_RECEIPTS",
                        "OFFLINE_SALES_RECEIPTS_DEV",
                        "TEAMS",
                        "YOUTUBE_MUSIC_ARTISTS",
                        "BLOGGER_SOCIAL",
                        "KHAZANA",
                        "PROFILE_PHOTOS",
                        "G_PLUS",
                        "GUS",
                        "PANORAMIO",
                        "KINDYGRAM",
                        "LOUPE",
                        "YOUTUBE_BANNER",
                        "YOUTUBE_SPONSORSHIP_BADGE",
                        "FOCUS_CONTACT_PHOTOS",
                        "CONTACT_PHOTOS",
                        "UNICORN_FAMILY_LINK",
                        "GMAIL_THEMES",
                        "ABOUT_ME",
                        "DRIVE_FORMS",
                        "GOOGLE_VOICE",
                        "CALENDAR_THEMES",
                        "HOMEROOM_THEMES",
                        "ACTIONS_ON_GOOGLE_CONSOLE",
                        "CROWDSOURCE",
                        "DEVELOPER_CONSOLE",
                        "SBE_PLAYGROUND",
                        "ANDROID_PLAY_SERVICES",
                        "PRODUCT_FORUMS",
                        "GROUPS_FORUM",
                        "TOUR_BUILDER",
                        "MEMEGEN",
                        "PLASO",
                        "GMAIL_SYNC",
                        "AOG_CONTENT",
                        "WALLET",
                        "HELPOUTS",
                        "CLOUDCAST",
                        "YOUTUBE_MUSIC_PRIVATELY_OWNED_ALBUM_ART",
                        "NBU_MAOTAI_COLLECTION",
                        "ONE_GOOGLE",
                        "ACCOUNT_SETTINGS",
                        "GPAY_GROUP_PAYMENTS",
                        "UNDETERMINED",
                        "GOOGLE_GIVE",
                        "CARDMAKER",
                        "DEPRECATED_MAYFLOWER",
                        "TAHITI",
                        "JANATA",
                        "SOCIETY",
                        "PLAY_GAMES_SERVICES",
                        "UPLOADER_DRIVE_ONLY",
                        "GPAY_CAMPUS_ID",
                        "NUTRITION",
                        "INTERNATIONALIZATION_WORKFLOW"
                    ],
                    "enumDescriptions": [
                        "This is the default value and it is considered invalid. When new values\nare added to a proto2 enum, old clients will see the field as unset and\nthe getter will return this value, if a default value isn\u2019t specified.\n(see go/protodosdonts).",
                        "The SILOLESS value implies that the entity does not belong to any Silo.\nEventually, this will also be invalid as every entity should belong to a\nsilo.",
                        "Photos backend content owned by Google Photos.\n\nThis strictly applies to content related to the Google Photos product\n(e.g. uploaded via the Google Photos app).",
                        "Silo for with print orders (go/printing-spec)",
                        "Photos backend content owned by Blogger.",
                        "Photos backend content owned by Google Hangouts.",
                        "Regular Google Drive photos created through pubsub/sync to photos\nbackend. Maintained by the Photos backend team.",
                        "Photos backend content owned by the Geo team.",
                        "Photos backend content owned by the Google Shopping Offline Sales\nreceipts project. See go/receipt_upload_storage_consumption_design_doc\nfor more info.",
                        "Photos backend content used by the Google Shopping Offline Sales\nreceipts project for development.\nSee go/receipt_upload_storage_consumption_design_doc for more info.",
                        "Photos backend content owned by MOMA Teams.",
                        "Artist-uploaded photos managed by the YouTube Music Corpus team.",
                        "Profile pictures for Blogger social features.\nSee integration bug b/64095311 and design doc go/gfc-photos-migration.",
                        "Photos backend content owned by Khazana (go/khazana; b/66411157).",
                        "Silo for profile photos and scrapbook albums.\nThey are owned by photos backend but are not shown in Google Photos\nall-photos view and could be accessed by various products.",
                        "Silo for GPlus media",
                        "Photos backend content owned by GSA Universal Server (GUS) (go/gus,\nb/68721537).",
                        "Silo for panoramio photos migration (go/panoramio-photos-migration).",
                        "Silo for Kindygram (go/kindygram).",
                        "Stanza requests coming for the LOUPE corpus.",
                        "Youtube channel banner images are uploaded to this silo.",
                        "Youtube sponsorship badges (see b/23186017 for screenshots).\nYoutube is migrating to the Shoebox (http://shortn/_2mwNY1FM8S for\ndiscussion) but we are still getting photos created through onepick\n(http://shortn/_8uVeMrBydA and http://shortn/_eICBlS9Eu9).",
                        "Contact photos created by focus backend.",
                        "Photos uploaded using contacts.google.com.\nUse case: change profile picture by uploading a new photo.\nThis result into temporary photo being created.",
                        "Family link app: go/fl from unicorn team.",
                        "Silo for gmail themes: used when user selects a new theme with onepick.",
                        "Temporary photos/albums created by aboutme.google.com through onepick.",
                        "Albums/photos for freebird (go/forms).\nUse case: specifying background image for a form (using palette).",
                        "Albums/photos for google voice (go/gvoice).\nUse case: add a photo to a text message through onepick upload.",
                        "Silo for calendar themes.\nUse case: OnePick upload in a legacy calendar (http://shortn/_3G7OEIvqGJ)",
                        "Silo for homeroom themes (go/homeroom-eng).\nUse case:  classroom.google.com uses onepick to select background\nfor a course.",
                        "Silo for console.actions.google.com (go/ast-aog).\nUse case: specifying application banner and logo:\nhttps://screenshot.googleplex.com/3sPcaeCH79N",
                        "Albums/photos for crowdsource (go/village).\nUse case: storing images shared by users of the Crowdsource app",
                        "Silo for console.developers.google.com.\nExample: go to console.developers.google.com.\nCreate an app. Enable drive API. In the dashboard: configure drive API\nIn Drive UI integration: Pick application icon.",
                        "SiloID used by Stanza (go/stanza) test corpora (STANZA_TEST,\nSBE_PLAYGROUND).",
                        "Android creates temporary photos when uploading profile photos.",
                        "Deprecated. Never launched. DO NOT USE.",
                        "Uploads from https://groups.google.com\nand https://productforums.google.com.",
                        "See https://sites.google.com/a/google.com/tour-builder/",
                        "Silo for Memegen.",
                        "Silo for Plaso. This is deprecated.",
                        "Silo for GMAIL sync. This is deprecated.",
                        "Silo for AoG content. go/aog-howto",
                        "Silo for instore google wallet.",
                        "Silo for deprecated helpouts. They do takeout etc. So we need to silo.",
                        "Silo for Yeti. go/yeti-captures-design-doc",
                        "Silo for Youtube Music privately owned album art.\ngo/ytm-uploaded-album-art",
                        "Silo for NBU Maotai Collection. (b/111277761)",
                        "Silo for OneGoogle (go/onegooglebar)",
                        "Profile photo upload from accounts.google.com.",
                        "Silo for Google Pay Group Payments (go/p2p-group-funding-prd,\nb/112584722).",
                        "Silo for photos, albums, and events for which we could not backfill\nSiloIds due to mismatches. b/113280596 will track moving content out of\nthis Silo and into one of the others. For now, having this Silo will\nenable us to move forward with asserting SiloConfig checks.",
                        "Silo for Google Give (g-give.googleplex.com).",
                        "Silo for Google Now Cardmaker (https://cardmaker.googleplex.com).",
                        "Silo for Google Travel (hotel search, go/mayflower-g3).",
                        "Silo for Tahiti (b/123097201).",
                        "Silo for Janata go/janata-one-pager (b/128347668).",
                        "Silo for Neighbourly (Society; b/128347774)",
                        "Silo for Play Games Services (b/129288890)",
                        "Silo for Uploader (Backup & Sync) items uploaded with \"Show in Photos\"\noff.",
                        "Silo for Google Pay - Campus ID (b/128349722)",
                        "Silo for Google Health Nutrition go/nutrition (b/140134950)",
                        "Silo for Orbis Screenshots (b/138811942)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesAudioClipSequence": {
            "description": "A sequence of audio clips to be used as an audio track for the movie.",
            "id": "PhotosCurationMoviesAudioClipSequence",
            "properties": {
                "audioClip": {
                    "items": {
                        "$ref": "PhotosCurationMoviesClip"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesBeatMatchingStyling": {
            "description": "Soundtrack clips for the storyboard.",
            "id": "PhotosCurationMoviesBeatMatchingStyling",
            "properties": {
                "adjustedInterval": {
                    "description": "DEPRECATED. Do not use. Clips in the storyboard should already be\nbeat matched.",
                    "items": {
                        "$ref": "PhotosCurationMoviesClipInterval"
                    },
                    "type": "array"
                },
                "soundtrackAudioClipSequence": {
                    "$ref": "PhotosCurationMoviesAudioClipSequence",
                    "description": "The audio clip sequence for the soundtrack, if any."
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesClip": {
            "description": "A clip for an auto-awesome movie.\n\nA clip is a segment within a larger media.\n\nThere are different types of clips that may be used either for the video or\nthe audio of the movie itself.",
            "id": "PhotosCurationMoviesClip",
            "properties": {
                "interval": {
                    "$ref": "PhotosCurationMoviesClipInterval",
                    "description": "The interval of the piece of media that makes up the clip."
                },
                "mediaId": {
                    "$ref": "PhotosCurationMoviesMediaId",
                    "description": "The id of the media this clip comes from."
                },
                "metadata": {
                    "$ref": "PhotosCurationMoviesClipMetadata",
                    "description": "The metadata of the clip, such as the metadata used by the client to edit\nthe storyboard and the metadata used by the server to sort the clips.\nIt does not need to be supplied by the client in order to save\nthe storyboard on the server."
                },
                "type": {
                    "description": "The type of the clip.",
                    "enum": [
                        "UNKNOWN_TYPE",
                        "VIDEO",
                        "AUDIO",
                        "PHOTO",
                        "EMPTY_VIDEO",
                        "PHOTO_BURST",
                        "SOUNDTRACK",
                        "END_CARD"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesClipInterval": {
            "description": "The start and end points of a clip, defined as an interval over a piece of\nmedia.",
            "id": "PhotosCurationMoviesClipInterval",
            "properties": {
                "endPointUs": {
                    "description": "End time of the clip within the piece of media, in microseconds.\nThis value must be greater than or equal to start_time_us.",
                    "format": "int64",
                    "type": "string"
                },
                "startPointUs": {
                    "description": "Start time of the clip within the piece of media, in microseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "userEdited": {
                    "description": "If the user has edited the clip interval, for videos this means that\nbeatmatching will not be applied to the clip.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesClipMetadata": {
            "description": "The metadata associated with a clip.",
            "id": "PhotosCurationMoviesClipMetadata",
            "properties": {
                "clipDurationUs": {
                    "description": "The total duration of the source media from which this clip was taken.\nPresent only for clips that have an explicit duration, i.e.,\nClip.Type.VIDEO.\nNote that despite the name, this is *not* the duration of the clip the\nmetadata is associated with.",
                    "format": "int64",
                    "type": "string"
                },
                "croppingHints": {
                    "$ref": "PhotosCurationMoviesCroppingHints",
                    "description": "These parameters are used by the client to determine cropping after theme\nchanges.\n\nDifferent themes might require cropping with different aspect ratios, which\ncan be determined using these parameters."
                },
                "effectHint": {
                    "$ref": "PhotosCurationMoviesEffectHint",
                    "description": "Effects could be applied on this clip (together with others with the same\nid). Information here is decided by the clip selection algorithms."
                },
                "roi": {
                    "description": "Parameters of important regions in the clip. The order here does NOT\nmatter.",
                    "items": {
                        "$ref": "PhotosCurationMoviesROI"
                    },
                    "type": "array"
                },
                "sortHint": {
                    "$ref": "PhotosCurationMoviesClipMetadataSortHint"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesClipMetadataSortHint": {
            "description": "Hints about the sorting order of the clip, used by BE to manipulate and\nmaintain the ordering of the clips across different storyboard\ngeneration modules.",
            "id": "PhotosCurationMoviesClipMetadataSortHint",
            "properties": {
                "type": {
                    "enum": [
                        "UNKNOWN_TYPE",
                        "COVER_PHOTO"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesCroppingHints": {
            "description": "Provides a list of possible CroppingParam to be used to determine how to crop\na clip.\n\nThe client, based on the aspect ratio it should be used for cropping, can\nchoose one of the provided CroppingParam or extrapolate from one of the given\nCroppingParam by expanding or reducing the area included in the cropped clip.\n\nThe first element will contain a CroppingParam that crops 0 from each side\nand stores the aspect ratio of the original clip.",
            "id": "PhotosCurationMoviesCroppingHints",
            "properties": {
                "croppingParam": {
                    "items": {
                        "$ref": "PhotosCurationMoviesCroppingParams"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesCroppingParams": {
            "description": "The cropping to be applied to the clip.",
            "id": "PhotosCurationMoviesCroppingParams",
            "properties": {
                "aspectRatio": {
                    "description": "The aspect ratio of the cropped clip.",
                    "format": "float",
                    "type": "number"
                },
                "bottom": {
                    "format": "float",
                    "type": "number"
                },
                "left": {
                    "description": "How much, as a fraction of the original clip width and height, to crop\nfrom the left, right, top and bottom of the clip.",
                    "format": "float",
                    "type": "number"
                },
                "right": {
                    "format": "float",
                    "type": "number"
                },
                "top": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesEffect": {
            "description": "Group effects could be applied to single or multiple displayble clips.\nEach displayble clip belongs to at most one effect, and each effect must be\ncomposed of neighboring displayble clip.",
            "id": "PhotosCurationMoviesEffect",
            "properties": {
                "auxiliaryClip": {
                    "description": "A list of clips used to decorate the current one spatially, e.g., by\nsplitting screen. For effect involves more than one displable_clip, only\nthe first one be populated with this, and it will be applied to the whole\neffect.",
                    "items": {
                        "$ref": "PhotosCurationMoviesEffectAuxiliaryClip"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "ID of a single effect, unique across a single storyboard.",
                    "format": "int32",
                    "type": "integer"
                },
                "subclip": {
                    "description": "Cropping rectangle animation within the clip. The transition points may be\nbeat matched (e.g. for MULTI_ZOOM) or smoothly interpolated\n(e.g. for MULTI_KEN_BURNS). Should be specified for each clip of an effect\ngroup, e.g. for FACE_SWITCHING.",
                    "items": {
                        "$ref": "PhotosCurationMoviesEffectSubClip"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Type of the effect group. Only specified in the first clip of the effect\ngroup.",
                    "enum": [
                        "EFFECT_UNKNOWN",
                        "NORMAL",
                        "BURST",
                        "FACE_SWITCHING",
                        "MULTI_ZOOM",
                        "MULTI_KEN_BURNS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Rendering a clip normally, except using the auxiliary_clip.",
                        "Temporal effect with multiple photos, to generate an animation.",
                        "Temporal effect with multiple photos, each with a big face in the center,\nto generate an animation, with photos aligned on eyes.\nRequires eye coordinates in roi. Each photo should have one SubClip.",
                        "Temporal effect with single photo, show single photo multiple times, with\ndifferent zoom and rotation. This effect should have only one clip with\nmultiple SubClipCrops.",
                        "Temporal effect with single photo, switch the focus on different\nregion-of-interests, and the whole photo, with gradual transition.\nRequires roi in ClipMetadata. This effect should have only one clip with\nmultiple SubClipCrops."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesEffectAuxiliaryClip": {
            "description": "Auxiliary clip that is used to decorate the displayable clip.",
            "id": "PhotosCurationMoviesEffectAuxiliaryClip",
            "properties": {
                "index": {
                    "description": "The index of the auxilary clip, in the field of displayable_clip in\nstoryboard.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesEffectHint": {
            "description": "EffectHint could be applied on a group of photos (indicated by id).\nEach photo belongs to at most one group, and it is up to the theme to\ninterpret and render these group effects.",
            "id": "PhotosCurationMoviesEffectHint",
            "properties": {
                "id": {
                    "description": "ID of a single effect hint, unique across a single storyboard.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "EFFECT_HINT_UNKNOWN",
                        "BURST",
                        "FACE_SWITCHING",
                        "COVER_PHOTO"
                    ],
                    "enumDescriptions": [
                        "",
                        "Multiple photos to generate an animation effect. This will be used to\nreplace the PHOTO_BURST type in Clip proto.",
                        "Multiple photos with big face in the center. Should be shown one by one,\naligned on eyes. Requires eye coordinates in ROI.",
                        "The photo that will be used for Title composition/mini-theme."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesEffectSubClip": {
            "description": "Used in effects where the focus (crop and zoom) will move to multiple\nobjects in the photo or video in the duration of the clip.",
            "id": "PhotosCurationMoviesEffectSubClip",
            "properties": {
                "boundingBox": {
                    "$ref": "PhotosCurationMoviesCroppingParams",
                    "description": "Part of the photo that will be shown. The actual crop rectangle may be\nsmaller than this to fit in the aspect ratio of the movie or of the clip\n(e.g. in 3-up view)."
                },
                "durationFraction": {
                    "description": "How long the sub clip appers, in terms of the ratio of the parent clip's\nduration. Sum of duration_fraction of all subclips of a clip add up to\n1.0. This includes any in-transition animation. If there is transition\nanimation, this defines the start of the animation. Beginning of the\nfirst SubClip and end of the last SubClip may overlap with the clip's\ntransition animation. Durations of the SubClipCrops should add up to the\nduration of the clip.",
                    "format": "float",
                    "type": "number"
                },
                "durationUs": {
                    "description": "How long the sub clip appears, including any in-transition animation. If\nthere is transition animation, this defines the start of the animation.\nBeginning of the first SubClip and end of the last SubClip may overlap\nwith the clip's transition animation. Durations of the SubClipCrops\nshould add up to the duration of the clip.",
                    "format": "int64",
                    "type": "string"
                },
                "rotation": {
                    "description": "Rotation around the center of the cropped region in radians. Positive\nvalue rotates the crop rectangle counter-clockwise (so what appears in\nthe image rotates clockwise to the viewer on screen). The bounding_box\nshould be adjusted so that rotated view of the clip stays inside of the\nphoto or video. This may be used with MULTI_ZOOM.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesMediaId": {
            "description": "The id of a piece of media. Only one of the fields should be set.",
            "id": "PhotosCurationMoviesMediaId",
            "properties": {
                "assetId": {
                    "$ref": "PhotosCurationMoviesMediaIdAssetId",
                    "description": "The id of an asset in the client library."
                },
                "burstIds": {
                    "$ref": "PhotosCurationMoviesMediaIdBurstIds",
                    "description": "The ids of the media within a burst."
                },
                "photoId": {
                    "$ref": "PhotosCurationMoviesMediaIdPhotoId",
                    "description": "Id of the media in Photos backend. Used for both photos and videos."
                },
                "soundtrackId": {
                    "$ref": "PhotosCurationMoviesMediaIdSoundtrackId",
                    "description": "The id of the soundtrack in the client library."
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesMediaIdAssetId": {
            "description": "An asset from Movie Maker's assets collection.",
            "id": "PhotosCurationMoviesMediaIdAssetId",
            "properties": {
                "assetId": {
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesMediaIdBurstIds": {
            "description": "The ids of the media within a burst.",
            "id": "PhotosCurationMoviesMediaIdBurstIds",
            "properties": {
                "photoId": {
                    "items": {
                        "$ref": "PhotosCurationMoviesMediaIdPhotoId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesMediaIdPhotoId": {
            "description": "The id of a photo in the Photos backend.",
            "id": "PhotosCurationMoviesMediaIdPhotoId",
            "properties": {
                "mediaKey": {
                    "description": "The media key associated with a particular photo or video.  If the media\nkey is set, there is no need to set the user id or obfuscated photo id.\nIf both a media key and a photoId/obfuscated userId pair are provided,\nprecedence will be given to the media key.",
                    "type": "string"
                },
                "obfuscatedUserId": {
                    "description": "The obfuscated GAIA ID of the user the photo or video belongs to.\nThis is an obfuscated GAIA ID because this proto is shipped to the\nclient.",
                    "type": "string"
                },
                "photoId": {
                    "description": "The id of the actual photo or video within the user account.\nSee Photo.id in photos/service/photos_types.proto",
                    "format": "uint64",
                    "type": "string"
                },
                "version": {
                    "description": "DEPRECATED. Do not use.\n\nThe reason it has been deprecated is that the version in\nPhoto.Header.version is not suitable for identifying changes to the\nimage or video itself, as it is affected by changes to the photo entity\nlike movies a photo to a different album.\n\nThe version of the photo.\nSee Photo.Header.version in photos/service/photos_types.proto",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesMediaIdSoundtrackId": {
            "description": "A soundtrack for the movie. At least one of soundtrack_id or media_key\nneeds to be populated for the storyboard to be valid when uploaded to\nserver.",
            "id": "PhotosCurationMoviesMediaIdSoundtrackId",
            "properties": {
                "audioCid": {
                    "description": "This refers to the audio's Viper ID associated with the audio media_key\nsent from client. It will not be present if media_key is missing. This\nis only used by server. Client should not set or modify this field.",
                    "type": "string"
                },
                "localReference": {
                    "description": "Clients are free to use this field any way they want, in order to\nreference the audio from user's collection. Server simply preserves this\nfield. This is meaningful only on the client that added the soundtrack.",
                    "type": "string"
                },
                "mediaKey": {
                    "description": "This should refer to an audio entry uploaded from client. When present,\nthis field takes precedence over soundtrack_id. Note the audio referenced\nby this media key should exist when the storyboard is uploaded and server\nmovie renderig is performed. It may not be present (the audio can be\ndeleted) later, so client should not use it to download the audio to\nanother device.",
                    "type": "string"
                },
                "soundtrackId": {
                    "description": "ID in Movie Maker's soundtracks collection.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesROI": {
            "description": "Parameters of one single region-of-interest. bounding_box could be used for\ncreating effect like MULTI_KEN_BURNS, and eye coordinates could be used for\neffect like FACE_SWITCHING. Currently only populated with face detection\nresult.",
            "id": "PhotosCurationMoviesROI",
            "properties": {
                "boundingBox": {
                    "$ref": "PhotosCurationMoviesCroppingParams"
                },
                "featurePoint": {
                    "items": {
                        "$ref": "PhotosCurationMoviesROIFeaturePoint"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesROIFeaturePoint": {
            "description": "Typed feature point.",
            "id": "PhotosCurationMoviesROIFeaturePoint",
            "properties": {
                "type": {
                    "enum": [
                        "FEATURE_POINT_UNKNOWN",
                        "EYE_LEFT",
                        "EYE_RIGHT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "x": {
                    "description": "The coordinates are expressed as a fraction of the original image\ndimensions, and are relative to the origin of the original image.",
                    "format": "float",
                    "type": "number"
                },
                "y": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesStoryboard": {
            "description": "A storyboard is a sequence of clips with transitions and audio tracks that\nmake up a video.\n\nThe storyboard is used by the Auto-Awesome backend to communicate to the\nclient app how to render on the client the movie and allows the client to do\nedits like removing some of the content or change the soundtrack.\n\nThe client will send an updated storyboard to the server if the user has made\nchanges and wants to save those changes, e.g., for sharing the movie.",
            "id": "PhotosCurationMoviesStoryboard",
            "properties": {
                "clipOriginalIntervalUs": {
                    "description": "Original clip endpoints before beat matching was done.\nThese only apply to clips which were not added by the theme, so this list\nwill have as many entries as there are false entries in\nclip_was_added_by_theme.",
                    "items": {
                        "$ref": "PhotosCurationMoviesClipInterval"
                    },
                    "type": "array"
                },
                "clipOverlapDurationUs": {
                    "description": "Represents the transition duration between each pair of adjacent clips in\ndisplayable_clip.\nLength of this field should be displayable_clip.length - 1.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "clipWasAddedByTheme": {
                    "description": "Indicates whether the clip was added by the theme. Where this is false,\nthe clip should be preserved when the user changes theme in the editor.\nLength matches displayable_clip.length.",
                    "items": {
                        "type": "boolean"
                    },
                    "type": "array"
                },
                "displayableClip": {
                    "description": "The clips making up the storyboard of the movie. These comprise the photos\nand videos selected by the summarizer, and may also include blank clips\n(e.g. for behind the title) and the Google+ Photos ad video (the END_CARD).\nEMPTY_VIDEO and END_CARDs may occur anywhere in this sequence.\n\nThe displayable clips represent the clips in the final storyboard,\ni.e., the number of clips, their order, and their duration, correspond to\nthe final movie; the styling may affect the way the video or audio is\nrendered, but may NOT change the number of order of the clips, nor affect\ntheir start and end points. For example, if beat-matching has been applied,\nthe clip start and end points would already reflect that.\n\nA displayable_clip is the basic editing unit on client. User is able to\nedit (add/move/remove) single displayable_clip.",
                    "items": {
                        "$ref": "PhotosCurationMoviesClip"
                    },
                    "type": "array"
                },
                "minimumSupportedRendererVersion": {
                    "description": "Clients that render storyboards will have a given set of features, this\nversion refers to the minimum version of the renderer needed to correctly\nrender this storyboard. Incrementing this will block older clients from\nusing this storyboard, use with care.",
                    "format": "int32",
                    "type": "integer"
                },
                "movie": {
                    "$ref": "PhotosMoviesMovieStoryboard",
                    "description": "The definition of a movie in the new MovieStoryboard format.  If\nminimum_renderer_version >= 100, then only this field need be present in\nthe Storyboad message, and the renderers can use it directly."
                },
                "outputHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "outputWidth": {
                    "description": "The dimensions of the output video.",
                    "format": "int32",
                    "type": "integer"
                },
                "styling": {
                    "$ref": "PhotosCurationMoviesStyling",
                    "description": "The styling to be used to render the movie.\n\nThis field is sent from the server to the client to provide the exact\nparameters needed to play back the movie produced on the server.\n\nThis field is sent from the client to the server to provide the exact\nparameters needed to save a movie that was editing on the client."
                },
                "subtitle": {
                    "description": "The subtitle of the movie. Currently only used by Fun Factory theme to\nspecify the year; longer strings will not render with the current title\nlayout.",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the movie.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesStyling": {
            "description": "The styling to be applied to the clips in the storyboard.\n\nIt determines how to render the clips in the storyboard, both visually and\nauditorily.",
            "id": "PhotosCurationMoviesStyling",
            "properties": {
                "beatMatchingStyling": {
                    "$ref": "PhotosCurationMoviesBeatMatchingStyling",
                    "description": "The styling as defined by the beat matcher."
                },
                "includeOriginalAudio": {
                    "description": "If true then the original audio in video clips should be part of the audio\nmix, otherwise the original audio in video clips is muted.",
                    "type": "boolean"
                },
                "soundtrackId": {
                    "$ref": "PhotosCurationMoviesMediaIdSoundtrackId",
                    "description": "The track to be used as the soundtrack."
                },
                "theme": {
                    "description": "Specifies the theme to be applied. If the client receives a theme that it\ndoes not understand, it should ask the user to upgrade the application.",
                    "enum": [
                        "UNKNOWN",
                        "CINEMASCOPE",
                        "DOCUMENTARY",
                        "FESTIVAL",
                        "GLAMOUR",
                        "GREAT_OUTDOORS",
                        "HARDCORE",
                        "LOMOKINO",
                        "MEMORY_LANE",
                        "MODERN_POP",
                        "PUNK",
                        "SHOWTIME",
                        "SILVER_SCREEN",
                        "SUPER_8",
                        "TEAL_ORANGE",
                        "URBAN_LANDSCAPE",
                        "VANILLA",
                        "VINTAGE",
                        "FUN_FACTORY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "themeStyling": {
                    "$ref": "PhotosCurationMoviesThemeStyling",
                    "description": "The styling as defined by the theme."
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesThemeDisplayableClipParams": {
            "description": "Defines theme parameters that are applied to a clip.",
            "id": "PhotosCurationMoviesThemeDisplayableClipParams",
            "properties": {
                "effect": {
                    "$ref": "PhotosCurationMoviesEffect",
                    "description": "An optional effect applied to this clip."
                },
                "enabledEffect": {
                    "description": "A list of clip_params_index values, as specified within the theme\ndefinition, for effects which are to be enabled for this clip.\nSee //depot/google3/photos/curation/movies/themes/ for a list of theme\ndefinitions.\nAny effects that have a clip_params_index that is not the default\nvalue, and is not listed here, should be disabled.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "kenBurnsParams": {
                    "$ref": "PhotosCurationMoviesThemeDisplayableClipParamsKenBurnsClipParams",
                    "description": "Parameters to be used for a Ken Burns effect, if required for this clip."
                },
                "maxOverlapWithNext": {
                    "$ref": "PhotosCurationMoviesThemeDisplayableClipParamsMaxOverlap",
                    "description": "The maximum overlaps between this clip and the previous and next.\nThese are provided as hints for generating the overlapping between clips\nwhen editing the storyboard on the client."
                },
                "maxOverlapWithPrev": {
                    "$ref": "PhotosCurationMoviesThemeDisplayableClipParamsMaxOverlap"
                },
                "styledValue": {
                    "description": "Styled values for this clip.",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesThemeDisplayableClipParamsKenBurnsClipParams": {
            "id": "PhotosCurationMoviesThemeDisplayableClipParamsKenBurnsClipParams",
            "properties": {
                "endCenterX": {
                    "format": "double",
                    "type": "number"
                },
                "endCenterY": {
                    "format": "double",
                    "type": "number"
                },
                "endZoom": {
                    "format": "double",
                    "type": "number"
                },
                "startCenterX": {
                    "description": "Zoom center start/end coordinates, where 0,0 is the top-left corner\nand 1,1 is the bottom-right corner.\nThese are the co-ordinates of the base image that will be placed\nat the center of the output image, e.g. if center x,y = 0,0 then\nthe top-left corner of the base image will appear at the center of the\nframe.",
                    "format": "double",
                    "type": "number"
                },
                "startCenterY": {
                    "format": "double",
                    "type": "number"
                },
                "startZoom": {
                    "description": "Zoom factor at start and end of the clip. Must be greater than 0.01.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesThemeDisplayableClipParamsMaxOverlap": {
            "description": "The maximum overlap possible with clips of various types that may appear\nbefore or after this one.\n\nIt takes into account the duration of the clip and the possible overlap on\nthe other end of the clip.",
            "id": "PhotosCurationMoviesThemeDisplayableClipParamsMaxOverlap",
            "properties": {
                "withPhotoUs": {
                    "description": "The maximum number of microseconds at the start or end of the clip that\ncan be used as overlap if the neighboring clip is a photo.\n\nMust be zero or positive.",
                    "format": "int64",
                    "type": "string"
                },
                "withVideoUs": {
                    "description": "The maximum number of microseconds at the start or end of the clip that\ncan be used as overlap if the neighboring clip is a video.\n\nMust be zero or positive.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesThemeParams": {
            "description": "Defines theme parameters that are applied to all clips.",
            "id": "PhotosCurationMoviesThemeParams",
            "properties": {
                "editListMode": {
                    "enum": [
                        "EDIT_LIST_MODE_UNKNOWN",
                        "LIGHT",
                        "QUALITY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Create a simple edit list that is easier for Warhol to handle but may\nsacrifice visual quality.",
                        "Create the best looking editlist. May cause problems in Warhol due to\nthe complexity of the edit list."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosCurationMoviesThemeStyling": {
            "description": "Specifies parameters to the theme to be applied.",
            "id": "PhotosCurationMoviesThemeStyling",
            "properties": {
                "displayableClipParam": {
                    "description": "The clip-specific parameters for the theme.\n\nThe length of this field should match the length of the displayable_clip\nfield for the storyboard, including params for any EMPTY_VIDEO or END_CARD\nclips. The params need to be provided for each clip, even if no styling\nattribute is defined for them.",
                    "items": {
                        "$ref": "PhotosCurationMoviesThemeDisplayableClipParams"
                    },
                    "type": "array"
                },
                "themeParam": {
                    "$ref": "PhotosCurationMoviesThemeParams",
                    "description": "The choice of parameters for the theme.\n\nIt is independent of the particular clip."
                }
            },
            "type": "object"
        },
        "PhotosDynamicDepthMetadata": {
            "description": "Metadata pertaining to nested Dynamic Depth metadata.\nCurrently this message is used to indicate the presence of dynamic depth.",
            "id": "PhotosDynamicDepthMetadata",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingAlgorithmsFaceColorDependentGaussianModelData": {
            "description": "This proto stores the main member variables of the dependent gaussian model.\nThe DependentGaussianModel can be constructed with the proto using\nLoadFromProto(). The proto data of the finalized DependentGaussianModel can\nbe retrieved using WriteToProto().\nMembers mean, std represent column vectors with one value per dimension.\nMember bases represent matrix with one column vector per orthogonal base. It\nis stored as a vector (length = num_dimensions * num_dimensions), one base\nafter another. It is re-arranged into a matrix when loaded.",
            "id": "PhotosEditingAlgorithmsFaceColorDependentGaussianModelData",
            "properties": {
                "bases": {
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                },
                "mean": {
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                },
                "numDimensions": {
                    "format": "int32",
                    "type": "integer"
                },
                "numSamples": {
                    "format": "int32",
                    "type": "integer"
                },
                "std": {
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosEditingAutoEnhanceSkinColorAnalysisResults": {
            "id": "PhotosEditingAutoEnhanceSkinColorAnalysisResults",
            "properties": {
                "stats": {
                    "items": {
                        "$ref": "PhotosEditingAutoEnhanceSkinColorStatistics"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosEditingAutoEnhanceSkinColorStatistics": {
            "description": "A protocol buffer that contains skin color statistics for a given sampling\nregion, usually a face crop box.",
            "id": "PhotosEditingAutoEnhanceSkinColorStatistics",
            "properties": {
                "hueMean": {
                    "description": "Mean of the hue values for the skin pixels in the region.",
                    "format": "float",
                    "type": "number"
                },
                "hueStandardDeviation": {
                    "description": "Std. deviation of the hue values for the skin pixels in the region.",
                    "format": "float",
                    "type": "number"
                },
                "saturationMean": {
                    "description": "Mean of the saturation values for the skin pixels in the region.",
                    "format": "float",
                    "type": "number"
                },
                "saturationStandardDeviation": {
                    "description": "Std. deviation of the saturation for the skin pixels in the region.",
                    "format": "float",
                    "type": "number"
                },
                "skinColorB": {
                    "format": "float",
                    "type": "number"
                },
                "skinColorG": {
                    "format": "float",
                    "type": "number"
                },
                "skinColorR": {
                    "description": "The RGB values of the average skin color in the sampling region.\nRange is [0,1]",
                    "format": "float",
                    "type": "number"
                },
                "skinDetected": {
                    "description": "Whether any skin colored pixels were detected in the sampling region.",
                    "type": "boolean"
                },
                "valueMean": {
                    "description": "Mean of the value (brightness) for the skin pixels in the region.",
                    "format": "float",
                    "type": "number"
                },
                "valueStandardDeviation": {
                    "description": "Std. deviation of the value (brightness) for the skin pixels in the region.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingCoreCompactFaceParams": {
            "description": "CompactFaceParams is a collection of parameters of a single face found in an\nimage.\nThis is a compact version of photos/vision/service/proto/face.proto. It is\ndesigned to contain a subset of fields of this proto. The fields of this\nproto should be selectively kept in sync with\nphotos/vision/service/proto/face.proto.\n\nNOTE that the required fields in photos/vision/service/proto/face.proto\nare converted to optional fields here, take caution when converting messages\nof these types.\n\nBoth bounding boxes and the landmarks can optionally have floating point\n3D coordinates. These are in addition to the integer 2D coordinates, which\nmust always be specified.\nThe coordinates are relative to the top-left corner, and their units are\npixels. The z-coordinate represents the depth, and it's also given in pixels.\n\nWARNING: This proto is used in production and is sent to mobile & web\nclients. This proto is designed to be portable - it should be compatible with\nnanoproto and third_party/protobuf implementations. Therefore, there are\nstrong restrictions on the type of fields that can be used.\n\nWARNING: This message has a jspb target. If you add a new message field\ninside, either put its definition inside this message as well or add the js\nfile corresponding to the new message to the js_deps and proto_js rules in\nthe BUILD file; otherwise it will break lots of builds.\nThe js file name is the message name all in lowercase letters.\n\nNext available id: 34.",
            "id": "PhotosEditingCoreCompactFaceParams",
            "properties": {
                "age": {
                    "description": "The age of the face.  Range [0.0, 120.0].",
                    "format": "float",
                    "type": "number"
                },
                "angerProbability": {
                    "format": "float",
                    "type": "number"
                },
                "attribute": {
                    "description": "Attributes for the detected face.\nSee go/face-attributes for more detailed information about face attributes.",
                    "items": {
                        "$ref": "HumanSensingFaceAttribute"
                    },
                    "type": "array"
                },
                "beardProbability": {
                    "format": "float",
                    "type": "number"
                },
                "blurredProbability": {
                    "format": "float",
                    "type": "number"
                },
                "boundingBox": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsBoundingBox",
                    "description": "Bounding box around the face. The coordinates of the bounding box\nare in the original image's scale as returned in ImageParams.\nThe bounding box is computed to \"frame\" the face as a human would\nexpect, and is typically used in UI (e.g. G+ to show circles\naround detected faces). It is based on the landmarker results."
                },
                "darkGlassesProbability": {
                    "format": "float",
                    "type": "number"
                },
                "detectionConfidence": {
                    "description": "Confidence is in the range [0,1].",
                    "format": "float",
                    "type": "number"
                },
                "detectionImageHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "detectionImageWidth": {
                    "description": "These are the dimensions of the image used for face detection. They are\nused to scale the faces for different resolutions.  These fields are\npopulated in Photo Service when face data is added to the EditList.",
                    "format": "int32",
                    "type": "integer"
                },
                "extendedLandmarks": {
                    "description": "Extended landmarks added by LMprec_508 and 510. All future additional\nlandmarks should be added to this message.",
                    "items": {
                        "$ref": "PhotosEditingCoreCompactFaceParamsExtendedLandmark"
                    },
                    "type": "array"
                },
                "eyesClosedProbability": {
                    "format": "float",
                    "type": "number"
                },
                "faceCropV8": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsFaceCropV8"
                },
                "faceTemplate": {
                    "description": "The face template for the face. Template version information is kept at a\ndifferent level, but could be added as an additional field if needed.",
                    "format": "byte",
                    "type": "string"
                },
                "femaleProbability": {
                    "description": "Probability is in the range [0,1].",
                    "format": "float",
                    "type": "number"
                },
                "frontalGazeProbability": {
                    "format": "float",
                    "type": "number"
                },
                "glassesProbability": {
                    "format": "float",
                    "type": "number"
                },
                "headwearProbability": {
                    "format": "float",
                    "type": "number"
                },
                "initialDetectionBoundingBox": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsBoundingBox",
                    "description": "This other bounding box is tighter than the previous one, and\nencloses only the skin part of the face. It is typically used to\neliminate the face from any image analysis that looks up the\n\"amount of skin\" visible in an image (e.g. safesearch content\nscore). It is not based on the landmarker results, just on the\ninitial face detection."
                },
                "joyProbability": {
                    "format": "float",
                    "type": "number"
                },
                "landmarkingConfidence": {
                    "format": "float",
                    "type": "number"
                },
                "landmarks": {
                    "description": "Face landmarks.",
                    "items": {
                        "$ref": "PhotosEditingCoreCompactFaceParamsLandmark"
                    },
                    "type": "array"
                },
                "longHairProbability": {
                    "format": "float",
                    "type": "number"
                },
                "mouthOpenProbability": {
                    "format": "float",
                    "type": "number"
                },
                "nonHumanProbability": {
                    "format": "float",
                    "type": "number"
                },
                "panAngle": {
                    "description": "Pan (yaw) angle. Indicates how much leftward/rightward the face is pointing\nrelative to the vertical plane perpendicular to the image. Range\n[-180,180].",
                    "format": "float",
                    "type": "number"
                },
                "qualityScore": {
                    "description": "A score produced by the Face Quality Scoring Module that indicates overall\nquality of the face and its relative suitability for using it in\nconjunction with face recognition for instance.\nAs such, the score predicts the likelihood to recognize a given face\ncorrectly. A face recognition client could use the score and a threshold\nto determine whether to use the face in a face model, or whether to even\nconsider it for recognition.",
                    "format": "float",
                    "type": "number"
                },
                "rollAngle": {
                    "description": "Roll angle indicates how much clockwise/anti-clockwise the face is rotated\nrelative to the image vertical and about the axis perpendicular to the\nface. Range [-180,180].",
                    "format": "float",
                    "type": "number"
                },
                "skinBrightnessProbability": {
                    "format": "float",
                    "type": "number"
                },
                "sorrowProbability": {
                    "format": "float",
                    "type": "number"
                },
                "surpriseProbability": {
                    "format": "float",
                    "type": "number"
                },
                "tiltAngle": {
                    "description": "Tilt (pitch) angle. Indicates how much upwards/downwards the face is\npointing relative to the image's horizontal plane. Range [-180,180].",
                    "format": "float",
                    "type": "number"
                },
                "underExposedProbability": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingCoreCompactFaceParamsBoundingBox": {
            "id": "PhotosEditingCoreCompactFaceParamsBoundingBox",
            "properties": {
                "bottomRight": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint"
                },
                "bottomRight3f": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint3f"
                },
                "topLeft": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint",
                    "description": "These coordinates are in the same scale as the original image, but could\npotentially fall outside the bounds of the original image.\nRequired."
                },
                "topLeft3f": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint3f",
                    "description": "Same as above, but points are specified in 3D floating point coordinates.\nOptional."
                }
            },
            "type": "object"
        },
        "PhotosEditingCoreCompactFaceParamsExtendedLandmark": {
            "description": "Below is the set of extended landmarks added by subsequent landmarker\nversions. All future additional landmarks should be added to this message.\nNext available id: 4.",
            "id": "PhotosEditingCoreCompactFaceParamsExtendedLandmark",
            "properties": {
                "extendedLandmarkId": {
                    "enum": [
                        "NOSE_BOTTOM_RIGHT",
                        "NOSE_BOTTOM_LEFT",
                        "NOSE_BOTTOM_CENTER",
                        "LEFT_EYE_TOP_BOUNDARY",
                        "LEFT_EYE_RIGHT_CORNER",
                        "LEFT_EYE_BOTTOM_BOUNDARY",
                        "LEFT_EYE_LEFT_CORNER",
                        "RIGHT_EYE_TOP_BOUNDARY",
                        "RIGHT_EYE_RIGHT_CORNER",
                        "RIGHT_EYE_BOTTOM_BOUNDARY",
                        "RIGHT_EYE_LEFT_CORNER",
                        "LEFT_EYEBROW_UPPER_MIDPOINT",
                        "RIGHT_EYEBROW_UPPER_MIDPOINT",
                        "LEFT_EAR_TRAGION",
                        "RIGHT_EAR_TRAGION",
                        "FOREHEAD_GLABELLA",
                        "CHIN_GNATHION",
                        "CHIN_LEFT_GONION",
                        "CHIN_RIGHT_GONION",
                        "LEFT_CHEEK_CENTER",
                        "RIGHT_CHEEK_CENTER",
                        "UNKNOWN_LANDMARK"
                    ],
                    "enumDescriptions": [
                        "NOTE: The enum values here must match the landmark table in\nwiki/twiki/bin/view/Main/FRSDKLandmarkPositions.",
                        "",
                        "The following landmark is available with LMprec_508 and later",
                        "The following landmarks are extracted by LMprec_510 and later. See also\ndocumentation at www/~jsteffens/no_crawl/doc/FaceDetection/LM510.pdf",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The following landmarks are extracted by LMprec_600 and later. See\ngo/facesdk.",
                        "",
                        "Reserved id for an unknown landmark. This matches the id reserved by\nthe core SDK for an external UNKNOWN landmark."
                    ],
                    "type": "string"
                },
                "position": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint",
                    "description": "NOTE that landmark positions may fall outside the bounds of the image\nwhen the face is near one or more edges of the image.\nThat is, it is NOT guaranteed that\n0 <= position.x() < width or 0 <= position.y() < height.\nRequired."
                },
                "position3f": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint3f",
                    "description": "Same as position but the point is specified in 3D floating point\ncoordinates. This field is optional."
                }
            },
            "type": "object"
        },
        "PhotosEditingCoreCompactFaceParamsFaceCropV8": {
            "description": "Information defining a FaceCrop for the detected face. These parameters can\nbe used to obtain an axis-aligned face-crop by doing the following\nsteps (note that the actual implementation may change the order or some\ndetails, but the result should be equivalent):\n1. Translate the original image's center_x and center_y to (0,0).\n2. Apply a counter clockwise rotation.\n3. Scale the image.\n4. Extract a resulting box centered at (0,0) of the desired crop size.\nSee go/on-device-face-grouping-face-crops for more details.",
            "id": "PhotosEditingCoreCompactFaceParamsFaceCropV8",
            "properties": {
                "centerX": {
                    "description": "The X coordinate of the center of the face crop, typically in the range\n[0, detection_image_width). The X coordinate could be less than zero or\ngreater than detection_image_width, however, if the entire photo is just\na part of a face, causing the predicted center to be outside the typical\nrange.",
                    "format": "float",
                    "type": "number"
                },
                "centerY": {
                    "description": "The Y coordinate of the center of the face crop, typically in the range\n[0, detection_image_height). The Y coordinate could be less than zero or\ngreater than detection_image_height, however, if the entire photo is just\na part of a face, causing the predicted center to be outside the typical\nrange.",
                    "format": "float",
                    "type": "number"
                },
                "rotation": {
                    "description": "Counter clock-wise rotation of the detection image to get to the face\ncrop, in radians.",
                    "format": "float",
                    "type": "number"
                },
                "scale": {
                    "description": "Scale to apply to the detection image in order to resize it for\nextracting the face crop.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingCoreCompactFaceParamsLandmark": {
            "description": "Next available id: 4.",
            "id": "PhotosEditingCoreCompactFaceParamsLandmark",
            "properties": {
                "landmarkId": {
                    "description": "Some landmarks are set during face finding and some are set during\nlandmark finding. Only after landmarking will all landmarks be set.\nrequired",
                    "enum": [
                        "LEFT_EYE",
                        "RIGHT_EYE",
                        "LEFT_OF_LEFT_EYEBROW",
                        "RIGHT_OF_LEFT_EYEBROW",
                        "LEFT_OF_RIGHT_EYEBROW",
                        "RIGHT_OF_RIGHT_EYEBROW",
                        "MIDPOINT_BETWEEN_EYES",
                        "NOSE_TIP",
                        "UPPER_LIP",
                        "LOWER_LIP",
                        "MOUTH_LEFT",
                        "MOUTH_RIGHT",
                        "MOUTH_CENTER"
                    ],
                    "enumDescriptions": [
                        "Left and right are as viewed in the image without considering mirror\nprojection typical in photos. So LEFT_EYE is typically the person's\nright eye.\nFor convenience and consistency the enum values mirror the\ncorresponding values defined by the Neven Vision SDK.\nSee landmark table at:\n    wiki/twiki/bin/view/Main/FRSDKLandmarkPositions\nThe following landmarks are extracted by LMprec_502 and later",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Values 43, 44, 200, 220, 221, 222, 223, 224, 225, 226, 227, 300,\n302, 240, 241, 312, 314, 315, 316, 15000 are DEPRECATED in\nphotos/vision/service/proto/face.proto.\nDO NOT USE THESE NUMBERS HERE.\nPlease use ExtendedLandmark to use them.\nDEPRECATED_NOSE_BOTTOM_RIGHT = 43 [deprecated = true];\nDEPRECATED_NOSE_BOTTOM_LEFT = 44 [deprecated = true];\nDEPRECATED_NOSE_BOTTOM_CENTER = 200 [deprecated = true];\nDEPRECATED_LEFT_EYE_TOP_BOUNDARY = 220 [deprecated = true];\nDEPRECATED_LEFT_EYE_RIGHT_CORNER = 221 [deprecated = true];\nDEPRECATED_LEFT_EYE_BOTTOM_BOUNDARY = 222 [deprecated = true];\nDEPRECATED_LEFT_EYE_LEFT_CORNER = 223 [deprecated = true];\nDEPRECATED_RIGHT_EYE_TOP_BOUNDARY = 224 [deprecated = true];\nDEPRECATED_RIGHT_EYE_RIGHT_CORNER = 225 [deprecated = true];\nDEPRECATED_RIGHT_EYE_BOTTOM_BOUNDARY = 226 [deprecated = true];\nDEPRECATED_RIGHT_EYE_LEFT_CORNER = 227 [deprecated = true];\nDEPRECATED_LEFT_EYEBROW_UPPER_MIDPOINT = 300 [deprecated = true];\nDEPRECATED_RIGHT_EYEBROW_UPPER_MIDPOINT = 302 [deprecated = true];\nDEPRECATED_LEFT_EAR_TRAGION = 240 [deprecated = true];\nDEPRECATED_RIGHT_EAR_TRAGION = 241 [deprecated = true];\nDEPRECATED_FOREHEAD_GLABELLA = 312 [deprecated = true];\nDEPRECATED_CHIN_GNATHION = 314 [deprecated = true];\nDEPRECATED_CHIN_LEFT_GONION = 315 [deprecated = true];\nDEPRECATED_CHIN_RIGHT_GONION = 316 [deprecated = true];\nDEPRECATED_UNKNOWN_LANDMARK = 15000 [deprecated = true];"
                    ],
                    "type": "string"
                },
                "position": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint",
                    "description": "NOTE that landmark positions may fall outside the bounds of the image\nwhen the face is near one or more edges of the image.\nThat is, it is NOT guaranteed that\n0 <= position.x() < width or 0 <= position.y() < height.\nrequired"
                },
                "position3f": {
                    "$ref": "PhotosEditingCoreCompactFaceParamsPoint3f",
                    "description": "Same as position but the point is specified in 3D floating point\ncoordinates. This field is optional."
                }
            },
            "type": "object"
        },
        "PhotosEditingCoreCompactFaceParamsPoint": {
            "description": "2D point with integer coordinates.",
            "id": "PhotosEditingCoreCompactFaceParamsPoint",
            "properties": {
                "x": {
                    "format": "int32",
                    "type": "integer"
                },
                "y": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosEditingCoreCompactFaceParamsPoint3f": {
            "description": "3D point with floating point coordinates.",
            "id": "PhotosEditingCoreCompactFaceParamsPoint3f",
            "properties": {
                "x": {
                    "format": "float",
                    "type": "number"
                },
                "y": {
                    "format": "float",
                    "type": "number"
                },
                "z": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersAutoEnhanceData": {
            "description": "Next available id: 12.",
            "id": "PhotosEditingFiltersAutoEnhanceData",
            "properties": {
                "exposureQualityScore": {
                    "$ref": "ImageContentExposureQualityScore",
                    "description": "Exposure quality score."
                },
                "imageMetadata": {
                    "$ref": "PhotosImageMetadata",
                    "description": "Image metadata including EXIF data."
                },
                "impact": {
                    "description": "Impact of autoenhance on a photo. This value is computed after the\nfilter parameters are estimated. It is meant to be used as a quantitative\nmeasure of the effect of auto enhance on the appearance of the photo.\nThis value is not used inside the auto enhance pipeline or any of the\nfilters.",
                    "format": "float",
                    "type": "number"
                },
                "intensity": {
                    "description": "DEPRECATED, DO NOT USE.",
                    "format": "int32",
                    "type": "integer"
                },
                "isMonochromatic": {
                    "description": "Indicates whether the image is monochromatic (black&white, sepia, etc.).",
                    "type": "boolean"
                },
                "level": {
                    "description": "Intensity for the filters to apply their processing.  This is the same\nintensity field that is the auto enhance params proto, it is replicated\nhere to be stored and communicated to the clients.",
                    "enum": [
                        "AUTO_ENHANCE_LEVEL_UNKNOWN",
                        "AUTO_ENHANCE_LEVEL_NORMAL",
                        "AUTO_ENHANCE_LEVEL_HIGH"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "noiseProfile": {
                    "$ref": "PhotosEditingSignalsNoiseProfile",
                    "description": "Noise profile."
                },
                "skinColorAnalysisResults": {
                    "$ref": "PhotosEditingAutoEnhanceSkinColorAnalysisResults",
                    "description": "Skin analysis results."
                },
                "teethModelData": {
                    "$ref": "PhotosEditingSignalsTeethWhiteningTeethWhiteningModelData",
                    "description": "Parameters of gaussian models of teeth and not teeth."
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersCrop": {
            "id": "PhotosEditingFiltersCrop",
            "properties": {
                "constraint": {
                    "enum": [
                        "NONE",
                        "FIXED",
                        "PRESERVE_ASPECT_RATIO"
                    ],
                    "enumDescriptions": [
                        "Crop rect is unconstrained.",
                        "Crop constraint ratio is fixed (ie. 3x4, 9x16, etc.).",
                        "Crop constraint ratio is the same as the aspect ratio of the uncropped,\nEXIF-rotated original."
                    ],
                    "type": "string"
                },
                "rect": {
                    "$ref": "PhotosEditingFiltersRect",
                    "description": "The rect is defined in coordinates normalized to the width and height of\nthe image [0.0, 1.0] and is with respect to the EXIF-rotated source image."
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersEditList": {
            "id": "PhotosEditingFiltersEditList",
            "properties": {
                "editListData": {
                    "$ref": "PhotosEditingFiltersEditListData",
                    "description": "This is extra data that is required to render the EditList. This field will\nnot be recognized by old mobile clients and will be dropped. PhotoService\nstores an extra copy of this data to be able to repopulate it when clients\ndrop it. It is considered immutable to clients."
                },
                "filterParams": {
                    "description": "This edit list is the full set of image filters to perform, which may\nreference one or more images.\n\nTo clear the filter_params list, explicitly set this field to an empty\nlist.\n\nLeaving filter_params unset in write operation will result in undefined\nbehavior and will error in the future.\n\nAn empty filter_params list will turn off auto_enhance on the image.",
                    "items": {
                        "$ref": "PhotosEditingFiltersFilterParams"
                    },
                    "type": "array"
                },
                "hasClientRender": {
                    "description": "Signals whether this edit list was rendered on the client and uploaded to\nthe server.\nWhen this is set to true, the server should not attempt to apply this edit\nlist when serving.\nWhen this is set to true in a remote edit list synced from the server, the\nclient should download the edited version from the server to sync local\ncopies instead of attempting to render locally.\nIf this is set to true and the editor attempts to initialize this edit list\nbut is unable, it should force the user to save destructively as a copy.",
                    "type": "boolean"
                },
                "inputQuad": {
                    "$ref": "PhotosEditingFiltersQuad",
                    "description": "These are used for rectification of photos."
                },
                "outputQuad": {
                    "$ref": "PhotosEditingFiltersQuad"
                },
                "postRotate": {
                    "enum": [
                        "ROTATE_0",
                        "ROTATE_90",
                        "ROTATE_180",
                        "ROTATE_270"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "preCrop": {
                    "$ref": "PhotosEditingFiltersCrop",
                    "description": "Crop is applied before all filters. The rect is defined in coordinates\nnormalized to the width and height of the image [0.0, 1.0] and is with\nrespect to the EXIF-rotated source image."
                },
                "slowMotionSegment": {
                    "$ref": "PhotosEditingFiltersEditListSlowMotionSegment"
                },
                "versionId": {
                    "description": "Version id for this edit list.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersEditListData": {
            "id": "PhotosEditingFiltersEditListData",
            "properties": {
                "autoEnhanceData": {
                    "$ref": "PhotosEditingFiltersAutoEnhanceData",
                    "description": "Data that is needed by the auto enhance filters to be run in the clients.\nOnly data that is used by multiple filters should be added here; data that\nis specific to one filter should be included in FilterParams in EditList.\nPlease be careful about the data stored here: It should be small.\nAutoEnhanceData is stored for each photo and is also copied multiple times\nwhen processing the photos."
                },
                "faceData": {
                    "$ref": "PhotosEditingFiltersEditListFaceData",
                    "description": "If this field is present, it means that face detection is completed for the\nimage. If no faces were detected, then it will contain an empty list of\nfaces."
                },
                "untransformedImageSize": {
                    "$ref": "PhotosEditingFiltersVectorParamsIntVector2",
                    "description": "The pixel size of the untransformed/uncropped, but EXIF-rotated image."
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersEditListFaceData": {
            "id": "PhotosEditingFiltersEditListFaceData",
            "properties": {
                "compactFace": {
                    "description": "This is the same as the field \"face\" above, but in the format of\nCompactFaceParams. Only one of these fields will be present.",
                    "items": {
                        "$ref": "PhotosEditingCoreCompactFaceParams"
                    },
                    "type": "array"
                },
                "detectionImageHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "detectionImageWidth": {
                    "description": "These are the dimensions of the image used for face detection.  They are\nused to scale the faces for different resolutions.  These fields are\npopulated in Photo Service when face data is added to the EditList.",
                    "format": "int32",
                    "type": "integer"
                },
                "face": {
                    "description": "These are the faces detected in the image after applying exif correction\nbut no other spatial transformation. The pretemplate field will be cleared\nif it was originally present since it is not required in the EditList.",
                    "items": {
                        "$ref": "PhotosVisionServiceFaceFaceParams"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersEditListSlowMotionSegment": {
            "description": "SlowMotionSegment stores the information for the slow motion segment of\na High Framerate (HFR) video. The field may only be populated if the entity\nis a HFR video.",
            "id": "PhotosEditingFiltersEditListSlowMotionSegment",
            "properties": {
                "transitionEnd": {
                    "description": "The ending point of the transition in percentage ([0, 1]) of the full\noriginal duration.",
                    "format": "float",
                    "type": "number"
                },
                "transitionStart": {
                    "description": "The starting point of the transition in percentage ([0, 1]) of the full\noriginal duration.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersFilterAttributes": {
            "description": "Metadata about the category of the filter and where it came from. Useful in\nmutations and pipelines that need to select a group of filters meeting a\ncertain criteria.",
            "id": "PhotosEditingFiltersFilterAttributes",
            "properties": {
                "tag": {
                    "description": "Categories this filter belongs to. Some examples:\n[AUTO_ENHANCE, AUTO_GENERATED]: Red-eye filter inserted server\n[AUTO_ENHANCE]: Red-eye filter applied by the user choosing to autoenhance\n[AUTO_GENERATED]: Straigten filter inserted by server\n[ ]: Retrolux filter applied by user selecting that filter",
                    "enumDescriptions": [
                        "",
                        "The filter is part of the autoenhance pipeline. Autoenhance filters that\nwere manually added by a client will not have the AUTO_GENERATED tag.",
                        "The filter was automatically created by the server and applied to the\nimage without a user action.",
                        "The filter is disabled and will not be applied during processing. This\noption allows clients to toggle between enabled and disabled without\nremoving the filter and losing the filter parameter values.\nBy default, this value is absent and thus the filter is enabled.",
                        "The filter has been modified from the automatic parameters.  This is\nused for filters that have the tag AUTO_ENHANCE and user_params\nspecified."
                    ],
                    "items": {
                        "enum": [
                            "TAG_UNKNOWN",
                            "AUTO_ENHANCE",
                            "AUTO_GENERATED",
                            "DISABLED",
                            "USER_MODIFIED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersFilterParams": {
            "description": "NEXT ID: 6",
            "id": "PhotosEditingFiltersFilterParams",
            "properties": {
                "attributes": {
                    "$ref": "PhotosEditingFiltersFilterAttributes",
                    "description": "Metadata used to select a group from the list, for example to reset\nautoenhance to server defaults or to remove autogenerated filters.\nIf absent, the filter isn't part of a group that can be acted on\nat once."
                },
                "autogenerated": {
                    "description": "True only if the filter was inserted automatically into the edit list.\nDeprecated: Look for the presence of AUTO_GENERATED tag in\nFilterAttributes. For now (Q3 2013) server will populate both this bool\nand the AUTO_GENERATED tag.",
                    "type": "boolean"
                },
                "deleted2": {
                    "$ref": "PhotosEditingFiltersLookEnumerations",
                    "description": "Deprecated. \"Looks\" are a no-op on the server side. Don't set this field."
                },
                "id": {
                    "description": "Opaque identifier that is unique, and stable, within a list of FilterParams\nat a particular version. This identifier is provided by the server (never\nsynthesized by the client).  When updating a list of FilterParams, use the\nid to indicate which FilterParam is to be updated or where an insertion or\ndeletion should take place in the list.",
                    "type": "string"
                },
                "type": {
                    "description": "Required type of filter extension present. Not stored. The int values are\nthe extension numbers and can be populated (and validated) using proto\nreflection (for example: RETROLUX_FILTER = 44411671).",
                    "enum": [
                        "UNKNOWN_FILTER_TYPE",
                        "AMBIANCE2FILTER",
                        "AUTO_HDR_FILTER",
                        "AUTO_HDR_SCAPE_FILTER",
                        "BCSFILTER",
                        "BLACK_AND_WHITE_FILTER",
                        "BLUR_AREA_FILTER",
                        "CENTER_FOCUS_FILTER",
                        "DEBUG_FILTER",
                        "DETAILS_FILTER",
                        "DRAMA_FILTER",
                        "FACE_DECORATION_FILTER",
                        "FILM_FILTER",
                        "FLIP_FILTER",
                        "FRAMES_FILTER",
                        "POP_PIPELINE_FILTER",
                        "PRINT_PIPELINE_FILTER",
                        "GLAMOUR_GLOW_FILTER",
                        "GRAFFITI_TEXT_FILTER",
                        "GRAINY_FILM_FILTER",
                        "GRUNGE_FILTER",
                        "LOOK_3D_LUT_FILTER",
                        "NOIR_FILTER",
                        "PHOTOS_API_AUTO_ENHANCE_FILTER",
                        "RETROLUX_FILTER",
                        "SELECTIVE_FILTER",
                        "STRAIGHTEN_FILTER",
                        "STRUCTURE_FILTER",
                        "TILT_SHIFT_FILTER",
                        "TONAL_CONTRAST_FILTER",
                        "TUNE_IMAGE_FILTER",
                        "TUNE_IMAGE2FILTER",
                        "TWINKLE_FILTER",
                        "UDAL_TONEMAP_FILTER",
                        "VIBRANCE_FILTER",
                        "VINTAGE_FILTER",
                        "WHITE_NEUTRALIZER_FILTER",
                        "AE_BCS_FILTER",
                        "AUTO_ENHANCE_FILTER",
                        "AUTORECTIFY_FILTER",
                        "COLOR_FILTER",
                        "DENOISE_FILTER",
                        "LIGHT_FILTER",
                        "LSC_TONAL_STRUCTURE_FILTER",
                        "LUT_CURVE_FILTER",
                        "POP_FILTER",
                        "REDEYE_FILTER",
                        "SELECTIVE_COLOR_POP_FILTER",
                        "SKIN_SOFTENER_FILTER",
                        "TEETH_WHITENING_FILTER",
                        "VIGNETTE_FILTER",
                        "COLORIZATION",
                        "RECTIFY_FACE"
                    ],
                    "enumDescriptions": [
                        "",
                        "The '2' in Ambiance2FilterParams causes the unexpected name.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Deprecated.",
                        "",
                        "",
                        "",
                        "Auto-Enhance filters from photos/editing/auto_enhance/protos",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "A set of filters for suggested actions and ML-based editing. More details\nat go/photos-server-editing.",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersLookEnumerations": {
            "description": "Message to contain the look enumeration.",
            "id": "PhotosEditingFiltersLookEnumerations",
            "properties": {
                "lookNumber": {
                    "description": "Look enumeration.",
                    "enum": [
                        "NO_LOOK",
                        "WARM",
                        "CROSS",
                        "BLACK_AND_WHITE",
                        "COOL",
                        "CONTRAST",
                        "RETROLUX_1",
                        "RETROLUX_2",
                        "DRAMA_1",
                        "DRAMA_2"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersQuad": {
            "id": "PhotosEditingFiltersQuad",
            "properties": {
                "bottomLeft": {
                    "$ref": "PhotosEditingFiltersQuadQuadPoint"
                },
                "bottomRight": {
                    "$ref": "PhotosEditingFiltersQuadQuadPoint"
                },
                "topLeft": {
                    "$ref": "PhotosEditingFiltersQuadQuadPoint"
                },
                "topRight": {
                    "$ref": "PhotosEditingFiltersQuadQuadPoint"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersQuadQuadPoint": {
            "id": "PhotosEditingFiltersQuadQuadPoint",
            "properties": {
                "x": {
                    "format": "float",
                    "type": "number"
                },
                "y": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersRect": {
            "id": "PhotosEditingFiltersRect",
            "properties": {
                "x0": {
                    "format": "float",
                    "type": "number"
                },
                "x1": {
                    "format": "float",
                    "type": "number"
                },
                "y0": {
                    "format": "float",
                    "type": "number"
                },
                "y1": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingFiltersVectorParamsIntVector2": {
            "id": "PhotosEditingFiltersVectorParamsIntVector2",
            "properties": {
                "x": {
                    "format": "int32",
                    "type": "integer"
                },
                "y": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsActionShotRenderParams": {
            "id": "PhotosEditingRenderparamsActionShotRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsAnimationRenderParams": {
            "id": "PhotosEditingRenderparamsAnimationRenderParams",
            "properties": {
                "framesPerSec": {
                    "description": "If none is supplied, the server will use a default.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsClutterFreeRenderParams": {
            "id": "PhotosEditingRenderparamsClutterFreeRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsDenoisingRenderParams": {
            "id": "PhotosEditingRenderparamsDenoisingRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsFaceStitchRenderParams": {
            "id": "PhotosEditingRenderparamsFaceStitchRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsFaceSwapRenderParams": {
            "id": "PhotosEditingRenderparamsFaceSwapRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsGcamRenderParams": {
            "description": "Things the user sets with the UI on device that affect our processing;\nthese settings are shipped separately from the main burst zip.\n(For example, the user might override which is the base frame.)",
            "id": "PhotosEditingRenderparamsGcamRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsHalloweenRenderParams": {
            "id": "PhotosEditingRenderparamsHalloweenRenderParams",
            "properties": {
                "look": {
                    "enum": [
                        "UNKNOWN_LOOK",
                        "IM_FEELING_LUCKY",
                        "SKULL_FACE_PAINT",
                        "FUN_FACE_PAINT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Pick a Look randomly or based on image content.",
                        "Adds a spooky effect, such as a skull or a zombie mask.",
                        "Add a fun face painting effect."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsHdrRenderParams": {
            "id": "PhotosEditingRenderparamsHdrRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsLoveRenderParams": {
            "id": "PhotosEditingRenderparamsLoveRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsMosaicRenderParams": {
            "id": "PhotosEditingRenderparamsMosaicRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsPanoramaRenderParams": {
            "id": "PhotosEditingRenderparamsPanoramaRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsPhotobombRenderParams": {
            "id": "PhotosEditingRenderparamsPhotobombRenderParams",
            "properties": {
                "style": {
                    "enum": [
                        "UNKNOWN_STYLE",
                        "HASSELHOFF"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsRenderAttributes": {
            "description": "Metadata about the category of the RenderParams and where it came from.",
            "id": "PhotosEditingRenderparamsRenderAttributes",
            "properties": {
                "tag": {
                    "description": "Categories this RenderParams belongs to. Some examples:\n[AUTO_GENERATED, USER_MODIFIED]: Auto-GIF with framerate changed by user.\n[USER_MODIFIED]: Manually created HDR with manual parameters.\n[DISABLED]: Raw tone mapping with parameters set but disabled.\n[ ]: Manually created panorama with default parameters.",
                    "enumDescriptions": [
                        "",
                        "The RenderParams was automatically created by the server and applied to\nthe image without a user action.",
                        "The RenderParams are disabled and will not be applied during processing.\nThis option allows clients to toggle between enabled and disabled without\nremoving the RenderParams and losing the RenderParams parameter values.\nBy default, this value is absent and thus the RenderParams is enabled.",
                        "The RenderParams has been modified from the automatic parameters.  This\nis used for RenderParams that have the tag AUTO_GENERATED and user_params\nspecified."
                    ],
                    "items": {
                        "enum": [
                            "TAG_UNKNOWN",
                            "AUTO_GENERATED",
                            "DISABLED",
                            "USER_MODIFIED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsRenderParams": {
            "description": "NEXT ID: 26",
            "id": "PhotosEditingRenderparamsRenderParams",
            "properties": {
                "actionShot": {
                    "$ref": "PhotosEditingRenderparamsActionShotRenderParams"
                },
                "animation": {
                    "$ref": "PhotosEditingRenderparamsAnimationRenderParams",
                    "description": "Parameters for specific RenderType above. Only one should be set,\ncorresponding exactly to the RenderType."
                },
                "attributes": {
                    "$ref": "PhotosEditingRenderparamsRenderAttributes",
                    "description": "Metadata tracking the origin or status of the RenderParams parameters."
                },
                "clutterFree": {
                    "$ref": "PhotosEditingRenderparamsClutterFreeRenderParams"
                },
                "denoising": {
                    "$ref": "PhotosEditingRenderparamsDenoisingRenderParams"
                },
                "faceStitch": {
                    "$ref": "PhotosEditingRenderparamsFaceStitchRenderParams"
                },
                "faceSwap": {
                    "$ref": "PhotosEditingRenderparamsFaceSwapRenderParams"
                },
                "gcam": {
                    "$ref": "PhotosEditingRenderparamsGcamRenderParams"
                },
                "halloween": {
                    "$ref": "PhotosEditingRenderparamsHalloweenRenderParams"
                },
                "hdr": {
                    "$ref": "PhotosEditingRenderparamsHdrRenderParams"
                },
                "love": {
                    "$ref": "PhotosEditingRenderparamsLoveRenderParams"
                },
                "mosaic": {
                    "$ref": "PhotosEditingRenderparamsMosaicRenderParams"
                },
                "panorama": {
                    "$ref": "PhotosEditingRenderparamsPanoramaRenderParams"
                },
                "photobomb": {
                    "$ref": "PhotosEditingRenderparamsPhotobombRenderParams"
                },
                "snowGlobe": {
                    "$ref": "PhotosEditingRenderparamsSnowGlobeRenderParams"
                },
                "sputnik": {
                    "$ref": "PhotosEditingRenderparamsSputnikRenderParams"
                },
                "style": {
                    "$ref": "PhotosEditingRenderparamsStyleRenderParams"
                },
                "swivel": {
                    "$ref": "PhotosEditingRenderparamsSwivelRenderParams"
                },
                "twinkle": {
                    "$ref": "PhotosEditingRenderparamsTwinkleRenderParams"
                },
                "type": {
                    "description": "Required type of rendering. This corresponds to exactly one of the\nenumerated parameter sets below.",
                    "enum": [
                        "UNKNOWN_RENDER_TYPE",
                        "ANIMATION",
                        "FACE_STITCH",
                        "HDR",
                        "MOSAIC",
                        "PANORAMA",
                        "ERASER",
                        "ACTION",
                        "ZOETROPE",
                        "SNOWGLOBE",
                        "TWINKLE",
                        "YEARBOOK",
                        "LOVE",
                        "PHOTOBOMB",
                        "FACE_SWAP",
                        "STYLE",
                        "SWIVEL",
                        "ZOOM",
                        "GCAM",
                        "DENOISING",
                        "UNCROP",
                        "HALLOWEEN",
                        "SPUTNIK",
                        "DEPRECATED_POSTCARD",
                        "CLIENT_NOT_NEEDED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "This render type is for composition types that do not need to be edited\non the client."
                    ],
                    "type": "string"
                },
                "uncrop": {
                    "$ref": "PhotosEditingRenderparamsUncropRenderParams"
                },
                "yearbook": {
                    "$ref": "PhotosEditingRenderparamsYearbookRenderParams"
                },
                "zoetrope": {
                    "$ref": "PhotosEditingRenderparamsZoetropeRenderParams"
                },
                "zoom": {
                    "$ref": "PhotosEditingRenderparamsZoomRenderParams"
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsSnowGlobeRenderParams": {
            "id": "PhotosEditingRenderparamsSnowGlobeRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsSputnikRenderParams": {
            "id": "PhotosEditingRenderparamsSputnikRenderParams",
            "properties": {
                "edits": {
                    "$ref": "PhotosEditingSputnikProtosSputnikEdits"
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsStyleRenderParams": {
            "id": "PhotosEditingRenderparamsStyleRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsSwivelRenderParams": {
            "id": "PhotosEditingRenderparamsSwivelRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsTwinkleRenderParams": {
            "id": "PhotosEditingRenderparamsTwinkleRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsUncropRenderParams": {
            "id": "PhotosEditingRenderparamsUncropRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsYearbookRenderParams": {
            "id": "PhotosEditingRenderparamsYearbookRenderParams",
            "properties": {},
            "type": "object"
        },
        "PhotosEditingRenderparamsZoetropeRenderParams": {
            "id": "PhotosEditingRenderparamsZoetropeRenderParams",
            "properties": {
                "storyboard": {
                    "$ref": "PhotosCurationMoviesStoryboard",
                    "description": "A storyboard with the sequence of video clips to be rendered."
                }
            },
            "type": "object"
        },
        "PhotosEditingRenderparamsZoomRenderParams": {
            "id": "PhotosEditingRenderparamsZoomRenderParams",
            "properties": {
                "cropBottom": {
                    "format": "int32",
                    "type": "integer"
                },
                "cropLeft": {
                    "description": "The following four parameters (crop_left, crop_right, crop_up, crop_down)\nspecify the cropped rectangular region in pixels inside the original\nunscaled image.\nLeft boundary is specified by crop_left.\nRight boundary is specified by crop_right.\nTop boundary is specified by crop_up.\nBottom boundary is specified by crop_bottom.",
                    "format": "int32",
                    "type": "integer"
                },
                "cropRight": {
                    "format": "int32",
                    "type": "integer"
                },
                "cropTop": {
                    "format": "int32",
                    "type": "integer"
                },
                "scale": {
                    "description": "Parameter scale specifies the scaling factor\nIt should take a value not less than 1.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingSignalsFeature": {
            "description": "A feature is a rectangle block from an image. Features are used\nto calculate the noise level of the image.",
            "id": "PhotosEditingSignalsFeature",
            "properties": {
                "bin": {
                    "description": "Quantized color value, as calculated by QuantizeImage in\nnoise_profiler.cc.",
                    "format": "int32",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "left": {
                    "format": "int32",
                    "type": "integer"
                },
                "meanCb": {
                    "format": "float",
                    "type": "number"
                },
                "meanCr": {
                    "format": "float",
                    "type": "number"
                },
                "meanY": {
                    "description": "Mean Y, Cb, and Cr values.",
                    "format": "float",
                    "type": "number"
                },
                "rgeCb": {
                    "format": "float",
                    "type": "number"
                },
                "rgeCr": {
                    "format": "float",
                    "type": "number"
                },
                "rgeY": {
                    "description": "Robust gradient estimates. These values are estimates of the maximum\ngradient value inside the feature that is attributed to noise.",
                    "format": "float",
                    "type": "number"
                },
                "score": {
                    "description": "Score of the block as calculated by the ComputeFeatureScore in\nnoise_profiler.cc.",
                    "format": "float",
                    "type": "number"
                },
                "top": {
                    "description": "Location and size of the block.",
                    "format": "int32",
                    "type": "integer"
                },
                "varCb": {
                    "format": "float",
                    "type": "number"
                },
                "varCr": {
                    "format": "float",
                    "type": "number"
                },
                "varY": {
                    "description": "Variance of the Y, Cb, and Cr values.",
                    "format": "float",
                    "type": "number"
                },
                "width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosEditingSignalsNoiseProfile": {
            "description": "A protocol buffer that stores the noise profile.",
            "id": "PhotosEditingSignalsNoiseProfile",
            "properties": {
                "colorNoiseLevel": {
                    "format": "double",
                    "type": "number"
                },
                "combinedNoiseLevel": {
                    "description": "Noise levels correspond to minimum of the variances\nof all image blocks.",
                    "format": "double",
                    "type": "number"
                },
                "feature": {
                    "description": "Image blocks used to calculate the noise levels.",
                    "items": {
                        "$ref": "PhotosEditingSignalsFeature"
                    },
                    "type": "array"
                },
                "luminanceNoiseLevel": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosEditingSignalsTeethWhiteningTeethWhiteningModelData": {
            "description": "A protocal buffer that wraps up the model data of teeth and not teeth models\nfor all faces in an image. Each element in the repeated fields corresponds\nto one face in the image. Only use the model data if the corresponding\nhas_teeth is true. Otherwise the model data are just shell with no data.",
            "id": "PhotosEditingSignalsTeethWhiteningTeethWhiteningModelData",
            "properties": {
                "hasTeeth": {
                    "items": {
                        "type": "boolean"
                    },
                    "type": "array"
                },
                "modelNotTeethData": {
                    "items": {
                        "$ref": "PhotosEditingAlgorithmsFaceColorDependentGaussianModelData"
                    },
                    "type": "array"
                },
                "modelTeethData": {
                    "items": {
                        "$ref": "PhotosEditingAlgorithmsFaceColorDependentGaussianModelData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosEditingSputnikProtosSputnikEdits": {
            "id": "PhotosEditingSputnikProtosSputnikEdits",
            "properties": {
                "filterParams": {
                    "description": "This edit list is the full set of filters to perform.",
                    "items": {
                        "$ref": "PhotosEditingFiltersFilterParams"
                    },
                    "type": "array"
                },
                "rawParams": {
                    "$ref": "PhotosRawEditingProtosRawParams",
                    "description": "User edits from the \"Tune RAW\" image filter. These edits are applied on the\noriginal RAW image file bytes before the other filter_params."
                },
                "versionId": {
                    "description": "Version id for this edit list.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosFourCMetadata": {
            "id": "PhotosFourCMetadata",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "copyright": {
                    "type": "string"
                },
                "creator": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "credit": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosGDepthMetadata": {
            "description": "Metadata in the GDepth XMP block. Note that GDepth::Data is not copied into\nthis message.",
            "id": "PhotosGDepthMetadata",
            "properties": {
                "far": {
                    "description": "Depth map far plane distance.",
                    "format": "float",
                    "type": "number"
                },
                "format": {
                    "description": "Depth map format.",
                    "type": "string"
                },
                "imageHeight": {
                    "description": "Depth map source image height.",
                    "format": "int32",
                    "type": "integer"
                },
                "imageWidth": {
                    "description": "Depth map source image width.",
                    "format": "int32",
                    "type": "integer"
                },
                "mime": {
                    "description": "Depth map mime type.",
                    "type": "string"
                },
                "near": {
                    "description": "Depth map near plane distance.",
                    "format": "float",
                    "type": "number"
                },
                "units": {
                    "description": "Depth map units of distance.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosImageMetadata": {
            "description": "Next tag value: 377.",
            "id": "PhotosImageMetadata",
            "properties": {
                "DEPRECATEDBlendingtype": {
                    "type": "string"
                },
                "DEPRECATEDGpstimestamp": {
                    "description": "This field was originally marked incorrectly as optional (rather than\nrepeated). In order to fix it, the first field has been marked as\ndeprecated and replaced with a field with a new name and tag number.",
                    "format": "float",
                    "type": "number"
                },
                "DEPRECATEDIscolor": {
                    "format": "int32",
                    "type": "integer"
                },
                "DEPRECATEDLargestvalidinteriorrectheight": {
                    "format": "int32",
                    "type": "integer"
                },
                "DEPRECATEDLargestvalidinteriorrectleft": {
                    "format": "int32",
                    "type": "integer"
                },
                "DEPRECATEDLargestvalidinteriorrecttop": {
                    "format": "int32",
                    "type": "integer"
                },
                "DEPRECATEDLargestvalidinteriorrectwidth": {
                    "format": "int32",
                    "type": "integer"
                },
                "DEPRECATEDProcess": {
                    "format": "int32",
                    "type": "integer"
                },
                "actionadvised": {
                    "type": "string"
                },
                "addlmodelinfo": {
                    "type": "string"
                },
                "advisory": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "altitude": {
                    "format": "double",
                    "type": "number"
                },
                "animationMetadata": {
                    "$ref": "PhotosAnimationMetadata"
                },
                "aperturefnumber": {
                    "format": "float",
                    "type": "number"
                },
                "aperturevalue": {
                    "format": "float",
                    "type": "number"
                },
                "artworkorobject": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "audioduration": {
                    "type": "string"
                },
                "audiooutcue": {
                    "type": "string"
                },
                "audiosamplingrate": {
                    "type": "string"
                },
                "audiosamplingresolution": {
                    "type": "string"
                },
                "audiotype": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "authorposition": {
                    "type": "string"
                },
                "autoenhance": {
                    "description": "Indicates whether auto-enhance has been applied to the image.",
                    "type": "boolean"
                },
                "baseurl": {
                    "type": "string"
                },
                "bitspersample": {
                    "description": "Start of reflected fields. These do not duplicate the above fields.",
                    "format": "int32",
                    "type": "integer"
                },
                "brightnessvalue": {
                    "format": "float",
                    "type": "number"
                },
                "burstuuid": {
                    "type": "string"
                },
                "cameraid": {
                    "type": "string"
                },
                "cameramake": {
                    "description": "Exif camera make",
                    "type": "string"
                },
                "cameramodel": {
                    "description": "Exif camera model",
                    "type": "string"
                },
                "caption": {
                    "description": "Caption embedded in IPTC",
                    "type": "string"
                },
                "captionwriter": {
                    "type": "string"
                },
                "capturesoftware": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "ccdwidth": {
                    "format": "float",
                    "type": "number"
                },
                "celllength": {
                    "format": "int32",
                    "type": "integer"
                },
                "cellwidth": {
                    "format": "int32",
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "chromasubsampling": {
                    "description": "A typed representation that translates the values from ycbcrsubsampling.",
                    "enum": [
                        "UNKNOWN_CHROMA_SUBSAMPLING",
                        "YCBCR410",
                        "YCBCR411",
                        "YCBCR420",
                        "YCBCR422",
                        "YCBCR444"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "ciadrcity": {
                    "type": "string"
                },
                "ciadrctry": {
                    "type": "string"
                },
                "ciadrextadr": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ciadrpcode": {
                    "type": "string"
                },
                "ciadrregion": {
                    "type": "string"
                },
                "ciemailwork": {
                    "type": "string"
                },
                "citelwork": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "ciurlwork": {
                    "type": "string"
                },
                "colormap": {
                    "format": "int32",
                    "type": "integer"
                },
                "colorprofile": {
                    "description": "Indicates whether or not the source image had an embedded color profile.",
                    "type": "boolean"
                },
                "colorspace": {
                    "format": "int32",
                    "type": "integer"
                },
                "compressedbitsperpixel": {
                    "format": "float",
                    "type": "number"
                },
                "compressionlevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "contact": {
                    "type": "string"
                },
                "contentlocationcode": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "contentlocationname": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "contrast": {
                    "format": "int32",
                    "type": "integer"
                },
                "contributor": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "copyrightnotice": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countrycode": {
                    "type": "string"
                },
                "coverage": {
                    "type": "string"
                },
                "createdate": {
                    "type": "string"
                },
                "credits": {
                    "type": "string"
                },
                "croppedareaimageheightpixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "croppedareaimagewidthpixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "croppedarealeftpixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "croppedareatoppixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "customrendered": {
                    "format": "int32",
                    "type": "integer"
                },
                "cvterm": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "date": {
                    "type": "string"
                },
                "datecreated": {
                    "type": "string"
                },
                "datesent": {
                    "type": "string"
                },
                "datetime": {
                    "type": "string"
                },
                "datetimedigitized": {
                    "type": "string"
                },
                "daylightsavings": {
                    "description": "0 = no daylight savings, 1 = daylight savings enabled. Note that this field\nonly represents whether the setting in the camera was turned on or off. It\nmust not be used to modify the timestamp of the photo. That is, the capture\ntime is already completely determined by exif_time, timezoneoffset and\ntimezoneminutes.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "destination": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "destinationLatitude": {
                    "description": "+/- 90 inclusive",
                    "format": "double",
                    "type": "number"
                },
                "destinationLongitude": {
                    "description": "+/- 180 inclusive",
                    "format": "double",
                    "type": "number"
                },
                "digimageguid": {
                    "type": "string"
                },
                "digitalsourcefiletype": {
                    "type": "string"
                },
                "digitalsourcetype": {
                    "type": "string"
                },
                "digitalzoomratio": {
                    "format": "float",
                    "type": "number"
                },
                "distance": {
                    "format": "float",
                    "type": "number"
                },
                "dynamicDepthMetadata": {
                    "$ref": "PhotosDynamicDepthMetadata",
                    "description": "DynamicDepth (go/dynamic-depth) metadata is described in the metadata of\nsub-images in the container. The presence of this field can be used to\ndetermine that an image is in the dynamic depth format."
                },
                "editorialupdate": {
                    "type": "string"
                },
                "editstatus": {
                    "type": "string"
                },
                "envelopenumber": {
                    "type": "string"
                },
                "envelopepriority": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "exif4c": {
                    "$ref": "PhotosFourCMetadata",
                    "description": "4C metadata (caption, copyright, creator, credit) specific to each of\nthe three metadata segments (EXIF, XMP, IPTC). These are used to keep\nseparate the 4C data from each segment so that we can properly preserve\nthe per-segment 4C data on write (when PreserveLevel is set appropriately)."
                },
                "exifTime": {
                    "description": "Timestamp embedded in the image. The value comes from the first valid\ndate-time field extracted from the metadata in the order:\n1) datecreated (ie. DateTimeOriginal)\n2) datetimedigitized (ie. DateTimeDigitized)\n3) datetime (ie. DateTime or last modified date)\n\nThe type of this field is equivalent to a time_t (ie. number of seconds\nsince the epoch - 00:00 hours, Jan 1, 1970) except that it is an int64\nrather than an int.",
                    "format": "int64",
                    "type": "string"
                },
                "exifTimeUtc": {
                    "description": "The exif_time_utc field is a UTC-based alternative to the exif_time field,\nwhich is in local time, rather than UTC. If they were not separate, clients\nwould be unable to distinguish if the source were UTC- or local-based.",
                    "format": "int64",
                    "type": "string"
                },
                "exifTimeUtcSource": {
                    "description": "The exif_time_utc_source indicates the source from which the exif_time_utc\nfield is calculated.",
                    "enum": [
                        "EXIF_TIME_SOURCE_UNKNOWN",
                        "GPS_DATE_TIME_STAMP"
                    ],
                    "enumDescriptions": [
                        "",
                        "The value is calculated from the GPSTimeStamp and GPSDateStamp fields."
                    ],
                    "type": "string"
                },
                "expirationdate": {
                    "type": "string"
                },
                "expirationtime": {
                    "type": "string"
                },
                "exposurebias": {
                    "format": "float",
                    "type": "number"
                },
                "exposureindex": {
                    "format": "float",
                    "type": "number"
                },
                "exposurelockused": {
                    "type": "boolean"
                },
                "exposuremode": {
                    "format": "int32",
                    "type": "integer"
                },
                "exposureprogram": {
                    "format": "int32",
                    "type": "integer"
                },
                "exposuretime": {
                    "format": "float",
                    "type": "number"
                },
                "extrasamples": {
                    "format": "int32",
                    "type": "integer"
                },
                "fillorder": {
                    "format": "int32",
                    "type": "integer"
                },
                "firmware": {
                    "type": "string"
                },
                "firstphotodate": {
                    "type": "string"
                },
                "fixtureidentifier": {
                    "type": "string"
                },
                "flashcompensation": {
                    "format": "float",
                    "type": "number"
                },
                "flashenergy": {
                    "format": "float",
                    "type": "number"
                },
                "flashreturn": {
                    "format": "int32",
                    "type": "integer"
                },
                "flashused": {
                    "format": "int32",
                    "type": "integer"
                },
                "focallength": {
                    "format": "float",
                    "type": "number"
                },
                "focallengthin35mmfilm": {
                    "format": "int32",
                    "type": "integer"
                },
                "focalplaneunits": {
                    "format": "float",
                    "type": "number"
                },
                "focalplanexres": {
                    "format": "float",
                    "type": "number"
                },
                "format": {
                    "type": "string"
                },
                "freebytecounts": {
                    "format": "int64",
                    "type": "string"
                },
                "freeoffsets": {
                    "format": "int32",
                    "type": "integer"
                },
                "fullpanoheightpixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "fullpanowidthpixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "function": {
                    "type": "boolean"
                },
                "gaincontrol": {
                    "format": "int32",
                    "type": "integer"
                },
                "gaudiomime": {
                    "type": "string"
                },
                "gcameraburstid": {
                    "description": "A unique String. The property should be present and identical for all\nimages that make up a burst. It should be unique across devices\n(UUID recommended).\nUnlike GCreations:CameraBurstId, we should use images with this property to\ncreate auto collages and animations.",
                    "type": "string"
                },
                "gcameraburstprimary": {
                    "description": "A value of 1 indicates that this was the primary (\u201cbest shot\u201d) at capture\ntime.\nWithin Photos we should only treat this image as the best shot if the user\nhasn\u2019t made an explicit choice. Defining the initial primary allows\nconsistency between OEMs, Photos clients, and the Photos backend.\nThis value is optional, cameras are not required to set it on any photo in\na burst. Clients will default to the 0th frame, but may run an algorithm to\npick a better default.",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameradisableautocreation": {
                    "description": "The possible values are: \u201cAnimation\u201d, \u201cCollage\u201d, \u201cPano\u201d, \u201cMovies\u201d. Photos\nwill avoid creating the listed types using the containing image or video.\nThe property is optional. The property can be included multiple times to\ndisable creation of multiple different types.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gcameramicrovideo": {
                    "description": "The following XMP metadata are used specifically for MicroVideo. More\ninformation about MicroVideo format can be found at\ngo/photos-microvideo-format\nA value of 1 indicates that this file was a MicroVideo at capture time.\nOtherwise, this is not a MicroVideo (not set or 0).",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameramicrovideooffset": {
                    "description": "The offset in bytes from the end of the file to the point where the\nappended mp4 begins (equivalent to the length of the compressed mp4).\nThis field might be provided in the original MicroVideo from client, but it\nmight become invalid when the image component is edited, so it is expected\nthat the thumbnailer will validate it and find the correct value (by\nscanning through the JPEG) if it is invalid. In other words, only a valid\noffset should be returned by thumbnailer.",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameramicrovideopresentationtimestampus": {
                    "description": "The presentation timestamp in microseconds of the video frame corresponding\nto the image still. Value may be -1 to denote unset/unspecified.",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameramicrovideoversion": {
                    "description": "Indicates the file format version of the MicroVideo (initially 1).",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameramotionphoto": {
                    "description": "An indication that this item should be treated as a Motion Photo.\n0 -> Not Motion Photo, 1 -> Motion Photo, everything else is undefined per\nthe spec. If it's a motion photo, the previous gcamera fields should be\nignored.",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameramotionphotopresentationtimestampus": {
                    "description": "The presentation timestamp in microseconds of the video frame corresponding\nto the image still. Value may be -1 to denote unset/unspecified.",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameramotionphotoversion": {
                    "description": "Indicates the Motion Photo version of the spec (initially 1).",
                    "format": "int32",
                    "type": "integer"
                },
                "gcameraspecialtypeid": {
                    "description": "Camera creations metadata.\nThe opaque id string created by the OEM. For bursts, this field should not\nbe present. Instead, the two properties below will allow Photos to identify\nand provide special treatment for bursts.",
                    "type": "string"
                },
                "gcreationscameraburstid": {
                    "type": "string"
                },
                "gcreationstype": {
                    "description": "String representation of creation type. Should be one of {\"GCameraCollage\",\n\"GCameraAnimation\", \"GCameraGroupSmiles\", \"GPhotosCollage\",\n\"GPhotosAnimation\"}.",
                    "type": "string"
                },
                "gdepthMetadata": {
                    "$ref": "PhotosGDepthMetadata"
                },
                "gimagemime": {
                    "type": "string"
                },
                "gpsdatestamp": {
                    "description": "This is in UTC time. Format is YYYY:mm:dd.",
                    "type": "string"
                },
                "gpsdestbearing": {
                    "format": "float",
                    "type": "number"
                },
                "gpsdestbearingref": {
                    "type": "string"
                },
                "gpsdestdistance": {
                    "format": "float",
                    "type": "number"
                },
                "gpsdestdistanceref": {
                    "type": "string"
                },
                "gpsdestlatitude": {
                    "format": "float",
                    "type": "number"
                },
                "gpsdestlatituderef": {
                    "type": "string"
                },
                "gpsdestlongitude": {
                    "format": "float",
                    "type": "number"
                },
                "gpsdestlongituderef": {
                    "type": "string"
                },
                "gpsdifferential": {
                    "format": "int32",
                    "type": "integer"
                },
                "gpsdop": {
                    "format": "float",
                    "type": "number"
                },
                "gpsimgdirection": {
                    "format": "float",
                    "type": "number"
                },
                "gpsimgdirectionref": {
                    "type": "string"
                },
                "gpsmapdatum": {
                    "type": "string"
                },
                "gpsmeasuremode": {
                    "type": "string"
                },
                "gpssatellites": {
                    "type": "string"
                },
                "gpsspeed": {
                    "format": "float",
                    "type": "number"
                },
                "gpsspeedref": {
                    "type": "string"
                },
                "gpsstatus": {
                    "type": "string"
                },
                "gpstime": {
                    "description": "This is in UTC Time.\nContains three floats: hour, minute and second.\nSupports subsecond resolution.",
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                },
                "gpstrack": {
                    "format": "float",
                    "type": "number"
                },
                "gpstrackref": {
                    "type": "string"
                },
                "grayresponsecurve": {
                    "format": "int32",
                    "type": "integer"
                },
                "grayresponseunit": {
                    "format": "int32",
                    "type": "integer"
                },
                "headline": {
                    "type": "string"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "hostcomputer": {
                    "type": "string"
                },
                "identifier": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "imagenumber": {
                    "type": "string"
                },
                "imageorientation": {
                    "type": "string"
                },
                "imagetype": {
                    "type": "string"
                },
                "initialhorizontalfovdegrees": {
                    "format": "float",
                    "type": "number"
                },
                "initialverticalfovdegrees": {
                    "format": "float",
                    "type": "number"
                },
                "initialviewheadingdegrees": {
                    "format": "int32",
                    "type": "integer"
                },
                "initialviewpitchdegrees": {
                    "format": "int32",
                    "type": "integer"
                },
                "initialviewrolldegrees": {
                    "format": "int32",
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "intellectualgenre": {
                    "type": "string"
                },
                "interoperabilityindex": {
                    "type": "string"
                },
                "iptc4c": {
                    "$ref": "PhotosFourCMetadata"
                },
                "iptclastedited": {
                    "type": "string"
                },
                "ismpformat": {
                    "description": "The image is a Multi-Picture Object.",
                    "type": "boolean"
                },
                "isoequivalent": {
                    "format": "int32",
                    "type": "integer"
                },
                "keyword": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "label": {
                    "type": "string"
                },
                "language": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "languageidentifier": {
                    "type": "string"
                },
                "lastphotodate": {
                    "type": "string"
                },
                "latitude": {
                    "description": "GPS Info:\n+/- 90 inclusive",
                    "format": "double",
                    "type": "number"
                },
                "lens": {
                    "type": "string"
                },
                "lensid": {
                    "type": "string"
                },
                "lensinfo": {
                    "type": "string"
                },
                "lightsource": {
                    "format": "int32",
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "locationshown": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "longitude": {
                    "description": "+/- 180 inclusive",
                    "format": "double",
                    "type": "number"
                },
                "marked": {
                    "type": "boolean"
                },
                "maxaperturevalue": {
                    "format": "float",
                    "type": "number"
                },
                "maxavailheight": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxavailwidth": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxsamplevalue": {
                    "format": "int32",
                    "type": "integer"
                },
                "metadatadate": {
                    "type": "string"
                },
                "meteringmode": {
                    "format": "int32",
                    "type": "integer"
                },
                "mimeType": {
                    "description": "Mime type of image",
                    "format": "int32",
                    "type": "integer"
                },
                "minormodelagedisclosure": {
                    "type": "string"
                },
                "minsamplevalue": {
                    "format": "int32",
                    "type": "integer"
                },
                "mode": {
                    "format": "int32",
                    "type": "integer"
                },
                "modelage": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "modelreleaseid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "modelreleasestatus": {
                    "type": "string"
                },
                "modifydate": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "objectattributereference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "objectcycle": {
                    "type": "string"
                },
                "objecttypereference": {
                    "type": "string"
                },
                "offsettime": {
                    "type": "string"
                },
                "offsettimedigitized": {
                    "type": "string"
                },
                "offsettimeoriginal": {
                    "type": "string"
                },
                "organisationinimagecode": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "organisationinimagename": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "orientation": {
                    "description": "Exif camera orientation. \"1\" means \"no rotation\".",
                    "format": "int32",
                    "type": "integer"
                },
                "originatingprogram": {
                    "type": "string"
                },
                "owner": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ownername": {
                    "type": "string"
                },
                "panoramaMetadata": {
                    "$ref": "PhotosPanoramaMetadata"
                },
                "personinimage": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "photometricinterpretation": {
                    "format": "int32",
                    "type": "integer"
                },
                "planarconfiguration": {
                    "format": "int32",
                    "type": "integer"
                },
                "poseheadingdegrees": {
                    "format": "float",
                    "type": "number"
                },
                "posepitchdegrees": {
                    "format": "float",
                    "type": "number"
                },
                "poserolldegrees": {
                    "format": "float",
                    "type": "number"
                },
                "primarychromaticities": {
                    "format": "float",
                    "type": "number"
                },
                "productid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "programversion": {
                    "type": "string"
                },
                "projectiontype": {
                    "type": "string"
                },
                "propertyreleaseid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "propertyreleasestatus": {
                    "type": "string"
                },
                "publisher": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rating": {
                    "format": "float",
                    "type": "number"
                },
                "redeyemode": {
                    "type": "boolean"
                },
                "referenceblackwhite": {
                    "format": "float",
                    "type": "number"
                },
                "referencedate": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "referencenumber": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "referenceservice": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "relatedimagefileformat": {
                    "type": "string"
                },
                "relatedimageheight": {
                    "format": "int64",
                    "type": "string"
                },
                "relatedimagewidth": {
                    "format": "int64",
                    "type": "string"
                },
                "relatedsoundfile": {
                    "type": "string"
                },
                "relation": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "releasedate": {
                    "type": "string"
                },
                "releasetime": {
                    "type": "string"
                },
                "resolutionunit": {
                    "format": "int32",
                    "type": "integer"
                },
                "rotate": {
                    "description": "being returned to caller\nUse values defined in \"MIME_TYPE\"\nThis field is deprecated. Rotation is now accomplished via\nImageInfo.exif_orientation and ImageInfo.edit_list.\nNumber of degrees (0, 90, 180,",
                    "format": "int32",
                    "type": "integer"
                },
                "rowsperstrip": {
                    "format": "int64",
                    "type": "string"
                },
                "samplesperpixel": {
                    "format": "int32",
                    "type": "integer"
                },
                "saturation": {
                    "format": "int32",
                    "type": "integer"
                },
                "scene": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "scenecapturetype": {
                    "format": "int32",
                    "type": "integer"
                },
                "sensingmethod": {
                    "format": "int32",
                    "type": "integer"
                },
                "sensorheight": {
                    "format": "float",
                    "type": "number"
                },
                "sensorwidth": {
                    "format": "float",
                    "type": "number"
                },
                "serialnumber": {
                    "type": "string"
                },
                "serviceidentifier": {
                    "type": "string"
                },
                "sharpness": {
                    "format": "int32",
                    "type": "integer"
                },
                "shutterspeedvalue": {
                    "format": "float",
                    "type": "number"
                },
                "software": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "sourcephotoscount": {
                    "format": "int32",
                    "type": "integer"
                },
                "spectralsensitivity": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "stitchingsoftware": {
                    "type": "string"
                },
                "stripbytecounts": {
                    "format": "int64",
                    "type": "string"
                },
                "stripoffsets": {
                    "format": "int64",
                    "type": "string"
                },
                "subjectarea": {
                    "format": "int32",
                    "type": "integer"
                },
                "subjectcode": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subjectdistancerange": {
                    "format": "int32",
                    "type": "integer"
                },
                "subjectlocation": {
                    "format": "int32",
                    "type": "integer"
                },
                "subjectreference": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sublocation": {
                    "type": "string"
                },
                "subsectime": {
                    "type": "string"
                },
                "subsectimedigitized": {
                    "type": "string"
                },
                "subsectimeoriginal": {
                    "type": "string"
                },
                "supplementalcategory": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "thresholding": {
                    "format": "int32",
                    "type": "integer"
                },
                "thumbnailerBuildCl": {
                    "description": "The build CL for the version of thumbnailer that built this image.",
                    "format": "int32",
                    "type": "integer"
                },
                "timesent": {
                    "type": "string"
                },
                "timezoneminutes": {
                    "description": "Remaining minutes of offset.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "timezoneoffset": {
                    "description": "The elements in the timezone and daylight savings field arrays correspond\nto the following date/time fields:\n0) datecreated (ie. DateTimeOriginal)\n1) datetime (ie. DateTime or last modified date)\n2) datetimedigitized (ie. DateTimeDigitized)\nIf the field does not exist, then there is no valid time zone information\nfor that date/time field.\nOffset in hours.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                },
                "transmissionreference": {
                    "type": "string"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uniqueid": {
                    "description": "For unique hash:",
                    "type": "string"
                },
                "uno": {
                    "type": "string"
                },
                "urgency": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "usageterms": {
                    "type": "string"
                },
                "usepanoramaviewer": {
                    "description": "GPano-related fields. A handful of these have been deprecated due to\na change in the spec since its initial design.",
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "webstatement": {
                    "type": "string"
                },
                "whitebalance": {
                    "format": "int32",
                    "type": "integer"
                },
                "whitepoint": {
                    "format": "float",
                    "type": "number"
                },
                "width": {
                    "description": "width and height are before any rotation (including EXIF orientation).",
                    "format": "int32",
                    "type": "integer"
                },
                "xmp4c": {
                    "$ref": "PhotosFourCMetadata"
                },
                "xresolution": {
                    "format": "float",
                    "type": "number"
                },
                "ycbcrcoefficients": {
                    "format": "float",
                    "type": "number"
                },
                "ycbcrpositioning": {
                    "format": "int32",
                    "type": "integer"
                },
                "ycbcrsubsampling": {
                    "format": "int32",
                    "type": "integer"
                },
                "yresolution": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAbuseData": {
            "description": "Abuse information about an item or collection. Note that some abusive\nobjects may be filtered entirely from results.\nOnce the appeal is approved the AbuseData will be removed.",
            "id": "PhotosMediaClientAbuseData",
            "properties": {
                "appealStatus": {
                    "description": "Appeal status (http://go/lightbox-abuse-appeal)",
                    "enum": [
                        "UNKNOWN_APPEAL_STATUS",
                        "NONE",
                        "APPEALED",
                        "REJECTED"
                    ],
                    "enumDescriptions": [
                        "Unknown appeal status.",
                        "No appeal has been made.",
                        "Appeal sent to AbuseIAm.",
                        "Appeal sent and rejected."
                    ],
                    "type": "string"
                },
                "evaluation": {
                    "description": "Evaluations relevant to this verdict.",
                    "items": {
                        "$ref": "PhotosMediaClientAbuseEvaluation"
                    },
                    "type": "array"
                },
                "takedownState": {
                    "enum": [
                        "UNKNOWN_TAKEDOWN_STATE",
                        "GLOBAL_TAKEDOWN",
                        "REGION_TAKEDOWN"
                    ],
                    "enumDescriptions": [
                        "",
                        "The object is globally taken down for abuse. It will only be returned\nto owners of the object.",
                        "The object is taken down for abuse in specific regions. For non-owners\nin affected regions, only the minimal fields required to notify the\nviewer of the takedown will be returned. These fields are:\n\nitem.id\n{photo/video}.legacy_id\n{photo/video}.image_properties.{width/height}\nmetadata.owner\nmetadata.collection\n\nMediaService determines the region of the viewer by using\nLocationContext in the RPC side channel; clients who do not set this\nwill never see REGION_TAKEDOWN."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAbuseEvaluation": {
            "description": "This is after abuseiam.Evaluation. Used to explain the abuse verdict.",
            "id": "PhotosMediaClientAbuseEvaluation",
            "properties": {
                "abuseType": {
                    "description": "LINT.ThenChange(//depot/google3/java/com/google/photos/media/client/\\\n   adapter/CommonAdapter.java)",
                    "enum": [
                        "UNKNOWN_ABUSE_TYPE",
                        "COPYRIGHT",
                        "LEGAL",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Legal abuse type that is copyright abuse",
                        "Non-copyright legal abuse types",
                        ""
                    ],
                    "type": "string"
                },
                "appealable": {
                    "description": "Flag to indicate if the takedown could be appealed or not.\n(http://go/lightbox-abuse-appeal)",
                    "type": "boolean"
                },
                "detailsUrl": {
                    "description": "IGNORE_COPYRIGHT: This is a false positive, http://go/ignore-copyright\nFor COPYRIGHT this is the URL of the \"View the details of this notice here\"\nlink. See http://doc/1P-ooFBou81Trdcqb8ZaJFRns9BuKsIoM7l3WmTe8nT0",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientActorCounters": {
            "description": "Counts of objects owned by an actor.",
            "id": "PhotosMediaClientActorCounters",
            "properties": {
                "numItems": {
                    "description": "Total number of user-visible media items in the Actor's account.\nThis will include photos and videos and may include audio items if they\nare surfaced in the interface.\nIf not populated, do not show this count.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientActorCountersMask": {
            "id": "PhotosMediaClientActorCountersMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientActorId": {
            "description": "Identifies an Actor\n\nIf both media_key and obfuscated_gaia_id are set, they MUST refer to exactly\nthe same actor.",
            "id": "PhotosMediaClientActorId",
            "properties": {
                "mediaKey": {
                    "type": "string"
                },
                "obfuscatedGaiaId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientActorOptions": {
            "description": "Options to use when rendering MediaActors.",
            "id": "PhotosMediaClientActorOptions",
            "properties": {
                "formatPhoneNumbers": {
                    "description": "If true, when any \"display\" field in MediaActor contains an E.164 phone\nnumber, instead the phone number will be formatted into a more\nuser-readable format. Example fields affected include\nUserProfile.display_name and display_contact_method.\n\nSee http://b/29335252 for background.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientActorRef": {
            "description": "Reference to an actor. Typical examples would be the owner of a collection or\nitem, a person tagged in a photo or a person invited to an event.\nDefining a message will allow additional information to be added, such as\na description of the relationship or the index of the person in the query\nresult array.",
            "id": "PhotosMediaClientActorRef",
            "properties": {
                "actorId": {
                    "description": "id of the referenced media actor",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientActorRefMask": {
            "id": "PhotosMediaClientActorRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAllowedAction": {
            "description": "Define the actions that a user may perform on an item or collection. The\nintended use of this is to provide enough information to front-ends to allow\nthem to enable the proper UI elements for an item. For example, if an item\nhas SHARE as an allowed action, a front-end might want to show a share button\nfor the item.\n\nThe presence of an Action should be treated as a strong _hint_ that the user\nwill most likely be able to perform the action. It is not, however, a\ndefinitive statement or an authorization for the user to do something. When\ncomputing the set of actions to return, media-service may skip expensive\noperations that might be necessary to provide a definitive answer.\n\nThe _absence_ of an Action, however, is a definitive statement that either\nthe Action is not allowed for the item or collection, or that the user does\nnot have permission to perform the Action.",
            "id": "PhotosMediaClientAllowedAction",
            "properties": {
                "action": {
                    "enum": [
                        "UNKNOWN_ACTION",
                        "COPY",
                        "SHARE",
                        "RESHARE",
                        "DELETE",
                        "EDIT",
                        "PLUS_ONE",
                        "COMMENT",
                        "COMMENT_ON_ENVELOPE",
                        "ADD_HEART_TO_ENVELOPE",
                        "BOOKMARK",
                        "DOWNLOAD",
                        "PGC_DOWNLOAD",
                        "NAMETAG",
                        "ADD_CONTENT",
                        "VIEW_BEST",
                        "SHARE_BEST",
                        "MOVE",
                        "UPDATE_HIGHLIGHTED_STATUS",
                        "SET_COLLECTION_COVER_ITEM",
                        "SET_AS_COVER_ITEM",
                        "APPLY_FILTERS",
                        "AUTO_ENHANCE",
                        "ADD_TO_ENVELOPE",
                        "ADD_TO_LIBRARY",
                        "GET_OR_ADD_TO_ENVELOPE",
                        "EDIT_COLLECTION_TITLE",
                        "JOIN_COLLECTION",
                        "PIN_COLLECTION",
                        "ADD_RECIPIENTS_TO_COLLECTION",
                        "REMOVE_FROM_COLLECTION",
                        "EDIT_ITEM_TIMESTAMP",
                        "EDIT_ITEM_DESCRIPTION",
                        "REORDER_ITEMS",
                        "EDIT_AUDIENCE",
                        "EDIT_ITEM_LOCATION",
                        "SET_MOTION_STATE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Copy the object to the user's account",
                        "Share the object with other users into a _new_ collection.",
                        "Reshare the object with other users, without modifying any collections.\nCurrently implemented by resharing the object's underlying ASBE\nactivity.",
                        "Delete the object",
                        "Edit the object. See also APPLY_FILTERS below.",
                        "Plus-One the object",
                        "Add a comment to the object",
                        "Comment on an envelope collection, or an item in an envelope.",
                        "Add a heart to an envelope collection or an item in an envelope.",
                        "Manipulate a bookmark on the object -- add, remove, hide, unhide",
                        "Download the object in legacy products (e.g. G+, PWA)",
                        "Download the object in PGC",
                        "Tag other users onto the object",
                        "Add content (items, collections, etc.) to the object",
                        "The object contains viewable best content. This action may not be\navailable if, for example, all content is low quality and thus there is\nno best content to view.",
                        "The object contains shareable best content.",
                        "The object can be moved from its current collection to another\ncollection owned by the user.",
                        "Promote or demote an item from highlights.",
                        "The collection allows a MediaItem to be specified as the \"cover\" item.\nThis is only valid for collections.\nSetting a cover item for a collection does not necessarily affect the\ncollection's highlights.",
                        "This item is allowed to be set as a cover item for its containing\ncollection. This is only valid for items.",
                        "This allows non-destructive edits like edit-lists to be set on items.\n(EDIT is for destructive edits, this is for non-destructive edits.)\nNote: Only applies to items.",
                        "This allows auto enhance to be set (or reverted) on items.",
                        "This is an object that the user can add to an envelope.",
                        "This is an object that has been shared with the user; the user can copy\nthis object into his or her own library.",
                        "This is an object that the user can add to an envelope or fetch an\nexisting envelope for.",
                        "The user is allowed to edit the title of the collection.",
                        "The user is allowed to join the collection.",
                        "The user is allowed to pin the collection to their collections view.",
                        "The user is allowed to add more recipients to the collection.",
                        "The user is allowed to remove the object, i.e. delete the copy in the\ncurrent collection while ensuring that a copy exists in her library.",
                        "Edit the timestamp of an item.",
                        "Edit an item's description.",
                        "Reorder the items in a collection.",
                        "Edit the audience of a collection.",
                        "Edit the location of an item.",
                        "Set the motion state of a motion photo. See go/motion-photo-toggle-be."
                    ],
                    "type": "string"
                },
                "signedInRequired": {
                    "description": "If true then viewer must be signed into to a Gaia account in order to\nperform the action. This bit can be by clients to show things like\n\"Sign In to <action>\"\nNote that this will still be returned if the user is signed in.",
                    "type": "boolean"
                },
                "validNameRequired": {
                    "description": "If true then viewer must have a valid display name in order to perform\nthe action.\nNote that this will still be returned if the user has a valid name. See\nUserProfile.display_name_status to check if a user's name is valid.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAllowedActionMask": {
            "id": "PhotosMediaClientAllowedActionMask",
            "properties": {
                "allowedActionOptions": {
                    "$ref": "PhotosMediaClientAllowedActionOptions",
                    "description": "Options determining how AllowedActions are calculated."
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAllowedActionOptions": {
            "description": "Options determining how AllowedActions are calculated.",
            "id": "PhotosMediaClientAllowedActionOptions",
            "properties": {
                "checkViewerItemsForAddToLibrary": {
                    "description": "If true, we will check viewer items for duplicates before adding an\nADD_TO_LIBRARY AllowedAction for each item. This will incur an additional\nlatency cost.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotation": {
            "description": "Client visible annotation data structures.\nThese are closely mirroring annotations as defined at\nhttp://go/mediaservice-annotations",
            "id": "PhotosMediaClientAnnotation",
            "properties": {
                "allowedActions": {
                    "description": "Actions the viewer may perform on this Annotation",
                    "enumDescriptions": [
                        "",
                        "User may delete the Annotation",
                        "User may reject suggested Subjects",
                        "User may reject suggested Subjects",
                        "User may set the Subject for this annotation.",
                        "User may suggest this annotation as a profile photo for the subject"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_ACTION",
                            "DELETE_ANNOTATION",
                            "APPROVE_SUGGESTION",
                            "REJECT_SUGGESTION",
                            "SET_SUBJECT",
                            "SUGGEST_FOR_PROFILE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "faceTag": {
                    "$ref": "PhotosMediaClientFaceTag",
                    "description": "Exactly one of the following messages will be populated according to the\nvalue of Annotation.type"
                },
                "id": {
                    "$ref": "PhotosMediaClientAnnotationId",
                    "description": "Unique identifier for the Annotation"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_ANNOTATION_TYPE",
                        "FACE_TAG"
                    ],
                    "enumDescriptions": [
                        "",
                        "Associate a region of a photo with a 'face-having-being'\n(person, pet, etc.)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationAllowedActionMask": {
            "id": "PhotosMediaClientAnnotationAllowedActionMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationId": {
            "description": "Identifier for an Annotation\nAt least one of id and legacy_shape_id may be populated\nIf both id and legacy_shape_id are populated they MUST refer to the same\nobject.",
            "id": "PhotosMediaClientAnnotationId",
            "properties": {
                "id": {
                    "description": "globally unique id for this annotation.\nopaque, web-safe encoded string",
                    "type": "string"
                },
                "legacyShapeId": {
                    "$ref": "PhotosMediaClientAnnotationIdLegacyShapeId"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationIdLegacyShapeId": {
            "description": "Legacy shape-id provided for interoperation with PhotoService.",
            "id": "PhotosMediaClientAnnotationIdLegacyShapeId",
            "properties": {
                "obfuscatedUserId": {
                    "type": "string"
                },
                "photoId": {
                    "format": "uint64",
                    "type": "string"
                },
                "shapeId": {
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationIdMask": {
            "id": "PhotosMediaClientAnnotationIdMask",
            "properties": {
                "legacyShapeId": {
                    "$ref": "PhotosMediaClientAnnotationIdMaskLegacyShapeIdMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationIdMaskLegacyShapeIdMask": {
            "id": "PhotosMediaClientAnnotationIdMaskLegacyShapeIdMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationMask": {
            "id": "PhotosMediaClientAnnotationMask",
            "properties": {
                "allowedActions": {
                    "$ref": "PhotosMediaClientAnnotationAllowedActionMask"
                },
                "faceTag": {
                    "$ref": "PhotosMediaClientFaceTagMask"
                },
                "id": {
                    "$ref": "PhotosMediaClientAnnotationIdMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationSubject": {
            "description": "The subject of a tag.\nOther types of subjects may be added in the future",
            "id": "PhotosMediaClientAnnotationSubject",
            "properties": {
                "actor": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "populated if type is ACTOR"
                },
                "email": {
                    "description": "populated if type is EMAIL",
                    "type": "string"
                },
                "tagger": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "The actor that specified the subject.\nWill be empty if the subject was set by the system without user action."
                },
                "text": {
                    "description": "populated if type if TEXT",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_SUBJECT_TYPE",
                        "ACTOR",
                        "EMAIL",
                        "TEXT"
                    ],
                    "enumDescriptions": [
                        "",
                        "MediaActor. ActorId will be populated",
                        "E-mail address. email will be populated",
                        "Free-form text string"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationSubjectCluster": {
            "description": "A cluster of Annotations that are believed to represent the same subject.\nThe intended use is for bulk face-tagging - each AnnotationSubjectCluster\nwill contain one or more annotations that are believed to represent the same\nface, and suggested_subject will contain zero or more suggested subjects for\nthe face.",
            "id": "PhotosMediaClientAnnotationSubjectCluster",
            "properties": {
                "annotationIds": {
                    "description": "The annotations in the cluster.",
                    "items": {
                        "$ref": "PhotosMediaClientAnnotationId"
                    },
                    "type": "array"
                },
                "suggestedAnnotationSubjects": {
                    "description": "Suggested subjects.",
                    "items": {
                        "$ref": "PhotosMediaClientAnnotationSubject"
                    },
                    "type": "array"
                },
                "suggestedSubjects": {
                    "description": "Suggested subjects.\nDEPRECATED - use suggested_annotation_subjects instead",
                    "items": {
                        "$ref": "PhotosMediaClientSuggestedAnnotationSubject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationSubjectClusterMask": {
            "id": "PhotosMediaClientAnnotationSubjectClusterMask",
            "properties": {
                "annotation": {
                    "$ref": "PhotosMediaClientAnnotationMask"
                },
                "suggestedSubject": {
                    "$ref": "PhotosMediaClientAnnotationSubjectMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationSubjectMask": {
            "id": "PhotosMediaClientAnnotationSubjectMask",
            "properties": {
                "actor": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "tagger": {
                    "$ref": "PhotosMediaClientActorRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotations": {
            "description": "Annotations attached to a MediaItem.",
            "id": "PhotosMediaClientAnnotations",
            "properties": {
                "annotation": {
                    "description": "Contains the annotations attached to the item.",
                    "items": {
                        "$ref": "PhotosMediaClientAnnotation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAnnotationsMask": {
            "id": "PhotosMediaClientAnnotationsMask",
            "properties": {
                "annotation": {
                    "$ref": "PhotosMediaClientAnnotationMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientArchiveInfo": {
            "description": "Stores the current archive state of the item.\nSee go/photos-archive-backend for details.",
            "id": "PhotosMediaClientArchiveInfo",
            "properties": {
                "archiveState": {
                    "enum": [
                        "UNKNOWN_ARCHIVE_STATE",
                        "ARCHIVED",
                        "NOT_ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The item is currently marked as archived.",
                        "The item is currently marked as not archived."
                    ],
                    "type": "string"
                },
                "archiveSuggestion": {
                    "$ref": "PhotosMediaClientArchiveSuggestion",
                    "description": "If unset, photo has not been suggested for archiving. If set, photo was\nsuggested and possibly acted upon by the user, indicated by the state\ncontained within. Note: Suggestion state is initial state when user acted\non it, e.g. archive_suggestion may have been accepted but later unarchived."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientArchiveInfoMask": {
            "id": "PhotosMediaClientArchiveInfoMask",
            "properties": {
                "archiveSuggestion": {
                    "$ref": "PhotosMediaClientArchiveInfoMaskArchiveSuggestionMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientArchiveInfoMaskArchiveSuggestionMask": {
            "id": "PhotosMediaClientArchiveInfoMaskArchiveSuggestionMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientArchiveSuggestion": {
            "description": "Stores the archive suggestion of the item.\nSee go/photos-archive-mi for details.\nLINT.IfChange",
            "id": "PhotosMediaClientArchiveSuggestion",
            "properties": {
                "category": {
                    "description": "required",
                    "enum": [
                        "UNKNOWN_CATEGORY",
                        "BUSINESS_CARD",
                        "DOCUMENT",
                        "IDS",
                        "MEME",
                        "PASSPORT",
                        "RECEIPT",
                        "SCREENSHOT",
                        "WHITEBOARD",
                        "PRODUCT",
                        "PERSONALIZED",
                        "MENU",
                        "NEWSPAPER",
                        "POST_IT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "IDS refers to driver's licenses, id cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PRODUCT refers to product labels.",
                        "PERSONALIZED archive suggestions are made by the account-based predictor.\ngo/photos-archive-personalization",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "score": {
                    "description": "required",
                    "format": "float",
                    "type": "number"
                },
                "state": {
                    "description": "Unset means suggestion is pending.",
                    "enum": [
                        "UNKNOWN_STATE",
                        "ACCEPTED",
                        "REJECTED",
                        "DEFERRED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Suggestions to be looked at again some time in the future."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssistantMessageRef": {
            "description": "A reference to an Assistant message. For example, this is used to identify\nwhat Assistant message (card) that an item belongs to.",
            "id": "PhotosMediaClientAssistantMessageRef",
            "properties": {
                "assistantMessageId": {
                    "description": "ID of the referenced Assistant message.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssistantMessageRefMask": {
            "id": "PhotosMediaClientAssistantMessageRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssistantSettings": {
            "description": "Settings for the Photos assistant view.",
            "id": "PhotosMediaClientAssistantSettings",
            "properties": {
                "cardSettings": {
                    "items": {
                        "$ref": "PhotosMediaClientAssistantSettingsCardSettings"
                    },
                    "type": "array"
                },
                "creationsMigratedToSyncTimestampMs": {
                    "description": "Timestamp of when the user started using a client that supports\nrendering the Creation Assistant cards off of PhotosSyncUserMedia (as\nopposed to GUNS). Examples of Creations are animations, collages, and\nmovies.",
                    "format": "int64",
                    "type": "string"
                },
                "newestViewedAssistantMessageSortTimestampMs": {
                    "description": "Sort timestamp of the newest AssistantMessage (card) that the user has\nviewed in the Assistant. The Assistant badge count can be calculated by\ncounting the number of AssistantMessages that have a sort timestamp\ngreater than this value.\nClients should store their own local copy of this value and update it\nas follows:\n  - When the user views the assistant, set the local copy to the largest\n    sort_timestamp_ms across all cards (i.e. the sort timestamp of the\n    most recent card) iff the value of the local copy is smaller.\n  - Overwrite the local copy with the value from the server if the value\n    from the server is greater than that of the local copy (i.e. the user\n    last viewed the Assistant from another client).\n  - Clear the local copy if the value of the server is -1. This is\n    intended to be used for emergency purposes, e.g. a bad card causes\n    the local copy to be set to an obscenely large value.",
                    "format": "int64",
                    "type": "string"
                },
                "newestViewedForYouMessageSortTimestampMs": {
                    "description": "Sort timestamp of the newest AssistantMessage (card) that the user has\nviewed in the \"For You\" view. The \"For You\" view badge count can be\ncalculated by counting the number of AssistantMessages in the \"For You\"\nview that have a sort timestamp greater than this value.\nSee go/photos-for-you for more details about the \"For You\" view.\nClients should use this value in a similar fashion as\nnewest_viewed_assistant_message_sort_timestamp_ms.",
                    "format": "int64",
                    "type": "string"
                },
                "newestViewedUtilityMessageSortTimestampMs": {
                    "description": "Sort timestamp of the newest AssistantMessage (card) that the user has\nviewed in the Utility view. The Utility view badge count can be\ncalculated by counting the number of AssistantMessages in the Utility\nview that have a sort timestamp greater than this value.\nSee go/photos-for-you for more details about the Utility view.\nClients should use this value in a similar fashion as\nnewest_viewed_assistant_message_sort_timestamp_ms.",
                    "format": "int64",
                    "type": "string"
                },
                "smartAlbumsMigratedToSyncTimestampMs": {
                    "description": "Timestamp of when the user started using a client that supports\nrendering the Smart Album Assistant cards off of PhotosSyncUserMedia (as\nopposed to GUNS).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssistantSettingsCardSettings": {
            "description": "Per-card-type settings. Only add settings here if they apply to all cards\nof a particular type (or at least the vast majority).",
            "id": "PhotosMediaClientAssistantSettingsCardSettings",
            "properties": {
                "cardType": {
                    "enum": [
                        "UNKNOWN_CARD_TYPE",
                        "TIME_MACHINE",
                        "SUGGESTED_SHARE",
                        "PEOPLE_MACHINE",
                        "RECENT_HIGHLIGHTS",
                        "REDISCOVER_YOUR_MEMORIES",
                        "SUGGESTED_ROTATION",
                        "SUGGESTED_ARCHIVE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Originally intended to control both people machine features.\nWe decided to have 2 separate controls given the differing nature\nof the two features. See the next two settings.",
                        "User setting to control display of assistant cards with template\nPEOPLE_MACHINE_RECENT_HIGHLIGHTS which are cards surfacing recent\nhighlight photos about a single person cluster on the user's account.",
                        "User setting to control display of assistant cards with template\nPEOPLE_MACHINE_REDISCOVER_YOUR_MEMORIES which are cards surfacing\nphotos of 2 (or in future more?) person clusters on the user's\naccount together throughout the time.",
                        "User setting to control the display of assistant cards with template\nROTATION_SUGGESTION_CREATED which are cards surfacing a set of photos\nwith a suggested amount of rotation to be applied to make them upright.",
                        "User setting to control the display of assistant cards with template\nARCHIVE_SUGGESTION which are cards surfacing a set of photos with a\nsuggestion to archive the photo."
                    ],
                    "type": "string"
                },
                "cardVisibility": {
                    "enum": [
                        "UNKNOWN_CARD_VISIBILITY",
                        "UNSET",
                        "VISIBLE",
                        "HIDDEN"
                    ],
                    "enumDescriptions": [
                        "Unknown visibility (for backwards compatibility).",
                        "The user has not yet specified a visibility for the card type.",
                        "The user has allowed cards of this type to be visible.",
                        "The user has disallowed cards of this type to be visible."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssistantSettingsMask": {
            "id": "PhotosMediaClientAssistantSettingsMask",
            "properties": {
                "cardSettings": {
                    "$ref": "PhotosMediaClientAssistantSettingsMaskCardSettingsMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssistantSettingsMaskCardSettingsMask": {
            "id": "PhotosMediaClientAssistantSettingsMaskCardSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociatedMedia": {
            "description": "Holds additional media returned in the MediaItem.",
            "id": "PhotosMediaClientAssociatedMedia",
            "properties": {
                "associatedMediaType": {
                    "description": "Describes the type of associated media.",
                    "enum": [
                        "UNKNOWN",
                        "PHODEO"
                    ],
                    "enumDescriptions": [
                        "",
                        "This MediaItem represents a Phodeo, which should behave primarily as a\nPhoto, but still contain Video data to be used when triggered by the\nuser. This Video data should be stored in the video field below.\nSee go/phodeo for details."
                    ],
                    "type": "string"
                },
                "compactWarpGridWrapper": {
                    "$ref": "PhotosMediaClientAssociatedMediaCompactWarpGridWrapper",
                    "description": "Compact warp grids that allow clients to apply the same nonlinear transform\napplied by Photos Backend to a Phodeo's video frame at the still image\ntimestamp to the Phodeo's still image. This is needed for animating a zoom\ntransition between a Phodeo's still and backend-stabilized video.\n\nThis field is only relevant when AssociatedMediaType == PHODEO."
                },
                "downloadUrlWithAssociatedMedia": {
                    "description": "Download URL that points to a .zip file containing the primary media\ncomponent as well as all its associated media.",
                    "type": "string"
                },
                "motionState": {
                    "description": "Settings defining how a motion photo should be played by default when\nviewed. This field is only relevant for AssociatedMediaType == PHODEO.",
                    "enum": [
                        "UNKNOWN_MOTION_STATE",
                        "MOTION_OFF",
                        "MOTION_LOOPING"
                    ],
                    "enumDescriptions": [
                        "",
                        "Motion should not be played by default.",
                        "Motion should play and loop by default."
                    ],
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "UNKNOWN_ASSOCIATED_MEDIA_STATUS",
                        "INCONSISTENT",
                        "FULLY_CONSISTENT"
                    ],
                    "enumDescriptions": [
                        "",
                        "The AssociatedMedia is not consistent with the primary media.\nThis is indicative of an edited motion photo where the edits were only\napplied to the photo (or editlist) and not the video component.\nIn this case, the video should be hidden from the user.",
                        "The AssociatedMedia is fully consistent with the primary media.\nThis is indicative of either an unedited motion photo or a motion photo\nthat has had the edits applied to both the photo/editlist and the video.\nIn this case, the video can be shown to the user."
                    ],
                    "type": "string"
                },
                "stillImageTimestampMs": {
                    "description": "Still image timestamp in milliseconds, if any. Currently only populated for\nAssociatedMediaType.PHODEO.",
                    "format": "int64",
                    "type": "string"
                },
                "video": {
                    "$ref": "PhotosMediaClientVideo",
                    "description": "Associated video data, if any. Currently only populated for\nAssociatedMediaType.PHODEO."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociatedMediaCompactWarpGrid": {
            "description": "Represents a compact warp grid generated by the backend video stabilizer\nthat can be applied by the client to unstabilized video or the\ncorresponding still taken at presentation_timestamp_microseconds to\nstabilize the video or image.",
            "id": "PhotosMediaClientAssociatedMediaCompactWarpGrid",
            "properties": {
                "affineTransform": {
                    "$ref": "PhotosMediaClientAssociatedMediaCompactWarpGridAffineTransform",
                    "description": "The best affine transform approximating the grid warp."
                },
                "gridDimX": {
                    "description": "Grid width in pixels.",
                    "format": "int32",
                    "type": "integer"
                },
                "gridDimY": {
                    "description": "Grid height in pixels.",
                    "format": "int32",
                    "type": "integer"
                },
                "gridSpacing": {
                    "description": "The grid spacing of the CompactWarpGrid in pixels.",
                    "format": "int32",
                    "type": "integer"
                },
                "normalizedSamplingPositions": {
                    "description": "Half-precision floats, in bytes, representing the mapping texture values,\nin the correct order for passing into OpenGL glTexImage2D data parameter.\nEach grid cell requires 2 vectors * 2 bytes, i.e., 4 bytes of storage,\nand there are grid_dim_x * grid_dim_y grid cells, so there be should be\n4 * grid_dim_x * grid_dim_y bytes stored in this field.",
                    "format": "byte",
                    "type": "string"
                },
                "presentationTimestampMicros": {
                    "description": "The presentation timestamp in microseconds corresponding to the frame\nfor which this CompactWarpGrid is applicable.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociatedMediaCompactWarpGridAffineTransform": {
            "description": "Stores an affine transform in its linear and translational\ncomponents. The linear transform is stored in four coordinates:\n   a  b \nand the translation is stored in two coordinates:\n  [ dx  dy ]\nTo transform a vector [ x  y ] you would apply these components as:\n   a  b     dx  * [   ] +         y ",
            "id": "PhotosMediaClientAssociatedMediaCompactWarpGridAffineTransform",
            "properties": {
                "a": {
                    "format": "float",
                    "type": "number"
                },
                "b": {
                    "format": "float",
                    "type": "number"
                },
                "c": {
                    "format": "float",
                    "type": "number"
                },
                "d": {
                    "format": "float",
                    "type": "number"
                },
                "dx": {
                    "format": "float",
                    "type": "number"
                },
                "dy": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociatedMediaCompactWarpGridWrapper": {
            "description": "Wrapper message for `CompactWarpGrid`.\n\nThis allows mobile clients to use the nano proto APIs to easily serialize\nCompactWarpGrids and store in them in a client database.",
            "id": "PhotosMediaClientAssociatedMediaCompactWarpGridWrapper",
            "properties": {
                "compactWarpGrid": {
                    "description": "Contains CompactWarpGrids that can be used by mobile clients for\nstabilizing an image still in the same way that Photos Backend is\nstabilizing the still's associated stabilized video stream.\n\nAt minimum, a single CompactWarpGrid for the video frame at\nstill_image_timestamp_ms should be included for stabilized Phodeos.\n\nIn the future, this field can be filled with additional CompactWarpGrids,\nin ascending order by presentation_timestamp_microseconds.",
                    "items": {
                        "$ref": "PhotosMediaClientAssociatedMediaCompactWarpGrid"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociatedMediaMask": {
            "id": "PhotosMediaClientAssociatedMediaMask",
            "properties": {
                "compactWarpGrid": {
                    "$ref": "PhotosMediaClientCompactWarpGridMask"
                },
                "video": {
                    "$ref": "PhotosMediaClientVideoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociation": {
            "description": "Define an association between a MediaCollection or MediaItem and an external\nservice. There may be more than one Association defined for any given\nMediaCollection or MediaItem.\nNext id: 10",
            "id": "PhotosMediaClientAssociation",
            "properties": {
                "albumInfo": {
                    "$ref": "PhotosMediaClientAssociationAlbumInfo"
                },
                "driveAlbumInfo": {
                    "$ref": "PhotosMediaClientAssociationDriveAlbumInfo"
                },
                "envelopeInfo": {
                    "$ref": "PhotosMediaClientAssociationEnvelopeInfo"
                },
                "externalId": {
                    "description": "Field for Origins that support simple string identifiers",
                    "type": "string"
                },
                "kindygramAlbumInfo": {
                    "$ref": "PhotosMediaClientAssociationKindygramAlbumInfo"
                },
                "movieInfo": {
                    "$ref": "PhotosMediaClientAssociationMovieInfo"
                },
                "origin": {
                    "enum": [
                        "UNKNOWN_ORIGIN",
                        "INSTANT_UPLOAD",
                        "FROM_DRIVE",
                        "FROM_STREAM",
                        "FROM_CONVERSATIONS",
                        "FROM_GMAIL",
                        "STORY",
                        "FROM_PROFILE",
                        "FROM_SCRAPBOOK",
                        "FROM_BLOGGER",
                        "FROM_BUSINESS_PHOTOS",
                        "MOVIE",
                        "ENVELOPE",
                        "ALBUM",
                        "PUBLISHED_ON_GEO",
                        "PHOTOS_NEXT",
                        "FROM_SCANNER",
                        "FROM_GPLUS_COMMENT",
                        "GEO_TRANSFER_PENDING",
                        "GSA_UNIVERSAL_SERVER_CLIENT",
                        "KINDYGRAM",
                        "PLUS_UNKNOWN",
                        "PLUS_COMMUNITY",
                        "PLUS_COLLEXION",
                        "PLUS_POLL",
                        "PHOTOS_LIBRARY_API",
                        "OFFLINE_SALES_RECEIPTS",
                        "PLUS_REFERENCED_ORIGIN_UNKNOWN",
                        "PLUS_THIRD_PARTY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Collections and Items automatically uploaded from clients",
                        "Collections and Items synced from Google Drive",
                        "Collections and Items associated with a G+ Stream Post",
                        "Collections and Items from RealTime Messaging Conversations\nThe associated Collections and Items will come from both active and\ninactive conversations.",
                        "Collections and Items synced from gmail",
                        "Collections and Items associated with a G+ automatic story.",
                        "Collections and Items associated with the user's profile.",
                        "Collections and Items associated with the G+ photos scrapbook.",
                        "Collections and Items associated with a Blogger account.",
                        "Collections and Items associated with the G+ photos scrapbook owned\nby a verified local plus page.",
                        "Collections and Items associated with Auto Awesome Movies.",
                        "Collections and Items associated with an envelope.",
                        "Collections whose creation was associated with a particular album.",
                        "Collections and Items uploaded to geo via Geo Uploader or Dragonfly\nor via Photos autobackup and then imported to Google Maps.",
                        "Collections and Items which are shown in the Google Photos app / site.",
                        "Items generated by the photo scanner app: http://go/draper-tile",
                        "Collections and Items associated with a G+ Comment",
                        "Items that have a geo rights transfer that is pending or rejected.\nSee: go/svp-rights-transfer",
                        "Items that have been uploaded by GSA Universal Server Clients.\nsee: go/gus",
                        "Kindygram service associations. go/kindygram",
                        "G+ items where we don't know which G+ product they belonged to. These\nentities do not have the updates, profile_photos, or autobackup labels,\nand the social client application indicates they came from GPLUS. One\nexample is photos from Polls.\nBefore the grandfathering flume is finished (b/34314337), we are only\ngoing to use this label for entities created after the GooglePhotos\nlaunch, to avoid wrongly identifying GooglePhotos content as G+.",
                        "G+ items from Communities.\nFor Takeout purposes, the G+ team needs to distinguish between Community\nand other G+ (Polls, Posts, etc) photos and albums. Therefore, we must\ncreate a separate origin for them.",
                        "G+ items from Collexions.\nFor Takeout purposes, the G+ team needs to distinguish between Collexions\nand other G+ (Polls, Posts, etc) photos and albums. Therefore, we must\ncreate a separate origin for them.",
                        "G+ items from Polls (a type of G+ post).",
                        "Photos Library API service associations go/photos-library-api",
                        "Offline Sales Receipts go/receipts-service-design",
                        "Item did not necessarily originate from G+, but has been referenced by a\nG+ post at some point in time.",
                        "Item was uploaded via the G+ 3P API (indicated by photos with upload\napplication id of GPLUS_API_3P that are not copies)"
                    ],
                    "type": "string"
                },
                "photosLibraryApiInfo": {
                    "$ref": "PhotosMediaClientAssociationPhotosLibraryApiInfo"
                },
                "storyInfo": {
                    "$ref": "PhotosMediaClientAssociationStoryInfo"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationAlbumInfo": {
            "description": "Information about the album that the creation of this collection was\nassociated with.",
            "id": "PhotosMediaClientAssociationAlbumInfo",
            "properties": {
                "id": {
                    "$ref": "PhotosMediaClientCollectionId",
                    "description": "The id of the collection for the album."
                },
                "userCreated": {
                    "description": "The album was created by the user before being used to create this\ncollection.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationDriveAlbumInfo": {
            "description": "Information about the original Drive album the object was synced from\nOnly populated when origin = FROM_DRIVE",
            "id": "PhotosMediaClientAssociationDriveAlbumInfo",
            "properties": {
                "driveAlbumId": {
                    "description": "The id of the original Drive album",
                    "type": "string"
                },
                "isRootAlbum": {
                    "description": "True if the origin Drive album was a root album",
                    "type": "boolean"
                },
                "isSegment": {
                    "description": "True if this collection is a segment of the original Drive album.\nThis could occur if the original Drive album had to be divided into\nsmaller collections when it was synced to MediaService",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationEnvelopeInfo": {
            "description": "Information about the envelope this item or collection is associated with.\nOnly populated when origin = ENVELOPE.",
            "id": "PhotosMediaClientAssociationEnvelopeInfo",
            "properties": {
                "id": {
                    "$ref": "PhotosMediaClientCollectionId",
                    "description": "The id of the collection for the envelope."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationKindygramAlbumInfo": {
            "description": "Kindygram-specific album info.\nOnly populated when origin = KINDYGRAM",
            "id": "PhotosMediaClientAssociationKindygramAlbumInfo",
            "properties": {
                "kindygramAlbumType": {
                    "description": "Album type.",
                    "enum": [
                        "UNKNOWN_KINDYGRAM_ALBUM_TYPE",
                        "LIBRARY",
                        "STREAM",
                        "STUDENT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Album of photos taken by a teacher.",
                        "Album of photos for a post viewable by guardians.",
                        "Album of photos shared with the family of a particular student."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMask": {
            "id": "PhotosMediaClientAssociationMask",
            "properties": {
                "albumInfo": {
                    "$ref": "PhotosMediaClientAssociationMaskAlbumInfoMask"
                },
                "driveAlbumInfo": {
                    "$ref": "PhotosMediaClientAssociationMaskDriveAlbumInfoMask"
                },
                "envelopeInfo": {
                    "$ref": "PhotosMediaClientAssociationMaskEnvelopeInfoMask"
                },
                "kindygramAlbumInfo": {
                    "$ref": "PhotosMediaClientAssociationMaskKindygramAlbumInfoMask"
                },
                "movieInfo": {
                    "$ref": "PhotosMediaClientAssociationMaskMovieInfoMask"
                },
                "photosLibraryApiInfo": {
                    "$ref": "PhotosMediaClientAssociationMaskPhotosLibraryApiInfoMask"
                },
                "storyInfo": {
                    "$ref": "PhotosMediaClientAssociationMaskStoryInfoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMaskAlbumInfoMask": {
            "id": "PhotosMediaClientAssociationMaskAlbumInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMaskDriveAlbumInfoMask": {
            "id": "PhotosMediaClientAssociationMaskDriveAlbumInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMaskEnvelopeInfoMask": {
            "id": "PhotosMediaClientAssociationMaskEnvelopeInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMaskKindygramAlbumInfoMask": {
            "id": "PhotosMediaClientAssociationMaskKindygramAlbumInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMaskMovieInfoMask": {
            "id": "PhotosMediaClientAssociationMaskMovieInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMaskPhotosLibraryApiInfoMask": {
            "id": "PhotosMediaClientAssociationMaskPhotosLibraryApiInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMaskStoryInfoMask": {
            "id": "PhotosMediaClientAssociationMaskStoryInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationMovieInfo": {
            "description": "Information about the movie media project that this item or collection is\nassociated with. Only populated when origin = MOVIE and a backing media\nproject exists.",
            "id": "PhotosMediaClientAssociationMovieInfo",
            "properties": {
                "id": {
                    "$ref": "PhotosMediaClientCollectionId",
                    "description": "The id of the collection for the movie."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationPhotosLibraryApiInfo": {
            "description": "Information for Photos Library API.",
            "id": "PhotosMediaClientAssociationPhotosLibraryApiInfo",
            "properties": {
                "projectId": {
                    "description": "IDs of the projects associated with the item.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAssociationStoryInfo": {
            "description": "Information about the story that this item or collection is associated\nwith.  Only populated when origin = STORY.",
            "id": "PhotosMediaClientAssociationStoryInfo",
            "properties": {
                "id": {
                    "$ref": "PhotosMediaClientCollectionId",
                    "description": "The id of the collection for the story."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudience": {
            "description": "Specify permissions on an object in media-service.\nThe most general specification is the AUDIENCE_TYPE enum, used for\nspecifying read access. In the future more detailed information will be\nprovided - e.g. a 'safe' summary of the users who have each permission,\nwith privacy information stripped.",
            "id": "PhotosMediaClientAudience",
            "properties": {
                "audienceType": {
                    "description": "Specifies who has read access to the object.",
                    "enum": [
                        "UNKNOWN_AUDIENCE_TYPE",
                        "AUDIENCE_OWNER_ONLY",
                        "AUDIENCE_LIMITED",
                        "AUDIENCE_ALL_PERSONAL_CIRCLES",
                        "AUDIENCE_EXTENDED_CIRCLES",
                        "AUDIENCE_DOMAIN_PUBLIC",
                        "AUDIENCE_PUBLIC"
                    ],
                    "enumDescriptions": [
                        "",
                        "Accessible only to the owner.",
                        "Accessible to users other than owner (includes unlisted).",
                        "Accessible to owner's personal circle members.",
                        "Accessible to owner's extended circle members.",
                        "Accessible to everyone within domain.",
                        "Accessible to everyone."
                    ],
                    "type": "string"
                },
                "membersCanAddContent": {
                    "description": "If true, non-privileged members who have access to the object can add\ncontent to the object.\n\nNote that this boolean should be used to determine whether this property\nof the collection is currently enabled. To determine whether the current\nviewer can actually add items, use AllowedActions instead.",
                    "type": "boolean"
                },
                "membersCanExpand": {
                    "description": "If true, non-privileged members who have access to the object can make\nthe object visible to more non-privileged members. For example, an album\nwith a true value can be reshared by non-album-owners.\n\nNote that this boolean should be used to determine whether this property\nof the album is currently enabled. To determine whether the current viewer\ncan actually make the object more visible, use AllowedActions instead.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudienceMask": {
            "id": "PhotosMediaClientAudienceMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudio": {
            "description": "Data specific to audio files, to be used in query responses.",
            "id": "PhotosMediaClientAudio",
            "properties": {
                "audioProperties": {
                    "$ref": "PhotosMediaClientAudioProperties",
                    "description": "Properties about the audio content.\nWill not be available until the video is in a playable state."
                },
                "downloadUrl": {
                    "description": "A download url which will be handled by scotty and our download agent.\nIt will contain a signed time-out parameter.",
                    "type": "string"
                },
                "failureReason": {
                    "enum": [
                        "UNKNOWN_FAILURE_REASON",
                        "TRANSCODING_FAILED",
                        "QUOTA_UNAVAILABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "All transcodes for the audio failed.",
                        "The user's account is over quota or this audio will cause the account to\ngo over quota."
                    ],
                    "type": "string"
                },
                "processingStatus": {
                    "enum": [
                        "UNKNOWN_AUDIO_PROCESSING_STATUS",
                        "UPLOADING",
                        "PROCESSING",
                        "PLAYABLE",
                        "FAILED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The audio is being uploaded.",
                        "The audio is being processed.",
                        "The audio is playable.",
                        "The audio failed processing. Use failure_reason to get the exact cause\nof failure."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudioMask": {
            "id": "PhotosMediaClientAudioMask",
            "properties": {
                "audioProperties": {
                    "$ref": "PhotosMediaClientAudioPropertiesMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudioProperties": {
            "description": "Information on how to play a single audio item.",
            "id": "PhotosMediaClientAudioProperties",
            "properties": {
                "audioStream": {
                    "description": "Playable streams for the audio item.",
                    "items": {
                        "$ref": "PhotosMediaClientAudioPropertiesAudioStream"
                    },
                    "type": "array"
                },
                "durationMs": {
                    "description": "Duration of the audio in milliseconds.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudioPropertiesAudioStream": {
            "description": "A single playable audio stream.",
            "id": "PhotosMediaClientAudioPropertiesAudioStream",
            "properties": {
                "formatId": {
                    "description": "see ContentHeader.VideoFormat (video/storage/proto/content_header.proto)",
                    "format": "int32",
                    "type": "integer"
                },
                "url": {
                    "description": "Streamer url. Can contain a timeout (stop streaming after a certain\ntime).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudioPropertiesMask": {
            "id": "PhotosMediaClientAudioPropertiesMask",
            "properties": {
                "audioStream": {
                    "$ref": "PhotosMediaClientAudioPropertiesMaskAudioStreamMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAudioPropertiesMaskAudioStreamMask": {
            "id": "PhotosMediaClientAudioPropertiesMaskAudioStreamMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAddClusterInfo": {
            "description": "Info about an auto-add cluster associated with this collection for the\ncurrent viewer. Items associated with these clusters are automatically added\nto this collection. See go/photos-be-live-albums.",
            "id": "PhotosMediaClientAutoAddClusterInfo",
            "properties": {
                "clusterRef": {
                    "$ref": "PhotosMediaClientClusterRef"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAddClusterInfoMask": {
            "id": "PhotosMediaClientAutoAddClusterInfoMask",
            "properties": {
                "clusterRef": {
                    "$ref": "PhotosMediaClientClusterRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAddNotificationSettingsMask": {
            "id": "PhotosMediaClientAutoAddNotificationSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAddSettings": {
            "description": "Information related to the Live Albums feature, where photos are\nautomatically added to a collection. See go/photos-be-live-albums.",
            "id": "PhotosMediaClientAutoAddSettings",
            "properties": {
                "autoAddClusterInfo": {
                    "description": "Items associated with these clusters will be automatically added to the\ncollection.",
                    "items": {
                        "$ref": "PhotosMediaClientAutoAddClusterInfo"
                    },
                    "type": "array"
                },
                "autoAddNotificationSettings": {
                    "$ref": "PhotosMediaClientAutoAddSettingsAutoAddNotificationSettings",
                    "description": "Information about auto-add notification settings for a collection, such as\nwhether the user has notifications enabled or not."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAddSettingsAutoAddNotificationSettings": {
            "id": "PhotosMediaClientAutoAddSettingsAutoAddNotificationSettings",
            "properties": {
                "notificationSetting": {
                    "description": "Indicates whether the user has auto-add notifications turned on or off\nfor the album.",
                    "enum": [
                        "UNKNOWN_NOTIFICATION_SETTING",
                        "ENABLED",
                        "DISABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user will receive notifications when photos are automatically added\nto the collection.",
                        "The user won't receive any notifications regarding automatically-added\nphotos."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAddSettingsMask": {
            "id": "PhotosMediaClientAutoAddSettingsMask",
            "properties": {
                "autoAddClusterInfo": {
                    "$ref": "PhotosMediaClientAutoAddClusterInfoMask"
                },
                "autoAddNotificationSettings": {
                    "$ref": "PhotosMediaClientAutoAddNotificationSettingsMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAwesomeSettings": {
            "description": "Setting related to the auto-awesome feature.",
            "id": "PhotosMediaClientAutoAwesomeSettings",
            "properties": {
                "autoComposeEnabled": {
                    "description": "Setting that controls whether to find photos with certain commonalities\n(e.g. photos of the same scene, photos with different exposures, etc)\nand combine them to create additional photos - animations, auto-HDR, etc.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoAwesomeSettingsMask": {
            "id": "PhotosMediaClientAutoAwesomeSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoBackupReminderSettings": {
            "description": "Settings related to auto-backup reminders",
            "id": "PhotosMediaClientAutoBackupReminderSettings",
            "properties": {
                "showAutoBackupReminder": {
                    "description": "Whether to show the user a reminder about auto-backup behavior.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoBackupReminderSettingsMask": {
            "id": "PhotosMediaClientAutoBackupReminderSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoEnhanceSettings": {
            "description": "Setting related to the auto-enhance feature.",
            "id": "PhotosMediaClientAutoEnhanceSettings",
            "properties": {
                "autoEnhanceEnabled": {
                    "description": "Whether auto enhance has been enabled for this user.",
                    "type": "boolean"
                },
                "autoEnhanceLevel": {
                    "description": "Auto enhance level for the user. Only meaningful when auto_enhance_enabled\nis true.",
                    "enum": [
                        "UNKNOWN",
                        "NORMAL",
                        "HIGH"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAutoEnhanceSettingsMask": {
            "id": "PhotosMediaClientAutoEnhanceSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAvatarProfile": {
            "description": "A message to encapsulate the AvatarUrl string, and anything else that might\nbe returned for an Avatar request.",
            "id": "PhotosMediaClientAvatarProfile",
            "properties": {
                "avatarUrl": {
                    "description": "The full Avatar URL for displaying a monogram.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientAvatarProfileMask": {
            "id": "PhotosMediaClientAvatarProfileMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientBookmarkStateMask": {
            "id": "PhotosMediaClientBookmarkStateMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientBreakEnrichment": {
            "description": "This enrichment purposefully left empty. Breaks may have types\nor text in a later iteration.",
            "id": "PhotosMediaClientBreakEnrichment",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientBreakEnrichmentMask": {
            "id": "PhotosMediaClientBreakEnrichmentMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientCameraBurstInfo": {
            "description": "Data about which camera burst the photo belongs to.\nSee go/photos-camera-burst-be for more details.\nNEXT ID: 4",
            "id": "PhotosMediaClientCameraBurstInfo",
            "properties": {
                "cameraBurstId": {
                    "description": "The ID of the camera burst that the photo belongs to.\nFor a given user, two photos with same ID are guaranteed to be in the\nsame camera burst, i.e. this ID can only be used for grouping photos\nin a single account.",
                    "type": "string"
                },
                "displayCount": {
                    "$ref": "PhotosMediaClientCountWithAccuracy",
                    "description": "Approximate count of the number of photos in the burst. This count may be\nless than the actual number of photos in the burst, but it will never be\nmore.\nThis field is suitable for display purposes only and should not be used\nfor any other reason."
                },
                "primaryScore": {
                    "description": "A score that can be used to calculate whether or not the image is the\nprimary photo in the camera burst. For a given burst, the primary photo\nis the photo with the highest primary_score.\nBurst primaries usually get special UI treatment, e.g. if the burst photos\nare displayed in a stack, the primary is at the top.\nNotes:\n- This value may be unset.\n- The server guarantees that no two photos in the same burst will have the\n  same primary_score.\n- It is possible that a burst has no primary, i.e. all photos in the burst\n  have primary_score unset.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCameraBurstInfoMask": {
            "id": "PhotosMediaClientCameraBurstInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCardOptions": {
            "description": "Options to use when rendering GSTS cards.",
            "id": "PhotosMediaClientCardOptions",
            "properties": {
                "cardCapabilities": {
                    "$ref": "SocialFrontendStreamVisualClientCardCapabilities"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientChapterRef": {
            "description": "A reference to a chapter. A typical example would be a reference from a\nMediaItem to its parent chapter(s).\nDefining a message for this will allow us to add additional data as needed,\ne.g. something that describes the relationship of the item to the chapter, or\nthe index of the chapter in the query result array.\nNEXT ID: 2",
            "id": "PhotosMediaClientChapterRef",
            "properties": {
                "chapterId": {
                    "description": "id of the referenced chapter",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterCategorySetting": {
            "description": "ClusterCategorySetting that defines the ClusterCategory to be used at a\ngiven request. Should be used in proto3 requests, since ClusterCategory\nis a proto2 enum",
            "id": "PhotosMediaClientClusterCategorySetting",
            "properties": {
                "clusterCategory": {
                    "description": "Required",
                    "enum": [
                        "UNKNOWN_CATEGORY",
                        "AUTO_COMPLETE",
                        "EXPLORE",
                        "LOCATION_HEADER"
                    ],
                    "enumDescriptions": [
                        "",
                        "This cluster is a candidate for auto-complete.",
                        "This cluster is shown as an explore tile.",
                        "This cluster is used for rendering location headers. This should only\nbe set for PLACE clusters."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterId": {
            "description": "Identifies a cluster.",
            "id": "PhotosMediaClientClusterId",
            "properties": {
                "legacyClusterId": {
                    "$ref": "PhotosMediaClientClusterIdLegacyClusterId"
                },
                "mediaKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterIdLegacyClusterId": {
            "description": "Represents a cluster in photoservice format.",
            "id": "PhotosMediaClientClusterIdLegacyClusterId",
            "properties": {
                "clusterId": {
                    "format": "uint64",
                    "type": "string"
                },
                "obfuscatedUserId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterInferenceRef": {
            "description": "A reference to a cluster inference. This is used by Tombstones to identify\ndeleted cluster inferences.",
            "id": "PhotosMediaClientClusterInferenceRef",
            "properties": {
                "clusterInferenceMediaKey": {
                    "description": "Media key of the referenced cluster inference.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterInfo": {
            "description": "Data about which cluster the image belongs to and its quality\nNEXT ID: 3",
            "id": "PhotosMediaClientClusterInfo",
            "properties": {
                "burstClusterId": {
                    "description": "Which cluster the image belongs to, based on appearance in photo burst.\nId is globally unique. Two photos with same id are guaranteed to be in\nsame photo burst. The best photo in the cluster is the one with the\nhighest score.",
                    "type": "string"
                },
                "score": {
                    "description": "The score is used to determine the quality of an image. The higher\nthe score, the better the picture.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterInfoMask": {
            "id": "PhotosMediaClientClusterInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterMetadata": {
            "description": "Data about the cluster that is common to all clusters, regardless of\nClusterType.\nNEXT ID: 7",
            "id": "PhotosMediaClientClusterMetadata",
            "properties": {
                "iconicImageUrl": {
                    "description": "The URL of the iconic image of this cluster.\nThis URL is an *unsized* FIFE Content URL - clients are expected to\napply the appropriate options before serving.  See http://go/fife-urls for\nmore information.",
                    "type": "string"
                },
                "label": {
                    "description": "The user-facing label of the cluster.",
                    "type": "string"
                },
                "numItems": {
                    "description": "Number of items in the cluster.",
                    "format": "int32",
                    "type": "integer"
                },
                "rankingValue": {
                    "description": "A value for specifying a cluster's relative position within an ordered set\nof multiple clusters.",
                    "format": "double",
                    "type": "number"
                },
                "updateTimestampMs": {
                    "description": "The time when the cluster is updated in ms.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterMetadataMask": {
            "id": "PhotosMediaClientClusterMetadataMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterRef": {
            "description": "A reference to a cluster.  MediaItems refer to their parent cluster(s) using\nPhotoClusterInfo, but this is used by Tombstones to identify deleted\nclusters.",
            "id": "PhotosMediaClientClusterRef",
            "properties": {
                "clusterId": {
                    "$ref": "PhotosMediaClientClusterId",
                    "description": "id of the referenced cluster\nDeprecated - use cluster_media_key"
                },
                "clusterMediaKey": {
                    "description": "media key of the referenced cluster.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterRefMask": {
            "id": "PhotosMediaClientClusterRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterSubjectRef": {
            "description": "A reference to a cluster subject. MediaClusters with type PERSON have a\nreference to the ClusterSubject that they are associated with.\nDefining a message for this will allow us to add additional data as needed,\ne.g. something that describes the relationship of the cluster to the subject.\nor the index of the subject in the query result array.",
            "id": "PhotosMediaClientClusterSubjectRef",
            "properties": {
                "clusterSubjectId": {
                    "description": "ID of the referenced subject. This is the same as the subject's media key.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterSubjectRefMask": {
            "id": "PhotosMediaClientClusterSubjectRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterThumbnailInfo": {
            "description": "Information needed by clients to render a thumbnail.",
            "id": "PhotosMediaClientClusterThumbnailInfo",
            "properties": {
                "thumbnailUrl": {
                    "description": "An unsized, unsigned FIFE content URL defined at go/fife-urls. See that\nlink for details about to specify additional image url options.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientClusterThumbnailInfoMask": {
            "id": "PhotosMediaClientClusterThumbnailInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionAllowedAction": {
            "description": "Define the actions that a viewer may perform on a collection.",
            "id": "PhotosMediaClientCollectionAllowedAction",
            "properties": {
                "action": {
                    "enum": [
                        "COLLECTION_ALLOWED_ACTION_UNKNOWN",
                        "SHARE",
                        "MOVE_TO_TRASH",
                        "RESTORE_FROM_TRASH",
                        "DELETE_PERMANENTLY",
                        "ADD_COMMENT",
                        "DELETE_COMMENTS",
                        "DOWNLOAD",
                        "ADD_CONTENT",
                        "VIEW_BEST",
                        "SHARE_BEST",
                        "ADD_TO_SHARED_COLLECTION",
                        "REMOVE_FROM_SHARED_COLLECTION",
                        "REPORT_ABUSE",
                        "BULK_TAG_ITEMS",
                        "EDIT_METADATA",
                        "EDIT_ACL",
                        "EDIT_COVER_ITEM",
                        "EDIT_ITEM_ORDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Share the collection with other users.\nThis does NOT create a new collection, but rather expands the\ncollection's audience and shares and/or re-shares the collection's\nunderlying ASBE post",
                        "Move the collection to the trash bin",
                        "Restore the collection from the trash bin",
                        "Permanentaly delete the collection",
                        "Add a comment to the collection",
                        "Delete comments from the collection",
                        "Download the collection",
                        "Add content (items, collections, etc.) to the collection",
                        "The collection contains viewable best content. This action may not be\navailable if, for example, all content is low quality and thus there is\nno best content to view.",
                        "The collection contains shareable best content.",
                        "The collection may be added to a shared-collection. The target collection\nmust have Action.ADD_CONTENT",
                        "The collection may be removed from a shared-collection.",
                        "The viewer may report the collection for abuse",
                        "Bulk tag the items in the collection",
                        "Edit the collection's metadata, such as the title, location or other\nfields that describe the collection.",
                        "Edit the ACL - e.g. via the 'Acl Inspector'",
                        "The collection allows a MediaItem to be specified as the \"cover\" item.\nSetting a cover item for a collection does not necessarily affect the\ncollection's highlights.",
                        "Edit the order of the items in a collection"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionAssistantMessageInfo": {
            "description": "Info about an Assistant message (card) that a collection belongs to.",
            "id": "PhotosMediaClientCollectionAssistantMessageInfo",
            "properties": {
                "assistantMessageRef": {
                    "$ref": "PhotosMediaClientAssistantMessageRef",
                    "description": "Reference to the Assistant message."
                },
                "removeAssistantMessage": {
                    "description": "Specifies whether the referenced Assistant message should be locally\ndeleted (i.e. removed from the clients DB) if the collection is deleted.\nFor example, this could be true if the collection is an auto-generated\nsmart album. This would ensure that the client will stop showing the card\nwhen the album is deleted.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionAssistantMessageInfoMask": {
            "id": "PhotosMediaClientCollectionAssistantMessageInfoMask",
            "properties": {
                "assistantMessageRef": {
                    "$ref": "PhotosMediaClientAssistantMessageRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionCategory": {
            "description": "Define broad categories of MediaCollections.\nThe intent of this field is to enable front-ends to vary the UI treatment\nof certain categories of MediaCollection.\n\nIMPORTANT\nThis field should not be used to infer additional behaviors or properties of\na MediaCollection. Other fields (such as AllowedAction) should be used for\nthat.\n\nIn particular NO BUSINESS LOGIC should be based on the value of this field.\n\nA general guideline for clients is that if you are using this field for\nanything other than selecting an appropriate UI treatment for a\nMediaCollection, you are most likely doing it wrong.\n\nIf you have a use-case that is not covered, please contact us and we will\nfind a solution.",
            "id": "PhotosMediaClientCollectionCategory",
            "properties": {
                "category": {
                    "enum": [
                        "UNKNOWN_COLLECTION_CATEGORY",
                        "ALBUM",
                        "EVENT",
                        "SHARED_COLLECTION",
                        "AD_HOC",
                        "ENVELOPE",
                        "CONVERSATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "An otherwise un-distinguished album",
                        "A G+ Event",
                        "A shared collection",
                        "An ad-hoc collection of items that is built up at query time",
                        "Special type of a shared collection (collaborative album).",
                        "A special type of shared collection that is collaborative but unlike\nenvelopes, presents the content in a conversational view rather than a\ntraditional album-like view."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionCompositionInfo": {
            "description": "For collections that were created from a composition, this message will\ncontain information about the metadata of the composition.",
            "id": "PhotosMediaClientCollectionCompositionInfo",
            "properties": {
                "state": {
                    "enum": [
                        "UNKNOWN_COMPOSITION_STATE",
                        "ACCEPTED",
                        "PENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "Composition has been accepted and added to the user's library.",
                        "Composition is pending and has not been accepted into the user's library."
                    ],
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_COLLECTION_COMPOSITION_TYPE",
                        "STORY",
                        "MOVIE",
                        "ALBUM"
                    ],
                    "enumDescriptions": [
                        "",
                        "A story.",
                        "An auto awesome movie that's backed by a media project.",
                        "An auto-generated album."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionCompositionInfoMask": {
            "id": "PhotosMediaClientCollectionCompositionInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionContributors": {
            "description": "Information about people who have contributed to a collection.",
            "id": "PhotosMediaClientCollectionContributors",
            "properties": {
                "contributorRef": {
                    "description": "People who have contributed items to the collection, sorted by affinity\nto the viewer.\nIf the viewer contributed to the collection, they will appear first in the\nlist.\nMediaService will impose an upper bound on the number of contributors that\nare returned for any single collection.",
                    "items": {
                        "$ref": "PhotosMediaClientActorRef"
                    },
                    "type": "array"
                },
                "totalContributors": {
                    "description": "The total number of contributors to the collection.\nFor huge collections this may be approximate or somewhat stale.\ntotal_contributors will always be >= the size of the contributor list\nreturned below.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionContributorsMask": {
            "id": "PhotosMediaClientCollectionContributorsMask",
            "properties": {
                "contributorRef": {
                    "$ref": "PhotosMediaClientActorRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionEnrichment": {
            "description": "A display element positioned by ordinal position among items in a collection.\nThe distinction between a CollectionEnrichment and Enrichment allows for a\nreusable definition of Enrichment that isn't necessarily coupled to albums.",
            "id": "PhotosMediaClientCollectionEnrichment",
            "properties": {
                "enrichment": {
                    "$ref": "PhotosMediaClientEnrichmentProto"
                },
                "enrichmentId": {
                    "$ref": "PhotosMediaClientCollectionEnrichmentId",
                    "description": "A unique identifier used when making edits to the CollectionEnrichment."
                },
                "pivotInfo": {
                    "$ref": "PhotosMediaClientCollectionEnrichmentPivotInfo",
                    "description": "Indicates the direction in which the enrichment is \"anchored\". For example,\nif the enrichment contains PivotDirection.AFTER, it is anchored to the\nfirst item found after the enrichment, and this enrichment-item pair will\nstick together across all sort criteria changes.\nSee go/sorting-photos-in-albums."
                },
                "position": {
                    "description": "position determines display order relative to the\nMediaItem.collection_ref.position of MediaItems in this collection. No two\nenrichments in a collection will have an identical position. If an\nenrichment position equals an item position, clients should display\nenrichments first.",
                    "format": "float",
                    "type": "number"
                },
                "sortKey": {
                    "description": "A websafe string that can be used to sort media within the referenced\ncollection in ascending order. This is intended to be used by Sync APIs\nwhere media is not returned in sort order. Clients may use this to render\nthe layout of CollectionEnrichments in the Collection.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionEnrichmentData": {
            "description": "Outer message for the ordered list of enrichments that can be displayed among\nthe items in a collection.",
            "id": "PhotosMediaClientCollectionEnrichmentData",
            "properties": {
                "collectionEnrichment": {
                    "items": {
                        "$ref": "PhotosMediaClientCollectionEnrichment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionEnrichmentDataMask": {
            "id": "PhotosMediaClientCollectionEnrichmentDataMask",
            "properties": {
                "collectionEnrichment": {
                    "$ref": "PhotosMediaClientCollectionEnrichmentMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionEnrichmentId": {
            "description": "Globally unique identifier for a CollectionEnrichment. The media_key can be\nused for subsequent updates to enrichments within a MediaCollection that has\nan ALBUM CollectionCategory.",
            "id": "PhotosMediaClientCollectionEnrichmentId",
            "properties": {
                "mediaKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionEnrichmentMask": {
            "id": "PhotosMediaClientCollectionEnrichmentMask",
            "properties": {
                "enrichment": {
                    "$ref": "PhotosMediaClientEnrichmentProtoMask"
                },
                "pivotInfo": {
                    "$ref": "PhotosMediaClientCollectionEnrichmentPivotInfoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionEnrichmentPivotInfo": {
            "description": "Holds the pivot information for an enrichment.\nSee go/sorting-photos-in-albums.",
            "id": "PhotosMediaClientCollectionEnrichmentPivotInfo",
            "properties": {
                "pivotDirection": {
                    "enum": [
                        "UNKNOWN_PIVOT_DIRECTION",
                        "BEFORE",
                        "AFTER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Enrichment is anchored to the item before it.",
                        "Enrichment is anchored to the item after it."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionEnrichmentPivotInfoMask": {
            "id": "PhotosMediaClientCollectionEnrichmentPivotInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionForbiddenAction": {
            "description": "Actions that the viewer cannot perform on a collection.",
            "id": "PhotosMediaClientCollectionForbiddenAction",
            "properties": {
                "action": {
                    "enum": [
                        "UNKNOWN_FORBIDDEN_ACTION",
                        "SHARE_COLLECTION_BY_LINK"
                    ],
                    "enumDescriptions": [
                        "",
                        "The viewer cannot share the collection by link."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionForbiddenActionMask": {
            "id": "PhotosMediaClientCollectionForbiddenActionMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientCollectionId": {
            "description": "Identifies a Collection\n\nIf media-key and a \u2018legacy\u2019 id are set, they must refer to exactly the\nsame collection.",
            "id": "PhotosMediaClientCollectionId",
            "properties": {
                "legacyAlbumId": {
                    "$ref": "PhotosMediaClientCollectionIdLegacyAlbumId",
                    "description": "At most ONE of the following mat be set."
                },
                "legacyCollectionId": {
                    "$ref": "PhotosMediaClientCollectionIdLegacyCollectionId"
                },
                "mediaKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionIdLegacyAlbumId": {
            "description": "Represents a MediaCollection that corresponds to a PhotosService album.",
            "id": "PhotosMediaClientCollectionIdLegacyAlbumId",
            "properties": {
                "albumId": {
                    "description": "DEPRECATED. Will only be populated for legacy clients.",
                    "format": "uint64",
                    "type": "string"
                },
                "albumIdString": {
                    "type": "string"
                },
                "obfuscatedUserId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionIdLegacyCollectionId": {
            "description": "Represents a MediaCollection that corresponds to a PartyService collection\nor event.\nCurrently, the allowed combinations of set fields are:\n  (1) collection_id only.\n  (2) namespace + external_id only.\n  (3) All three. In this case, all fields must be consistent and refer to\nthe same event.",
            "id": "PhotosMediaClientCollectionIdLegacyCollectionId",
            "properties": {
                "collectionId": {
                    "type": "string"
                },
                "externalId": {
                    "description": "ID of the external entity that is linked to this collection.\nIn case of square photos, this will be the square_id.",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace for this collection.",
                    "enum": [
                        "UNKNOWN_NAMESPACE",
                        "SQUARES",
                        "ENVELOPE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Deprecated -- G+ Community Photos View",
                        "Google Photos Shared Albums"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionMetadata": {
            "description": "Basic metadata about the collection. Fields here should ideally be\ninexpensive to compute, as clients will be reading from this message often.\nNEXT ID: 27",
            "id": "PhotosMediaClientCollectionMetadata",
            "properties": {
                "allowedAction": {
                    "description": "Specifies actions that the user is likely allowed to do to this collection\n\nIMPORTANT please do not infer what actions are allowed based on any other\nfields in MediaCollection. If this field is incomplete please contact\nphotos-backend-infra@ with your use case and we will work with you.",
                    "items": {
                        "$ref": "PhotosMediaClientAllowedAction"
                    },
                    "type": "array"
                },
                "assistantMessageInfo": {
                    "description": "Info about the Assistant messages that this collection is in.\nAn example of when this would be populated is if this collection is an\nauto-generated smart album.\nSee go/photos-backend-design for more information on the Google Photos\nAssistant implementation.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionAssistantMessageInfo"
                    },
                    "type": "array"
                },
                "association": {
                    "description": "Specifies any associations between this collection and other services",
                    "items": {
                        "$ref": "PhotosMediaClientAssociation"
                    },
                    "type": "array"
                },
                "audience": {
                    "$ref": "PhotosMediaClientAudience",
                    "description": "Information about who has access to this collection"
                },
                "authkey": {
                    "description": "A websafe-encoded string that allows any user who knows it to gain access\nto the collection. Can be passed into CollectionIdExpr.authkey in a\nsubsequent request.",
                    "type": "string"
                },
                "category": {
                    "$ref": "PhotosMediaClientCollectionCategory",
                    "description": "Specifies the broad category for this Collection.\nIMPORTANT - see the notes on CollectionCategory for appropriate use for\nthis field."
                },
                "collectionAllowedAction": {
                    "description": "Specifies actions that the user is likely allowed to do to this collection.\nDo not use yet (b/10024301).\n\nIMPORTANT please do not infer what actions are allowed based on any other\nfields in MediaCollection. If this field is incomplete please contact\nphotos-backend-infra@ with your use case and we will work with you.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionAllowedAction"
                    },
                    "type": "array"
                },
                "collectionRelevance": {
                    "$ref": "PhotosMediaClientCollectionRelevance",
                    "description": "The reason this collection is returned."
                },
                "coverItem": {
                    "$ref": "PhotosMediaClientItemRef",
                    "description": "Holds a reference to the child media item that should be used as the\n\"cover\" for the collection"
                },
                "creatorRef": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "The user that initially created this collection.  Not guaranteed to\nbe populated."
                },
                "downloadUrl": {
                    "description": "A URL at which items in this collection may be downloaded. If this URL\nis not present, the download is not allowed.",
                    "type": "string"
                },
                "equivalenceToken": {
                    "description": "DEPRECATED - use MediaCollection.equivalence_data.token",
                    "type": "string"
                },
                "forbiddenAction": {
                    "description": "Specifies actions that the user is not allowed to do to this collection.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionForbiddenAction"
                    },
                    "type": "array"
                },
                "ownerRef": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "The owner of this collection.  Omitted for ownerless collections, such as\nBabel photo collections and community photo collections."
                },
                "photosProductUrls": {
                    "$ref": "PhotosMediaClientCollectionPhotosProductUrls",
                    "description": "Urls for photos product."
                },
                "photosViewInfo": {
                    "$ref": "PhotosMediaClientCollectionPhotosViewInfo",
                    "description": "Information for views for the photos product."
                },
                "remainingCapacity": {
                    "$ref": "PhotosMediaClientCollectionRemainingCapacity",
                    "description": "Number of items which could be added to the collection.\nNot populated for some collections.\nIf not populated, do not enforce a limit in the UI."
                },
                "sharingSettings": {
                    "$ref": "PhotosMediaClientCollectionSharingSettings",
                    "description": "Information about the settings for a shared collection."
                },
                "siloInfo": {
                    "$ref": "PhotosMediaClientCollectionSiloInfo",
                    "description": "The info about the Silo this MediaCollection belongs to.\nWARNING: Do not use this field for any usage other than monitoring\nuntil we have fully backfilled the silo ids of all items\n(b/34316377 and others)"
                },
                "timeInfo": {
                    "$ref": "PhotosMediaClientCollectionTimeInfo",
                    "description": "Information about the collection's placement in time."
                },
                "title": {
                    "description": "Title of the collection. In the absence of title_info, title will always\ncontain the proper title of the collection. When returned with title_info,\ntitle contains a fall-back title for clients unable to generate localized\ntitles.",
                    "type": "string"
                },
                "titleInfo": {
                    "$ref": "PhotosMediaClientCollectionTitleInfo",
                    "description": "title_info, if populated, will contain structured, localized text for\nclients able able to generate localized titles."
                },
                "totalItems": {
                    "description": "The total number of items in this collection that are visible to the\nrequester. This count is independent of the current query -- it is not\naffected by max_results or max_per_collection.",
                    "format": "int32",
                    "type": "integer"
                },
                "totalItemsAccuracy": {
                    "description": "Specifies the accuracy of the total items count above.",
                    "enum": [
                        "UNKNOWN_TOTAL_ITEMS_ACCURACY",
                        "EXACT",
                        "UPPER_BOUND"
                    ],
                    "enumDescriptions": [
                        "Safe fall-back for clients (http://protosdosdonts).",
                        "We have done filtering/deduplication so we know that the count is\naccurate.",
                        "We have not done filtering/deduplication so the count is an upper bound\nsince duplicate items could exist and be filtered out."
                    ],
                    "type": "string"
                },
                "totalSummaryItems": {
                    "description": "The total number of summary items in this collection that are visible to\nthe requester. This count has an upper bound of max_per_collection. It\nremains consistent across multiple query pages for the same collection.\n\nThe count is only implemented for MediaStreamQuery when max_per_collection\nis set. Otherwise, this count will be unset.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionMetadataMask": {
            "id": "PhotosMediaClientCollectionMetadataMask",
            "properties": {
                "allowedAction": {
                    "$ref": "PhotosMediaClientAllowedActionMask"
                },
                "assistantMessageInfo": {
                    "$ref": "PhotosMediaClientCollectionAssistantMessageInfoMask"
                },
                "association": {
                    "$ref": "PhotosMediaClientAssociationMask"
                },
                "audience": {
                    "$ref": "PhotosMediaClientAudienceMask"
                },
                "collectionRelevance": {
                    "$ref": "PhotosMediaClientCollectionRelevanceMask"
                },
                "coverItem": {
                    "$ref": "PhotosMediaClientItemRefMask"
                },
                "creatorRef": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "forbiddenAction": {
                    "$ref": "PhotosMediaClientCollectionForbiddenActionMask"
                },
                "ownerRef": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "photosProductUrls": {
                    "$ref": "PhotosMediaClientCollectionPhotosProductUrlsMask"
                },
                "photosViewInfo": {
                    "$ref": "PhotosMediaClientCollectionPhotosViewInfoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "remainingCapacity": {
                    "$ref": "PhotosMediaClientCollectionRemainingCapacityMask"
                },
                "sharingSettings": {
                    "$ref": "PhotosMediaClientCollectionSharingSettingsMask"
                },
                "siloInfo": {
                    "$ref": "PhotosMediaClientCollectionSiloInfoMask",
                    "description": "The info about the Silo this MediaCollection belongs to.\nWARNING: Do not use this field for any usage other than monitoring\nuntil we have fully backfilled the silo ids of all items\n(b/34316377 and others)"
                },
                "timeInfo": {
                    "$ref": "PhotosMediaClientCollectionTimeInfoMask"
                },
                "titleInfo": {
                    "$ref": "PhotosMediaClientCollectionTitleInfoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionPhotoContribution": {
            "description": "Stores information about photos the user contributed to a collection.",
            "id": "PhotosMediaClientCollectionPhotoContribution",
            "properties": {
                "contributedPhotos": {
                    "description": "Whether or not the user has contributed photos.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionPhotoContributionMask": {
            "id": "PhotosMediaClientCollectionPhotoContributionMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionPhotosProductUrls": {
            "description": "Urls for photos product that grant various levels of access to the\ncollection.",
            "id": "PhotosMediaClientCollectionPhotosProductUrls",
            "properties": {
                "minimalAccessLongUrl": {
                    "description": "An unshortened version of minimal_access_url.  This is useful in situations\nwhere a redirect is not acceptable, or where the domain should be\nphotos.google.com for display purposes (e.g. when sharing to Facebook).",
                    "type": "string"
                },
                "minimalAccessUrl": {
                    "description": "A URL that only grants minimal access to the collection. This includes the\nphotos in the collection but no social content such as comments, +1s, etc.\nCurrently, only envelopes generate such a URL.",
                    "type": "string"
                },
                "pgcAlbumPageUrl": {
                    "description": "An owner-only URL to the base collection page in photos.google.com.\nNot guaranteed to be populated for non-album collection types.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionPhotosProductUrlsMask": {
            "id": "PhotosMediaClientCollectionPhotosProductUrlsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionPhotosViewInfo": {
            "description": "Information about how the collection should be displayed in various views in\nthe photos product. For example, some collections need to be synced to\nclients, but should not actually show up in the standard views.",
            "id": "PhotosMediaClientCollectionPhotosViewInfo",
            "properties": {
                "assistantHideReason": {
                    "description": "Present when media service believes the collection should be hidden from\nthe Assistant view for the provided reasons. This list has \"any\" instead of\n\"all\" semantics. For forward compatibility, clients should hide the\ncollection from the Assistant view whenever a HideReason is not recognized.\nThis can occur when the server has added a new reason enum that old client\ncode is not aware of.",
                    "enumDescriptions": [
                        "",
                        "This collection is a pending composition, and should not be shown in the\nuser's library until it has been accepted.",
                        "This collection is built from a media project and should only be\ndisplayed by clients which use the media project CRUD API.",
                        "This collection is a pinned shared album, and should only be shown by\nclient versions that understand shared collections.",
                        "This collection is a composition that has been dismissed by the user."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_HIDE_REASON",
                            "PENDING_COMPOSITION",
                            "MEDIA_PROJECT",
                            "PINNED_ALBUM",
                            "DISMISSED_COMPOSITION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "hideReason": {
                    "description": "Present when media service believes the collection should be hidden for the\nprovided reasons. This list has \"any\" instead of \"all\" semantics. That is,\nif any of the reasons apply to a particular view, the collection should be\nhidden from that view. For forward compatibility, clients should hide the\ncollection from all views whenever a HideReason is not recognized. This\ncan occur when the server has added a new reason enum that old client code\nis not aware of.",
                    "enumDescriptions": [
                        "",
                        "This collection is a pending composition, and should not be shown in the\nuser's library until it has been accepted.",
                        "This collection is built from a media project and should only be\ndisplayed by clients which use the media project CRUD API.",
                        "This collection is a pinned shared album, and should only be shown by\nclient versions that understand shared collections.",
                        "This collection is a composition that has been dismissed by the user."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_HIDE_REASON",
                            "PENDING_COMPOSITION",
                            "MEDIA_PROJECT",
                            "PINNED_ALBUM",
                            "DISMISSED_COMPOSITION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionPhotosViewInfoMask": {
            "id": "PhotosMediaClientCollectionPhotosViewInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipient": {
            "description": "Information about a person who has access to a collection.",
            "id": "PhotosMediaClientCollectionRecipient",
            "properties": {
                "allowedAction": {
                    "description": "Actions that the user can perform on this recipient.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionRecipientAllowedAction"
                    },
                    "type": "array"
                },
                "autoAddState": {
                    "description": "Indicates whether the user has set up auto-add rules for the given\ncollection. See go/livealbums for more details about auto-add.",
                    "enum": [
                        "UNKNOWN_AUTO_ADD_STATE",
                        "AUTO_ADD_ENABLED",
                        "NO_AUTO_ADD_RULES"
                    ],
                    "enumDescriptions": [
                        "",
                        "The recipient has set up auto-add rules for this collection.",
                        "The recipient doesn't have any auto-add rules set up for this collection."
                    ],
                    "type": "string"
                },
                "autoSaveSettings": {
                    "$ref": "PhotosMediaClientCollectionRecipientAutoSaveSettings",
                    "description": "Contains the auto-save settings that the recipient has for the collection.\nThis should only be set for the viewer's collection recipient."
                },
                "displayProperties": {
                    "$ref": "PhotosMediaClientCollectionRecipientDisplayProperties",
                    "description": "Information about how the collection should be displayed in the user's\naccount.\nThis will only be populated for CollectionRecipients pertaining to the\nlogged in user (i.e. viewer_collection_recipient in MediaCollection)."
                },
                "email": {
                    "description": "Email of the recipient. As of 6/13/16, only populated if any of the\nfollowing are true:\n--the viewer is the recipient by providing appropriate credentials\n--the viewer is the collection owner\n--the viewer invited the recipient",
                    "type": "string"
                },
                "inviterRef": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "A reference to the user who invited this recipient to the collection.\nThis field will only be set if one of the following is true:\n1. The query viewer is this recipient\n2. The query viewer is the inviter of this recipient\n3. The query viewer is the owner of the collection"
                },
                "joined": {
                    "description": "Whether or not the recipient is joined to the collection. This can happen\nin a couple of different ways:\n--The recipient took a manual action on this collection\n--The recipient is a Gaia user, and received this collection via a\n  direct-share from a sender (product decision as of 8/4/16)\nIf you would like to differentiate between the above cases, please contact\nphotos-backend@.",
                    "type": "boolean"
                },
                "phoneNumber": {
                    "description": "Phone number of the recipient. As of 6/13/16, only populated if any of the\nfollowing are true:\n--the viewer is the recipient by providing appropriate credentials\n--the viewer is the collection owner\n--the viewer invited the recipient",
                    "type": "string"
                },
                "photoContribution": {
                    "$ref": "PhotosMediaClientCollectionPhotoContribution",
                    "description": "Information about whether the recipient has contributed photos to the\ncollection."
                },
                "pinState": {
                    "description": "The state of whether the recipient has pinned the collection or not.\nOnly populated for the CollectionRecipient corresponding to the viewer.",
                    "enum": [
                        "UNKNOWN_PIN_STATE",
                        "PINNED",
                        "NOT_PINNED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The collection has been pinned by the recipient.",
                        "The collection has not been pinned by the recipient."
                    ],
                    "type": "string"
                },
                "recipientRef": {
                    "$ref": "PhotosMediaClientActorRef"
                },
                "sortKey": {
                    "description": "A websafe string that can be used to sort recipients in ascending\norder. This is intended to be used by Sync APIs where the recipients are\nnot returned in sort order. Clients may use this to order the recipients in\nthe collection's face pile.",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_RECIPIENT_TYPE",
                        "ACTOR",
                        "EMAIL",
                        "PHONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Gaia user. ActorRef will be populated.",
                        "E-mail address. Email may be populated.",
                        "Phone number. Phone number may be populated."
                    ],
                    "type": "string"
                },
                "viewState": {
                    "$ref": "PhotosMediaClientCollectionRecipientViewState",
                    "description": "Information about whether this recipient has viewed the collection."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientAllowedAction": {
            "description": "Define actions that the viewer can perform on a CollectionRecipient.",
            "id": "PhotosMediaClientCollectionRecipientAllowedAction",
            "properties": {
                "action": {
                    "enum": [
                        "COLLECTION_RECIPIENT_ALLOWED_ACTION_UNKNOWN",
                        "REMOVE_DISPLAY_NAME",
                        "CREATE_USER_TO_USER_BLOCK"
                    ],
                    "enumDescriptions": [
                        "",
                        "The viewer may clear the recipient's display name.\nIf the recipient does not have a display name set, then this\nAllowedAction will not be returned.",
                        "The viewer may create a user-to-user block for the recipient (go/utu)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientAllowedActionMask": {
            "id": "PhotosMediaClientCollectionRecipientAllowedActionMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientAutoSaveSettings": {
            "description": "Defines the auto-save settings that a recipient has for a collection.\nFor more information, see go/auto-save-shared-albums.",
            "id": "PhotosMediaClientCollectionRecipientAutoSaveSettings",
            "properties": {
                "autoSaveEnabled": {
                    "description": "If true, automatically save the collection's media to the recipient's\npersonal library.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientAutoSaveSettingsMask": {
            "id": "PhotosMediaClientCollectionRecipientAutoSaveSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientDisplayProperties": {
            "id": "PhotosMediaClientCollectionRecipientDisplayProperties",
            "properties": {
                "displayInSharingTab": {
                    "description": "Whether the collection should be displayed in the user's sharing tab in\nGoogle Photos.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientMask": {
            "id": "PhotosMediaClientCollectionRecipientMask",
            "properties": {
                "allowedAction": {
                    "$ref": "PhotosMediaClientCollectionRecipientAllowedActionMask"
                },
                "autoSaveSettings": {
                    "$ref": "PhotosMediaClientCollectionRecipientAutoSaveSettingsMask"
                },
                "displayProperties": {
                    "$ref": "PhotosMediaClientDisplayPropertiesMask"
                },
                "inviterRef": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "photoContribution": {
                    "$ref": "PhotosMediaClientCollectionPhotoContributionMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "recipientRef": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "viewState": {
                    "$ref": "PhotosMediaClientViewStateMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientViewState": {
            "id": "PhotosMediaClientCollectionRecipientViewState",
            "properties": {
                "lastNewItemsViewTimeMs": {
                    "description": "Approximate time the recipient last viewed new items in this collection\nin milliseconds. This will always represent a confirmed view time, but it\nmay not represent the latest view time precisely.\n\nDEPRECATED, DO NOT USE: replaced by the Album Activity View, which\nclassifies new items in relation to last_view_time_ms only.\ngo/photos-backend-album-activity-view",
                    "format": "int64",
                    "type": "string"
                },
                "lastViewTimeMs": {
                    "description": "Approximate time the recipient last viewed this collection in\nmilliseconds. This will always represent a confirmed view time, but it\nmay not represent the latest view time precisely.",
                    "format": "int64",
                    "type": "string"
                },
                "viewProperty": {
                    "description": "Properties that describe the recipient's view state. These could be\nsurfaced to the user via a visible \"badge\" on the MediaCollection or its\nrecipients.",
                    "enumDescriptions": [
                        "",
                        "There is activity on the MediaCollection that this recipient is\nattached to, and this recipient has not yet read that activity.",
                        "There is an unread activity on the collection for the first set of\nphotos that were automatically added to the collection.\nSee go/livealbums for more details about auto-add."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_VIEW_PROPERTY",
                            "COLLECTION_UNREAD_ACTIVITY",
                            "COLLECTION_UNREAD_FIRST_AUTO_ADD_ACTIVITY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientsGroup": {
            "description": "NEXT_ID: 5.",
            "id": "PhotosMediaClientCollectionRecipientsGroup",
            "properties": {
                "collectionRecipient": {
                    "description": "Collection recipients in this group, sorted by affinity to the viewer.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionRecipient"
                    },
                    "type": "array"
                },
                "groupType": {
                    "description": "The type of recipients that will be included in this recipient group.",
                    "enum": [
                        "UNKNOWN_GROUP_TYPE",
                        "ALL_RECIPIENTS"
                    ],
                    "enumDescriptions": [
                        "The item is a type unknown to the client.",
                        "All recipients for this collection. Does not support G+ Events."
                    ],
                    "type": "string"
                },
                "resumeToken": {
                    "description": "If populated, there are more recipients available for this group. Clients\nmay make another request for this collection and group with this resume\ntoken to resume the list of recipients.",
                    "type": "string"
                },
                "totalCollectionRecipients": {
                    "description": "Overall number of collection recipients.\nReturned only when resume_token is not specified.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRecipientsGroupMask": {
            "description": "Reminder: In addition to setting this mask, clients that want a\nCollectionRecipientsGroup need to request it specifically. For example,\nReadCollectionsByIdRequest requires a RequestedCollectionRecipientsGroup\nwith the desired GroupType.",
            "id": "PhotosMediaClientCollectionRecipientsGroupMask",
            "properties": {
                "collectionRecipient": {
                    "$ref": "PhotosMediaClientCollectionRecipientMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRef": {
            "description": "A reference to a collection. A typical example would be a reference from a\nMediaItem to its parent collection(s).\nDefining a message for this will allow us to add additional data as needed,\ne.g. something that describes the relationship of the item to the collection,\nor the index of the collection in the query result array.\nNEXT ID: 4",
            "id": "PhotosMediaClientCollectionRef",
            "properties": {
                "collectionId": {
                    "description": "id of the referenced collection",
                    "type": "string"
                },
                "position": {
                    "description": "Indicates the position of the referencing media in this collection.\nCurrently this field will only be set if the referenced collection\nis an Album. This will not be set for any other Collection types like\nEvents or Stories.\nWhen available, clients may use this to render the layout\nof MediaItems in the Album.",
                    "format": "float",
                    "type": "number"
                },
                "sortKey": {
                    "description": "A websafe string that can be used to sort media within the\nreferenced collection in ascending order. This is intended to be used by\nSync APIs where media is not returned in sort order.\nClients may use this to render the layout of MediaItems in the Collection.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRefMask": {
            "id": "PhotosMediaClientCollectionRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRelevance": {
            "description": "Indicates why a given MediaCollection is relevant to a specified user.\nThis may provide a hint as to why the collection appears in a user's\nhighlights view or why it may be interesting to the user.",
            "id": "PhotosMediaClientCollectionRelevance",
            "properties": {
                "relevance": {
                    "description": "One or more relevance values.\nThe most important value will always be first in the list. Most clients\nshould only care about the first value.\nIf there are multiple values, they will be returned in decreasing order\nof importance.\nThe numerical values of the Relevance enums have NO relation to their\norder w.r.t. importance.",
                    "enumDescriptions": [
                        "",
                        "target_actor owns the collection",
                        "target_actor is tagged in the collection",
                        "The collection has been shared with the target_actor",
                        "target_actor participated in the event",
                        "target_actor manually bookmarked the collection\nNOTE: The bookmark type exist, but there is no code that writes the type\nyet."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_RELEVANCE",
                            "OWNED",
                            "TAGGED_IN",
                            "SHARED_WITH",
                            "PARTICIPATED_IN",
                            "MANUALLY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "targetActor": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "The Actor for whom the relevance is meaningful.\nThis will either be the viewer, or an explicitly specified actor - e.g.\nin ReadUserHighlights this will be the target_user"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRelevanceMask": {
            "id": "PhotosMediaClientCollectionRelevanceMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRemainingCapacity": {
            "description": "For a private album this is the number of items which could be added to\nthe album before hitting album limit. For shared albums actual limit could\nbe smaller because of the global limit on the number of items in the\nenvelope.",
            "id": "PhotosMediaClientCollectionRemainingCapacity",
            "properties": {
                "remainingItems": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionRemainingCapacityMask": {
            "id": "PhotosMediaClientCollectionRemainingCapacityMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionShareData": {
            "description": "Information about a share of the collection, for example, the share\ndescription, comments, and +1s.",
            "id": "PhotosMediaClientCollectionShareData",
            "properties": {
                "commentData": {
                    "$ref": "PhotosMediaClientCommentData",
                    "description": "Information about comments on a collection share."
                },
                "plusOneData": {
                    "$ref": "PhotosMediaClientPlusOneData",
                    "description": "Information about plus ones of a collection share."
                },
                "shareData": {
                    "$ref": "PhotosMediaClientShareData",
                    "description": "Information about the initial share of the collection."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionShareDataMask": {
            "id": "PhotosMediaClientCollectionShareDataMask",
            "properties": {
                "commentData": {
                    "$ref": "PhotosMediaClientCommentDataMask"
                },
                "plusOneData": {
                    "$ref": "PhotosMediaClientPlusOneDataMask"
                },
                "shareData": {
                    "$ref": "PhotosMediaClientShareDataMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionSharingSettings": {
            "description": "Information about configurable settings of a shared collection.",
            "id": "PhotosMediaClientCollectionSharingSettings",
            "properties": {
                "envelopePermission": {
                    "description": "Specifies which permissions have been enabled for the viewer. Read from\nthese instead of existing boolean fields.",
                    "items": {
                        "$ref": "PhotosMediaClientEnvelopePermission"
                    },
                    "type": "array"
                },
                "minimalAccessTokenGrantsCollaborator": {
                    "description": "Whether the minimal access token (used in minimal_access_url) grants the\nviewer collaborator access, that is, the ability to add photos to the\ncollection.",
                    "type": "boolean"
                },
                "minimalAccessTokenGrantsCommenter": {
                    "description": "Whether the minimal access token (used in minimal_access_url) grants the\nviewer the ability to comment.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionSharingSettingsMask": {
            "id": "PhotosMediaClientCollectionSharingSettingsMask",
            "properties": {
                "envelopePermission": {
                    "$ref": "PhotosMediaClientEnvelopePermissionMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionSiloInfo": {
            "description": "Silo information for a given MediaCollection",
            "id": "PhotosMediaClientCollectionSiloInfo",
            "properties": {
                "siloId": {
                    "enum": [
                        "UNKNOWN_SILO_IDENTIFIER",
                        "SILOLESS",
                        "GOOGLE_PHOTOS",
                        "GOOGLE_PHOTOS_PRINT_ORDERS",
                        "BLOGGER",
                        "HANGOUTS",
                        "DRIVE_SYNC",
                        "GEO",
                        "OFFLINE_SALES_RECEIPTS",
                        "OFFLINE_SALES_RECEIPTS_DEV",
                        "TEAMS",
                        "YOUTUBE_MUSIC_ARTISTS",
                        "BLOGGER_SOCIAL",
                        "KHAZANA",
                        "PROFILE_PHOTOS",
                        "G_PLUS",
                        "GUS",
                        "PANORAMIO",
                        "KINDYGRAM",
                        "LOUPE",
                        "YOUTUBE_BANNER",
                        "YOUTUBE_SPONSORSHIP_BADGE",
                        "FOCUS_CONTACT_PHOTOS",
                        "CONTACT_PHOTOS",
                        "UNICORN_FAMILY_LINK",
                        "GMAIL_THEMES",
                        "ABOUT_ME",
                        "DRIVE_FORMS",
                        "GOOGLE_VOICE",
                        "CALENDAR_THEMES",
                        "HOMEROOM_THEMES",
                        "ACTIONS_ON_GOOGLE_CONSOLE",
                        "CROWDSOURCE",
                        "DEVELOPER_CONSOLE",
                        "SBE_PLAYGROUND",
                        "ANDROID_PLAY_SERVICES",
                        "PRODUCT_FORUMS",
                        "GROUPS_FORUM",
                        "TOUR_BUILDER",
                        "MEMEGEN",
                        "PLASO",
                        "GMAIL_SYNC",
                        "AOG_CONTENT",
                        "WALLET",
                        "HELPOUTS",
                        "CLOUDCAST",
                        "YOUTUBE_MUSIC_PRIVATELY_OWNED_ALBUM_ART",
                        "NBU_MAOTAI_COLLECTION",
                        "ONE_GOOGLE",
                        "ACCOUNT_SETTINGS",
                        "GPAY_GROUP_PAYMENTS",
                        "UNDETERMINED",
                        "GOOGLE_GIVE",
                        "CARDMAKER",
                        "DEPRECATED_MAYFLOWER",
                        "TAHITI",
                        "JANATA",
                        "SOCIETY",
                        "PLAY_GAMES_SERVICES",
                        "UPLOADER_DRIVE_ONLY",
                        "GPAY_CAMPUS_ID",
                        "NUTRITION",
                        "INTERNATIONALIZATION_WORKFLOW"
                    ],
                    "enumDescriptions": [
                        "This is the default value and it is considered invalid. When new values\nare added to a proto2 enum, old clients will see the field as unset and\nthe getter will return this value, if a default value isn\u2019t specified.\n(see go/protodosdonts).",
                        "The SILOLESS value implies that the entity does not belong to any Silo.\nEventually, this will also be invalid as every entity should belong to a\nsilo.",
                        "Photos backend content owned by Google Photos.\n\nThis strictly applies to content related to the Google Photos product\n(e.g. uploaded via the Google Photos app).",
                        "Silo for with print orders (go/printing-spec)",
                        "Photos backend content owned by Blogger.",
                        "Photos backend content owned by Google Hangouts.",
                        "Regular Google Drive photos created through pubsub/sync to photos\nbackend. Maintained by the Photos backend team.",
                        "Photos backend content owned by the Geo team.",
                        "Photos backend content owned by the Google Shopping Offline Sales\nreceipts project. See go/receipt_upload_storage_consumption_design_doc\nfor more info.",
                        "Photos backend content used by the Google Shopping Offline Sales\nreceipts project for development.\nSee go/receipt_upload_storage_consumption_design_doc for more info.",
                        "Photos backend content owned by MOMA Teams.",
                        "Artist-uploaded photos managed by the YouTube Music Corpus team.",
                        "Profile pictures for Blogger social features.\nSee integration bug b/64095311 and design doc go/gfc-photos-migration.",
                        "Photos backend content owned by Khazana (go/khazana; b/66411157).",
                        "Silo for profile photos and scrapbook albums.\nThey are owned by photos backend but are not shown in Google Photos\nall-photos view and could be accessed by various products.",
                        "Silo for GPlus media",
                        "Photos backend content owned by GSA Universal Server (GUS) (go/gus,\nb/68721537).",
                        "Silo for panoramio photos migration (go/panoramio-photos-migration).",
                        "Silo for Kindygram (go/kindygram).",
                        "Stanza requests coming for the LOUPE corpus.",
                        "Youtube channel banner images are uploaded to this silo.",
                        "Youtube sponsorship badges (see b/23186017 for screenshots).\nYoutube is migrating to the Shoebox (http://shortn/_2mwNY1FM8S for\ndiscussion) but we are still getting photos created through onepick\n(http://shortn/_8uVeMrBydA and http://shortn/_eICBlS9Eu9).",
                        "Contact photos created by focus backend.",
                        "Photos uploaded using contacts.google.com.\nUse case: change profile picture by uploading a new photo.\nThis result into temporary photo being created.",
                        "Family link app: go/fl from unicorn team.",
                        "Silo for gmail themes: used when user selects a new theme with onepick.",
                        "Temporary photos/albums created by aboutme.google.com through onepick.",
                        "Albums/photos for freebird (go/forms).\nUse case: specifying background image for a form (using palette).",
                        "Albums/photos for google voice (go/gvoice).\nUse case: add a photo to a text message through onepick upload.",
                        "Silo for calendar themes.\nUse case: OnePick upload in a legacy calendar (http://shortn/_3G7OEIvqGJ)",
                        "Silo for homeroom themes (go/homeroom-eng).\nUse case:  classroom.google.com uses onepick to select background\nfor a course.",
                        "Silo for console.actions.google.com (go/ast-aog).\nUse case: specifying application banner and logo:\nhttps://screenshot.googleplex.com/3sPcaeCH79N",
                        "Albums/photos for crowdsource (go/village).\nUse case: storing images shared by users of the Crowdsource app",
                        "Silo for console.developers.google.com.\nExample: go to console.developers.google.com.\nCreate an app. Enable drive API. In the dashboard: configure drive API\nIn Drive UI integration: Pick application icon.",
                        "SiloID used by Stanza (go/stanza) test corpora (STANZA_TEST,\nSBE_PLAYGROUND).",
                        "Android creates temporary photos when uploading profile photos.",
                        "Deprecated. Never launched. DO NOT USE.",
                        "Uploads from https://groups.google.com\nand https://productforums.google.com.",
                        "See https://sites.google.com/a/google.com/tour-builder/",
                        "Silo for Memegen.",
                        "Silo for Plaso. This is deprecated.",
                        "Silo for GMAIL sync. This is deprecated.",
                        "Silo for AoG content. go/aog-howto",
                        "Silo for instore google wallet.",
                        "Silo for deprecated helpouts. They do takeout etc. So we need to silo.",
                        "Silo for Yeti. go/yeti-captures-design-doc",
                        "Silo for Youtube Music privately owned album art.\ngo/ytm-uploaded-album-art",
                        "Silo for NBU Maotai Collection. (b/111277761)",
                        "Silo for OneGoogle (go/onegooglebar)",
                        "Profile photo upload from accounts.google.com.",
                        "Silo for Google Pay Group Payments (go/p2p-group-funding-prd,\nb/112584722).",
                        "Silo for photos, albums, and events for which we could not backfill\nSiloIds due to mismatches. b/113280596 will track moving content out of\nthis Silo and into one of the others. For now, having this Silo will\nenable us to move forward with asserting SiloConfig checks.",
                        "Silo for Google Give (g-give.googleplex.com).",
                        "Silo for Google Now Cardmaker (https://cardmaker.googleplex.com).",
                        "Silo for Google Travel (hotel search, go/mayflower-g3).",
                        "Silo for Tahiti (b/123097201).",
                        "Silo for Janata go/janata-one-pager (b/128347668).",
                        "Silo for Neighbourly (Society; b/128347774)",
                        "Silo for Play Games Services (b/129288890)",
                        "Silo for Uploader (Backup & Sync) items uploaded with \"Show in Photos\"\noff.",
                        "Silo for Google Pay - Campus ID (b/128349722)",
                        "Silo for Google Health Nutrition go/nutrition (b/140134950)",
                        "Silo for Orbis Screenshots (b/138811942)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionSiloInfoMask": {
            "description": "Silo information for a given MediaCollection",
            "id": "PhotosMediaClientCollectionSiloInfoMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientCollectionSortCriteria": {
            "description": "Criteria for sorting items in a collection.",
            "id": "PhotosMediaClientCollectionSortCriteria",
            "properties": {
                "custom": {
                    "description": "If true, indicates that there exists some custom reordering on top of the\nbase ordering defined above.",
                    "type": "boolean"
                },
                "sortBy": {
                    "description": "Identifies the basis for sorting this collection.",
                    "enum": [
                        "UNKNOWN_SORT_ITEM_BY",
                        "TIMESTAMP_ASCENDING",
                        "TIMESTAMP_DESCENDING",
                        "CREATION_TIME_DESCENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "Sort items by ascending timestamp.",
                        "Sort items by descending timestamp.",
                        "Sort items by descending creation time. The creation time refers to when\nthe item was created in the collection."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionSortCriteriaMask": {
            "id": "PhotosMediaClientCollectionSortCriteriaMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionTimeInfo": {
            "description": "Information about the collection's placement in time.\nCollection start and end times may be user-specified (e.g. event start and\nend time) or derived from the times of the items in the collection (e.g.\nearliest and latest item timestamp).\nNEXT ID: 11",
            "id": "PhotosMediaClientCollectionTimeInfo",
            "properties": {
                "creationMs": {
                    "description": "The time when the collection was created in storage, in UTC milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "endMs": {
                    "description": "The time when the collection ended, in UTC milliseconds. Prefer to use\nstart_time field. They will both be populated until this one is removed.",
                    "format": "int64",
                    "type": "string"
                },
                "endTime": {
                    "$ref": "PhotosMediaClientTimeInfo",
                    "description": "End time including time zone offset. Prefer this over end_ms field."
                },
                "markAsReadMs": {
                    "description": "The time at which the collection should be \"marked as read\" on a\nsubsequent write RPC, if applicable. See b/30650706 for details.",
                    "format": "int64",
                    "type": "string"
                },
                "newestActivityTimeMs": {
                    "description": "Timestamp of the newest activity (e.g. a user adding photos or comments) on\nthis collection in milliseconds.\nAs of 3/8/17, this field is only populated for envelope collections.",
                    "format": "int64",
                    "type": "string"
                },
                "newestOperationTimeMs": {
                    "description": "Timestamp of the newest operation performed on this collection in\nmilliseconds, that is within the list of operations that should affect the\n\"Date Modified\" album ordering in Google Photos.\nThis field will be populated for both envelope and private collections.\nSee go/photos-be-albums-sorting for more details.",
                    "format": "int64",
                    "type": "string"
                },
                "startMs": {
                    "description": "The time when the collection started, in UTC milliseconds.  Note that this\nis NOT necessarily the time when the collection was created in\nMediaService. Prefer to use start_time field. They will both be populated\nuntil this one is removed.",
                    "format": "int64",
                    "type": "string"
                },
                "startTime": {
                    "$ref": "PhotosMediaClientTimeInfo",
                    "description": "Start time including time zone offset. Prefer this over start_ms field."
                },
                "timezone": {
                    "description": "A timezone name from google3/i18n/identifiers/data/timezones.txt, such\nas \"America/Los_Angeles\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionTimeInfoMask": {
            "id": "PhotosMediaClientCollectionTimeInfoMask",
            "properties": {
                "endTime": {
                    "$ref": "PhotosMediaClientTimeInfoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "startTime": {
                    "$ref": "PhotosMediaClientTimeInfoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionTitleInfo": {
            "description": "Information used to construct the localized title of an automatically\ngenerated collection.",
            "id": "PhotosMediaClientCollectionTitleInfo",
            "properties": {
                "parameterBinding": {
                    "description": "The translated text bindings for the parameters of the template_type.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionTitleInfoTemplateParameterBinding"
                    },
                    "type": "array"
                },
                "templateType": {
                    "description": "The type of title template. Establishes which template parameter bindings\nwill be returned for generation of the translated title.",
                    "enum": [
                        "UNKNOWN_TEMPLATE",
                        "TRIP",
                        "WEEKEND",
                        "DAY_OF_WEEK",
                        "HOLIDAY",
                        "N_DAYS",
                        "ACTIVITY"
                    ],
                    "enumDescriptions": [
                        "Template params: none.",
                        "Example: Trip\nExample: Trip to New York\nExample: Trip to California and Oregon\nTemplate params: up to 2 parameters named \"LOCATION\".",
                        "Example: Weekend\nExample: Weekend in New York\nExample: Weekend in California and Oregon\nTemplate params: up to 2 parameters named \"LOCATION\".",
                        "Example: Wednesday afternoon\nExample: Friday morning in New York\nExample: Sunday evening in Mountain View and Palo Alto\nTemplate params: \"DAY\", \"TIME_OF_DAY\", up to 2 parameters named\n\"LOCATION\".",
                        "Example: Thanksgiving\nExample: Christmas in New York\nExample: Halloween in Mountain View and Palo Alto\nTemplate params: \"HOLIDAY\" and up to 2 parameters named \"LOCATION\".",
                        "Example: 5 days in New York\nExample: 10 days in Mountain View and Palo Alto\nTemplate params: \"NUM_DAYS\" and up to 2 parameters named \"LOCATION\".",
                        "Example: Bike ride in New York\nExample: Bike ride in New York and New Jersey.\nTemplate params: \"ACTIVITY\" and up to 2 parameters named\n\"LOCATION\"."
                    ],
                    "type": "string"
                },
                "titleEn": {
                    "description": "English rendering of the title. Mainly for debugging but can also be used\nas a fallback if localized title cannot be rendered for some reason.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionTitleInfoMask": {
            "description": "CollectionTitleInfoMask intentionally omits masks for its\nsub-fields because the structure only makes sense as a whole.",
            "id": "PhotosMediaClientCollectionTitleInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionTitleInfoTemplateParameterBinding": {
            "description": "A binding for a template parameter. The binding contains a\n'translation_key', for example, \"MONDAY\" which clients will translate, or\nthe definitive 'translation'.",
            "id": "PhotosMediaClientCollectionTitleInfoTemplateParameterBinding",
            "properties": {
                "parameterName": {
                    "type": "string"
                },
                "translation": {
                    "items": {
                        "$ref": "PhotosMediaClientCollectionTitleInfoTranslatedText"
                    },
                    "type": "array"
                },
                "translationKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionTitleInfoTranslatedText": {
            "id": "PhotosMediaClientCollectionTitleInfoTranslatedText",
            "properties": {
                "languageCode": {
                    "description": "Language codes of the translation. See LanguageCode.java. Several\nlanguage codes may map to the same translated text.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "translatedText": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionsSortCriteria": {
            "description": "The sort criteria used for displaying a user's collections in the\ncollections view. See go/photos-be-albums-sorting.",
            "id": "PhotosMediaClientCollectionsSortCriteria",
            "properties": {
                "sortBy": {
                    "description": "Identifies the basis for sorting this MediaActor's collections.",
                    "enum": [
                        "UNKNOWN_SORT_COLLECTIONS_BY",
                        "PHOTO_TIMESTAMP",
                        "COLLECTION_MODIFICATION_TIMESTAMP",
                        "COLLECTION_TITLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Sort collections in reverse chronological order by the collection's most\nrecent photo timestamp.",
                        "Sort collections in reverse chronological order by the collection's\nmodification timestamp.",
                        "Sort collections in lexicographical order by the collection's title."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCollectionsSortCriteriaMask": {
            "id": "PhotosMediaClientCollectionsSortCriteriaMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientComment": {
            "description": "Information about a specific comment, such as id, creator, content, etc.",
            "id": "PhotosMediaClientComment",
            "properties": {
                "allowedAction": {
                    "description": "The set of allowed actions the viewer can take on this comment.",
                    "items": {
                        "$ref": "PhotosMediaClientCommentAllowedAction"
                    },
                    "type": "array"
                },
                "commenter": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "Id of the actor who created the comment."
                },
                "content": {
                    "$ref": "PhotosMediaClientCommentContent",
                    "description": "Content of the comment."
                },
                "id": {
                    "$ref": "PhotosMediaClientCommentId",
                    "description": "Id of the comment."
                },
                "mediaRef": {
                    "$ref": "PhotosMediaClientMediaRef",
                    "description": "A reference to the media the comment is on, ex. a collection or an item."
                },
                "sortKey": {
                    "description": "A websafe string that can be used to sort comments in ascending order.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentAllowedAction": {
            "description": "Define the comment related actions that the viewer may perform.\nWill be returned in each Comment - so that it only needs to be computed for\ncallers that ask for comments.",
            "id": "PhotosMediaClientCommentAllowedAction",
            "properties": {
                "action": {
                    "enum": [
                        "COMMENT_ALLOWED_ACTION_UNKNOWN",
                        "DELETE_COMMENT",
                        "REPORT_ABUSE"
                    ],
                    "enumDescriptions": [
                        "",
                        "The viewer may delete this comment.",
                        "The viewer may report this comment as abusive."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentAllowedActionMask": {
            "id": "PhotosMediaClientCommentAllowedActionMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentContent": {
            "description": "Content of a comment.",
            "id": "PhotosMediaClientCommentContent",
            "properties": {
                "creationTimeMs": {
                    "description": "Time at which the comment was created.",
                    "format": "int64",
                    "type": "string"
                },
                "segments": {
                    "$ref": "SocialCommonSegments",
                    "description": "Textual content for the comment."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentContentMask": {
            "id": "PhotosMediaClientCommentContentMask",
            "properties": {
                "segments": {
                    "$ref": "PhotosMediaClientSegmentsMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentData": {
            "description": "Information about comments on an object.\nNEXT ID: 4",
            "id": "PhotosMediaClientCommentData",
            "properties": {
                "comment": {
                    "description": "Information about the individual comments.\nOnly supported for collection level comments.",
                    "items": {
                        "$ref": "PhotosMediaClientComment"
                    },
                    "type": "array"
                },
                "resumeToken": {
                    "description": "If populated, there are more comments available. Clients may make another\nrequest for these comments with this resume token to resume the comments.",
                    "type": "string"
                },
                "totalCount": {
                    "description": "The total number of comments.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentDataMask": {
            "id": "PhotosMediaClientCommentDataMask",
            "properties": {
                "comment": {
                    "$ref": "PhotosMediaClientCommentMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentId": {
            "description": "An encrypted websafe blob that is a globally unique identifier for a comment.\nThis ID can be used for subsequent updates and deletes of a comment.",
            "id": "PhotosMediaClientCommentId",
            "properties": {
                "commentId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCommentMask": {
            "id": "PhotosMediaClientCommentMask",
            "properties": {
                "allowedAction": {
                    "$ref": "PhotosMediaClientCommentAllowedActionMask"
                },
                "commenter": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "content": {
                    "$ref": "PhotosMediaClientCommentContentMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCompactWarpGridMask": {
            "id": "PhotosMediaClientCompactWarpGridMask",
            "properties": {
                "affineTransform": {
                    "$ref": "PhotosMediaClientCompactWarpGridMaskAffineTransformMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCompactWarpGridMaskAffineTransformMask": {
            "id": "PhotosMediaClientCompactWarpGridMaskAffineTransformMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCountWithAccuracy": {
            "description": "A count and its accuracy.",
            "id": "PhotosMediaClientCountWithAccuracy",
            "properties": {
                "accuracy": {
                    "description": "Specifies the accuracy of the count above.",
                    "enum": [
                        "UNKNOWN_ACCURACY",
                        "EXACT",
                        "LOWER_BOUND"
                    ],
                    "enumDescriptions": [
                        "",
                        "The count is exact.",
                        "The count is a lower bound, i.e. it is less than or equal to the actual\nnumber. This can be used by clients to indicate to the user that there\nmay be more objects than what is indicated by count, e.g. \"99+\""
                    ],
                    "type": "string"
                },
                "count": {
                    "description": "The count.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCuratedItemSetRef": {
            "description": "A reference to a CuratedItemSet. This is used by Tombstones to identify\ndeleted curated item sets.",
            "id": "PhotosMediaClientCuratedItemSetRef",
            "properties": {
                "curatedItemSetMediaKey": {
                    "description": "Media key of the referenced curated item set.",
                    "type": "string"
                },
                "tombstoneRenderType": {
                    "description": "LINT.ThenChange(\n    //depot/google3/photos/media/client/proto/curated_item_set.proto)",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_TOMBSTONE_RENDER_TYPE",
                            "MEMORIES_CAROUSEL",
                            "CREATION_PIVOT_TRIP",
                            "CREATION_PIVOT_BEST_OF_RECENT",
                            "CREATION_PIVOT_PEOPLE_ATTRIBUTE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCurationData": {
            "description": "Data pertaining to the curation state of the item.\nNEXT ID: 3",
            "id": "PhotosMediaClientCurationData",
            "properties": {
                "isHighlighted": {
                    "description": "Whether the item's curation state or user promotion/demotion status will\ncause the item to be in highlights. Only populated for non-event albums.",
                    "type": "boolean"
                },
                "showcaseScore": {
                    "description": "The score is used to determine the quality of an image for showcase.\nThe higher the score, the better the picture.\nMore details are available at go/photos-showcase-backend.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientCurationDataMask": {
            "id": "PhotosMediaClientCurationDataMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientDisplayPropertiesMask": {
            "id": "PhotosMediaClientDisplayPropertiesMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientDownloadSettings": {
            "description": "Settings related to photo downloads.",
            "id": "PhotosMediaClientDownloadSettings",
            "properties": {
                "enablePhotosDownload": {
                    "description": "Whether the user wants photos download enabled.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientDownloadSettingsMask": {
            "id": "PhotosMediaClientDownloadSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientDriveIntegrationSettings": {
            "description": "Settings related to Drive integration.",
            "id": "PhotosMediaClientDriveIntegrationSettings",
            "properties": {
                "drivePhotosAllowed": {
                    "description": "Whether the drive_photos_enabled preference should be shown to the user.\nCertain classes of users are not allowed to opt-in to Drive sync.",
                    "type": "boolean"
                },
                "drivePhotosEnabled": {
                    "description": "Whether to show photos from Google Drive inside the user's photos gallery.",
                    "type": "boolean"
                },
                "driveSyncShutdownState": {
                    "description": "State of the user in regard to the Drive Sync shutdown.",
                    "enum": [
                        "UNKNOWN_DRIVE_SYNC_SHUTDOWN_STATE",
                        "NOT_MIGRATED",
                        "MIGRATED_WITH_DRIVE_SYNC_ENABLED",
                        "MIGRATED_WITH_DRIVE_SYNC_DISABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "User is not migrated, clients can check drive_photos_enabled to know\ncurrent Drive Sync setting.",
                        "User is migrated and had drive_photos_enabled set to true at the time\nof the migration.",
                        "User is migrated and did NOT had drive_photos_enabled set to true at the\ntime of the migration."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientDriveIntegrationSettingsMask": {
            "id": "PhotosMediaClientDriveIntegrationSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEditListMask": {
            "description": "Mask for photos_editing_filters.EditList",
            "id": "PhotosMediaClientEditListMask",
            "properties": {
                "editListOptions": {
                    "$ref": "PhotosMediaClientEditListOptions"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEditListOptions": {
            "description": "Option used to control the photos_editing_filters.EditList retrieval.",
            "id": "PhotosMediaClientEditListOptions",
            "properties": {
                "stripEditListIfPhotoUnedited": {
                    "description": "If true the whole photos_editing_filters.EditList will not be returned\niff the photo was never edited.\nThis option has been created in order to try to optimize the size of the\nMediaItems returned to the clients when calling SyncUserMedia.\nMore info: http://go/syncusermedia-analysis\nand http://go/syncusermedianoeditlist",
                    "type": "boolean"
                },
                "stripFaceData": {
                    "description": "If true, all the data regarding the face detection will be removed from the\nedit list.\nThis option has been created in order to try to optimize the size of the\nMediaItems returned to the clients when calling SyncUserMedia.\nMore info: http://go/syncusermedia-analysis",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEnrichmentPlace": {
            "description": "A place representation for use in the MapEnrichment and LocationEnrichment.",
            "id": "PhotosMediaClientEnrichmentPlace",
            "properties": {
                "description": {
                    "description": "One line description of the place.\nFor example, \"Big Sur, California\"",
                    "type": "string"
                },
                "featurePlace": {
                    "$ref": "PhotosMediaClientFeaturePlace",
                    "description": "Only populated if place_type is FEATURE."
                },
                "name": {
                    "description": "Required. Name of the place.\nFor example, \"Starbucks\"",
                    "type": "string"
                },
                "originalSortOrder": {
                    "description": "An index specifying the original position of this place relative to the\nother places in a list.",
                    "format": "int32",
                    "type": "integer"
                },
                "placeType": {
                    "description": "Required. Type of place.",
                    "enum": [
                        "UNKNOWN_PLACE_TYPE",
                        "HOME",
                        "WORK",
                        "FEATURE",
                        "CUSTOM_LABEL",
                        "SEARCHED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The SEARCHED type is included as a convenience for clients who wish to\nadd EnrichmentPlace objects using a place_id (go/place-id-encoding).\nThis SEARCHED type will NEVER be returned from the server."
                    ],
                    "type": "string"
                },
                "point": {
                    "$ref": "PhotosMediaClientLocationPoint",
                    "description": "Required. The centroid of this place."
                },
                "searchedPlace": {
                    "$ref": "PhotosMediaClientSearchedPlace",
                    "description": "Only populated if place_type is SEARCHED."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEnrichmentPlaceMask": {
            "id": "PhotosMediaClientEnrichmentPlaceMask",
            "properties": {
                "featurePlace": {
                    "$ref": "PhotosMediaClientFeaturePlaceMask"
                },
                "point": {
                    "$ref": "PhotosMediaClientLocationPointMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEnrichmentProto": {
            "description": "Enrichments are small units of information that can be rendered in addition\nto MediaItems (photos). They help organize and convey extra context in\npresentations of photos.\nEnrichment mapped to the same name as oz.carousel.boswell.data.Enrichment\nand is the reason we have added 'Proto' to the name of this message.",
            "id": "PhotosMediaClientEnrichmentProto",
            "properties": {
                "breakEnrichment": {
                    "$ref": "PhotosMediaClientBreakEnrichment",
                    "description": "Only populated if enrichment_type is BREAK."
                },
                "locationEnrichment": {
                    "$ref": "PhotosMediaClientLocationEnrichment",
                    "description": "Only populated if enrichment_type is LOCATION."
                },
                "mapEnrichment": {
                    "$ref": "PhotosMediaClientMapEnrichment",
                    "description": "Only populated if enrichment_type is MAP."
                },
                "narrativeEnrichment": {
                    "$ref": "PhotosMediaClientNarrativeEnrichment",
                    "description": "Only populated if enrichment_type is NARRATIVE."
                },
                "type": {
                    "enum": [
                        "UNKNOWN_ENRICHMENT_TYPE",
                        "NARRATIVE",
                        "LOCATION",
                        "MAP",
                        "BREAK"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEnrichmentProtoMask": {
            "id": "PhotosMediaClientEnrichmentProtoMask",
            "properties": {
                "breakEnrichment": {
                    "$ref": "PhotosMediaClientBreakEnrichmentMask"
                },
                "locationEnrichment": {
                    "$ref": "PhotosMediaClientLocationEnrichmentMask"
                },
                "mapEnrichment": {
                    "$ref": "PhotosMediaClientMapEnrichmentMask"
                },
                "narrativeEnrichment": {
                    "$ref": "PhotosMediaClientNarrativeEnrichmentMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEnvelopePermission": {
            "description": "Represents a permission type and the set of envelope users it applies to.",
            "id": "PhotosMediaClientEnvelopePermission",
            "properties": {
                "permissionType": {
                    "description": "The permission for the specified users.",
                    "enum": [
                        "UNKNOWN_PERMISSION_TYPE",
                        "COLLABORATOR",
                        "COMMENTER"
                    ],
                    "enumDescriptions": [
                        "Unknown permission type.",
                        "Allows users to add photos to the envelope.",
                        "Allows users to comment on the envelope."
                    ],
                    "type": "string"
                },
                "userCategory": {
                    "description": "The category of envelope users that some permission applies to.",
                    "enum": [
                        "UNKNOWN_USER_CATEGORY",
                        "MINIMAL_ACCESS_TOKEN",
                        "DIRECT_INVITE"
                    ],
                    "enumDescriptions": [
                        "Unknown user category.",
                        "Represents users accessing the envelope via the minimal access token\n(global authkey).",
                        "Represents users directly invited by the envelope owner, as well as users\nthey subsequently invite. Does not include users invited by\nMINIMAL_ACCESS_TOKEN users. See\ngo/photos-direct-sharing-permission-decisions for more info."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEnvelopePermissionMask": {
            "id": "PhotosMediaClientEnvelopePermissionMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEquivalenceData": {
            "description": "Equivalence data for a collection.\nIn the MediaService API this is stored in collection.proto\nIt was moved here to break a circular dependency with Tacotown.",
            "id": "PhotosMediaClientEquivalenceData",
            "properties": {
                "token": {
                    "description": "Equivalence token is a one-way hash of the meta-data about the\ncollection and it's items stored in Photos Backend.\n\nClients can use this to compare with the equivalence token of a local\ncopy of this collection to determine if the version they have is\nidentical to the one on server. Only exact match comparisons should be\nperformed as the equivalence token doesn't convey whether a copy is\nolder or newer than the other.\n\nCurrently, changes to data not stored in Photos Backend will not be\nreflected in the equivalence token. These include CollectionActivityData,\nAbuseData, SharingTarget, CommentData and PlusOneData for either the\ncollection or for any of the  items belonging to this collection. As a\nresult the equivalence token of a collection is not guaranteed to change\neven if there were changes to any of these fields.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientEquivalenceDataMask": {
            "id": "PhotosMediaClientEquivalenceDataMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceClusteringSettings": {
            "description": "Settings related to the face clustering feature.\nNext ID: 12",
            "id": "PhotosMediaClientFaceClusteringSettings",
            "properties": {
                "clusteringState": {
                    "enum": [
                        "UNKNOWN_CLUSTERING_STATE",
                        "INELIGIBLE_FOR_CLUSTERING",
                        "SERVER",
                        "ON_DEVICE"
                    ],
                    "enumDescriptions": [
                        "This state will never be returned by the server. If clients see this it\nmeans there is a new enum value they don't know about.\nThis state should be treated as if the user is not eligible.\nhttp://go/protodosdonts#do-include-a-unspecified-value-in-an-enum",
                        "The user is ineligible for both server and on-device face clustering.",
                        "The user may be eligible for server face clustering.\nRefer to face_clustering_eligibility for the specific eligibility state.",
                        "The user may be eligible for on-device face clustering.\nRefer to face_clustering_eligibility for the specific eligibility state."
                    ],
                    "type": "string"
                },
                "clusteringVersion": {
                    "description": "The version representing the current clustering state of the user.\nSee go/odfc-be-design for more details.",
                    "format": "int64",
                    "type": "string"
                },
                "deviceClustererVersion": {
                    "description": "The latest version of the clustering library used on any of the user's\ndevices to perform clustering. This state encompasses the latest clustering\nalgorithm or template version used in the on-device MI library.\nOnly set if the user is enabled for ODFC.\nSee go/odfg-clustering-library-upgrade for more details.",
                    "format": "int64",
                    "type": "string"
                },
                "faceClusteringAllowed": {
                    "description": "Whether or not the user is allowed to toggle the face clustering setting.\nClients should check this before rendering any UI for the\nface_clustering_enabled setting.\nDEPRECATED- refer to ClusteringState and FaceClusteringEligibility instead.",
                    "type": "boolean"
                },
                "faceClusteringEligibility": {
                    "enum": [
                        "UNKNOWN_ELIGIBILITY",
                        "ELIGIBLE",
                        "ENABLED",
                        "OPTOUT",
                        "DISABLED_BY_KILL_SWITCH"
                    ],
                    "enumDescriptions": [
                        "This state will never be set by the server. If clients see this, then\neither the server did not set face_clustering_eligibility at all (e.g. if\nclustering_state == INELIGIBLE_FOR_CLUSTERING), or the server set a\nvalue that the client is too old to understand. In either case, this\nstate should be treated as if the user is not eligible.\nhttp://go/protodosdonts#do-include-a-unspecified-value-in-an-enum",
                        "The user is eligible for face clustering but has neither opted-in nor\nopted out.",
                        "The user is eligible and enabled for face clustering.\nImplies that the user is also ELIGIBLE, and has implicitly or explicitly\nopted in to face clustering from an eligible location.",
                        "The user has opted out of face clustering.\nImplies that the user is also ELIGIBLE, and has implicitly or explicitly\nopted out of face clustering from an eligible location.",
                        "The user was previously enabled for on-device face clustering, but was\nforced into an ineligible state because of a kill switch.\nThis should only be set if the user's cluster_state is also INELIGIBLE.\nThis is so clients can show a special UI treatment for users who were\npreviously enabled on-device. All face clusters should also be hidden\nfrom the UI.\nBackend is expected to restore FaceClusteringEligibility back to the\nuser's previous state after the kill switch is reverted."
                    ],
                    "type": "string"
                },
                "faceClusteringEnabled": {
                    "description": "This setting indicates if face clustering is enabled for a user. This\nsetting should be rendered only if the server has indicated as such (via\nface_clustering_allowed).\nDEPRECATED- refer to ClusteringState and FaceClusteringEligibility instead.",
                    "type": "boolean"
                },
                "onDeviceClusteringEnabled": {
                    "description": "This setting indicates whether the account is enabled for on-device face\nclustering. If false, then the account may or may not be enabled for server\nface clustering.\nClients should check this before running any clustering on the device.\nSee http://go/on-device-pfc-backend for more details.\nDEPRECATED- refer to ClusteringState and FaceClusteringEligibility instead.",
                    "type": "boolean"
                },
                "petClustersAllowed": {
                    "description": "Whether this user is eligible for pet clusters.\nSee http://go/photos-pet-search for more details.\nClients should check this before rendering any UI for the\nshow_pets_with_people setting.",
                    "type": "boolean"
                },
                "resetMode": {
                    "enum": [
                        "UNKNOWN_RESET_MODE",
                        "NONE",
                        "PREPARING",
                        "RECLUSTERING",
                        "RECONCILING"
                    ],
                    "enumDescriptions": [
                        "",
                        "User's account is not in reset mode and is in the usual clustering flow.",
                        "Pending clusters from a previous reset are being cleared to prepare for a\nnew cluster reset.",
                        "Photos are being clustered from scratch into pending clusters.",
                        "Pending clusters are being reconciled with existing clusters."
                    ],
                    "type": "string"
                },
                "showPetsWithPeople": {
                    "description": "Whether to show pet clusters together with people clusters.",
                    "type": "boolean"
                },
                "wipeoutStatus": {
                    "enum": [
                        "UNKNOWN_WIPEOUT_STATUS",
                        "NO_PENDING_WIPEOUT",
                        "OPTOUT_PENDING_WIPEOUT"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user's clustering data is current and does not need to be wiped out.\nIf any wipeout was required, it has already been completed.\nThis field should be treated the same as when wipeout_status is unset.",
                        "The user's clusters are pending a wipeout due to the user opting out of\nface clustering. If this status is set, ODFC should be paused.\nThis may be set even if the user has opted back in to face clustering."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceClusteringSettingsMask": {
            "id": "PhotosMediaClientFaceClusteringSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceId": {
            "description": "Identifies a face contained in an item.",
            "id": "PhotosMediaClientFaceId",
            "properties": {
                "legacyFaceId": {
                    "$ref": "PhotosMediaClientFaceIdLegacyFaceId"
                },
                "mediaKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceIdLegacyFaceId": {
            "id": "PhotosMediaClientFaceIdLegacyFaceId",
            "properties": {
                "faceId": {
                    "format": "int64",
                    "type": "string"
                },
                "obfuscatedUserId": {
                    "type": "string"
                },
                "photoId": {
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceKernelRef": {
            "description": "A reference to a face kernel. For example, this is used to identify face\nkernels that have been deleted from storage.",
            "id": "PhotosMediaClientFaceKernelRef",
            "properties": {
                "kernelMediaKey": {
                    "description": "Media key of the referenced face kernel.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceKernelRefMask": {
            "id": "PhotosMediaClientFaceKernelRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceRegionInfo": {
            "description": "Fields that are specific to RegionInfos of type FACE.",
            "id": "PhotosMediaClientFaceRegionInfo",
            "properties": {
                "detectionConfidence": {
                    "description": "Confidence is in range [0, 1].",
                    "format": "float",
                    "type": "number"
                },
                "nonHumanProbability": {
                    "description": "Probability is in range [0, 1].",
                    "format": "float",
                    "type": "number"
                },
                "panAngle": {
                    "description": "Indicates how much leftward/rightward the face is pointing relative to the\nvertical plane perpendicular to the image. Range [-180, 180].",
                    "format": "float",
                    "type": "number"
                },
                "rollAngle": {
                    "description": "Roll angle indicates how much clockwise/anti-clockwise the face is rotated\nrelative to the image vertical and about the axis perpendicular to the\nface. Range [-180,180].",
                    "format": "float",
                    "type": "number"
                },
                "tiltAngle": {
                    "description": "Indicates how much upwards/downwards the face is pointing relative to the\nimage's horizontal plane. Range [-180,180].",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceRegionInfoMask": {
            "id": "PhotosMediaClientFaceRegionInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceSharingSettings": {
            "description": "Settings related to the Face Model sharing feature.\nMore info: go/personal-models-sharing",
            "id": "PhotosMediaClientFaceSharingSettings",
            "properties": {
                "availableFaceOptInPromo": {
                    "description": "Represents all the promos that are available to be presented to the user\nfor face opt-in reengagement.\nSee: go/face-optin-reengagement-backend",
                    "items": {
                        "$ref": "PhotosMediaClientFaceSharingSettingsAvailableFaceOptInPromo"
                    },
                    "type": "array"
                },
                "faceSharingOptInState": {
                    "description": "Represents the different states a user can be in regarding the face sharing\nfeature",
                    "enum": [
                        "UNKNOWN_OPT_IN_STATE",
                        "NOT_STARTED",
                        "OPTED_IN",
                        "OPTED_OUT",
                        "NOT_ELIGIBLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user has not yet seen the opt-in prompt for the face sharing feature.",
                        "Indicates the user has opted into sharing their face model.",
                        "Indicates the user has opted-out of the face sharing feature.",
                        "Indicates the user is not eligible for face sharing. They should not\nbe allowed to opt-in while they are in this state, and on-device\nsuggestions should not be generated.\nMore info: go/face-sharing-opt-in-states"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceSharingSettingsAvailableFaceOptInPromo": {
            "description": "Represents a promo that can be be used by the clients to reengage users in\nthe face opt-in feature",
            "id": "PhotosMediaClientFaceSharingSettingsAvailableFaceOptInPromo",
            "properties": {
                "faceOptInPromo": {
                    "enum": [
                        "UNKNOWN_FACE_OPT_IN_PROMO",
                        "HALF_SHEET_OVERLAY",
                        "MAIN_GRID",
                        "NOTIFICATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "The initial promo shown to new users: go/face-contact-linking",
                        "A promo shown at the top of the all-photos grid.\nSee: http://shortn/_mtQOr5xLLg",
                        "A locally generated system tray notification that triggers the\nHALF_SHEET_OVERLAY promo again.\nSee: http://shortn/_APqZYyWJk6"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceSharingSettingsMask": {
            "id": "PhotosMediaClientFaceSharingSettingsMask",
            "properties": {
                "availableFaceOptInPromo": {
                    "$ref": "PhotosMediaClientFaceSharingSettingsMaskAvailableFaceOptInPromoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceSharingSettingsMaskAvailableFaceOptInPromoMask": {
            "id": "PhotosMediaClientFaceSharingSettingsMaskAvailableFaceOptInPromoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceTag": {
            "description": "Associates a rectangular portion of a photo with a subject.\nThe intended use is for tagging faces in photos.\n\nNote that subject and tagger are ONLY populated for FaceTags that have been\nproperly approved. ALL un-approved subjects will appear in suggested_subject\nincluding subjects suggested by other users and subjects suggested by the\nsystem.\n\nIn short - if subject is populated, it is appropriate to show the tag to the\nviewer as an approved tag.\n\nThis is a departure from the previous system, in which some suggested\ntags would appear as the subject and a separate status had to be examined in\norder to determine whether the tag could be shown to users.",
            "id": "PhotosMediaClientFaceTag",
            "properties": {
                "bounds": {
                    "$ref": "PhotosMediaClientRect32",
                    "description": "Specifies the bounds enclosing the face in the item"
                },
                "potentialSubject": {
                    "description": "Potential subjects that are not of high-enough confidence to warrant\nprompting the user for - e.g. \"Is this <User>?\" - but that may be valuable\nto show in the context of an auto-complete list when the user has manually\ninitiated a face-tagging operation.\nUsers should _never_ be prompted to confirm potential subjects.",
                    "items": {
                        "$ref": "PhotosMediaClientAnnotationSubject"
                    },
                    "type": "array"
                },
                "subject": {
                    "$ref": "PhotosMediaClientAnnotationSubject",
                    "description": "The approved subject.\nPopulated iff the tag is appropriate to show to the viewer."
                },
                "suggestedSubject": {
                    "description": "Suggested subjects. Includes both system-suggested subjects and subjects\nsuggested by other users which have not been approved.\n\nNote - Suggestions may be present even when 'subject' is populated. An\nexample would be a name-tag that was suggested by a user, but that has not\nyet been approved by the taggee. In this case, 'subject' would be populated\nwith a TEXT tag containing the taggee's name. When the taggee views the\nitem, the suggested subject will be returned here, so the taggee can\napprove or reject the name-tag.",
                    "items": {
                        "$ref": "PhotosMediaClientAnnotationSubject"
                    },
                    "type": "array"
                },
                "url": {
                    "description": "a FIFE content-url for the region containing the face",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceTagMask": {
            "id": "PhotosMediaClientFaceTagMask",
            "properties": {
                "bounds": {
                    "$ref": "PhotosMediaClientRect32Mask"
                },
                "potentialSubject": {
                    "$ref": "PhotosMediaClientAnnotationSubjectMask"
                },
                "subject": {
                    "$ref": "PhotosMediaClientAnnotationSubjectMask"
                },
                "suggestedSubject": {
                    "$ref": "PhotosMediaClientAnnotationSubjectMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceTemplateInfo": {
            "description": "Account-level info related to face templates, for the user. Note that this\nshould not be used to hold data specific to one face template or face kernel.",
            "id": "PhotosMediaClientFaceTemplateInfo",
            "properties": {
                "mobileFaceTemplateVersion": {
                    "description": "The live face template version for the user. This maps to the server-side\nversion stored in the UserEntity, and will be consistent with the version\nof face kernels we sync down to the client. We only create FACENET_8\nkernels for FACENET_8 users as of today (05/10/2017); all such users will\nbe returned with MobileFaceTemplateVersion.V1.",
                    "enum": [
                        "UNKNOWN_MOBILE_FACE_TEMPLATE_VERSION",
                        "V0",
                        "V1"
                    ],
                    "enumDescriptions": [
                        "Indicates that the face template version is unknown.\nPlease note that, in the event that a new enum is added here for a new\nversion, older clients might not recognize the new enum, and might\ninterpret it as this UNKNOWN value instead. See b/38172338 for context.",
                        "The equivalent of server-side face template version FACENET_7 or earlier.",
                        "The equivalent of server-side face template version FACENET_8. This is\ncurrently the latest version."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFaceTemplateInfoMask": {
            "id": "PhotosMediaClientFaceTemplateInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFacialRecognitionSettings": {
            "description": "Settings related to the facial recognition feature.",
            "id": "PhotosMediaClientFacialRecognitionSettings",
            "properties": {
                "facialRecognitionAllowed": {
                    "description": "Whether or not the user is allowed to turn on the facial recognition\nfeature. Clients should check this before allowing the user to toggle\nfacial recognition (via setting facial_recognition_enabled) and should\nnot show any find-my-face promos or settings if this is set to false.",
                    "type": "boolean"
                },
                "facialRecognitionEnabled": {
                    "description": "This setting allows a user to enable the facial recognition feature via\nthe UI. This should only be made visible to the user if the \"facial\nrecognition allowed\" setting has been enabled by the client.",
                    "type": "boolean"
                },
                "findMyFaceNoticeCount": {
                    "description": "The number of times the user has seen the Find-my-face user notice.",
                    "format": "int32",
                    "type": "integer"
                },
                "hasSeenFindMyFacePromo": {
                    "description": "Whether the user has seen the Find-my-face promo.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFacialRecognitionSettingsMask": {
            "id": "PhotosMediaClientFacialRecognitionSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFailedVideosSettings": {
            "description": "Settings related to failed videos. These are read-only. See\ngo/photos-failed-videos-backend-design.",
            "id": "PhotosMediaClientFailedVideosSettings",
            "properties": {
                "showMainGridNotification": {
                    "description": "Whether to show notification on the main grid with entry point to failed\nvideos view. This applies only to web.",
                    "type": "boolean"
                },
                "showSettingsEntryPoint": {
                    "description": "Whether to show \u2018Unsupported videos\u2019 entry point on Settings page. This\napplies to all clients, but may return different results depending on\nclient type.",
                    "type": "boolean"
                },
                "showVideoSearchNotification": {
                    "description": "Whether to show message in video search. This applies to all clients.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFailedVideosSettingsMask": {
            "id": "PhotosMediaClientFailedVideosSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFavoriteInfo": {
            "description": "Stores the current favorite state of the item.\nSee go/photos-be-favorites for details.",
            "id": "PhotosMediaClientFavoriteInfo",
            "properties": {
                "favoriteState": {
                    "enum": [
                        "UNKNOWN_FAVORITE_STATE",
                        "FAVORITE",
                        "NOT_FAVORITE"
                    ],
                    "enumDescriptions": [
                        "",
                        "The item is currently marked as favorite.",
                        "The item is currently marked as not favorite."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFavoriteInfoMask": {
            "id": "PhotosMediaClientFavoriteInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFeaturePlace": {
            "description": "A place identified by a LocationFeatureIdProto, for example, a visit to\na place of business.",
            "id": "PhotosMediaClientFeaturePlace",
            "properties": {
                "featureId": {
                    "$ref": "PhotosMediaClientLocationFeatureIdProto",
                    "description": "Required geostore feature id that identifies the place."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFeaturePlaceMask": {
            "id": "PhotosMediaClientFeaturePlaceMask",
            "properties": {
                "featureId": {
                    "$ref": "PhotosMediaClientLocationFeatureIdProtoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFeaturedPhotosSettings": {
            "description": "Settings related to featured photos.",
            "id": "PhotosMediaClientFeaturedPhotosSettings",
            "properties": {
                "allowPhotosFeatured": {
                    "description": "Whether or not user's photos can be featured on G+ featured stream",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientFeaturedPhotosSettingsMask": {
            "id": "PhotosMediaClientFeaturedPhotosSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientGallerySettings": {
            "description": "Settings related to Gallery features",
            "id": "PhotosMediaClientGallerySettings",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientGallerySettingsMask": {
            "id": "PhotosMediaClientGallerySettingsMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientGeoSettings": {
            "description": "Settings related to geo.",
            "id": "PhotosMediaClientGeoSettings",
            "properties": {
                "googlePhotosDefaultGeoVisibility": {
                    "description": "The default for whether to show geo location for photo albums in the\ngoogle photos product.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientGeoSettingsMask": {
            "id": "PhotosMediaClientGeoSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientGeotaggerPersonalSearchBackfillSettings": {
            "description": "Settings related to location headers (go/locationheaders)",
            "id": "PhotosMediaClientGeotaggerPersonalSearchBackfillSettings",
            "properties": {
                "backfillReady": {
                    "description": "Whether the user has been backfilled in Personal Search storage by\nGeotagger.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientGeotaggerPersonalSearchBackfillSettingsMask": {
            "id": "PhotosMediaClientGeotaggerPersonalSearchBackfillSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientHiddenItem": {
            "description": "Basic data about a MediaItem that was not returned because it is a duplicate\nof the containing MediaItem\nNEXT ID: 2",
            "id": "PhotosMediaClientHiddenItem",
            "properties": {
                "id": {
                    "$ref": "PhotosMediaClientItemId",
                    "description": "Id of the hidden item."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientHiddenItemMask": {
            "id": "PhotosMediaClientHiddenItemMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientImageProperties": {
            "description": "Information about how to display a single image\nNEXT ID: 12",
            "id": "PhotosMediaClientImageProperties",
            "properties": {
                "depthOrigin": {
                    "description": "Only populated if the image has depth related metadata.",
                    "enum": [
                        "UNKNOWN_DEPTH_ORIGIN",
                        "GDEPTH",
                        "MPO",
                        "DYNAMIC_DEPTH"
                    ],
                    "enumDescriptions": [
                        "Unused fallback.",
                        "Image contains GDepth info (go/gdepth).",
                        "Image contains depth info embedded in a Multi Picture Object (MPO)\n(go/photos-mpo).",
                        "Image contains DynamicDepth info (go/dynamic-depth)."
                    ],
                    "type": "string"
                },
                "dominantColor": {
                    "description": "Dominant colors of the photo: [ARGB0, ARGB1, ...], most dominant first.\nUsage includes coloring transparent overlays over photos to enhance text\ncontrast over photos. This field may be empty if the dominant color was\nnot computed for the photo (mainly older photos) and lacks starburst\nfeatures, in which case transparent grey may serve to enhance contrast.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "height": {
                    "format": "int64",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "The URL of the image.\nThis URL is an *unsized* FIFE Content URL - clients are expected to\napply the appropriate options before serving.  See http://go/fife-urls for\nmore information.",
                    "type": "string"
                },
                "mediaImageMetadata": {
                    "$ref": "PhotosMediaClientMediaImageMetadata",
                    "description": "Metadata about the image (e.g. MIME type, EXIF, animation parameters)."
                },
                "processing": {
                    "items": {
                        "$ref": "PhotosMediaClientImagePropertiesProcessing"
                    },
                    "type": "array"
                },
                "signedUrl": {
                    "description": "One or more signed urls for this image\nCurrently, media-service generates a fixed set of signed urls. In the\nfuture it may be possible to request specific signed urls.\nGenerally only populated for when the viewer is the owner of the image",
                    "items": {
                        "$ref": "PhotosMediaClientSignedUrl"
                    },
                    "type": "array"
                },
                "specialFormat": {
                    "description": "LINT.ThenChange(//depot/google3/apps/people/media/proto/common.proto)",
                    "enum": [
                        "UNKNOWN_SPECIAL_FORMAT",
                        "SPHERICAL_PANORAMA",
                        "VR_STEREO",
                        "VR_180"
                    ],
                    "enumDescriptions": [
                        "",
                        "The photo is a mono photosphere.",
                        "The photo is a VR photo, i.e. it is a stereoscopic panorama,\npossibly with sound.",
                        "Limited viewpoint VR of up to 180 degrees of horizontal and vertical\nfreedom. Video may contain both monoscopic and stereoscopic transcodes."
                    ],
                    "type": "string"
                },
                "width": {
                    "description": "The dimensions of the image (modulo downsizing) in pixels. The dimensions\ntake into account all transformations (e.g. crop and rotate).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientImagePropertiesMask": {
            "id": "PhotosMediaClientImagePropertiesMask",
            "properties": {
                "imageMetadata": {
                    "$ref": "PhotosMediaClientMediaImageMetadataMask"
                },
                "omitImageUrl": {
                    "description": "If set image_url will not be populated.",
                    "type": "boolean"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "processing": {
                    "$ref": "PhotosMediaClientImagePropertiesMaskProcessingMask"
                },
                "signedUrl": {
                    "$ref": "PhotosMediaClientSignedUrlMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientImagePropertiesMaskProcessingMask": {
            "id": "PhotosMediaClientImagePropertiesMaskProcessingMask",
            "properties": {
                "autoEnhanceData": {
                    "$ref": "PhotosMediaClientImagePropertiesMaskProcessingMaskAutoEnhanceDataMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientImagePropertiesMaskProcessingMaskAutoEnhanceDataMask": {
            "id": "PhotosMediaClientImagePropertiesMaskProcessingMaskAutoEnhanceDataMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientImagePropertiesProcessing": {
            "description": "Information about some interesting forms of image-processing that have been\napplied to the image. This can be loosely thought of as a summary of the\nedit-list for the image.",
            "id": "PhotosMediaClientImagePropertiesProcessing",
            "properties": {
                "autoEnhanceData": {
                    "$ref": "PhotosMediaClientImagePropertiesProcessingAutoEnhanceData"
                },
                "initiatedBy": {
                    "description": "Indicates how the processing step was initiated",
                    "enum": [
                        "UNKNOWN_INITIATOR",
                        "USER",
                        "SYSTEM"
                    ],
                    "enumDescriptions": [
                        "",
                        "Processing happened as a result of a user action",
                        "Processing was initiated by the system"
                    ],
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_PROCESSING_TYPE",
                        "AUTO_ENHANCE",
                        "OTHER_FILTER",
                        "SPATIAL_TRANSFORM"
                    ],
                    "enumDescriptions": [
                        "",
                        "The image has been sprinkled with 100% genuine magical pixie dust\nthat auto-magically make it look awesome.",
                        "At least one filter - other than auto-enhance filters (e.g. a Vignettte\nfilter), has been applied to the image",
                        "A spatial transform (such as crop or rotate)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientImagePropertiesProcessingAutoEnhanceData": {
            "description": "Data specific to auto enhance processing.\nOnly populated if type is AUTO_ENHANCE.",
            "id": "PhotosMediaClientImagePropertiesProcessingAutoEnhanceData",
            "properties": {
                "autoEnhanceImpactful": {
                    "description": "True if auto enhance processing made a significant impact on the item.",
                    "type": "boolean"
                },
                "format": {
                    "description": "The format of the AutoEnhance filter(s).",
                    "enum": [
                        "UNKNOWN_FORMAT",
                        "UNEXPANDED",
                        "EXPANDED_V2",
                        "EXPANDED_V3",
                        "CONSUMER_EDITING_V2"
                    ],
                    "enumDescriptions": [
                        "",
                        "Unexpanded format (contains a single AE filter)",
                        "Expanded format (contains multiple component filters).\nContains the V2 set of expanded filters",
                        "Expanded format (contains multiple component filters).\nContains the V3 set of expanded filters",
                        "Version 2 of the fixed consumer editing pipeline used in\nGoogle Photos (go/consumer_editing_v2_protos)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemAllowedAction": {
            "description": "Define the actions that a viewer may perform on a MediaItem.",
            "id": "PhotosMediaClientItemAllowedAction",
            "properties": {
                "action": {
                    "enum": [
                        "ITEM_ALLOWED_ACTION_UNKNOWN",
                        "COPY",
                        "MOVE",
                        "SHARE",
                        "RESHARE",
                        "MOVE_TO_TRASH",
                        "RESTORE_FROM_TRASH",
                        "DELETE_PERMANENTLY",
                        "ADD_COMMENT",
                        "DELETE_COMMENTS",
                        "DOWNLOAD",
                        "NAMETAG",
                        "REPORT_ABUSE",
                        "SET_AS_PROFILE_PHOTO",
                        "EDIT_CAPTION",
                        "EDIT_LOCATION",
                        "EDIT_CONTENT_DESTRUCTIVE",
                        "EDIT_CONTENT_NON_DESTRUCTIVE",
                        "EDIT_CONTENT_ROTATE_90_DEGREES",
                        "AUTO_ENHANCE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Copy the item to the viewer's account",
                        "The item can be moved from its current collection to another\ncollection owned by the viewer.",
                        "Share the item with other users. The shared item will be copied into\na new collection",
                        "Reshare the item with other users, without modifying any collections.\nCurrently implemented by resharing the object's underlying ASBE\nactivity.",
                        "Move the item to the trash bin",
                        "Restore the item from the trash bin",
                        "Delete the item permanently",
                        "Add a comment to the item",
                        "Delete comments from the item",
                        "Download the item",
                        "Tag other users in the item",
                        "The viewer may report the item for abuse",
                        "The item may be set as the viewer's profile photo",
                        "Edit the items' caption.",
                        "Edit the item's location.",
                        "Modify the item's content in a destructive way - e.g. replace the bytes\nof an image",
                        "Modify the item's content in a non-destructive way.\nAn example would be modifying the EditList of a photo.",
                        "Rotate the item by a multiple of 90 degrees.\nThis action is implied by EDIT_CONTENT_NON_DESTRUCTIVE",
                        "Enable or disable auto enhance for the item."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemAssistantMessageInfo": {
            "description": "Info about an Assistant message (card) that an item belongs to.",
            "id": "PhotosMediaClientItemAssistantMessageInfo",
            "properties": {
                "assistantMessageRef": {
                    "$ref": "PhotosMediaClientAssistantMessageRef",
                    "description": "Reference to the Assistant message."
                },
                "coverItemScore": {
                    "description": "Score for determining whether the item is a cover item for the Assistant\nmessage (card). In general, the N items with the highest\n(cover_item_score, timestamp_ms) pairs are the cover items, where N is\ndetermined based on the Template that is used to render the Assistant\nmessage.",
                    "format": "double",
                    "type": "number"
                },
                "removeAssistantMessage": {
                    "description": "Specifies whether the referenced Assistant message should be locally\ndeleted (i.e. removed from the clients DB) if the item is deleted.\nFor example, this could be true if the item is a creation (animation,\ncollage, movie, etc). This would ensure that the client will stop showing\nthe card when the creation is deleted.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemAssistantMessageInfoMask": {
            "id": "PhotosMediaClientItemAssistantMessageInfoMask",
            "properties": {
                "assistantMessageRef": {
                    "$ref": "PhotosMediaClientAssistantMessageRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfo": {
            "description": "For items that were created from a composition, this message will contain\ninformation about the type of composition.",
            "id": "PhotosMediaClientItemCompositionInfo",
            "properties": {
                "animationFromVideoCompositionInfo": {
                    "$ref": "PhotosMediaClientItemCompositionInfoAnimationFromVideoCompositionInfo"
                },
                "collageCompositionInfo": {
                    "$ref": "PhotosMediaClientItemCompositionInfoCollageCompositionInfo"
                },
                "movieCompositionInfo": {
                    "$ref": "PhotosMediaClientItemCompositionInfoMovieCompositionInfo"
                },
                "renderParams": {
                    "$ref": "PhotosEditingRenderparamsRenderParams",
                    "description": "The client params to render the composition."
                },
                "state": {
                    "enum": [
                        "UNKNOWN_COMPOSITION_STATE",
                        "ACCEPTED",
                        "PENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "Composition has been accepted and added to the user's library.",
                        "Composition is pending and has not been accepted into the user's library."
                    ],
                    "type": "string"
                },
                "stylizedPhotoCompositionInfo": {
                    "$ref": "PhotosMediaClientItemCompositionInfoStylizedPhotoCompositionInfo"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_ITEM_COMPOSITION_TYPE",
                        "ANIMATION",
                        "HDR",
                        "FACE_MOSAIC",
                        "FACE_STITCH",
                        "PANORAMA",
                        "CLUTTER_FREE",
                        "ACTION_SHOT",
                        "ZOETROPE",
                        "SNOWGLOBE",
                        "TWINKLE",
                        "DEPRECATED_YEARBOOK",
                        "LOVE",
                        "PHOTOBOMB",
                        "FACE_SWAP",
                        "STYLE",
                        "HALLOWEEN",
                        "UNCROP",
                        "DEPRECATED_POSTCARD",
                        "ANIMATION_FROM_VIDEO",
                        "COLORIZATION",
                        "ACTION_MOMENT_ANIMATION_FROM_VIDEO",
                        "PORTRAIT_COLOR_POP"
                    ],
                    "enumDescriptions": [
                        "",
                        "An animated image formed from multiple still images",
                        "A high-Dynamic-Range image formed from a set of bracketed exposures",
                        "A mosaic of faces clipped from multiple original photos and arranged into\n\"photo-booth\" like collage.",
                        "A group photo with the best version of each face stitched into a single\nimage",
                        "A Panorama constructed from multiple individual photos",
                        "A clean photo is constructed from several photos with clutter background",
                        "A photo containing the full motion is constructed from multiple shots",
                        "A video highlight reel automatically created from a group of photos and\nvideos.",
                        "A GIF image with synthetic snow falling over a static image.",
                        "A GIF image where holiday lights or christmas trees twinkle.",
                        "A video containing the best photos and videos from the year.\nDeprecated.",
                        "A GIF image with flying hearts.",
                        "A photo generated by adding someone awesome.",
                        "A photo with faces swapped.",
                        "A photo generated from a single photo with artistic style.",
                        "A photo generated from a single photo with halloween effect.",
                        "A photo generated from a single photo with uncrop.",
                        "A photo generated from a single photo with title.",
                        "An animated image generated from a video.",
                        "A colorized photo generated from a single b&w photo.",
                        "An animation image generated from a video based on action moments.\nSee go/photos-action-moments.",
                        "A photo generated from a single photo with portrait-color-pop effect.\nSee go/portrait-color-pop-design."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoAnimationFromVideoCompositionInfo": {
            "description": "This message contains action moment based animations from video related\nmetadata, e.g. type of action moment (go/photos-action-moments).\nNote that this message is temporarily used to provide more information\nto fishfooders/dogfooders. Can be rolled back once fishfooding/dogfooding\nis done. (b/37548743)",
            "id": "PhotosMediaClientItemCompositionInfoAnimationFromVideoCompositionInfo",
            "properties": {
                "actionMomentName": {
                    "description": "It contains a type of action moment detected from the video and delivered\nin the assistant card.\nA list of action moments detected is available at go/action_moment_list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoCollageCompositionInfo": {
            "description": "This message contains collage (FACE_MOSAIC) related metadata.",
            "id": "PhotosMediaClientItemCompositionInfoCollageCompositionInfo",
            "properties": {
                "collageDateRange": {
                    "$ref": "PhotosMediaClientItemCompositionInfoCollageCompositionInfoCollageDateRange"
                },
                "collageType": {
                    "description": "This field corresponds to the concept type of the collage.",
                    "enum": [
                        "UNKNOWN_TYPE",
                        "DEFAULT",
                        "EVENT_MIX",
                        "TIME_MACHINE",
                        "PEOPLE_MACHINE",
                        "PEOPLE_MACHINE_DUETS",
                        "PET_COLLAGE",
                        "COLOR_COLLAGE",
                        "BEFORE_AFTER",
                        "RECENT_HIGHLIGHTS_PET",
                        "THROUGHOUT_THE_YEARS",
                        "PHOTO_BOOTH_PET"
                    ],
                    "enumDescriptions": [
                        "Unused. If type is unset, default to DEFAULT.",
                        "The default type. All photobooth-style Mix belongs to this one.",
                        "The event-based Mix (Collage).",
                        "Time machine collage.",
                        "People Machine Single collage. Note that this is a legacy name and a\nmore appropriate name would be PEOPLE_MACHINE_SINGLE.",
                        "People Machine Duets collage.",
                        "Pet based concept collage.\nDeprecated",
                        "Color concept collage.\nDeprecated",
                        "Before / After collage.",
                        "Recent highlights pet collage.",
                        "Throughout The Years collage.\nDeprecated",
                        "Pet Photo Booth Collage"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoCollageCompositionInfoCollageDateRange": {
            "description": "The timestamp in milliseconds of the earliest source photo and the\ntimestamp of the last source photo. This is currently used to add dates\non Then & Now Assistant Cards.",
            "id": "PhotosMediaClientItemCompositionInfoCollageCompositionInfoCollageDateRange",
            "properties": {
                "endTimeStampMs": {
                    "format": "int64",
                    "type": "string"
                },
                "startTimeStampMs": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoMask": {
            "id": "PhotosMediaClientItemCompositionInfoMask",
            "properties": {
                "collageCompositionInfo": {
                    "$ref": "PhotosMediaClientItemCompositionInfoMaskCollageCompositionInfoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "renderParams": {
                    "$ref": "PhotosMediaClientRenderParamsMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoMaskCollageCompositionInfoMask": {
            "id": "PhotosMediaClientItemCompositionInfoMaskCollageCompositionInfoMask",
            "properties": {
                "collageDateRange": {
                    "$ref": "PhotosMediaClientItemCompositionInfoMaskCollageCompositionInfoMaskCollageDateRangeMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoMaskCollageCompositionInfoMaskCollageDateRangeMask": {
            "id": "PhotosMediaClientItemCompositionInfoMaskCollageCompositionInfoMaskCollageDateRangeMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoMovieCompositionInfo": {
            "description": "This message contains ZOETROPE related metadata.",
            "id": "PhotosMediaClientItemCompositionInfoMovieCompositionInfo",
            "properties": {
                "mode": {
                    "description": "The unique concept mode.",
                    "enum": [
                        "UNKNOWN_MODE",
                        "DEFAULT",
                        "BIRTHDAY_YEARBOOK",
                        "STORY_MOVIE",
                        "PHOTO_HEAVY",
                        "YEARBOOK",
                        "USER_REQUESTED",
                        "SUMMER_OF_SMILE",
                        "FEEL_THE_RHYTHM",
                        "BABY_GROWN_UP",
                        "WHITE_DRESS_WEDDING",
                        "FOURTH_OF_JULY",
                        "CHRISTMAS_YEAR_AFTER_YEAR",
                        "LULLABY",
                        "YEAR_OF_SMILE",
                        "HANUKKAH_YEAR_AFTER_YEAR",
                        "PET_GROWN_UP",
                        "NATURE",
                        "LULLABY_V2",
                        "CHRISTMAS_MORNING",
                        "YEAR_OF_SELFIE",
                        "BRAZIL_CARNIVAL_YEAR_AFTER_YEAR",
                        "BRAZIL_CARNIVAL",
                        "APRIL_FOOLS_CAT",
                        "DOG_GROWN_UP",
                        "THEY_GROW_UP_SO_FAST_VIDEO_ONLY",
                        "CHILD_FRIENDLY_LITE",
                        "HIGHLIGHT_REEL",
                        "OUTDOOR_LITE",
                        "MONTHLY_HIGHLIGHTS",
                        "MOTHERS_DAY",
                        "FATHERS_DAY",
                        "GUIDED_BABY_GROWN_UP",
                        "GUIDED_IN_LOVING_MEMORY",
                        "GUIDED_CAT",
                        "GUIDED_DOG",
                        "GUIDED_CHRISTMAS_THIS_YEAR",
                        "GUIDED_CHRISTMAS_LAST_YEAR",
                        "GUIDED_YEAR_OF_SMILE",
                        "GUIDED_YEAR_OF_SELFIE",
                        "GUIDED_RELATIONSHIP",
                        "GUIDED_CARNAVAL",
                        "GUIDED_ROMANTIC_RELATIONSHIP",
                        "GUIDED_FRIENDSHIP"
                    ],
                    "enumDescriptions": [
                        "Unused. If mode is unset, default to DEFAULT.",
                        "The default AAM mode. Automatically triggered.",
                        "Birthday yearbook mode. Not automatically triggered.",
                        "Story movie mode. Not automatically triggered.",
                        "Photo-heavy mode. Automatically triggered for albums\nwith many photos. The threshold is determined based\non ZoetropeSettings.minNumSourceImages.",
                        "Yearbook mode. Not automatically triggered.",
                        "Manual creation requested by a user. This refers to when a user\nselects the photos manually. On-demand movies (i.e. guided movies) have\ntheir own modes. (See below)",
                        "The concept movie mode selects the smiling face assets in the summer.",
                        "The concept movie mode uses the author specified bg music\nand beat pattern.",
                        "The concept movie mode summarizes the grown-up of the baby with PHOTOS.",
                        "The concept movie that summarizes a western \"white dress\" wedding.",
                        "The concept movie that visits 4th of Julys from the past.",
                        "The concept movie that visits each Christmas year after year.",
                        "The concept movie that summarizes the first few weeks of the baby\nafter the baby was born.",
                        "The concept movie that summarizes smiling photos in the past year.",
                        "The concept movie that visits each Hanukkah year after year.",
                        "The concept movie that summarizes the grown-up of a pet. This was\nsplit off into APRIL_FOOLS_CAT (for cats) and DOG_GROWN_UP (for dogs).",
                        "The concept movie that summarizes the nature.",
                        "The mode is to test the new soundtrack for lullaby movie.\nIt's not supposed to be launched.",
                        "The concept movie that makes a Christmas morning video.",
                        "The concept movie that summarizes selfie photos in the past year.",
                        "The concept movie that visits each (Brazil) Carnival celebration year\nafter year.",
                        "The concept movie that creates a post-carnival movie (Brazil).",
                        "The concept movie for the cat grown up to 'meow' music.",
                        "The concept movie for a dog grown up to 'woof' music.",
                        "They Grow Up So Fast but for video only.",
                        "Child-Friendly concept movie lite for movies with babies and children,\nand specific songs.",
                        "Highlight reel using video track annotations and action moments.",
                        "Outdoor movie lite for movies with all photos taken outdoors.",
                        "The concept movie with photos in each month.",
                        "////////////////// On Demand Concept Movie Modes ////////////////\nThe concept movie that summarizes the moments of the mom with the kids.",
                        "The concept movie that summarizes the moments of the dad with the kids.",
                        "The concept movie that summarizes the grown-up of the baby.",
                        "The concept movie for someone that has recently passed away.",
                        "The concept movie for a cat to 'meow' music.",
                        "The concept movie for a dog to 'woof' music.",
                        "The concept movie for the Christmas this year.",
                        "The concept movie for the Christmas in the last year.",
                        "The concept movie summarizes smiling photos in the past year.",
                        "The concept movie summarizes selfie photos in the past year.",
                        "The concept movie for Valentine's day.",
                        "The concept movie summarizing Brazil Carnaval.",
                        "The concept movie summarizing the romantic relationship between two\npeople.",
                        "The concept movie summarizing a friendship."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemCompositionInfoStylizedPhotoCompositionInfo": {
            "description": "This message contains STYLE related metadata.",
            "id": "PhotosMediaClientItemCompositionInfoStylizedPhotoCompositionInfo",
            "properties": {
                "mode": {
                    "description": "The unique concept mode.",
                    "enum": [
                        "UNKNOWN_MODE",
                        "LEGACY_HDR",
                        "LEGACY_BW",
                        "SUNSET_DREAM",
                        "ANSEL_ADAMS",
                        "BEACH_BUM",
                        "BEACH_DAY",
                        "SKI_BUM",
                        "POOL_PARTY",
                        "BLUE_SKY",
                        "PORTRAIT",
                        "FLOWER_POWER",
                        "PORTRAIT_NO_BW",
                        "RANKING_STYLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemContentHashes": {
            "description": "Container for hashes computed over an item's content.",
            "id": "PhotosMediaClientItemContentHashes",
            "properties": {
                "sha1": {
                    "description": "SHA1 hash of the raw image bytes.",
                    "format": "byte",
                    "type": "string"
                },
                "sha1Original": {
                    "description": "SHA1 hash computed over the original bytes uploaded for the item",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemContentHashesMask": {
            "id": "PhotosMediaClientItemContentHashesMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemDedupInfo": {
            "description": "Information used for deduping copies of an item.",
            "id": "PhotosMediaClientItemDedupInfo",
            "properties": {
                "clientCreationTimestampMs": {
                    "description": "The creation timestamp in milliseconds UTC specified by the client in the\nupload request.  This timestamp should NOT be displayed to users, and\nis populated on a best-effort basis.\nThis timestamp is suitable for approximate deduplication\nby clients in cases where more robust comparisons like hashes are not\npossible (for example, http://go/deduping-icloud-photo-library).\nDO NOT USE THIS FIELD without consulting photos-backend@.",
                    "format": "int64",
                    "type": "string"
                },
                "forkedCopy": {
                    "description": "Indicates whether this item represents a forked copy of the original.\nFor more information, see http://go/photo-cloning-be-support.",
                    "type": "boolean"
                },
                "localDedupKey": {
                    "description": "Key that can be used to dedupe duplicates of the same photo. Originals can\nbe de-duped against local content via unpadded websafe Base64-encoded\nSHA-1. For more information, see go/photo-cloning-be-support.",
                    "type": "string"
                },
                "subSecTimeOriginal": {
                    "description": "The subsec time from exif data.  This field is populated on a best-effort\nbasis and is expected to be missing often.\nThis data should never be displayed to users.  This value is intended for\nuse by clients for approximated deduplication in the absence of comparable\nhashes (for example, http://go/deduping-icloud-photo-library)\nDO NOT USE THIS FIELD without consulting photos-backend@.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemDedupInfoMask": {
            "id": "PhotosMediaClientItemDedupInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemId": {
            "description": "Identifies an Item\n\nIf both media_key and legacy_photo_id are set they must refer to the same\nphoto.",
            "id": "PhotosMediaClientItemId",
            "properties": {
                "legacyPhotoId": {
                    "$ref": "PhotosMediaClientItemIdLegacyPhotoId"
                },
                "mediaKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemIdLegacyPhotoId": {
            "description": "Represents a MediaItem that corresponds to a PhotoService photo.",
            "id": "PhotosMediaClientItemIdLegacyPhotoId",
            "properties": {
                "obfuscatedUserId": {
                    "type": "string"
                },
                "photoId": {
                    "description": "DEPRECATED. Will only be populated for legacy clients.",
                    "format": "uint64",
                    "type": "string"
                },
                "photoIdString": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemMetadata": {
            "description": "Basic metadata about a leaf MediaItem\nNEXT ID: 35",
            "id": "PhotosMediaClientItemMetadata",
            "properties": {
                "allowedAction": {
                    "description": "Specifies actions that the user is likely allowed to do to this item",
                    "items": {
                        "$ref": "PhotosMediaClientAllowedAction"
                    },
                    "type": "array"
                },
                "archiveInfo": {
                    "$ref": "PhotosMediaClientArchiveInfo",
                    "description": "Info about the current archive state of the item."
                },
                "assistantMessageInfo": {
                    "description": "Info about the Assistant messages that this item is in.\nAn example of when this would be populated is if this item is a creation,\ne.g. an animation, collage, movie, etc.\nSee go/photos-backend-design for more information on the Google Photos\nAssistant implementation.",
                    "items": {
                        "$ref": "PhotosMediaClientItemAssistantMessageInfo"
                    },
                    "type": "array"
                },
                "association": {
                    "description": "Specifies any associations between this item and other services",
                    "items": {
                        "$ref": "PhotosMediaClientAssociation"
                    },
                    "type": "array"
                },
                "audience": {
                    "$ref": "PhotosMediaClientAudience",
                    "description": "Information about who has access to this item"
                },
                "burstClusterInfo": {
                    "$ref": "PhotosMediaClientClusterInfo",
                    "description": "DEPRECATED: Use camera_burst_cluster_info.\nData pertaining to quality of photo and burst cluster it belongs to"
                },
                "cameraBurstInfo": {
                    "$ref": "PhotosMediaClientCameraBurstInfo",
                    "description": "Information about the camera burst to which the photo belongs.\nThis will only be populated if the photo is part of a camera burst.\nSee go/photos-camera-burst-be for more information."
                },
                "caption": {
                    "description": "The user-editable caption of the item.",
                    "type": "string"
                },
                "collection": {
                    "description": "References to collections this item is in.\nNote that this list will include the collections that are relevant to the\ncurrent query. It does not necessarily contain the complete list of\ncollections that the item is in.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionRef"
                    },
                    "type": "array"
                },
                "contentHashes": {
                    "$ref": "PhotosMediaClientItemContentHashes",
                    "description": "Hashes computed on the items' contents"
                },
                "contentVersion": {
                    "description": "content_version increases any time an item's content is changed - e.g. when\na photo is edited or a video is rotated.\nWhen content_version changes, the item's urls will generally also change\nsince content_version is encoded in the urls.",
                    "format": "int64",
                    "type": "string"
                },
                "creationTimestampMs": {
                    "description": "This is set to the time when the item was created in the backend.  This\ntimestamp is in UTC.",
                    "format": "int64",
                    "type": "string"
                },
                "dedupInfo": {
                    "$ref": "PhotosMediaClientItemDedupInfo",
                    "description": "Information used for deduping copies of an item."
                },
                "displayQuality": {
                    "enumDescriptions": [
                        "",
                        "The item will be displayed as a preview quality item.\nRefer to go/pqdesign."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_DISPLAY_QUALITY",
                            "PREVIEW_QUALITY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "favoriteInfo": {
                    "$ref": "PhotosMediaClientFavoriteInfo",
                    "description": "Info about the current favorite state of the item.\nSee go/photos-be-favorites for details."
                },
                "filename": {
                    "description": "The filename of the item.\nFor items that were uploaded by the user, this will be the filename of the\nuploaded file.",
                    "type": "string"
                },
                "hasOriginalBytes": {
                    "description": "Describes whether this item has its original bytes (i.e. neither\ncompressed nor downsized) in storage.",
                    "enum": [
                        "UNKNOWN_HAS_ORIGINAL_BYTES",
                        "YES",
                        "NO",
                        "MAYBE"
                    ],
                    "enumDescriptions": [
                        "Default proto value",
                        "The item's original bytes are in storage.",
                        "The item's original bytes are no longer in storage, i.e. the item was\ncompressed, downsized, etc.",
                        "The item was uploaded through an old client that is not aware of the\nnew storage policy, so the server doesn't know whether it has the\noriginal bytes. Clients may further approximate whether the server has\nthe original bytes by checking the returned\nImageProperties.{width,height} against locally stored data."
                    ],
                    "type": "string"
                },
                "itemAllowedAction": {
                    "description": "Specifies actions that the user is likely allowed to do to this item.\nDo not use yet (b/10024301).",
                    "items": {
                        "$ref": "PhotosMediaClientItemAllowedAction"
                    },
                    "type": "array"
                },
                "itemSource": {
                    "$ref": "PhotosMediaClientItemSource",
                    "description": "The source of the item."
                },
                "itemSuggestedAction": {
                    "description": "A list of suggested actions on the item.",
                    "items": {
                        "$ref": "PhotosMediaClientItemSuggestedAction"
                    },
                    "type": "array"
                },
                "ownerRef": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "The owner of the item"
                },
                "photoClusterInfo": {
                    "description": "Information about photo clusters to which this item belongs.",
                    "items": {
                        "$ref": "PhotosMediaClientPhotoClusterInfo"
                    },
                    "type": "array"
                },
                "photosViewInfo": {
                    "$ref": "PhotosMediaClientItemPhotosViewInfo",
                    "description": "Information for views for the photos product."
                },
                "shareInfo": {
                    "$ref": "PhotosMediaClientItemShareInfo",
                    "description": "Information about whether this item is shared."
                },
                "siloInfo": {
                    "$ref": "PhotosMediaClientSiloInfo",
                    "description": "The info about the Silo this MediaItem belongs to.\nWARNING: Do not use this field for any usage other than monitoring\nuntil we have fully backfilled the silo ids of all items\n(b/34316377 and others)"
                },
                "sizeBytes": {
                    "description": "Size of the stored item in bytes.\nThis is the size of the 'original' photo/video/audio stored in the system\nfor this item (modulo down-sizing).",
                    "format": "int64",
                    "type": "string"
                },
                "timeZoneOffsetMs": {
                    "description": "The time zone offset that can be applied to present the timestamp to the\nuser in local time where the photo was taken (either set by the user or\ninferred by the server), in milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "timestampMs": {
                    "description": "This is MediaService's most representative timestamp for this item,\nsuitable for display to users. This timestamp could be manually specified\nby the user, parsed from item metadata (such as EXIF time), or set by the\nserver at item creation time.  This timestamp is in UTC.",
                    "format": "int64",
                    "type": "string"
                },
                "timestampSortQuality": {
                    "enum": [
                        "UNKNOWN_TIMESTAMP_QUALITY",
                        "LOW",
                        "SORTABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Low confidence in the timestamp's accuracy (e.g. provided from the\ndesktop uploader with no EXIF). Note that many videos not uploaded by\nmobile will be LOW since most videos do not have timestamp metadata\n(as of 2/5/2015).",
                        "There is enough confidence in the timestamp's accuracy to show the item\nin time-sorted orderings (e.g. provided in EXIF or uploaded from a mobile\ndevice)."
                    ],
                    "type": "string"
                },
                "trashInfo": {
                    "$ref": "PhotosMediaClientTrashInfo",
                    "description": "Information about whether this item is considered trash."
                },
                "uploadStatus": {
                    "enum": [
                        "UNKNOWN_UPLOAD_STATUS",
                        "PLACEHOLDER",
                        "LOW_QUALITY",
                        "FULL_QUALITY"
                    ],
                    "enumDescriptions": [
                        "",
                        "A generic placeholder has been uploaded",
                        "A low-quality version (\"preview quality\") of the item has been uploaded",
                        "The full quality version of the item has been uploaded.\nFor \"high quality\" upload quality settings, this might mean that the item\nwas compressed on device before uploading, and/or that the item was\ncompressed on the backend after the upload."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemMetadataMask": {
            "id": "PhotosMediaClientItemMetadataMask",
            "properties": {
                "allowedAction": {
                    "$ref": "PhotosMediaClientAllowedActionMask"
                },
                "archiveInfo": {
                    "$ref": "PhotosMediaClientArchiveInfoMask"
                },
                "assistantMessageInfo": {
                    "$ref": "PhotosMediaClientItemAssistantMessageInfoMask"
                },
                "association": {
                    "$ref": "PhotosMediaClientAssociationMask"
                },
                "audience": {
                    "$ref": "PhotosMediaClientAudienceMask"
                },
                "burstClusterInfo": {
                    "$ref": "PhotosMediaClientClusterInfoMask"
                },
                "cameraBurstInfo": {
                    "$ref": "PhotosMediaClientCameraBurstInfoMask"
                },
                "collection": {
                    "$ref": "PhotosMediaClientCollectionRefMask"
                },
                "contentHashes": {
                    "$ref": "PhotosMediaClientItemContentHashesMask"
                },
                "dedupInfo": {
                    "$ref": "PhotosMediaClientItemDedupInfoMask"
                },
                "favoriteInfo": {
                    "$ref": "PhotosMediaClientFavoriteInfoMask"
                },
                "itemSource": {
                    "$ref": "PhotosMediaClientItemSourceMask"
                },
                "itemSuggestedAction": {
                    "$ref": "PhotosMediaClientItemSuggestedActionMask"
                },
                "omitCaption": {
                    "description": "If set, caption will not be populated.",
                    "type": "boolean"
                },
                "omitFilename": {
                    "description": "If set, filename will not be populated.",
                    "type": "boolean"
                },
                "ownerRef": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "photoClusterInfo": {
                    "$ref": "PhotosMediaClientPhotoClusterInfoMask"
                },
                "photosViewInfo": {
                    "$ref": "PhotosMediaClientItemPhotosViewInfoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "shareInfo": {
                    "$ref": "PhotosMediaClientItemShareInfoMask"
                },
                "siloInfo": {
                    "$ref": "PhotosMediaClientSiloInfoMask"
                },
                "trashInfo": {
                    "$ref": "PhotosMediaClientTrashInfoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemPhotosViewInfo": {
            "description": "Information about how the item should be displayed in various views in the\nphotos product. For example, some items need to be synced to clients, but\nshould not actually show up in the standard views.",
            "id": "PhotosMediaClientItemPhotosViewInfo",
            "properties": {
                "assistantHideReason": {
                    "enumDescriptions": [
                        "",
                        "This item is a pending composition, and should not be shown in the\nuser's library until it has been accepted.",
                        "This item is a composition that has been dismissed by the user.",
                        "The photo is the cover-photo for a photo-book which should be hidden\nfrom all views"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_HIDE_REASON",
                            "PENDING_COMPOSITION",
                            "DISMISSED_COMPOSITION",
                            "PHOTOBOOK_COVER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "assistantViewInfo": {
                    "$ref": "PhotosMediaClientItemPhotosViewInfoAssistantViewInfo",
                    "description": "Information about how the item should be displayed in the Assistant view."
                },
                "hideReason": {
                    "description": "Present when media service believes the item should be hidden for the\nprovided reasons. This list has \"any\" instead of \"all\" semantics. That is,\nif any of the reasons apply to a particular view, the item should be\nhidden from that view. For forward compatibility, clients should hide the\nitem from all views whenever a HideReason is not recognized. This can occur\nwhen the server has added a new reason enum that old client code is not\naware of.",
                    "enumDescriptions": [
                        "",
                        "This item is a pending composition, and should not be shown in the\nuser's library until it has been accepted.",
                        "This item is a composition that has been dismissed by the user.",
                        "The photo is the cover-photo for a photo-book which should be hidden\nfrom all views"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_HIDE_REASON",
                            "PENDING_COMPOSITION",
                            "DISMISSED_COMPOSITION",
                            "PHOTOBOOK_COVER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemPhotosViewInfoAssistantViewInfo": {
            "id": "PhotosMediaClientItemPhotosViewInfoAssistantViewInfo",
            "properties": {
                "hideReason": {
                    "description": "Present when media service believes the item should be hidden from the\nAssistant view for the provided reasons. This list has \"any\" instead of\n\"all\" semantics. For forward compatibility, clients should hide the item\nfrom the Assistant view whenever a HideReason is not recognized. This can\noccur when the server has added a new reason enum that old client code is\nnot aware of.",
                    "enumDescriptions": [
                        "",
                        "This item is a pending composition, and should not be shown in the\nuser's library until it has been accepted.",
                        "This item is a composition that has been dismissed by the user.",
                        "The photo is the cover-photo for a photo-book which should be hidden\nfrom all views"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_HIDE_REASON",
                            "PENDING_COMPOSITION",
                            "DISMISSED_COMPOSITION",
                            "PHOTOBOOK_COVER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "sortTimestampMs": {
                    "description": "The timestamp to use for sorting this item within the Assistant view.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemPhotosViewInfoMask": {
            "id": "PhotosMediaClientItemPhotosViewInfoMask",
            "properties": {
                "assistantViewInfo": {
                    "$ref": "PhotosMediaClientItemPhotosViewInfoMaskAssistantViewInfoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemPhotosViewInfoMaskAssistantViewInfoMask": {
            "id": "PhotosMediaClientItemPhotosViewInfoMaskAssistantViewInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemPromoData": {
            "description": "Data about the promos that are relevant to the item.",
            "id": "PhotosMediaClientItemPromoData",
            "properties": {
                "potentialPromo": {
                    "description": "The promos that are relevant to the item. Note that a promo should only\nbe shown if it is present both here and in the ReadPhotosFeatures\nresponse. See go/photos-promos-framework for more details.",
                    "items": {
                        "$ref": "PhotosMediaClientPromo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemRef": {
            "description": "Reference to an item. An example would be to allow a MediaCollection to\nindicate which child item should be used as the \"cover\" for the collection.\nDefining a message will allow additional information to be added, such as\na description of the relationship or the index of the item in the query\nresult array.",
            "id": "PhotosMediaClientItemRef",
            "properties": {
                "itemId": {
                    "description": "id of the referenced item",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemRefMask": {
            "id": "PhotosMediaClientItemRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemShareInfo": {
            "id": "PhotosMediaClientItemShareInfo",
            "properties": {
                "isShared": {
                    "description": "Indicates that this item is most likely shared and that operations on this\nitem (such as edits or deletes) may affect multiple copies of the item.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemShareInfoMask": {
            "id": "PhotosMediaClientItemShareInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemSource": {
            "description": "Information about the source of an item",
            "id": "PhotosMediaClientItemSource",
            "properties": {
                "addMethod": {
                    "description": "How the item was added to its containing collection.\nThis will only be set when the item is part of a user-visible collection.\nAt the moment, this field will only be set when the item was auto-added\nto the collection.",
                    "enum": [
                        "UNKNOWN_ADD_METHOD",
                        "AUTO_ADD"
                    ],
                    "enumDescriptions": [
                        "",
                        "The item was automatically added to it's containing collection due to the\nitem matching cluster rules the owner had set up for the collection.\nSee go/livealbums for more details about auto-add."
                    ],
                    "type": "string"
                },
                "copyReason": {
                    "description": "Identifies the reason to copy this item.",
                    "enum": [
                        "UNKNOWN_COPY_REASON",
                        "NOT_COPIED",
                        "PARTNER_SHARE_MANUAL",
                        "PARTNER_SHARE_AUTO_SAVE",
                        "GENERIC_CROSS_ACCOUNT_COPY"
                    ],
                    "enumDescriptions": [
                        "",
                        "The item was not created as a copy of another item.",
                        "Shared via partner sharing and saved manually",
                        "Shared via partner sharing and saved automatically per the rules in the\npartner sharing auto-save configuration.",
                        "Copied from other sources besides partner sharing, for instance, from the\n\"save to library\" action."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemSourceMask": {
            "id": "PhotosMediaClientItemSourceMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemSuggestedAction": {
            "description": "Stores information about suggested action of the item. See go/1up-actions for\ndetails.",
            "id": "PhotosMediaClientItemSuggestedAction",
            "properties": {
                "actionState": {
                    "enum": [
                        "UNKNOWN_ACTION_STATE",
                        "PENDING",
                        "ACCEPTED",
                        "REJECTED",
                        "HIDDEN",
                        "CANCELED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The suggestion is pending for user action.",
                        "The suggestion was accepted by the user.",
                        "The suggestion was rejected by the user (the chip was never tapped).",
                        "The suggestion is hidden now because some action user made renders the\nsuggestion unnecessary. For example, if the user edits the photo without\ntapping the Auto Enhance chip, the state of the action will be hidden.",
                        "The suggestion was tapped by the user but canceled. Suggested actions\nwith modal editor can have this state."
                    ],
                    "type": "string"
                },
                "actionType": {
                    "enum": [
                        "UNKNOWN_ACTION_TYPE",
                        "AUTO_ENHANCE",
                        "AUTO_ENHANCE_COLOR",
                        "ARCHIVE",
                        "SHARE",
                        "ROTATE",
                        "PORTRAIT_COLOR_POP",
                        "DOCUMENT",
                        "EXPORT_STILL",
                        "LENS",
                        "PLANET_WARP",
                        "PORTRAIT",
                        "LENS_COPY_TEXT"
                    ],
                    "enumDescriptions": [
                        "",
                        "See go/photos-auto-enhance-chip for details.",
                        "Triggered when a photo needs color adjustment. See\ngo/photos-auto-enhance-chip for details.",
                        "",
                        "",
                        "See go/photos-suggested-rotation-chip for details.",
                        "See go/1up-color-pop for more information.",
                        "Suggestion to rectify document photos. See\ngo/on-device-suggested-action-models for more information.",
                        "Suggestion to export frames from Alternative Moments Motion Photos.\nSee go/suggested-actions-am for more information.\nNote that EXPORT_STILL is the code name for Alternative Moments.",
                        "Suggestion to show Lens action. See go/photos-lens-precompute.",
                        "Suggestion to warp a panorama photo into a circular photo like a planet.",
                        "Suggestion to blur a portrait photo, See go/photos-portrait-blur.",
                        "Suggestion that lets the user copy text from the photo using Lens OCR.\nSee go/lens-photos-copy-text-dd. The ID used is 100 because it's the\nvalue already being stored in Android client databases."
                    ],
                    "type": "string"
                },
                "compositionItemRef": {
                    "$ref": "PhotosMediaClientItemRef",
                    "description": "If the suggested action refers to a composition (e.g. Color-pop) in\nstorage, this is the reference to the composition item."
                },
                "confidenceScore": {
                    "description": "How likely we will suggest this action on the item. The value is in [0, 1].",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemSuggestedActionMask": {
            "id": "PhotosMediaClientItemSuggestedActionMask",
            "properties": {
                "compositionItemRef": {
                    "$ref": "PhotosMediaClientItemRefMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemType": {
            "description": "Container for information specific to the type of media the item represents.",
            "id": "PhotosMediaClientItemType",
            "properties": {
                "associatedMedia": {
                    "description": "Additional media returned in this item. Currently only populated if\nmedia_type is PHOTO and this item represents a Phodeo.",
                    "items": {
                        "$ref": "PhotosMediaClientAssociatedMedia"
                    },
                    "type": "array"
                },
                "audio": {
                    "$ref": "PhotosMediaClientAudio",
                    "description": "Only populated if media_type is AUDIO"
                },
                "mediaType": {
                    "description": "media_type will always be populated.",
                    "enum": [
                        "UNKNOWN",
                        "PHOTO",
                        "VIDEO",
                        "AUDIO"
                    ],
                    "enumDescriptions": [
                        "The item is a type unknown to the client.\nNone of the sub-messages will be valid.",
                        "The item is a photo.\nItemType.photo will be populated.",
                        "The item is a video.\nItemType.video will be populated.",
                        "The item is an audio.\nItemType.audio will be populated."
                    ],
                    "type": "string"
                },
                "photo": {
                    "$ref": "PhotosMediaClientPhoto",
                    "description": "Only populated if media_type is PHOTO"
                },
                "video": {
                    "$ref": "PhotosMediaClientVideo",
                    "description": "Only populated if media_type is VIDEO"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientItemTypeMask": {
            "id": "PhotosMediaClientItemTypeMask",
            "properties": {
                "associatedMedia": {
                    "$ref": "PhotosMediaClientAssociatedMediaMask"
                },
                "audio": {
                    "$ref": "PhotosMediaClientAudioMask"
                },
                "photo": {
                    "$ref": "PhotosMediaClientPhotoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "video": {
                    "$ref": "PhotosMediaClientVideoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationData": {
            "description": "Location information about an item or collection.\nLocationData will not be returned if no location data is available for the\nunderlying object, or if the viewer does not have permission to view\nlocation data for the object. However, we will always return LocationData\nfor the owner so that the owner can know whether the location is shared.\n\nUnlike most other protos, LocationData is a (reformatted) subset of the\nserver proto's contents. This is because the server uses geostore protos\nwhich are not intended for mobile use, and because the server protos contain\nfar more data than clients are expected to need.",
            "id": "PhotosMediaClientLocationData",
            "properties": {
                "bounds": {
                    "$ref": "PhotosMediaClientLocationRect"
                },
                "center": {
                    "$ref": "PhotosMediaClientLocationPoint",
                    "description": "Basic location for an object which might come from exif data, or from the\nuser, etc."
                },
                "feature": {
                    "$ref": "PhotosMediaClientLocationFeature",
                    "description": "Geographical Features obtained from performing a reverse geo lookup on the\nobject's location\nDeprecated. Use location_feature instead."
                },
                "locationFeature": {
                    "description": "Geographical Features obtained from performing a reverse geo lookup on the\nobject's location. Note that this location can be from one of three\npossible sources: (1) manual edit by the user, (2) EXIF, or (3) inferred\nresult from the server.\nRefer to location_source to determine which one it is.",
                    "items": {
                        "$ref": "PhotosMediaClientLocationFeature"
                    },
                    "type": "array"
                },
                "locationSource": {
                    "description": "Specifies the source of this location data.",
                    "enum": [
                        "UNKNOWN_LOCATION_SOURCE",
                        "USER",
                        "EXIF",
                        "INFERRED"
                    ],
                    "enumDescriptions": [
                        "",
                        "This location data comes from a manual edit performed by the user.",
                        "This location data comes from EXIF metadata.",
                        "This location data is inferred on the server."
                    ],
                    "type": "string"
                },
                "shared": {
                    "description": "Whether the location data is shared to non-owners.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationEnrichment": {
            "description": "An enrichment that designates a place.",
            "id": "PhotosMediaClientLocationEnrichment",
            "properties": {
                "places": {
                    "description": "The first place in this list is what is rendered in the album.\nThe other elements should be rendered as alternatives.",
                    "items": {
                        "$ref": "PhotosMediaClientEnrichmentPlace"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationEnrichmentMask": {
            "id": "PhotosMediaClientLocationEnrichmentMask",
            "properties": {
                "places": {
                    "$ref": "PhotosMediaClientEnrichmentPlaceMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationFeature": {
            "description": "Subset of geostore.FeatureProto",
            "id": "PhotosMediaClientLocationFeature",
            "properties": {
                "featureId": {
                    "description": "This is the feature ID of the location. The ID is a string of the format\n0xA:0xB, where A is the cell ID and B is the fingerprint of\ngeostore.FeatureProto. The ID can be used to perform a search query for\nthe location.",
                    "type": "string"
                },
                "name": {
                    "description": "The name(s) of this feature.  A feature may have different names in\ndifferent languages, colloquial or \"vanity\" names, etc.",
                    "items": {
                        "$ref": "PhotosMediaClientLocationName"
                    },
                    "type": "array"
                },
                "preferredViewport": {
                    "$ref": "PhotosMediaClientLocationRect",
                    "description": "The preferred viewport for this feature. If present, this\nlatitude-longitude rectangle holds the preferred viewport for the feature.\nFor example, it might hold the bounds of the \"central\" portion of a\nlarge city. There are no aspect ratio requirements. This is an optional\nfield."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationFeatureIdProto": {
            "description": "Subset of geostore.FeatureIdProto\nLocationFeatureId mapped to the same name as updates.data.Location.FeatureId\nand is the reason we have added 'Proto' to the name of this message.",
            "id": "PhotosMediaClientLocationFeatureIdProto",
            "properties": {
                "cellId": {
                    "description": "The S2CellId corresponding to the approximate centroid of this feature as\nof when it was first created.  Cell ids have the nice property that they\nfollow a space-filling curve over the surface of the earth.  (See\ns2cellid.h for details.) Subsequent edits to the feature's geometry in the\nMapFacts repository cannot modify this field.",
                    "format": "uint64",
                    "type": "string"
                },
                "fprint": {
                    "description": "A 64-bit fingerprint used to identify features. If creating new fprints,\nthe strategy should be chosen so that the chance of collision is remote or\nnon-existent, and the distribution should be reasonably uniform. For\nexample, if the source data assigns unique ids to features, then a\nfingerprint of the provider name, version, and source id is sufficient.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationFeatureIdProtoMask": {
            "id": "PhotosMediaClientLocationFeatureIdProtoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationFeatureMask": {
            "id": "PhotosMediaClientLocationFeatureMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationMask": {
            "id": "PhotosMediaClientLocationMask",
            "properties": {
                "locationBounds": {
                    "$ref": "PhotosMediaClientLocationRectMask"
                },
                "locationCenter": {
                    "$ref": "PhotosMediaClientLocationPointMask"
                },
                "locationFeature": {
                    "$ref": "PhotosMediaClientLocationFeatureMask"
                },
                "locationFeatureMask": {
                    "$ref": "PhotosMediaClientLocationFeatureMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationName": {
            "description": "Contains a subset of geostore.NameProto and data made available by the\ninferred location backend allowing clients to render the location name.",
            "id": "PhotosMediaClientLocationName",
            "properties": {
                "isAliasedLocation": {
                    "description": "Whether the location name is an aliased location (see go/home-work)",
                    "type": "boolean"
                },
                "isFamiliarPlace": {
                    "description": "Whether the location is a familiar location for the user\n(see go/locationheaders#heading=h.32nj0u18q5nu)",
                    "type": "boolean"
                },
                "languageCode": {
                    "description": "Language codes of the translation. See LanguageCode.java.",
                    "type": "string"
                },
                "locationType": {
                    "enum": [
                        "LOCATION_TYPE_UNKNOWN",
                        "GEOCODED_ADDRESS",
                        "POINT_POI",
                        "COMPOUND_POI",
                        "NATURAL_FEATURE",
                        "NEIGHBORHOOD",
                        "CITY",
                        "REGION",
                        "COUNTRY"
                    ],
                    "enumDescriptions": [
                        "",
                        "A place with an address, with no other information. This type is valid\nwhen the LocationFeature has the aliased_location_type field populated,\nsince geocoded addresses may be a user's home, work, or a nicknamed\nplace.",
                        "Point of interest with only a point specified.  Typically a business.",
                        "Point of interest with an area specified.  Includes parks, amusement\nparks, college campuses, etc.",
                        "Mountains, beaches, islands, lakes, rivers, trails.",
                        "E.g., Greenwich Village, Haight-Ashbury, Waikiki.",
                        "E.g., New York City, San Francisco, Paris.",
                        "E.g., California, Tipperary, Scotland, British Columbia, Queensland.",
                        "E.g., United States, Brazil, Russia, India, Indonesia, Mexico."
                    ],
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationPoint": {
            "description": "Subset of geostore.PointProto",
            "id": "PhotosMediaClientLocationPoint",
            "properties": {
                "latE7": {
                    "description": "Points are represented as latitude-longitude pairs in the E7\nrepresentation (degrees multiplied by 10**7 and rounded to the nearest\ninteger).  Latitudes should be in the range +/- 90 degrees and longitude\nshould be in the range +/- 180 degrees (inclusive).\n\nThis representation has a worst-case resolution of about 1cm near the\nequator.  The extra resolution seems preferable to the slight space\nsavings we would achieve by using E6 lat/lng representations.\n\nlat_e7/lng_e7 are signed, but we store them as fixed32 because:\n1) to keep the wire format unchanged - fixed32 was chosen initially\n2) to optimize the space - Protocol Buffer uses\n  10-bytes for negative int32 vs always 4-bytes for fixed32.\nThis requires some caution whenever using PointProto::{lat,lng}_e7()\nbecause they will return fixed32 - if the receiving type\nis int32, then the sign is \"recovered\" but if it's int 64,\nwe lose the sign and end up with a big positive integer.\nMake sure do static_cast<int32>() of {lat,lng}_e7() before\nusing it for anything other than int32.\nrequired",
                    "format": "uint32",
                    "type": "integer"
                },
                "lngE7": {
                    "description": "required",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationPointMask": {
            "id": "PhotosMediaClientLocationPointMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationRect": {
            "description": "Subset of geostore.RectProto",
            "id": "PhotosMediaClientLocationRect",
            "properties": {
                "hi": {
                    "$ref": "PhotosMediaClientLocationPoint",
                    "description": "required"
                },
                "lo": {
                    "$ref": "PhotosMediaClientLocationPoint",
                    "description": "A latitude-longitude rectangle, represented as two diagonally opposite\npoints \"lo\" and \"hi\".  The rectangle is considered to be a closed region,\ni.e. it includes its boundary.  The latitude bounds must be in the range\n-90 to 90 degrees inclusive, and the longitude bounds must be in the\nrange -180 to 180 degrees inclusive.  Various cases include:\n\n - If lo == hi, the rectangle consists of a single point.\n\n - If lo.longitude > hi.longitude, the longitude range is \"inverted\"\n   (the rectangle crosses the 180 degree longitude line).\n\n - If lo.longitude == -180 degrees and hi.longitude = 180 degrees,\n   the rectangle includes all longitudes.\n\n - If lo.longitude = 180 degrees and hi.longitude = -180 degrees,\n   the longitude range is empty.\n\n - If lo.latitude > hi.latitude, the latitude range is empty.\nrequired"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientLocationRectMask": {
            "id": "PhotosMediaClientLocationRectMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMapEnrichment": {
            "description": "A map with a start location and end location.",
            "id": "PhotosMediaClientMapEnrichment",
            "properties": {
                "destinations": {
                    "items": {
                        "$ref": "PhotosMediaClientEnrichmentPlace"
                    },
                    "type": "array"
                },
                "origins": {
                    "items": {
                        "$ref": "PhotosMediaClientEnrichmentPlace"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMapEnrichmentMask": {
            "id": "PhotosMediaClientMapEnrichmentMask",
            "properties": {
                "destinations": {
                    "$ref": "PhotosMediaClientEnrichmentPlaceMask"
                },
                "origins": {
                    "$ref": "PhotosMediaClientEnrichmentPlaceMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaActor": {
            "description": "An actor in Media Client API\nNEXT ID: 20\nNote: id 9 is reserved for app_status similar to Mediaservice",
            "id": "PhotosMediaClientMediaActor",
            "properties": {
                "actorId": {
                    "$ref": "PhotosMediaClientActorId",
                    "description": "Identifies this actor.  Replaces \"id\"."
                },
                "avatarProfile": {
                    "$ref": "PhotosMediaClientAvatarProfile",
                    "description": "This field should be populated only in circumstances that allow a monogram\nto be created from a private profile name.  See go/avatar-fife-urls.\nAt least initially, this requirement will not be enforced by the\nbackend.  IT IS THE RESPONSIBILITY OF THE CLIENT to make sure that\nit does not request this field to be populated except in cases that\nsatisfy the \"contextual visibility\" requirement of Core ID.\nSee go/core-id-visibility for a detailed discussion, and\ngo/core-id-visibility-preso for a higher-level overview.\nTalk to fife-eng@google.com or pwg@google.com (Privacy Work Group)\nbefore using this field.\n\nAlso note that the encryption key for avatar URLs is autorotated, so\nthe URLs will eventually expire."
                },
                "counters": {
                    "$ref": "PhotosMediaClientActorCounters",
                    "description": "Only returned for the viewer"
                },
                "displayContactMethod": {
                    "description": "The contact method for this actor, such as an email or phone number. Only\nreturned if the viewer is allowed to see this method.",
                    "type": "string"
                },
                "displayName": {
                    "description": "DO NOT USE -- switch to user_profile instead.\n\nThe actor's name, suitable for display to users (e.g. G+ profile name).",
                    "type": "string"
                },
                "faceTemplateInfo": {
                    "$ref": "PhotosMediaClientFaceTemplateInfo",
                    "description": "Info regarding face templates for the user."
                },
                "id": {
                    "description": "A globally unique identifier.\nDeprecated - use actor_id.media_key",
                    "type": "string"
                },
                "obfuscatedGaiaId": {
                    "description": "The actor's GAIA id.\nDeprecated - use actor_id.obfuscated_gaia_id",
                    "type": "string"
                },
                "partnerSharing": {
                    "description": "Partner sharing that the user is involved in.\nOnly returned if actor == viewer.",
                    "items": {
                        "$ref": "PhotosMediaClientPartnerSharingInfo"
                    },
                    "type": "array"
                },
                "profilePhotoUrl": {
                    "description": "The content URL of the actor's profile photo.  This URL is *unsized* -\nclients are expected to apply the appropriate options before serving.  See\nhttp://go/fife-urls for more information.",
                    "type": "string"
                },
                "relevantClusters": {
                    "$ref": "PhotosMediaClientRelevantClusters",
                    "description": "Information about relevant cluster relationships established by the user\nOnly returned if actor == viewer."
                },
                "significantDates": {
                    "$ref": "PhotosMediaClientSignificantDates",
                    "description": "Information about a user's significant dates such as birthdays, weddings,\nanniversaries, etc.\nOnly returned if actor == viewer."
                },
                "storagePolicyConversionStatus": {
                    "$ref": "PhotosMediaClientStoragePolicyConversionStatus",
                    "description": "Information about the status of storage policy conversion for this actor."
                },
                "storageQuota": {
                    "$ref": "PhotosMediaClientStorageQuota",
                    "description": "Quota information for this actor. Only returned if the actor is also the\nviewer."
                },
                "userProfile": {
                    "$ref": "PhotosMediaClientUserProfile",
                    "description": "Public user profile (e.g. G+ profile) from PeopleAPI v2.\nUser could have only one profile: either public or private.\nIf user has a private profile then user profile won't be returned."
                },
                "userProfilePrivateOrPublic": {
                    "$ref": "PhotosMediaClientUserProfile",
                    "description": "WARNING: This field contains both user public and _PRIVATE_ profiles.\nName from private profile will be accessible even if it is not ACL\nvisible to the viewer.\nUI must make it clear to user that private profile name\nwill be displayed before using this mask.\nFor example, when user with private profile creates a shared album\n(envelope) UI displays their private name, so it is OK to use private\nprofile names when displaying the envelope.\nTalk to photos-backend@google.com or pwg@google.com (Privacy Work Group)\nbefore using this field."
                },
                "userSettings": {
                    "$ref": "PhotosMediaClientUserSettings",
                    "description": "Settings for this actor.\nOnly returned if actor == viewer."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaActorMask": {
            "description": "NEXT ID: 17.",
            "id": "PhotosMediaClientMediaActorMask",
            "properties": {
                "actorOptions": {
                    "$ref": "PhotosMediaClientActorOptions",
                    "description": "Additional request options for the returned MediaActor."
                },
                "avatarProfile": {
                    "$ref": "PhotosMediaClientAvatarProfileMask",
                    "description": "Talk to fife-eng@google.com or pwg@google.com (Privacy Work Group)\nbefore using this mask.\nThis mask should be set only in circumstances that allow a monogram\nto be created from a private profile name.  See go/avatar-fife-urls.\nAt least initially, this requirement will not be enforced by the\nbackend.  IT IS THE RESPONSIBILITY OF THE CLIENT to make sure that\nit does not request this field to be populated except in cases that\nsatisfy the \"contextual visibility\" requirement of Core ID.\nSee go/core-id-visibility for a detailed discussion, and\ngo/core-id-visibility-preso for a higher-level overview."
                },
                "counters": {
                    "$ref": "PhotosMediaClientActorCountersMask",
                    "description": "Reserve ids 5 for app_status."
                },
                "faceTemplateInfo": {
                    "$ref": "PhotosMediaClientFaceTemplateInfoMask",
                    "description": "Mask for face template info regarding the user."
                },
                "partnerSharing": {
                    "$ref": "PhotosMediaClientPartnerSharingInfoMask",
                    "description": "Mask for partner sharing that the user is involved in.\nIgnored unless actor == viewer"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "relevantClusters": {
                    "$ref": "PhotosMediaClientRelevantClustersMask",
                    "description": "Mask for the user relevant clusters.\nIgnored unless actor == viewer"
                },
                "significantDates": {
                    "$ref": "PhotosMediaClientSignificantDatesMask",
                    "description": "Mask for the user's significant dates."
                },
                "storageQuota": {
                    "$ref": "PhotosMediaClientStorageQuotaMask",
                    "description": "Mask for obtaining information regarding the user's storage quota usage."
                },
                "userProfile": {
                    "$ref": "PhotosMediaClientUserProfileMask",
                    "description": "Determines whether PeopleApi information will be returned for an actor.\n\nInclude only public user profile (e.g. G+ profile).\nUser could have only one profile: either public or private.\nIf user has a private profile then user profile won't be returned.\nNote: if user_profile_private_or_public is set then there is\nno reason to set user_profile mask."
                },
                "userProfilePrivateOrPublic": {
                    "$ref": "PhotosMediaClientUserProfileMask",
                    "description": "WARNING: This mask enables access to both user public and\n_PRIVATE_ profiles.\nName from private profile will be accessible even\nif it is not ACL visible to the viewer.\nUI must make it clear to user that private profile name\nwill be displayed before using this mask.\nFor example, when user with private profile creates a shared album\n(envelope) UI displays their private name, so it is OK to use private\nprofile names when displaying the envelope.\nTalk to photos-backend@google.com or pwg@google.com (Privacy Work Group)\nbefore using this mask.\nNote: if user_profile_private_or_public is set then there is\nno reason to set user_profile mask."
                },
                "userSettings": {
                    "$ref": "PhotosMediaClientUserSettingsMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaAnimationMetadata": {
            "id": "PhotosMediaClientMediaAnimationMetadata",
            "properties": {
                "numFrames": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaCameraCreationsMetadata": {
            "description": "Camera creations metadata.",
            "id": "PhotosMediaClientMediaCameraCreationsMetadata",
            "properties": {
                "burstId": {
                    "type": "string"
                },
                "burstPrimary": {
                    "format": "int32",
                    "type": "integer"
                },
                "disableAutocreation": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "specialTypeId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaCluster": {
            "description": "A cluster object in MediaService (e.g. person, place, thing, etc.).\nNEXT ID: 11",
            "id": "PhotosMediaClientMediaCluster",
            "properties": {
                "clusterCategory": {
                    "enumDescriptions": [
                        "",
                        "This cluster is a candidate for auto-complete.",
                        "This cluster is shown as an explore tile.",
                        "This cluster is used for rendering location headers. This should only\nbe set for PLACE clusters."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_CATEGORY",
                            "AUTO_COMPLETE",
                            "EXPLORE",
                            "LOCATION_HEADER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "clusterId": {
                    "$ref": "PhotosMediaClientClusterId",
                    "description": "Cluster ID."
                },
                "clusterMetadata": {
                    "$ref": "PhotosMediaClientClusterMetadata",
                    "description": "Metadata about the cluster that is common to all cluster types."
                },
                "clusterStatus": {
                    "enum": [
                        "CLUSTER_STATUS_UNKNOWN",
                        "VISIBLE",
                        "DELETED",
                        "HIDDEN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "clusterType": {
                    "enum": [
                        "UNKNOWN_CLUSTER_TYPE",
                        "PERSON_CLUSTER",
                        "PLACE_CLUSTER",
                        "THING_CLUSTER",
                        "PENDING_PERSON_CLUSTER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "Pending clusters are only used for on device face clustering and are not\nsurfaced to the user.\nNote: Not currently used, since we rely on the pending_cluster_state\nset in PhotoClusterInfo, and avoid syncing down the cluster entities for\nthese clusters altogether."
                    ],
                    "type": "string"
                },
                "hideReason": {
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_REASON",
                            "USER_HIDDEN",
                            "STRANGER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "personCluster": {
                    "$ref": "PhotosMediaClientPersonCluster",
                    "description": "Contains data that is specific to clusters with ClusterType PERSON_CLUSTER."
                },
                "placeCluster": {
                    "$ref": "PhotosMediaClientPlaceCluster",
                    "description": "Contains data that is specific to clusters with ClusterType PLACE_CLUSTER."
                },
                "thingCluster": {
                    "$ref": "PhotosMediaClientThingCluster",
                    "description": "Contains data that is specific to clusters with ClusterType THING_CLUSTER."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaClusterMask": {
            "id": "PhotosMediaClientMediaClusterMask",
            "properties": {
                "clusterMetadata": {
                    "$ref": "PhotosMediaClientClusterMetadataMask"
                },
                "personCluster": {
                    "$ref": "PhotosMediaClientPersonClusterMask"
                },
                "placeCluster": {
                    "$ref": "PhotosMediaClientPlaceClusterMask"
                },
                "thingCluster": {
                    "$ref": "PhotosMediaClientThingClusterMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaClusterSubject": {
            "description": "A cluster subject object in MediaService.\nNEXT ID: 3",
            "id": "PhotosMediaClientMediaClusterSubject",
            "properties": {
                "subjectId": {
                    "$ref": "PhotosMediaClientSubjectId",
                    "description": "References the subject this item is associated with."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaClusterSubjectMask": {
            "id": "PhotosMediaClientMediaClusterSubjectMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaCollection": {
            "description": "A collection in MediaService (e.g. album, event, etc.).\nNEXT ID: 21",
            "id": "PhotosMediaClientMediaCollection",
            "properties": {
                "annotationSubjectCluster": {
                    "description": "List of annotation clusters for this media collection.",
                    "items": {
                        "$ref": "PhotosMediaClientAnnotationSubjectCluster"
                    },
                    "type": "array"
                },
                "authkeyCollectionRecipient": {
                    "$ref": "PhotosMediaClientCollectionRecipient",
                    "description": "Info for the recipient of this collection corresponding to the per-user\nauthkey provided in the request (if there is one). This is used in\nthe case of an email/phone number user who is invited via an authkey."
                },
                "autoAddSettings": {
                    "$ref": "PhotosMediaClientAutoAddSettings",
                    "description": "Present when the collection is a Live Album (go/photos-be-live-albums)\nInformation here contains things such as whether the user gets notified\nwhen new photos get added and what clusters the user has selected for\nphotos to get automatically added.\nNote: the settings returned here are specifically for the viewing user."
                },
                "collectionId": {
                    "$ref": "PhotosMediaClientCollectionId",
                    "description": "Identifies this collection.  Replaces \"id\""
                },
                "compositionInfo": {
                    "$ref": "PhotosMediaClientCollectionCompositionInfo",
                    "description": "Will be present if the collection was created as the result of a\ncomposition."
                },
                "contributors": {
                    "$ref": "PhotosMediaClientCollectionContributors",
                    "description": "Information about people who have contributed items to the collection"
                },
                "enrichmentData": {
                    "$ref": "PhotosMediaClientCollectionEnrichmentData",
                    "description": "An ordered list of enrichments that can be displayed among the items in the\ncollection. For example, maps, places, and user-composed narrative.\nSee go/smart-albums-api-design"
                },
                "equivalenceData": {
                    "$ref": "PhotosMediaClientEquivalenceData",
                    "description": "Equivalence data for the collection. See notes on EquivalenceData for how\nto use this."
                },
                "id": {
                    "description": "A globally unique identifier.",
                    "type": "string"
                },
                "itemAbuseData": {
                    "description": "Data about abuse on the items in this collection. This is returned at\nthe collection level so that clients can determine whether there are\nabusive items in the collection, even if the items are not returned in\nthe current page of results.\n\nCurrently, only a single AbuseData with AbuseType.GLOBAL_TAKEDOWN will\nbe returned here. REGION_TAKEDOWN will not be returned even if there are\nindividual items in the collection in that state.",
                    "items": {
                        "$ref": "PhotosMediaClientAbuseData"
                    },
                    "type": "array"
                },
                "locationData": {
                    "$ref": "PhotosMediaClientLocationData",
                    "description": "Location information for the collection."
                },
                "metadata": {
                    "$ref": "PhotosMediaClientCollectionMetadata",
                    "description": "Basic metadata about the collection"
                },
                "recipientsGroup": {
                    "description": "Information about groups of people who have access to the collection.\nOnly supported by read_collections_by_id.",
                    "items": {
                        "$ref": "PhotosMediaClientCollectionRecipientsGroup"
                    },
                    "type": "array"
                },
                "renderedCard": {
                    "$ref": "PhotosMediaClientRenderedCard",
                    "description": "GSTS card for an activity associated with the collection"
                },
                "shareData": {
                    "$ref": "PhotosMediaClientCollectionShareData",
                    "description": "Information about a share of the collection, for example, the share\ndescription, comments, and +1s.\nOnly supported for reading envelopes with read_collections_by_id."
                },
                "sortCriteria": {
                    "$ref": "PhotosMediaClientCollectionSortCriteria",
                    "description": "Sorting criteria for the items in this collection.\nSee go/sorting-photos-in-albums."
                },
                "suggestedSharingTarget": {
                    "description": "List of suggested targets (e.g. users or circles) for sharing. This\nfield is present when it is requested using\nSelectors.include_suggested_sharing_target field.",
                    "items": {
                        "$ref": "PhotosMediaClientSharingTarget"
                    },
                    "type": "array"
                },
                "viewerCollectionRecipient": {
                    "$ref": "PhotosMediaClientCollectionRecipient",
                    "description": "Info for the recipient of this collection corresponding to the Gaia\nidentity of the viewer, only if the viewer is signed-in. Info may be\nreturned even if the signed-in viewer has not yet joined or been invited.\n\nNote that for signed-in viewers who provide a per-user authkey, both this\nfield and authkey_collection_recipient may be populated."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaCollectionMask": {
            "id": "PhotosMediaClientMediaCollectionMask",
            "properties": {
                "annotationSubjectCluster": {
                    "$ref": "PhotosMediaClientAnnotationSubjectClusterMask",
                    "description": "Deprecated. See b/25486554"
                },
                "authkeyCollectionRecipient": {
                    "$ref": "PhotosMediaClientCollectionRecipientMask"
                },
                "autoAddSettings": {
                    "$ref": "PhotosMediaClientAutoAddSettingsMask"
                },
                "bookmarkState": {
                    "$ref": "PhotosMediaClientBookmarkStateMask"
                },
                "compositionInfo": {
                    "$ref": "PhotosMediaClientCollectionCompositionInfoMask"
                },
                "contributors": {
                    "$ref": "PhotosMediaClientCollectionContributorsMask"
                },
                "enrichmentData": {
                    "$ref": "PhotosMediaClientCollectionEnrichmentDataMask"
                },
                "equivalenceData": {
                    "$ref": "PhotosMediaClientEquivalenceDataMask"
                },
                "locationData": {
                    "$ref": "PhotosMediaClientLocationMask"
                },
                "metadata": {
                    "$ref": "PhotosMediaClientCollectionMetadataMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "recipientsGroup": {
                    "$ref": "PhotosMediaClientCollectionRecipientsGroupMask",
                    "description": "Only supported by read_collections_by_id and read_shared_collections."
                },
                "renderedCard": {
                    "$ref": "PhotosMediaClientRenderedCardMask"
                },
                "shareData": {
                    "$ref": "PhotosMediaClientCollectionShareDataMask"
                },
                "sortCriteria": {
                    "$ref": "PhotosMediaClientCollectionSortCriteriaMask"
                },
                "suggestedSharingTarget": {
                    "$ref": "PhotosMediaClientSharingTargetMask",
                    "description": "The mask for abuse_data is omitted since the field is always populated."
                },
                "viewerCollectionRecipient": {
                    "$ref": "PhotosMediaClientCollectionRecipientMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaEditData": {
            "description": "Editing-related metadata for MediaItems.",
            "id": "PhotosMediaClientMediaEditData",
            "properties": {
                "versionId": {
                    "description": "Encoded edit version of a media item.  Changes each time a media item's\ncontents are modified.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaEditDataMask": {
            "id": "PhotosMediaClientMediaEditDataMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaExifData": {
            "id": "PhotosMediaClientMediaExifData",
            "properties": {
                "apertureFNumber": {
                    "format": "float",
                    "type": "number"
                },
                "cameraMake": {
                    "type": "string"
                },
                "cameraModel": {
                    "type": "string"
                },
                "cameraOrientation": {
                    "description": "The camera's EXIF orientation [1...8] of the original untransformed image.\nSee http://sylvana.net/jpegcrop/exif_orientation.html for EXIF orientation\nspec.",
                    "format": "int32",
                    "type": "integer"
                },
                "exposureTime": {
                    "format": "float",
                    "type": "number"
                },
                "focalLength": {
                    "format": "float",
                    "type": "number"
                },
                "isoEquivalent": {
                    "format": "int32",
                    "type": "integer"
                },
                "lens": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaImageMetadata": {
            "description": "A subset of photos/thumbnailer/image_metadata.proto relevant to photos\nand mediaservice. This subset should not contain data which is supplied in\nother fields already.",
            "id": "PhotosMediaClientMediaImageMetadata",
            "properties": {
                "animationMetadata": {
                    "$ref": "PhotosMediaClientMediaAnimationMetadata"
                },
                "cameraCreationsMetadata": {
                    "$ref": "PhotosMediaClientMediaCameraCreationsMetadata"
                },
                "exifData": {
                    "$ref": "PhotosMediaClientMediaExifData"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "mimeType": {
                    "description": "Mime type of image being returned to caller",
                    "enum": [
                        "UNKNOWN_MIME_TYPE",
                        "JPEG",
                        "GIF",
                        "PNG",
                        "OTHER_IMAGE",
                        "HTML",
                        "XML",
                        "BMP",
                        "TIFF",
                        "OCTET_STREAM",
                        "ICO",
                        "RAW",
                        "WEBP",
                        "JP2K",
                        "HEIF",
                        "DEPRECATED_ASTC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "photosphereMetadata": {
                    "$ref": "PhotosMediaClientMediaPhotosphereMetadata"
                },
                "width": {
                    "description": "width and height are before any rotation (including EXIF orientation).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaImageMetadataMask": {
            "id": "PhotosMediaClientMediaImageMetadataMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaItem": {
            "description": "A leaf-level object in MediaService (e.g. photo, video, etc.).\nNEXT ID: 21",
            "id": "PhotosMediaClientMediaItem",
            "properties": {
                "abuseData": {
                    "$ref": "PhotosMediaClientAbuseData",
                    "description": "Abuse information for the item\nNote that there is no read mask for this field; It will always be present\nif the item has been marked for abuse."
                },
                "annotations": {
                    "$ref": "PhotosMediaClientAnnotations",
                    "description": "Annotations\nNOT IMPLEMENTED. Use clusters instead"
                },
                "commentData": {
                    "$ref": "PhotosMediaClientCommentData",
                    "description": "Data about the item's comments."
                },
                "compositionInfo": {
                    "$ref": "PhotosMediaClientItemCompositionInfo",
                    "description": "Will be present if the item was created as the result of a composition"
                },
                "curationData": {
                    "$ref": "PhotosMediaClientCurationData",
                    "description": "Data pertaining to item curation. Only returned for owners."
                },
                "hiddenItem": {
                    "description": "Items that were not returned because they are duplicates of this item",
                    "items": {
                        "$ref": "PhotosMediaClientHiddenItem"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A globally unique identifier.",
                    "type": "string"
                },
                "inferredLocationData": {
                    "$ref": "PhotosMediaClientLocationData",
                    "description": "Suggested location information for the item, inferred based on other\nsignals for the user (e.g. Location History)."
                },
                "itemId": {
                    "$ref": "PhotosMediaClientItemId",
                    "description": "Identifies this item.  This replaces \"id.\""
                },
                "itemType": {
                    "$ref": "PhotosMediaClientItemType",
                    "description": "Type-specific information"
                },
                "locationData": {
                    "$ref": "PhotosMediaClientLocationData",
                    "description": "Canonical location information for the item.  This is either explicitly set\nby the user, extracted from file metadata (e.g. EXIF), etc."
                },
                "mediaEditData": {
                    "$ref": "PhotosMediaClientMediaEditData",
                    "description": "Editing-related metadata for this item."
                },
                "metadata": {
                    "$ref": "PhotosMediaClientItemMetadata",
                    "description": "Basic metadata about the item."
                },
                "petRegionInfo": {
                    "description": "Pet region information related to the media item.",
                    "items": {
                        "$ref": "PhotosMediaClientRegionInfo"
                    },
                    "type": "array"
                },
                "photosProductUrls": {
                    "$ref": "PhotosMediaClientPhotosProductUrls",
                    "description": "Urls for photos product."
                },
                "plusOneData": {
                    "$ref": "PhotosMediaClientPlusOneData",
                    "description": "Data about the item's +1s."
                },
                "promoData": {
                    "$ref": "PhotosMediaClientItemPromoData",
                    "description": "Data about promos that are relevant to the item."
                },
                "regionInfo": {
                    "description": "Face region information related to the media item.",
                    "items": {
                        "$ref": "PhotosMediaClientRegionInfo"
                    },
                    "type": "array"
                },
                "renderedCard": {
                    "$ref": "PhotosMediaClientRenderedCard",
                    "description": "GSTS card for an activity associated with the item"
                },
                "suggestionInfo": {
                    "description": "The suggestion information this MediaItem associated with.",
                    "items": {
                        "$ref": "PhotosMediaClientSuggestionInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaItemMask": {
            "description": "Next ID: 18",
            "id": "PhotosMediaClientMediaItemMask",
            "properties": {
                "annotations": {
                    "$ref": "PhotosMediaClientAnnotationsMask",
                    "description": "Deprecated. See b/25486554"
                },
                "commentData": {
                    "$ref": "PhotosMediaClientCommentDataMask"
                },
                "compositionInfo": {
                    "$ref": "PhotosMediaClientItemCompositionInfoMask"
                },
                "curationData": {
                    "$ref": "PhotosMediaClientCurationDataMask",
                    "description": "The mask for abuse_data is omitted since the field is always populated."
                },
                "hidden": {
                    "$ref": "PhotosMediaClientHiddenItemMask"
                },
                "inferredLocationData": {
                    "$ref": "PhotosMediaClientLocationMask"
                },
                "itemType": {
                    "$ref": "PhotosMediaClientItemTypeMask"
                },
                "locationData": {
                    "$ref": "PhotosMediaClientLocationMask"
                },
                "mediaEditData": {
                    "$ref": "PhotosMediaClientMediaEditDataMask"
                },
                "metadata": {
                    "$ref": "PhotosMediaClientItemMetadataMask"
                },
                "petRegionInfo": {
                    "$ref": "PhotosMediaClientRegionInfoMask"
                },
                "photosProductUrls": {
                    "$ref": "PhotosMediaClientPhotosProductUrlsMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "plusOneData": {
                    "$ref": "PhotosMediaClientPlusOneDataMask"
                },
                "regionInfo": {
                    "$ref": "PhotosMediaClientRegionInfoMask"
                },
                "renderedCard": {
                    "$ref": "PhotosMediaClientRenderedCardMask"
                },
                "suggestionInfo": {
                    "$ref": "PhotosMediaClientSuggestionInfoMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaPhotosphereMetadata": {
            "description": "Necessary informations to render a PhotoSphere.",
            "id": "PhotosMediaClientMediaPhotosphereMetadata",
            "properties": {
                "croppedAreaImageHeightPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "croppedAreaImageWidthPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "croppedAreaLeftPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "croppedAreaTopPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "fullPanoHeightPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "fullPanoWidthPixels": {
                    "format": "int32",
                    "type": "integer"
                },
                "initialViewHeadingDegrees": {
                    "format": "int32",
                    "type": "integer"
                },
                "initialViewPitchDegrees": {
                    "format": "int32",
                    "type": "integer"
                },
                "initialViewRollDegrees": {
                    "format": "int32",
                    "type": "integer"
                },
                "poseHeadingDegrees": {
                    "format": "float",
                    "type": "number"
                },
                "posePitchDegrees": {
                    "format": "float",
                    "type": "number"
                },
                "poseRollDegrees": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMediaRef": {
            "description": "A MediaRef is a generic wrapper around other types of Refs, and is used\neither when an application contains a mixed view of items and collections,\nor when an action returns more items/collections than will be displayed.",
            "id": "PhotosMediaClientMediaRef",
            "properties": {
                "actor": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "Only returned if type is ACTOR"
                },
                "chapter": {
                    "$ref": "PhotosMediaClientChapterRef",
                    "description": "Only returned if type is CHAPTER"
                },
                "cluster": {
                    "$ref": "PhotosMediaClientClusterRef",
                    "description": "Only returned if type is CLUSTER"
                },
                "clusterInference": {
                    "$ref": "PhotosMediaClientClusterInferenceRef",
                    "description": "Only returned if type is CLUSTER_INFERENCE"
                },
                "collection": {
                    "$ref": "PhotosMediaClientCollectionRef",
                    "description": "Only returned if type is COLLECTION"
                },
                "curatedItemSet": {
                    "$ref": "PhotosMediaClientCuratedItemSetRef",
                    "description": "Only returned if type is CURATED_ITEM_SET"
                },
                "faceKernel": {
                    "$ref": "PhotosMediaClientFaceKernelRef",
                    "description": "Only returned if type is FACE_KERNEL"
                },
                "item": {
                    "$ref": "PhotosMediaClientItemRef",
                    "description": "Only returned if type is ITEM"
                },
                "printOrder": {
                    "$ref": "PhotosMediaClientPrintOrderRef",
                    "description": "Only returned if type is PRINT_ORDER"
                },
                "suggestion": {
                    "$ref": "PhotosMediaClientSuggestionRef",
                    "description": "Only returned if type is SUGGESTION"
                },
                "type": {
                    "enum": [
                        "UNKNOWN",
                        "ITEM",
                        "COLLECTION",
                        "CHAPTER",
                        "CLUSTER",
                        "ACTOR",
                        "SUGGESTION",
                        "FACE_KERNEL",
                        "CLUSTER_INFERENCE",
                        "PRINT_ORDER",
                        "CURATED_ITEM_SET"
                    ],
                    "enumDescriptions": [
                        "The entry is of an unknown type.\nNo sub-messages will be valid.",
                        "The entry is a MediaItem.",
                        "The entry is a Collection.",
                        "The entry is a Chapter.",
                        "The entry is a Cluster.",
                        "The entry is an Actor.",
                        "The entry is a Suggestion.",
                        "The entry is a Face Kernel.",
                        "The entry is a ClusterInference.",
                        "The entry is a Print Order",
                        "The entry is a Curated Item set."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMemoriesSettings": {
            "description": "Settings related to Memories (go/memoriesdd).",
            "id": "PhotosMediaClientMemoriesSettings",
            "properties": {
                "showMemories": {
                    "description": "Whether to show Memories features to users.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientMemoriesSettingsMask": {
            "id": "PhotosMediaClientMemoriesSettingsMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientNarrativeEnrichment": {
            "description": "A block of text composed by the user.",
            "id": "PhotosMediaClientNarrativeEnrichment",
            "properties": {
                "text": {
                    "description": "User entered string. Narratives contain simple text with no formatting.\nClients are responsible for escaping this string as necessary according to\nthe context in which it is displayed.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNarrativeEnrichmentMask": {
            "id": "PhotosMediaClientNarrativeEnrichmentMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNavigationSettings": {
            "description": "Settings related to the navigation and UI displayed to the user.",
            "id": "PhotosMediaClientNavigationSettings",
            "properties": {
                "newestNavigationMenuReadTimestampMs": {
                    "description": "Timestamp of the most recent viewing of the navigation menu, in\nmilliseconds.\nNote: Line not wrapped to allow presubmit checks and circumvent b/11990551.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNavigationSettingsMask": {
            "id": "PhotosMediaClientNavigationSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNormalizedRect": {
            "description": "Relative bounds of a rectangle normalized by image width and height.\nValues should be in the range [0, 1]. Image origin is the top-left corner.",
            "id": "PhotosMediaClientNormalizedRect",
            "properties": {
                "bottom": {
                    "format": "float",
                    "type": "number"
                },
                "left": {
                    "format": "float",
                    "type": "number"
                },
                "right": {
                    "format": "float",
                    "type": "number"
                },
                "top": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNormalizedRectMask": {
            "id": "PhotosMediaClientNormalizedRectMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNotificationSettings": {
            "description": "Settings related to what notifications user should receive.",
            "id": "PhotosMediaClientNotificationSettings",
            "properties": {
                "photosNotificationsSwitchEnabled": {
                    "description": "If true, then certain photos notifications will be delivered to the PHOTOS\napp instead of the GPLUS app.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNotificationSettingsMask": {
            "id": "PhotosMediaClientNotificationSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNotificationTypeSettings": {
            "description": "Settings for a specific notification type.",
            "id": "PhotosMediaClientNotificationTypeSettings",
            "properties": {
                "enabled": {
                    "description": "Whether or not notifications of this type are enabled.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientNotificationTypeSettingsMask": {
            "id": "PhotosMediaClientNotificationTypeSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingAutoSaveSettings": {
            "description": "Describes which partner-shared media will be auto-saved to the destination\naccount. This filter has no effect on live reads of the partner's media. Only\nthe partner's filters affect the visible media in live reads. If no filters\nare specified, then all incoming photos are eligible for saving.",
            "id": "PhotosMediaClientPartnerSharingAutoSaveSettings",
            "properties": {
                "autoSaveEnabled": {
                    "description": "If true, automatically write media to the user's account when it\nmatches the filters in this message. If false, the partner's shared media\nis visible via query to the user, but is not automatically copied.",
                    "type": "boolean"
                },
                "autoSaveOnlyCluster": {
                    "description": "Auto-save only media that contains faces from one of these clusters. If\nempty, no face filtering is performed.",
                    "items": {
                        "$ref": "PhotosMediaClientClusterRef"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingAutoSaveSettingsMask": {
            "id": "PhotosMediaClientPartnerSharingAutoSaveSettingsMask",
            "properties": {
                "autoSaveOnlyCluster": {
                    "$ref": "PhotosMediaClientClusterRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingIncomingInfo": {
            "description": "Configuration and state for incoming partner sharing, i.e. if/how the user\nreceives photos from the partner.",
            "id": "PhotosMediaClientPartnerSharingIncomingInfo",
            "properties": {
                "autoSaveSettings": {
                    "$ref": "PhotosMediaClientPartnerSharingAutoSaveSettings",
                    "description": "Describes which media items, if any, will be automatically saved to the\nuser's account. All media shared by the partner will be available via\nlive query (ReadPartnerItems), but only the media configured by these\nsettings will be automatically saved."
                },
                "mostRecentStatusChangeTimestampMs": {
                    "description": "The timestamp of the most recent status change, in milliseconds.\nThis line is long due to limitation of CheckContents presubmit (b/65057291)",
                    "format": "int64",
                    "type": "string"
                },
                "notificationSettings": {
                    "$ref": "PhotosMediaClientPartnerSharingIncomingNotificationSettings",
                    "description": "Settings related to how the user would like to receive notifications from\nthe partner."
                },
                "status": {
                    "$ref": "PhotosMediaClientPartnerSharingStatus",
                    "description": "The current status."
                },
                "viewState": {
                    "$ref": "PhotosMediaClientPartnerSharingIncomingInfoViewState",
                    "description": "Info used to determine whether new items have been added by the partner.\nThis will only be populated if status is ENABLED."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingIncomingInfoMask": {
            "id": "PhotosMediaClientPartnerSharingIncomingInfoMask",
            "properties": {
                "autoSaveSettings": {
                    "$ref": "PhotosMediaClientPartnerSharingAutoSaveSettingsMask"
                },
                "notificationSettings": {
                    "$ref": "PhotosMediaClientPartnerSharingIncomingNotificationSettingsMask"
                },
                "status": {
                    "$ref": "PhotosMediaClientPartnerSharingStatusMask"
                },
                "viewState": {
                    "$ref": "PhotosMediaClientPartnerSharingIncomingInfoMaskViewStateMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingIncomingInfoMaskViewStateMask": {
            "id": "PhotosMediaClientPartnerSharingIncomingInfoMaskViewStateMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingIncomingInfoViewState": {
            "id": "PhotosMediaClientPartnerSharingIncomingInfoViewState",
            "properties": {
                "lastViewedItemTimestampMs": {
                    "description": "The timestamp of the most recent partner item viewed by the user,\nin milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "newestPartnerItemTimestampMs": {
                    "description": "The timestamp of the most recent available partner item, in milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "newestPartnerOutgoingSettingsChangeTimestampMs": {
                    "description": "The timestamp of the most recent time that the partner changed their\noutgoing settings. This means that the visibility of items may have\nchanged at this time.\nThis line is long due to broken CheckContents presubmit (b/65057291)",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingIncomingNotificationSettings": {
            "description": "Settings related to how the user would like to receive notifications from\na sharing partner.",
            "id": "PhotosMediaClientPartnerSharingIncomingNotificationSettings",
            "properties": {
                "photosAdded": {
                    "$ref": "PhotosMediaClientNotificationTypeSettings",
                    "description": "Settings for the notification sent by the partner when they have added\nnew photos that are available for the user to view."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingIncomingNotificationSettingsMask": {
            "id": "PhotosMediaClientPartnerSharingIncomingNotificationSettingsMask",
            "properties": {
                "photosAdded": {
                    "$ref": "PhotosMediaClientNotificationTypeSettingsMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingInfo": {
            "description": "Describes partner sharing for a single sharing partner. It contains\nconfiguration and state for both outgoing and incoming sharing for the\npartner.\nSee go/photos-backend-partner-sharing-design for details.",
            "id": "PhotosMediaClientPartnerSharingInfo",
            "properties": {
                "incoming": {
                    "$ref": "PhotosMediaClientPartnerSharingIncomingInfo",
                    "description": "Info about the partner sharing photos with the user.\nOnly populated if the partner has sent a sharing request to the user."
                },
                "outgoing": {
                    "$ref": "PhotosMediaClientPartnerSharingOutgoingInfo",
                    "description": "Info about the user sharing photos with the partner.\nOnly populated if the user has sent a sharing request to the partner."
                },
                "partner": {
                    "$ref": "PhotosMediaClientActorRef",
                    "description": "ID of the (potential) sharing partner."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingInfoMask": {
            "id": "PhotosMediaClientPartnerSharingInfoMask",
            "properties": {
                "incoming": {
                    "$ref": "PhotosMediaClientPartnerSharingIncomingInfoMask"
                },
                "outgoing": {
                    "$ref": "PhotosMediaClientPartnerSharingOutgoingInfoMask"
                },
                "partner": {
                    "$ref": "PhotosMediaClientActorRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingOutgoingFilter": {
            "description": "Describes the filter applied to outgoing media to determine the subset that\nis eligible for partner sharing. If no filter options are filled, then all\nmedia is eligible.",
            "id": "PhotosMediaClientPartnerSharingOutgoingFilter",
            "properties": {
                "gracePeriodMs": {
                    "description": "Defines the period of time, in milliseconds, after media creation after\nwhich the media becomes eligible for copying to the destination account.\nA value of zero naturally indicates that media should be copied as soon\nas possible.",
                    "format": "int64",
                    "type": "string"
                },
                "shareAfterCaptureTimestampMs": {
                    "description": "Share only media captured after this timestamp (in milliseconds).",
                    "format": "int64",
                    "type": "string"
                },
                "shareOnlyClusterId": {
                    "description": "Share only media that contain faces from one of these clusters. This is a\nwhitelist. However, all clusters are shared if empty.",
                    "items": {
                        "$ref": "PhotosMediaClientClusterRef"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingOutgoingFilterMask": {
            "id": "PhotosMediaClientPartnerSharingOutgoingFilterMask",
            "properties": {
                "shareOnlyClusterId": {
                    "$ref": "PhotosMediaClientClusterRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingOutgoingInfo": {
            "description": "Configuration and state for outgoing partner sharing, i.e. how the user\nshares photos with the partner.\nOutgoing sharing is not officially valid until the recipient has\naccepted the sharing request.",
            "id": "PhotosMediaClientPartnerSharingOutgoingInfo",
            "properties": {
                "mostRecentStatusChangeTimestampMs": {
                    "description": "The timestamp of the most recent status change, in milliseconds.\nThis line is long due to limitation of CheckContents presubmit (b/65057291)",
                    "format": "int64",
                    "type": "string"
                },
                "outgoingFilter": {
                    "$ref": "PhotosMediaClientPartnerSharingOutgoingFilter",
                    "description": "How the outgoing media will be filtered. If empty, then all photos will be\nshared."
                },
                "status": {
                    "$ref": "PhotosMediaClientPartnerSharingStatus",
                    "description": "The current status of the outgoing sharing intent."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingOutgoingInfoMask": {
            "id": "PhotosMediaClientPartnerSharingOutgoingInfoMask",
            "properties": {
                "outgoingFilter": {
                    "$ref": "PhotosMediaClientPartnerSharingOutgoingFilterMask"
                },
                "status": {
                    "$ref": "PhotosMediaClientPartnerSharingStatusMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingSettings": {
            "description": "Settings related to partner sharing (go/partner_sharing).",
            "id": "PhotosMediaClientPartnerSharingSettings",
            "properties": {
                "partnerSharingEligible": {
                    "description": "True if this user is eligible for partner sharing.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingSettingsMask": {
            "id": "PhotosMediaClientPartnerSharingSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingStatus": {
            "description": "Describes the current status of a partner sharing connection between two\nusers.",
            "id": "PhotosMediaClientPartnerSharingStatus",
            "properties": {
                "status": {
                    "enum": [
                        "UNKNOWN_STATUS",
                        "PENDING",
                        "ACCEPTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The share request is pending acceptance.",
                        "The share request is accepted and live."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPartnerSharingStatusMask": {
            "id": "PhotosMediaClientPartnerSharingStatusMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPersonCluster": {
            "description": "Data about the cluster that is specific to clusters with ClusterType\nPERSON_CLUSTER.",
            "id": "PhotosMediaClientPersonCluster",
            "properties": {
                "classification": {
                    "enum": [
                        "UNKNOWN_CLASSIFICATION",
                        "PERSON",
                        "PET"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "clusterSubjectRef": {
                    "$ref": "PhotosMediaClientClusterSubjectRef"
                },
                "estimatedBirthTimestampSec": {
                    "description": "The estimated birth timestamp in seconds of this cluster.\nThis will enable clients to filter out children as recipients in\nsuggested sharing.",
                    "format": "int64",
                    "type": "string"
                },
                "meScore": {
                    "description": "A score [0, 1] conveying the likelihood that the cluster corresponds to\nthe account owner. It is recommended to designate the visible cluster with\nthe maximum me score as the account owner, but if you'd prefer to use\nthreshold, the precision-recall curve is available at go/photos-me.\nUse of this signal must be approved by PWG/policy/legal on a\nper-application basis.",
                    "format": "float",
                    "type": "number"
                },
                "strangerScore": {
                    "description": "A score [0, 1] conveying the likelihood that the cluster corresponds to\na stranger. See go/strangerdetection for details.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPersonClusterMask": {
            "id": "PhotosMediaClientPersonClusterMask",
            "properties": {
                "clusterSubjectRef": {
                    "$ref": "PhotosMediaClientClusterSubjectRefMask"
                },
                "personClusterOptions": {
                    "$ref": "PhotosMediaClientPersonClusterOptions"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPersonClusterOptions": {
            "description": "Options for Person Clusters Mask.",
            "id": "PhotosMediaClientPersonClusterOptions",
            "properties": {
                "includePetsWithPeople": {
                    "description": "If set to true, return person clusters that represent pets. If set to false\nor left unset, person clusters that represent pets will be filtered out.",
                    "type": "boolean"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhodeoSharingSettings": {
            "description": "Settings related to phodeo sharing.",
            "id": "PhotosMediaClientPhodeoSharingSettings",
            "properties": {
                "sharePhodeoVideo": {
                    "description": "True if this user is allowed to share both photo and video components of a\nphodeo. Otherwise, share the photo component only.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhodeoSharingSettingsMask": {
            "id": "PhotosMediaClientPhodeoSharingSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhoto": {
            "description": "Data specific to photo files, to be used in query responses.",
            "id": "PhotosMediaClientPhoto",
            "properties": {
                "downloadUrl": {
                    "description": "URL for downloading the photo.\nClients shouldn't modify this url, it should be used as-is.\nThis URL will download the photo with any existing edits applied.",
                    "type": "string"
                },
                "editList": {
                    "$ref": "PhotosEditingFiltersEditList",
                    "description": "The EditList for the photo. The EditList is a series of filters and\ntransforms that are applied to the base image to generate the final image\nthat is displayed to users. The owner may request urls which will display\nthe original image with some or all of the edits disabled.\nSee SignedUrl in common.ImageProperties"
                },
                "image": {
                    "$ref": "PhotosMediaClientImageProperties",
                    "description": "URL and basic display properties of the photo's image"
                },
                "suggestedEdit": {
                    "$ref": "PhotosMediaClientSuggestedEdit",
                    "description": "A pending suggestion to edit for the photo."
                },
                "uneditedOriginalDownloadUrl": {
                    "description": "URL for downloading the original photo with no edits applied.\nClients shouldn't modify this url, it should be used as-is.\nThis will only be populated for the owner.\nCaveat - this will generally be the photo as it was uploaded, but this is\nnot guaranteed. For example, if the uploaded photo was automatically\ndownsized, this will return the largest available version of the photo with\nno edits applied.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotoClusterInfo": {
            "description": "Information about a photo cluster an item belongs to.\nA photo cluster is a set of related photos, it is created to facilitate\nthe photo search. For more info, refer to go/ianus.",
            "id": "PhotosMediaClientPhotoClusterInfo",
            "properties": {
                "clusterId": {
                    "$ref": "PhotosMediaClientClusterId"
                },
                "clusterPendingState": {
                    "description": "Indicates whether the cluster corresponding to this PhotoClusterInfo is a\npending cluster or not.",
                    "enum": [
                        "CLUSTER_PENDING_STATE_UNKNOWN",
                        "LIVE",
                        "PENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "The cluster associated with the photo cluster info is live and exposed to\nusers via search.",
                        "The cluster associated with the photo cluster info is a pending cluster,\nand this photo cluster info is only to be used for reclustering in on\ndevice face grouping or streaming clustering. PENDING clusters should\nonly be handled by clients for on device face grouping users."
                    ],
                    "type": "string"
                },
                "confidence": {
                    "description": "Confidence level for this MediaItem belonging to the cluster.\nA higher number indicates a higher confidence. Range: [0, 1]",
                    "format": "float",
                    "type": "number"
                },
                "faceId": {
                    "$ref": "PhotosMediaClientFaceId",
                    "description": "The id of particular face which is included in the cluster."
                },
                "faceKernelRef": {
                    "$ref": "PhotosMediaClientFaceKernelRef",
                    "description": "FaceKernel associated with the photo for this cluster."
                },
                "iconicScore": {
                    "description": "Score that indicates the likelihood that this MediaItem is the \"iconic\"\nimage for the cluster. A higher number indicates a higher likelihood.\nRange [0, 1]",
                    "format": "float",
                    "type": "number"
                },
                "videoClusterData": {
                    "$ref": "PhotosMediaClientPhotoClusterInfoVideoClusterData",
                    "description": "If this field is set, it is implied that this cluster member is a video,\n(i.e., item_type == VIDEO) and face_id should be unset. This field is used\nby the clustering server to retrieve specific tracks/frames within\nclusters, and by clients for cluster-specific (i.e., query-specific)\nthumbnails and cluster iconics."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotoClusterInfoMask": {
            "id": "PhotosMediaClientPhotoClusterInfoMask",
            "properties": {
                "faceKernelRef": {
                    "$ref": "PhotosMediaClientFaceKernelRefMask"
                },
                "photoClusterInfoOptions": {
                    "$ref": "PhotosMediaClientPhotoClusterInfoOptions"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "videoClusterData": {
                    "$ref": "PhotosMediaClientPhotoClusterInfoMaskVideoClusterDataMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotoClusterInfoMaskVideoClusterDataMask": {
            "id": "PhotosMediaClientPhotoClusterInfoMaskVideoClusterDataMask",
            "properties": {
                "frameThumbnail": {
                    "$ref": "PhotosMediaClientClusterThumbnailInfoMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotoClusterInfoOptions": {
            "description": "Option used to control PhotoClusterInfo retrieval.",
            "id": "PhotosMediaClientPhotoClusterInfoOptions",
            "properties": {
                "includePendingClusterInfos": {
                    "description": "If true, cluster infos corresponding to PENDING clusters will be included.\nMore info: go/cluster-reset for details.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotoClusterInfoVideoClusterData": {
            "id": "PhotosMediaClientPhotoClusterInfoVideoClusterData",
            "properties": {
                "frameId": {
                    "description": "This field may specify the frame within a track (if track_id is set),\nor it may specify the frame within the entire video (if track_id is\nunset).",
                    "format": "int64",
                    "type": "string"
                },
                "frameThumbnail": {
                    "$ref": "PhotosMediaClientClusterThumbnailInfo",
                    "description": "Cluster-specific thumbnail for this video. Different from\nvideo.thumbnail, which represents the video outside of clustering\ncontexts. Cluster-specific thumbnails will be a video frame (with a\nframe_id) that contains the face track (i.e., shape) of the person\nrepresenting the cluster (vs just an arbitrary frame in the video that\nmay not include the cluster subject). Currently not populated for\nsuggest clusters."
                },
                "trackId": {
                    "description": "Specifies the track within the video.  See go/video-cluster-be-storage\nfor details.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotoMask": {
            "id": "PhotosMediaClientPhotoMask",
            "properties": {
                "editList": {
                    "$ref": "PhotosMediaClientEditListMask"
                },
                "image": {
                    "$ref": "PhotosMediaClientImagePropertiesMask"
                },
                "omitDownloadUrl": {
                    "description": "If set download_url will not be populated.",
                    "type": "boolean"
                },
                "omitUneditedOriginalDownloadUrl": {
                    "description": "If set unedited_original_download_url will not be populated.",
                    "type": "boolean"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "suggestedEdit": {
                    "$ref": "PhotosMediaClientSuggestedEditMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotosProductUrls": {
            "description": "Urls for photos product.",
            "id": "PhotosMediaClientPhotosProductUrls",
            "properties": {
                "lightboxUrl": {
                    "type": "string"
                },
                "lightboxUrlWithAlbum": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPhotosProductUrlsMask": {
            "id": "PhotosMediaClientPhotosProductUrlsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPlaceCluster": {
            "description": "Data about the cluster that is specific to clusters with ClusterType\nPLACE_CLUSTER",
            "id": "PhotosMediaClientPlaceCluster",
            "properties": {
                "featureId": {
                    "description": "Original ID of the cluster.\nThis is the feature ID of the location of the cluster.",
                    "type": "string"
                },
                "locationFeature": {
                    "$ref": "PhotosMediaClientLocationFeature",
                    "description": "Location feature associated with the cluster used to render location\nheaders."
                },
                "score": {
                    "description": "Score (popularity) of the feature_id. Corresponds to:\nphotos.be.geo.inferred.LocationFeature.score.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPlaceClusterMask": {
            "id": "PhotosMediaClientPlaceClusterMask",
            "properties": {
                "locationFeature": {
                    "$ref": "PhotosMediaClientLocationFeatureMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPlusOne": {
            "description": "Information about a specific plus one.",
            "id": "PhotosMediaClientPlusOne",
            "properties": {
                "id": {
                    "$ref": "PhotosMediaClientPlusOneId"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPlusOneData": {
            "description": "Information about +1s on an object.\nNEXT ID: 4",
            "id": "PhotosMediaClientPlusOneData",
            "properties": {
                "plusOnedByViewer": {
                    "description": "Whether the viewer has +1'd.",
                    "type": "boolean"
                },
                "totalCount": {
                    "description": "The total number of users who have +1'd.",
                    "format": "int32",
                    "type": "integer"
                },
                "viewerPlusOne": {
                    "$ref": "PhotosMediaClientPlusOne",
                    "description": "Information about the viewer's plus one."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPlusOneDataMask": {
            "id": "PhotosMediaClientPlusOneDataMask",
            "properties": {
                "viewerPlusOne": {
                    "$ref": "PhotosMediaClientPlusOneMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPlusOneId": {
            "description": "An encrypted websafe blob that is a globally unique identifier for a plus\none. This ID can be used for a subsequent delete of a plus one.",
            "id": "PhotosMediaClientPlusOneId",
            "properties": {
                "plusOneId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPlusOneMask": {
            "id": "PhotosMediaClientPlusOneMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPrintOrderRef": {
            "description": "A reference to a Print Order. This is used by Tombstones to identify\ndeleted print orders",
            "id": "PhotosMediaClientPrintOrderRef",
            "properties": {
                "printOrderMediaKey": {
                    "description": "Media key of the referenced print order.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPrintingCommunicationSettings": {
            "description": "Settings related to printing products.",
            "id": "PhotosMediaClientPrintingCommunicationSettings",
            "properties": {
                "printingProductsAllowed": {
                    "description": "True if user is allowed to purchase printing products.",
                    "type": "boolean"
                },
                "sendPrintingMarketingEmail": {
                    "description": "If true, then the user will receive marketing emails about photo books.",
                    "type": "boolean"
                },
                "showPrintingDraftNotifications": {
                    "description": "If true, then the user will receive notifications about photobook drafts.",
                    "type": "boolean"
                },
                "showPrintingDraftReminders": {
                    "description": "Whether to show notifications / send emails for printing-related draft\nreminders.",
                    "type": "boolean"
                },
                "showPrintingPromoNotifications": {
                    "description": "If true, then the user will receive notifications about printing promos.",
                    "type": "boolean"
                },
                "showPrintingSuggestedBookNotifications": {
                    "description": "If true, then the user will receive notifications about suggested books.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPrintingCommunicationSettingsMask": {
            "id": "PhotosMediaClientPrintingCommunicationSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientPromo": {
            "description": "A promo to display to the viewer",
            "id": "PhotosMediaClientPromo",
            "properties": {
                "id": {
                    "description": "The ID of the promo",
                    "enum": [
                        "PROMO_ID_UNKNOWN",
                        "AUTO_ENHANCE_IMPACTFUL",
                        "YEARBOOK_BANNER_2014"
                    ],
                    "enumDescriptions": [
                        "",
                        "Promo that indicates to a viewer that a photo was strongly impacted by\nauto enhance. This promo does not use a template and requires special\nclient support. It is intended to be shown over such photos in the one-up\nand lightbox.",
                        "Promo that indicates to a viewer that they have a yearbook for 2014;"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRect32": {
            "description": "A rectangle.",
            "id": "PhotosMediaClientRect32",
            "properties": {
                "bottom": {
                    "format": "int32",
                    "type": "integer"
                },
                "left": {
                    "format": "int32",
                    "type": "integer"
                },
                "right": {
                    "format": "int32",
                    "type": "integer"
                },
                "top": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRect32Mask": {
            "id": "PhotosMediaClientRect32Mask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRegionExtensions": {
            "description": "RegionExtensions is used as en extension point for messages that we don't\nwant to include directly in Region - usually for the purpose of minimizing\ndependencies for things that will only be used by few clients.",
            "id": "PhotosMediaClientRegionExtensions",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientRegionExtensionsMask": {
            "description": "Mask to request additional rarely used fields.",
            "id": "PhotosMediaClientRegionExtensionsMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientRegionId": {
            "description": "Identifies a region in an item.",
            "id": "PhotosMediaClientRegionId",
            "properties": {
                "mediaKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRegionInfo": {
            "description": "Region information about a MediaItem.\nNext ID: 7",
            "id": "PhotosMediaClientRegionInfo",
            "properties": {
                "faceRegionInfo": {
                    "$ref": "PhotosMediaClientFaceRegionInfo",
                    "description": "Info specific to FACE-type RegionInfos. Won't be set if the region is not\nof type FACE."
                },
                "normalizedBoundingBox": {
                    "$ref": "PhotosMediaClientNormalizedRect",
                    "description": "Normalized bounding box."
                },
                "regionExtensions": {
                    "$ref": "PhotosMediaClientRegionExtensions",
                    "description": "Rarely used fields."
                },
                "regionId": {
                    "$ref": "PhotosMediaClientRegionId",
                    "description": "Required identifier of this region."
                },
                "regionInfoType": {
                    "enum": [
                        "UNKNOWN_REGION_INFO_TYPE",
                        "FACE",
                        "PET"
                    ],
                    "enumDescriptions": [
                        "",
                        "Human face regions from face detection.",
                        "Pet regions computed by ICA localizer."
                    ],
                    "type": "string"
                },
                "thumbnailInfo": {
                    "$ref": "PhotosMediaClientImageProperties",
                    "description": "Thumbnail image for this region."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRegionInfoMask": {
            "description": "Region information about a MediaItem.",
            "id": "PhotosMediaClientRegionInfoMask",
            "properties": {
                "faceRegionInfo": {
                    "$ref": "PhotosMediaClientFaceRegionInfoMask"
                },
                "normalizedBoundingBox": {
                    "$ref": "PhotosMediaClientNormalizedRectMask"
                },
                "regionExtensions": {
                    "$ref": "PhotosMediaClientRegionExtensionsMask"
                },
                "thumbnailInfo": {
                    "$ref": "PhotosMediaClientImagePropertiesMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRelevantClusters": {
            "description": "Relevant cluster relationships established by the user.",
            "id": "PhotosMediaClientRelevantClusters",
            "properties": {
                "meClusterId": {
                    "$ref": "PhotosMediaClientClusterId",
                    "description": "This is the ID of the cluster selected by the user as the \"me\" cluster.\nMore info: go/photos-me"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRelevantClustersMask": {
            "id": "PhotosMediaClientRelevantClustersMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRenderParamsMask": {
            "id": "PhotosMediaClientRenderParamsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRenderedCard": {
            "id": "PhotosMediaClientRenderedCard",
            "properties": {
                "card": {
                    "$ref": "SocialFrontendStreamVisualCard",
                    "description": "The rendered GSTS card for the corresponding collection or item.\nThis will only be populated if the collection or item has an activity\nattached to it."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRenderedCardMask": {
            "id": "PhotosMediaClientRenderedCardMask",
            "properties": {
                "card": {
                    "$ref": "PhotosMediaClientRenderedCardMaskCardMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientRenderedCardMaskCardMask": {
            "id": "PhotosMediaClientRenderedCardMaskCardMask",
            "properties": {
                "cardOptions": {
                    "$ref": "PhotosMediaClientCardOptions",
                    "description": "Options to be used when rendering the GSTS card.\nIf not set server-defined defaults will be used.\nTODO(tkeane) require this once clients send it"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSearchedPlace": {
            "id": "PhotosMediaClientSearchedPlace",
            "properties": {
                "placeId": {
                    "description": "Encoded information about a searched place go/place-id-encoding.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSegmentsMask": {
            "id": "PhotosMediaClientSegmentsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientServiceLimits": {
            "description": "Settings related to Photos Service limits.",
            "id": "PhotosMediaClientServiceLimits",
            "properties": {
                "photosPerAlbumLimit": {
                    "description": "Max number of photos allowed in an album for this user.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientShareContent": {
            "description": "Content of a share.",
            "id": "PhotosMediaClientShareContent",
            "properties": {
                "creationTimeMs": {
                    "description": "Time at which the share was created.",
                    "format": "int64",
                    "type": "string"
                },
                "segments": {
                    "$ref": "SocialCommonSegments",
                    "description": "Textual content for the share."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientShareContentMask": {
            "id": "PhotosMediaClientShareContentMask",
            "properties": {
                "segments": {
                    "$ref": "PhotosMediaClientSegmentsMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientShareData": {
            "description": "Information about a share. The share is a delivery message to one or more\nrecipients, and may be implemented by e.g. a root Stanza.",
            "id": "PhotosMediaClientShareData",
            "properties": {
                "content": {
                    "$ref": "PhotosMediaClientShareContent",
                    "description": "Content of the share."
                },
                "id": {
                    "$ref": "PhotosMediaClientShareId",
                    "description": "Id of the share."
                },
                "showMessage": {
                    "description": "Whether clients should show the share/invitation message. It's set to true\nonly if the user hasn't yet viewed the collection.\nIf this is true and content.segments is populated clients should show the\n\"With sender message\" mock in go/direct-share-prd or\nhttps://screenshot.googleplex.com/4EfP7pemQwJ\nIf this is true and content.segments is not populated clients should show\nthe \"No sender message\" mock.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientShareDataMask": {
            "id": "PhotosMediaClientShareDataMask",
            "properties": {
                "content": {
                    "$ref": "PhotosMediaClientShareContentMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientShareId": {
            "description": "An encrypted websafe blob that is a globally unique identifier for a share.\nThis ID can be used for subsequent updates of a share.",
            "id": "PhotosMediaClientShareId",
            "properties": {
                "shareId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSharingTarget": {
            "description": "Sharing target that can be displayed to users.",
            "id": "PhotosMediaClientSharingTarget",
            "properties": {
                "actorRef": {
                    "$ref": "PhotosMediaClientActorRef"
                },
                "confidenceScore": {
                    "description": "Confidence of sharing prediction between 0 and 1.",
                    "format": "float",
                    "type": "number"
                },
                "sharingTargetId": {
                    "$ref": "PhotosMediaClientSharingTargetId"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSharingTargetId": {
            "description": "Identifies a sharing target. More target types could be added later.\nIt has to be something that can be presented to and understood by a user;\nfor instance, for sharing suggestions, we only suggest whom an album should\nbe shared with, actual sharing still has to be initiated by the user.",
            "id": "PhotosMediaClientSharingTargetId",
            "properties": {
                "circleId": {
                    "description": "Use circle_id_string instead.",
                    "format": "int64",
                    "type": "string"
                },
                "circleIdString": {
                    "description": "When type == CIRCLE, circle id can either be a pre-defined circle\n(like ALL_CIRCLE_MEMBERS_FOR_SHARING) or a user-defined circle.\nStored as a hex string.",
                    "type": "string"
                },
                "correctionStatus": {
                    "description": "If and how the entry had to be corrected before sending.",
                    "enum": [
                        "CORRECTION_STATUS_UNKNOWN",
                        "NO_CORRECTION_NEEDED",
                        "AUTOMATICALLY_CORRECTED",
                        "MANUALLY_CORRECTED",
                        "USE_ANYWAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "email": {
                    "description": "When type == EMAIL, email to which the photos were shared.",
                    "type": "string"
                },
                "obfuscatedCircleUserId": {
                    "description": "Circle owning user's gaia id. This field is phased out. It can never point\nto anything other than id of the user for whom sharing suggestion is made.",
                    "type": "string"
                },
                "obfuscatedSquareId": {
                    "description": "When type == SQUARE, square's gaia id.",
                    "type": "string"
                },
                "obfuscatedUserId": {
                    "description": "When type == USER, user's gaia id.",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "When type == PHONE_NUMBER, phone number to which the photos were shared.\nIf region_code is not set, this string must be in E.164 format, and if\nregion_code is set, this string will be parsed in E.164 by a server that\nhandles it; see go/phonenumbers for more information about E.164.",
                    "type": "string"
                },
                "phoneNumberRegionCode": {
                    "description": "The region code to use when attempting to E.164 format phone numbers.  This\nshould be obtained from the sender's device and only takes effect when\ntype == PHONE_NUMBER (you can set phone_number in E.164 without\nregion_code).",
                    "type": "string"
                },
                "squareId": {
                    "description": "Use obfuscated_square_id instead.",
                    "format": "int64",
                    "type": "string"
                },
                "type": {
                    "description": "Must be set, determines which fields are used.",
                    "enum": [
                        "SHARING_TARGET_TYPE_UNKNOWN",
                        "PUBLIC",
                        "USER",
                        "CIRCLE",
                        "SQUARE",
                        "THIRD_PARTY",
                        "EMAIL",
                        "PHONE_NUMBER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Share with all users (authenticated or not). May not mean \"everyone\"\n(e.g. for silo'd user sharing). Corresponds to a user making an album\n\"public\".",
                        "Share with a specific user.",
                        "Share with a specific circle.",
                        "Share with a specific square.",
                        "Share through some third-party app/network.",
                        "Share by email.",
                        "Share by phone number."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSharingTargetIdMask": {
            "id": "PhotosMediaClientSharingTargetIdMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSharingTargetMask": {
            "id": "PhotosMediaClientSharingTargetMask",
            "properties": {
                "actorRef": {
                    "$ref": "PhotosMediaClientActorRefMask"
                },
                "sharingTargetId": {
                    "$ref": "PhotosMediaClientSharingTargetIdMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignedUrl": {
            "description": "A url generated with one or more signed options.\nSigned options are generally restricted to use by the owner, because they\nhave the potential to include sensitive information in the image (e.g.\ngeo-location data, or the full un-cropped image).\nSee go/fife-urls for more details about urls and options",
            "id": "PhotosMediaClientSignedUrl",
            "properties": {
                "option": {
                    "description": "The options that were applied to this url",
                    "items": {
                        "$ref": "PhotosMediaClientSignedUrlOption"
                    },
                    "type": "array"
                },
                "url": {
                    "description": "The signed url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignedUrlMask": {
            "id": "PhotosMediaClientSignedUrlMask",
            "properties": {
                "option": {
                    "$ref": "PhotosMediaClientSignedUrlOptionMask",
                    "description": "TODO(tkeane) allow callers to specify the SignedUrlOptions they care\nabout?"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignedUrlOption": {
            "description": "Url Options that require a signature and can therefore only be generated\nby the server.",
            "id": "PhotosMediaClientSignedUrlOption",
            "properties": {
                "option": {
                    "enum": [
                        "UNKNOWN",
                        "UNFILTERED_WITH_EXIF_ROTATION",
                        "UNFILTERED_WITH_TRANSFORMS",
                        "INCLUDE_METADATA",
                        "DEFAULT_AUTO_ENHANCE_FILTER"
                    ],
                    "enumDescriptions": [
                        "",
                        "unfiltered/unrotated/uncropped, except EXIF rotate (\"U\")",
                        "unfiltered with transforms (rotation and crop) (\"Ut\")",
                        "include metadata (\"I\")",
                        "Default auto-enhance filter (\"f<1s and 0s>\")\nThis is technically not a signed option, but the list of default auto\nenhance filters is controlled by the server, so clients can't generate it"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignedUrlOptionMask": {
            "id": "PhotosMediaClientSignedUrlOptionMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignificantDateRange": {
            "id": "PhotosMediaClientSignificantDateRange",
            "properties": {
                "end": {
                    "$ref": "GoogleTypeDate",
                    "description": "End of range. If start == end, this represents a single day."
                },
                "start": {
                    "$ref": "GoogleTypeDate",
                    "description": "Start of range."
                },
                "type": {
                    "enum": [
                        "UNKNOWN_TYPE",
                        "HIDDEN"
                    ],
                    "enumDescriptions": [
                        "",
                        "Dates that probably correspond to negative memories. We shouldn't use\nphotos from these days for reminiscing features."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignificantDateRangeMask": {
            "id": "PhotosMediaClientSignificantDateRangeMask",
            "properties": {
                "end": {
                    "$ref": "PhotosMediaClientSignificantDateRangeMaskDateMask"
                },
                "start": {
                    "$ref": "PhotosMediaClientSignificantDateRangeMaskDateMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignificantDateRangeMaskDateMask": {
            "id": "PhotosMediaClientSignificantDateRangeMaskDateMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientSignificantDates": {
            "description": "Information about a user's significant dates such as birthdays, weddings,\nanniversaries, etc.",
            "id": "PhotosMediaClientSignificantDates",
            "properties": {
                "significantDate": {
                    "items": {
                        "$ref": "PhotosMediaClientSignificantDateRange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSignificantDatesMask": {
            "id": "PhotosMediaClientSignificantDatesMask",
            "properties": {
                "significantDate": {
                    "$ref": "PhotosMediaClientSignificantDateRangeMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSiloInfo": {
            "description": "Silo information for a given MediaItem",
            "id": "PhotosMediaClientSiloInfo",
            "properties": {
                "siloId": {
                    "enum": [
                        "UNKNOWN_SILO_IDENTIFIER",
                        "SILOLESS",
                        "GOOGLE_PHOTOS",
                        "GOOGLE_PHOTOS_PRINT_ORDERS",
                        "BLOGGER",
                        "HANGOUTS",
                        "DRIVE_SYNC",
                        "GEO",
                        "OFFLINE_SALES_RECEIPTS",
                        "OFFLINE_SALES_RECEIPTS_DEV",
                        "TEAMS",
                        "YOUTUBE_MUSIC_ARTISTS",
                        "BLOGGER_SOCIAL",
                        "KHAZANA",
                        "PROFILE_PHOTOS",
                        "G_PLUS",
                        "GUS",
                        "PANORAMIO",
                        "KINDYGRAM",
                        "LOUPE",
                        "YOUTUBE_BANNER",
                        "YOUTUBE_SPONSORSHIP_BADGE",
                        "FOCUS_CONTACT_PHOTOS",
                        "CONTACT_PHOTOS",
                        "UNICORN_FAMILY_LINK",
                        "GMAIL_THEMES",
                        "ABOUT_ME",
                        "DRIVE_FORMS",
                        "GOOGLE_VOICE",
                        "CALENDAR_THEMES",
                        "HOMEROOM_THEMES",
                        "ACTIONS_ON_GOOGLE_CONSOLE",
                        "CROWDSOURCE",
                        "DEVELOPER_CONSOLE",
                        "SBE_PLAYGROUND",
                        "ANDROID_PLAY_SERVICES",
                        "PRODUCT_FORUMS",
                        "GROUPS_FORUM",
                        "TOUR_BUILDER",
                        "MEMEGEN",
                        "PLASO",
                        "GMAIL_SYNC",
                        "AOG_CONTENT",
                        "WALLET",
                        "HELPOUTS",
                        "CLOUDCAST",
                        "YOUTUBE_MUSIC_PRIVATELY_OWNED_ALBUM_ART",
                        "NBU_MAOTAI_COLLECTION",
                        "ONE_GOOGLE",
                        "ACCOUNT_SETTINGS",
                        "GPAY_GROUP_PAYMENTS",
                        "UNDETERMINED",
                        "GOOGLE_GIVE",
                        "CARDMAKER",
                        "DEPRECATED_MAYFLOWER",
                        "TAHITI",
                        "JANATA",
                        "SOCIETY",
                        "PLAY_GAMES_SERVICES",
                        "UPLOADER_DRIVE_ONLY",
                        "GPAY_CAMPUS_ID",
                        "NUTRITION",
                        "INTERNATIONALIZATION_WORKFLOW"
                    ],
                    "enumDescriptions": [
                        "This is the default value and it is considered invalid. When new values\nare added to a proto2 enum, old clients will see the field as unset and\nthe getter will return this value, if a default value isn\u2019t specified.\n(see go/protodosdonts).",
                        "The SILOLESS value implies that the entity does not belong to any Silo.\nEventually, this will also be invalid as every entity should belong to a\nsilo.",
                        "Photos backend content owned by Google Photos.\n\nThis strictly applies to content related to the Google Photos product\n(e.g. uploaded via the Google Photos app).",
                        "Silo for with print orders (go/printing-spec)",
                        "Photos backend content owned by Blogger.",
                        "Photos backend content owned by Google Hangouts.",
                        "Regular Google Drive photos created through pubsub/sync to photos\nbackend. Maintained by the Photos backend team.",
                        "Photos backend content owned by the Geo team.",
                        "Photos backend content owned by the Google Shopping Offline Sales\nreceipts project. See go/receipt_upload_storage_consumption_design_doc\nfor more info.",
                        "Photos backend content used by the Google Shopping Offline Sales\nreceipts project for development.\nSee go/receipt_upload_storage_consumption_design_doc for more info.",
                        "Photos backend content owned by MOMA Teams.",
                        "Artist-uploaded photos managed by the YouTube Music Corpus team.",
                        "Profile pictures for Blogger social features.\nSee integration bug b/64095311 and design doc go/gfc-photos-migration.",
                        "Photos backend content owned by Khazana (go/khazana; b/66411157).",
                        "Silo for profile photos and scrapbook albums.\nThey are owned by photos backend but are not shown in Google Photos\nall-photos view and could be accessed by various products.",
                        "Silo for GPlus media",
                        "Photos backend content owned by GSA Universal Server (GUS) (go/gus,\nb/68721537).",
                        "Silo for panoramio photos migration (go/panoramio-photos-migration).",
                        "Silo for Kindygram (go/kindygram).",
                        "Stanza requests coming for the LOUPE corpus.",
                        "Youtube channel banner images are uploaded to this silo.",
                        "Youtube sponsorship badges (see b/23186017 for screenshots).\nYoutube is migrating to the Shoebox (http://shortn/_2mwNY1FM8S for\ndiscussion) but we are still getting photos created through onepick\n(http://shortn/_8uVeMrBydA and http://shortn/_eICBlS9Eu9).",
                        "Contact photos created by focus backend.",
                        "Photos uploaded using contacts.google.com.\nUse case: change profile picture by uploading a new photo.\nThis result into temporary photo being created.",
                        "Family link app: go/fl from unicorn team.",
                        "Silo for gmail themes: used when user selects a new theme with onepick.",
                        "Temporary photos/albums created by aboutme.google.com through onepick.",
                        "Albums/photos for freebird (go/forms).\nUse case: specifying background image for a form (using palette).",
                        "Albums/photos for google voice (go/gvoice).\nUse case: add a photo to a text message through onepick upload.",
                        "Silo for calendar themes.\nUse case: OnePick upload in a legacy calendar (http://shortn/_3G7OEIvqGJ)",
                        "Silo for homeroom themes (go/homeroom-eng).\nUse case:  classroom.google.com uses onepick to select background\nfor a course.",
                        "Silo for console.actions.google.com (go/ast-aog).\nUse case: specifying application banner and logo:\nhttps://screenshot.googleplex.com/3sPcaeCH79N",
                        "Albums/photos for crowdsource (go/village).\nUse case: storing images shared by users of the Crowdsource app",
                        "Silo for console.developers.google.com.\nExample: go to console.developers.google.com.\nCreate an app. Enable drive API. In the dashboard: configure drive API\nIn Drive UI integration: Pick application icon.",
                        "SiloID used by Stanza (go/stanza) test corpora (STANZA_TEST,\nSBE_PLAYGROUND).",
                        "Android creates temporary photos when uploading profile photos.",
                        "Deprecated. Never launched. DO NOT USE.",
                        "Uploads from https://groups.google.com\nand https://productforums.google.com.",
                        "See https://sites.google.com/a/google.com/tour-builder/",
                        "Silo for Memegen.",
                        "Silo for Plaso. This is deprecated.",
                        "Silo for GMAIL sync. This is deprecated.",
                        "Silo for AoG content. go/aog-howto",
                        "Silo for instore google wallet.",
                        "Silo for deprecated helpouts. They do takeout etc. So we need to silo.",
                        "Silo for Yeti. go/yeti-captures-design-doc",
                        "Silo for Youtube Music privately owned album art.\ngo/ytm-uploaded-album-art",
                        "Silo for NBU Maotai Collection. (b/111277761)",
                        "Silo for OneGoogle (go/onegooglebar)",
                        "Profile photo upload from accounts.google.com.",
                        "Silo for Google Pay Group Payments (go/p2p-group-funding-prd,\nb/112584722).",
                        "Silo for photos, albums, and events for which we could not backfill\nSiloIds due to mismatches. b/113280596 will track moving content out of\nthis Silo and into one of the others. For now, having this Silo will\nenable us to move forward with asserting SiloConfig checks.",
                        "Silo for Google Give (g-give.googleplex.com).",
                        "Silo for Google Now Cardmaker (https://cardmaker.googleplex.com).",
                        "Silo for Google Travel (hotel search, go/mayflower-g3).",
                        "Silo for Tahiti (b/123097201).",
                        "Silo for Janata go/janata-one-pager (b/128347668).",
                        "Silo for Neighbourly (Society; b/128347774)",
                        "Silo for Play Games Services (b/129288890)",
                        "Silo for Uploader (Backup & Sync) items uploaded with \"Show in Photos\"\noff.",
                        "Silo for Google Pay - Campus ID (b/128349722)",
                        "Silo for Google Health Nutrition go/nutrition (b/140134950)",
                        "Silo for Orbis Screenshots (b/138811942)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSiloInfoMask": {
            "description": "Silo information for a given MediaItem",
            "id": "PhotosMediaClientSiloInfoMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientSmartAlbumSettings": {
            "description": "Settings related to smart albums.",
            "id": "PhotosMediaClientSmartAlbumSettings",
            "properties": {
                "smartAlbumsEnabled": {
                    "description": "If true, this user is receiving smart albums instead of stories.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSmartAlbumSettingsMask": {
            "id": "PhotosMediaClientSmartAlbumSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientStorageGuardrails": {
            "description": "Info about storage guardrails (go/photos-be-oq-guardrails) that the client\nmay need to enforce.\nLINT.IfChange",
            "id": "PhotosMediaClientStorageGuardrails",
            "properties": {
                "oqGuardrailsLevel": {
                    "description": "Indicates the level of action that clients backing up in OQ should take.\nThis is only one part of the formula for determining the level of action\nthat a client will take in enforcing OQ guardrails; There are other factors\nthat are client specific, including whether or not the device is on a free\nstorage plan.\nThis is a repeated field to allow for forward compatibility when new values\nare added; Clients should iterate through the list and use the first value\nthat they recognize.",
                    "enumDescriptions": [
                        "Needed for forward compatibility.",
                        "No action necessary.",
                        "Warn user that he/she is close to quota.",
                        "Alert user that he/she is over quota and stop backup until the user\ngoes under quota (e.g. purchases storage) or switches to HQ for backup."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_OQ_GUARDRAILS_LEVEL",
                            "NONE",
                            "CLOSE_TO_QUOTA",
                            "OVER_QUOTA"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientStorageGuardrailsMask": {
            "id": "PhotosMediaClientStorageGuardrailsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientStoragePolicyConversionStatus": {
            "description": "Information about the status of storage policy conversion.\nSee go/storage-policy-downsizing for more details.",
            "id": "PhotosMediaClientStoragePolicyConversionStatus",
            "properties": {
                "conversionInProgress": {
                    "description": "Whether storage policy conversion is in progress.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientStorageQuota": {
            "description": "Storage quota for the user only if the user is also the viewer.\nSee go/unifiedstorage for more details.",
            "id": "PhotosMediaClientStorageQuota",
            "properties": {
                "currentPhotosUsageBytes": {
                    "description": "Quota currently used by the actor that Photos has charged, in bytes. Does\nnot include Drive and Gmail quota.",
                    "format": "int64",
                    "type": "string"
                },
                "currentUsageBytes": {
                    "description": "Quota currently used by the actor in bytes. This is the total quota used\nby the user in unified storage, including Photos, Drive, and Gmail.",
                    "format": "int64",
                    "type": "string"
                },
                "guardrails": {
                    "$ref": "PhotosMediaClientStorageGuardrails",
                    "description": "Storage guardrails that the client may need to enforce."
                },
                "isUnlimited": {
                    "description": "True if the actor has unlimited quota. If true, current_usage_bytes still\nreturns the current quota usage.",
                    "type": "boolean"
                },
                "limitBytes": {
                    "description": "Quota limit for the actor in bytes. Not set if is_unlimited is true.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientStorageQuotaMask": {
            "id": "PhotosMediaClientStorageQuotaMask",
            "properties": {
                "guardrails": {
                    "$ref": "PhotosMediaClientStorageGuardrailsMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientStoriesPromotionSettings": {
            "description": "Settings for stories promotions: whether or not to show the stories promos\nto the user. For any of the flags below, if the flag has never been set,\nit will default to true, i.e. the user has NOT seen the promo. It is\nexpected that clients will set this field to false once the user has\nperformed any action to the promo. This is a per account (not per device)\nsetting.",
            "id": "PhotosMediaClientStoriesPromotionSettings",
            "properties": {
                "showPromotionInPhotos": {
                    "description": "Whether to show the stories promo in the highlights or all photos view.",
                    "type": "boolean"
                },
                "showPromotionInStories": {
                    "description": "Whether to show the stories promo in the all stories view.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientStoriesPromotionSettingsMask": {
            "id": "PhotosMediaClientStoriesPromotionSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSubjectId": {
            "description": "Identifies a cluster/annotation subject",
            "id": "PhotosMediaClientSubjectId",
            "properties": {
                "legacySubjectId": {
                    "$ref": "PhotosMediaClientSubjectIdLegacySubjectId"
                },
                "mediaKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSubjectIdLegacySubjectId": {
            "description": "Represents a subject in photoservice format.",
            "id": "PhotosMediaClientSubjectIdLegacySubjectId",
            "properties": {
                "obfuscatedUserId": {
                    "type": "string"
                },
                "subjectId": {
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestedAnnotationSubject": {
            "id": "PhotosMediaClientSuggestedAnnotationSubject",
            "properties": {
                "subject": {
                    "$ref": "PhotosMediaClientActorRef"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestedEdit": {
            "description": "Suggested edits to be performed on the photo determined by prediction models.",
            "id": "PhotosMediaClientSuggestedEdit",
            "properties": {
                "suggestedRotation": {
                    "$ref": "PhotosMediaClientSuggestedRotation"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestedEditMask": {
            "id": "PhotosMediaClientSuggestedEditMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "suggestedRotation": {
                    "$ref": "PhotosMediaClientSuggestedRotationMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestedRotation": {
            "description": "The amount of rotation and a confidence value is provided.\nRefer to http://go/photos-suggestedrotations for more information.",
            "id": "PhotosMediaClientSuggestedRotation",
            "properties": {
                "confidence": {
                    "description": "Confidence value for suggested rotation",
                    "format": "float",
                    "type": "number"
                },
                "rotation": {
                    "enum": [
                        "ROTATION_UNSPECIFIED",
                        "ROTATION_0",
                        "ROTATION_90",
                        "ROTATION_180",
                        "ROTATION_270"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestedRotationMask": {
            "id": "PhotosMediaClientSuggestedRotationMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestedShareNotificationSettings": {
            "description": "Settings related to notifications for sharing suggestions.",
            "id": "PhotosMediaClientSuggestedShareNotificationSettings",
            "properties": {
                "showSuggestedShareNotifications": {
                    "description": "Whether to show notifications for sharing suggestions. Note that\nsuggestions are still generated independent of this setting.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestedShareNotificationSettingsMask": {
            "id": "PhotosMediaClientSuggestedShareNotificationSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestionInfo": {
            "description": "Suggestion information about a MediaItem.",
            "id": "PhotosMediaClientSuggestionInfo",
            "properties": {
                "suggestionRef": {
                    "$ref": "PhotosMediaClientSuggestionRef",
                    "description": "The reference of the suggestion."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestionInfoMask": {
            "id": "PhotosMediaClientSuggestionInfoMask",
            "properties": {
                "suggestionRef": {
                    "$ref": "PhotosMediaClientSuggestionRefMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestionRef": {
            "description": "A reference to a suggestion. This is used by Tombstones to identify deleted\nsuggestions.",
            "id": "PhotosMediaClientSuggestionRef",
            "properties": {
                "suggestionMediaKey": {
                    "description": "Media key of the referenced suggestion.",
                    "type": "string"
                },
                "suggestionType": {
                    "description": "LINT.ThenChange(\n    //depot/google3/photos/media/client/proto/user_suggestion.proto)",
                    "enum": [
                        "UNKNOWN_SUGGESTION_TYPE",
                        "MERGE_CLUSTERS_SUGGESTION",
                        "PRINTING_BOOKS_SUGGESTION",
                        "PERSON_CONFIRMATION_SUGGESTION",
                        "THING_CONFIRMATION_SUGGESTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientSuggestionRefMask": {
            "id": "PhotosMediaClientSuggestionRefMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientThingCluster": {
            "description": "Data about the cluster that is specific to clusters with ClusterTyoe\nTHING_CLUSTER",
            "id": "PhotosMediaClientThingCluster",
            "properties": {
                "entityId": {
                    "description": "Original ID of the cluster. This is the MID of the cluster.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientThingClusterMask": {
            "id": "PhotosMediaClientThingClusterMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientTimeInfo": {
            "description": "Information about an instant in time.",
            "id": "PhotosMediaClientTimeInfo",
            "properties": {
                "timestampMs": {
                    "description": "Milliseconds since the epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "timezoneOffsetMs": {
                    "description": "Milliseconds east of UTC at timestamp_ms.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientTimeInfoMask": {
            "id": "PhotosMediaClientTimeInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientTrashInfo": {
            "description": "Information about the soft-deleted status of an item. Will be used to hold\nmore trash information as needed.",
            "id": "PhotosMediaClientTrashInfo",
            "properties": {
                "eligibleForLocalDelete": {
                    "description": "For TRASH items, specifies whether all local copies of this photo\nare also eligible for deletion. Defaults to not eligible.",
                    "type": "boolean"
                },
                "trashTimestampMs": {
                    "description": "For TRASH items, millisecond timestamp at which this item was trashed.",
                    "format": "int64",
                    "type": "string"
                },
                "trashType": {
                    "description": "The trashed status of the containing item.",
                    "enum": [
                        "UNKNOWN_TRASH_TYPE",
                        "NOT_TRASH",
                        "TRASH"
                    ],
                    "enumDescriptions": [
                        "",
                        "The item is not considered trash.",
                        "The item is considered trash."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientTrashInfoMask": {
            "id": "PhotosMediaClientTrashInfoMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUnicornSettings": {
            "description": "Settings related to unicorn accounts (go/sharing-child-prefs).",
            "id": "PhotosMediaClientUnicornSettings",
            "properties": {
                "shareEnabled": {
                    "description": "Indicates if unicorn can share photos/add photos to shared albums.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUnicornSettingsMask": {
            "id": "PhotosMediaClientUnicornSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUploadSettings": {
            "description": "Photos Service Upload Settings for an actor (user).",
            "id": "PhotosMediaClientUploadSettings",
            "properties": {
                "freePhotoDimensionPixels": {
                    "description": "Max longest-edge length for free photo quota, in pixels.",
                    "format": "int32",
                    "type": "integer"
                },
                "manualUploadStoragePolicy": {
                    "description": "The user's policy setting for manual uploads. Clients should expose this\nas a list selection between the \"standard\" and \"full\" policies. See\ngo/photos-storage-policy-design for details.",
                    "enum": [
                        "UNKNOWN_STORAGE_POLICY",
                        "NOT_SELECTED",
                        "STANDARD",
                        "FULL"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user has not yet selected a storage policy.",
                        "A high-quality version of uploads will be stored and the bytes will not\ncount towards the user's quota.",
                        "The original upload bytes will be stored and the bytes will count\ntowards the user's quota."
                    ],
                    "type": "string"
                },
                "maxUploadsPerMinute": {
                    "description": "Upload speed, as uploads per minute.",
                    "format": "int32",
                    "type": "integer"
                },
                "originalResolutionUploadsEnabled": {
                    "description": "Whether a user is allowed to upload photos while keeping their original\n(source) resolution intact.",
                    "type": "boolean"
                },
                "originalResolutionUploadsQuotaWarningBytes": {
                    "description": "Users with full resolution photo uploads enabled receive a \"close to quota\"\nwarning when the total amount of space they have left falls below this\nlevel.",
                    "format": "int64",
                    "type": "string"
                },
                "uploadBackoffSeconds": {
                    "description": "Upload speed backoff, in sec.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUploadSettingsMask": {
            "id": "PhotosMediaClientUploadSettingsMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUserProfile": {
            "description": "User profile information provided by PeopleApi v2.",
            "id": "PhotosMediaClientUserProfile",
            "properties": {
                "displayName": {
                    "description": "The actor's name, suitable for display to users (e.g. G+ profile name).",
                    "type": "string"
                },
                "displayNameStatus": {
                    "description": "Display name status indicates validity of display name.",
                    "enum": [
                        "UNKNOWN_DISPLAY_NAME_STATUS",
                        "VALID",
                        "INVALID"
                    ],
                    "enumDescriptions": [
                        "Should be treated as \"invalid\" for forwards compatibility.",
                        "Display name is valid.",
                        "Generic invalid state.\nSpecific invalid states could be added in the future."
                    ],
                    "type": "string"
                },
                "gender": {
                    "description": "The actor's gender.",
                    "type": "string"
                },
                "givenName": {
                    "description": "The actor's given name (\"first name\").  This is only suitable for display\nto users when the full context provided by display_name is not necessary.\nNote that this field is not guaranteed to be available, in which case\nclients should fall back to display_name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUserProfileMask": {
            "id": "PhotosMediaClientUserProfileMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUserSettings": {
            "description": "Settings for an actor (user).",
            "id": "PhotosMediaClientUserSettings",
            "properties": {
                "assistant": {
                    "$ref": "PhotosMediaClientAssistantSettings"
                },
                "autoAwesome": {
                    "$ref": "PhotosMediaClientAutoAwesomeSettings"
                },
                "autoBackupReminder": {
                    "$ref": "PhotosMediaClientAutoBackupReminderSettings"
                },
                "autoEnhance": {
                    "$ref": "PhotosMediaClientAutoEnhanceSettings"
                },
                "collectionsSortCriteria": {
                    "$ref": "PhotosMediaClientCollectionsSortCriteria"
                },
                "downloads": {
                    "$ref": "PhotosMediaClientDownloadSettings"
                },
                "driveIntegration": {
                    "$ref": "PhotosMediaClientDriveIntegrationSettings"
                },
                "faceClustering": {
                    "$ref": "PhotosMediaClientFaceClusteringSettings"
                },
                "faceSharingSettings": {
                    "$ref": "PhotosMediaClientFaceSharingSettings"
                },
                "facialRecognition": {
                    "$ref": "PhotosMediaClientFacialRecognitionSettings"
                },
                "failedVideos": {
                    "$ref": "PhotosMediaClientFailedVideosSettings"
                },
                "featuredPhotos": {
                    "$ref": "PhotosMediaClientFeaturedPhotosSettings"
                },
                "gallerySettings": {
                    "$ref": "PhotosMediaClientGallerySettings"
                },
                "geoSettings": {
                    "$ref": "PhotosMediaClientGeoSettings"
                },
                "geotaggerPersonalSearchBackfillSettings": {
                    "$ref": "PhotosMediaClientGeotaggerPersonalSearchBackfillSettings"
                },
                "memoriesSettings": {
                    "$ref": "PhotosMediaClientMemoriesSettings"
                },
                "navigationSettings": {
                    "$ref": "PhotosMediaClientNavigationSettings"
                },
                "notifications": {
                    "$ref": "PhotosMediaClientNotificationSettings"
                },
                "partnerSharingSettings": {
                    "$ref": "PhotosMediaClientPartnerSharingSettings"
                },
                "phodeoSharingSettings": {
                    "$ref": "PhotosMediaClientPhodeoSharingSettings"
                },
                "printingCommunicationSettings": {
                    "$ref": "PhotosMediaClientPrintingCommunicationSettings"
                },
                "serviceLimits": {
                    "$ref": "PhotosMediaClientServiceLimits"
                },
                "smartAlbum": {
                    "$ref": "PhotosMediaClientSmartAlbumSettings"
                },
                "storiesPromotion": {
                    "$ref": "PhotosMediaClientStoriesPromotionSettings"
                },
                "suggestedShareNotificationSettings": {
                    "$ref": "PhotosMediaClientSuggestedShareNotificationSettings"
                },
                "unicornSettings": {
                    "$ref": "PhotosMediaClientUnicornSettings",
                    "description": "If present then user is a unicorn account (go/unicorn-account-flags)."
                },
                "uploads": {
                    "$ref": "PhotosMediaClientUploadSettings"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientUserSettingsMask": {
            "id": "PhotosMediaClientUserSettingsMask",
            "properties": {
                "assistantSettings": {
                    "$ref": "PhotosMediaClientAssistantSettingsMask"
                },
                "autoBackupReminder": {
                    "$ref": "PhotosMediaClientAutoBackupReminderSettingsMask"
                },
                "autoEnhance": {
                    "$ref": "PhotosMediaClientAutoEnhanceSettingsMask"
                },
                "autoawesome": {
                    "$ref": "PhotosMediaClientAutoAwesomeSettingsMask"
                },
                "collectionsSortCriteria": {
                    "$ref": "PhotosMediaClientCollectionsSortCriteriaMask"
                },
                "downloads": {
                    "$ref": "PhotosMediaClientDownloadSettingsMask"
                },
                "driveIntegration": {
                    "$ref": "PhotosMediaClientDriveIntegrationSettingsMask"
                },
                "faceClustering": {
                    "$ref": "PhotosMediaClientFaceClusteringSettingsMask"
                },
                "faceSharingSettings": {
                    "$ref": "PhotosMediaClientFaceSharingSettingsMask"
                },
                "facialRecognition": {
                    "$ref": "PhotosMediaClientFacialRecognitionSettingsMask",
                    "description": "Deprecated. See go/sunset-face-tagging"
                },
                "failedVideos": {
                    "$ref": "PhotosMediaClientFailedVideosSettingsMask"
                },
                "featuredPhotos": {
                    "$ref": "PhotosMediaClientFeaturedPhotosSettingsMask"
                },
                "gallerySettings": {
                    "$ref": "PhotosMediaClientGallerySettingsMask"
                },
                "geo": {
                    "$ref": "PhotosMediaClientGeoSettingsMask"
                },
                "geotaggerPersonalSearchBackfillSettings": {
                    "$ref": "PhotosMediaClientGeotaggerPersonalSearchBackfillSettingsMask"
                },
                "memoriesSettings": {
                    "$ref": "PhotosMediaClientMemoriesSettingsMask"
                },
                "navigationSettings": {
                    "$ref": "PhotosMediaClientNavigationSettingsMask"
                },
                "notifications": {
                    "$ref": "PhotosMediaClientNotificationSettingsMask"
                },
                "partnerSharingSettings": {
                    "$ref": "PhotosMediaClientPartnerSharingSettingsMask"
                },
                "phodeoSharingSettings": {
                    "$ref": "PhotosMediaClientPhodeoSharingSettingsMask"
                },
                "printingCommunicationSettings": {
                    "$ref": "PhotosMediaClientPrintingCommunicationSettingsMask"
                },
                "smartAlbumSettings": {
                    "$ref": "PhotosMediaClientSmartAlbumSettingsMask"
                },
                "storiesPromotion": {
                    "$ref": "PhotosMediaClientStoriesPromotionSettingsMask"
                },
                "suggestedShareNotificationSettings": {
                    "$ref": "PhotosMediaClientSuggestedShareNotificationSettingsMask"
                },
                "unicornSettings": {
                    "$ref": "PhotosMediaClientUnicornSettingsMask"
                },
                "uploads": {
                    "$ref": "PhotosMediaClientUploadSettingsMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideo": {
            "description": "Data specific to video files, to be used in query responses.",
            "id": "PhotosMediaClientVideo",
            "properties": {
                "downloadUrl": {
                    "description": "URL for downloading the original video.",
                    "type": "string"
                },
                "editList": {
                    "$ref": "PhotosEditingFiltersEditList",
                    "description": "The EditList for the video. This will contain all the processed and pending\nedits of the video. Currently the edit list only contains rotation and slow\nmotion segment edits.\nThe EditList is only returned when the viewer is the owner of the item."
                },
                "exifData": {
                    "$ref": "PhotosMediaClientVideoExifData",
                    "description": "Metadata about the video."
                },
                "processingStatus": {
                    "enum": [
                        "UNKNOWN_VIDEO_PROCESSING_STATUS",
                        "UPLOADING",
                        "PENDING",
                        "FAILED",
                        "READY",
                        "FINAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "Video is being uploaded and not yet playable.",
                        "The video is being processed and is not yet playable",
                        "Processing for the video failed and it is not playable",
                        "Video is playable, but only lower quality streams are available",
                        "Video is playable and all streams are available"
                    ],
                    "type": "string"
                },
                "thumbnail": {
                    "$ref": "PhotosMediaClientImageProperties",
                    "description": "URL and properties of a static thumbnail for the video"
                },
                "videoCid": {
                    "description": "Video identifier in viper\nWill be \"0\" if the full video has not yet been uploaded - upload_status\nwill generally be something other than FULL_QUALITY in this case.",
                    "type": "string"
                },
                "videoProperties": {
                    "$ref": "PhotosMediaClientVideoProperties",
                    "description": "Properties about the video content.\nWill not be provided until the video is in a playable state."
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoExifData": {
            "description": "Metadata about the video (e.g. MIME type, EXIF, framerate etc).",
            "id": "PhotosMediaClientVideoExifData",
            "properties": {
                "cameraMake": {
                    "description": "EXIF Camera make.",
                    "type": "string"
                },
                "cameraModel": {
                    "description": "EXIF Camera model.",
                    "type": "string"
                },
                "oemSpecialType": {
                    "description": "Opaque id string created by the OEM vendor. See go/photos-oem-exif.",
                    "type": "string"
                },
                "originalCaptureFrameRateFps": {
                    "description": "The original frame rate of the video when it was captured in FPS.",
                    "format": "double",
                    "type": "number"
                },
                "originalEncodingFrameRateFps": {
                    "description": "The original frame rate of the encoded video after first uploaded in\nframe per second (FPS). Use of this and the capture frame rate is explained\nin the design doc of slow motion editing at go/photos-slowmo-edit. Both\nframe rates are included since different platforms have different encoding\nstrategies for high frame rate videos.",
                    "format": "double",
                    "type": "number"
                },
                "videoCodec": {
                    "description": "Video codec of the original video in storage. This is based on CodecId enum\nin video/vidproc/vsi/videostreaminfo.proto without \"CODEC_ID_\" prefix.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoExifDataMask": {
            "id": "PhotosMediaClientVideoExifDataMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoMask": {
            "id": "PhotosMediaClientVideoMask",
            "properties": {
                "editList": {
                    "$ref": "PhotosMediaClientEditListMask"
                },
                "exifData": {
                    "$ref": "PhotosMediaClientVideoExifDataMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "thumbnail": {
                    "$ref": "PhotosMediaClientImagePropertiesMask"
                },
                "videoProperties": {
                    "$ref": "PhotosMediaClientVideoPropertiesMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoProperties": {
            "description": "Information on how to play a single video.\nWill not be available until the video is in a playable state.\nNot all fields will be provided until video is fully processed.\nNext ID: 10",
            "id": "PhotosMediaClientVideoProperties",
            "properties": {
                "adaptiveVideoStream": {
                    "description": "Not all videos have adaptive video stream. Each stream returned will have a\nunique AdaptiveVideoStreamType. This is independent of video stream above.",
                    "items": {
                        "$ref": "PhotosMediaClientVideoPropertiesAdaptiveVideoStream"
                    },
                    "type": "array"
                },
                "durationMs": {
                    "description": "Duration of the video in milliseconds",
                    "format": "int64",
                    "type": "string"
                },
                "highlight": {
                    "items": {
                        "$ref": "PhotosMediaClientVideoPropertiesHighlight"
                    },
                    "type": "array"
                },
                "originalHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "originalWidth": {
                    "description": "Dimensions of the original video in pixels",
                    "format": "int32",
                    "type": "integer"
                },
                "previewVideoStream": {
                    "$ref": "PhotosMediaClientVideoPropertiesPreviewVideoStream"
                },
                "processing": {
                    "items": {
                        "$ref": "PhotosMediaClientVideoPropertiesProcessing"
                    },
                    "type": "array"
                },
                "specialFormat": {
                    "enum": [
                        "UNKNOWN_SPECIAL_FORMAT",
                        "SPHERICAL_PANORAMA",
                        "VR_STEREO",
                        "VR_180"
                    ],
                    "enumDescriptions": [
                        "",
                        "The video is monoscopic, i.e. each frame having only one viewpoint. This\nand the stereoscopic definitions come from go/photos-vr-video-format.",
                        "The video is VR, i.e. stereoscopic with each frame having two viewpoints.",
                        "Limited viewpoint VR of up to 180 degrees of horizontal and vertical\nfreedom. Video may contain both monoscopic and stereoscopic transcodes."
                    ],
                    "type": "string"
                },
                "videoStream": {
                    "description": "At least one stream will be returned. Each stream returned will have a\nunique format id. This is independent of adaptive video stream below.",
                    "items": {
                        "$ref": "PhotosMediaClientVideoPropertiesVideoStream"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesAdaptiveVideoStream": {
            "description": "Information to play the video using adaptive bitrate streaming technique\nwhere the video stream quality can be adjusted based on network bandwidth.\nSee go/photos-video-dash-format.",
            "id": "PhotosMediaClientVideoPropertiesAdaptiveVideoStream",
            "properties": {
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "playUrl": {
                    "description": "URL for the manifest file to play the video.",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_ADAPTIVE_VIDEO_STREAM_TYPE",
                        "DASH"
                    ],
                    "enumDescriptions": [
                        "",
                        "Dynamic Adaptive Streaming over HTTP (DASH) manifest file.\nThis is commonly used for Android and web client in Google."
                    ],
                    "type": "string"
                },
                "width": {
                    "description": "Dimensions of the highest resolution video stream in pixels.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesHighlight": {
            "description": "Information that summarizes the valuable moments of the video, e.g. the\ntimestamps of the key frames, or the clip intervals.",
            "id": "PhotosMediaClientVideoPropertiesHighlight",
            "properties": {
                "keyFrameMs": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesMask": {
            "id": "PhotosMediaClientVideoPropertiesMask",
            "properties": {
                "adaptiveVideoStream": {
                    "$ref": "PhotosMediaClientVideoPropertiesMaskAdaptiveVideoStreamMask"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                },
                "previewVideoStream": {
                    "$ref": "PhotosMediaClientVideoPropertiesMaskPreviewVideoStreamMask",
                    "description": "If set, returns information about the video streams to use for previewing a\nvideo. For example, returns the video format to derive the stream used in\ngrid playback."
                },
                "videoStream": {
                    "$ref": "PhotosMediaClientVideoPropertiesMaskVideoStreamMask"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesMaskAdaptiveVideoStreamMask": {
            "id": "PhotosMediaClientVideoPropertiesMaskAdaptiveVideoStreamMask",
            "properties": {
                "omitPlayUrl": {
                    "description": "If set play_url will not be populated.",
                    "type": "boolean"
                },
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesMaskPreviewVideoStreamMask": {
            "id": "PhotosMediaClientVideoPropertiesMaskPreviewVideoStreamMask",
            "properties": {},
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesMaskVideoStreamMask": {
            "id": "PhotosMediaClientVideoPropertiesMaskVideoStreamMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesPreviewVideoStream": {
            "description": "Information about the video streams to use for previewing a video.",
            "id": "PhotosMediaClientVideoPropertiesPreviewVideoStream",
            "properties": {
                "formatId": {
                    "description": "Int representation of the video format that allows playback of a small\nportion of the video.\nUsage: http://<FIFE content URL>=m<format_id>?sq=0&sq_end=1\nSee list of video formats here:\ngoogle3/video/storage/proto/content_header.proto.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesProcessing": {
            "description": "Information about some interesting forms of processing that have been\napplied to the video. This can be loosely thought of as a summary of the\nedits for the video.",
            "id": "PhotosMediaClientVideoPropertiesProcessing",
            "properties": {
                "initiatedBy": {
                    "enum": [
                        "UNKNOWN_INITIATOR",
                        "USER",
                        "SYSTEM"
                    ],
                    "enumDescriptions": [
                        "",
                        "Processing happened as a result of a user action",
                        "Processing was initiated by the system"
                    ],
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "UNKNOWN_PROCESSING_STATE",
                        "APPLYING",
                        "APPLIED",
                        "REVERTING"
                    ],
                    "enumDescriptions": [
                        "",
                        "This processing is currently being applied.",
                        "This processing has already been applied.",
                        "This processing is in the process of being removed."
                    ],
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_PROCESSING_TYPE",
                        "AUTO_ENHANCE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Auto stabilization, and other pixel enhancements."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientVideoPropertiesVideoStream": {
            "description": "Playable streams for the video",
            "id": "PhotosMediaClientVideoPropertiesVideoStream",
            "properties": {
                "formatId": {
                    "description": "See ContentHeader.VideoFormat (video/storage/proto/content_header.proto)",
                    "format": "int32",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "playUrl": {
                    "description": "URL for playing the stream",
                    "type": "string"
                },
                "width": {
                    "description": "Dimensions of the video stream in pixels",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosMediaClientViewStateMask": {
            "id": "PhotosMediaClientViewStateMask",
            "properties": {
                "placeHolderForApiary": {
                    "description": "Ignore this field. It is present only to prevent Apiary from dropping\nthis message.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosMoviesAsset": {
            "description": "This message describes an asset that will be used to make a movie.",
            "id": "PhotosMoviesAsset",
            "properties": {
                "audioVolume": {
                    "description": "The volume of the Asset's audio track. Only applies when the type is AUDIO\nor VIDEO. If audio_volume is present, clients will play the Asset's audio\ntrack at the specified volume. For AUDIO Assets, if audio_volume is not\npresent, include audio. For VIDEO Assets, if audio_volume is not present,\ndo not include audio.\naudio_volume is in [0.0, 1.0] where 0.0 is silent and 1.0 is maximum\nvolume.",
                    "format": "float",
                    "type": "number"
                },
                "id": {
                    "$ref": "PhotosMoviesAssetId",
                    "description": "The id of the asset."
                },
                "pastEndPolicy": {
                    "description": "The Asset's policy when accessing beyond its end range. For static asset\ntypes, such as PHOTO, this field is ignored.  (If we expect to support\nanimated GIFs, this can apply to PHOTO assets.)",
                    "enum": [
                        "UNKNOWN_PAST_END_POLICY",
                        "REPEAT_FROM_ZERO",
                        "HOLD_LAST",
                        "AS_EMPTY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Repeat the asset from time 0.",
                        "Hold the data associated with the last frame/end time.  This is not valid\nfor audio.",
                        "Treat as empty.  For audio, this is silence.  For video, this is a black\nframe."
                    ],
                    "type": "string"
                },
                "stabilize": {
                    "description": "Stabilize a video asset. This flag is only read for assets of type VIDEO,\nand indicates whether or not we should run a stabilization pass on the\nvideo before applying any other effects.",
                    "type": "boolean"
                },
                "startPointUs": {
                    "description": "Start time within the asset at which we should begin playback, in\nmicroseconds. For static asset types, such as PHOTO, this field may be\nignored.",
                    "format": "int64",
                    "type": "string"
                },
                "trimParams": {
                    "$ref": "PhotosMoviesAssetTrimParams",
                    "description": "The params specifying how assets will be shown in the movie editor. This\nfield is only read by clients, but can also be generated on the server."
                },
                "type": {
                    "description": "The type of the asset.",
                    "enum": [
                        "UNKNOWN_TYPE",
                        "AUDIO",
                        "PHOTO",
                        "VIDEO"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMoviesAssetId": {
            "description": "The id of an asset that may be used to make a movie. At least one of the\nfields, media_key, local_reference, cloud_id or audio_id, should be set\nfor this message.",
            "id": "PhotosMoviesAssetId",
            "properties": {
                "audioId": {
                    "description": "ID of an audio asset in Movie Maker's \"Theme Music\" collection.",
                    "format": "uint64",
                    "type": "string"
                },
                "cloudId": {
                    "description": "The asset id associated with the asset from the Cloud Storage, such as end\nclips in the Lullaby concept.",
                    "format": "uint64",
                    "type": "string"
                },
                "localReference": {
                    "description": "For visual clips, this should always be unset on the backend, but locally\nclient can use it any way they want.\n\nFor audio clips, this is used to identify user music files on the client.\nThis is needed because the media keys for user music are short-lived and\nthere's no mapping available from remote media keys to local music files.",
                    "type": "string"
                },
                "mediaKey": {
                    "description": "The media key associated with a particular media asset.  If the media key\nis set, there is no need to set any other field.  Precedence will be given\nto the media key over all other references to the media.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMoviesAssetTrimParams": {
            "description": "Params related to clip trimming in the movie editor.",
            "id": "PhotosMoviesAssetTrimParams",
            "properties": {
                "endTrimPointUs": {
                    "description": "Defines the latest timestamp within the asset that the user can trim the\nclip out to. This can be overridden by the user in the editor. Must be\nset if TrimParams are provided.\n\nThe following constraints must be satisfied:\n  end_trim_point_us >= start_point_us + MovieClip.duration_us\n  end_trim_point_us <= total duration of the asset",
                    "format": "int64",
                    "type": "string"
                },
                "startTrimPointUs": {
                    "description": "Defines the earliest timestamp within the asset that the user can trim\nthe clip out to. This can be overridden by the user in the editor.\n\nThe following constraint must be satisfied:\n  start_trim_point_us <= start_point_us\n  start_trim_point_us >= 0",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMoviesControllerData": {
            "description": "Controller data for the specified type of controller. An instance of this\nmessage should have exactly one of its fields set.",
            "id": "PhotosMoviesControllerData",
            "properties": {
                "curveData": {
                    "$ref": "PhotosMoviesCurveControllerData"
                },
                "randomData": {
                    "$ref": "PhotosMoviesRandomControllerData"
                },
                "resourceData": {
                    "$ref": "PhotosMoviesResourceControllerData"
                }
            },
            "type": "object"
        },
        "PhotosMoviesControllerProto": {
            "description": "This message fully specifies a controller in the theme engine.",
            "id": "PhotosMoviesControllerProto",
            "properties": {
                "data": {
                    "$ref": "PhotosMoviesControllerData",
                    "description": "Data specific to the type of controller."
                },
                "input": {
                    "description": "The names of the inputs that this controller sets.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "The type of the controller.",
                    "enum": [
                        "UNKNOWN_CONTROLLER",
                        "OUTPUT_SIZE_CONTROLLER",
                        "RANDOM_CONTROLLER",
                        "CURVE_CONTROLLER",
                        "RESOURCE_CONTROLLER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMoviesCurveControllerData": {
            "description": "Controller data for the animation curve controller.",
            "id": "PhotosMoviesCurveControllerData",
            "properties": {
                "curve": {
                    "$ref": "PhotosTwixIoAnimationCurveProto",
                    "description": "The animation curve data."
                },
                "normRange": {
                    "description": "The curve's time range in the theme.",
                    "enum": [
                        "UNKNOWN",
                        "CLIP",
                        "TRANSITION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Normalize to the time range of the active clip at the current time for\nthe track this controller's effect belongs to.",
                        "Normalize to the time range of the active transition for the current\ntime."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMoviesEffectBank": {
            "description": "An effect bank contains lists of effects that may be used by the clips in a\nmovie.  The clip_effect_id and transition_effect_id indices in clip messgaes\nwill always refer to indices in the corresponding fields of an effect bank.",
            "id": "PhotosMoviesEffectBank",
            "properties": {
                "clipEffects": {
                    "description": "The list of effects that are used by the clips in the movie.  The\nclip_effect field in the Clip message is an index into this repeated field.\nA movie can have any number of clip effects, and multiple clips are free to\nreference the same clip effect.",
                    "items": {
                        "$ref": "PhotosMoviesEffectProto"
                    },
                    "type": "array"
                },
                "transitionEffects": {
                    "description": "The list of transition effects that are used by the clips in the movie.\nThe transition_effect field in the Clip message is an index into this\nrepeated field.  A movie can have any number of transition effects, and\nmultiple clips are free to reference the same clip effect.",
                    "items": {
                        "$ref": "PhotosMoviesEffectProto"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMoviesEffectParam": {
            "description": "A message containing a Twix value that can be sent to an effect to specify\nparameters on that effect. Examples include cropping rectangles, Ken Burn's\nparameters, etc...",
            "id": "PhotosMoviesEffectParam",
            "properties": {
                "name": {
                    "description": "Name of the parameter that should be set.  The name must match an existing\nInputNode in the graph of the EffectProto that owns this message.",
                    "type": "string"
                },
                "value": {
                    "$ref": "PhotosTwixIoValueProto",
                    "description": "The value of the parameter."
                }
            },
            "type": "object"
        },
        "PhotosMoviesEffectProto": {
            "id": "PhotosMoviesEffectProto",
            "properties": {
                "controller": {
                    "description": "The list of controllers, which set the values of the input nodes the\nspecify the parameters to the effect.  These are the controllers\nthat set InputNode values via method 2) in the comment above.",
                    "items": {
                        "$ref": "PhotosMoviesControllerProto"
                    },
                    "type": "array"
                },
                "effectParams": {
                    "description": "The list of parameters that can be used to modify the effect.  Each\nparameter in this list has a default value and is linked by name to\nan input node in the effect.  An EffectParam with the same name stored\nin the storyboard's MovieClip will override a default in this list.\nThese are the effect params that set InputNode values via method 3) in the\ncomment above.",
                    "items": {
                        "$ref": "PhotosMoviesEffectParam"
                    },
                    "type": "array"
                },
                "graph": {
                    "$ref": "PhotosTwixIoGraphProto",
                    "description": "The twix graph that defines the effect's rendering pipeline.\n\nEach InputNode in an EffectProto graph must have its value set in one of\nthree ways:\n 1) The InputNode is listed as an input_node.  The renderer will set\n    input_node values with the current clip assets (for clip effects) or\n    two rendered track images (for transition effects).  These inputs must\n    have value types that match the render_type of the effect.\n 2) The InputNode is set by a controller.  Controllers are added to\n    the effect and are attached to specific input nodes by name.  Various\n    controller types can be used to set the input value from a curve,\n    a random number, the resource table, etc.  Creation functions for the\n    available controllers are found here:\n        photos/curation/movies/theme_engine/controllers.h\n 3) The InputNode is set by an effect param.  EffectParams are added to\n    the effect with default values.  These values can be overridden with\n    a clip- or transition-specific effect param entry in a movie\n    storyboard."
                },
                "inputNode": {
                    "description": "The names of the input nodes to the effect.  Note that these InputNodes\nare set via method 1) in the comment above.  The value type of each\nInputNode must match the render_type of this message.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "outputNode": {
                    "description": "The name of the output node produced by the effect.  The value type of\nthis OutputNode must match the render_type of this message.",
                    "type": "string"
                },
                "renderType": {
                    "description": "The twix type that is used as input/output to the effect.",
                    "type": "string"
                },
                "resourceTable": {
                    "$ref": "PhotosTwixIoResourceTableProto",
                    "description": "Resource table containing the external resources used in this effect."
                }
            },
            "type": "object"
        },
        "PhotosMoviesMovieClip": {
            "description": "A clip is a segment within a movie that may be composed from 0 or more\nassets.  Each clip belongs to a movie, and may use the movie's effects\nlibrary to apply effects to the clip.",
            "id": "PhotosMoviesMovieClip",
            "properties": {
                "assets": {
                    "description": "The list of assets that make up the clip.  These assets are the inputs to\nthe clip effect selected from Movie's effect bank by the clip_effect field\nbelow.  For a clip to be valid this field must have a size equal to the\nnumber of inputs to the selected clip effect.  If there is no clip effect,\nthen there must be 1 asset, which is played back unchanged in the movie.  A\nclip may have 0 assets listed here as well, e.g. for if they use an effect\nthat generates a black frame, then the clip can be used to fade to black at\nthe end of the movie.",
                    "items": {
                        "$ref": "PhotosMoviesAsset"
                    },
                    "type": "array"
                },
                "clipEffect": {
                    "$ref": "PhotosMoviesMovieClipEffectData",
                    "description": "The effect data for the effect that should be applied to the whole clip."
                },
                "durationUs": {
                    "description": "Duration of the clip within the movie, in microseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "startPointUs": {
                    "description": "Start time of the clip within the movie, in microseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "transitionEffect": {
                    "$ref": "PhotosMoviesMovieClipEffectData",
                    "description": "The data for the transition effect that should be applied to the transition\nfrom this clip to the next clip in the movie.  If this field is not present\nor its effect_id is negative, then this must either be the last clip in the\nmovie, or the overlap duration between this clip and the next one in the\nmovie must be 0.  The renderer will ignore this field for the last clip in\nthe movie."
                }
            },
            "type": "object"
        },
        "PhotosMoviesMovieClipEffectData": {
            "description": "A message that contains the data related to the effects that should be\napplied to a clip.",
            "id": "PhotosMoviesMovieClipEffectData",
            "properties": {
                "effectId": {
                    "description": "The index of the effect within the movie's effect bank.",
                    "format": "uint32",
                    "type": "integer"
                },
                "effectParams": {
                    "description": "A list of effect parameters specific to this clip that will be provided\nto the effect being used.",
                    "items": {
                        "$ref": "PhotosMoviesEffectParam"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosMoviesMovieStoryboard": {
            "description": "Describes a Movie that can be rendered by the theme engine.",
            "id": "PhotosMoviesMovieStoryboard",
            "properties": {
                "audioClips": {
                    "description": "A list of audio clips that form the movie's soundtrack.  A valid movie\nshould store clips sequentially by their start time, so that we satisify\nthe following constraints:\n\n  audio_clips[0].start_point_us >= 0;\n  audio_clips[n-1].start_point_us <= audio_clips[n].start_point_us;\n\nCurrently, we have no support for audio effects, and thus the clips in this\nfield are played black without applying effects.  As such each clip should\ncurrently only contain a single asset.  The following rules are observered\nin rendering the final audio track:\n\n  * If any part of the movie is not covered by the clips in this field,\n    there will be silence in the movie.\n  * If the duration of any clip is longer that the source asset, the asset\n    will be repeated to fill the duration of the clip.\n  * If a clips duration would extend beyond the duration of the movie, the\n    clip will be cut to fit the duration of the movie.",
                    "items": {
                        "$ref": "PhotosMoviesMovieClip"
                    },
                    "type": "array"
                },
                "minimumSupportedRendererVersion": {
                    "description": "The minimum version of the renderer that must be used in order to render\nthis movie.  This is a required field.  Version numbers will assume a major\nminor version format of M.NN, where we always use 2 digits for the minor\nversion, and are encoded here as MNN.  So, for example, we would map\nrenderer versions like so:\n    1.00 -> 100\n    2.01 -> 201\n    3.51 -> 351",
                    "format": "int32",
                    "type": "integer"
                },
                "outputHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "outputWidth": {
                    "description": "The format of the output video. The actual size values are only used as\nsuggested rendering sizes and client are free to scale the requested output\nsize as needed. However, the aspect ratio (output_width / output_height)\nshould be preserved.",
                    "format": "int32",
                    "type": "integer"
                },
                "overallVisualEffect": {
                    "$ref": "PhotosMoviesEffectProto",
                    "description": "The overall effect that is applied to the movie.  This is a single effect\nthat can be applied after all clip effects and transtion effects have been\nrendered.  For example, if we wish to apply a constant vignette to the\nwhole movie, we may provide it as an overall effect here."
                },
                "overallVisualEffectParams": {
                    "description": "A list of visual effect parameters specific to this movie that are provided\nto the overall visual effect.",
                    "items": {
                        "$ref": "PhotosMoviesEffectParam"
                    },
                    "type": "array"
                },
                "visualClips": {
                    "description": "A list of visual clips that are used to render the movie.  A valid movie\nshould store clips sequentially by their start time.  Supposing that clip\nstart and end time are stored in the arrays a and b, i.e.:\n\n  a[n] = visual_clips[n].start_point_us\n  b[n] = a[n] + visual_clips[n].duration\n\nthen we also assert that a valid movie must satisfy the following\nconstraints:\n\n  a[0] = 0;\n  a[n] <= a[n+1];\n  b[n-2] <= a[n] <= b[n-1];\n\n(Note: we implicitly assume that a[n] < b[n], i.e. we do not allow clips of\nduration 0.)  Assuming this allows the transition duration, from clip n-1\nto clip n say, to be easily computed as:\n\n  b[n-1] - a[n];",
                    "items": {
                        "$ref": "PhotosMoviesMovieClip"
                    },
                    "type": "array"
                },
                "visualEffects": {
                    "$ref": "PhotosMoviesEffectBank",
                    "description": "The visual effect bank used by this movie.  All of effects referenced by\nthe clips in the visual_clips field belong to this bank of effects."
                }
            },
            "type": "object"
        },
        "PhotosMoviesRandomControllerData": {
            "description": "Controller data for the random controller.",
            "id": "PhotosMoviesRandomControllerData",
            "properties": {
                "max": {
                    "description": "Max value for the random number generator.",
                    "format": "float",
                    "type": "number"
                },
                "min": {
                    "description": "Min value for the random number generator.",
                    "format": "float",
                    "type": "number"
                },
                "seed": {
                    "$ref": "PhotosMoviesRandomSeed",
                    "description": "Data about how to seed the random number generator."
                }
            },
            "type": "object"
        },
        "PhotosMoviesRandomSeed": {
            "description": "This message specifies data about how the random seed for the random\ncontroller.",
            "id": "PhotosMoviesRandomSeed",
            "properties": {
                "frequency": {
                    "description": "The frequency at which we should reseed the random number generator.",
                    "enum": [
                        "UNKNOWN_FREQUENCY",
                        "PER_FRAME",
                        "PER_EFFECT",
                        "PER_RENDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Random seed is unique per frame.",
                        "Random seed is unique to each effect, but constant over duration of\neffect.",
                        "Random seed is unique to input only, constant over duration of render."
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The type of effect to which the random seed applies.",
                    "enum": [
                        "UNKNOWN_TYPE",
                        "CLIP",
                        "TRANSITION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Random seed is based on current clip effect for current track.",
                        "Random seed is based on current transition effect."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosMoviesResourceControllerData": {
            "description": "Controller data for the resource controller.",
            "id": "PhotosMoviesResourceControllerData",
            "properties": {
                "key": {
                    "description": "The key of an entry in the resource table.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of data stored in the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosPanoramaMetadata": {
            "id": "PhotosPanoramaMetadata",
            "properties": {
                "sphericalPanorama": {
                    "type": "boolean"
                },
                "vr180Panorama": {
                    "description": "True if the image is a VR180 image. See go/3d180 for details.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PhotosRawEditingProtosRawParams": {
            "id": "PhotosRawEditingProtosRawParams",
            "properties": {
                "autoWhiteBalanceEnabled": {
                    "description": "Attempt to perform auto WB?",
                    "type": "boolean"
                },
                "caReductionEnabled": {
                    "description": "Attempt to perform CA correction?",
                    "type": "boolean"
                },
                "contrast": {
                    "description": "Relative change to contrast. Valid range [-100, 100].",
                    "format": "float",
                    "type": "number"
                },
                "exposureCompensation": {
                    "description": "Relative change to exposure value (EV). Valid range [-4, 4].",
                    "format": "float",
                    "type": "number"
                },
                "highlightsCompensation": {
                    "description": "Relative change to tonality of very bright tones. Valid range [-100, 100].",
                    "format": "float",
                    "type": "number"
                },
                "noiseReductionEnabled": {
                    "description": "Attempt to perform noise reduction?",
                    "type": "boolean"
                },
                "saturation": {
                    "description": "Relative change to the image saturation. Valid range [-100, 100].",
                    "format": "float",
                    "type": "number"
                },
                "shadowsCompensation": {
                    "description": "Relative change to tonality of dark areas. Valid range [-100, 100].",
                    "format": "float",
                    "type": "number"
                },
                "sharpeningStrength": {
                    "description": "Sharpening strength.  Valid range [-100, 100].",
                    "format": "float",
                    "type": "number"
                },
                "structure": {
                    "description": "Relative change to the image clarity. Valid range [-100, 100].",
                    "format": "float",
                    "type": "number"
                },
                "temperature": {
                    "description": "Temperature value in Kelvin. Valid range [2307, 50000].",
                    "format": "float",
                    "type": "number"
                },
                "tint": {
                    "description": "Tint value. Valid range [-100, 100].",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoAnimationCurveProto": {
            "description": "Defines an animation curve as used in Twix.",
            "id": "PhotosTwixIoAnimationCurveProto",
            "properties": {
                "interval": {
                    "description": "The list of intervals between key points.",
                    "items": {
                        "$ref": "PhotosTwixIoAnimationCurveProtoInterval"
                    },
                    "type": "array"
                },
                "key": {
                    "description": "The list of key points defining the curve.",
                    "items": {
                        "$ref": "PhotosTwixIoAnimationCurveProtoPoint"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoAnimationCurveProtoInterval": {
            "description": "An interval between key points on the curve.",
            "id": "PhotosTwixIoAnimationCurveProtoInterval",
            "properties": {
                "control": {
                    "description": "Optional list of control points that may be necessary for some\ninterpolation methods.",
                    "items": {
                        "$ref": "PhotosTwixIoAnimationCurveProtoPoint"
                    },
                    "type": "array"
                },
                "interpolation": {
                    "description": "Which interpolation function to use.",
                    "enum": [
                        "UNKNOWN",
                        "CONSTANT",
                        "LINEAR",
                        "BEZIER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "startKey": {
                    "description": "Index of the start key for the interval.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoAnimationCurveProtoPoint": {
            "description": "A point on the curve. This message is used to encode key points and other\ncontrol points along the curve.",
            "id": "PhotosTwixIoAnimationCurveProtoPoint",
            "properties": {
                "time": {
                    "format": "float",
                    "type": "number"
                },
                "value": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoArrayProto": {
            "id": "PhotosTwixIoArrayProto",
            "properties": {
                "values": {
                    "items": {
                        "$ref": "PhotosTwixIoValueProto"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProto": {
            "id": "PhotosTwixIoGraphProto",
            "properties": {
                "connection": {
                    "items": {
                        "$ref": "PhotosTwixIoGraphProtoConnection"
                    },
                    "type": "array"
                },
                "node": {
                    "items": {
                        "$ref": "PhotosTwixIoGraphProtoNode"
                    },
                    "type": "array"
                },
                "requiredModules": {
                    "items": {
                        "$ref": "PhotosTwixIoGraphProtoModule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoAttribute": {
            "id": "PhotosTwixIoGraphProtoAttribute",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "$ref": "PhotosTwixIoValueProto"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoConnection": {
            "id": "PhotosTwixIoGraphProtoConnection",
            "properties": {
                "source": {
                    "$ref": "PhotosTwixIoGraphProtoPort"
                },
                "target": {
                    "$ref": "PhotosTwixIoGraphProtoPort"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoCustomData": {
            "id": "PhotosTwixIoGraphProtoCustomData",
            "properties": {
                "className": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoGatherData": {
            "id": "PhotosTwixIoGraphProtoGatherData",
            "properties": {
                "inputsSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoInputData": {
            "id": "PhotosTwixIoGraphProtoInputData",
            "properties": {
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoModule": {
            "id": "PhotosTwixIoGraphProtoModule",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoNode": {
            "id": "PhotosTwixIoGraphProtoNode",
            "properties": {
                "attribute": {
                    "items": {
                        "$ref": "PhotosTwixIoGraphProtoAttribute"
                    },
                    "type": "array"
                },
                "instanceName": {
                    "type": "string"
                },
                "nodeData": {
                    "$ref": "PhotosTwixIoGraphProtoNodeData"
                },
                "nodeType": {
                    "enum": [
                        "UNKNOWN",
                        "CUSTOM_NODE",
                        "INPUT_NODE",
                        "OUTPUT_NODE",
                        "PASS_THRU_NODE",
                        "SWITCH_NODE",
                        "TYPE_CONVERSION_NODE",
                        "GATHER_NODE",
                        "SCATTER_NODE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoNodeData": {
            "id": "PhotosTwixIoGraphProtoNodeData",
            "properties": {
                "customData": {
                    "$ref": "PhotosTwixIoGraphProtoCustomData"
                },
                "gatherData": {
                    "$ref": "PhotosTwixIoGraphProtoGatherData"
                },
                "inputData": {
                    "$ref": "PhotosTwixIoGraphProtoInputData"
                },
                "outputData": {
                    "$ref": "PhotosTwixIoGraphProtoOutputData"
                },
                "passThruData": {
                    "$ref": "PhotosTwixIoGraphProtoPassThruData"
                },
                "scatterData": {
                    "$ref": "PhotosTwixIoGraphProtoScatterData"
                },
                "switchData": {
                    "$ref": "PhotosTwixIoGraphProtoSwitchData"
                },
                "typeConversionData": {
                    "$ref": "PhotosTwixIoGraphProtoTypeConversionData"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoOutputData": {
            "id": "PhotosTwixIoGraphProtoOutputData",
            "properties": {
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoPassThruData": {
            "id": "PhotosTwixIoGraphProtoPassThruData",
            "properties": {
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoPort": {
            "id": "PhotosTwixIoGraphProtoPort",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "node": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoScatterData": {
            "id": "PhotosTwixIoGraphProtoScatterData",
            "properties": {
                "outputsSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoSwitchData": {
            "id": "PhotosTwixIoGraphProtoSwitchData",
            "properties": {
                "inputsSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoGraphProtoTypeConversionData": {
            "id": "PhotosTwixIoGraphProtoTypeConversionData",
            "properties": {
                "inputType": {
                    "type": "string"
                },
                "outputType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoResourceTableProto": {
            "id": "PhotosTwixIoResourceTableProto",
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "PhotosTwixIoResourceTableProtoResource"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoResourceTableProtoResource": {
            "id": "PhotosTwixIoResourceTableProtoResource",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "$ref": "PhotosTwixIoResourceTableProtoResourceId"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoResourceTableProtoResourceId": {
            "id": "PhotosTwixIoResourceTableProtoResourceId",
            "properties": {
                "id": {
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "UNKNOWN",
                        "DATA",
                        "LOCAL",
                        "URL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosTwixIoValueProto": {
            "id": "PhotosTwixIoValueProto",
            "properties": {
                "arrayValue": {
                    "$ref": "PhotosTwixIoArrayProto"
                },
                "curveValue": {
                    "$ref": "PhotosTwixIoAnimationCurveProto"
                },
                "dataType": {
                    "description": "The type of data that is stored in this message. The corresponding field\nmust be set.",
                    "enum": [
                        "UNKNOWN_DATA",
                        "STRING_DATA",
                        "INT_DATA",
                        "FLOAT_DATA",
                        "CURVE_DATA",
                        "ARRAY_DATA"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "floatValues": {
                    "description": "Stores float data for float based value.",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                },
                "intValues": {
                    "description": "Stores integer data for int based values.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "stringValue": {
                    "description": "Stores data for a string value.",
                    "type": "string"
                },
                "typeName": {
                    "description": "Twix type name that should be used to parse the data in this proto.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceFaceParams": {
            "description": "FaceParams are a collection of parameters of a single face found in an\nimage.\nWARNING: This message has a jspb target. If you add a new message field\ninside, either put its definition inside this message as well or add the js\nfile corresponding to the new message to the js_deps and proto_js rules in\nthe BUILD file; otherwise it will break lots of builds.\nThe js file name is the message name all in lowercase letters.\nNext available id: 40.",
            "id": "PhotosVisionServiceFaceFaceParams",
            "properties": {
                "age": {
                    "description": "The age of the face.  Range [0.0, 120.0].",
                    "format": "float",
                    "type": "number"
                },
                "angerProbability": {
                    "format": "float",
                    "type": "number"
                },
                "attribute": {
                    "description": "Attributes for the detected face.\nInformation returned or stored in this message may be sensitive from a\nprivacy, policy, or legal point of view. Clients should consult with their\np-counsels and the privacy working group (go/pwg) to make sure their use\nrespects Google policies.",
                    "items": {
                        "$ref": "HumanSensingFaceAttribute"
                    },
                    "type": "array"
                },
                "beardProbability": {
                    "format": "float",
                    "type": "number"
                },
                "blurredProbability": {
                    "format": "float",
                    "type": "number"
                },
                "boundingBox": {
                    "$ref": "PhotosVisionServiceFaceFaceParamsBoundingBox",
                    "description": "Bounding box around the face. The coordinates of the bounding box\nare in the original image's scale as returned in ImageParams.\nThe bounding box is computed to \"frame\" the face as a human would\nexpect, and is typically used in UI (e.g. G+ to show circles\naround detected faces). It is based on the landmarker results."
                },
                "darkGlassesProbability": {
                    "format": "float",
                    "type": "number"
                },
                "detectionConfidence": {
                    "description": "Confidence is in the range [0,1].",
                    "format": "float",
                    "type": "number"
                },
                "extendedLandmarks": {
                    "items": {
                        "$ref": "PhotosVisionServiceFaceFaceParamsExtendedLandmark"
                    },
                    "type": "array"
                },
                "eyesClosedProbability": {
                    "format": "float",
                    "type": "number"
                },
                "face2cartoonResults": {
                    "$ref": "ResearchVisionFace2cartoonFace2CartoonResults",
                    "description": "Attributes of the detected face useful for generating a cartoon version of\nthe face."
                },
                "faceCropV8": {
                    "$ref": "PhotosVisionServiceFaceFaceParamsFaceCropV8"
                },
                "fdBoundingBox": {
                    "$ref": "PhotosVisionServiceFaceFaceParamsBoundingBox",
                    "description": "This other bounding box is tighter than the previous one, and\nencloses only the skin part of the face. It is typically used to\neliminate the face from any image analysis that looks up the\n\"amount of skin\" visible in an image (e.g. safesearch content\nscore). It is not based on the landmarker results, just on the\ninitial face detection, hence the 'fd' prefix."
                },
                "femaleProbability": {
                    "description": "Probability is in the range [0,1].",
                    "format": "float",
                    "type": "number"
                },
                "frontalGazeProbability": {
                    "format": "float",
                    "type": "number"
                },
                "glassesProbability": {
                    "format": "float",
                    "type": "number"
                },
                "headwearProbability": {
                    "format": "float",
                    "type": "number"
                },
                "imageParams": {
                    "$ref": "PhotosVisionServiceFaceImageParams",
                    "description": "A copy of the 'image_params' field that is also returned as part of the\nExtractFacesReply. It contains the with and height of the image the face\nextraction was performed on and provides the original frame of reference\nfor the bounding boxes above."
                },
                "joyProbability": {
                    "format": "float",
                    "type": "number"
                },
                "landmarkPositions": {
                    "items": {
                        "$ref": "PhotosVisionServiceFaceFaceParamsLandmarkPosition"
                    },
                    "type": "array"
                },
                "landmarkingConfidence": {
                    "format": "float",
                    "type": "number"
                },
                "leftEyeClosedProbability": {
                    "format": "float",
                    "type": "number"
                },
                "longHairProbability": {
                    "format": "float",
                    "type": "number"
                },
                "mouthOpenProbability": {
                    "format": "float",
                    "type": "number"
                },
                "nonHumanProbability": {
                    "format": "float",
                    "type": "number"
                },
                "panAngle": {
                    "description": "Yaw angle. Indicates how much leftward/rightward the face is pointing\nrelative to the vertical plane perpendicular to the image. Range\n[-180,180].",
                    "format": "float",
                    "type": "number"
                },
                "poseMatrix": {
                    "$ref": "PhotosVisionServiceFaceFaceParamsPoseMatrix"
                },
                "pretemplate": {
                    "format": "byte",
                    "type": "string"
                },
                "qualityScore": {
                    "description": "A score produced by the Face Quality Scoring Module that indicates overall\nquality of the face and its relative suitability for using it in\nconjunction with face recognition for instance.\nAs such, the score predicts the likelihood to recognize a given face\ncorrectly. A face recognition client could use the score and a threshold\nto determine whether to use the face in a face model, or whether to even\nconsider it for recognition.",
                    "format": "float",
                    "type": "number"
                },
                "rightEyeClosedProbability": {
                    "format": "float",
                    "type": "number"
                },
                "rollAngle": {
                    "description": "Roll angle indicates how much clockwise/anti-clockwise the face is rotated\nrelative to the image vertical and about the axis perpendicular to the\nface. Range [-180,180].",
                    "format": "float",
                    "type": "number"
                },
                "signature": {
                    "description": "Deprecated: signature will continue to be used for the pre-1.7 SDK template\nformat typically created by the converter module CNVprec_461. All newer\ntemplates created with CNVprec_465 or later will use the repeated\n'versioned_signatures' field to store the templates and version info.",
                    "format": "byte",
                    "type": "string"
                },
                "skinBrightnessProbability": {
                    "format": "float",
                    "type": "number"
                },
                "sorrowProbability": {
                    "format": "float",
                    "type": "number"
                },
                "surpriseProbability": {
                    "format": "float",
                    "type": "number"
                },
                "tiltAngle": {
                    "description": "Pitch angle. Indicates how much upwards/downwards the face is pointing\nrelative to the image's horizontal plane. Range [-180,180].",
                    "format": "float",
                    "type": "number"
                },
                "underExposedProbability": {
                    "format": "float",
                    "type": "number"
                },
                "versionedSignatures": {
                    "items": {
                        "$ref": "PhotosVisionServiceFaceVersionedFaceSignature"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceFaceParamsBoundingBox": {
            "id": "PhotosVisionServiceFaceFaceParamsBoundingBox",
            "properties": {
                "x1": {
                    "description": "These coordinates are in the same scale as the original image.\n0 <= x < width, 0 <= y < height.",
                    "format": "int32",
                    "type": "integer"
                },
                "x2": {
                    "format": "int32",
                    "type": "integer"
                },
                "y1": {
                    "format": "int32",
                    "type": "integer"
                },
                "y2": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceFaceParamsExtendedLandmark": {
            "description": "Below is the set of extended landmarks added by LMprec_508 and 510. All\nfuture additional landmarks should be added to this message.",
            "id": "PhotosVisionServiceFaceFaceParamsExtendedLandmark",
            "properties": {
                "id": {
                    "enum": [
                        "NOSE_BOTTOM_RIGHT",
                        "NOSE_BOTTOM_LEFT",
                        "NOSE_BOTTOM_CENTER",
                        "LEFT_EYE_TOP_BOUNDARY",
                        "LEFT_EYE_RIGHT_CORNER",
                        "LEFT_EYE_BOTTOM_BOUNDARY",
                        "LEFT_EYE_LEFT_CORNER",
                        "RIGHT_EYE_TOP_BOUNDARY",
                        "RIGHT_EYE_RIGHT_CORNER",
                        "RIGHT_EYE_BOTTOM_BOUNDARY",
                        "RIGHT_EYE_LEFT_CORNER",
                        "LEFT_EYEBROW_UPPER_MIDPOINT",
                        "RIGHT_EYEBROW_UPPER_MIDPOINT",
                        "LEFT_EAR_TRAGION",
                        "RIGHT_EAR_TRAGION",
                        "LEFT_EYE_PUPIL",
                        "RIGHT_EYE_PUPIL",
                        "FOREHEAD_GLABELLA",
                        "CHIN_GNATHION",
                        "CHIN_LEFT_GONION",
                        "CHIN_RIGHT_GONION",
                        "LEFT_CHEEK_CENTER",
                        "RIGHT_CHEEK_CENTER",
                        "UNKNOWN_LANDMARK"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "The following landmark is available with LMprec_508 and later",
                        "The following landmarks are extracted by LMprec_510 and later. See also\ndocumentation at www/~jsteffens/no_crawl/doc/FaceDetection/LM510.pdf",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The following landmarks are extracted by LMprec_600 and later. See\ngo/facesdk.",
                        "",
                        "Reserved id for an unknown landmark. This matches the id reserved by\nthe core SDK for an external UNKNOWN landmark."
                    ],
                    "type": "string"
                },
                "x": {
                    "description": "NOTE that landmark positions may fall outside the bounds of the image\nwhen the face is near one or more edges of the image.\nThat is, it is NOT guaranteed that 0 <= x < width or 0 <= y < height.\nRounded version of x_f.",
                    "format": "int32",
                    "type": "integer"
                },
                "xF": {
                    "format": "float",
                    "type": "number"
                },
                "y": {
                    "description": "Rounded version of y_f.",
                    "format": "int32",
                    "type": "integer"
                },
                "yF": {
                    "format": "float",
                    "type": "number"
                },
                "z": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceFaceParamsFaceCropV8": {
            "description": "Information defining a FaceCrop for a particular face.\nSee go/on-device-face-grouping-face-crops for more details.",
            "id": "PhotosVisionServiceFaceFaceParamsFaceCropV8",
            "properties": {
                "centerX": {
                    "description": "The X coordinate of the center of the face crop.",
                    "format": "float",
                    "type": "number"
                },
                "centerY": {
                    "description": "The Y coordinate of the center of the face crop.",
                    "format": "float",
                    "type": "number"
                },
                "rotation": {
                    "description": "Rotation of the face crop, in radians.",
                    "format": "float",
                    "type": "number"
                },
                "scale": {
                    "description": "Scale to apply to the coordinates of the face crop.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceFaceParamsLandmarkPosition": {
            "id": "PhotosVisionServiceFaceFaceParamsLandmarkPosition",
            "properties": {
                "landmark": {
                    "description": "Some landmarks are set during face finding and some are set during\nlandmark finding. Only after landmarking will all landmarks be set.",
                    "enum": [
                        "LEFT_EYE",
                        "RIGHT_EYE",
                        "LEFT_OF_LEFT_EYEBROW",
                        "RIGHT_OF_LEFT_EYEBROW",
                        "LEFT_OF_RIGHT_EYEBROW",
                        "RIGHT_OF_RIGHT_EYEBROW",
                        "MIDPOINT_BETWEEN_EYES",
                        "NOSE_TIP",
                        "UPPER_LIP",
                        "LOWER_LIP",
                        "MOUTH_LEFT",
                        "MOUTH_RIGHT",
                        "MOUTH_CENTER",
                        "DEPRECATED_NOSE_BOTTOM_RIGHT",
                        "DEPRECATED_NOSE_BOTTOM_LEFT",
                        "DEPRECATED_NOSE_BOTTOM_CENTER",
                        "DEPRECATED_LEFT_EYE_TOP_BOUNDARY",
                        "DEPRECATED_LEFT_EYE_RIGHT_CORNER",
                        "DEPRECATED_LEFT_EYE_BOTTOM_BOUNDARY",
                        "DEPRECATED_LEFT_EYE_LEFT_CORNER",
                        "DEPRECATED_RIGHT_EYE_TOP_BOUNDARY",
                        "DEPRECATED_RIGHT_EYE_RIGHT_CORNER",
                        "DEPRECATED_RIGHT_EYE_BOTTOM_BOUNDARY",
                        "DEPRECATED_RIGHT_EYE_LEFT_CORNER",
                        "DEPRECATED_LEFT_EYEBROW_UPPER_MIDPOINT",
                        "DEPRECATED_RIGHT_EYEBROW_UPPER_MIDPOINT",
                        "DEPRECATED_LEFT_EAR_TRAGION",
                        "DEPRECATED_RIGHT_EAR_TRAGION",
                        "DEPRECATED_FOREHEAD_GLABELLA",
                        "DEPRECATED_CHIN_GNATHION",
                        "DEPRECATED_CHIN_LEFT_GONION",
                        "DEPRECATED_CHIN_RIGHT_GONION",
                        "DEPRECATED_UNKNOWN_LANDMARK"
                    ],
                    "enumDescriptions": [
                        "Left and right are as viewed in the image without considering mirror\nprojection typical in photos. So LEFT_EYE is typically the person's\nright eye.\nFor convenience and consistency the enum values mirror the\ncorresponding values defined by the Neven Vision SDK.\nSee landmark table at:\n    wiki/twiki/bin/view/Main/FRSDKLandmarkPositions\nThe following landmarks are extracted by LMprec_502 and later",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "All values below are deprecated. Please use ExtendedLandmark to use\nthem.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "x": {
                    "description": "NOTE that landmark positions may fall outside the bounds of the image\nwhen the face is near one or more edges of the image.\nThat is, it is NOT guaranteed that 0 <= x < width or 0 <= y < height.\nRounded version of x_f.",
                    "format": "int32",
                    "type": "integer"
                },
                "xF": {
                    "format": "float",
                    "type": "number"
                },
                "y": {
                    "description": "Rounded version of y_f.",
                    "format": "int32",
                    "type": "integer"
                },
                "yF": {
                    "format": "float",
                    "type": "number"
                },
                "z": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceFaceParamsPoseMatrix": {
            "description": "Stores the full pose transformation matrix of the detected face. From this\nthe roll, pan, tilt angles can be computed.",
            "id": "PhotosVisionServiceFaceFaceParamsPoseMatrix",
            "properties": {
                "xx": {
                    "format": "float",
                    "type": "number"
                },
                "xy": {
                    "format": "float",
                    "type": "number"
                },
                "xz": {
                    "format": "float",
                    "type": "number"
                },
                "yx": {
                    "format": "float",
                    "type": "number"
                },
                "yy": {
                    "format": "float",
                    "type": "number"
                },
                "yz": {
                    "format": "float",
                    "type": "number"
                },
                "zx": {
                    "format": "float",
                    "type": "number"
                },
                "zy": {
                    "format": "float",
                    "type": "number"
                },
                "zz": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceImageParams": {
            "description": "ImageParams are a collection of parameters of the image on which face\ndetection was performed.",
            "id": "PhotosVisionServiceFaceImageParams",
            "properties": {
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PhotosVisionServiceFaceVersionedFaceSignature": {
            "description": "From newer SDK versions onward (1.7+), each face template (signature) will\nalso store a version # derived from the converter version that created the\ntemplate.",
            "id": "PhotosVisionServiceFaceVersionedFaceSignature",
            "properties": {
                "confidence": {
                    "description": "Confidence score based on embedding uncertainty. This is only populated if\nfetch_facenet_confidence has been set as true in FaceNetConfig.",
                    "format": "float",
                    "type": "number"
                },
                "converterVersion": {
                    "description": "The converter version that created this template.",
                    "enum": [
                        "UNKNOWN",
                        "PREC_461",
                        "PREC_465",
                        "PREC_470",
                        "FACENET_7",
                        "FACENET_8",
                        "FACENET_CELEBRITY",
                        "FACENET_9",
                        "FACENET_MOBILE_V1_8BITS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "signature": {
                    "description": "The face template bytes.",
                    "format": "byte",
                    "type": "string"
                },
                "signatureSource": {
                    "description": "Specifies the source of the signature in cases where the bytes are from a\nlower level of the FaceNet architecture. This is useful in combination with\nthe FaceNetClient when it returns multiple outputs and we need to keep\ntrack of their contents. For example, this could contain the string\n'avgpool-0' while another instance can use the standard 'normalizing'\nstring.",
                    "type": "string"
                },
                "version": {
                    "description": "The internal version of the template. This is a copy of the version stored\nwithin the template.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonAgeClassifierResults": {
            "id": "ResearchVisionFace2cartoonAgeClassifierResults",
            "properties": {
                "age": {
                    "enum": [
                        "UNKNOWN",
                        "BABY",
                        "KID",
                        "ADULT",
                        "OLD"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "predictedAge": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonChinLengthClassifierResults": {
            "id": "ResearchVisionFace2cartoonChinLengthClassifierResults",
            "properties": {
                "chinLength": {
                    "enum": [
                        "UNKNOWN",
                        "SHORT",
                        "AVERAGE",
                        "LONG"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "confidence": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyeColorClassifierResults": {
            "id": "ResearchVisionFace2cartoonEyeColorClassifierResults",
            "properties": {
                "color": {
                    "enum": [
                        "UNKNOWN",
                        "BROWN_OR_BLACK",
                        "BLUE_OR_GREEN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "confidence": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyeEyebrowDistanceClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonEyeEyebrowDistanceClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "eyeEyebrowDistance": {
                    "enum": [
                        "UNKNOWN",
                        "SMALL",
                        "AVERAGE",
                        "LARGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyeShapeClassifierResults": {
            "id": "ResearchVisionFace2cartoonEyeShapeClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "shape": {
                    "enum": [
                        "UNKNOWN",
                        "DOUBLE_FOLD_EYELID",
                        "SINGLE_FOLD_EYELID"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyeSlantClassifierResults": {
            "id": "ResearchVisionFace2cartoonEyeSlantClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "eyeSlant": {
                    "enum": [
                        "UNKNOWN",
                        "OUTWARDS",
                        "AVERAGE",
                        "INWARDS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyeVerticalPositionClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonEyeVerticalPositionClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "eyeVerticalPosition": {
                    "enum": [
                        "UNKNOWN",
                        "HIGH",
                        "AVERAGE",
                        "LOW"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyebrowShapeClassifierResults": {
            "id": "ResearchVisionFace2cartoonEyebrowShapeClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "eyebrowShape": {
                    "enum": [
                        "UNKNOWN",
                        "ST_BREAK",
                        "ST_BEND",
                        "HIGH_DIAGONAL",
                        "TILT",
                        "ROUND",
                        "ANGULAR",
                        "HIGH_CURVY",
                        "ROUND_UNEVEN",
                        "BUSHY_ST",
                        "UNI"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyebrowThicknessClassifierResults": {
            "id": "ResearchVisionFace2cartoonEyebrowThicknessClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "eyebrowThickness": {
                    "enum": [
                        "UNKNOWN",
                        "THIN",
                        "NORMAL",
                        "THICK",
                        "VERY_THICK"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonEyebrowWidthClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonEyebrowWidthClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "eyebrowWidth": {
                    "enum": [
                        "UNKNOWN",
                        "NARROW",
                        "AVERAGE",
                        "WIDE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonFace2CartoonResults": {
            "description": "Results of the Face2Cartoon pipeline.",
            "id": "ResearchVisionFace2cartoonFace2CartoonResults",
            "properties": {
                "ageClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonAgeClassifierResults"
                    },
                    "type": "array"
                },
                "chinLengthClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonChinLengthClassifierResults"
                    },
                    "type": "array"
                },
                "eyeColorClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyeColorClassifierResults"
                    },
                    "type": "array"
                },
                "eyeEyebrowDistanceClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyeEyebrowDistanceClassifierResults"
                    },
                    "type": "array"
                },
                "eyeShapeClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyeShapeClassifierResults"
                    },
                    "type": "array"
                },
                "eyeSlantClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyeSlantClassifierResults"
                    },
                    "type": "array"
                },
                "eyeVerticalPositionClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyeVerticalPositionClassifierResults"
                    },
                    "type": "array"
                },
                "eyebrowShapeClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyebrowShapeClassifierResults"
                    },
                    "type": "array"
                },
                "eyebrowThicknessClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyebrowThicknessClassifierResults"
                    },
                    "type": "array"
                },
                "eyebrowWidthClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonEyebrowWidthClassifierResults"
                    },
                    "type": "array"
                },
                "faceWidthClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonFaceWidthClassifierResults"
                    },
                    "type": "array"
                },
                "facialHairClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonFacialHairClassifierResults"
                    },
                    "type": "array"
                },
                "genderClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonGenderClassifierResults"
                    },
                    "type": "array"
                },
                "glassesClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonGlassesClassifierResults"
                    },
                    "type": "array"
                },
                "hairColorClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonHairColorClassifierResults"
                    },
                    "type": "array"
                },
                "hairStyleClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonHairStyleClassifierResults"
                    },
                    "type": "array"
                },
                "interEyeDistanceClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonInterEyeDistanceClassifierResults"
                    },
                    "type": "array"
                },
                "jawShapeClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonJawShapeClassifierResults"
                    },
                    "type": "array"
                },
                "lipThicknessClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonLipThicknessClassifierResults"
                    },
                    "type": "array"
                },
                "mouthVerticalPositionClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonMouthVerticalPositionClassifierResults"
                    },
                    "type": "array"
                },
                "mouthWidthClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonMouthWidthClassifierResults"
                    },
                    "type": "array"
                },
                "noseVerticalPositionClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonNoseVerticalPositionClassifierResults"
                    },
                    "type": "array"
                },
                "noseWidthClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonNoseWidthClassifierResults"
                    },
                    "type": "array"
                },
                "skinToneClassifierResults": {
                    "items": {
                        "$ref": "ResearchVisionFace2cartoonSkinToneClassifierResults"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonFaceWidthClassifierResults": {
            "id": "ResearchVisionFace2cartoonFaceWidthClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "faceWidth": {
                    "enum": [
                        "UNKNOWN",
                        "NARROW",
                        "AVERAGE",
                        "WIDE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonFacialHairClassifierResults": {
            "id": "ResearchVisionFace2cartoonFacialHairClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "facialHair": {
                    "enum": [
                        "UNKNOWN",
                        "NO_FACIAL_HAIR",
                        "CLOSE_SHAVE",
                        "SHORT_BEARD_2",
                        "SHORT_BEARD_1",
                        "MED_BEARD",
                        "SHORT_BEARD_5",
                        "GOATEE",
                        "MOUSTACHE",
                        "MOUSTACHE_GOATEE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonGenderClassifierResults": {
            "id": "ResearchVisionFace2cartoonGenderClassifierResults",
            "properties": {
                "confidence": {
                    "description": "Uses a scaled version of the FaceSDK classifier's probability as the\nconfidence (since the probability for the selected gender is between\n(0.5, 1] we scale it to be between (0, 1]).",
                    "format": "float",
                    "type": "number"
                },
                "gender": {
                    "enum": [
                        "UNKNOWN",
                        "FEMALE",
                        "MALE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonGlassesClassifierResults": {
            "id": "ResearchVisionFace2cartoonGlassesClassifierResults",
            "properties": {
                "confidence": {
                    "description": "Uses a scaled version of the FaceSDK classifier's probability as the\nconfidence (since the probability for the selected glasses is between\n(0.5, 1] we scale it to be between (0, 1]).",
                    "format": "float",
                    "type": "number"
                },
                "glassesType": {
                    "enum": [
                        "UNKNOWN",
                        "NO_GLASSES",
                        "GLASSES",
                        "DARK_GLASSES"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonHairColorClassifierResults": {
            "id": "ResearchVisionFace2cartoonHairColorClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "hairColor": {
                    "enum": [
                        "UNKNOWN",
                        "BLACK",
                        "DARK_BROWN",
                        "LIGHT_BROWN",
                        "AUBURN",
                        "ORANGE",
                        "STRAWBERRY_BLONDE",
                        "DIRTY_BLONDE",
                        "BLEACHED_BLONDE",
                        "GREY",
                        "WHITE",
                        "MINT",
                        "PALE_PINK",
                        "LAVENDER",
                        "TEAL",
                        "PURPLE",
                        "PINK",
                        "BLUE",
                        "GREEN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonHairStyleClassifierResults": {
            "id": "ResearchVisionFace2cartoonHairStyleClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "hairStyle": {
                    "enum": [
                        "UNKNOWN",
                        "BALD_1",
                        "BALD_2",
                        "BALD_3",
                        "SHAVE_1",
                        "FRONT_CREW_1",
                        "SHORT_STRAIGHT_9",
                        "SHORT_STRAIGHT_17",
                        "BUN_1",
                        "SHORT_STRAIGHT_2",
                        "SHORT_STRAIGHT_10",
                        "SHORT_STRAIGHT_1",
                        "SHORT_STRAIGHT_19",
                        "SHORT_STRAIGHT_4",
                        "SHORT_STRAIGHT_20",
                        "SHORT_STRAIGHT_18",
                        "SHORT_STRAIGHT_11",
                        "MEDIUM_STRAIGHT_5",
                        "MEDIUM_STRAIGHT_6",
                        "MEDIUM_STRAIGHT_3",
                        "LONG_STRAIGHT_6",
                        "LONG_STRAIGHT_4",
                        "LONG_STRAIGHT_2",
                        "LONG_STRAIGHT_PONYTAIL_2",
                        "LONG_STRAIGHT_PONYTAIL_1",
                        "SHORT_WAVY_2",
                        "MEDIUM_WAVY_1",
                        "MEDIUM_WAVY_4",
                        "MEDIUM_WAVY_2",
                        "LONG_WAVY_1",
                        "LONG_WAVY_3",
                        "LONG_WAVY_2",
                        "LONG_WAVY_4",
                        "LONG_WAVY_PONYTAIL_4",
                        "SHORT_CURLY_6",
                        "SHORT_CURLY_5",
                        "MEDIUM_CURLY_3",
                        "SHORT_CURLY_8",
                        "MEDIUM_CURLY_4",
                        "LONG_CURLY_3",
                        "LONG_CURLY_1",
                        "LONG_CURLY_5",
                        "LONG_CURLY_4",
                        "LONG_CURLY_2",
                        "LONG_CURLY_PONYTAIL_1",
                        "SHORT_COILY_1",
                        "SHORT_COILY_5",
                        "SHORT_COILY_4",
                        "SHORT_COILY_2",
                        "MEDIUM_COILY_1",
                        "LONG_COILY_2",
                        "LONG_COILY_PONYTAIL_1",
                        "SHORT_COILY_3",
                        "LONG_COILY_1",
                        "BOX_BRAIDS",
                        "BUN_2",
                        "COILY_PONYTAIL",
                        "LONG_COILY_3",
                        "LONG_COILY_4",
                        "LONG_COILY_5",
                        "LONG_COILY_PONYTAIL",
                        "OTT",
                        "SHORT_CORNROWS",
                        "TIGHT_BRAID",
                        "TIGHT_BRAIDS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonInterEyeDistanceClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonInterEyeDistanceClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "interEyeDistance": {
                    "enum": [
                        "UNKNOWN",
                        "WIDE",
                        "AVERAGE",
                        "CLOSE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonJawShapeClassifierResults": {
            "id": "ResearchVisionFace2cartoonJawShapeClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "jawShape": {
                    "enum": [
                        "UNKNOWN",
                        "TRIANGLE",
                        "OVAL",
                        "SQUARE",
                        "ROUND"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonLipThicknessClassifierResults": {
            "id": "ResearchVisionFace2cartoonLipThicknessClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "lipThickness": {
                    "enum": [
                        "UNKNOWN",
                        "THIN",
                        "AVERAGE",
                        "THICK"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonMouthVerticalPositionClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonMouthVerticalPositionClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "mouthVerticalPosition": {
                    "enum": [
                        "UNKNOWN",
                        "HIGH",
                        "AVERAGE",
                        "LOW"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonMouthWidthClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonMouthWidthClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "mouthWidth": {
                    "enum": [
                        "UNKNOWN",
                        "NARROW",
                        "AVERAGE",
                        "WIDE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonNoseVerticalPositionClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonNoseVerticalPositionClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "noseVerticalPosition": {
                    "enum": [
                        "UNKNOWN",
                        "HIGH",
                        "AVERAGE",
                        "LOW"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonNoseWidthClassifierResults": {
            "description": "The measurement underlying this assumes fixed ear positions, so applying this\ncombined with the FaceWidthClassifierResults may have an unintended outcome.",
            "id": "ResearchVisionFace2cartoonNoseWidthClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "noseWidth": {
                    "enum": [
                        "UNKNOWN",
                        "NARROW",
                        "AVERAGE",
                        "WIDE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResearchVisionFace2cartoonSkinToneClassifierResults": {
            "id": "ResearchVisionFace2cartoonSkinToneClassifierResults",
            "properties": {
                "confidence": {
                    "format": "float",
                    "type": "number"
                },
                "skinToneType": {
                    "enum": [
                        "UNKNOWN",
                        "TYPE_1",
                        "TYPE_2",
                        "TYPE_3",
                        "TYPE_4",
                        "TYPE_5",
                        "TYPE_6",
                        "TYPE_7",
                        "TYPE_8",
                        "TYPE_9",
                        "TYPE_10",
                        "TYPE_11"
                    ],
                    "enumDescriptions": [
                        "See the images from the links at:\nhttps://storage.googleapis.com/cc_8e814306-f840-4e2e-9415-36b06251cf8e/\nskin_tone_exemplars/skin-*.png",
                        "(darkest) RGB: #603d30",
                        "RGB: #88594b",
                        "RGB: #aa7454",
                        "RGB: #c78b5d",
                        "RGB: #d9a16e",
                        "RGB: #e3b47e",
                        "RGB: #eeaf94",
                        "RGB: #f0c092",
                        "RGB: #f6d8c1",
                        "RGB: #fbcdb6",
                        "(lightest) RGB: #fbdbd1"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsAllAuthenticatedUsersProto": {
            "description": "Represents a principal who has authenticated as any kind of user which\nthe application understands.  This is typically used for \"wiki-like\"\nsecurity, where anyone is allowed access so long as they can be held\naccountable for that access.  Since the purpose is knowing whom to\nblame, it is up to the application to decide what kinds of users it\nknows how to blame.  For example, an application might choose to include\nGAIA users in \"all authenticated users\", but not include MDB users.\nNothing here.",
            "id": "SecurityCredentialsAllAuthenticatedUsersProto",
            "properties": {},
            "type": "object"
        },
        "SecurityCredentialsCapTokenHolderProto": {
            "description": "Represents a principal which possesses a particular secret string\nwhose cryptographic hash is specified here. CapTokens (\"Capability Tokens\")\nare used in ACLProto.\nIt's expected that ACLs with CapTokenHolders will strongly enforce them\nby Keystore-wrapping crypto keys for the corresponding CapTokens.",
            "id": "SecurityCredentialsCapTokenHolderProto",
            "properties": {
                "tokenHmacSha1Prefix": {
                    "description": "The hash of the corresponding capability token.\nThe value is defined to be identical to the one in acl.proto's\nCapTokenMetadata:\n10-byte prefix of HMAC-SHA1 of the token.  The HMAC key is the\nfollowing fixed (non-secret) 512-bit value:\n    79b1c8f4 82baf523 b8a9ab4a e960f438\n    c45be041 11f1f222 e8a3f64d aeb05e3d\n    c3576acc ec649194 aede422c 4e48e0d1\n    ff21234a a6ed6b49 a7fa592e efd7bba3",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsChatProto": {
            "description": "Represents the invitees or other users associated with a Babel Chat\n(see http://goto/babel).\nCorresponds to GroupType CHAT in //social/graph/storage/proto/data.proto.",
            "id": "SecurityCredentialsChatProto",
            "properties": {
                "chatId": {
                    "description": "Chat IDs consist of alphanumeric characters and colons.\nCurrently required.",
                    "type": "string"
                },
                "memberType": {
                    "description": "The type of Chat members to consider, e.g. \"all members\" vs. \"invitee\"\nThese are defined by legacy_relation_id values in\nsocial.graph.storage.EdgeTypeEnum.EdgeType enum options in\nsocial/graph/storage/proto/id.proto.\nSee chat.pb (defined in\nproduction/config/cdd/socialgraph/mixer_config/prod/node_type_config) for\nall valid edge types associated with chat.\nCurrently required.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsCircleProto": {
            "description": "Represents a Google+ Circle.\n\nCurrently (12/2011), a Circle is identical to the ContactGroup with matching\nparameters, but Circle must only be used for true Circles and not other\nFocus groups, and should be preferred over ContactGroup where applicable.\nSoon it may become more efficient to check membership in a Circle than in a\nContactGroup (see http://go/superglue).\n\nSupport for this principal type is currently (12/2011) incomplete --\ne.g., Keystore does not support it yet (see b/5703421).",
            "id": "SecurityCredentialsCircleProto",
            "properties": {
                "circleId": {
                    "description": "Circle ID is unique only relative to the owner's Gaia ID.\nCurrently required.",
                    "format": "int64",
                    "type": "string"
                },
                "ownerGaiaId": {
                    "description": "The owner of the circle. Currently required.",
                    "format": "int64",
                    "type": "string"
                },
                "requiredConsistencyTimestampUsec": {
                    "description": "If present, then tests for membership in this circle must use data\nknown to be at least as fresh as the given (FBS-assigned) timestamp.\nSee http://go/fbs-consistent-read-after-important-write\n\nBefore using this, be sure that any service checking authorization against\nthis circle supports checking consistency timestamps. For example, as of\n12/2011, Keystore only supports this for the Moonshine configuration, and\nin others authorization checks will fail if the timestamp is present.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsContactGroupProto": {
            "description": "A group of contacts for a given user, as described in\nhttp://cs/p#google3/focus/backend/proto/backend.proto\nHistorically (and in still-existing ACLs), this was used to represent\nGoogle+ circles as well as contact groups, but this use is now deprecated.\nNew code should use the CIRCLE principal type to represent Google+ circles.",
            "id": "SecurityCredentialsContactGroupProto",
            "properties": {
                "groupId": {
                    "description": "Group ID is unique only relative to the owner's Gaia ID.",
                    "format": "int64",
                    "type": "string"
                },
                "ownerGaiaId": {
                    "format": "int64",
                    "type": "string"
                },
                "requiredConsistencyTimestampUsec": {
                    "description": "If present, then tests for membership in this ContactGroup must use data\nknown to be at least as fresh as the given (FBS-assigned) timestamp.\nSee http://go/fbs-consistent-read-after-important-write\n\nBefore using this, be sure that any service checking authorization against\nthis group supports checking consistency timestamps. For example, as of\n12/2011, Keystore only supports this for the Moonshine configuration, and\nin others authorization checks will fail if the timestamp is present.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsEmailOwnerProto": {
            "description": "Represents a verified owner of the given email address. Note that a single\naddress may have many owners, and a single user may own many addresses.\n(All lower-case, in display form -- see com.google.gaia.client.GaiaEmail)",
            "id": "SecurityCredentialsEmailOwnerProto",
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsEventProto": {
            "description": "Represents the invitees or other users associated with a Google+ Event\n(see http://goto/events-backend-design).",
            "id": "SecurityCredentialsEventProto",
            "properties": {
                "eventId": {
                    "description": "Event IDs consist of alphanumeric characters and colons.\nCurrently required.",
                    "type": "string"
                },
                "memberType": {
                    "description": "The type of Event members to consider, e.g. \"all members\" vs. \"owners\"\nvs. \"admins\".  These are defined by legacy_relation_id values in\nsocial.graph.storage.EdgeTypeEnum.EdgeType enum options in\nsocial/graph/storage/proto/id.proto.\nSee event.pb (defined in\nproduction/config/cdd/socialgraph/mixer_config/prod/node_type_config) for\nall valid edge types associated with event.\nCurrently required.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsGaiaGroupProto": {
            "id": "SecurityCredentialsGaiaGroupProto",
            "properties": {
                "groupId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsGaiaUserProto": {
            "id": "SecurityCredentialsGaiaUserProto",
            "properties": {
                "userId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsHostProto": {
            "description": "Represents a single host. Optionally, the MDB owner of the host can be\nspecified.",
            "id": "SecurityCredentialsHostProto",
            "properties": {
                "hostName": {
                    "description": "Lower-case, fully qualified hostname.",
                    "type": "string"
                },
                "hostOwner": {
                    "description": "If present, then any checks that compare this Principal to LOAS\npeer info must confirm the peer's machine owner is equal to 'host_owner'.\nIf absent, then any peer machine owner is acceptable.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsLdapGroupProto": {
            "id": "SecurityCredentialsLdapGroupProto",
            "properties": {
                "groupName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsLdapUserProto": {
            "id": "SecurityCredentialsLdapUserProto",
            "properties": {
                "userName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsMdbGroupProto": {
            "description": "An entity from the MDB namespace that is to be interpreted as a group.\nIf using this for authorization, you should do an exact match of the peer\nrole against group_name or any of the names in the Chubby expansion\nof the MDB group named group_name.",
            "id": "SecurityCredentialsMdbGroupProto",
            "properties": {
                "groupName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsMdbUserProto": {
            "description": "An entity from the MDB namespace that is to be interpreted as a user.\nIf using this for authorization, you should only do an exact match on the\npeer role against user_name.",
            "id": "SecurityCredentialsMdbUserProto",
            "properties": {
                "gaiaId": {
                    "description": "Do not set this field. Contact credentials-eng@ if you believe you\nabsolutely need to use it. This is the @prod.google.com Gaia ID that\ncorresponds to the MDB user, see go/authn-merge for details. This field\nmay always be safely ignored when performing an authorization check.",
                    "format": "int64",
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsOAuthConsumerProto": {
            "description": "Represents an OAuth consumer, a/k/a AuthSub target.\nThese principals are identified by domain name (e.g., example.com).\nHistorically, Dasher domain GAIA group IDs have been used instead,\nbut that doesn't work: http://go/tricky-gaia-ids",
            "id": "SecurityCredentialsOAuthConsumerProto",
            "properties": {
                "domain": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsPostiniUserProto": {
            "description": "See\nhttp://s/?fileprint=//depot/google3/security/authentication/postini/auth_token.proto",
            "id": "SecurityCredentialsPostiniUserProto",
            "properties": {
                "postiniUserId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsPrincipalProto": {
            "description": "A Principal represents something to which permissions are assigned,\noften but not always a user or group of some kind. It is most\nappropriate for use in ACLs and authorization checks.\n\nCallers should prefer to use the wrapper classes in\n  java/com/google/security/credentials (Java)\n  security/credentials (C++)\nunless direct proto access is essential. If you update this protocol buffer,\nplease update the wrapper classes as well.",
            "id": "SecurityCredentialsPrincipalProto",
            "properties": {
                "allAuthenticatedUsers": {
                    "$ref": "SecurityCredentialsAllAuthenticatedUsersProto",
                    "description": "scope = ALL_AUTHENTICATED_USERS"
                },
                "capTokenHolder": {
                    "$ref": "SecurityCredentialsCapTokenHolderProto",
                    "description": "scope = CAP_TOKEN_HOLDER"
                },
                "chat": {
                    "$ref": "SecurityCredentialsChatProto",
                    "description": "scope = CHAT"
                },
                "circle": {
                    "$ref": "SecurityCredentialsCircleProto",
                    "description": "scope = CIRCLE"
                },
                "contactGroup": {
                    "$ref": "SecurityCredentialsContactGroupProto",
                    "description": "scope = CONTACT_GROUP"
                },
                "emailOwner": {
                    "$ref": "SecurityCredentialsEmailOwnerProto",
                    "description": "scope = EMAIL_OWNER"
                },
                "event": {
                    "$ref": "SecurityCredentialsEventProto",
                    "description": "scope = EVENT"
                },
                "gaiaGroup": {
                    "$ref": "SecurityCredentialsGaiaGroupProto",
                    "description": "scope = GAIA_GROUP"
                },
                "gaiaUser": {
                    "$ref": "SecurityCredentialsGaiaUserProto",
                    "description": "scope = GAIA_USER"
                },
                "host": {
                    "$ref": "SecurityCredentialsHostProto",
                    "description": "scope = HOST"
                },
                "ldapGroup": {
                    "$ref": "SecurityCredentialsLdapGroupProto",
                    "description": "scope = LDAP_GROUP"
                },
                "ldapUser": {
                    "$ref": "SecurityCredentialsLdapUserProto",
                    "description": "scope = LDAP_USER"
                },
                "mdbGroup": {
                    "$ref": "SecurityCredentialsMdbGroupProto",
                    "description": "scope = MDB_GROUP"
                },
                "mdbUser": {
                    "$ref": "SecurityCredentialsMdbUserProto",
                    "description": "scope = MDB_USER"
                },
                "oauthConsumer": {
                    "$ref": "SecurityCredentialsOAuthConsumerProto",
                    "description": "scope = OAUTH_CONSUMER;"
                },
                "postiniUser": {
                    "$ref": "SecurityCredentialsPostiniUserProto",
                    "description": "scope = POSTINI_USER"
                },
                "rbacRole": {
                    "$ref": "SecurityCredentialsRbacRoleProto",
                    "description": "scope = RBAC_ROLE"
                },
                "rbacSubject": {
                    "$ref": "SecurityCredentialsRbacSubjectProto",
                    "description": "scope = RBAC_SUBJECT"
                },
                "resourceRole": {
                    "$ref": "SecurityCredentialsResourceRoleProto",
                    "description": "scope = RESOURCE_ROLE"
                },
                "scope": {
                    "description": "This is only optional because required enums cannot be extended.\nCurrently required.",
                    "enum": [
                        "INVALID",
                        "GAIA_USER",
                        "GAIA_GROUP",
                        "LDAP_USER",
                        "LDAP_GROUP",
                        "MDB_USER",
                        "MDB_GROUP",
                        "POSTINI_USER",
                        "CONTACT_GROUP",
                        "SIMPLE_SECRET_HOLDER",
                        "SIGNING_KEY_POSSESSOR",
                        "ALL_AUTHENTICATED_USERS",
                        "OAUTH_CONSUMER",
                        "HOST",
                        "SOCIAL_GRAPH_NODE",
                        "EMAIL_OWNER",
                        "CAP_TOKEN_HOLDER",
                        "CIRCLE",
                        "SQUARE",
                        "EVENT",
                        "RESOURCE_ROLE",
                        "CHAT",
                        "YOUTUBE_USER",
                        "UNUSED_ZWIEBACK_SESSION",
                        "ZWIEBACK_SESSION",
                        "RBAC_ROLE",
                        "RBAC_SUBJECT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "next tag: 28"
                    ],
                    "type": "string"
                },
                "signingKeyPossessor": {
                    "$ref": "SecurityCredentialsSigningKeyPossessorProto",
                    "description": "scope = SIGNING_KEY_POSSESSOR"
                },
                "simpleSecretHolder": {
                    "$ref": "SecurityCredentialsSimpleSecretHolderProto",
                    "description": "scope = SIMPLE_SECRET_HOLDER"
                },
                "socialGraphNode": {
                    "$ref": "SecurityCredentialsSocialGraphNodeProto",
                    "description": "scope = SOCIAL_GRAPH_NODE"
                },
                "square": {
                    "$ref": "SecurityCredentialsSquareProto",
                    "description": "scope = SQUARE"
                },
                "youtubeUser": {
                    "$ref": "SecurityCredentialsYoutubeUserProto",
                    "description": "scope = YOUTUBE_USER"
                },
                "zwiebackSession": {
                    "$ref": "SecurityCredentialsZwiebackSessionProto",
                    "description": "scope = ZWIEBACK_SESSION"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsRbacRoleProto": {
            "description": "Principal associated with a given RBAC role. This principal is used by\nSphinx Provisioning Service for RBAC (go/cedi-auth) provisionable\n(go/sphinx-rbacz-design).",
            "id": "SecurityCredentialsRbacRoleProto",
            "properties": {
                "name": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "rbacNamespace": {
                    "description": "DEPRECATED as of 01.11.2019",
                    "type": "string"
                },
                "rbacRoleName": {
                    "description": "Format: \"RbacNamespaceName.RbacRoleName(/field=value)*\", e.g.,\n\"hr.v1.Reader\",\n\"hr.v1.Reader/language=EN_US/country=USA/room=NYC-9th-11A201\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsRbacSubjectProto": {
            "description": "Principal associated with a given RBAC subject. This principal is used by\nSphinx Provisioning Service for RBAC (go/cedi-auth) provisionable\n(go/sphinx-rbacz-design).",
            "id": "SecurityCredentialsRbacSubjectProto",
            "properties": {
                "username": {
                    "description": "Format \"username\" without \"@domain\", e.g., \"bogdand\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsResourceRoleProto": {
            "description": "A type of sharing target that points to some resource's ACL.\nUsed to refer to the set of Principals that have the given privilege\n('role_id') for the given resource ('application_id', 'object_id',\n'object_part').   The meaning of 'role_id' is interpreted only by\nimplementations of AclRpcService and is usually dependent on 'application_id'\nAll fields except object_part are required.  If present, object_part\nmust be non-empty.",
            "id": "SecurityCredentialsResourceRoleProto",
            "properties": {
                "applicationId": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "objectPart": {
                    "type": "string"
                },
                "roleId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsSigningKeyPossessorProto": {
            "description": "Represents a principal who possesses a signing key corresponding to the\nverification key described here.",
            "id": "SecurityCredentialsSigningKeyPossessorProto",
            "properties": {
                "keymasterKeyType": {
                    "description": "This value must be from the KeyMetadata.Type enum in keymaster.proto",
                    "format": "int32",
                    "type": "integer"
                },
                "serializedVerificationKey": {
                    "description": "The actual verification key bytes corresponding to the above type",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsSimpleSecretHolderProto": {
            "description": "Represents a principal which possesses a particular, presumably\nsecret, string.  Useful for things like \"auth keys,\" used for\nanonymous sharing. Since representing this principal with the actual\nsecret included reveals the secret, it's best if the requisite condition is\nenforced in some other way, for example via Keystore wrapping attributes\n(Keystore will unwrap only if the specified secret, aka \"attribute\",\nis presented). All that's stored here is an identifying label.",
            "id": "SecurityCredentialsSimpleSecretHolderProto",
            "properties": {
                "label": {
                    "$ref": "SecurityCredentialsSimpleSecretLabelProto",
                    "description": "A descriptive label to help identify a relevant ACL entry or\notherwise disambiguate this instance."
                }
            },
            "type": "object"
        },
        "SecurityCredentialsSimpleSecretLabelProto": {
            "description": "SimpleSecretProto (in authenticator.proto) and SimpleSecretHolderProto\n(below) share the notion of a \"label\", which identifies a particular secret\nwithout (hopefully) revealing the secret.\n\nNote that a SimpleSecretLabel only disambiguates between secrets used to\nget access to some particular object.  Two different secrets that apply to\ntwo different objects could have the same label.  For example, in the\ncommon sharing model, each object has no more than one \"auth key\".\nTherefore, the label for an auth key simply has type = AUTH_KEY with no\nadditional information.\n\nIn theory, we could add some sort of resource ID to SimpleSecretLabel to\nmake it more explicit.  However, in practice, this is never really needed.\nA SimpleSecret for one object is never used to authorize a request on some\nother object, so there is no ambiguity.  Also, since SimpleSecrets must\nobviously be unguessable, there is no risk that a SimpleSecret intended\nfor one object will accidentally grant access to another.",
            "id": "SecurityCredentialsSimpleSecretLabelProto",
            "properties": {
                "capabilityId": {
                    "description": "***DEPRECATED (3-Oct-2011) ***\nThis field should be deleted when code stops using CAP_TOKEN labels.\n\nUsed when type = CAP_TOKEN.\nWhen a CAP_TOKEN label appears in a SimpleSecretHolder Principal,\n|capability_id| must be filled in to identify one of the capabilities on\nthe ACL.  When a CAP_TOKEN label appears in a SimpleSecret Authenticator,\nit is NOT necessary to fill in |capability_id| -- ACL Service will find\nthe ID by searching all capabilities on the ACL for one associated with\nthe token given by the SimpleSecret's secret data.  If |capability_id| is\nspecified, though, then the Authenticator will only be accepted if it\nactually matches that particular token ID.",
                    "format": "int32",
                    "type": "integer"
                },
                "genericLabel": {
                    "description": "Used when type = GENERIC_SECRET",
                    "format": "byte",
                    "type": "string"
                },
                "inviteId": {
                    "description": "Used when type == INVITE.",
                    "format": "int64",
                    "type": "string"
                },
                "type": {
                    "description": "This is optional because required enums cannot be extended.",
                    "enum": [
                        "INVALID",
                        "AUTH_KEY",
                        "INVITE",
                        "GENERIC_SECRET",
                        "CAP_TOKEN",
                        "REKE"
                    ],
                    "enumDescriptions": [
                        "Used as a default value.",
                        "The singleton auth key for a common-sharing ACL.  No other fields of\nSimpleSecretLabelProto need to be filled in, since there is only one of\nthese per ACL.  The corresponding secret is the auth key encoded in\n64-bit big-endian.",
                        "A common-sharing invite token.  |invite_id| (below) must be set to\nidentify the invite.  The corresponding secret is the SecretMaterial, as\ndefined by InviteToken.SecretMaterial in acl.proto, encoded in 64-bit\nbig-endian.  If there is no SecretMaterial, the secret should be omitted;\nin this case the invite ID itself is the secret, which is less secure.",
                        "A generic secret value. Do not use this if any more specific type is\nappropriate.",
                        "***DEPRECATED (3-Oct-2011)***\nUse the new CapTokenProto and CapTokenHolderProto instead.\n\nA capability token.  The corresponding secret is an arbitrary-length\nrandom byte string (recommended: 128 bits).  |capability_id| may be\nfilled in (see below).\n\nSee CapTokenMetadata in acl.proto.",
                        "Identifies a principal that can perform a successful REKE handshake.\n\nThe holder is not authenticated by presenting a SimpleSecretProto, but\nrather by knowing either the REKE resumption ticket secret or the private\nkey corresponding to a public key specified outside the PrincipalProto.\nFor more information, see: http://goto.google.com/loas2cert"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsSocialGraphNodeProto": {
            "description": "Represents a user pseudonym.  Pseudonyms are linked accounts on Google and\nthird-party services (e.g. YouTube or Twitter) and are described by a Social\nGraph Node.",
            "id": "SecurityCredentialsSocialGraphNodeProto",
            "properties": {
                "sgnDomain": {
                    "description": "The fields from ccc/socialgraph/socialgraphnode.proto:SgnNode that uniquely\nidentify a social graph node.  The 'ident' field is not included here\nbecause its value can be changed.",
                    "type": "string"
                },
                "sgnPk": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsSquareProto": {
            "description": "Represents the set of members (of a given type) in a Google+ Square\n(see http://go/squares).\nA Square with default member_type is currently (1/2012) identical to the\nGaiaGroup with the same ID, but that is expected to change soon\n(see http://go/superglue).\n\nSupport for this principal type is currently (1/2012) incomplete --\ne.g., Keystore does not support it yet (see b/5703421).",
            "id": "SecurityCredentialsSquareProto",
            "properties": {
                "memberType": {
                    "description": "The type of Square members to consider, e.g. \"all members\" vs. \"owners\"\nvs. \"admins\".  These are defined by legacy_relation_id values in\nsocial.graph.storage.EdgeTypeEnum.EdgeType enum options in\nsocial/graph/storage/proto/id.proto.\nSee square.pb (defined in\nproduction/config/cdd/socialgraph/mixer_config/prod/node_type_config) for\nall valid edge types associated with square.\nCurrently required.",
                    "format": "int32",
                    "type": "integer"
                },
                "squareId": {
                    "description": "Currently required.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsYoutubeUserProto": {
            "id": "SecurityCredentialsYoutubeUserProto",
            "properties": {
                "youtubeUserId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecurityCredentialsZwiebackSessionProto": {
            "description": "See go/zwieback. New uses of Zwieback sessions must be approved via\ngo/zwieback-request.",
            "id": "SecurityCredentialsZwiebackSessionProto",
            "properties": {
                "zwiebackSessionId": {
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SocialCommonAttachmentAttachment": {
            "description": "An Attachment represents a linked entity associated with a piece of social\ncontent.  This may be a 1st-party or 3rd-party entity.\n\nIn the Papyrus context, an Attachment is part of a Cent, and sits alongside\nthe main content of the cent, which is represented as a sequence of Segments.\n\nRight now an Attachment is just a wrapper around an Embed, but we provide\nthe extra layer of abstraction since, as Embeds move to separate storage in\nBriefcase, we may want to add additional fields that are not part of the\nEmbed proper, but that (for example) relate to the usage of the linked\ncontent within the particular post/cent.",
            "id": "SocialCommonAttachmentAttachment",
            "properties": {
                "embedItem": {
                    "$ref": "EmbedsEmbedClientItem",
                    "description": "An embed represents an external entity.  See go/es-embeds."
                },
                "id": {
                    "description": "An id to uniquely identify an attachment when several attachments\nare in a collection.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SocialCommonFormatting": {
            "description": "Formatting information for a segment.",
            "id": "SocialCommonFormatting",
            "properties": {
                "bold": {
                    "type": "boolean"
                },
                "highlight": {
                    "description": "This indicates that the segment should be rendered as highlighted or\nvisually emphasized.",
                    "type": "boolean"
                },
                "italics": {
                    "type": "boolean"
                },
                "strikethrough": {
                    "type": "boolean"
                },
                "style": {
                    "description": "If set, this indicates that the segment should be rendered with the\nspecified style. The absence of an explicit style represents \"no style\",\ni.e. the segment can be rendered with the default style chosen by the\napplication.",
                    "enum": [
                        "UNKNOWN_STYLE",
                        "HEADING_1",
                        "HEADING_2",
                        "HEADING_3",
                        "HEADING_4"
                    ],
                    "enumDescriptions": [
                        "This represents a style that is unknown (e.g. a new style was introduced\nbut not supported by older mobile app versions) and should generally not\nbe used as a value in a proto. If the segment does not need to be\nrendered with a special style, the 'style' field should simply be left\nunset. A reasonable fallback for an unknown style is to render the\nsegment in the default style.",
                        "The most important heading to the least important heading.",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "underline": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SocialCommonHashtagData": {
            "description": "Hashtag metadata, for HASHTAG segments.\nFor a hashtag, the \"text\" field should contain the display text, and the\nsearch_text field should represent the topic being referenced, without the\nhash symbol; for example, we might have:\n  text = \"#Google\"\n  hashtag_data.search_text = \"Google\"\nAnother example:\n  text = \"#pikachu\"\n  hashtag_data.search_text = \"Pokemon\"\nBoth strings should be considered part of the searchable text. In go/sbe,\nboth are indexed and searchable.",
            "id": "SocialCommonHashtagData",
            "properties": {
                "searchText": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SocialCommonLinkData": {
            "description": "Link metadata, for LINK segments.\nAnchor text should be stored in the \"text\" field of the Segment, which can\nalso serve as a fallback.",
            "id": "SocialCommonLinkData",
            "properties": {
                "attachment": {
                    "$ref": "SocialCommonAttachmentAttachment",
                    "description": "An Attachment represents the structured entity to which we are linking.\nIt contains an Embed (apps/tacotown/proto/embeds/embed_client.proto) with\nfields specific to the appropriate type of linked entity.  For example, if\nwe are linking to a photo album, the Embed may include the album ID and\ngaia ID of the creator.  Clients that understand the Embed type within the\nAttachment may construct and/or decorate their link appropriately e.g. to\nmake use of type-specific functionality or first-party integrations.\n\nThe link_target and (if appropriate) display_url fields must still be set\neven when an Attachment is present, so that clients who do not know how to\ninterpret the Attachment can fall back to those fields, and render the\nSegment as an ordinary web link.\n\nN.B. Even when an Attachment is present, the intention of a \"LINK\" Segment\nis for the Segment to be presented inline with the rest of the text of a\npost or comment, with a clickable link or other UI suitable for inlining\n(though the client may modify the UI based on Attachment data, e.g. to add\nappropriate hovers, icons, etc.).  When an entity is intended to be\nrendered separately from the main body of the post/comment, a separate\nAttachment proto can be added outside the set of Segments.\n\nN.B. Within the Attachment, fields of EmbedClientItem have their own\nvisibility annotations, which should be enforced separately from\nSegment visibility annotations.  See:\napps/tacotown/proto/embeds/embed_annotations.proto"
                },
                "attachmentRenderHint": {
                    "description": "The hint to use when rendering the associated attachment.  Ignored\nif there is no associated attachment.",
                    "enum": [
                        "ATTACHMENT_RENDER_HINT_UNKNOWN",
                        "ATTACHMENT_RENDER_HINT_AFTER",
                        "ATTACHMENT_RENDER_HINT_INTERLEAVED"
                    ],
                    "enumDescriptions": [
                        "No rendering hint; should not be used (equivalent to having no hint)",
                        "Render any associated attachment at the end of the block, after all\nsibling Segments.  Leave the link in place in the text and render it\nnormally as well.",
                        "Render any associated attachment inline in the text in place of the\nlink text, forcing a line break before and after the attachment so\nthe text and the attachment are \"interleaved\".  If this is not possible,\nrender as if AFTER."
                    ],
                    "type": "string"
                },
                "displayUrl": {
                    "description": "If we wish to show the user a different (e.g. shortened) version of the\nURL for display purposes, then that version should be set here.  If this\nfield isn't set, link_target will be used for both purposes.",
                    "type": "string"
                },
                "linkTarget": {
                    "description": "link_target is the URL to navigate to when clicked.  This could be the\noriginal URL, or a URL signed by the GWS URL signing service.",
                    "type": "string"
                },
                "linkType": {
                    "description": "LinkType is an optional field that provides additional information\nregarding link target. For example, link type can be identified as\nthe SELF_LINK when the request was executed from the same link as the link\ntarget.",
                    "enum": [
                        "UNKNOWN_LINK_TYPE",
                        "SELF_LINK"
                    ],
                    "enumDescriptions": [
                        "No link type specified.",
                        "This indicates that the link target points to the same object related to\nthis segment. Example: A YouTube link with text=\"0.07\" and link_target:\n\"https://www.youtube.com/watch?v=leHVmSqd4_w&t=0m07s\" points to the same\nYouTube video where this segment appears.\nSee http://go/ignore-badwords-filtering-for-selflink for adding link_type\ndesign document."
                    ],
                    "type": "string"
                },
                "title": {
                    "description": "Title is an optional field that provides a short string that describes the\nlink or its destination.  User interfaces often use title as a tooltip or\nfor accessibility purposes.  However, they are of course free to present\nthis data in any form.  This field is plain text.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SocialCommonSegment": {
            "id": "SocialCommonSegment",
            "properties": {
                "formatting": {
                    "$ref": "SocialCommonFormatting",
                    "description": "Formatting to be applied when rendering the Segment.  For all segment\ntypes, this is the standard way of representing that the Segment should be\nrendered in bold, italics, etc."
                },
                "hashtagData": {
                    "$ref": "SocialCommonHashtagData",
                    "description": "For HASHTAG type:"
                },
                "linkData": {
                    "$ref": "SocialCommonLinkData",
                    "description": "Type-specific metadata.  At most one of these should be populated, and the\none that is populated should correspond to the type of the Segment.\nFor LINK type:"
                },
                "text": {
                    "description": "Text content of the Segment.\n\nAs a general rule, this field should contain the actual text that should\nbe rendered in the UI.  Thus, for a hashtag, it should be \"#Foo\", and for\na link, it should be the display text.\n\nClients that do not understand a particular segment type may use this\ntext, along with the Formatting info below, as a fallback for display.\nThe field is not required -- if all relevant information is carried in\nother metadata fields and there is no need for a fallback, or it is not\npractical for a fallback to be provided for any other reason, the field\nmay be left blank.  A standard example would be a user reference being\ntransmitted between server layers, where a gaia-ID representation may be\nsufficient and there is no need for a textual fallback.  In such a case,\nit would be valid and useful - though not required - for servers to\ncompute and populate a fallback on the serving path.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of Segment.",
                    "enum": [
                        "TEXT",
                        "LINE_BREAK",
                        "LINK",
                        "USER_MENTION",
                        "ALL_USER_MENTION",
                        "HASHTAG"
                    ],
                    "enumDescriptions": [
                        "A TEXT segment represents plain-text subject to particular formatting\nconstraints (as represented in the \"formatting\" field of the Segment).",
                        "A LINE_BREAK segment is simply a placeholder to represent a line break\nbetween other segments.  The \"text\" variable may be set to a newline\nas a fallback, but clients that understand this segment type should\nsimply insert a line break without needing to reference any fields.",
                        "A LINK segment represents a link to a web entity.  The \"text\" field\nshould be used for anchor text.  Additional link data should be put\nin the link_data protobuf.",
                        "A USER_MENTION segment represents a reference to a (possibly non-Gaia,\npossibly off-network) user.  The \"text\" field may be populated as a\nfallback, but information identifying the user should be contained in\nthe user_mention_data protobuf.  (The set of fields that are\npopulated in user_mention_data may differ depending on the context in\nwhich the segment is viewed, but the interpretation of the fields is\nuniform.  See comments over UserMentionData).",
                        "An ALL_USER_MENTION segment represents a reference to all users in the\ncontext, that is, the conversation, discussion, or other context\ncontaining the segment.\n\nFor example, an ALL_USER_MENTION segment (\"@all\") can be useful to ping\nall participants in a conversation if the notification setting of the\nconversation is not set to ping on normal messages.\n\nAn ALL_USER_MENTION should be treated as a USER_MENTION for all users who\nreceives the segment.",
                        "A HASHTAG segment represents a structured reference to a topic.  The\n\"text\" field should represent display text (e.g. \"#Google\"), and\nadditional metadata should be put in the Segment's hashtag_data field."
                    ],
                    "type": "string"
                },
                "userMentionData": {
                    "$ref": "SocialCommonUserMentionData",
                    "description": "For USER_MENTION type:"
                }
            },
            "type": "object"
        },
        "SocialCommonSegments": {
            "description": "Segments (go/social-segments) represent structured social content, e.g. the\ncontents of a G+ stream post or chat message.  A single post or message may\nconsist of a sequence of segments, each representing a type of content,\ne.g. plain text, hash tag, mention, etc.  Segments correspond approximately\nto units of content delimited by HTML tags, so that a piece of bolded text\nwould be a distinct Segment, a link would be a distinct Segment, and so\nforth.  A single Segment may have multiple such qualifiers; e.g. it may be\na bold link; in this case, information about all such qualifiers will be\nencoded in the Segment proto.",
            "id": "SocialCommonSegments",
            "properties": {
                "segments": {
                    "items": {
                        "$ref": "SocialCommonSegment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SocialCommonUserMentionData": {
            "description": "Person metadata, for USER_MENTION segments.\nShould always contain at least one of user_gaia_id, user_id, email or user.\nThe exact set of populated fields may differ depending on the context and\nthe level in the serving stack; for example, emails will be elided on the\nviewing path. But as a general rule, a proto having any one of the four\nis valid, subject to the standard constraints of the applied annotations --\nthat is, communication between servers and clients will ignore\njspb.ignore fields, and communication between servers and other servers\n(or between servers and storage) will ignore client_only fields.\nFor more on the annotations, see the comments\nin social/common/segment_annotations.proto",
            "id": "SocialCommonUserMentionData",
            "properties": {
                "email": {
                    "type": "string"
                },
                "user": {
                    "$ref": "SecurityCredentialsPrincipalProto",
                    "description": "If the principal is backed by a gaia id, DO NOT use this field.\nUse user_gaia_id/user_id fields instead."
                },
                "userGaiaId": {
                    "description": "An unobfuscated gaia ID:",
                    "format": "int64",
                    "type": "string"
                },
                "userId": {
                    "description": "An obfuscated gaia ID:",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SocialFrontendStreamVisualCard": {
            "description": "Card that is rendered in a stream.",
            "id": "SocialFrontendStreamVisualCard",
            "properties": {
                "cardType": {
                    "description": "Type of card.",
                    "enum": [
                        "CARD_TYPE_UNKNOWN",
                        "BASIC",
                        "SOCIAL_POST",
                        "COMMENT",
                        "MEDIA",
                        "MEDIA_CARD_WITH_DETAILS",
                        "PROCESS",
                        "BUNDLE",
                        "ENTITY",
                        "POLL",
                        "CONTAINER",
                        "DIMMMABLE_CONTAINER_CARD",
                        "REFERENCE",
                        "ACTIVITY_LOG_ITEM",
                        "ACTIVITY_LOG_CATEGORY_CARD",
                        "DEVICE_MANAGED_SETTING_CARD",
                        "SETTING_ACL_CARD",
                        "SETTING_BOOLEAN_CARD",
                        "SETTING_CARD",
                        "SETTING_GROUP_CARD",
                        "SETTING_GPLUS_LOCATION_CARD",
                        "SPACE_POST_CARD",
                        "STREAM_PLACEHOLDER",
                        "SPACE_COMMENT_BUNDLE_CARD",
                        "SPACE_COMMENT_CARD",
                        "SPACE_LINK_PREVIEW_CARD",
                        "SPACE_RECENT_LINK_CARD",
                        "SPACE_SOURCED_IMAGE_CARD",
                        "SPACE_STREAM_CONTENT_SEARCH_CARD",
                        "SPACE_STREAM_CONTENT_SEARCH_HEADER_CARD",
                        "PARTIAL_ALBUM_CARD",
                        "MEDIA_PICKER_CAMERA_CARD",
                        "MEDIA_PICKER_GALLERY_CARD",
                        "MEDIA_PICKER_MEDIA_CARD",
                        "MEDIA_PICKER_HEADER_CARD",
                        "NAV_DRAWER_ITEM_CARD",
                        "SOCIETY_COMMENT_CARD",
                        "SOCIETY_CONVERSATION_CARD",
                        "SOCIETY_NEW_CONVERSATION_CARD",
                        "NOTORIOUS_NOTE_CARD",
                        "PLUS_POST_ACTIVITIES_CARD",
                        "PLUS_MINI_SHAREBOX_CARD",
                        "PLUS_ENTITY_CREATE_CARD",
                        "PLUS_ENTITY_INVITE_CARD",
                        "PLUS_ENTITY_PREVIEW_CARD",
                        "PLUS_NOTIFICATION_CARD",
                        "PLUS_SUGGESTION_CARD",
                        "PLUS_COLLEXION_HEADER_CARD",
                        "PLUS_PROFILE_HEADER_CARD",
                        "PLUS_SQUARE_HEADER_CARD",
                        "PLUS_LOAD_MORE_CARD",
                        "EXTENSION_TYPE_CARD",
                        "STREAM_LOAD_MORE_CARD",
                        "PLUS_MEDIA_CARD",
                        "PAISA_CARD",
                        "SPACE_GOOGLE_SEARCH_RESULT_CARD",
                        "ICON_TWO_LINES_TEXT_CARD",
                        "YOU_TUBE_MEDIA_CARD",
                        "QUICKSTART_COMMENT_CARD",
                        "PLUS_MEDIA_ITEM_OVERLAY_CARD",
                        "PLUS_MEDIA_CARD_WITH_DETAILS",
                        "PLUS_MEDIA_ITEM_CARD",
                        "PLUS_ALBUM_DETAILS_CARD",
                        "PLUS_VIDEO_CARD",
                        "PLUS_SQUARE_CATEGORIES_CARD",
                        "SQUARE_MEMBER_MODERATION_CARD",
                        "SQUARE_POST_MODERATION_CARD",
                        "SQUARE_SPAM_POST_MODERATION_CARD",
                        "SQUARE_BULK_MODERATION_WRAPPER_CARD",
                        "PLUS_CAPTION_CARD",
                        "HEADER_FOOTER_CARD",
                        "PLUS_TOPIC_CARD",
                        "STYLED_STRING_CARD",
                        "PLUS_COMMENT_ACTIVITIES_CARD",
                        "TEMP_PEOPLE_ENTITY_CARD",
                        "KHAZANA_CARD",
                        "PLUS_AUTOCOMPLETE_CARD",
                        "SQUARE_CATEGORY_WRAPPER_CARD",
                        "PLUS_SEARCH_HISTORY_CARD",
                        "INSIGHT_CARD",
                        "MULTIPLE_CHOICE_CARD",
                        "EMPTY_STREAM_CARD",
                        "PLUS_EMPTY_STREAM_CARD",
                        "PLUS_USER_CARD",
                        "PLUS_MENTION_USER_CARD",
                        "PLUS_FOLLOW_ACTION_CARD",
                        "PLUS_DOMAIN_RESTRICTED_ACTION_CARD",
                        "PLUS_USER_CIRCLE_CARD",
                        "PLUS_IN_CIRCLES_ACTION_CARD",
                        "TAG_CARD",
                        "TAG_FOLLOW_ACTION_CARD",
                        "TAG_WITH_ACTION_CARD",
                        "TAG_AUTOCOMPLETE_CARD",
                        "PLUS_INTERACTION_RESTRICTED_ACTION_CARD",
                        "PLUS_UNBLOCK_ACTION_CARD",
                        "LINEAR_LAYOUT_CARD",
                        "CUSTOM_STREAM_ITEM_CARD",
                        "APP_UPGRADE_CARD",
                        "SQUARE_MODERATION_INFO_CARD",
                        "STREAM_BUTTON_CARD"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "Representation that provides a basic summary of content. Catch-all card.\nDefault embed representation used for web page, article, and actionable\ncontent references.  If looking for a card to use, start with this one.",
                        "Update post.",
                        "Comment typically rendered in a stream that is part of a ConversationCard\nassociated with a post.",
                        "Representation of media content, such as a shared image or album.",
                        "Card that has media details with media card. See go/gplus-lightbox-cards",
                        "Card that allows a user to go through a sequence of steps.\nUsed in Promo scenarios, such as \"Complete your profile\".",
                        "Card that provides a group of Cards, such as Basic, SocialPost, or Entity.\nThis may be used for Promo scenarios, such as \"You Might Like\" to contain\na group of Entity cards to display.",
                        "Card that allows a user to see content that corresponds to a PlusEntity,\nsuch as a user, square, or collexion.  Used in Promo scenarios, such\nas \"You Might Like\".",
                        "Representation of a Poll, which surfaces the ability to vote on various\noptions.  Typically rendered as content in a SocialPostCard.",
                        "Card that contains an embedded Card where the rendered data is primarily\nprovided by the embedded Card. The Card must have a card id that is\ndifferent from the embedded card's card id.  Used in scenarios, such as +1\nposts in G+.",
                        "Wrapper card for applying dynamic, full-card dimming to arbitrary\nwrapped cards. See https://screenshot.googleplex.com/AuH0pNr0ka4",
                        "Card that should only be used as a reference and does not contain an\nextension.  The client should have another means of extracting the full\nCard from another source, such as a local database.",
                        "Card that represents an activity log item suitable for display in an\nactivity log.  See go/activitylog-design.",
                        "Card representing an Activity Log Category that is associated with an\nActivity Stream. See go/quickstart-activitylog-component-support.",
                        "Card that represents a device managed setting in the settings page.\nSee go/toolkit-settings-dd.\nDEPRECATED: TODO(b/25435352) Delete this card.",
                        "Card that represents a ACL setting data in the settings page.\nSee go/toolkit-settings-dd.",
                        "Card that represents a boolean setting data in the settings page.\nSee go/toolkit-settings-dd.",
                        "Card that represents setting data in the settings page.\nSee go/toolkit-settings-dd.",
                        "Card that represents a group of 'settings' or 'settings group'\nin the settings page.  // See go/toolkit-settings-dd.",
                        "Card that represents a device managed setting for google location settings.\nSee go/toolkit-settings-dd.",
                        "Card that represents a space post. See go/spaces-stream-android.",
                        "Client only Card.  Never sent from server.  Meant for clients to use as\na place holder while reading Cards from memory. See b/24385062 for details.",
                        "Card that represents a group of space comments.",
                        "Card that represents a space comment. See go/spaces-stream-android.",
                        "Card that represents a preview of a web url in Spaces.",
                        "Card that represents a recent link in Spaces content recommendations.",
                        "Card that represents an image with a source somewhere on the web.",
                        "Card that represent a space content search result.",
                        "Card that represent a date header within the space content search page.",
                        "Card that represents a partial album.",
                        "MEDIAPICKER_...: Cards used by toolkit/mediapicker2 to select local media.\nSee go/mediapicker-cardtypes\nCard that allows the user to select a photo they then take with camera.",
                        "Card allows user to select media from Google Photos Gallery.",
                        "Card allows user to select a photo or video from their local mediastore.",
                        "Card that segments other cards into a grouped collections",
                        "Card that represents a generic navdrawer item.",
                        "Society client-side GSTS card for comments.",
                        "Society client-side GSTS card.",
                        "Society client-side card that allows the user to create new conversations",
                        "Notorious client side GSTS card.",
                        "Card that represents G+ post activities. See go/gplus-post-activities",
                        "Card that represents the G+ mini sharebox. See go/mini_sharebox_card",
                        "Card to create a G+ Entity.See go/create_entity_card",
                        "Card that represents a square invite.",
                        "Card that shows a preview of a G+ Entity (e.g. Collexion, Community)\nSee go/gsts-plusentity-preview-card",
                        "Card for a G+ in-app notification. See go/plus-notification-card",
                        "Card that represents a suggestion promo. See go/plus_suggest_gsts_card",
                        "Card that represents a G+ Collexion header.\nSee go/gplus-entity-header-card",
                        "Card that represents a G+ Profile header.\nSee go/gplus-entity-header-card",
                        "Card that represents a G+ Square header.\nSee go/gplus-entity-header-card",
                        "Client-side card that allows a stream to show a load more card.\nSee go/plus-load-more-card",
                        "Card provides card type data in a Card extension that is typically\napplication specific.",
                        "Stream client-side card that allows to show a load more or spinner card.",
                        "Representation of G+ media content, such as a shared image or album.",
                        "Paisa client side GSTS card. See go/paisa.",
                        "Card that shows a Google search result.",
                        "Card that shows a local icon and two lines.",
                        "Card that represents a YouTube video. See go/youtube-media-card.",
                        "Card that represents a Quickstart comment. See go/quickstart-comment-card",
                        "Card to render the overlay on a single media item in Lightbox.\nSee go/gplus-lightbox-cards",
                        "Card to render the details of the single media item in G+ Lightbox.\nSee go/gplus-lightbox-cards",
                        "Card to render the media item in G+ Lightbox. See go/gplus-lightbox-cards",
                        "Card to render the details of an album. See go/gplus-lightbox-cards",
                        "Definition of the plus specific video card. See go/gplus-lightbox-cards",
                        "Card for a list of square categories.",
                        "Card to allow moderators to manage a member's community status.\nSee go/gsts-square-member-moderation-card",
                        "Card to render a community post that is held for review.\nSee go/gsts-square-moderation-card",
                        "Card to render a community spam post that is held for review.\nSee go/gsts-square-moderation-card",
                        "Client-side Card to wrap the various Square Moderation Cards that will\nupdate the Applicable Scenario when bulk moderation is enabled. See\ngo/gsts-square-bulk-moderation-wrapper-card.",
                        "Card to render a caption next to other cards in a HeaderFooterCard.\nSee go/gsts-plus-caption-card.",
                        "Card to render a piece of content with header and footer cards.\nSee go/gsts-square-moderation-card",
                        "Card that represents a G+ Topic.  See go/gsts-plus-topic-card.",
                        "Card to render a single styled string with configurable layout options.\nSee go/styled-string-card.",
                        "Card to render users who have +1ed G+ comments.\nSee go/comment-plus-one-list-cards",
                        "Card to render people entities.\nSee go/gsts-temp-people-entitycard",
                        "Khazana client side GSTS card. See go/khazana-gsts-cards.",
                        "Card to render a search autocomplete item in G+.",
                        "Client-side Card to wrap a Square category Stream's Cards that allows for\nthe ApplicableScenario to be changed when a Square Category Stream is being\nviewed. See go/square_category_wrapper_card",
                        "Card to render a search history item in G+. See\ngo/agp-lightspeed-search-autocomplete.",
                        "Card to render Square insights.\nSee go/square-insight-card",
                        "Card to render a picker from a supplied list of options.\nSee go/multiple-choice-card",
                        "Card to display promo text when there is no posts in a Stream. See\ngo/gsts-empty-stream-card",
                        "Card wraps a EMPTY_STREAM_CARD and also contains G+ specific data. See\ngo/plus-empty-stream-card",
                        "Card to render basic information about a G+ user.\nSee go/gsts-plus-user-card.",
                        "Card which wraps some user card and handles a plus mention specific click\naction.",
                        "Card to render follow action. See go/plus-user-card-actions",
                        "Card to render domain restricted action. See go/plus-user-card-actions",
                        "Card which wraps some user card and handles circle related action.\nDEPRECATED: use LinearLayoutCard instead.",
                        "Card to render the option to change circle membership for a user.\nSee go/plus-user-card-actions",
                        "Card to render a Tag with an avatar and description\nSee go/plus-tags-gsts-cards",
                        "Card to render a follow button for a tag\nSee go/plus-tags-gsts-cards",
                        "Wrapper card to contain a tag_card and an associated action\nSee go/plus-tags-gsts-cards",
                        "Autocomplete card for tags. See go/plus-tags-gsts-cards",
                        "Card to render interaction restricted action. See go/plus-user-card-actions",
                        "Card to render unblock action. See go/plus-user-card-actions",
                        "Card which renders child cards in a linear configuration, with configurable\nlayout options. See go/gsts-linear-layout-card.",
                        "Card which renders a custom admin stream item in the list of streams page.\nSee go/custom-stream-item-card.",
                        "Card which renders an Application Upgrade Card.\nSee go/app-upgrade-card.",
                        "Card for rendering an info card in a square moderation stream. see\ngo/moderation_stream_info_gsts . This card is expected to be created from\nthe client and thus does not contain layout prefs, text fields etc.",
                        "Card for rendering a button in a stream.\nSee go/button-card."
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "The id is unique across streams.  For example, a card id should be the same\nwhen returned in both the stream and 1-up view if it references the same\ncontent and the card type is the same.\nThis may match the {@link apps.people.activity.backend.Activity} id for G+\nposts and the {@link social.promo.Promo} key for promos.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SocialFrontendStreamVisualClientCardCapabilities": {
            "description": "Data sent by the client to inform the server of the level of GSTS support\nthe client is capable of providing.  The server will not send down types\nthat don't match what is specified.  If the ClientCardCapabilities are not\nsent by the client when making a stream request, then the server will not\nsend any GSTS Cards.",
            "id": "SocialFrontendStreamVisualClientCardCapabilities",
            "properties": {
                "cardType": {
                    "description": "List of card types supported by the client.",
                    "enumDescriptions": [
                        "Unknown.",
                        "Representation that provides a basic summary of content. Catch-all card.\nDefault embed representation used for web page, article, and actionable\ncontent references.  If looking for a card to use, start with this one.",
                        "Update post.",
                        "Comment typically rendered in a stream that is part of a ConversationCard\nassociated with a post.",
                        "Representation of media content, such as a shared image or album.",
                        "Card that has media details with media card. See go/gplus-lightbox-cards",
                        "Card that allows a user to go through a sequence of steps.\nUsed in Promo scenarios, such as \"Complete your profile\".",
                        "Card that provides a group of Cards, such as Basic, SocialPost, or Entity.\nThis may be used for Promo scenarios, such as \"You Might Like\" to contain\na group of Entity cards to display.",
                        "Card that allows a user to see content that corresponds to a PlusEntity,\nsuch as a user, square, or collexion.  Used in Promo scenarios, such\nas \"You Might Like\".",
                        "Representation of a Poll, which surfaces the ability to vote on various\noptions.  Typically rendered as content in a SocialPostCard.",
                        "Card that contains an embedded Card where the rendered data is primarily\nprovided by the embedded Card. The Card must have a card id that is\ndifferent from the embedded card's card id.  Used in scenarios, such as +1\nposts in G+.",
                        "Wrapper card for applying dynamic, full-card dimming to arbitrary\nwrapped cards. See https://screenshot.googleplex.com/AuH0pNr0ka4",
                        "Card that should only be used as a reference and does not contain an\nextension.  The client should have another means of extracting the full\nCard from another source, such as a local database.",
                        "Card that represents an activity log item suitable for display in an\nactivity log.  See go/activitylog-design.",
                        "Card representing an Activity Log Category that is associated with an\nActivity Stream. See go/quickstart-activitylog-component-support.",
                        "Card that represents a device managed setting in the settings page.\nSee go/toolkit-settings-dd.\nDEPRECATED: TODO(b/25435352) Delete this card.",
                        "Card that represents a ACL setting data in the settings page.\nSee go/toolkit-settings-dd.",
                        "Card that represents a boolean setting data in the settings page.\nSee go/toolkit-settings-dd.",
                        "Card that represents setting data in the settings page.\nSee go/toolkit-settings-dd.",
                        "Card that represents a group of 'settings' or 'settings group'\nin the settings page.  // See go/toolkit-settings-dd.",
                        "Card that represents a device managed setting for google location settings.\nSee go/toolkit-settings-dd.",
                        "Card that represents a space post. See go/spaces-stream-android.",
                        "Client only Card.  Never sent from server.  Meant for clients to use as\na place holder while reading Cards from memory. See b/24385062 for details.",
                        "Card that represents a group of space comments.",
                        "Card that represents a space comment. See go/spaces-stream-android.",
                        "Card that represents a preview of a web url in Spaces.",
                        "Card that represents a recent link in Spaces content recommendations.",
                        "Card that represents an image with a source somewhere on the web.",
                        "Card that represent a space content search result.",
                        "Card that represent a date header within the space content search page.",
                        "Card that represents a partial album.",
                        "MEDIAPICKER_...: Cards used by toolkit/mediapicker2 to select local media.\nSee go/mediapicker-cardtypes\nCard that allows the user to select a photo they then take with camera.",
                        "Card allows user to select media from Google Photos Gallery.",
                        "Card allows user to select a photo or video from their local mediastore.",
                        "Card that segments other cards into a grouped collections",
                        "Card that represents a generic navdrawer item.",
                        "Society client-side GSTS card for comments.",
                        "Society client-side GSTS card.",
                        "Society client-side card that allows the user to create new conversations",
                        "Notorious client side GSTS card.",
                        "Card that represents G+ post activities. See go/gplus-post-activities",
                        "Card that represents the G+ mini sharebox. See go/mini_sharebox_card",
                        "Card to create a G+ Entity.See go/create_entity_card",
                        "Card that represents a square invite.",
                        "Card that shows a preview of a G+ Entity (e.g. Collexion, Community)\nSee go/gsts-plusentity-preview-card",
                        "Card for a G+ in-app notification. See go/plus-notification-card",
                        "Card that represents a suggestion promo. See go/plus_suggest_gsts_card",
                        "Card that represents a G+ Collexion header.\nSee go/gplus-entity-header-card",
                        "Card that represents a G+ Profile header.\nSee go/gplus-entity-header-card",
                        "Card that represents a G+ Square header.\nSee go/gplus-entity-header-card",
                        "Client-side card that allows a stream to show a load more card.\nSee go/plus-load-more-card",
                        "Card provides card type data in a Card extension that is typically\napplication specific.",
                        "Stream client-side card that allows to show a load more or spinner card.",
                        "Representation of G+ media content, such as a shared image or album.",
                        "Paisa client side GSTS card. See go/paisa.",
                        "Card that shows a Google search result.",
                        "Card that shows a local icon and two lines.",
                        "Card that represents a YouTube video. See go/youtube-media-card.",
                        "Card that represents a Quickstart comment. See go/quickstart-comment-card",
                        "Card to render the overlay on a single media item in Lightbox.\nSee go/gplus-lightbox-cards",
                        "Card to render the details of the single media item in G+ Lightbox.\nSee go/gplus-lightbox-cards",
                        "Card to render the media item in G+ Lightbox. See go/gplus-lightbox-cards",
                        "Card to render the details of an album. See go/gplus-lightbox-cards",
                        "Definition of the plus specific video card. See go/gplus-lightbox-cards",
                        "Card for a list of square categories.",
                        "Card to allow moderators to manage a member's community status.\nSee go/gsts-square-member-moderation-card",
                        "Card to render a community post that is held for review.\nSee go/gsts-square-moderation-card",
                        "Card to render a community spam post that is held for review.\nSee go/gsts-square-moderation-card",
                        "Client-side Card to wrap the various Square Moderation Cards that will\nupdate the Applicable Scenario when bulk moderation is enabled. See\ngo/gsts-square-bulk-moderation-wrapper-card.",
                        "Card to render a caption next to other cards in a HeaderFooterCard.\nSee go/gsts-plus-caption-card.",
                        "Card to render a piece of content with header and footer cards.\nSee go/gsts-square-moderation-card",
                        "Card that represents a G+ Topic.  See go/gsts-plus-topic-card.",
                        "Card to render a single styled string with configurable layout options.\nSee go/styled-string-card.",
                        "Card to render users who have +1ed G+ comments.\nSee go/comment-plus-one-list-cards",
                        "Card to render people entities.\nSee go/gsts-temp-people-entitycard",
                        "Khazana client side GSTS card. See go/khazana-gsts-cards.",
                        "Card to render a search autocomplete item in G+.",
                        "Client-side Card to wrap a Square category Stream's Cards that allows for\nthe ApplicableScenario to be changed when a Square Category Stream is being\nviewed. See go/square_category_wrapper_card",
                        "Card to render a search history item in G+. See\ngo/agp-lightspeed-search-autocomplete.",
                        "Card to render Square insights.\nSee go/square-insight-card",
                        "Card to render a picker from a supplied list of options.\nSee go/multiple-choice-card",
                        "Card to display promo text when there is no posts in a Stream. See\ngo/gsts-empty-stream-card",
                        "Card wraps a EMPTY_STREAM_CARD and also contains G+ specific data. See\ngo/plus-empty-stream-card",
                        "Card to render basic information about a G+ user.\nSee go/gsts-plus-user-card.",
                        "Card which wraps some user card and handles a plus mention specific click\naction.",
                        "Card to render follow action. See go/plus-user-card-actions",
                        "Card to render domain restricted action. See go/plus-user-card-actions",
                        "Card which wraps some user card and handles circle related action.\nDEPRECATED: use LinearLayoutCard instead.",
                        "Card to render the option to change circle membership for a user.\nSee go/plus-user-card-actions",
                        "Card to render a Tag with an avatar and description\nSee go/plus-tags-gsts-cards",
                        "Card to render a follow button for a tag\nSee go/plus-tags-gsts-cards",
                        "Wrapper card to contain a tag_card and an associated action\nSee go/plus-tags-gsts-cards",
                        "Autocomplete card for tags. See go/plus-tags-gsts-cards",
                        "Card to render interaction restricted action. See go/plus-user-card-actions",
                        "Card to render unblock action. See go/plus-user-card-actions",
                        "Card which renders child cards in a linear configuration, with configurable\nlayout options. See go/gsts-linear-layout-card.",
                        "Card which renders a custom admin stream item in the list of streams page.\nSee go/custom-stream-item-card.",
                        "Card which renders an Application Upgrade Card.\nSee go/app-upgrade-card.",
                        "Card for rendering an info card in a square moderation stream. see\ngo/moderation_stream_info_gsts . This card is expected to be created from\nthe client and thus does not contain layout prefs, text fields etc.",
                        "Card for rendering a button in a stream.\nSee go/button-card."
                    ],
                    "items": {
                        "enum": [
                            "CARD_TYPE_UNKNOWN",
                            "BASIC",
                            "SOCIAL_POST",
                            "COMMENT",
                            "MEDIA",
                            "MEDIA_CARD_WITH_DETAILS",
                            "PROCESS",
                            "BUNDLE",
                            "ENTITY",
                            "POLL",
                            "CONTAINER",
                            "DIMMMABLE_CONTAINER_CARD",
                            "REFERENCE",
                            "ACTIVITY_LOG_ITEM",
                            "ACTIVITY_LOG_CATEGORY_CARD",
                            "DEVICE_MANAGED_SETTING_CARD",
                            "SETTING_ACL_CARD",
                            "SETTING_BOOLEAN_CARD",
                            "SETTING_CARD",
                            "SETTING_GROUP_CARD",
                            "SETTING_GPLUS_LOCATION_CARD",
                            "SPACE_POST_CARD",
                            "STREAM_PLACEHOLDER",
                            "SPACE_COMMENT_BUNDLE_CARD",
                            "SPACE_COMMENT_CARD",
                            "SPACE_LINK_PREVIEW_CARD",
                            "SPACE_RECENT_LINK_CARD",
                            "SPACE_SOURCED_IMAGE_CARD",
                            "SPACE_STREAM_CONTENT_SEARCH_CARD",
                            "SPACE_STREAM_CONTENT_SEARCH_HEADER_CARD",
                            "PARTIAL_ALBUM_CARD",
                            "MEDIA_PICKER_CAMERA_CARD",
                            "MEDIA_PICKER_GALLERY_CARD",
                            "MEDIA_PICKER_MEDIA_CARD",
                            "MEDIA_PICKER_HEADER_CARD",
                            "NAV_DRAWER_ITEM_CARD",
                            "SOCIETY_COMMENT_CARD",
                            "SOCIETY_CONVERSATION_CARD",
                            "SOCIETY_NEW_CONVERSATION_CARD",
                            "NOTORIOUS_NOTE_CARD",
                            "PLUS_POST_ACTIVITIES_CARD",
                            "PLUS_MINI_SHAREBOX_CARD",
                            "PLUS_ENTITY_CREATE_CARD",
                            "PLUS_ENTITY_INVITE_CARD",
                            "PLUS_ENTITY_PREVIEW_CARD",
                            "PLUS_NOTIFICATION_CARD",
                            "PLUS_SUGGESTION_CARD",
                            "PLUS_COLLEXION_HEADER_CARD",
                            "PLUS_PROFILE_HEADER_CARD",
                            "PLUS_SQUARE_HEADER_CARD",
                            "PLUS_LOAD_MORE_CARD",
                            "EXTENSION_TYPE_CARD",
                            "STREAM_LOAD_MORE_CARD",
                            "PLUS_MEDIA_CARD",
                            "PAISA_CARD",
                            "SPACE_GOOGLE_SEARCH_RESULT_CARD",
                            "ICON_TWO_LINES_TEXT_CARD",
                            "YOU_TUBE_MEDIA_CARD",
                            "QUICKSTART_COMMENT_CARD",
                            "PLUS_MEDIA_ITEM_OVERLAY_CARD",
                            "PLUS_MEDIA_CARD_WITH_DETAILS",
                            "PLUS_MEDIA_ITEM_CARD",
                            "PLUS_ALBUM_DETAILS_CARD",
                            "PLUS_VIDEO_CARD",
                            "PLUS_SQUARE_CATEGORIES_CARD",
                            "SQUARE_MEMBER_MODERATION_CARD",
                            "SQUARE_POST_MODERATION_CARD",
                            "SQUARE_SPAM_POST_MODERATION_CARD",
                            "SQUARE_BULK_MODERATION_WRAPPER_CARD",
                            "PLUS_CAPTION_CARD",
                            "HEADER_FOOTER_CARD",
                            "PLUS_TOPIC_CARD",
                            "STYLED_STRING_CARD",
                            "PLUS_COMMENT_ACTIVITIES_CARD",
                            "TEMP_PEOPLE_ENTITY_CARD",
                            "KHAZANA_CARD",
                            "PLUS_AUTOCOMPLETE_CARD",
                            "SQUARE_CATEGORY_WRAPPER_CARD",
                            "PLUS_SEARCH_HISTORY_CARD",
                            "INSIGHT_CARD",
                            "MULTIPLE_CHOICE_CARD",
                            "EMPTY_STREAM_CARD",
                            "PLUS_EMPTY_STREAM_CARD",
                            "PLUS_USER_CARD",
                            "PLUS_MENTION_USER_CARD",
                            "PLUS_FOLLOW_ACTION_CARD",
                            "PLUS_DOMAIN_RESTRICTED_ACTION_CARD",
                            "PLUS_USER_CIRCLE_CARD",
                            "PLUS_IN_CIRCLES_ACTION_CARD",
                            "TAG_CARD",
                            "TAG_FOLLOW_ACTION_CARD",
                            "TAG_WITH_ACTION_CARD",
                            "TAG_AUTOCOMPLETE_CARD",
                            "PLUS_INTERACTION_RESTRICTED_ACTION_CARD",
                            "PLUS_UNBLOCK_ACTION_CARD",
                            "LINEAR_LAYOUT_CARD",
                            "CUSTOM_STREAM_ITEM_CARD",
                            "APP_UPGRADE_CARD",
                            "SQUARE_MODERATION_INFO_CARD",
                            "STREAM_BUTTON_CARD"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "elementActionType": {
                    "description": "List of element action types supported by the client.",
                    "enumDescriptions": [
                        "Unknown.",
                        "Navigate to a url representing the current app or a different app.",
                        "Deep link to an application.",
                        "Provide image in an album viewing experience that will display an image\nin a lightbox and optionally preload addtional images from the album\nin the background."
                    ],
                    "items": {
                        "enum": [
                            "ELEMENT_ACTION_TYPE_UNKNOWN",
                            "NAVIGATION",
                            "DEEP_LINK",
                            "ALBUM_IMAGE_NAVIGATION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "multipleChoiceCardContextType": {
                    "description": "List of MultipleChoiceCard context types supported by the client.",
                    "enumDescriptions": [
                        "",
                        "A selector enabling sorting consumption stream by order.",
                        "A selector changing time window of a community insights view."
                    ],
                    "items": {
                        "enum": [
                            "MULTIPLE_CHOICE_CARD_CONTEXT_TYPE_UNKNOWN",
                            "CONSUMPTION_STREAM_ORDER_SELECTOR",
                            "COMMUNITY_INSIGHTS_TIME_WINDOW_SELECTOR"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "richTextType": {
                    "description": "Rich text client features supported",
                    "enumDescriptions": [
                        "",
                        "Client supports post_title; http://go/social_post_card_post_title_field"
                    ],
                    "items": {
                        "enum": [
                            "RICH_TEXT_TYPE_UNKNOWN",
                            "POST_TITLE_SUPPORTED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "PhotosFirstParty API - daily-2",
    "version": "v1",
    "version_module": true
}