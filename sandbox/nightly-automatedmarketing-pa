{
    "basePath": "",
    "baseUrl": "https://nightly-automatedmarketing-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Automated Marketing",
    "description": "",
    "discoveryVersion": "v1",
    "documentationLink": "https://g3doc.corp.google.com/company/teams/gamma/index.md",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "nightly_automatedmarketing_pa_sandbox:v1missive",
    "kind": "discovery#restDescription",
    "name": "nightly_automatedmarketing_pa_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "api": {
            "methods": {
                "approvecampaign": {
                    "description": "Change campaign to 'approved' state.\nOther actions may be performed which will update other parts of the\ncampaign",
                    "flatPath": "automatedmarketing/v1missive/api/approvecampaign",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.approvecampaign",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/approvecampaign",
                    "request": {
                        "$ref": "ApproveCampaignRequest"
                    },
                    "response": {
                        "$ref": "ApproveCampaignResponse"
                    }
                },
                "archivecampaign": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/archivecampaign",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.archivecampaign",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/archivecampaign",
                    "request": {
                        "$ref": "ArchiveCampaignRequest"
                    },
                    "response": {
                        "$ref": "ArchiveCampaignResponse"
                    }
                },
                "checkauthentication": {
                    "description": "Empty RPC call that only checks user credentials",
                    "flatPath": "automatedmarketing/v1missive/api/checkauthentication",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.checkauthentication",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/checkauthentication",
                    "request": {
                        "$ref": "CheckAuthenticationRequest"
                    },
                    "response": {
                        "$ref": "CheckAuthenticationResponse"
                    }
                },
                "checkdynamicqueryusage": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/checkdynamicqueryusage",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.checkdynamicqueryusage",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/checkdynamicqueryusage",
                    "request": {
                        "$ref": "CheckDynamicQueryUsageRequest"
                    },
                    "response": {
                        "$ref": "CheckDynamicQueryUsageResponse"
                    }
                },
                "clearerrors": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/clearerrors",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.clearerrors",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/clearerrors",
                    "request": {
                        "$ref": "ClearErrorsRequest"
                    },
                    "response": {
                        "$ref": "DefaultStreamyResponse"
                    }
                },
                "counterrors": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/counterrors",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.counterrors",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/counterrors",
                    "request": {
                        "$ref": "CountErrorsRequest"
                    },
                    "response": {
                        "$ref": "CountErrorsResponse"
                    }
                },
                "deletecreative": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/deletecreative",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.deletecreative",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/deletecreative",
                    "request": {
                        "$ref": "DeleteCreativeRequest"
                    },
                    "response": {
                        "$ref": "DeleteCreativeResponse"
                    }
                },
                "deletemessages": {
                    "description": "performs message bulk deletion",
                    "flatPath": "automatedmarketing/v1missive/api/deletemessages",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.deletemessages",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/deletemessages",
                    "request": {
                        "$ref": "DeleteMessagesRequest"
                    },
                    "response": {
                        "$ref": "DeleteMessagesResponse"
                    }
                },
                "deleterecipientsource": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/deleterecipientsource",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.deleterecipientsource",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/deleterecipientsource",
                    "request": {
                        "$ref": "DeleteRecipientSourceRequest"
                    },
                    "response": {
                        "$ref": "DeleteRecipientSourceResponse"
                    }
                },
                "deleteschedule": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/deleteschedule",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.deleteschedule",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/deleteschedule",
                    "request": {
                        "$ref": "DeleteScheduleRequest"
                    },
                    "response": {
                        "$ref": "DeleteScheduleResponse"
                    }
                },
                "didrecipientreceivecampaign": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/didrecipientreceivecampaign",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.didrecipientreceivecampaign",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/didrecipientreceivecampaign",
                    "request": {
                        "$ref": "DidRecipientReceiveCampaignRequest"
                    },
                    "response": {
                        "$ref": "DidRecipientReceiveCampaignResponse"
                    }
                },
                "downloadcampaignlist": {
                    "description": "Downloads csv file with list of campaigns, based on provided search query.",
                    "flatPath": "automatedmarketing/v1missive/api/downloadcampaignlist",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.downloadcampaignlist",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/downloadcampaignlist",
                    "request": {
                        "$ref": "DownloadCampaignListRequest"
                    },
                    "response": {
                        "$ref": "DownloadCampaignListResponse"
                    }
                },
                "downloaderrors": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/downloaderrors",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.downloaderrors",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/downloaderrors",
                    "request": {
                        "$ref": "DownloadErrorsRequest"
                    },
                    "response": {
                        "$ref": "DefaultStreamyResponse"
                    }
                },
                "downloadmessages": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/downloadmessages",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.downloadmessages",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/downloadmessages",
                    "request": {
                        "$ref": "DownloadMessagesRequest"
                    },
                    "response": {
                        "$ref": "DownloadMessagesResponse"
                    }
                },
                "downloadrecipientsource": {
                    "description": "Fetch the row content of a recipient source.",
                    "flatPath": "automatedmarketing/v1missive/api/downloadrecipientsource",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.downloadrecipientsource",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/downloadrecipientsource",
                    "request": {
                        "$ref": "DownloadRecipientSourceRequest"
                    },
                    "response": {
                        "$ref": "DownloadRecipientSourceResponse"
                    }
                },
                "downloadsignalaliases": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/downloadsignalaliases",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.downloadsignalaliases",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/downloadsignalaliases",
                    "request": {
                        "$ref": "DownloadSignalAliasesRequest"
                    },
                    "response": {
                        "$ref": "DownloadSignalAliasesResponse"
                    }
                },
                "duplicatecampaign": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/duplicatecampaign",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.duplicatecampaign",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/duplicatecampaign",
                    "request": {
                        "$ref": "DuplicateCampaignRequest"
                    },
                    "response": {
                        "$ref": "DuplicateCampaignResponse"
                    }
                },
                "duplicatedynamicquery": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/duplicatedynamicquery",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.duplicatedynamicquery",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/duplicatedynamicquery",
                    "request": {
                        "$ref": "DuplicateDynamicQueryRequest"
                    },
                    "response": {
                        "$ref": "DuplicateDynamicQueryResponse"
                    }
                },
                "duplicatemessage": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/duplicatemessage",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.duplicatemessage",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/duplicatemessage",
                    "request": {
                        "$ref": "DuplicateMessageRequest"
                    },
                    "response": {
                        "$ref": "DuplicateMessageResponse"
                    }
                },
                "evaluatesubjectline": {
                    "description": "Evaluates the quality of a list of subject lines",
                    "flatPath": "automatedmarketing/v1missive/api/evaluatesubjectline",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.evaluatesubjectline",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/evaluatesubjectline",
                    "request": {
                        "$ref": "EvaluateSubjectLineRequest"
                    },
                    "response": {
                        "$ref": "EvaluateSubjectLineResponse"
                    }
                },
                "getadminhistoryfulltextdata": {
                    "description": "Get all history fulltext data",
                    "flatPath": "automatedmarketing/v1missive/api/getadminhistoryfulltextdata",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getadminhistoryfulltextdata",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getadminhistoryfulltextdata",
                    "request": {
                        "$ref": "FullTextHistoryRequest"
                    },
                    "response": {
                        "$ref": "GetHistoryFullTextDataResponse"
                    }
                },
                "getandroidintabemulatorlink": {
                    "description": "Get a link to start an Android-in-Tab emulator.",
                    "flatPath": "automatedmarketing/v1missive/api/getandroidintabemulatorlink",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getandroidintabemulatorlink",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getandroidintabemulatorlink",
                    "request": {
                        "$ref": "GetAndroidInTabEmulatorLinkRequest"
                    },
                    "response": {
                        "$ref": "GetAndroidInTabEmulatorLinkResponse"
                    }
                },
                "getapiversion": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/getapiversion",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getapiversion",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getapiversion",
                    "request": {
                        "$ref": "ApiVersionRequest"
                    },
                    "response": {
                        "$ref": "ApiVersionResponse"
                    }
                },
                "getcampaignbasicinfo": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/getcampaignbasicinfo",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getcampaignbasicinfo",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getcampaignbasicinfo",
                    "request": {
                        "$ref": "CampaignBasicInfoRequest"
                    },
                    "response": {
                        "$ref": "CampaignBasicInfoResponse"
                    }
                },
                "getcampaigndetails": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/getcampaigndetails",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getcampaigndetails",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getcampaigndetails",
                    "request": {
                        "$ref": "GetCampaignDetailsRequest"
                    },
                    "response": {
                        "$ref": "CampaignDetailsResponse"
                    }
                },
                "getchimeregistereddevices": {
                    "description": "Returns the calling user's devices that are registered with Chime",
                    "flatPath": "automatedmarketing/v1missive/api/getchimeregistereddevices",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getchimeregistereddevices",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getchimeregistereddevices",
                    "request": {
                        "$ref": "GetChimeRegisteredDevicesRequest"
                    },
                    "response": {
                        "$ref": "GetChimeRegisteredDevicesResponse"
                    }
                },
                "getcreativeversion": {
                    "description": "Gets a creative version (including creative body content) by its ID.",
                    "flatPath": "automatedmarketing/v1missive/api/getcreativeversion",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getcreativeversion",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getcreativeversion",
                    "request": {
                        "$ref": "GetCreativeVersionRequest"
                    },
                    "response": {
                        "$ref": "GetCreativeVersionResponse"
                    }
                },
                "getdueschedules": {
                    "description": "Checks for past due schedules and workflow queue records, returns ids.",
                    "flatPath": "automatedmarketing/v1missive/api/getdueschedules",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getdueschedules",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getdueschedules",
                    "request": {
                        "$ref": "GetDueSchedulesRequest"
                    },
                    "response": {
                        "$ref": "GetDueSchedulesResponse"
                    }
                },
                "getexperimentresults": {
                    "description": "Get analytics statistics for each branch of an experiment",
                    "flatPath": "automatedmarketing/v1missive/api/getexperimentresults",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getexperimentresults",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getexperimentresults",
                    "request": {
                        "$ref": "ExperimentResultsRequest"
                    },
                    "response": {
                        "$ref": "ExperimentResultsResponse"
                    }
                },
                "getgunsregistereddevices": {
                    "description": "Returns the calling user's devices that are registered with GUNS",
                    "flatPath": "automatedmarketing/v1missive/api/getgunsregistereddevices",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getgunsregistereddevices",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getgunsregistereddevices",
                    "request": {
                        "$ref": "GetGunsRegisteredDevicesRequest"
                    },
                    "response": {
                        "$ref": "GetGunsRegisteredDevicesResponse"
                    }
                },
                "getpipelinestatusfordispatch": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/getpipelinestatusfordispatch",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getpipelinestatusfordispatch",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getpipelinestatusfordispatch",
                    "request": {
                        "$ref": "GetPipelineStatusForDispatchRequest"
                    },
                    "response": {
                        "$ref": "DispatchStatus"
                    }
                },
                "getproductdetails": {
                    "description": "Replacement for ProductInfoRequest, fetches the same proto as used to build\nProduct objects so it can be used by backend servers as well as user-facing\nservices.",
                    "flatPath": "automatedmarketing/v1missive/api/getproductdetails",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getproductdetails",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getproductdetails",
                    "request": {
                        "$ref": "ProductDetailsRequest"
                    },
                    "response": {
                        "$ref": "ProductDetailsResponse"
                    }
                },
                "getproductinfo": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/getproductinfo",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getproductinfo",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getproductinfo",
                    "request": {
                        "$ref": "ProductInfoRequest"
                    },
                    "response": {
                        "$ref": "ProductInfoResponse"
                    }
                },
                "getproductlist": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/getproductlist",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.getproductlist",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/getproductlist",
                    "request": {
                        "$ref": "ProductListRequest"
                    },
                    "response": {
                        "$ref": "ProductListResponse"
                    }
                },
                "gettopcampaigns": {
                    "description": "Gets the top 10 campaigns with most workflow nodes",
                    "flatPath": "automatedmarketing/v1missive/api/gettopcampaigns",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.gettopcampaigns",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/gettopcampaigns",
                    "request": {
                        "$ref": "GetTopCampaignsRequest"
                    },
                    "response": {
                        "$ref": "TopCampaignsResponse"
                    }
                },
                "htmltoimage": {
                    "description": "Renders the request html in a browser and returns an image of it.",
                    "flatPath": "automatedmarketing/v1missive/api/htmltoimage",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.htmltoimage",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/htmltoimage",
                    "request": {
                        "$ref": "HtmlToImageRequest"
                    },
                    "response": {
                        "$ref": "HtmlToImageResponse"
                    }
                },
                "listcreativeversions": {
                    "description": "Gets a list of creative versions (excluding creative body content) for a\nspecific creative.  Creative versions are returned ordered by descending\nsave timestamp.",
                    "flatPath": "automatedmarketing/v1missive/api/listcreativeversions",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.listcreativeversions",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/listcreativeversions",
                    "request": {
                        "$ref": "ListCreativeVersionsRequest"
                    },
                    "response": {
                        "$ref": "ListCreativeVersionsResponse"
                    }
                },
                "listemailpipelinejobs": {
                    "description": "Gets a list of all e-mail pipeline jobs currently running on Borg.",
                    "flatPath": "automatedmarketing/v1missive/api/listemailpipelinejobs",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.listemailpipelinejobs",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/listemailpipelinejobs",
                    "request": {
                        "$ref": "ListEmailPipelineJobsRequest"
                    },
                    "response": {
                        "$ref": "ListEmailPipelineJobsResponse"
                    }
                },
                "loadaliases": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadaliases",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadaliases",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadaliases",
                    "request": {
                        "$ref": "LoadAliasesRequest"
                    },
                    "response": {
                        "$ref": "LoadAliasesResponse"
                    }
                },
                "loadallcampaignsettings": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadallcampaignsettings",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadallcampaignsettings",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadallcampaignsettings",
                    "request": {
                        "$ref": "LoadAllCampaignSettingsRequest"
                    },
                    "response": {
                        "$ref": "LoadAllCampaignSettingsResponse"
                    }
                },
                "loadallcampaignversioninfos": {
                    "description": "Loads all version infos",
                    "flatPath": "automatedmarketing/v1missive/api/loadallcampaignversioninfos",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadallcampaignversioninfos",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadallcampaignversioninfos",
                    "request": {
                        "$ref": "LoadAllCampaignVersionInfosRequest"
                    },
                    "response": {
                        "$ref": "LoadAllCampaignVersionInfosResponse"
                    }
                },
                "loadalllanguages": {
                    "description": "Loads all supported languages",
                    "flatPath": "automatedmarketing/v1missive/api/loadalllanguages",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadalllanguages",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadalllanguages",
                    "request": {
                        "$ref": "LoadAllLanguagesRequest"
                    },
                    "response": {
                        "$ref": "LoadAllLanguagesResponse"
                    }
                },
                "loadallmessages": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadallmessages",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadallmessages",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadallmessages",
                    "request": {
                        "$ref": "LoadAllMessagesRequest"
                    },
                    "response": {
                        "$ref": "LoadAllMessagesResponse"
                    }
                },
                "loadallrecipientsources": {
                    "description": "Loads all recipients used in a campaign as a batch action",
                    "flatPath": "automatedmarketing/v1missive/api/loadallrecipientsources",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadallrecipientsources",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadallrecipientsources",
                    "request": {
                        "$ref": "LoadAllRecipientSourcesRequest"
                    },
                    "response": {
                        "$ref": "LoadAllRecipientSourcesResponse"
                    }
                },
                "loadavailabletimezones": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadavailabletimezones",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadavailabletimezones",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadavailabletimezones",
                    "request": {
                        "$ref": "LoadAvailableTimezonesRequest"
                    },
                    "response": {
                        "$ref": "LoadAvailableTimezonesResponse"
                    }
                },
                "loadaxptreatments": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadaxptreatments",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadaxptreatments",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadaxptreatments",
                    "request": {
                        "$ref": "LoadAxpTreatmentsRequest"
                    },
                    "response": {
                        "$ref": "LoadAxpTreatmentsResponse"
                    }
                },
                "loadaxpworkflows": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadaxpworkflows",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadaxpworkflows",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadaxpworkflows",
                    "request": {
                        "$ref": "LoadAxpWorkflowsRequest"
                    },
                    "response": {
                        "$ref": "LoadAxpWorkflowsResponse"
                    }
                },
                "loadbounces": {
                    "description": "Loads message bounces",
                    "flatPath": "automatedmarketing/v1missive/api/loadbounces",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadbounces",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadbounces",
                    "request": {
                        "$ref": "LoadAllBouncesRequest"
                    },
                    "response": {
                        "$ref": "LoadAllBouncesResponse"
                    }
                },
                "loadcampaignmetrics": {
                    "description": "Gets CampaignMetrics for a given campaign ID",
                    "flatPath": "automatedmarketing/v1missive/api/loadcampaignmetrics",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadcampaignmetrics",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadcampaignmetrics",
                    "request": {
                        "$ref": "LoadCampaignMetricsRequest"
                    },
                    "response": {
                        "$ref": "LoadCampaignMetricsResponse"
                    }
                },
                "loadcampaignoverview": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadcampaignoverview",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadcampaignoverview",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadcampaignoverview",
                    "request": {
                        "$ref": "CampaignOverviewRequest"
                    },
                    "response": {
                        "$ref": "CampaignOverviewResponse"
                    }
                },
                "loadchimeworkflowconfig": {
                    "description": "Loads Chime WorkflowConfig",
                    "flatPath": "automatedmarketing/v1missive/api/loadchimeworkflowconfig",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadchimeworkflowconfig",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadchimeworkflowconfig",
                    "request": {
                        "$ref": "LoadChimeWorkflowConfigRequest"
                    },
                    "response": {
                        "$ref": "LoadChimeWorkflowConfigResponse"
                    }
                },
                "loadchimeworkflownames": {
                    "description": "Loads all Chime WorkflowConfig names of a client",
                    "flatPath": "automatedmarketing/v1missive/api/loadchimeworkflownames",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadchimeworkflownames",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadchimeworkflownames",
                    "request": {
                        "$ref": "LoadChimeWorkflowNamesRequest"
                    },
                    "response": {
                        "$ref": "LoadChimeWorkflowNamesResponse"
                    }
                },
                "loadclicks": {
                    "description": "Loads message clicks",
                    "flatPath": "automatedmarketing/v1missive/api/loadclicks",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadclicks",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadclicks",
                    "request": {
                        "$ref": "LoadAllClicksRequest"
                    },
                    "response": {
                        "$ref": "LoadAllClicksResponse"
                    }
                },
                "loadcollaborators": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadcollaborators",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadcollaborators",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadcollaborators",
                    "request": {
                        "$ref": "LoadCollaboratorsRequest"
                    },
                    "response": {
                        "$ref": "LoadCollaboratorsResponse"
                    }
                },
                "loadcreative": {
                    "description": "Also loads creative bodies in creative",
                    "flatPath": "automatedmarketing/v1missive/api/loadcreative",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadcreative",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadcreative",
                    "request": {
                        "$ref": "LoadCreativeRequest"
                    },
                    "response": {
                        "$ref": "LoadCreativeResponse"
                    }
                },
                "loadcreativebody": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadcreativebody",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadcreativebody",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadcreativebody",
                    "request": {
                        "$ref": "LoadCreativeBodyRequest"
                    },
                    "response": {
                        "$ref": "LoadCreativeBodyResponse"
                    }
                },
                "loadcsvdata": {
                    "description": "Load csv data for specified recipient source",
                    "flatPath": "automatedmarketing/v1missive/api/loadcsvdata",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadcsvdata",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadcsvdata",
                    "request": {
                        "$ref": "LoadCsvDataRequest"
                    },
                    "response": {
                        "$ref": "LoadCsvDataResponse"
                    }
                },
                "loaddaysofweek": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loaddaysofweek",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loaddaysofweek",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loaddaysofweek",
                    "request": {
                        "$ref": "LoadDaysOfWeekRequest"
                    },
                    "response": {
                        "$ref": "LoadDaysOfWeekResponse"
                    }
                },
                "loadfilterconfig": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadfilterconfig",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadfilterconfig",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadfilterconfig",
                    "request": {
                        "$ref": "LoadFilterConfigRequest"
                    },
                    "response": {
                        "$ref": "LoadFilterConfigResponse"
                    }
                },
                "loadlatestproofmessageinfo": {
                    "description": "Loads all latest campaign message info like lastSavedVersion and\nlastPublished version. Used to keep proof preview screen up to date.",
                    "flatPath": "automatedmarketing/v1missive/api/loadlatestproofmessageinfo",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadlatestproofmessageinfo",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadlatestproofmessageinfo",
                    "request": {
                        "$ref": "LoadLatestProofMessageInfoRequest"
                    },
                    "response": {
                        "$ref": "LoadLatestProofMessageInfoResponse"
                    }
                },
                "loadmessage": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadmessage",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadmessage",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadmessage",
                    "request": {
                        "$ref": "LoadMessageRequest"
                    },
                    "response": {
                        "$ref": "LoadMessageResponse"
                    }
                },
                "loadmessageversions": {
                    "description": "Loads message versions",
                    "flatPath": "automatedmarketing/v1missive/api/loadmessageversions",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadmessageversions",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadmessageversions",
                    "request": {
                        "$ref": "LoadMessageVersionsRequest"
                    },
                    "response": {
                        "$ref": "LoadMessageVersionsResponse"
                    }
                },
                "loadpipelinejobsdetails": {
                    "description": "Gets a list of all details for e-mail pipeline jobs.",
                    "flatPath": "automatedmarketing/v1missive/api/loadpipelinejobsdetails",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadpipelinejobsdetails",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadpipelinejobsdetails",
                    "request": {
                        "$ref": "LoadPipelineJobsDetailsRequest"
                    },
                    "response": {
                        "$ref": "LoadPipelineJobsDetailsResponse"
                    }
                },
                "loadproofconfig": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadproofconfig",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadproofconfig",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadproofconfig",
                    "request": {
                        "$ref": "LoadProofConfigRequest"
                    },
                    "response": {
                        "$ref": "ProofConfigResponse"
                    }
                },
                "loadproofdata": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadproofdata",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadproofdata",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadproofdata",
                    "request": {
                        "$ref": "LoadProofDataRequest"
                    },
                    "response": {
                        "$ref": "LoadProofDataResponse"
                    }
                },
                "loadpublishedcampaign": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadpublishedcampaign",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadpublishedcampaign",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadpublishedcampaign",
                    "request": {
                        "$ref": "LoadPublishedCampaignRequest"
                    },
                    "response": {
                        "$ref": "LoadPublishedCampaignResponse"
                    }
                },
                "loadpublishedcampaignstatus": {
                    "description": "Loads published campaign status",
                    "flatPath": "automatedmarketing/v1missive/api/loadpublishedcampaignstatus",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadpublishedcampaignstatus",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadpublishedcampaignstatus",
                    "request": {
                        "$ref": "LoadPublishedCampaignStatusRequest"
                    },
                    "response": {
                        "$ref": "LoadPublishedCampaignStatusResponse"
                    }
                },
                "loadrecipientsource": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadrecipientsource",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadrecipientsource",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadrecipientsource",
                    "request": {
                        "$ref": "LoadRecipientSourceRequest"
                    },
                    "response": {
                        "$ref": "LoadRecipientSourceResponse"
                    }
                },
                "loadschedule": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadschedule",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadschedule",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadschedule",
                    "request": {
                        "$ref": "LoadScheduleRequest"
                    },
                    "response": {
                        "$ref": "LoadScheduleResponse"
                    }
                },
                "loadsimulationdata": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadsimulationdata",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadsimulationdata",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadsimulationdata",
                    "request": {
                        "$ref": "LoadSimulationDataRequest"
                    },
                    "response": {
                        "$ref": "LoadSimulationDataResponse"
                    }
                },
                "loadstate": {
                    "description": "Loads campaign state",
                    "flatPath": "automatedmarketing/v1missive/api/loadstate",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadstate",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadstate",
                    "request": {
                        "$ref": "LoadStateRequest"
                    },
                    "response": {
                        "$ref": "LoadStateResponse"
                    }
                },
                "loadunpublishedcampaignversioninfo": {
                    "description": "Loads unpublished version info (if any)",
                    "flatPath": "automatedmarketing/v1missive/api/loadunpublishedcampaignversioninfo",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadunpublishedcampaignversioninfo",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadunpublishedcampaignversioninfo",
                    "request": {
                        "$ref": "LoadUnpublishedCampaignVersionInfoRequest"
                    },
                    "response": {
                        "$ref": "LoadUnpublishedCampaignVersionInfoResponse"
                    }
                },
                "loadworkflow": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadworkflow",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadworkflow",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadworkflow",
                    "request": {
                        "$ref": "LoadWorkflowRequest"
                    },
                    "response": {
                        "$ref": "WorkflowResponse"
                    }
                },
                "loadworkflowdata": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/loadworkflowdata",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.loadworkflowdata",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/loadworkflowdata",
                    "request": {
                        "$ref": "LoadWorkflowRequest"
                    },
                    "response": {
                        "$ref": "LoadWorkflowDataResponse"
                    }
                },
                "pollrecipientsource": {
                    "description": "Gets a recipient source, used for while waiting for it to be created",
                    "flatPath": "automatedmarketing/v1missive/api/pollrecipientsource",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.pollrecipientsource",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/pollrecipientsource",
                    "request": {
                        "$ref": "LoadRecipientSourceRequest"
                    },
                    "response": {
                        "$ref": "PollRecipientSourceResponse"
                    }
                },
                "publishcampaign": {
                    "description": "Publishes a campaign",
                    "flatPath": "automatedmarketing/v1missive/api/publishcampaign",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.publishcampaign",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/publishcampaign",
                    "request": {
                        "$ref": "PublishCampaignRequest"
                    },
                    "response": {
                        "$ref": "PublishCampaignResponse"
                    }
                },
                "recordmetric": {
                    "description": "Records a given metric to protologs",
                    "flatPath": "automatedmarketing/v1missive/api/recordmetric",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.recordmetric",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/recordmetric",
                    "request": {
                        "$ref": "RecordMetricRequest"
                    },
                    "response": {
                        "$ref": "RecordMetricResponse"
                    }
                },
                "renderproof": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/renderproof",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.renderproof",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/renderproof",
                    "request": {
                        "$ref": "RenderProofRequest"
                    },
                    "response": {
                        "$ref": "RenderProofResponse"
                    }
                },
                "restartdispatch": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/restartdispatch",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.restartdispatch",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/restartdispatch",
                    "request": {
                        "$ref": "RestartDispatchRequest"
                    },
                    "response": {
                        "$ref": "DefaultStreamyResponse"
                    }
                },
                "restorepublishedversion": {
                    "description": "Overwrites unpublished changes with a previously published version of a\ncampaign",
                    "flatPath": "automatedmarketing/v1missive/api/restorepublishedversion",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.restorepublishedversion",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/restorepublishedversion",
                    "request": {
                        "$ref": "RestorePublishedVersionRequest"
                    },
                    "response": {
                        "$ref": "RestorePublishedVersionResponse"
                    }
                },
                "retryerrors": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/retryerrors",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.retryerrors",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/retryerrors",
                    "request": {
                        "$ref": "RetryErrorsRequest"
                    },
                    "response": {
                        "$ref": "RetryErrorsResponse"
                    }
                },
                "revalidatecsvrows": {
                    "description": "Revalidates existing CSV data and writes out revalidated data with new ID.",
                    "flatPath": "automatedmarketing/v1missive/api/revalidatecsvrows",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.revalidatecsvrows",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/revalidatecsvrows",
                    "request": {
                        "$ref": "RevalidateCsvRowsRequest"
                    },
                    "response": {
                        "$ref": "RevalidateCsvRowsResponse"
                    }
                },
                "runworkflowsimulation": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/runworkflowsimulation",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.runworkflowsimulation",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/runworkflowsimulation",
                    "request": {
                        "$ref": "WorkflowSimulationRequest"
                    },
                    "response": {
                        "$ref": "WorkflowSimulationResponse"
                    }
                },
                "savealiasinfo": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/savealiasinfo",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savealiasinfo",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savealiasinfo",
                    "request": {
                        "$ref": "SaveAliasInfoRequest"
                    },
                    "response": {
                        "$ref": "SaveAliasInfoResponse"
                    }
                },
                "saveallcampaignsettings": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/saveallcampaignsettings",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.saveallcampaignsettings",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/saveallcampaignsettings",
                    "request": {
                        "$ref": "SaveAllCampaignSettingsRequest"
                    },
                    "response": {
                        "$ref": "SaveAllCampaignSettingsResponse"
                    }
                },
                "savecampaignmetrics": {
                    "description": "Updates CampaignMetrics for a given campaign ID",
                    "flatPath": "automatedmarketing/v1missive/api/savecampaignmetrics",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savecampaignmetrics",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savecampaignmetrics",
                    "request": {
                        "$ref": "SaveCampaignMetricsRequest"
                    },
                    "response": {
                        "$ref": "SaveCampaignMetricsResponse"
                    }
                },
                "savecollaborators": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/savecollaborators",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savecollaborators",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savecollaborators",
                    "request": {
                        "$ref": "SaveCollaboratorsRequest"
                    },
                    "response": {
                        "$ref": "SaveCollaboratorsResponse"
                    }
                },
                "savecreative": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/savecreative",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savecreative",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savecreative",
                    "request": {
                        "$ref": "SaveCreativeRequest"
                    },
                    "response": {
                        "$ref": "SaveCreativeResponse"
                    }
                },
                "savedaysofweek": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/savedaysofweek",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savedaysofweek",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savedaysofweek",
                    "request": {
                        "$ref": "SaveDaysOfWeekRequest"
                    },
                    "response": {
                        "$ref": "SaveDaysOfWeekResponse"
                    }
                },
                "savefilterconfig": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/savefilterconfig",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savefilterconfig",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savefilterconfig",
                    "request": {
                        "$ref": "SaveFilterConfigRequest"
                    },
                    "response": {
                        "$ref": "SaveFilterConfigResponse"
                    }
                },
                "savemessage": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/savemessage",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savemessage",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savemessage",
                    "request": {
                        "$ref": "SaveMessageRequest"
                    },
                    "response": {
                        "$ref": "SaveMessageResponse"
                    }
                },
                "savemessagedetails": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/savemessagedetails",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savemessagedetails",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savemessagedetails",
                    "request": {
                        "$ref": "SaveMessageDetailsRequest"
                    },
                    "response": {
                        "$ref": "SaveMessageDetailsResponse"
                    }
                },
                "saveproofconfig": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/saveproofconfig",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.saveproofconfig",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/saveproofconfig",
                    "request": {
                        "$ref": "SaveProofConfigRequest"
                    },
                    "response": {
                        "$ref": "ProofConfigResponse"
                    }
                },
                "saverecipientsource": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/saverecipientsource",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.saverecipientsource",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/saverecipientsource",
                    "request": {
                        "$ref": "SaveRecipientSourceRequest"
                    },
                    "response": {
                        "$ref": "SaveRecipientSourceResponse"
                    }
                },
                "saveschedule": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/saveschedule",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.saveschedule",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/saveschedule",
                    "request": {
                        "$ref": "SaveScheduleRequest"
                    },
                    "response": {
                        "$ref": "SaveScheduleResponse"
                    }
                },
                "savestate": {
                    "description": "Saves campaign state",
                    "flatPath": "automatedmarketing/v1missive/api/savestate",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.savestate",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/savestate",
                    "request": {
                        "$ref": "SaveStateRequest"
                    },
                    "response": {
                        "$ref": "SaveStateResponse"
                    }
                },
                "saveworkflow": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/saveworkflow",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.saveworkflow",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/saveworkflow",
                    "request": {
                        "$ref": "SaveWorkflowRequest"
                    },
                    "response": {
                        "$ref": "WorkflowResponse"
                    }
                },
                "searchcampaigns": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/searchcampaigns",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.searchcampaigns",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/searchcampaigns",
                    "request": {
                        "$ref": "CampaignSearchRequest"
                    },
                    "response": {
                        "$ref": "CampaignSearchResponse"
                    }
                },
                "searchdispatches": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/searchdispatches",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.searchdispatches",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/searchdispatches",
                    "request": {
                        "$ref": "DispatchSearchRequest"
                    },
                    "response": {
                        "$ref": "DispatchSearchResponse"
                    }
                },
                "searchdynamicqueries": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/searchdynamicqueries",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.searchdynamicqueries",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/searchdynamicqueries",
                    "request": {
                        "$ref": "SearchDynamicQueriesRequest"
                    },
                    "response": {
                        "$ref": "SearchDynamicQueriesResponse"
                    }
                },
                "searcherrors": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/searcherrors",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.searcherrors",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/searcherrors",
                    "request": {
                        "$ref": "DownloadErrorsRequest"
                    },
                    "response": {
                        "$ref": "DownloadErrorsResponse"
                    }
                },
                "sendproof": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/sendproof",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.sendproof",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/sendproof",
                    "request": {
                        "$ref": "SendProofRequest"
                    },
                    "response": {
                        "$ref": "SendProofResponse"
                    }
                },
                "sendseedemail": {
                    "description": "Sends seed emails to recipients (aka Bulk Audit)\nNOTE: Send records must be in reporting tables in order for this to work\nSo you CANNOT immediately bulk audit after a send and must wait ~1hr",
                    "flatPath": "automatedmarketing/v1missive/api/sendseedemail",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.sendseedemail",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/sendseedemail",
                    "request": {
                        "$ref": "SendSeedEmailRequest"
                    },
                    "response": {
                        "$ref": "SendSeedEmailResponse"
                    }
                },
                "servertime": {
                    "description": "Returns current time on server",
                    "flatPath": "automatedmarketing/v1missive/api/servertime",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.servertime",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/servertime",
                    "request": {
                        "$ref": "ServerTimeRequest"
                    },
                    "response": {
                        "$ref": "ServerTimeResponse"
                    }
                },
                "setspampolicies": {
                    "description": "Sets the spam policy for every message in a campaign.  All spam policies\nare set to the same value.  If a message already has a spam policy set,\nthis will not over-write the existing value.",
                    "flatPath": "automatedmarketing/v1missive/api/setspampolicies",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.setspampolicies",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/setspampolicies",
                    "request": {
                        "$ref": "SetSpamPoliciesRequest"
                    },
                    "response": {
                        "$ref": "SetSpamPoliciesResponse"
                    }
                },
                "smsoptin": {
                    "description": "Opt-in a user phone number for receiving SMS",
                    "flatPath": "automatedmarketing/v1missive/api/smsoptin",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.smsoptin",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/smsoptin",
                    "request": {
                        "$ref": "SmsOptInRequest"
                    },
                    "response": {
                        "$ref": "SmsOptInResponse"
                    }
                },
                "unregisterdevicefromchime": {
                    "description": "Unregisters a single device from Chime",
                    "flatPath": "automatedmarketing/v1missive/api/unregisterdevicefromchime",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.unregisterdevicefromchime",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/unregisterdevicefromchime",
                    "request": {
                        "$ref": "UnregisterDeviceFromChimeRequest"
                    },
                    "response": {
                        "$ref": "UnregisterDeviceFromChimeResponse"
                    }
                },
                "unregisterdevicefromguns": {
                    "description": "Unregisters a single device from GUNS",
                    "flatPath": "automatedmarketing/v1missive/api/unregisterdevicefromguns",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.unregisterdevicefromguns",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/unregisterdevicefromguns",
                    "request": {
                        "$ref": "UnregisterDeviceFromGunsRequest"
                    },
                    "response": {
                        "$ref": "UnregisterDeviceFromGunsResponse"
                    }
                },
                "uploadaliasesfile": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/uploadaliasesfile",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.uploadaliasesfile",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/uploadaliasesfile",
                    "request": {
                        "$ref": "AliasesFileUploadRequest"
                    },
                    "response": {
                        "$ref": "AliasesFileUploadResponse"
                    }
                },
                "uploadmessagesandcreatives": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/uploadmessagesandcreatives",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.uploadmessagesandcreatives",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/uploadmessagesandcreatives",
                    "request": {
                        "$ref": "UploadMessagesAndCreativesRequest"
                    },
                    "response": {
                        "$ref": "UploadMessagesAndCreativesResponse"
                    }
                },
                "uploadrecipientsource": {
                    "description": "Handles the upload of a recipient source",
                    "flatPath": "automatedmarketing/v1missive/api/uploadrecipientsource",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.uploadrecipientsource",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/uploadrecipientsource",
                    "request": {
                        "$ref": "UploadRecipientSourceRequest"
                    },
                    "response": {
                        "$ref": "UploadRecipientSourceResponse"
                    }
                },
                "uploadrecipientsourceasync": {
                    "description": "Handles the upload of a recipient source, processing is done async.",
                    "flatPath": "automatedmarketing/v1missive/api/uploadrecipientsourceasync",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.uploadrecipientsourceasync",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/uploadrecipientsourceasync",
                    "request": {
                        "$ref": "UploadRecipientSourceRequest"
                    },
                    "response": {
                        "$ref": "UploadRecipientSourceResponse"
                    }
                },
                "validatecampaign": {
                    "description": "",
                    "flatPath": "automatedmarketing/v1missive/api/validatecampaign",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.validatecampaign",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/validatecampaign",
                    "request": {
                        "$ref": "CampaignValidationRequest"
                    },
                    "response": {
                        "$ref": "CampaignValidationResponse"
                    }
                },
                "validatecsvheader": {
                    "description": "Validates CSV header.",
                    "flatPath": "automatedmarketing/v1missive/api/validatecsvheader",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.api.validatecsvheader",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/api/validatecsvheader",
                    "request": {
                        "$ref": "ValidateCsvHeaderRequest"
                    },
                    "response": {
                        "$ref": "ValidateCsvHeaderResponse"
                    }
                }
            },
            "resources": {
                "createcampaign": {
                    "methods": {
                        "create": {
                            "description": "",
                            "flatPath": "automatedmarketing/v1missive/api/createcampaign",
                            "httpMethod": "POST",
                            "id": "nightly_automatedmarketing_pa_sandbox.api.createcampaign.create",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "automatedmarketing/v1missive/api/createcampaign",
                            "request": {
                                "$ref": "CreateCampaignRequest"
                            },
                            "response": {
                                "$ref": "CreateCampaignResponse"
                            }
                        }
                    }
                },
                "createrecipientsourcefromgroup": {
                    "methods": {
                        "create": {
                            "description": "Creates a recipient source from an internal group.",
                            "flatPath": "automatedmarketing/v1missive/api/createrecipientsourcefromgroup",
                            "httpMethod": "POST",
                            "id": "nightly_automatedmarketing_pa_sandbox.api.createrecipientsourcefromgroup.create",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "automatedmarketing/v1missive/api/createrecipientsourcefromgroup",
                            "request": {
                                "$ref": "CreateRecipientSourceFromGroupRequest"
                            },
                            "response": {
                                "$ref": "CreateRecipientSourceFromGroupResponse"
                            }
                        }
                    }
                }
            }
        },
        "contactsApi": {
            "methods": {
                "addaccessgroup": {
                    "description": "Adds an access group to a product",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/addaccessgroup",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.addaccessgroup",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/addaccessgroup",
                    "request": {
                        "$ref": "AddAccessGroupRequest"
                    },
                    "response": {
                        "$ref": "AddAccessGroupResponse"
                    }
                },
                "addproduct": {
                    "description": "Inserts a product if not already existing\nreturns new product or already existing product",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/addproduct",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.addproduct",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/addproduct",
                    "request": {
                        "$ref": "AddProductRequest"
                    },
                    "response": {
                        "$ref": "AddProductResponse"
                    }
                },
                "completelydeletecontact": {
                    "description": "Deletes the Contact completely (even email address hash and optout info)\nAn admin-only RPC used to correct data in F1\n\nWARNING: Use with caution. This should be rarely used as we often want\n  to keep email address hash and optout info to protect users from\n  opting in users who have already been opted out and wiped out",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/completelydeletecontact",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.completelydeletecontact",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/completelydeletecontact",
                    "request": {
                        "$ref": "CompletelyDeleteContactRequest"
                    },
                    "response": {
                        "$ref": "CompletelyDeleteContactResponse"
                    }
                },
                "countcontacts": {
                    "description": "Returns the number of users that match a DynamicQuery query",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/countcontacts",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.countcontacts",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/countcontacts",
                    "request": {
                        "$ref": "CountContactsRequest"
                    },
                    "response": {
                        "$ref": "CountContactsResponse"
                    }
                },
                "deleteaccessgroup": {
                    "description": "Removes an access group from a product",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/deleteaccessgroup",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.deleteaccessgroup",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/deleteaccessgroup",
                    "request": {
                        "$ref": "DeleteAccessGroupRequest"
                    },
                    "response": {
                        "$ref": "DeleteAccessGroupResponse"
                    }
                },
                "deleteproduct": {
                    "description": "Deletes specified product",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/deleteproduct",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.deleteproduct",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/deleteproduct",
                    "request": {
                        "$ref": "DeleteProductRequest"
                    },
                    "response": {
                        "$ref": "DeleteProductResponse"
                    }
                },
                "deletesignalmetadata": {
                    "description": "Deletes the specified signal metadata for a product",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/deletesignalmetadata",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.deletesignalmetadata",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/deletesignalmetadata",
                    "request": {
                        "$ref": "DeleteSignalMetadataRequest"
                    },
                    "response": {
                        "$ref": "DeleteSignalMetadataResponse"
                    }
                },
                "getoptintextvalues": {
                    "description": "Gets all possible text values that users can use\nto indicate opted in/out values in CSVs",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/getoptintextvalues",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.getoptintextvalues",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/getoptintextvalues",
                    "request": {
                        "$ref": "GetOptInTextValuesRequest"
                    },
                    "response": {
                        "$ref": "GetOptInTextValuesResponse"
                    }
                },
                "loadallcontactsinproduct": {
                    "description": "If user has access, loads all the contacts for a given product.\nOnly returns contacts that are opted into at least one optin category",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadallcontactsinproduct",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadallcontactsinproduct",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadallcontactsinproduct",
                    "request": {
                        "$ref": "LoadAllContactsInProductRequest"
                    },
                    "response": {
                        "$ref": "LoadAllContactsInProductResponse"
                    }
                },
                "loadallproductsforuser": {
                    "description": "Loads all products that the requesting user\n(or specified user in request) has access to",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadallproductsforuser",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadallproductsforuser",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadallproductsforuser",
                    "request": {
                        "$ref": "LoadAllProductsForUserRequest"
                    },
                    "response": {
                        "$ref": "LoadAllProductsForUserResponse"
                    }
                },
                "loadcontact": {
                    "description": "Loads contact",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadcontact",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadcontact",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadcontact",
                    "request": {
                        "$ref": "LoadContactRequest"
                    },
                    "response": {
                        "$ref": "LoadContactResponse"
                    }
                },
                "loadcontactspaginated": {
                    "description": "Loads contacts in a paginated fashion\nsorted by ContactId in ascending order",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadcontactspaginated",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadcontactspaginated",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadcontactspaginated",
                    "request": {
                        "$ref": "LoadContactsPaginatedRequest"
                    },
                    "response": {
                        "$ref": "LoadContactsPaginatedResponse"
                    }
                },
                "loadproduct": {
                    "description": "Loads specified product",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadproduct",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadproduct",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadproduct",
                    "request": {
                        "$ref": "LoadProductRequest"
                    },
                    "response": {
                        "$ref": "LoadProductResponse"
                    }
                },
                "loadproductuploadhistory": {
                    "description": "Loads all upload metadata for a specified product",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadproductuploadhistory",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadproductuploadhistory",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadproductuploadhistory",
                    "request": {
                        "$ref": "LoadProductUploadHistoryRequest"
                    },
                    "response": {
                        "$ref": "LoadProductUploadHistoryResponse"
                    }
                },
                "loadreportingdetail": {
                    "description": "Loads lists of specific reporting data points with timestamps",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadreportingdetail",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadreportingdetail",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadreportingdetail",
                    "request": {
                        "$ref": "LoadReportingDetailRequest"
                    },
                    "response": {
                        "$ref": "LoadReportingDetailResponse"
                    }
                },
                "loadreportingsummary": {
                    "description": "Loads reporting data for specified product and signal",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/loadreportingsummary",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.loadreportingsummary",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/loadreportingsummary",
                    "request": {
                        "$ref": "LoadReportingSummaryRequest"
                    },
                    "response": {
                        "$ref": "LoadReportingSummaryResponse"
                    }
                },
                "postprocessdispatch": {
                    "description": "Updates Product's metrics based off of the contacts saved from\na given dispatch and creates and saves a new upload tag for the dispatch",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/postprocessdispatch",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.postprocessdispatch",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/postprocessdispatch",
                    "request": {
                        "$ref": "PostProcessDispatchRequest"
                    },
                    "response": {
                        "$ref": "PostProcessDispatchResponse"
                    }
                },
                "querycontacts": {
                    "description": "Executes a query from DynamicQuery and returns the users\nthat match the Criteria",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/querycontacts",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.querycontacts",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/querycontacts",
                    "request": {
                        "$ref": "QueryContactsRequest"
                    },
                    "response": {
                        "$ref": "QueryContactsResponse"
                    }
                },
                "refreshproductsignals": {
                    "description": "Updates Product's signal metadata from latest notification categories\nfor opt-in and opt-in date signals and from latest ContactsColumn\nfor reserved signals",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/refreshproductsignals",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.refreshproductsignals",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/refreshproductsignals",
                    "request": {
                        "$ref": "RefreshProductSignalsRequest"
                    },
                    "response": {
                        "$ref": "RefreshProductSignalsResponse"
                    }
                },
                "saveaccountpipelinecampaignid": {
                    "description": "Sets the product's account pipeline campaign ID",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/saveaccountpipelinecampaignid",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.saveaccountpipelinecampaignid",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/saveaccountpipelinecampaignid",
                    "request": {
                        "$ref": "SaveAccountPipelineCampaignIdRequest"
                    },
                    "response": {
                        "$ref": "SaveAccountPipelineCampaignIdResponse"
                    }
                },
                "savecontact": {
                    "description": "Saves contact with override rules based off of the upload action",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/savecontact",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.savecontact",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/savecontact",
                    "request": {
                        "$ref": "SaveContactRequest"
                    },
                    "response": {
                        "$ref": "SaveContactResponse"
                    }
                },
                "savecontacts": {
                    "description": "Saves contacts with override rules based off of the upload action,\nand creates a new upload tag for the batch.",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/savecontacts",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.savecontacts",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/savecontacts",
                    "request": {
                        "$ref": "SaveContactsRequest"
                    },
                    "response": {
                        "$ref": "SaveContactsResponse"
                    }
                },
                "saveformboxaccessgroup": {
                    "description": "Sets the Product's formbox access group",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/saveformboxaccessgroup",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.saveformboxaccessgroup",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/saveformboxaccessgroup",
                    "request": {
                        "$ref": "SaveFormboxAccessGroupRequest"
                    },
                    "response": {
                        "$ref": "SaveFormboxAccessGroupResponse"
                    }
                },
                "saveproduct": {
                    "description": "Inserts or updates product\nFor updates, load_timestamp_millis must be provided\nto check for save conflicts\nWARNING: ContactProductInfo will replace all contents in F1\nso omitted fields will clear out fields in F1",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/saveproduct",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.saveproduct",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/saveproduct",
                    "request": {
                        "$ref": "SaveProductRequest"
                    },
                    "response": {
                        "$ref": "SaveProductResponse"
                    }
                },
                "savesignalmetadata": {
                    "description": "Saves (inserts new or updates existing) the product's signal metadata",
                    "flatPath": "automatedmarketing/v1missive/contactsApi/savesignalmetadata",
                    "httpMethod": "POST",
                    "id": "nightly_automatedmarketing_pa_sandbox.contactsApi.savesignalmetadata",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "automatedmarketing/v1missive/contactsApi/savesignalmetadata",
                    "request": {
                        "$ref": "SaveSignalMetadataRequest"
                    },
                    "response": {
                        "$ref": "SaveSignalMetadataResponse"
                    }
                }
            }
        }
    },
    "revision": "20190913",
    "rootUrl": "https://nightly-automatedmarketing-pa.sandbox.googleapis.com/",
    "schemas": {
        "APNSRegistration": {
            "description": "Details required to complete registration for push notifications via APNS.\nIf this is used the corresponding AppConfig must contain a valid APNSConfig\nentry. See //apps/people/notifications/proto/config/appconfig.proto.",
            "id": "APNSRegistration",
            "properties": {
                "apnsId": {
                    "description": "The APNS application ID must match the application's APNS push certificate.\nNOTE: This overrides the ID set in the corresponding ViewConfig and should\nbe used only to support dev and other non-prod builds. For prod build this\nfield should be left blank and will be extracted from the corresponding\nViewConfig. See //apps/people/notifications/proto/config/viewconfig.proto.",
                    "type": "string"
                },
                "deviceToken": {
                    "description": "The device token of the Apple device.",
                    "format": "byte",
                    "type": "string"
                },
                "proxy": {
                    "enum": [
                        "PROD",
                        "SANDBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AccountRecipient": {
            "description": "Recipient for the account based send request.",
            "id": "AccountRecipient",
            "properties": {
                "accountId": {
                    "description": "String account_id.  If this is present, the uaid_account_id is not\nrequired to be set.",
                    "type": "string"
                },
                "axpWorkflowRunInfos": {
                    "items": {
                        "$ref": "AxpWorkflowRunInfo"
                    },
                    "type": "array"
                },
                "externalRecipientKey": {
                    "description": "A recipient identifier provided by external GAMMA clients.\nIf present, will be sent back with Fast Server feedback messages.",
                    "format": "byte",
                    "type": "string"
                },
                "internalData": {
                    "$ref": "InternalRecipientData",
                    "description": "INTERNAL ONLY\nThis field must not be set by external clients.\nIt is set and used only internally by Gamma."
                },
                "signals": {
                    "items": {
                        "$ref": "RecipientSignal"
                    },
                    "type": "array"
                },
                "uaidAccountId": {
                    "description": "This is a product specific account ID.\nThe account type must match the product defined by the campaign.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ActiveAdwordsRecipientSource": {
            "id": "ActiveAdwordsRecipientSource",
            "properties": {
                "placeholder": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ActivityFilter": {
            "id": "ActivityFilter",
            "properties": {
                "inactivitySignalOnly": {
                    "type": "boolean"
                },
                "maxDaysInactive": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AddAccessGroupRequest": {
            "id": "AddAccessGroupRequest",
            "properties": {
                "accessGroup": {
                    "type": "string"
                },
                "loadTimestampMillis": {
                    "description": "uses current time if absent",
                    "format": "uint64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AddAccessGroupResponse": {
            "id": "AddAccessGroupResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "AddProductRequest": {
            "id": "AddProductRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AddProductResponse": {
            "id": "AddProductResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "AliasSet": {
            "id": "AliasSet",
            "properties": {
                "aliasSetId": {
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "signalAlias": {
                    "items": {
                        "$ref": "SignalAlias"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AliasesFileUploadRequest": {
            "id": "AliasesFileUploadRequest",
            "properties": {
                "base64EncodedData": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AliasesFileUploadResponse": {
            "id": "AliasesFileUploadResponse",
            "properties": {
                "aliasSet": {
                    "$ref": "AliasSet"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "AnalyticsTag": {
            "description": "LINT.IfChange\nTags for Analytics that are only passed through Gamma to Chime.",
            "id": "AnalyticsTag",
            "properties": {
                "name": {
                    "description": "Required. The name of the tag.",
                    "type": "string"
                },
                "value": {
                    "description": "Required. The value of the tag.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApiVersionRequest": {
            "id": "ApiVersionRequest",
            "properties": {},
            "type": "object"
        },
        "ApiVersionResponse": {
            "id": "ApiVersionResponse",
            "properties": {
                "currentVersion": {
                    "format": "int64",
                    "type": "string"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "minimumCompatibleVersion": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApnsRegistration": {
            "description": "The registration used for sending APNS notifications and updating an APNS\ndevice token.",
            "id": "ApnsRegistration",
            "properties": {
                "enabledTokenEffectiveTimestampUsec": {
                    "description": "Optional. If present, it is the timestamp (in microseconds since the epoch)\nwhen the device token of this registration was last enabled. It can be used\nto verify a device's validity if it was recently updated.",
                    "format": "int64",
                    "type": "string"
                },
                "registeredUserEffectiveTimestampUsec": {
                    "description": "Optional. If present, it is the timestamp (in microseconds since the epoch)\nwhen the user (and the optional SSO token) of this registration became\neffective. It can be used to determine if an SSO token stored is out of\ndate and should not be used.",
                    "format": "int64",
                    "type": "string"
                },
                "registration": {
                    "description": "Required. The actual registration token used to send a message.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AppleDeviceAddress": {
            "description": "Next Id: 3",
            "id": "AppleDeviceAddress",
            "properties": {
                "apnsDeviceToken": {
                    "description": "The device token of the iOS device. Either the device token or the\nregistration token below must be present.",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Required. Must match the bundle identifier when the application was\nsubmitted to Apple.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AppleProxyDeviceAddress": {
            "description": "Next Id: 4",
            "id": "AppleProxyDeviceAddress",
            "properties": {
                "apnsProxyRegistration": {
                    "description": "An APNS registration provided from the ApnsProxy device registry. This is\nProto's string format of notifications/apnsproxy/proto/registration.proto.",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Required. Must match the bundle identifier when the application was\nsubmitted to Apple.",
                    "type": "string"
                },
                "registrationToken": {
                    "description": "The registration field inside the registration proto above. It is converted\nfrom ByteString to string by TextFormat.escapteBytes(ByteString) method.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApplePushAddress": {
            "description": "Used when the ChannelType is APPLE_PUSH.\nNotifications will be sent using ApnsProxyService.SendDeviceNotification,\npreferentially with the registration is available, else with the\ndevice_token.\nWhen serving back Targets stored in Chime, both device_token and registration\nshould be populated. Legacy devices may key against the device_token if they\nare unaware of the registration.\nWhen storing Targets in Chime, device_token is required. If\nRegistration is also provided, we will assume the token is already stored in\nAPNS Device Registry and skip that call.\nFor delivery: At least one of device_token and registration is required,\nwith device_token used preferentially.",
            "id": "ApplePushAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. This must correspond to a previously configured AppleApplication\nfor the client sending to this address.",
                    "type": "string"
                },
                "applicationIdSuffix": {
                    "description": "Optional. This suffix will be appended to the application_id with no\ndelimiter prior to handoff to APNS for delivery. It should be used to\nsend to DeviceManagementProfiles (whilst supporting Chime's\nAppleApplication config model).\nExample: To send to- com.apple.mgmt.External.xxxxxxxx\nConfigure \"com.apple.mgmt.External\" as an AppleApplication and use in the\napplication_id field. Use \".xxxxxxxx\" in this suffix field.",
                    "type": "string"
                },
                "deviceToken": {
                    "description": "The device token of the iOS device. If your input is something like\n0xABCDEF, the first byte will contain {AB}, the second {CD}, and the last\none {EF}. To convert from a string containing hex characters, you should\nuse a function like:\ncom.google.wireless.push.apple.apnsproxy.clientutil.DeviceTokenUtil's\nfromHexString method.",
                    "format": "byte",
                    "type": "string"
                },
                "dusi": {
                    "description": "Optional. go/dusi is an identifier for a device session originating the\nlast StoreRequest received for this particular target.",
                    "type": "string"
                },
                "registration": {
                    "$ref": "ApnsRegistration",
                    "description": "DEPRECATED: Do not use.\nAn APNS token registration provided from the ApnsProxy device registry."
                }
            },
            "type": "object"
        },
        "ApproveCampaignRequest": {
            "id": "ApproveCampaignRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "cutoffTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApproveCampaignResponse": {
            "id": "ApproveCampaignResponse",
            "properties": {
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "campaignVersion": {
                    "$ref": "LastSavedVersionInfo"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "expiredListNames": {
                    "items": {
                        "$ref": "ScheduledSourceInfo"
                    },
                    "type": "array"
                },
                "futureListNames": {
                    "items": {
                        "$ref": "ScheduledSourceInfo"
                    },
                    "type": "array"
                },
                "publishVersionId": {
                    "format": "int64",
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ArchiveCampaignRequest": {
            "id": "ArchiveCampaignRequest",
            "properties": {
                "campaignIds": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ArchiveCampaignResponse": {
            "id": "ArchiveCampaignResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "errorType": {
                    "enum": [
                        "ERROR_TYPE_UNKNOWN",
                        "ERROR_TYPE_GENERAL",
                        "ERROR_TYPE_SAVE_CONFLICT",
                        "ERROR_TYPE_RECORD_NOT_EXISTING",
                        "ERROR_TYPE_NOT_AUTHORIZED",
                        "ERROR_TYPE_VALIDATION_FAILED",
                        "ERROR_TYPE_INFRASTRUCTURE",
                        "ERROR_TYPE_HTML_TO_IMAGE_RENDER_FAILED",
                        "ERROR_TYPE_PROOF_FAILED",
                        "ERROR_TYPE_RECORD_METRIC_FAILED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Asr": {
            "id": "Asr",
            "properties": {
                "prefix": {
                    "description": "Combined with an account id to form an ASR key, the key can then be used to\nget ASR signals.",
                    "type": "string"
                },
                "userSignals": {
                    "description": "Maps CSV Field name to an ASR expression.\nIt would be nice if this could be a map<string, string>",
                    "items": {
                        "$ref": "AsrUserSignal"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AsrUserSignal": {
            "id": "AsrUserSignal",
            "properties": {
                "asrExpressionValue": {
                    "type": "string"
                },
                "csvFieldNameKey": {
                    "description": "Fake up a map with CSV fieldnames as keys and asr expressions as values.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AtlasExpansionConfig": {
            "id": "AtlasExpansionConfig",
            "properties": {
                "allCampaignsWhitelisted": {
                    "description": "Whether all campaigns are whitelisted to use this config.\nIff true, overrides whitelisted_campaign_ids field.",
                    "type": "boolean"
                },
                "productExpansionConfigs": {
                    "description": "The configuration for a single Atlas product.",
                    "items": {
                        "$ref": "SingleAtlasProductExpansionConfig"
                    },
                    "type": "array"
                },
                "whitelistedCampaignIds": {
                    "description": "A list of campaigns that are whitelisted to use this config.\nOverrided by all_campaigns_whitelisted field iff true.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AxpTreatmentNode": {
            "description": "Node that is used to apply AXP treatment",
            "id": "AxpTreatmentNode",
            "properties": {
                "axpWorkflowId": {
                    "format": "int64",
                    "type": "string"
                },
                "axpWorkflowParameter": {
                    "type": "string"
                },
                "numTreatments": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AxpWorkflowItem": {
            "id": "AxpWorkflowItem",
            "properties": {
                "workflowDesc": {
                    "type": "string"
                },
                "workflowId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AxpWorkflowRunInfo": {
            "description": "LINT.IfChange\nRepresents the information for a particular AXP Workflow run",
            "id": "AxpWorkflowRunInfo",
            "properties": {
                "axpTreatmentNodeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "axpWorkflowId": {
                    "format": "int64",
                    "type": "string"
                },
                "axpWorkflowRunId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BranchResults": {
            "id": "BranchResults",
            "properties": {
                "allocation": {
                    "format": "int32",
                    "type": "integer"
                },
                "clicked": {
                    "format": "int64",
                    "type": "string"
                },
                "ctr": {
                    "format": "double",
                    "type": "number"
                },
                "label": {
                    "type": "string"
                },
                "nodeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "openRate": {
                    "format": "double",
                    "type": "number"
                },
                "opened": {
                    "format": "int64",
                    "type": "string"
                },
                "sent": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignBasicInfoRequest": {
            "id": "CampaignBasicInfoRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignBasicInfoResponse": {
            "id": "CampaignBasicInfoResponse",
            "properties": {
                "collaborators": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "languages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignDetailsResponse": {
            "id": "CampaignDetailsResponse",
            "properties": {
                "defaultDetails": {
                    "$ref": "DetailsDefaultResponse"
                },
                "detailsType": {
                    "enum": [
                        "DETAILS_UNKNOWN",
                        "DETAILS_DEFAULT",
                        "DETAILS_IN_PROGRESS",
                        "DETAILS_UNSENT",
                        "DETAILS_RESULTS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "inProgressDetails": {
                    "$ref": "DetailsInProgressResponse"
                },
                "resultsDetails": {
                    "$ref": "DetailsResultsResponse"
                },
                "scheduledDetails": {
                    "$ref": "DetailsScheduledResponse"
                }
            },
            "type": "object"
        },
        "CampaignInfo": {
            "description": "This is the API object for describing campaign metadata.",
            "id": "CampaignInfo",
            "properties": {
                "accountUserEmailPreference": {
                    "enum": [
                        "ACCOUNT_USER_EMAIL_PREFERENCE_UNKNOWN",
                        "ACCOUNT_USER_EMAIL_PREFERENCE_ONE_EMAIL_PER_USER",
                        "ACCOUNT_USER_EMAIL_PREFERENCE_EMAIL_PER_USER_PER_ACCOUNT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "additionalAllowedUploaders": {
                    "description": "User(s) or group(s) that can write files to cns to be uploaded for this\ncampaign.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowExternalCcBcc": {
                    "type": "boolean"
                },
                "analyticsTags": {
                    "description": "Tags for Analytics that are only passed through Gamma to Chime.",
                    "items": {
                        "$ref": "AnalyticsTag"
                    },
                    "type": "array"
                },
                "androidApplicationId": {
                    "type": "string"
                },
                "approvalDenyReason": {
                    "description": "Gamma Admin's reason to deny campaign approval.",
                    "type": "string"
                },
                "approvalTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "approvalUser": {
                    "description": "LDAP of user who approved the campaign.",
                    "type": "string"
                },
                "attributionProviders": {
                    "description": "A collection of all enabled custom attribution providers for this campaign.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "ATTRIBUTION_PROVIDER_UNKNOWN",
                            "ATTRIBUTION_PROVIDER_GAMMA",
                            "ATTRIBUTION_PROVIDER_YOUTUBE",
                            "ATTRIBUTION_PROVIDER_GOOGLEPLUS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "autoClickTracking": {
                    "enum": [
                        "AUTO_TRACK_PREFERENCE_UNKNOWN",
                        "AUTO_TRACK_PREFERENCE_DEFAULT",
                        "AUTO_TRACK_PREFERENCE_DISABLED",
                        "AUTO_TRACK_PREFERENCE_ENABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "autoOpenTracking": {
                    "enum": [
                        "AUTO_TRACK_PREFERENCE_UNKNOWN",
                        "AUTO_TRACK_PREFERENCE_DEFAULT",
                        "AUTO_TRACK_PREFERENCE_DISABLED",
                        "AUTO_TRACK_PREFERENCE_ENABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "campaignId": {
                    "description": "ID for the campaign",
                    "format": "int64",
                    "type": "string"
                },
                "chimePreferenceInfo": {
                    "$ref": "ChimePreferenceInfo",
                    "description": "Value of chime preference info for optout filtering (optional)"
                },
                "chimeTypeId": {
                    "type": "string"
                },
                "deliveryPreference": {
                    "enum": [
                        "DELIVERY_PREFERENCE_GAMMA_TO_GMR",
                        "DELIVERY_PREFERENCE_GUNS",
                        "DELIVERY_PREFERENCE_CHIME_TARGET",
                        "DELIVERY_PREFERENCE_CHIME_USER",
                        "DELIVERY_PREFERENCE_HEDWIG",
                        "DELIVERY_PREFERENCE_ADSENSE_INBOX",
                        "DELIVERY_PREFERENCE_ASFE_INBOX",
                        "DELIVERY_PREFERENCE_AWX_APP_NOTIFY",
                        "DELIVERY_PREFERENCE_AWX_APP_ACCOUNT_UPDATE",
                        "DELIVERY_PREFERENCE_AWX_APP_PERFORMANCE_TIP",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_SYSTEM_ANNOUNCEMENT",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_GENERAL_ANNOUNCEMENT",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_FEEDBACK_AND_TESTING",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_OFFERS",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_PERFORMANCE_UPDATES",
                        "DELIVERY_PREFERENCE_WNC_NEWS",
                        "DELIVERY_PREFERENCE_WNC_INFORMATIVE",
                        "DELIVERY_PREFERENCE_WNC_WARNING",
                        "DELIVERY_PREFERENCE_WNC_ERROR",
                        "DELIVERY_PREFERENCE_WNC_CRITICAL",
                        "DELIVERY_PREFERENCE_GLASS_MARKETING_EMAIL",
                        "DELIVERY_PREFERENCE_GLASS_SURVEY_EMAIL",
                        "DELIVERY_PREFERENCE_TEST_EMPTY_RENDERER",
                        "DELIVERY_PREFERENCE_TEST_PRE_RENDERED",
                        "DELIVERY_PREFERENCE_TEST_MOBILE_ALERT",
                        "DELIVERY_PREFERENCE_LOCAL_ACTIONS_REVIEWS_UPDATES_EMAIL",
                        "DELIVERY_PREFERENCE_GMB_LOCAL_REVIEW_NOTIFICATION",
                        "DELIVERY_PREFERENCE_GMB_TEST_NOTIFICATION",
                        "DELIVERY_PREFERENCE_GMB_GAMMA_NOTIFICATION",
                        "DELIVERY_PREFERENCE_PLAY_MOVIES_NEW_TV_SEASON_EMAIL",
                        "DELIVERY_PREFERENCE_PLAY_MOVIES_TEST_NOTIFICATION",
                        "DELIVERY_PREFERENCE_PLAY_MOVIES_NEW_TV_SEASON_PUSH",
                        "DELIVERY_PREFERENCE_GOOGLE_PLUS_SYSTEM_REACTIVATION",
                        "DELIVERY_PREFERENCE_MERCHANT_CENTER_UNS_EMAIL",
                        "DELIVERY_PREFERENCE_GSX_IMPORTANT_ACCOUNT_ALERT",
                        "DELIVERY_PREFERENCE_GSX_PERSONALIZED_REMINDER",
                        "DELIVERY_PREFERENCE_GSX_SALE_OR_DISCOUNT"
                    ],
                    "enumDescriptions": [
                        "Default delivery preference: \"Send email to GMR by Gamma\".\nIntentionally chosen as 0 to be proto-defaulted to GAMMA_TO_GMR.",
                        "The common delivery preference for GUNS push notifications.",
                        "Multi-Channel Chime notifications via NotifyTarget.",
                        "Multi-Channel Chime notifications via NotifyUser.",
                        "Send AdWords frontend alerts to the Hedwig system via their API.",
                        "AdSense-specific delivery preferences for UNS.",
                        "",
                        "AdWords Express delivery preferences for UNS.",
                        "",
                        "",
                        "PlusPages-specific delivery preferences for UNS",
                        "",
                        "",
                        "",
                        "",
                        "Webmaster Tools-specific delivery preferences for UNS.",
                        "",
                        "",
                        "",
                        "",
                        "Glass-specific delivery preferences for UNS.",
                        "",
                        "Test App delivery preferences for GUNS.",
                        "",
                        "",
                        "Local Actions-specific delivery preferences for UNS.",
                        "Google My Business delivery preferences for GUNS.",
                        "",
                        "",
                        "Play Movies delivery preferences for GUNS.",
                        "",
                        "",
                        "Google+ delivery preferences for GUNS.",
                        "Merchant Center delivery preferences for UNS.",
                        "Google Express delivery preferences for UNS.",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Additional notes about the campaign",
                    "type": "string"
                },
                "disallowGkmsSnippetInclude": {
                    "type": "boolean"
                },
                "dispatchMethod": {
                    "enum": [
                        "DISPATCH_METHOD_UNKNOWN",
                        "DISPATCH_METHOD_DEFAULT",
                        "DISPATCH_METHOD_FAST_SEND_ONLY",
                        "DISPATCH_METHOD_BATCH_ONLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "enableCssInlining": {
                    "type": "boolean"
                },
                "enableCsvUpload": {
                    "description": "CSV Upload settings.",
                    "type": "boolean"
                },
                "enableShardedCsvConsolidation": {
                    "type": "boolean"
                },
                "enableUseDeviceLocale": {
                    "type": "boolean"
                },
                "executionModelVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "fallbackLanguage": {
                    "type": "string"
                },
                "focusPreference": {
                    "enum": [
                        "FOCUS_PREFERENCE_UNKNOWN",
                        "FOCUS_PREFERENCE_NONE",
                        "FOCUS_PREFERENCE_PREFERRED",
                        "FOCUS_PREFERENCE_FETCH_ONLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "globalControlGroupExcluded": {
                    "type": "boolean"
                },
                "globalRolloutDiversionSeed": {
                    "description": "When doing global campaign-level rollout, use this as the hashing seed.\nIn Mendel terms, this is equivalent to the layer Id of the rollout.\ngo/execution-rollout-ndd",
                    "format": "int64",
                    "type": "string"
                },
                "gnpCampaignInfo": {
                    "$ref": "GnpCampaignInfo",
                    "description": "GNP campaign info. This field is populated in GNP campaigns only."
                },
                "iosApplicationId": {
                    "type": "string"
                },
                "languages": {
                    "description": "This should be a string representation of a\nLanguageCode (e.g. EN-US, FR, PL).  This will be converted leniently to\na LanguageCode so case and '-' vs '_' don't matter.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "marketingApprovalId": {
                    "type": "string"
                },
                "mobileApplication": {
                    "description": "TODO(b/35929458) deprecate",
                    "type": "string"
                },
                "noScheduledRecipients": {
                    "type": "boolean"
                },
                "numSeedListRecipients": {
                    "description": "[DEPRECATED] BCC collaborators via the \"seed lists\" feature (see\ngo/bye-seed-list)",
                    "format": "int32",
                    "type": "integer"
                },
                "optInInt": {
                    "description": "Opt-Out type for the campaign.\nThis controls what footer and opt-out link are generated or\nrequired.",
                    "format": "int32",
                    "type": "integer"
                },
                "productId": {
                    "description": "This is the ID that should match Gamma java enumeration for Product.",
                    "format": "int32",
                    "type": "integer"
                },
                "programLabel": {
                    "type": "string"
                },
                "recipientIdsWithExpiredSchedules": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "recipientRoles": {
                    "description": "Only useful for a subset of ASR expansion campaigns where multiple users\nwithin an account have defined roles.  This allows for automatic Gamma\nfiltering after expansion.",
                    "enumDescriptions": [
                        "AdWords roles",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "AdSense Roles",
                        "",
                        "Analytics Roles",
                        "",
                        "",
                        "",
                        "",
                        "Merchant center",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Google Cloud Platform",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Customer Acquisition Platform",
                        "",
                        "Next available ID: 44"
                    ],
                    "items": {
                        "enum": [
                            "ADWORDS_ADMIN",
                            "ADWORDS_STANDARD",
                            "ADWORDS_MANAGED_REPORTS",
                            "ADWORDS_MANAGED_STANDARD",
                            "ADWORDS_READONLY",
                            "ADWORDS_LIMITED_TO_BILLING_SETUP",
                            "ADWORDS_REPORTS_ONLY",
                            "ADWORDS_TEAM_ADMIN",
                            "ADWORDS_3PTOOLS_ADMIN",
                            "ADWORDS_3PTOOLS_LEADS_MANAGER",
                            "ADWORDS_3PTOOLS_SALES",
                            "ADWORDS_MCC_PLACEHOLDER",
                            "ADWORDS_REST",
                            "ADWORDS_MANAGER_ADMIN",
                            "ADWORDS_MANAGER_STANDARD",
                            "ADSENSE_PRIMARY_CONTACT",
                            "ADSENSE_PENDING_GAIA_REGISTRATION",
                            "ANALYTICS_ADMIN",
                            "ANALYTICS_USER",
                            "ANALYTICS_READ_ANALYZE",
                            "ANALYTICS_EDIT",
                            "ANALYTICS_MANAGE",
                            "MERCHANT_CENTER_MAIN_DEPRECATED",
                            "MERCHANT_CENTER_TECHNICAL_DEPRECATED",
                            "MERCHANT_CENTER_INTERNAL_TRUSTEE_MANAGER",
                            "MERCHANT_CENTER_INTERNAL_STRATEGIC",
                            "MERCHANT_CENTER_NOTIFICATION",
                            "MERCHANT_CENTER_LIMITED_NOTIFICATION",
                            "GOOGLE_CLOUD_PLATFORM_ACCOUNT_ADMIN",
                            "GOOGLE_CLOUD_PLATFORM_PRODUCT_ADMIN",
                            "GOOGLE_CLOUD_PLATFORM_PRODUCT_DEVELOPER",
                            "GOOGLE_CLOUD_PLATFORM_PRODUCT_EDITOR",
                            "GOOGLE_CLOUD_PLATFORM_PRODUCT_OTHER",
                            "GOOGLE_CLOUD_PLATFORM_PRODUCT_OWNER",
                            "GOOGLE_CLOUD_PLATFORM_PRODUCT_VIEWER",
                            "GOOGLE_CLOUD_PLATFORM_PROJECT_BROWSER",
                            "GOOGLE_CLOUD_PLATFORM_PROJECT_EDITOR",
                            "GOOGLE_CLOUD_PLATFORM_PROJECT_OWNER",
                            "GOOGLE_CLOUD_PLATFORM_PROJECT_VIEWER",
                            "GOOGLE_CLOUD_PLATFORM_ORGANIZATION_ADMIN",
                            "CUSTOMER_ACQUISITION_PLATFORM_ADWORDS_ACCESS",
                            "CUSTOMER_ACQUISITION_PLATFORM_ANALYTICS_ACCESS",
                            "CUSTOMER_ACQUISITION_PLATFORM_FORMBOX_ACCESS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "rolloutInfo": {
                    "$ref": "CampaignRollout"
                },
                "sendOnlyToUnconfirmed": {
                    "type": "boolean"
                },
                "sendToAnyLanguage": {
                    "type": "boolean"
                },
                "state": {
                    "description": "Approved and running states are represented here.",
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "tauId": {
                    "type": "string"
                },
                "title": {
                    "description": "Campaign name as displayed in the campaign list and on campaign screens",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignListData": {
            "id": "CampaignListData",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "campaignLastModifiedTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "collaborators": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "detailsType": {
                    "enum": [
                        "DETAILS_UNKNOWN",
                        "DETAILS_DEFAULT",
                        "DETAILS_IN_PROGRESS",
                        "DETAILS_UNSENT",
                        "DETAILS_RESULTS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignMetrics": {
            "description": "LINT.IfChange",
            "id": "CampaignMetrics",
            "properties": {
                "creationTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "firstApprovalTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "firstPreviewTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "firstProofTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "firstScheduleSavedTimestampMillis": {
                    "description": "Used to calculate send-based metrics",
                    "format": "int64",
                    "type": "string"
                },
                "firstSendTimestampMillis": {
                    "description": "Next available: 8",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignOverviewRequest": {
            "id": "CampaignOverviewRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "CampaignOverviewResponse": {
            "id": "CampaignOverviewResponse",
            "properties": {
                "creativeTypes": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CREATIVE_BODY_FORMAT_UNKNOWN",
                            "CREATIVE_BODY_FORMAT_EMAIL_TEXT",
                            "CREATIVE_BODY_FORMAT_EMAIL_HTML",
                            "CREATIVE_BODY_FORMAT_LANDING_PAGE",
                            "CREATIVE_BODY_FORMAT_PUSH_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_SMS",
                            "CREATIVE_BODY_FORMAT_ADWORDS_ALERT",
                            "CREATIVE_BODY_FORMAT_IN_APP_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_EMAIL_AMP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData",
                    "description": "NEXT AVAILABLE NUMBER: 18"
                },
                "hasPublishedVersion": {
                    "type": "boolean"
                },
                "messageIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "messageNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "messageProofInfos": {
                    "items": {
                        "$ref": "MessageProofInfo"
                    },
                    "type": "array"
                },
                "messageSpamIds": {
                    "description": "Should be one entry per message, even if the message has no spam id\nWe use entries of 'empty string' to indicate missing spam approval",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "numCreativeBodies": {
                    "format": "int64",
                    "type": "string"
                },
                "numCreativeBodiesMissing": {
                    "format": "int64",
                    "type": "string"
                },
                "numLists": {
                    "format": "int64",
                    "type": "string"
                },
                "numMessages": {
                    "format": "int64",
                    "type": "string"
                },
                "numNodes": {
                    "format": "int64",
                    "type": "string"
                },
                "numProofEmails": {
                    "format": "int64",
                    "type": "string"
                },
                "numSchedules": {
                    "format": "int64",
                    "type": "string"
                },
                "numSections": {
                    "format": "int64",
                    "type": "string"
                },
                "recipientListInfo": {
                    "$ref": "RecipientListInfo"
                },
                "workflowSimulationInfo": {
                    "$ref": "WorkflowSimulationInfo"
                }
            },
            "type": "object"
        },
        "CampaignRollout": {
            "description": "Information about rollout of the campaign.",
            "id": "CampaignRollout",
            "properties": {
                "globalCampaignRollout": {
                    "$ref": "RolloutRatio",
                    "description": "Rollout for entire campaign, applies to every recipient\nsent to this campaign."
                }
            },
            "type": "object"
        },
        "CampaignSearchRequest": {
            "description": "Contains the query (in the form of an r-query) and options for sorting\nand pagination.",
            "id": "CampaignSearchRequest",
            "properties": {
                "includeGnpCampaigns": {
                    "description": "If true, return both standard campaigns and GNP campaigns.\nNext available ID = 8",
                    "type": "boolean"
                },
                "offset": {
                    "description": "Zero-based offset. Basically it's the number of results to skip.",
                    "format": "int64",
                    "type": "string"
                },
                "pageSize": {
                    "description": "Number of max results to return.",
                    "format": "int64",
                    "type": "string"
                },
                "paginated": {
                    "description": "If true, offset and page_size will be used to limit the results.",
                    "type": "boolean"
                },
                "queryString": {
                    "description": "Raw query as entered by the user, e.g. \"htc product:adwords\"",
                    "type": "string"
                },
                "sortByField": {
                    "enum": [
                        "FIELD_UNKNOWN",
                        "FIELD_ID",
                        "FIELD_TITLE",
                        "FIELD_STATE",
                        "FIELD_LAST_RUN",
                        "FIELD_LAST_SAVE_TIMESTAMP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sortOrder": {
                    "enum": [
                        "SORT_ORDER_UNKNOWN",
                        "SORT_ORDER_ASCENDING",
                        "SORT_ORDER_DESCENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignSearchResponse": {
            "description": "List of campaigns meeting the search criteria.",
            "id": "CampaignSearchResponse",
            "properties": {
                "campaignDatas": {
                    "items": {
                        "$ref": "CampaignListData"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "numTotalResults": {
                    "description": "Total number of results for the query, useful if using paging.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignValidationErrorData": {
            "description": "Error data for ERROR_TYPE_VALIDATION_FAILED",
            "id": "CampaignValidationErrorData",
            "properties": {
                "items": {
                    "items": {
                        "$ref": "CampaignValidationItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CampaignValidationItem": {
            "id": "CampaignValidationItem",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "tab": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CampaignValidationRequest": {
            "id": "CampaignValidationRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "campaignInfo": {
                    "$ref": "CampaignInfo",
                    "description": "Optional fields for data that has been edited in the UI"
                },
                "changedMessages": {
                    "items": {
                        "$ref": "Message"
                    },
                    "type": "array"
                },
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "deletedMessages": {
                    "items": {
                        "$ref": "MessageDetails"
                    },
                    "type": "array"
                },
                "fastSendConfig": {
                    "$ref": "FastSendConfig"
                },
                "filterConfig": {
                    "$ref": "FilterConfig"
                },
                "messageInfos": {
                    "items": {
                        "$ref": "Message"
                    },
                    "type": "array"
                },
                "numErrorSamples": {
                    "format": "int32",
                    "type": "integer"
                },
                "numWarningSamples": {
                    "description": "NOTE: for num_warning_samples and num_error_samples\nany value < 0 will be treated as a request to return all samples",
                    "format": "int32",
                    "type": "integer"
                },
                "proofConfig": {
                    "$ref": "ProofConfig"
                },
                "workflowInfo": {
                    "$ref": "WorkflowInfo"
                },
                "workflowSections": {
                    "items": {
                        "$ref": "WorkflowSection"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CampaignValidationResponse": {
            "id": "CampaignValidationResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "items": {
                    "items": {
                        "$ref": "CampaignValidationItem"
                    },
                    "type": "array"
                },
                "totalErrors": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalWarnings": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CampaignVersionInfo": {
            "description": "Represents a row in the campaign version browser, so either a state change,\nor a published version, or the campaign's unpublished changes.",
            "id": "CampaignVersionInfo",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "changeInfos": {
                    "description": "Set for published versions and the row that represents the campaign's\nunpublished changes",
                    "items": {
                        "$ref": "ChangeInfo"
                    },
                    "type": "array"
                },
                "displayLastModifiedTimestampMillis": {
                    "description": "The last modified timestamp to display to users for this version\nshould always be equivalent to GammaVersionBrowserInfoPB's\nsort_timestamp_millis field",
                    "format": "int64",
                    "type": "string"
                },
                "editors": {
                    "description": "Only applies to published versions. Same as publish_user. Originally\nintended to be the set of save users of the unpublished changes rolled up\ninto this published version, but that information is now available from\nchange_info.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "isLatest": {
                    "description": "Only applies to published versions",
                    "type": "boolean"
                },
                "lastModifiedTimestampMillis": {
                    "description": "The commit timestamp of the f1 version browser record\nshould always be set to the value of GammaVersionBrowser's\nLastModifiedTimestamp column",
                    "format": "int64",
                    "type": "string"
                },
                "partsChangeds": {
                    "description": "Only applies to published versions",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CAMPAIGN_PART_UNKNOWN",
                            "CAMPAIGN_PART_SETTINGS",
                            "CAMPAIGN_PART_MESSAGES",
                            "CAMPAIGN_PART_WORKFLOW",
                            "CAMPAIGN_PART_FILTERS",
                            "CAMPAIGN_PART_SIGNAL_ALIASES"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "publishUser": {
                    "description": "Only applies to published versions",
                    "type": "string"
                },
                "publishedTimestampMillis": {
                    "description": "Only applies to published versions",
                    "format": "int64",
                    "type": "string"
                },
                "stateChange": {
                    "$ref": "StateChange",
                    "description": "Only applies to state changes"
                },
                "versionId": {
                    "description": "Only applies to published versions",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChangeInfo": {
            "id": "ChangeInfo",
            "properties": {
                "partsChangeds": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CAMPAIGN_PART_UNKNOWN",
                            "CAMPAIGN_PART_SETTINGS",
                            "CAMPAIGN_PART_MESSAGES",
                            "CAMPAIGN_PART_WORKFLOW",
                            "CAMPAIGN_PART_FILTERS",
                            "CAMPAIGN_PART_SIGNAL_ALIASES"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "saveTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CheckAuthenticationRequest": {
            "id": "CheckAuthenticationRequest",
            "properties": {},
            "type": "object"
        },
        "CheckAuthenticationResponse": {
            "id": "CheckAuthenticationResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "CheckDynamicQueryUsageRequest": {
            "id": "CheckDynamicQueryUsageRequest",
            "properties": {
                "queryId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CheckDynamicQueryUsageResponse": {
            "id": "CheckDynamicQueryUsageResponse",
            "properties": {
                "campaigns": {
                    "items": {
                        "$ref": "CampaignListData"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "ChimeMobileApplication": {
            "id": "ChimeMobileApplication",
            "properties": {
                "applicationId": {
                    "description": "Matches the gcm or ios application id",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChimeNotificationType": {
            "id": "ChimeNotificationType",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isSmsAllowed": {
                    "type": "boolean"
                },
                "mobileGatewayClientName": {
                    "type": "string"
                },
                "typeId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChimePreferenceInfo": {
            "description": "Information about chime preference",
            "id": "ChimePreferenceInfo",
            "properties": {
                "defaultPushValue": {
                    "description": "Default preference for push messages when chime preference is not defined",
                    "enum": [
                        "NOTIFY_PREFERENCE_UNKNOWN",
                        "NOTIFY",
                        "DROP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "key": {
                    "description": "Chime preference key",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChimeRegisteredDevice": {
            "id": "ChimeRegisteredDevice",
            "properties": {
                "registrationTimestampUsec": {
                    "description": "The timestamp when this target was stored.",
                    "format": "int64",
                    "type": "string"
                },
                "renderContext": {
                    "$ref": "RenderContext",
                    "description": "Render information that this device was stored with."
                },
                "target": {
                    "$ref": "Target",
                    "description": "The registered target."
                }
            },
            "type": "object"
        },
        "ChimeWorkflowSpec": {
            "description": "Proto messages, representing \u201cworkflow id\u201d(workflow name) which can be used\ncan be used\nistead of the campaign ID according to the new Chime notifyWorkflow API\n(go/chime-notify-workflow-design)\n\nChime does a lookup by client id (1:1 equivalent to Gamma products) then\nfinds the Gamma campaign ID that corresponds to the workflow id.\nWorkflow IDs are namespaced by client ID\nso that a workflow ID (workflow name) does not have to be globally unique.",
            "id": "ChimeWorkflowSpec",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "workflowName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClearErrorsRequest": {
            "id": "ClearErrorsRequest",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "endTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                },
                "startTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CollaboratorEntry": {
            "id": "CollaboratorEntry",
            "properties": {
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "COLLABORATOR_PERMISSION_UNKNOWN",
                            "COLLABORATOR_PERMISSION_EDITOR",
                            "COLLABORATOR_PERMISSION_PUBLISHER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "COLLABORATOR_TYPE_UNKNOWN",
                        "COLLABORATOR_TYPE_USER",
                        "COLLABORATOR_TYPE_GOOGLE_GROUP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Collaborators": {
            "id": "Collaborators",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "collaboratorEntrys": {
                    "items": {
                        "$ref": "CollaboratorEntry"
                    },
                    "type": "array"
                },
                "collaboratorGroups": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "collaborators": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ColumnMapping": {
            "id": "ColumnMapping",
            "properties": {
                "signalName": {
                    "type": "string"
                },
                "signalType": {
                    "description": "signal names are unique across types, so signal_type\nis not needed or used",
                    "enum": [
                        "SIGNAL_TYPE_UNKNOWN",
                        "SIGNAL_TYPE_GENERIC",
                        "SIGNAL_TYPE_OPT_IN",
                        "SIGNAL_TYPE_RESERVED",
                        "SIGNAL_TYPE_OPT_IN_DATE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Signals created by users that store generic data in the form of strings",
                        "Signals that store an opt-in preference",
                        "Signals hardcoded in the system (such as EmailAddress and\nLanguagePreference) with names not be overwritten by custom user signals\n(GENERIC signals)",
                        "Signals that store the collection date of an opt-in"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ColumnMappingEntry": {
            "id": "ColumnMappingEntry",
            "properties": {
                "key": {
                    "description": "column name is map's key",
                    "type": "string"
                },
                "value": {
                    "$ref": "ColumnMapping"
                }
            },
            "type": "object"
        },
        "CompletelyDeleteContactRequest": {
            "id": "CompletelyDeleteContactRequest",
            "properties": {
                "contactId": {
                    "format": "int64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletelyDeleteContactResponse": {
            "id": "CompletelyDeleteContactResponse",
            "properties": {},
            "type": "object"
        },
        "ConditionNode": {
            "description": "Node that allows to proceed only if the condition is met",
            "id": "ConditionNode",
            "properties": {
                "conditionLabels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "conditions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Contact": {
            "id": "Contact",
            "properties": {
                "contactAttributes": {
                    "additionalProperties": {
                        "$ref": "ContactAttribute"
                    },
                    "description": "attribute name is map's key (same as signal name or column name depending\non ingest_config)",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ContactAttribute": {
            "id": "ContactAttribute",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ContactInfo": {
            "id": "ContactInfo",
            "properties": {
                "contactId": {
                    "format": "int64",
                    "type": "string"
                },
                "creationTimestampMillis": {
                    "description": "read only attribute.",
                    "format": "int64",
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "emailAddressHash": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "modifiedTimestampMillis": {
                    "description": "read only attribute.",
                    "format": "int64",
                    "type": "string"
                },
                "optInSignals": {
                    "items": {
                        "$ref": "OptInSignalInfoEntry"
                    },
                    "type": "array"
                },
                "productNamespace": {
                    "type": "string"
                },
                "signals": {
                    "items": {
                        "$ref": "SignalInfoEntry"
                    },
                    "type": "array"
                },
                "uploadTagIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ContactProductInfo": {
            "id": "ContactProductInfo",
            "properties": {
                "accessGroups": {
                    "description": "list of Google Groups Groups that grant access to this product",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "accountPipelineCampaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "formboxAccessGroup": {
                    "type": "string"
                },
                "productId": {
                    "description": "product_id must correspond to a product in F1 with\nenable_contact_management set.",
                    "format": "int32",
                    "type": "integer"
                },
                "productName": {
                    "description": "product_name is read-only and matches the product in F1.",
                    "type": "string"
                },
                "signalMetadatas": {
                    "items": {
                        "$ref": "SignalMetadataInfoEntry"
                    },
                    "type": "array"
                },
                "totalContacts": {
                    "description": "does not include deleted contacts",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ControlGroupNode": {
            "description": "Node that terminates workflow execution",
            "id": "ControlGroupNode",
            "properties": {
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CountContactsRequest": {
            "id": "CountContactsRequest",
            "properties": {
                "criteria": {
                    "$ref": "CriteriaProto"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "requestor": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CountContactsResponse": {
            "id": "CountContactsResponse",
            "properties": {
                "numContacts": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CountErrorsRequest": {
            "id": "CountErrorsRequest",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "endTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                },
                "startTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CountErrorsResponse": {
            "id": "CountErrorsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "errorCount": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CouponRetrievalData": {
            "id": "CouponRetrievalData",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "coupons": {
                    "description": "Next available: 9",
                    "items": {
                        "$ref": "IncentiveInfo"
                    },
                    "type": "array"
                },
                "dispatch": {
                    "description": "String version of dispatch_id",
                    "type": "string"
                },
                "dispatchId": {
                    "format": "int32",
                    "type": "integer"
                },
                "nodeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "primaryAccountId": {
                    "description": "This is based off the Gamma Product in use\n Using Product->getNamespace()->primaryId() you can retrieve a Signal name\n The Id retrieved by that signal name is the Primary Id\n In the case of a list of email address, it is the email address hash",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateCampaignRequest": {
            "description": "Create requests do not include a last saved version (these objects\nare new) but will have one returned for future save requests on this object.",
            "id": "CreateCampaignRequest",
            "properties": {
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "collaborators": {
                    "$ref": "Collaborators"
                }
            },
            "type": "object"
        },
        "CreateCampaignResponse": {
            "id": "CreateCampaignResponse",
            "properties": {
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "CreateRecipientSourceFromGroupRequest": {
            "id": "CreateRecipientSourceFromGroupRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "languagePreference": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateRecipientSourceFromGroupResponse": {
            "id": "CreateRecipientSourceFromGroupResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "recipientSource": {
                    "$ref": "RecipientSource"
                }
            },
            "type": "object"
        },
        "Creative": {
            "description": "A message creative",
            "id": "Creative",
            "properties": {
                "contentLanguage": {
                    "description": "Language of the content of the creative.",
                    "type": "string"
                },
                "creativeBodyDatas": {
                    "items": {
                        "$ref": "CreativeBodyData"
                    },
                    "type": "array"
                },
                "email": {
                    "$ref": "CreativeEmail"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "languages": {
                    "description": "All languages supported by the creative (content language + override\nlanguages).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreativeBody": {
            "description": "Creative body",
            "id": "CreativeBody",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreativeBodyData": {
            "description": "Creative body data",
            "id": "CreativeBodyData",
            "properties": {
                "creativeBody": {
                    "$ref": "CreativeBody"
                },
                "creativeBodyId": {
                    "format": "int64",
                    "type": "string"
                },
                "format": {
                    "enum": [
                        "CREATIVE_BODY_FORMAT_UNKNOWN",
                        "CREATIVE_BODY_FORMAT_EMAIL_TEXT",
                        "CREATIVE_BODY_FORMAT_EMAIL_HTML",
                        "CREATIVE_BODY_FORMAT_LANDING_PAGE",
                        "CREATIVE_BODY_FORMAT_PUSH_NOTIFICATION",
                        "CREATIVE_BODY_FORMAT_SMS",
                        "CREATIVE_BODY_FORMAT_ADWORDS_ALERT",
                        "CREATIVE_BODY_FORMAT_IN_APP_NOTIFICATION",
                        "CREATIVE_BODY_FORMAT_EMAIL_AMP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "legacyCreativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "validationStatus": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CREATIVE_VALIDATION_STATUS_UNKNOWN",
                            "CREATIVE_VALIDATION_STATUS_SOME_LINKS_NOT_TRACKED",
                            "CREATIVE_VALIDATION_STATUS_OPTOUT_LINKS_TRACKED",
                            "CREATIVE_VALIDATION_STATUS_CONTAINS_PROOF_LINKS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CreativeEmail": {
            "description": "Data for an email creative.",
            "id": "CreativeEmail",
            "properties": {
                "bccAddress": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ccAddress": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fromAddress": {
                    "type": "string"
                },
                "replyToAddress": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreativeVersion": {
            "id": "CreativeVersion",
            "properties": {
                "creativeInfo": {
                    "$ref": "Creative"
                },
                "modifiedFormats": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CREATIVE_BODY_FORMAT_UNKNOWN",
                            "CREATIVE_BODY_FORMAT_EMAIL_TEXT",
                            "CREATIVE_BODY_FORMAT_EMAIL_HTML",
                            "CREATIVE_BODY_FORMAT_LANDING_PAGE",
                            "CREATIVE_BODY_FORMAT_PUSH_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_SMS",
                            "CREATIVE_BODY_FORMAT_ADWORDS_ALERT",
                            "CREATIVE_BODY_FORMAT_IN_APP_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_EMAIL_AMP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "publishTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "publishVersion": {
                    "format": "int64",
                    "type": "string"
                },
                "revertVersionTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "saveTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "versionId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CriteriaProto": {
            "description": "Object representing set of criteria set by a user, that are later used to\nconstruct a Dremel query and possibly to save the query to permanent storage.\n\nCriteria are always connected with a logical AND operator. So a data source\nrow to match Criteria has to match each Criterion separately.",
            "id": "CriteriaProto",
            "properties": {
                "corporaDisplayName": {
                    "description": "Corpora this query operates on.\nNOTE: Bit of a misnomer, as this is equivalent to CorporaProto's id rather\nthan display_name",
                    "type": "string"
                },
                "criterions": {
                    "description": "Elements of the WHERE clause.",
                    "items": {
                        "$ref": "CriterionProto"
                    },
                    "type": "array"
                },
                "displays": {
                    "description": "Fields that should be displayed.",
                    "items": {
                        "$ref": "FieldProto"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CriterionProto": {
            "description": "Criterion defines one comparison operation that will be applied to each row\nin the data source.",
            "id": "CriterionProto",
            "properties": {
                "comparisonType": {
                    "enum": [
                        "CONTAINS_ANY_OF",
                        "CONTAINS_ALL_OF",
                        "DOES_NOT_CONTAIN",
                        "IS_ANY_OF",
                        "IS_EQUAL_TO",
                        "IS_NOT_ANY_OF",
                        "IS_GREATER_THAN",
                        "IS_GREATER_THAN_OR_EQUAL_TO",
                        "IS_LESS_THAN",
                        "IS_LESS_THAN_OR_EQUAL_TO",
                        "IS_BETWEEN",
                        "IS_EMPTY",
                        "IS_NOT_EMPTY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "comparisonValues": {
                    "description": "Null means no criteria entered nor selected.\nWhen a field has non-empty field.values, all values in this field must be\nan exact match to the strings in field.values. Order is important\n(i.e. for BETWEEN).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "field": {
                    "$ref": "FieldProto",
                    "description": "The table field that this criterion uses."
                }
            },
            "type": "object"
        },
        "CsvDetails": {
            "id": "CsvDetails",
            "properties": {
                "csvHeaders": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "filename": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "numInvalid": {
                    "description": "for entire csv not just portion requested",
                    "format": "int32",
                    "type": "integer"
                },
                "numValid": {
                    "description": "for entire csv not just portion requested",
                    "format": "int32",
                    "type": "integer"
                },
                "rowDatas": {
                    "items": {
                        "$ref": "CsvRowData"
                    },
                    "type": "array"
                },
                "uploadTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CsvRecipientSource": {
            "id": "CsvRecipientSource",
            "properties": {
                "columnNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "contactsIngestConfig": {
                    "$ref": "IngestConfig"
                },
                "errorMessage": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "isCsvFetch": {
                    "type": "boolean"
                },
                "isProofList": {
                    "type": "boolean"
                },
                "isUnsharded": {
                    "description": "if the source is a merge of sharded csv recipient sources (b/35444042)",
                    "type": "boolean"
                },
                "numInvalid": {
                    "format": "int32",
                    "type": "integer"
                },
                "numValid": {
                    "format": "int32",
                    "type": "integer"
                },
                "uploadState": {
                    "enum": [
                        "UPLOAD_STATE_UNKNOWN",
                        "IN_PROGRESS",
                        "FINISHED",
                        "FAILED",
                        "UNKNOWN",
                        "CLEANED_UP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "validationStatus": {
                    "enum": [
                        "VALIDATION_STATUS_UNKNOWN",
                        "VALIDATION_STATUS_IN_PROGRESS",
                        "VALIDATION_STATUS_PASSED",
                        "VALIDATION_STATUS_FAILED",
                        "VALIDATION_STATUS_MANUAL_PASSED"
                    ],
                    "enumDescriptions": [
                        "Default status for a new recipient source.",
                        "Status for a recipient source which undergoes validation.",
                        "Status for a recipient source which successfully passed validation.",
                        "Status for a recipient source which failed validation.",
                        "Status for a recipient source which failed validation\nhowever it needs to be processed so it was manually set to the status\npassed."
                    ],
                    "type": "string"
                },
                "warningMessage": {
                    "description": "warning_message used only for UI",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CsvRowData": {
            "id": "CsvRowData",
            "properties": {
                "columnDatas": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "errorMessage": {
                    "type": "string"
                },
                "rowIndex": {
                    "description": "first non-header row is at index 1",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CustomEndpointAddress": {
            "description": "Next Id: 3",
            "id": "CustomEndpointAddress",
            "properties": {
                "accountId": {
                    "description": "Account id of user in the custom endpoint",
                    "type": "string"
                },
                "endpointTypeId": {
                    "description": "Id of the custom endpoint. Must match the custom endpoint config in Chime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomEndpointDeliveryAddress": {
            "description": "Used when the ChannelType is CustomEndpoint.",
            "id": "CustomEndpointDeliveryAddress",
            "properties": {
                "address": {
                    "description": "Required. Opaque string that provides information necessary to uniquely\nidentify the target to the client-implemented delivery handler.",
                    "type": "string"
                },
                "endpointTypeId": {
                    "description": "Required. The type ID of custom endpoint the notification is intended for.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomFilter": {
            "id": "CustomFilter",
            "properties": {
                "workflowFilter": {
                    "description": "Boolean Freemarker expression that determines which recipients can continue\non the workflow. Same syntax as the condition in condition nodes.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Customer": {
            "description": "Represents customer row.",
            "id": "Customer",
            "properties": {
                "customerId": {
                    "type": "string"
                },
                "signals": {
                    "description": "Any additional signals needed by Gamma (eg. for live proofing).",
                    "items": {
                        "$ref": "CustomerSignal"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CustomerSignal": {
            "id": "CustomerSignal",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DataPoint": {
            "id": "DataPoint",
            "properties": {
                "bounceRate": {
                    "format": "float",
                    "type": "number"
                },
                "clickRate": {
                    "format": "float",
                    "type": "number"
                },
                "clickToOpenRatio": {
                    "format": "float",
                    "type": "number"
                },
                "date": {
                    "$ref": "Date",
                    "description": "only necessary for time series"
                },
                "numSent": {
                    "format": "int64",
                    "type": "string"
                },
                "openRate": {
                    "format": "float",
                    "type": "number"
                },
                "optoutRate": {
                    "format": "float",
                    "type": "number"
                },
                "signalValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DataPointList": {
            "id": "DataPointList",
            "properties": {
                "dataPoints": {
                    "items": {
                        "$ref": "DataPoint"
                    },
                    "type": "array"
                },
                "signalValue": {
                    "description": "value to which all points correspond to (e.g. Age='19')",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Date": {
            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
            "id": "Date",
            "properties": {
                "day": {
                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                    "format": "int32",
                    "type": "integer"
                },
                "year": {
                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DefaultStreamyResponse": {
            "description": "When there's nothing to return, use this instead of EmptyMessage, as Streamy\nthrows an exception when it tries to process messages with no fields.",
            "id": "DefaultStreamyResponse",
            "properties": {
                "succeeded": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DeleteAccessGroupRequest": {
            "id": "DeleteAccessGroupRequest",
            "properties": {
                "accessGroup": {
                    "type": "string"
                },
                "loadTimestampMillis": {
                    "description": "uses current time if absent",
                    "format": "uint64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteAccessGroupResponse": {
            "id": "DeleteAccessGroupResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "DeleteCreativeRequest": {
            "id": "DeleteCreativeRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "creativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteCreativeResponse": {
            "id": "DeleteCreativeResponse",
            "properties": {
                "creativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "DeleteMessageError": {
            "id": "DeleteMessageError",
            "properties": {
                "error": {
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteMessagesRequest": {
            "id": "DeleteMessagesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeleteMessagesResponse": {
            "id": "DeleteMessagesResponse",
            "properties": {
                "deletedMessages": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "errors": {
                    "items": {
                        "$ref": "DeleteMessageError"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeleteProductRequest": {
            "id": "DeleteProductRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteProductResponse": {
            "id": "DeleteProductResponse",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteRecipientSourceRequest": {
            "id": "DeleteRecipientSourceRequest",
            "properties": {
                "recipientSource": {
                    "$ref": "RecipientSource"
                }
            },
            "type": "object"
        },
        "DeleteRecipientSourceResponse": {
            "id": "DeleteRecipientSourceResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteScheduleRequest": {
            "id": "DeleteScheduleRequest",
            "properties": {
                "allShards": {
                    "description": "If true and recipient_source_id is the first shard of a sharded csv,\ndeletes schedules for every shard. b/37909445",
                    "type": "boolean"
                },
                "campaignId": {
                    "description": "now in schedule",
                    "format": "int64",
                    "type": "string"
                },
                "recipientSourceId": {
                    "description": "now in schedule",
                    "format": "int32",
                    "type": "integer"
                },
                "schedule": {
                    "$ref": "Schedule"
                }
            },
            "type": "object"
        },
        "DeleteScheduleResponse": {
            "id": "DeleteScheduleResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "scheduleIds": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeleteSignalMetadataRequest": {
            "id": "DeleteSignalMetadataRequest",
            "properties": {
                "loadTimestampMillis": {
                    "description": "uses current time if absent",
                    "format": "uint64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "signalToDeletes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeleteSignalMetadataResponse": {
            "id": "DeleteSignalMetadataResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "DeliveryAddress": {
            "description": "Channel-specific address information used for notification delivery.\nNOTE: Any update to this proto should be echoed in\nnotifications/backend/common/target_log_util.h, and relevant changes should\nbe echoed in the DeliveryAddressLog proto.",
            "id": "DeliveryAddress",
            "properties": {
                "appleAddress": {
                    "$ref": "ApplePushAddress"
                },
                "customEndpointAddress": {
                    "$ref": "CustomEndpointDeliveryAddress"
                },
                "emailAddress": {
                    "$ref": "EmailAddress"
                },
                "gcmDeviceAddress": {
                    "$ref": "GcmDevicePushAddress"
                },
                "gcmGroupAddress": {
                    "$ref": "GcmGroupPushAddress"
                },
                "httpStreamingAddress": {
                    "$ref": "HttpStreamingAddress",
                    "description": "For more information: go/chime-http-streaming."
                },
                "matchstickAddress": {
                    "$ref": "MatchstickAddress",
                    "description": "For more information: go/chime-matchstick"
                },
                "smsAddress": {
                    "$ref": "SmsAddress"
                },
                "webPushAddress": {
                    "$ref": "WebPushAddress",
                    "description": "For more information: go/chime-web-push"
                }
            },
            "type": "object"
        },
        "DeliveryInfo": {
            "id": "DeliveryInfo",
            "properties": {
                "pastDelivery": {
                    "$ref": "PastDelivery"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "runningDelivery": {
                    "$ref": "RunningDelivery"
                }
            },
            "type": "object"
        },
        "DeliveryPreferenceInfo": {
            "id": "DeliveryPreferenceInfo",
            "properties": {
                "deliveryPreference": {
                    "enum": [
                        "DELIVERY_PREFERENCE_GAMMA_TO_GMR",
                        "DELIVERY_PREFERENCE_GUNS",
                        "DELIVERY_PREFERENCE_CHIME_TARGET",
                        "DELIVERY_PREFERENCE_CHIME_USER",
                        "DELIVERY_PREFERENCE_HEDWIG",
                        "DELIVERY_PREFERENCE_ADSENSE_INBOX",
                        "DELIVERY_PREFERENCE_ASFE_INBOX",
                        "DELIVERY_PREFERENCE_AWX_APP_NOTIFY",
                        "DELIVERY_PREFERENCE_AWX_APP_ACCOUNT_UPDATE",
                        "DELIVERY_PREFERENCE_AWX_APP_PERFORMANCE_TIP",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_SYSTEM_ANNOUNCEMENT",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_GENERAL_ANNOUNCEMENT",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_FEEDBACK_AND_TESTING",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_OFFERS",
                        "DELIVERY_PREFERENCE_PLUS_PAGES_PERFORMANCE_UPDATES",
                        "DELIVERY_PREFERENCE_WNC_NEWS",
                        "DELIVERY_PREFERENCE_WNC_INFORMATIVE",
                        "DELIVERY_PREFERENCE_WNC_WARNING",
                        "DELIVERY_PREFERENCE_WNC_ERROR",
                        "DELIVERY_PREFERENCE_WNC_CRITICAL",
                        "DELIVERY_PREFERENCE_GLASS_MARKETING_EMAIL",
                        "DELIVERY_PREFERENCE_GLASS_SURVEY_EMAIL",
                        "DELIVERY_PREFERENCE_TEST_EMPTY_RENDERER",
                        "DELIVERY_PREFERENCE_TEST_PRE_RENDERED",
                        "DELIVERY_PREFERENCE_TEST_MOBILE_ALERT",
                        "DELIVERY_PREFERENCE_LOCAL_ACTIONS_REVIEWS_UPDATES_EMAIL",
                        "DELIVERY_PREFERENCE_GMB_LOCAL_REVIEW_NOTIFICATION",
                        "DELIVERY_PREFERENCE_GMB_TEST_NOTIFICATION",
                        "DELIVERY_PREFERENCE_GMB_GAMMA_NOTIFICATION",
                        "DELIVERY_PREFERENCE_PLAY_MOVIES_NEW_TV_SEASON_EMAIL",
                        "DELIVERY_PREFERENCE_PLAY_MOVIES_TEST_NOTIFICATION",
                        "DELIVERY_PREFERENCE_PLAY_MOVIES_NEW_TV_SEASON_PUSH",
                        "DELIVERY_PREFERENCE_GOOGLE_PLUS_SYSTEM_REACTIVATION",
                        "DELIVERY_PREFERENCE_MERCHANT_CENTER_UNS_EMAIL",
                        "DELIVERY_PREFERENCE_GSX_IMPORTANT_ACCOUNT_ALERT",
                        "DELIVERY_PREFERENCE_GSX_PERSONALIZED_REMINDER",
                        "DELIVERY_PREFERENCE_GSX_SALE_OR_DISCOUNT"
                    ],
                    "enumDescriptions": [
                        "Default delivery preference: \"Send email to GMR by Gamma\".\nIntentionally chosen as 0 to be proto-defaulted to GAMMA_TO_GMR.",
                        "The common delivery preference for GUNS push notifications.",
                        "Multi-Channel Chime notifications via NotifyTarget.",
                        "Multi-Channel Chime notifications via NotifyUser.",
                        "Send AdWords frontend alerts to the Hedwig system via their API.",
                        "AdSense-specific delivery preferences for UNS.",
                        "",
                        "AdWords Express delivery preferences for UNS.",
                        "",
                        "",
                        "PlusPages-specific delivery preferences for UNS",
                        "",
                        "",
                        "",
                        "",
                        "Webmaster Tools-specific delivery preferences for UNS.",
                        "",
                        "",
                        "",
                        "",
                        "Glass-specific delivery preferences for UNS.",
                        "",
                        "Test App delivery preferences for GUNS.",
                        "",
                        "",
                        "Local Actions-specific delivery preferences for UNS.",
                        "Google My Business delivery preferences for GUNS.",
                        "",
                        "",
                        "Play Movies delivery preferences for GUNS.",
                        "",
                        "",
                        "Google+ delivery preferences for GUNS.",
                        "Merchant Center delivery preferences for UNS.",
                        "Google Express delivery preferences for UNS.",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "deliveryService": {
                    "enum": [
                        "DELIVERY_SERVICE_UNKNOWN",
                        "DELIVERY_SERVICE_GMR",
                        "DELIVERY_SERVICE_UNS",
                        "DELIVERY_SERVICE_GUNS",
                        "DELIVERY_SERVICE_CHIME",
                        "DELIVERY_SERVICE_HEDWIG_DEPRECATED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "isAdminOnly": {
                    "type": "boolean"
                },
                "supportedCreativeFormats": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CREATIVE_BODY_FORMAT_UNKNOWN",
                            "CREATIVE_BODY_FORMAT_EMAIL_TEXT",
                            "CREATIVE_BODY_FORMAT_EMAIL_HTML",
                            "CREATIVE_BODY_FORMAT_LANDING_PAGE",
                            "CREATIVE_BODY_FORMAT_PUSH_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_SMS",
                            "CREATIVE_BODY_FORMAT_ADWORDS_ALERT",
                            "CREATIVE_BODY_FORMAT_IN_APP_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_EMAIL_AMP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DetailsDefaultResponse": {
            "id": "DetailsDefaultResponse",
            "properties": {
                "collaborators": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DetailsInProgressResponse": {
            "id": "DetailsInProgressResponse",
            "properties": {
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "creativeCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "languageCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "messageCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "notificationCategoryDisplayName": {
                    "type": "string"
                },
                "proofEmailCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "recipientListTypes": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "RECIPSRC_UNKNOWN",
                            "RECIPSRC_CSV_EMAIL_LIST",
                            "RECIPSRC_CSV_CID_EXPANSION",
                            "RECIPSRC_CSV_GAIA_ID",
                            "RECIPSRC_CUSTOMER_LOOKUP",
                            "RECIPSRC_CUSTOMER_QUERY",
                            "RECIPSRC_DIVVY_PROGRAM",
                            "RECIPSRC_ACTIVE_ADWORDS",
                            "RECIPSRC_STANDALONE_DYNAMIC_QUERY",
                            "RECIPSRC_PROOF_LIST_DEPRECATED",
                            "RECIPSRC_CSV_CONTACTS_PIPELINE",
                            "RECIPSRC_PLX_QUERY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "schedulesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "workflowSectionCount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DetailsResultsResponse": {
            "id": "DetailsResultsResponse",
            "properties": {
                "bounceCount": {
                    "format": "int64",
                    "type": "string"
                },
                "clickedCount": {
                    "format": "int64",
                    "type": "string"
                },
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "filterCount": {
                    "format": "int64",
                    "type": "string"
                },
                "lastRunTimeMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "notificationCategoryDisplayName": {
                    "type": "string"
                },
                "openCount": {
                    "format": "int64",
                    "type": "string"
                },
                "sentCount": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DetailsScheduledResponse": {
            "id": "DetailsScheduledResponse",
            "properties": {
                "collaborators": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "nextRunTimeMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DidRecipientReceiveCampaignInfo": {
            "id": "DidRecipientReceiveCampaignInfo",
            "properties": {
                "dispatch": {
                    "type": "string"
                },
                "dispatchId": {
                    "format": "int64",
                    "type": "string"
                },
                "emailMessageId": {
                    "type": "string"
                },
                "messageTitle": {
                    "type": "string"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "timestamp": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DidRecipientReceiveCampaignRequest": {
            "id": "DidRecipientReceiveCampaignRequest",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "recipientKey": {
                    "$ref": "RecipientKey"
                }
            },
            "type": "object"
        },
        "DidRecipientReceiveCampaignResponse": {
            "id": "DidRecipientReceiveCampaignResponse",
            "properties": {
                "infos": {
                    "items": {
                        "$ref": "DidRecipientReceiveCampaignInfo"
                    },
                    "type": "array"
                },
                "received": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DispatchListData": {
            "description": "Used by the Fronted to describe dispatch data, not stored in F1",
            "id": "DispatchListData",
            "properties": {
                "dispatch": {
                    "type": "string"
                },
                "dispatchId": {
                    "format": "int64",
                    "type": "string"
                },
                "dispatchType": {
                    "enum": [
                        "DISPATCH_TYPE_UNKNOWN",
                        "DISPATCH_TYPE_MESSAGE_SEND",
                        "DISPATCH_TYPE_WORKFLOW_SEND",
                        "DISPATCH_TYPE_MESSAGE_PROOF",
                        "DISPATCH_TYPE_WORKFLOW_SIMULATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "isReroutedToFastSend": {
                    "description": "Next available: 11;",
                    "type": "boolean"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "predecessorNodeIdsAndHashs": {
                    "items": {
                        "$ref": "DispatchListDataPredecessorNodeIdsAndHash"
                    },
                    "type": "array"
                },
                "recipientSourceId": {
                    "format": "int64",
                    "type": "string"
                },
                "recipientSourceName": {
                    "type": "string"
                },
                "scheduledTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "workflowState": {
                    "enum": [
                        "WORKFLOW_STATE_UNKNOWN",
                        "WORKFLOW_STATE_SCHEDULED",
                        "WORKFLOW_STATE_STARTED",
                        "WORKFLOW_STATE_FINISHED",
                        "WORKFLOW_STATE_FAILED",
                        "WORKFLOW_STATE_ABORTED",
                        "WORKFLOW_STATE_STARTING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DispatchListDataPredecessorNodeIdsAndHash": {
            "id": "DispatchListDataPredecessorNodeIdsAndHash",
            "properties": {
                "predecessorNodeIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "predecessorNodeIdsHash": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DispatchSearchRequest": {
            "id": "DispatchSearchRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "dispatch": {
                    "type": "string"
                },
                "dispatchType": {
                    "enum": [
                        "DISPATCH_TYPE_UNKNOWN",
                        "DISPATCH_TYPE_MESSAGE_SEND",
                        "DISPATCH_TYPE_WORKFLOW_SEND",
                        "DISPATCH_TYPE_MESSAGE_PROOF",
                        "DISPATCH_TYPE_WORKFLOW_SIMULATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "Next available: 11",
                    "format": "int32",
                    "type": "integer"
                },
                "paginated": {
                    "type": "boolean"
                },
                "sortByField": {
                    "enum": [
                        "DISPATCH_SEARCH_SORT_FIELD_UNKNOWN",
                        "DISPATCH_ID",
                        "NODE_ID",
                        "PREDECESSOR_NODE_IDS_HASH",
                        "DISPATCH_TYPE",
                        "WORKFLOW_STATE",
                        "SCHEDULED_TIMESTAMP",
                        "RECIPIENT_SOURCE_NAME"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sortOrder": {
                    "enum": [
                        "SORT_ORDER_UNKNOWN",
                        "SORT_ORDER_ASCENDING",
                        "SORT_ORDER_DESCENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DispatchSearchResponse": {
            "id": "DispatchSearchResponse",
            "properties": {
                "dispatchDatas": {
                    "items": {
                        "$ref": "DispatchListData"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "numTotalResults": {
                    "description": "Total number of results for the query, useful if using paging.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DispatchStatus": {
            "id": "DispatchStatus",
            "properties": {
                "infos": {
                    "items": {
                        "$ref": "DispatchStatusPipelineStageInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DispatchStatusPipelineStageInfo": {
            "id": "DispatchStatusPipelineStageInfo",
            "properties": {
                "elapsedMicros": {
                    "format": "int64",
                    "type": "string"
                },
                "nextStage": {
                    "enum": [
                        "PIPELINE_PROGRESS_UNKNOWN",
                        "PIPELINE_PROGRESS_START",
                        "PIPELINE_PROGRESS_GENERATE",
                        "PIPELINE_PROGRESS_EXPAND",
                        "PIPELINE_PROGRESS_EVALUATE",
                        "PIPELINE_PROGRESS_RENDER_AND_SEND",
                        "PIPELINE_PROGRESS_RECORD_FILTERED_OUT",
                        "PIPELINE_PROGRESS_END"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "recipients": {
                    "format": "int64",
                    "type": "string"
                },
                "stage": {
                    "enum": [
                        "PIPELINE_PROGRESS_UNKNOWN",
                        "PIPELINE_PROGRESS_START",
                        "PIPELINE_PROGRESS_GENERATE",
                        "PIPELINE_PROGRESS_EXPAND",
                        "PIPELINE_PROGRESS_EVALUATE",
                        "PIPELINE_PROGRESS_RENDER_AND_SEND",
                        "PIPELINE_PROGRESS_RECORD_FILTERED_OUT",
                        "PIPELINE_PROGRESS_END"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "startTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DivvyAssignment": {
            "id": "DivvyAssignment",
            "properties": {
                "durationDays": {
                    "format": "int32",
                    "type": "integer"
                },
                "programAxpTreatmentId": {
                    "format": "int64",
                    "type": "string"
                },
                "programExperimentType": {
                    "type": "string"
                },
                "programGroup": {
                    "type": "string"
                },
                "programName": {
                    "type": "string"
                },
                "programStatus": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DivvyRecipientSource": {
            "id": "DivvyRecipientSource",
            "properties": {
                "axpTreatmentId": {
                    "format": "int64",
                    "type": "string"
                },
                "programExperimentType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadCampaignListRequest": {
            "id": "DownloadCampaignListRequest",
            "properties": {
                "queryString": {
                    "type": "string"
                },
                "sortByField": {
                    "enum": [
                        "FIELD_UNKNOWN",
                        "FIELD_ID",
                        "FIELD_TITLE",
                        "FIELD_STATE",
                        "FIELD_LAST_RUN",
                        "FIELD_LAST_SAVE_TIMESTAMP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sortOrder": {
                    "enum": [
                        "SORT_ORDER_UNKNOWN",
                        "SORT_ORDER_ASCENDING",
                        "SORT_ORDER_DESCENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadCampaignListResponse": {
            "id": "DownloadCampaignListResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData",
                    "description": "The error response for Apiary.\nOur local apis error object"
                },
                "inlineData": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadErrorsRequest": {
            "id": "DownloadErrorsRequest",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "endTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                },
                "limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "startTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadErrorsResponse": {
            "id": "DownloadErrorsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData",
                    "description": "Next available: 3"
                },
                "errors": {
                    "items": {
                        "$ref": "ExternalSendRequestFailure"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DownloadMessagesRequest": {
            "id": "DownloadMessagesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "DownloadMessagesResponse": {
            "id": "DownloadMessagesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData",
                    "description": "Our local apis error object"
                },
                "inlineData": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadRecipientSourceRequest": {
            "id": "DownloadRecipientSourceRequest",
            "properties": {
                "recipientSourceIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DownloadRecipientSourceResponse": {
            "id": "DownloadRecipientSourceResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData",
                    "description": "Our local apis error object"
                },
                "inlineData": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadSignalAliasesRequest": {
            "id": "DownloadSignalAliasesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "DownloadSignalAliasesResponse": {
            "id": "DownloadSignalAliasesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData",
                    "description": "Our local apis error object"
                },
                "inlineData": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DuplicateCampaignRequest": {
            "id": "DuplicateCampaignRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "newCollaborators": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "newTitle": {
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "DuplicateCampaignResponse": {
            "id": "DuplicateCampaignResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "errorMessage": {
                    "type": "string"
                },
                "errorType": {
                    "enum": [
                        "ERROR_TYPE_UNKNOWN",
                        "ERROR_TYPE_GENERAL",
                        "ERROR_TYPE_SAVE_CONFLICT",
                        "ERROR_TYPE_RECORD_NOT_EXISTING",
                        "ERROR_TYPE_NOT_AUTHORIZED",
                        "ERROR_TYPE_VALIDATION_FAILED",
                        "ERROR_TYPE_INFRASTRUCTURE",
                        "ERROR_TYPE_HTML_TO_IMAGE_RENDER_FAILED",
                        "ERROR_TYPE_PROOF_FAILED",
                        "ERROR_TYPE_RECORD_METRIC_FAILED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "newCampaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DuplicateDynamicQueryRequest": {
            "id": "DuplicateDynamicQueryRequest",
            "properties": {
                "queryId": {
                    "format": "int64",
                    "type": "string"
                },
                "queryOwner": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DuplicateDynamicQueryResponse": {
            "id": "DuplicateDynamicQueryResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "queryId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DuplicateMessageRequest": {
            "id": "DuplicateMessageRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "DuplicateMessageResponse": {
            "id": "DuplicateMessageResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "message": {
                    "$ref": "Message"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "DynamicQuery": {
            "id": "DynamicQuery",
            "properties": {
                "campaignIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "corporaDisplayName": {
                    "type": "string"
                },
                "lastModifiedMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "queryId": {
                    "format": "int64",
                    "type": "string"
                },
                "queryName": {
                    "type": "string"
                },
                "queryOwner": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DynamicQueryRecipientSource": {
            "description": "replacement for CustomerLookupRecipientSource",
            "id": "DynamicQueryRecipientSource",
            "properties": {
                "campaignIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "lastModifiedMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "queryId": {
                    "format": "int64",
                    "type": "string"
                },
                "queryOwner": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmailAddress": {
            "description": "Used when the ChannelType is EMAIL.",
            "id": "EmailAddress",
            "properties": {
                "toAddress": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmailHeader": {
            "description": "LINT.IfChange",
            "id": "EmailHeader",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmailRecipient": {
            "description": "Recipient specified for the simple sending queue.",
            "id": "EmailRecipient",
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "externalRecipientKey": {
                    "description": "A recipient identifier provided by external GAMMA clients.\nIf present, will be sent back with Fast Server feedback messages.",
                    "format": "byte",
                    "type": "string"
                },
                "internalData": {
                    "$ref": "InternalRecipientData",
                    "description": "INTERNAL ONLY\nThis field must not be set by external clients.\nIt is set and used only internally by Gamma."
                },
                "languagePreference": {
                    "type": "string"
                },
                "signals": {
                    "items": {
                        "$ref": "RecipientSignal"
                    },
                    "type": "array"
                },
                "userId": {
                    "description": "Required if campaign allows for opt-out.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EngagementFilter": {
            "id": "EngagementFilter",
            "properties": {
                "engagementSignalOnly": {
                    "type": "boolean"
                },
                "filterEngagementByProductId": {
                    "type": "boolean"
                },
                "maxConsecutiveUnopened": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ErrorData": {
            "id": "ErrorData",
            "properties": {
                "conflictingVersion": {
                    "$ref": "LastSavedVersionInfo"
                },
                "displayMessage": {
                    "type": "string"
                },
                "htmlToImageData": {
                    "$ref": "HtmlToImageRenderErrorData",
                    "description": "if type == ERROR_TYPE_HTML_TO_IMAGE_RENDER_FAILED"
                },
                "proofErrorData": {
                    "$ref": "ProofErrorData",
                    "description": "if type == ERROR_TYPE_PROOF_FAILED"
                },
                "recordNotFoundData": {
                    "$ref": "RecordNotFoundErrorData",
                    "description": "if type == ERROR_TYPE_RECORD_NOT_EXISTING"
                },
                "saveConflictData": {
                    "$ref": "SaveConflictErrorData",
                    "description": "if type == ERROR_TYPE_SAVE_CONFLICT"
                },
                "type": {
                    "enum": [
                        "ERROR_TYPE_UNKNOWN",
                        "ERROR_TYPE_GENERAL",
                        "ERROR_TYPE_SAVE_CONFLICT",
                        "ERROR_TYPE_RECORD_NOT_EXISTING",
                        "ERROR_TYPE_NOT_AUTHORIZED",
                        "ERROR_TYPE_VALIDATION_FAILED",
                        "ERROR_TYPE_INFRASTRUCTURE",
                        "ERROR_TYPE_HTML_TO_IMAGE_RENDER_FAILED",
                        "ERROR_TYPE_PROOF_FAILED",
                        "ERROR_TYPE_RECORD_METRIC_FAILED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "validationData": {
                    "$ref": "CampaignValidationErrorData",
                    "description": "if type == ERROR_TYPE_VALIDATION_FAILED"
                }
            },
            "type": "object"
        },
        "EvaluateSubjectLineRequest": {
            "id": "EvaluateSubjectLineRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "subjectLines": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EvaluateSubjectLineResponse": {
            "id": "EvaluateSubjectLineResponse",
            "properties": {
                "result": {
                    "$ref": "SubjectLineModelResult"
                },
                "timestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExecutionTimestamp": {
            "id": "ExecutionTimestamp",
            "properties": {
                "lastRunTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "nextRunTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExperimentResults": {
            "id": "ExperimentResults",
            "properties": {
                "branchResults": {
                    "items": {
                        "$ref": "BranchResults"
                    },
                    "type": "array"
                },
                "nodeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ExperimentResultsRequest": {
            "id": "ExperimentResultsRequest",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dispatchs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "endDate": {
                    "description": "YYYY-MM-DD",
                    "type": "string"
                },
                "startDate": {
                    "description": "YYYY-MM-DD",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExperimentResultsResponse": {
            "id": "ExperimentResultsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "experimentResults": {
                    "items": {
                        "$ref": "ExperimentResults"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ExpirationOptions": {
            "description": "Message expiration definitions - currently applied to push notification only.",
            "id": "ExpirationOptions",
            "properties": {
                "expirationTimestampMillis": {
                    "description": "An absolute timestamp (instant - represented in millis since epoch)",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExpiredScheduleInfo": {
            "id": "ExpiredScheduleInfo",
            "properties": {
                "nextRunDate": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportToContactManagementNode": {
            "id": "ExportToContactManagementNode",
            "properties": {
                "resultingOperations": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "UPLOAD_RESULTING_OPERATION_UNKNOWN",
                            "UPLOAD_RESULTING_OPERATION_INSERTED",
                            "UPLOAD_RESULTING_OPERATION_UPDATED",
                            "UPLOAD_RESULTING_OPERATION_DELETED",
                            "UPLOAD_RESULTING_OPERATION_UNCHANGED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ExportToDivvyNode": {
            "id": "ExportToDivvyNode",
            "properties": {
                "assignments": {
                    "items": {
                        "$ref": "DivvyAssignment"
                    },
                    "type": "array"
                },
                "source": {
                    "enum": [
                        "DIVVY_SOURCE_UNKNOWN",
                        "DIVVY_SOURCE_AXP",
                        "DIVVY_SOURCE_MANUAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportToGoopsNode": {
            "description": "Node that is used to send generated messages to the Goops queue",
            "id": "ExportToGoopsNode",
            "properties": {
                "signals": {
                    "items": {
                        "$ref": "Signal"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "EXPORT_TO_GOOPS_UNKNOWN",
                        "EXPORT_TO_GOOPS_LEADS_ROUTING_ETO",
                        "EXPORT_TO_GOOPS_LEADS_ROUTING_ISO",
                        "EXPORT_TO_GOOPS_ATLAS_EXPORT",
                        "EXPORT_TO_GOOPS_CAMPAIGN_DELEGATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExternalSendRequestFailure": {
            "id": "ExternalSendRequestFailure",
            "properties": {
                "accountRecipient": {
                    "$ref": "AccountRecipient"
                },
                "details": {
                    "$ref": "SendRequestDetails"
                },
                "emailRecipient": {
                    "$ref": "EmailRecipient"
                },
                "exceptionMessage": {
                    "type": "string"
                },
                "exceptionStacktrace": {
                    "type": "string"
                },
                "exceptionStacktraceHash": {
                    "format": "int64",
                    "type": "string"
                },
                "exceptionType": {
                    "type": "string"
                },
                "failTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                },
                "gaiaRecipient": {
                    "$ref": "GaiaRecipient"
                },
                "targetRecipient": {
                    "$ref": "TargetRecipient"
                },
                "workflowReference": {
                    "$ref": "FastSendWorkflowReference",
                    "description": "Required to retry resume request from wait node infrastructure. Contains\nthe uuid of the wait service spanner row that failed to resume."
                },
                "workflowResumeDetails": {
                    "$ref": "WorkflowResumeDetails",
                    "description": "Required to retry the resume request originating from the wait service.\nOne of the recipient protos and the SendRequestDetails will also be\npopulated when this is populated. Together they can be used to create\nanother WorkflowResumeRequest.\nNext available: 13"
                }
            },
            "type": "object"
        },
        "FastSendConfig": {
            "id": "FastSendConfig",
            "properties": {
                "apiAlertLdaps": {
                    "description": "A list of ldaps to alert in case of API based send failure.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "apiIntegrationEnabled": {
                    "type": "boolean"
                },
                "authorizedApiChimeUsers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "authorizedApiUsers": {
                    "description": "A list of MDB users/groups to authorize to send email via API for this\ncampaign.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "campaignDelegationEnabled": {
                    "description": "Next available: 7;",
                    "type": "boolean"
                },
                "transactionalSendingEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FastSendWorkflowReference": {
            "description": "Reference to the wait service spanner row. Useful for debugging rows that\nfailed to resume in fast send.",
            "id": "FastSendWorkflowReference",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "resumeTimestampMillis": {
                    "description": "Milliseconds after start of UNIX epoch that the workflow should be resumed\nat.",
                    "format": "int64",
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID that identifies the row in the wait service spanner database.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FieldProto": {
            "description": "Defines single field in CQ.",
            "id": "FieldProto",
            "properties": {
                "acl": {
                    "description": "Acls.",
                    "enum": [
                        "PII",
                        "REVENUE",
                        "NON_SENSITIVE",
                        "FULL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "cardinality": {
                    "description": "Cardinality of the field.",
                    "enum": [
                        "OPTIONAL",
                        "REPEATED",
                        "REQUIRED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "customColumn": {
                    "description": "Deprecated.  Do not use.",
                    "type": "boolean"
                },
                "displayName": {
                    "description": "Name of the field in CQ.",
                    "type": "string"
                },
                "dremelName": {
                    "description": "Named used to access field in Dremel.",
                    "type": "string"
                },
                "dremelType": {
                    "description": "Dremel field type if this field is sourced from dremel\nNote: This is currently not always set for dremel queries:\n1) For legacy queries in F1\n2) For custom fields (only sent via rpcs from leads studio server)\n3) For FieldProto's populated from //production/borg/customerquery/metadata",
                    "enum": [
                        "TYPE_DOUBLE",
                        "TYPE_FLOAT",
                        "TYPE_INT64",
                        "TYPE_UINT64",
                        "TYPE_INT32",
                        "TYPE_FIXED64",
                        "TYPE_FIXED32",
                        "TYPE_BOOL",
                        "TYPE_STRING",
                        "TYPE_GROUP",
                        "TYPE_MESSAGE",
                        "TYPE_BYTES",
                        "TYPE_UINT32",
                        "TYPE_ENUM",
                        "TYPE_SFIXED32",
                        "TYPE_SFIXED64",
                        "TYPE_SINT32",
                        "TYPE_SINT64"
                    ],
                    "enumDescriptions": [
                        "0 is reserved for errors.\nOrder is weird for historical reasons.",
                        "",
                        "Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\nnegative values are likely.",
                        "",
                        "Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\nnegative values are likely.",
                        "",
                        "",
                        "",
                        "",
                        "Tag-delimited aggregate.\nGroup type is deprecated and not supported in proto3. However, Proto3\nimplementations should still be able to parse the group wire format and\ntreat group fields as unknown fields.",
                        "Length-delimited aggregate.",
                        "New in version 2.",
                        "",
                        "",
                        "",
                        "",
                        "Uses ZigZag encoding.",
                        "Uses ZigZag encoding."
                    ],
                    "type": "string"
                },
                "helpText": {
                    "description": "Help note to display in the CQ.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the field.",
                    "enum": [
                        "STRING",
                        "LONG",
                        "DOUBLE",
                        "BOOLEAN",
                        "DATETIME",
                        "STRING_OR_NUMBER",
                        "UNSUPPORTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Type for currently unsupported fields."
                    ],
                    "type": "string"
                },
                "values": {
                    "description": "Possible values. null if the list is not prepared.\nValues in the list are generated using String.valueOf() method.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "visible": {
                    "description": "If the field should be presented in CQ.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FilterConfig": {
            "id": "FilterConfig",
            "properties": {
                "activityFilter": {
                    "$ref": "ActivityFilter"
                },
                "customFilter": {
                    "$ref": "CustomFilter"
                },
                "engagementFilter": {
                    "$ref": "EngagementFilter"
                },
                "filterDasherAccounts": {
                    "type": "boolean"
                },
                "historyFilterIntervalDays": {
                    "format": "int32",
                    "type": "integer"
                },
                "historyFilterReason": {
                    "type": "string"
                },
                "realTimeOptoutChecksEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FullText": {
            "description": "Format for storage of full sent message content in Bigstore.\n\nNote: Some fields may not be populated. Especially for older data which was\noriginally saved in a different format.",
            "id": "FullText",
            "properties": {
                "email": {
                    "$ref": "FullTextEmail"
                },
                "metadata": {
                    "$ref": "FullTextMetadata"
                },
                "sms": {
                    "$ref": "FullTextSms"
                }
            },
            "type": "object"
        },
        "FullTextEmail": {
            "description": "Next ID: 17",
            "id": "FullTextEmail",
            "properties": {
                "ampBody": {
                    "type": "string"
                },
                "ampCreativeBodyId": {
                    "format": "int64",
                    "type": "string"
                },
                "ampCreativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "bccs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ccs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "from": {
                    "type": "string"
                },
                "htmlBody": {
                    "type": "string"
                },
                "htmlCreativeBodyId": {
                    "format": "int64",
                    "type": "string"
                },
                "htmlCreativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "renderedLanguageCode": {
                    "type": "string"
                },
                "replyTo": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "textBody": {
                    "type": "string"
                },
                "textCreativeBodyId": {
                    "format": "int64",
                    "type": "string"
                },
                "textCreativeId": {
                    "description": "Metadata about the email rendering",
                    "format": "int64",
                    "type": "string"
                },
                "to": {
                    "description": "Email content",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FullTextHistoryRequest": {
            "id": "FullTextHistoryRequest",
            "properties": {
                "campaignId": {
                    "description": "campaign_id is just provided by \"Recipient Lookup\" tool from Missive\nserver. For the request from email query tool and directly from stubby\ncall, please don't provide this field.\nNext available ID = 3",
                    "format": "int32",
                    "type": "integer"
                },
                "emailMessageId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FullTextMetadata": {
            "id": "FullTextMetadata",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "campaignVersionId": {
                    "format": "int64",
                    "type": "string"
                },
                "dispatchId": {
                    "description": "This is both dispatch id and transaction id. They should be the same.",
                    "type": "string"
                },
                "isProof": {
                    "type": "boolean"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageIndexPrimary": {
                    "format": "int64",
                    "type": "string"
                },
                "messageIndexSecondary": {
                    "format": "int64",
                    "type": "string"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "sentMessageId": {
                    "type": "string"
                },
                "sentMessageTimestamp": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FullTextSms": {
            "id": "FullTextSms",
            "properties": {
                "renderedLanguageCode": {
                    "type": "string"
                },
                "smsBody": {
                    "description": "SMS content",
                    "type": "string"
                },
                "smsCreativeBodyId": {
                    "format": "int64",
                    "type": "string"
                },
                "smsCreativeId": {
                    "description": "Metadata about the sms rendering",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GCMRegistration": {
            "id": "GCMRegistration",
            "properties": {
                "duplicateId": {
                    "description": "Used to uniquely identify this particular registration amongst that of the\nsame user across multiple devices. Subsequent registrations with the same\nduplicate_id will override the previous registration and so the ID provided\nshould be the same for the same device across multiple registrations.\nIf not provided, GUNS will use the Oauth session identifier provided in the\nGaia mint of the RegisterDevice request in it's place.",
                    "type": "string"
                },
                "gcmId": {
                    "description": "The GCM application ID must match the application's package name.",
                    "type": "string"
                },
                "gcmProjectId": {
                    "description": "The project ID/Number as found via the developer console at\nhttps://code.google.com/apis/console.\nThis must be an integer with decimal base.",
                    "type": "string"
                },
                "registrationId": {
                    "description": "This is the registration ID that the Android device should send to receive\nnotifications. Use this field only if there is to be one GCM destination\nper device. The alternative is to have GCM manage the registration, to do\nthis the device must register with GCM before GUNS and must unregister with\nGUNS before GCM.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaRecipient": {
            "description": "Recipient specified for the Gaia based sending goops queue.",
            "id": "GaiaRecipient",
            "properties": {
                "externalRecipientKey": {
                    "description": "A recipient identifier provided by external GAMMA clients.\nIf present, will be sent back with Fast Server feedback messages.",
                    "format": "byte",
                    "type": "string"
                },
                "gaiaId": {
                    "description": "Required Recipient's Gaia Id.\nGamma parses this string as a signed decimal {@code long}",
                    "type": "string"
                },
                "internalData": {
                    "$ref": "InternalRecipientData",
                    "description": "INTERNAL ONLY\nThis field must not be set by external clients.\nIt is set and used only internally by Gamma."
                },
                "languagePreference": {
                    "description": "Language Code supported in Gamma according to\nhttp://go/gamma-languages (found at http://go/gamma-help)\nThis is optional, although a required field.  To have Gamma look up\nthe language in ULS, set this to an empty string.",
                    "type": "string"
                },
                "signals": {
                    "description": "Optional list of signals, i.e. pairs of strings <key, value> used\nat various stages in Gamma. For the reserved key names see file:\njava/com/google/ads/crm/gamma/common/domain/signals/CsvFieldName.java",
                    "items": {
                        "$ref": "RecipientSignal"
                    },
                    "type": "array"
                },
                "userId": {
                    "description": "Gamma parses this string as a signed decimal {@code long}\nNOTE: This is deprecated for new uses, it remains supported for\nlegacy campaigns. New users should either choose to use GaiaId as the\noptout identifier OR should use OptOutId as a separate, explicit\nstring-based per-recipient signal.\nNOTE: MUST NOT CONTAIN PII",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GammaNotificationCategory": {
            "id": "GammaNotificationCategory",
            "properties": {
                "deprecated": {
                    "description": "Deprecation flag. Notification category won't be visible at Gamma UI.",
                    "type": "boolean"
                },
                "disableBounceFilter": {
                    "description": "Do not sift emails with a bounces filter.",
                    "type": "boolean"
                },
                "displayName": {
                    "description": "The representation string that is displayed at Gamma IU.",
                    "type": "string"
                },
                "notificationCategoryId": {
                    "description": "Notification categories allow grouping of related messages for opt-out /\nopt-in purposes.",
                    "format": "int32",
                    "type": "integer"
                },
                "notificationCategoryName": {
                    "description": "String based unique id of notification category.",
                    "type": "string"
                },
                "optOutBehavior": {
                    "description": "The behavior in contexts where Gamma determines a recipient's opt-out\nstatus by consulting the Gamma opt-out server when deciding whether to\nnotify.\n",
                    "enum": [
                        "OPT_OUT_BEHAVIOR_UNSPECIFIED",
                        "FOLLOW_PREFERENCE",
                        "ALWAYS_NOTIFY"
                    ],
                    "enumDescriptions": [
                        "Default for when not otherwise specified. Treated identically as\nFOLLOW_PREFERENCE.",
                        "For products that have opt-out integration through the Gamma opt-out\nserver, follow a recipient's opt-out preference when deciding whether to\nnotify for this category.\n\nSemantically treated as default.",
                        "Never consult opt-out preferences for a recipient, always notify."
                    ],
                    "type": "string"
                },
                "optoutFieldNumber": {
                    "description": "matches an optout service field number from\nj/c/g/ads/crm/gamma/email/optout/optout_service.proto",
                    "format": "int32",
                    "type": "integer"
                },
                "previousNames": {
                    "description": "Used if notification category changed its string based id.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GammaProductProgramLabel": {
            "id": "GammaProductProgramLabel",
            "properties": {
                "aliases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "allowsNonGoogleCc": {
                    "description": "Does this program label allow cc to addresses outside of @google.com",
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "fromAddresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subLabels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GcmDeviceAddress": {
            "description": "Next Id: 3",
            "id": "GcmDeviceAddress",
            "properties": {
                "androidId": {
                    "description": "Gservices android id",
                    "format": "int64",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Must match the package name for the Android application (i.e. the value of\nthe package attribute of the manifest tag in AndroidManifest.xml).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GcmDevicePushAddress": {
            "description": "Used when the ChannelType is GCM_DEVICE_PUSH.\nNote: One of registration_id or android_id must be set.",
            "id": "GcmDevicePushAddress",
            "properties": {
                "androidId": {
                    "description": "The Android ID of the device provided by Gservices.\nSee more at go/androidids.",
                    "format": "int64",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Required. This must correspond to a previously configured GcmApplication\nfor the client sending to this address.",
                    "type": "string"
                },
                "deviceUserId": {
                    "description": "Optional - used for the multiple user feature on JB MR1+.\nThis is the short serial number used to identify multi-user on the device.\nNote that a device_user_id > 0 indicates that the Android ID above is\nlikely \"fake\", e.g. not usable to send a notification to a device (only\nusable to distinguish unique profile-on-devices).",
                    "format": "int64",
                    "type": "string"
                },
                "dusi": {
                    "description": "Optional. go/dusi is an identifier for a device session originating the\nlast StoreRequest received for this particular target.",
                    "type": "string"
                },
                "registrationId": {
                    "description": "The registration ID of the device. The device obtains this\nID when it registers for GCM. This is the recommended Android device\nidentifier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GcmGroupPushAddress": {
            "description": "Used when the ChannelType is GCM_GROUP_PUSH.",
            "id": "GcmGroupPushAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. See comment on GcmDevicePushAddress.application_id.",
                    "type": "string"
                },
                "gaiaId": {
                    "description": "Required.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GcmRegistrationIdAddress": {
            "description": "Next Id: 3",
            "id": "GcmRegistrationIdAddress",
            "properties": {
                "applicationId": {
                    "description": "Must match the package name for the Android application (i.e. the value of\nthe package attribute of the manifest tag in AndroidManifest.xml).",
                    "type": "string"
                },
                "registrationId": {
                    "description": "The registration ID of the device. The device obtains this\nID when it registers for GCM.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetAndroidInTabEmulatorLinkRequest": {
            "id": "GetAndroidInTabEmulatorLinkRequest",
            "properties": {
                "apiLevel": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetAndroidInTabEmulatorLinkResponse": {
            "id": "GetAndroidInTabEmulatorLinkResponse",
            "properties": {
                "urlLink": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetCampaignDetailsRequest": {
            "id": "GetCampaignDetailsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetChimeRegisteredDevicesRequest": {
            "id": "GetChimeRegisteredDevicesRequest",
            "properties": {},
            "type": "object"
        },
        "GetChimeRegisteredDevicesResponse": {
            "id": "GetChimeRegisteredDevicesResponse",
            "properties": {
                "chimeRegisteredDevices": {
                    "items": {
                        "$ref": "ChimeRegisteredDevice"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "GetCreativeVersionRequest": {
            "id": "GetCreativeVersionRequest",
            "properties": {
                "versionId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetCreativeVersionResponse": {
            "description": "Includes the creative body content.",
            "id": "GetCreativeVersionResponse",
            "properties": {
                "creativeVersion": {
                    "$ref": "CreativeVersion"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "GetDueSchedulesRequest": {
            "id": "GetDueSchedulesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetDueSchedulesResponse": {
            "id": "GetDueSchedulesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "hasPastDueSchedules": {
                    "type": "boolean"
                },
                "hasPendingWorkflowQueues": {
                    "type": "boolean"
                },
                "pastDueScheduleIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "pendingWorkflowQueues": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetGunsRegisteredDevicesRequest": {
            "id": "GetGunsRegisteredDevicesRequest",
            "properties": {},
            "type": "object"
        },
        "GetGunsRegisteredDevicesResponse": {
            "id": "GetGunsRegisteredDevicesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "gunsRegisteredDevices": {
                    "items": {
                        "$ref": "GunsRegisteredDevice"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetHistoryFullTextDataResponse": {
            "id": "GetHistoryFullTextDataResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "fullText": {
                    "$ref": "FullText"
                }
            },
            "type": "object"
        },
        "GetOptInTextValuesRequest": {
            "id": "GetOptInTextValuesRequest",
            "properties": {},
            "type": "object"
        },
        "GetOptInTextValuesResponse": {
            "id": "GetOptInTextValuesResponse",
            "properties": {
                "optedInTextValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "optedOutTextValues": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetPipelineStatusForDispatchRequest": {
            "id": "GetPipelineStatusForDispatchRequest",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dispatchId": {
                    "type": "string"
                },
                "nodeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "predecessorNodeIds": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetTopCampaignsRequest": {
            "id": "GetTopCampaignsRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GmrSourceService": {
            "id": "GmrSourceService",
            "properties": {
                "gammaEnvironment": {
                    "description": "Different environments use different mr2 files, thus we specify which Gamma\nenvironment is expected to connect to the service given here.",
                    "type": "string"
                },
                "gmrSourceService": {
                    "description": "The name of the GMR record in caribou/production/delivery/mr2*",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GnpCampaignInfo": {
            "description": "Represents GNP campaign. All GNP campaign related data should be placed here.\nTaken from:\nhttp://google3/notifications/platform/frontend/proto/internal_api/compiler_snapshot_service.proto?q=symbol:LaunchedCampaign",
            "id": "GnpCampaignInfo",
            "properties": {
                "campaignId": {
                    "description": "GNP campaign identifier. Copied 'as is' from the data model.",
                    "type": "string"
                },
                "environment": {
                    "description": "GNP Environment. GNP Compiler environment (autopush, prod, etc).",
                    "type": "string"
                },
                "project": {
                    "description": "GNP Project. Copied 'as is' from the data model.",
                    "type": "string"
                },
                "version": {
                    "$ref": "GnpCampaignInfoVersionNumber",
                    "description": "GNP campaign version number. Copied 'as is' from the data model."
                }
            },
            "type": "object"
        },
        "GnpCampaignInfoVersionNumber": {
            "id": "GnpCampaignInfoVersionNumber",
            "properties": {
                "major": {
                    "description": "Major version number. Indicates changes that should affect analysis (and\nreset experiment-level aggregations).",
                    "format": "int32",
                    "type": "integer"
                },
                "minor": {
                    "description": "Minor version number. Indicates changes that shouldn't affect analytics.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GnpWorkflowNodeInfo": {
            "description": "Represents GNP workflow node. All GNP workflow node related data should be\nplaced here.\nhttp://google3/notifications/platform/frontend/proto/internal_api/compiler_snapshot_service.proto?q=symbol:WorkflowNode",
            "id": "GnpWorkflowNodeInfo",
            "properties": {
                "nodeId": {
                    "description": "GNP node ID. Copied 'as is' from GNP workflow node. It can be shared\nbetween multiple workflow nodes and is used for logging.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GreenTeaCompanyTeamId": {
            "description": "Next Id: 3",
            "id": "GreenTeaCompanyTeamId",
            "properties": {
                "companyId": {
                    "format": "int64",
                    "type": "string"
                },
                "teamId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupedProofAxpTreatmentObject": {
            "id": "GroupedProofAxpTreatmentObject",
            "properties": {
                "snapshotId": {
                    "format": "int64",
                    "type": "string"
                },
                "snapshotLabels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "treatments": {
                    "items": {
                        "$ref": "ProofAxpTreatmentObject"
                    },
                    "type": "array"
                },
                "workflowId": {
                    "format": "int64",
                    "type": "string"
                },
                "workflowName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsRegisteredDevice": {
            "id": "GunsRegisteredDevice",
            "properties": {
                "deviceName": {
                    "description": "The human friendly name of the device.",
                    "type": "string"
                },
                "registration": {
                    "$ref": "Registration",
                    "description": "The registration details provided in the latest registration."
                },
                "registrationTimestampMsec": {
                    "description": "The time of the most recent registration for this device.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HtmlToImageRenderErrorData": {
            "description": "Error data for ERROR_TYPE_HTML_TO_IMAGE_RENDER_FAILED",
            "id": "HtmlToImageRenderErrorData",
            "properties": {
                "notOkResources": {
                    "items": {
                        "$ref": "HtmlToImageRequestedResource"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HtmlToImageRequest": {
            "id": "HtmlToImageRequest",
            "properties": {
                "html": {
                    "description": "The html to render and convert to an image.",
                    "type": "string"
                },
                "key": {
                    "description": "A key to associate with the html being converted to an image.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HtmlToImageRequestedResource": {
            "description": "Resource requested when converting html to an image.",
            "id": "HtmlToImageRequestedResource",
            "properties": {
                "statusCode": {
                    "description": "Http status code that resulted from trying to fetch this resource.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "The type of resource that was being requested.",
                    "type": "string"
                },
                "url": {
                    "description": "Url of the resource that was being requested.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HtmlToImageResponse": {
            "id": "HtmlToImageResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData",
                    "description": "If present, then there was an error with converting the html to an image."
                },
                "imageSrc": {
                    "description": "The image source, could be a url to a resource or a base64 data url.",
                    "type": "string"
                },
                "key": {
                    "description": "The key that was provided in the Request if any.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HttpStreamingAddress": {
            "description": "Used when the ChannelType is HTTP_STREAMING.",
            "id": "HttpStreamingAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. This must correspond to a configured HttpStreamingApplication\nfor the client sending to this address.",
                    "type": "string"
                },
                "deviceId": {
                    "description": "The ID to uniquely identify the device.\nThis ID can be provided by the client. If it's empty, then Chime will\ngenerate a random ID and return it to the client.",
                    "type": "string"
                },
                "refreshRegistrationId": {
                    "description": "Optional. If set to true in StoreRequest, Chime will ask FCM for a new\nregistration ID and update the existing stored target to use the new ID\ninstead.",
                    "type": "boolean"
                },
                "registrationId": {
                    "description": "The FCM registration ID that can be used to send notifications to this\ndevice. This ID is generated by FCM and populated by Chime. Clients do not\npopulate this field themselves.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IncentiveInfo": {
            "description": "LINT.IfChange",
            "id": "IncentiveInfo",
            "properties": {
                "coupon": {
                    "type": "string"
                },
                "couponType": {
                    "description": "Replacement for is_codeless",
                    "enum": [
                        "ICT_UNKNOWN",
                        "ICT_CODED",
                        "ICT_CODELESS_AUTO_REDEEM",
                        "ICT_CODELESS_MANUAL_REDEEM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "incentiveCampaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "incentiveId": {
                    "format": "int64",
                    "type": "string"
                },
                "isCodeless": {
                    "description": "Deprecated",
                    "type": "boolean"
                },
                "rewardValue": {
                    "format": "float",
                    "type": "number"
                },
                "spendValue": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IncentivesNode": {
            "description": "Node that is used to generate incentives that can be used later in workflow",
            "id": "IncentivesNode",
            "properties": {
                "codeless": {
                    "type": "boolean"
                },
                "couponType": {
                    "enum": [
                        "INCENTIVES_COUPON_TYPE_UNKNOWN",
                        "INCENTIVES_COUPON_TYPE_CODED",
                        "INCENTIVES_COUPON_TYPE_CODELESS_AUTO_REDEEM",
                        "INCENTIVES_COUPON_TYPE_CODELESS_MANUAL_REDEEM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "eligibles": {
                    "items": {
                        "type": "boolean"
                    },
                    "type": "array"
                },
                "incentiveId": {
                    "format": "int64",
                    "type": "string"
                },
                "incentivesCampaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "numCoupons": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IngestConfig": {
            "id": "IngestConfig",
            "properties": {
                "bulkOptInTags": {
                    "items": {
                        "$ref": "OptInSignalInfoEntry"
                    },
                    "type": "array"
                },
                "bulkTags": {
                    "items": {
                        "$ref": "SignalInfoEntry"
                    },
                    "type": "array"
                },
                "collectionTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "columnMappings": {
                    "items": {
                        "$ref": "ColumnMappingEntry"
                    },
                    "type": "array"
                },
                "columnToIgnores": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "newProductSignals": {
                    "items": {
                        "$ref": "SignalMetadataInfoEntry"
                    },
                    "type": "array"
                },
                "uploadAction": {
                    "enum": [
                        "UPLOAD_ACTION_UNKNOWN",
                        "UPLOAD_ACTION_ADD_NEW_CONTACTS_ONLY",
                        "UPLOAD_ACTION_ADD_MISSING_SIGNALS",
                        "UPLOAD_ACTION_OVERWRITE_EXISTING",
                        "UPLOAD_ACTION_DELETE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InternalRecipientData": {
            "description": "INTERNAL ONLY\nRecipient properties that are set only internally by Gamma\nThis message must not be set by external clients",
            "id": "InternalRecipientData",
            "properties": {
                "incentivesCoupons": {
                    "items": {
                        "$ref": "CouponRetrievalData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "InternalRetryDetails": {
            "description": "Message used internally by Gamma to manage retry attempts",
            "id": "InternalRetryDetails",
            "properties": {
                "retryDispatchId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LanguageCode": {
            "id": "LanguageCode",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "languageOrLocale": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LastSavedVersionInfo": {
            "description": "Every object returned from the API will have information\nabout the last save time.  The UI pass this back\nwith a save request so that the repository can decide if\na newer version has been saved since the client got its last\ncopy of the object.\nThe current contents of this object will allow for the optimistic\nlocking mechanism that we're implementing for F1, but this structure\ncould be expanded to describe other version information for other\nrepositories.",
            "id": "LastSavedVersionInfo",
            "properties": {
                "lastSaveUser": {
                    "type": "string"
                },
                "loadedVersionTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListCreativeVersionsRequest": {
            "description": "Creative versions are returned ordered by descending save timestamp.",
            "id": "ListCreativeVersionsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "creativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "pageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ListCreativeVersionsResponse": {
            "description": "Does not include the creative body content.",
            "id": "ListCreativeVersionsResponse",
            "properties": {
                "creativeVersions": {
                    "items": {
                        "$ref": "CreativeVersion"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "ListEmailPipelineJobsRequest": {
            "id": "ListEmailPipelineJobsRequest",
            "properties": {},
            "type": "object"
        },
        "ListEmailPipelineJobsResponse": {
            "id": "ListEmailPipelineJobsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "jobs": {
                    "items": {
                        "$ref": "ListEmailPipelineJobsResponseJob"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListEmailPipelineJobsResponseJob": {
            "id": "ListEmailPipelineJobsResponseJob",
            "properties": {
                "borgJobId": {
                    "format": "int64",
                    "type": "string"
                },
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "cell": {
                    "type": "string"
                },
                "creationTimeSeconds": {
                    "format": "int64",
                    "type": "string"
                },
                "dispatchId": {
                    "type": "string"
                },
                "durationSeconds": {
                    "format": "int64",
                    "type": "string"
                },
                "isAnomalistic": {
                    "type": "boolean"
                },
                "isWorker": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "preemptions": {
                    "format": "int32",
                    "type": "integer"
                },
                "recipients": {
                    "format": "int64",
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadAliasesRequest": {
            "id": "LoadAliasesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadAliasesResponse": {
            "id": "LoadAliasesResponse",
            "properties": {
                "aliasSets": {
                    "items": {
                        "$ref": "AliasSet"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadAllBouncesRequest": {
            "id": "LoadAllBouncesRequest",
            "properties": {
                "emailMessageId": {
                    "type": "string"
                },
                "maxResults": {
                    "description": "Next available ID = 3",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadAllBouncesResponse": {
            "id": "LoadAllBouncesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "flatBounces": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAllCampaignSettingsRequest": {
            "description": "### CampaignInfo\n\n### FastSendConfig\n\n### FilterConfig\n\n### AllCampaignSettings",
            "id": "LoadAllCampaignSettingsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadAllCampaignSettingsResponse": {
            "id": "LoadAllCampaignSettingsResponse",
            "properties": {
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "config": {
                    "$ref": "FastSendConfig"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "filters": {
                    "$ref": "FilterConfig"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadAllCampaignVersionInfosRequest": {
            "id": "LoadAllCampaignVersionInfosRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "offset": {
                    "description": "load page_size rows from a given offset",
                    "format": "int64",
                    "type": "string"
                },
                "pageSize": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "load page_size rows starting at a given version",
                    "format": "int64",
                    "type": "string"
                },
                "versionOffset": {
                    "description": "load a fixed number of versions\n(versions in range [version_offset - (page_size - 1), version_offset])",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadAllCampaignVersionInfosResponse": {
            "id": "LoadAllCampaignVersionInfosResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "numTotalResults": {
                    "format": "int64",
                    "type": "string"
                },
                "versionInfos": {
                    "items": {
                        "$ref": "CampaignVersionInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAllClicksRequest": {
            "id": "LoadAllClicksRequest",
            "properties": {
                "emailMessageId": {
                    "type": "string"
                },
                "maxResults": {
                    "description": "Next available ID = 3",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadAllClicksResponse": {
            "id": "LoadAllClicksResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "flatClicks": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAllContactsInProductRequest": {
            "id": "LoadAllContactsInProductRequest",
            "properties": {
                "contactIdsOnly": {
                    "description": "if true, only contact_id will be populated in response",
                    "type": "boolean"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "user": {
                    "description": "if not set, the actual requesting user is used",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadAllContactsInProductResponse": {
            "id": "LoadAllContactsInProductResponse",
            "properties": {
                "contactInfos": {
                    "items": {
                        "$ref": "ContactInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAllLanguagesRequest": {
            "id": "LoadAllLanguagesRequest",
            "properties": {},
            "type": "object"
        },
        "LoadAllLanguagesResponse": {
            "id": "LoadAllLanguagesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "languageCodes": {
                    "items": {
                        "$ref": "LanguageCode"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAllMessagesRequest": {
            "id": "LoadAllMessagesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadAllMessagesResponse": {
            "description": "Creatives returned in returned messages will not have creative bodies",
            "id": "LoadAllMessagesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "latestVersionInfo": {
                    "$ref": "LastSavedVersionInfo"
                },
                "messages": {
                    "items": {
                        "$ref": "Message"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAllProductsForUserRequest": {
            "id": "LoadAllProductsForUserRequest",
            "properties": {
                "forFormbox": {
                    "type": "boolean"
                },
                "user": {
                    "description": "if not set, the actual requesting user is used",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadAllProductsForUserResponse": {
            "id": "LoadAllProductsForUserResponse",
            "properties": {
                "productInfos": {
                    "items": {
                        "$ref": "ContactProductInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAllRecipientSourcesRequest": {
            "id": "LoadAllRecipientSourcesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "pageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "paginated": {
                    "type": "boolean"
                },
                "sortField": {
                    "enum": [
                        "RECIPIENT_SOURCE_SORT_FIELD_UNKNOWN",
                        "RECIPIENT_SOURCE_SORT_FIELD_NAME",
                        "RECIPIENT_SOURCE_SORT_FIELD_TYPE",
                        "RECIPIENT_SOURCE_SORT_FIELD_CREATION_TIMESTAMP",
                        "RECIPIENT_SOURCE_SORT_FIELD_SCHEDULE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sortOrder": {
                    "enum": [
                        "SORT_ORDER_UNKNOWN",
                        "SORT_ORDER_ASCENDING",
                        "SORT_ORDER_DESCENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "unsharded": {
                    "type": "boolean"
                },
                "withDeleted": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoadAllRecipientSourcesResponse": {
            "id": "LoadAllRecipientSourcesResponse",
            "properties": {
                "deliveryInfos": {
                    "items": {
                        "$ref": "DeliveryInfo"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "numTotalResults": {
                    "format": "int32",
                    "type": "integer"
                },
                "recipientSources": {
                    "items": {
                        "$ref": "RecipientSource"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAvailableTimezonesRequest": {
            "id": "LoadAvailableTimezonesRequest",
            "properties": {},
            "type": "object"
        },
        "LoadAvailableTimezonesResponse": {
            "id": "LoadAvailableTimezonesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "timezoneInfos": {
                    "items": {
                        "$ref": "TimezoneInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAxpTreatmentsRequest": {
            "id": "LoadAxpTreatmentsRequest",
            "properties": {
                "workflowId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadAxpTreatmentsResponse": {
            "id": "LoadAxpTreatmentsResponse",
            "properties": {
                "axpTreatments": {
                    "items": {
                        "$ref": "ProofAxpTreatmentObject"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "groupedAxpTreatments": {
                    "items": {
                        "$ref": "GroupedProofAxpTreatmentObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadAxpWorkflowsRequest": {
            "id": "LoadAxpWorkflowsRequest",
            "properties": {},
            "type": "object"
        },
        "LoadAxpWorkflowsResponse": {
            "id": "LoadAxpWorkflowsResponse",
            "properties": {
                "axpWorkflowItems": {
                    "items": {
                        "$ref": "AxpWorkflowItem"
                    },
                    "type": "array"
                },
                "axpWorkflows": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "LoadCampaignMetricsRequest": {
            "id": "LoadCampaignMetricsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadCampaignMetricsResponse": {
            "id": "LoadCampaignMetricsResponse",
            "properties": {
                "campaignMetrics": {
                    "$ref": "CampaignMetrics"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "LoadChimeWorkflowConfigRequest": {
            "description": "### WorkflowConfig",
            "id": "LoadChimeWorkflowConfigRequest",
            "properties": {
                "chimeClientId": {
                    "type": "string"
                },
                "chimeWorkflowName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadChimeWorkflowConfigResponse": {
            "id": "LoadChimeWorkflowConfigResponse",
            "properties": {
                "chimeWorkflowConfig": {
                    "$ref": "WorkflowConfig"
                }
            },
            "type": "object"
        },
        "LoadChimeWorkflowNamesRequest": {
            "id": "LoadChimeWorkflowNamesRequest",
            "properties": {
                "chimeClientId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadChimeWorkflowNamesResponse": {
            "id": "LoadChimeWorkflowNamesResponse",
            "properties": {
                "chimeWorkflowNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadCollaboratorsRequest": {
            "description": "### Collaborators",
            "id": "LoadCollaboratorsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadCollaboratorsResponse": {
            "id": "LoadCollaboratorsResponse",
            "properties": {
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "userCanEditCampaign": {
                    "type": "boolean"
                },
                "userCanPublishCampaign": {
                    "type": "boolean"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadContactRequest": {
            "id": "LoadContactRequest",
            "properties": {
                "contactId": {
                    "format": "int64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadContactResponse": {
            "id": "LoadContactResponse",
            "properties": {
                "contactInfo": {
                    "$ref": "ContactInfo"
                }
            },
            "type": "object"
        },
        "LoadContactsPaginatedRequest": {
            "id": "LoadContactsPaginatedRequest",
            "properties": {
                "contactIdsOnly": {
                    "description": "if true, only contact_id will be populated in response\nDEPRECATED, use field_mask instead with addPaths(\"contact_id\")",
                    "type": "boolean"
                },
                "fieldMask": {
                    "description": "ContactInfo attributes to return. if not set, everything is returned",
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "filterWipedOut": {
                    "description": "Whether or not to filter out contacts that have been wiped out",
                    "type": "boolean"
                },
                "offset": {
                    "description": "number of entries to skip",
                    "format": "int64",
                    "type": "string"
                },
                "pageSize": {
                    "description": "max number of entries to return",
                    "format": "int64",
                    "type": "string"
                },
                "productId": {
                    "description": "id of the product",
                    "format": "int32",
                    "type": "integer"
                },
                "user": {
                    "description": "if not set, the actual requesting user is used",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadContactsPaginatedResponse": {
            "id": "LoadContactsPaginatedResponse",
            "properties": {
                "contactInfos": {
                    "items": {
                        "$ref": "ContactInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadCreativeBodyRequest": {
            "id": "LoadCreativeBodyRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "creativeBodyId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadCreativeBodyResponse": {
            "id": "LoadCreativeBodyResponse",
            "properties": {
                "creativeBody": {
                    "$ref": "CreativeBody"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadCreativeRequest": {
            "id": "LoadCreativeRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "creativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadCreativeResponse": {
            "id": "LoadCreativeResponse",
            "properties": {
                "creative": {
                    "$ref": "Creative"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadCsvDataRequest": {
            "id": "LoadCsvDataRequest",
            "properties": {
                "numRows": {
                    "description": "will include all rows if not set",
                    "format": "int32",
                    "type": "integer"
                },
                "onlyErrors": {
                    "type": "boolean"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "rowOffset": {
                    "description": "0 indicates first non-header row",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadCsvDataResponse": {
            "id": "LoadCsvDataResponse",
            "properties": {
                "csvDetails": {
                    "$ref": "CsvDetails"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "LoadDaysOfWeekRequest": {
            "id": "LoadDaysOfWeekRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadDaysOfWeekResponse": {
            "id": "LoadDaysOfWeekResponse",
            "properties": {
                "dayOfWeeks": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "DAY_OF_WEEK_UNKNOWN",
                            "DAY_OF_WEEK_SUN",
                            "DAY_OF_WEEK_MON",
                            "DAY_OF_WEEK_TUE",
                            "DAY_OF_WEEK_WED",
                            "DAY_OF_WEEK_THU",
                            "DAY_OF_WEEK_FRI",
                            "DAY_OF_WEEK_SAT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadFilterConfigRequest": {
            "id": "LoadFilterConfigRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadFilterConfigResponse": {
            "id": "LoadFilterConfigResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "filterConfig": {
                    "$ref": "FilterConfig"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadLatestProofMessageInfoRequest": {
            "id": "LoadLatestProofMessageInfoRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadLatestProofMessageInfoResponse": {
            "id": "LoadLatestProofMessageInfoResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "status": {
                    "$ref": "PublishedCampaignStatus"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadMessageRequest": {
            "id": "LoadMessageRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadMessageResponse": {
            "id": "LoadMessageResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "message": {
                    "$ref": "Message"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadMessageVersionsRequest": {
            "id": "LoadMessageVersionsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "offset": {
                    "format": "int64",
                    "type": "string"
                },
                "pageSize": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadMessageVersionsResponse": {
            "id": "LoadMessageVersionsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "numTotalResults": {
                    "format": "int64",
                    "type": "string"
                },
                "versionInfos": {
                    "items": {
                        "$ref": "MessageVersion"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadPipelineJobsDetailsRequest": {
            "id": "LoadPipelineJobsDetailsRequest",
            "properties": {
                "detailsIds": {
                    "items": {
                        "$ref": "LoadPipelineJobsDetailsRequestJobDetailIds"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadPipelineJobsDetailsRequestJobDetailIds": {
            "id": "LoadPipelineJobsDetailsRequestJobDetailIds",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dispatchId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadPipelineJobsDetailsResponse": {
            "id": "LoadPipelineJobsDetailsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "jobDetails": {
                    "items": {
                        "$ref": "LoadPipelineJobsDetailsResponseJobDetail"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadPipelineJobsDetailsResponseJobDetail": {
            "id": "LoadPipelineJobsDetailsResponseJobDetail",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dispatchId": {
                    "type": "string"
                },
                "dispatchType": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "realTimeOptoutChecksEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoadProductRequest": {
            "id": "LoadProductRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "user": {
                    "description": "if not set, the actual requesting user is used",
                    "type": "string"
                },
                "withNumDeleted": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoadProductResponse": {
            "id": "LoadProductResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "numDeletedContacts": {
                    "format": "int64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "LoadProductUploadHistoryRequest": {
            "id": "LoadProductUploadHistoryRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadProductUploadHistoryResponse": {
            "id": "LoadProductUploadHistoryResponse",
            "properties": {
                "uploadTags": {
                    "items": {
                        "$ref": "UploadTag"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadProofConfigRequest": {
            "description": "### Proof Config",
            "id": "LoadProofConfigRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadProofDataRequest": {
            "id": "LoadProofDataRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "loadAllRecipients": {
                    "type": "boolean"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadProofDataResponse": {
            "id": "LoadProofDataResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "groupedTreatmentObjects": {
                    "items": {
                        "$ref": "GroupedProofAxpTreatmentObject"
                    },
                    "type": "array"
                },
                "messageObjects": {
                    "items": {
                        "$ref": "ProofMessageObject"
                    },
                    "type": "array"
                },
                "recipientObjects": {
                    "items": {
                        "$ref": "ProofRecipientObject"
                    },
                    "type": "array"
                },
                "totalRecipientObjectsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "treatmentObjects": {
                    "items": {
                        "$ref": "ProofAxpTreatmentObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadPublishedCampaignRequest": {
            "id": "LoadPublishedCampaignRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "Unspecified is latest published"
                }
            },
            "type": "object"
        },
        "LoadPublishedCampaignResponse": {
            "id": "LoadPublishedCampaignResponse",
            "properties": {
                "campaign": {
                    "$ref": "PublishedCampaign"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "LoadPublishedCampaignStatusRequest": {
            "id": "LoadPublishedCampaignStatusRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadPublishedCampaignStatusResponse": {
            "id": "LoadPublishedCampaignStatusResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "status": {
                    "$ref": "PublishedCampaignStatus"
                }
            },
            "type": "object"
        },
        "LoadRecipientSourceRequest": {
            "id": "LoadRecipientSourceRequest",
            "properties": {
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "unsharded": {
                    "type": "boolean"
                },
                "withDeleted": {
                    "description": "Not used or needed.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoadRecipientSourceResponse": {
            "id": "LoadRecipientSourceResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "recipientSource": {
                    "$ref": "RecipientSource"
                }
            },
            "type": "object"
        },
        "LoadReportingDetailRequest": {
            "id": "LoadReportingDetailRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "signal": {
                    "description": "unset will return reporting across all signals",
                    "type": "string"
                },
                "timespanInDays": {
                    "description": "unset value or 0 will be interpreted as all-time reporting.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadReportingDetailResponse": {
            "id": "LoadReportingDetailResponse",
            "properties": {
                "dataPointLists": {
                    "items": {
                        "$ref": "DataPointList"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadReportingSummaryRequest": {
            "id": "LoadReportingSummaryRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "signal": {
                    "description": "unset will return reporting across all signals",
                    "type": "string"
                },
                "timespanInDays": {
                    "description": "unset value or 0 will be interpreted as all-time reporting.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadReportingSummaryResponse": {
            "id": "LoadReportingSummaryResponse",
            "properties": {
                "dataPoints": {
                    "items": {
                        "$ref": "DataPoint"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LoadScheduleRequest": {
            "id": "LoadScheduleRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LoadScheduleResponse": {
            "id": "LoadScheduleResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "schedule": {
                    "$ref": "Schedule"
                }
            },
            "type": "object"
        },
        "LoadSimulationDataRequest": {
            "id": "LoadSimulationDataRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "loadAllRecipients": {
                    "type": "boolean"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "LoadSimulationDataResponse": {
            "id": "LoadSimulationDataResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "messageInfos": {
                    "items": {
                        "$ref": "MessageInfo"
                    },
                    "type": "array"
                },
                "recipientObjects": {
                    "items": {
                        "$ref": "ProofRecipientObject"
                    },
                    "type": "array"
                },
                "sectionMetadatas": {
                    "items": {
                        "$ref": "WorkflowSectionMetadata"
                    },
                    "type": "array"
                },
                "sections": {
                    "items": {
                        "$ref": "WorkflowSection"
                    },
                    "type": "array"
                },
                "totalRecipientObjectsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "workflowSimulationInfo": {
                    "$ref": "WorkflowSimulationInfo"
                }
            },
            "type": "object"
        },
        "LoadStateRequest": {
            "id": "LoadStateRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadStateResponse": {
            "id": "LoadStateResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadUnpublishedCampaignVersionInfoRequest": {
            "id": "LoadUnpublishedCampaignVersionInfoRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoadUnpublishedCampaignVersionInfoResponse": {
            "id": "LoadUnpublishedCampaignVersionInfoResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "versionInfo": {
                    "$ref": "CampaignVersionInfo"
                }
            },
            "type": "object"
        },
        "LoadWorkflowDataResponse": {
            "id": "LoadWorkflowDataResponse",
            "properties": {
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "messageInfos": {
                    "items": {
                        "$ref": "MessageInfo"
                    },
                    "type": "array"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "userCanEditCampaign": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoadWorkflowRequest": {
            "description": "### Workflow",
            "id": "LoadWorkflowRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "MatchstickAddress": {
            "description": "Used when the ChannelType is MATCHSTICK.",
            "id": "MatchstickAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. This must correspond to a previously configured\nMatchstickApplication for the client sending to this address.",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "Required. Phone number of recipient in E.164 format.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MendelExperimentAllocation": {
            "id": "MendelExperimentAllocation",
            "properties": {
                "armMendelId": {
                    "description": "The mendel Id associated with this experiment arm.",
                    "format": "int64",
                    "type": "string"
                },
                "armValue": {
                    "description": "What value should the injected signal have if this experiment arm is\nchosen.",
                    "type": "string"
                },
                "percentAllocation": {
                    "description": "What percentage of users to allocate to this arm of the experiment.\nThis name is now a misnomer, this doesn't have to be percent, can be of any\nnumber and will be chosen as percent_allocation/total_allocated.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "MendelExperimentNode": {
            "description": "Next Id: 7",
            "id": "MendelExperimentNode",
            "properties": {
                "allocationDenominator": {
                    "description": "The denominator for allocations, i.e. if we allocate 30 \"percent\" to an\nexperiment arm and our denominator is 1000 we expect 3% of traffic to go to\nthat arm. Should equal total_allocated for a valid node.",
                    "format": "int32",
                    "type": "integer"
                },
                "armAllocations": {
                    "description": "Allocations for each arm of the experiment.",
                    "items": {
                        "$ref": "MendelExperimentAllocation"
                    },
                    "type": "array"
                },
                "controlAllocation": {
                    "$ref": "MendelExperimentAllocation",
                    "description": "Allocation of recipients into the experiment control. We want to encourage\neach experiment to have a control, to correct way to turn it off would be\nto set its percent allocation to 0."
                },
                "hashingSalt": {
                    "description": "A value to use for the hashing function that splits the\nrecipients into experiment arms. Should always have a value.",
                    "format": "int64",
                    "type": "string"
                },
                "signalName": {
                    "description": "Name of the signal the node will inject into the campaign.",
                    "type": "string"
                },
                "totalAllocated": {
                    "description": "The sum of all the allocations. Should equal the sum of all\ncontrol_allocations and arm_allocation and allocation_denominator.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Message": {
            "description": "A message",
            "id": "Message",
            "properties": {
                "creatives": {
                    "items": {
                        "$ref": "Creative"
                    },
                    "type": "array"
                },
                "messageDetails": {
                    "$ref": "MessageDetails"
                }
            },
            "type": "object"
        },
        "MessageChannelConfiguration": {
            "description": "Channel configuration for a Message. Determines the channel and any options\nassociated with it.",
            "id": "MessageChannelConfiguration",
            "properties": {
                "channelType": {
                    "description": "Enum to determine which channel type to use.",
                    "enum": [
                        "MESSAGE_CHANNEL_TYPE_UNKNOWN",
                        "MESSAGE_CHANNEL_TYPE_EMAIL",
                        "MESSAGE_CHANNEL_TYPE_PRE_RENDERED_EMAIL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "emailOptions": {
                    "$ref": "MessageChannelEmailOptions",
                    "description": "Configuration options for each channel. At most one should be set, for the\nselected channel.\nAdd more channel specific options here."
                }
            },
            "type": "object"
        },
        "MessageChannelEmailOptions": {
            "description": "Options for the Email channel.",
            "id": "MessageChannelEmailOptions",
            "properties": {
                "creativeBodyFormats": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CREATIVE_BODY_FORMAT_UNKNOWN",
                            "CREATIVE_BODY_FORMAT_EMAIL_TEXT",
                            "CREATIVE_BODY_FORMAT_EMAIL_HTML",
                            "CREATIVE_BODY_FORMAT_LANDING_PAGE",
                            "CREATIVE_BODY_FORMAT_PUSH_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_SMS",
                            "CREATIVE_BODY_FORMAT_ADWORDS_ALERT",
                            "CREATIVE_BODY_FORMAT_IN_APP_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_EMAIL_AMP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "goopsPublisherId": {
                    "type": "string"
                },
                "goopsQueueName": {
                    "type": "string"
                },
                "sendToQueue": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MessageDetails": {
            "id": "MessageDetails",
            "properties": {
                "attachmentSignalNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "authLandingPage": {
                    "type": "boolean"
                },
                "channel": {
                    "$ref": "MessageChannelConfiguration"
                },
                "expirationOptions": {
                    "$ref": "ExpirationOptions",
                    "description": "Message expiration definitions - currently applied to push notification\nonly."
                },
                "gmrMessageId": {
                    "description": "Set if message was created through GMR service",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "opportunityLabel": {
                    "type": "string"
                },
                "spamPolicy": {
                    "type": "string"
                },
                "timezoneSendingEnabled": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "usedInWorkflow": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MessageInfo": {
            "description": "Basic info about a message (e.g. for listing messages in the workflow UI)",
            "id": "MessageInfo",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MessageNode": {
            "description": "Node that should send a message",
            "id": "MessageNode",
            "properties": {
                "messageId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MessageProofInfo": {
            "id": "MessageProofInfo",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "proofTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MessageVersion": {
            "id": "MessageVersion",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "creationTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "creativeId": {
                    "format": "int64",
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "isLatest": {
                    "description": "Convenence field, indicates if this version is the most recent version",
                    "type": "boolean"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "publishedTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationGroup": {
            "id": "NotificationGroup",
            "properties": {
                "categories": {
                    "items": {
                        "$ref": "GammaNotificationCategory"
                    },
                    "type": "array"
                },
                "enableRealTimeOptout": {
                    "description": "Real time opt-out is a feature that is offered that Gamma will call the\nproduct's opt-out service just before it sends email for every recipient to\nconfirm that a user is still opted in to an email category and will not\nsend if the user has opted out.\n\nThis field must be true if opt_out_backing_store is specified.",
                    "type": "boolean"
                },
                "optOutBackingStore": {
                    "description": "Backend for querying/updating user opt-out preferences. Where the opt-out\ndata is physically stored. See go/gamma-chores.\n\nIndicates whether the opt-out backing store has been migrated to Chime or\nnot, and what phase (if any) the migration to Chime is up to.\n\nIf set, enable_real_time_optout is implied to be true. If not set,\nGammaOptOutBackingStore.GAMMA_OPT_OUT_BACKING_STORE_LEGACY_GAMMA is\nimplied.",
                    "type": "string"
                },
                "optOutPreferencesSystem": {
                    "description": "Very rarely used, sidesteps Gamma (see below). Will be superseded by\ngo/gamma-chores.\n\nDetermines which preferences to show in the frontend. (Chime has a\ndifferent way of opting out of push notifications.)\n\nThis field allows clients to use Chime for opt-out, but its usage requires\nmarking the campaign mandatory in Gamma, which creates a bunch of problems\nwith knowing how many messages were actually sent.\n",
                    "type": "string"
                },
                "optoutServiceConnections": {
                    "description": "The set of connections to the specific backends that handle optouts.",
                    "items": {
                        "$ref": "OptoutServiceConnection"
                    },
                    "type": "array"
                },
                "tempLookupName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OptInSignalInfo": {
            "id": "OptInSignalInfo",
            "properties": {
                "modifiedTimestampMillis": {
                    "description": "Must be set by frontend.",
                    "format": "int64",
                    "type": "string"
                },
                "optInLastUpdater": {
                    "enum": [
                        "OPT_IN_LAST_UPDATER_UNKNOWN",
                        "OPT_IN_LAST_UPDATER_UI_IMPORT",
                        "OPT_IN_LAST_UPDATER_UPLOAD_SERVICE_IMPORT",
                        "OPT_IN_LAST_UPDATER_FORMBOX_IMPORT",
                        "OPT_IN_LAST_UPDATER_OPT_OUT_SERVER",
                        "OPT_IN_LAST_UPDATER_UNCONFIRMED_TIMEOUT_SCRIPT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Opt-in preference modified by uploading a CSV file on the UI",
                        "Opt-in preference modified by fetching a CSV file",
                        "Opt-in preference modified by FormBox import",
                        "Opt-in preference modified by the opt-out stubby service",
                        "Opt-in preference modified by F1 janitor script for users unconfirmed for\nmore than X days"
                    ],
                    "type": "string"
                },
                "value": {
                    "enum": [
                        "OPT_IN_VALUE_UNKNOWN",
                        "OPT_IN_VALUE_OPTED_IN",
                        "OPT_IN_VALUE_OPTED_OUT",
                        "OPT_IN_VALUE_UNCONFIRMED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OptInSignalInfoEntry": {
            "id": "OptInSignalInfoEntry",
            "properties": {
                "key": {
                    "description": "opt-in signal name is map's key",
                    "type": "string"
                },
                "value": {
                    "$ref": "OptInSignalInfo"
                }
            },
            "type": "object"
        },
        "OptOutNode": {
            "description": "Node for opting recipients out",
            "id": "OptOutNode",
            "properties": {
                "optOutFromAllCategories": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "OptoutServiceConnection": {
            "id": "OptoutServiceConnection",
            "properties": {
                "engContact": {
                    "description": "Who to contact in case this service is doing something we (Gamma) did not\nexpect but in a non-time critical way.",
                    "type": "string"
                },
                "gammaEnvironment": {
                    "description": "The environment for which this configuration is valid. This allows\nus to copy a product via stubby from one environment to another and has\ncontinuity with the current system where all the environments are\nconfigured together.\nMatches gamma_instance from gamma_optout_params.borg\nCan be one of: PRODUCTION, STAGING, QA, SMOKE, NIGHTLY",
                    "type": "string"
                },
                "oncallContact": {
                    "description": "Who to contact if the service is not responding in a way that is likely to\nbe impacting our (external, non-Googler) users.",
                    "type": "string"
                },
                "serviceVersion": {
                    "description": "1 -- The only version allowed.",
                    "format": "int32",
                    "type": "integer"
                },
                "targetServerAddress": {
                    "description": "GSLB, bns target or appengine target where the optout service exists.",
                    "type": "string"
                },
                "targetServiceName": {
                    "description": "Boq requires globally unique service names, this allows us to accommodate.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ParseErrors": {
            "id": "ParseErrors",
            "properties": {
                "parseErrors": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PastDelivery": {
            "description": "Aggregate data of most recently terminated deliveries in single calendar day",
            "id": "PastDelivery",
            "properties": {
                "finishMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "numDispatches": {
                    "format": "int32",
                    "type": "integer"
                },
                "numFailures": {
                    "format": "int32",
                    "type": "integer"
                },
                "startMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PercentSplitNode": {
            "description": "Node that splits recipient list",
            "id": "PercentSplitNode",
            "properties": {
                "allocations": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "labels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "totalAllocated": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PlxQueryRecipientSource": {
            "description": "PLX Query Recipient Source protocol buffer. Used in RecipientSourceProto.",
            "id": "PlxQueryRecipientSource",
            "properties": {
                "authorizeAs": {
                    "description": "MDB user/group as whom we will run the query.",
                    "type": "string"
                },
                "plxRevisionId": {
                    "description": "Used for accounting/tracking purposes only.  The full context required to\nrun the script must be provided below.",
                    "type": "string"
                },
                "plxScriptExecutionContext": {
                    "$ref": "PlxScriptExecutionContext"
                },
                "plxScriptOutputMetadata": {
                    "$ref": "PlxScriptOutputMetadata"
                },
                "queryName": {
                    "description": "Human-readable name for the query.  May be derived from PLX, or provided by\nthe collaborator.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PlxScript": {
            "id": "PlxScript",
            "properties": {
                "body": {
                    "description": "Actual contents of the script to be run.",
                    "type": "string"
                },
                "queryEngine": {
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PlxScriptArgument": {
            "id": "PlxScriptArgument",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PlxScriptExecutionContext": {
            "description": "This proto is a strict subset of PLX's ScriptExecutionContext.  Keep it\nbinary compatible with the original for easier keeping track of what has\nand hasn't been implemented.\ngoogle3/google/internal/plx/v2/script/script_execution_model.proto",
            "id": "PlxScriptExecutionContext",
            "properties": {
                "arguments": {
                    "items": {
                        "$ref": "PlxScriptArgument"
                    },
                    "type": "array"
                },
                "script": {
                    "$ref": "PlxScript"
                }
            },
            "type": "object"
        },
        "PlxScriptOutputMetadata": {
            "id": "PlxScriptOutputMetadata",
            "properties": {
                "csvOutputPath": {
                    "type": "string"
                },
                "csvType": {
                    "description": "Admittedly a misnomer, since this isn't a CSV.  This basically impacts what\nuser identifiers are used and how (e.g. whether to do a CID expansion).",
                    "enum": [
                        "INVALID",
                        "REGULAR_CSV",
                        "CID_EXPANSION_CSV",
                        "PROOF_LIST_DEPRECATED",
                        "GAIA_ID",
                        "CONTACTS_PIPELINE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PollRecipientSourceResponse": {
            "id": "PollRecipientSourceResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "recipientSource": {
                    "$ref": "RecipientSource"
                },
                "warnings": {
                    "$ref": "RecipientWarnings"
                }
            },
            "type": "object"
        },
        "PostProcessDispatchRequest": {
            "id": "PostProcessDispatchRequest",
            "properties": {
                "dispatchId": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "newProductSignals": {
                    "additionalProperties": {
                        "$ref": "SignalMetadataInfo"
                    },
                    "description": "new_product_signal holds user provided new signal descriptions from the\nfrontend new signals from users can only be of type SIGNAL_TYPE_GENERIC\nsignal name is map's key",
                    "type": "object"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "uploadAction": {
                    "enum": [
                        "UPLOAD_ACTION_UNKNOWN",
                        "UPLOAD_ACTION_ADD_NEW_CONTACTS_ONLY",
                        "UPLOAD_ACTION_ADD_MISSING_SIGNALS",
                        "UPLOAD_ACTION_OVERWRITE_EXISTING",
                        "UPLOAD_ACTION_DELETE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadSource": {
                    "enum": [
                        "UPLOAD_SOURCE_UNKNOWN",
                        "UPLOAD_SOURCE_UI",
                        "UPLOAD_SOURCE_UPLOAD_SERVICE",
                        "UPLOAD_SOURCE_FORMBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "uploader": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostProcessDispatchResponse": {
            "id": "PostProcessDispatchResponse",
            "properties": {
                "productInfo": {
                    "$ref": "ContactProductInfo"
                },
                "uploadTag": {
                    "$ref": "UploadTag"
                }
            },
            "type": "object"
        },
        "PreRenderedEmail": {
            "id": "PreRenderedEmail",
            "properties": {
                "ampBody": {
                    "description": "Next available id: 9",
                    "type": "string"
                },
                "bccAddresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ccAddresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fromAddress": {
                    "type": "string"
                },
                "htmlBody": {
                    "type": "string"
                },
                "plainTextBody": {
                    "type": "string"
                },
                "replyToAddress": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductDefaults": {
            "description": "These defaults are copied into Campaigns on creation but have different\nvalues depending on which Product the Campaign belongs to.",
            "id": "ProductDefaults",
            "properties": {
                "attributionProviders": {
                    "description": "Matches GammaAttributionProvider",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deliveryPreference": {
                    "description": "Must come from the list of delivery preferences valid for this product.\nMatches GammaDeliveryPreference enum.",
                    "type": "string"
                },
                "fallbackLanguage": {
                    "description": "Language to use when none was found.",
                    "type": "string"
                },
                "focusPreference": {
                    "description": "Matches GammaFocusPreference",
                    "type": "string"
                },
                "recipientRoles": {
                    "description": "Some products (e.g., Adwords) can filter based on \"role\" of a recipient\n(e.g., to send an email only to account admins). For these, the default\nset can be listed here.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "requiresProgramLabel": {
                    "description": "If all campaigns under the product all need a program label. (Not directly\ncopied into the campaign, probably should be.)",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProductDetailsRequest": {
            "id": "ProductDetailsRequest",
            "properties": {
                "ids": {
                    "description": "If no ids are specified, just return everything.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProductDetailsResponse": {
            "id": "ProductDetailsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "products": {
                    "items": {
                        "$ref": "ProductProto"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProductFeatures": {
            "description": "Next available: 27",
            "id": "ProductFeatures",
            "properties": {
                "disableGoopsPublishingDuringSend": {
                    "description": "Flag to disable publishing into Goops queue during the send process",
                    "type": "boolean"
                },
                "disablePublishingCihUserInteractions": {
                    "description": "Flag to disable sending a UserInteraction to CIH",
                    "type": "boolean"
                },
                "disableSavingToBigstore": {
                    "description": "Disables saving Fulltext and Landing Pages to Bigstore.\nSee go/gamma-disable-saving-to-bigstore",
                    "type": "boolean"
                },
                "enableAccountHistorySignals": {
                    "description": "Gates access to the HistorySignalRetriever which surfaces Gamma's history\nas usable signals for campaign workflows and messages.",
                    "type": "boolean"
                },
                "enableAccountUserEmailPreference": {
                    "description": "Allows choosing between two sending policies. Gamma by default sends one\nmessage per one email address. Account based sending means an end-user\ncould receive multiple messages at the same address if it's linked with\ndifferect accounts. Unset is the same as false (use default 1:1 sending).",
                    "type": "boolean"
                },
                "enableAdwordsCustomization": {
                    "description": "Flag turns on AdWords custom features like creating recipient lists from\ndivvy segments or generating lists of all AdWords customers that have had\nan impression in the last 8 weeks.",
                    "type": "boolean"
                },
                "enableAmpEmails": {
                    "description": "Allows creating and sending AMP emails.\nSee go/gamma-amp-support-dd-v1",
                    "type": "boolean"
                },
                "enableAxpTreatmentNodes": {
                    "description": "DOES NOT APPEAR TO BE USED! Leaving because axp treatment nodes are a thing\neven if Product never gets consulted wrt this boolean with the current\ncode.",
                    "type": "boolean"
                },
                "enableBounceFiltering": {
                    "description": "Prevent sending messages to recipients who have had a hard bounce.",
                    "type": "boolean"
                },
                "enableCidExpansion": {
                    "description": "Product allows expansion of CIDs (customer id, using CID_EXPANSION_CSV as\nthe CsvType)",
                    "type": "boolean"
                },
                "enableContactManagement": {
                    "description": "Products using Gamma's contact management features.",
                    "type": "boolean"
                },
                "enableGaiaIdCsv": {
                    "description": "Allows a product to use Gaia Id to send messages (Gamma will lookup the\ngaia id to get the preferred email address or contact for that user).",
                    "type": "boolean"
                },
                "enableGoogleGroupMailing": {
                    "description": "Allows creating recipient lists of Google group members.",
                    "type": "boolean"
                },
                "enableIncentiveNodes": {
                    "description": "Gatekeeper for if incentive workflow nodes might be allowed in this\nproduct's campaigns (i.e., enabling this is required but not guaranteed to\nbe sufficient to enable).",
                    "type": "boolean"
                },
                "enableMailtoUnsubscribe": {
                    "description": "For supporting products, automatically inject optout into the \"mailto\"\nheader.",
                    "type": "boolean"
                },
                "enableMendelExperimentNodes": {
                    "description": "Allows adding Mendel Experiment nodes in the workflow designer.\nSee go/gamma-simple-mendel.",
                    "type": "boolean"
                },
                "enableRestrictedAccess": {
                    "description": "Only Gamma admin (or Product admin in future) is allowed to create or\nduplicate campaign belonging to a product with restricted access.",
                    "type": "boolean"
                },
                "enableSeedLists": {
                    "description": "Sending seed emails (copy to collaborators), through the Bulk Audit feature",
                    "type": "boolean"
                },
                "enableSensitivePiiPolicy": {
                    "description": "[DEPRECATED] For products that handle sensitive PII that need different\npolicies wrt data retention.",
                    "type": "boolean"
                },
                "enableUnconfirmedSends": {
                    "description": "supports \"double opt-in\" go/gamma-double-optin. An \"unconfirmed\" person has\nneither opted-in nor opted-out to some category.",
                    "type": "boolean"
                },
                "enableUseDeviceLocale": {
                    "description": "Enable using device language rather than the language from GaiaId's ULS.",
                    "type": "boolean"
                },
                "enableUserIdInReporting": {
                    "description": "Product allows writing the user_id in reporting tables\nas the product does NOT store PII in this field",
                    "type": "boolean"
                },
                "includeUserSignalsInEmailSendEvent": {
                    "description": "Include user-provided signals in the EmailSend GOOPs message.\nSee go/gamma-email-send-signals.",
                    "type": "boolean"
                },
                "skipOptoutWaitnodeCheck": {
                    "description": "From isExpansionNotificationProduct. But what it actually does is prevent\nvalidation errors relating to wait nodes.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProductInfoRequest": {
            "id": "ProductInfoRequest",
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductInfoResponse": {
            "id": "ProductInfoResponse",
            "properties": {
                "androidApplications": {
                    "items": {
                        "$ref": "ChimeMobileApplication"
                    },
                    "type": "array"
                },
                "chimeNotificationTypes": {
                    "items": {
                        "$ref": "ChimeNotificationType"
                    },
                    "type": "array"
                },
                "defaultHistoryFilterExpirationDays": {
                    "format": "int64",
                    "type": "string"
                },
                "deliveryPreferenceInfos": {
                    "items": {
                        "$ref": "DeliveryPreferenceInfo"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "errorType": {
                    "enum": [
                        "ERROR_TYPE_UNKNOWN",
                        "ERROR_TYPE_GENERAL",
                        "ERROR_TYPE_SAVE_CONFLICT",
                        "ERROR_TYPE_RECORD_NOT_EXISTING",
                        "ERROR_TYPE_NOT_AUTHORIZED",
                        "ERROR_TYPE_VALIDATION_FAILED",
                        "ERROR_TYPE_INFRASTRUCTURE",
                        "ERROR_TYPE_HTML_TO_IMAGE_RENDER_FAILED",
                        "ERROR_TYPE_PROOF_FAILED",
                        "ERROR_TYPE_RECORD_METRIC_FAILED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "expansionFieldNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "expansionType": {
                    "enum": [
                        "EXPANSION_TYPE_UNKNOWN",
                        "EXPANSION_TYPE_NO_EXPANSION",
                        "EXPANSION_TYPE_LEGACY_EXPANSION",
                        "EXPANSION_TYPE_CONTACT_MANAGEMENT",
                        "EXPANSION_TYPE_RSS_EXPANSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "fullTextHistoryExpirationDays": {
                    "format": "int64",
                    "type": "string"
                },
                "iosApplications": {
                    "items": {
                        "$ref": "ChimeMobileApplication"
                    },
                    "type": "array"
                },
                "productDetails": {
                    "$ref": "ProductProto"
                },
                "realTimeOptOut": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProductListRequest": {
            "id": "ProductListRequest",
            "properties": {
                "disableBackendRequest": {
                    "type": "boolean"
                },
                "notUsed": {
                    "description": "Streamy drops protos with zero fields and makes the rpc\nuncallable.  This is a dummy field to keep this from happening.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProductListResponse": {
            "id": "ProductListResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "products": {
                    "items": {
                        "$ref": "ProductTemplate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProductPermissions": {
            "id": "ProductPermissions",
            "properties": {
                "fullTextQueryAccessGoogleGroups": {
                    "description": "Google Groups that have permission to lookup fulltext, click and bounce\ndata based on message id.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fullTextQueryAccessMdbGroups": {
                    "description": "MDB Groups (mdb/group-name) that have permission to lookup fulltext, click\nand bounce data based on message id.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pushCampaignsApproversGoogleGroups": {
                    "description": "Google group that has permission to approve push notification campaigns",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProductProto": {
            "description": "LINT.IfChange\n(If you only changed comments in the other file, please ignore lint)",
            "id": "ProductProto",
            "properties": {
                "asr": {
                    "$ref": "Asr"
                },
                "atlasExpansionConfig": {
                    "$ref": "AtlasExpansionConfig"
                },
                "attributionProviders": {
                    "description": "Set of attribution providers that can be selected.\nMatches GammaAttributionProvider",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "axpIdSignalName": {
                    "description": "Someone was feeling extra generous one day so now each Product can specify\nthe name of the signal where they will store the Axp Id of each recipient\nwho needs it (as opposed to making it say \"AxpId\" and calling it a day).",
                    "type": "string"
                },
                "canonicalName": {
                    "type": "string"
                },
                "chimeClientId": {
                    "description": "notifications/backend/proto/common/notification.proto, clientId\nleave unset to use the default of canonical_name.toLowerCase()",
                    "type": "string"
                },
                "chimeEndpointTypeId": {
                    "description": "Id of the custom endpoint Chime will deliver messages to. This comes from\nthe custom endpoint config in Chime config of this product.",
                    "type": "string"
                },
                "comments": {
                    "description": "Allows us to migrate comments from the code, or add comments to help\nclarify details about a product. Point of contact, bug id#s etc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "corporaTypes": {
                    "description": "Defines which data sources can be used for DynamicQuery for this Product.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "defaults": {
                    "$ref": "ProductDefaults"
                },
                "deliveryPreferences": {
                    "description": "Set of delivery preferences that can be selected.\nMatches GammaDeliveryPreference",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "displayName": {
                    "type": "string"
                },
                "features": {
                    "$ref": "ProductFeatures"
                },
                "fromAddresses": {
                    "description": "Set of from addresses common to the product (allows reuse of already\ntranslated from addresses)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gmrServices": {
                    "description": "Allows products to conditionally connect to different GMR service records\non sending. The intent is to allow signing emails in Dasher domains without\ndistributing this power broadly.",
                    "items": {
                        "$ref": "GmrSourceService"
                    },
                    "type": "array"
                },
                "internal": {
                    "description": "Set to force campaigns to internal-only.",
                    "type": "boolean"
                },
                "needleNamespace": {
                    "description": "Enum name from Needle.Namespace. The needle data were ported from ScoutCamp\nand are full of legacy goodness. Perhaps someday we can refactor it.",
                    "type": "string"
                },
                "notificationCategoryGroup": {
                    "$ref": "NotificationGroup"
                },
                "optoutIdField": {
                    "description": "Which signal should be used as the opt-out ID - GaiaId, UserId, OptOutId,\nContactId (for Gamma Contact Management) or unset.",
                    "type": "string"
                },
                "permissions": {
                    "$ref": "ProductPermissions"
                },
                "privacyWorkingGroupContact": {
                    "description": "Either a person or an mdb group or a Google group. If it's a person it\nshould be in the format of user/<ldap>, if it's an mdb group should be in\nthe format of mdb/<group name>. If it's a Google group it should be in the\nformat of group/<group name>@google.com.",
                    "type": "string"
                },
                "productArchived": {
                    "type": "boolean"
                },
                "productCustomFilterEnabled": {
                    "description": "Specifies if this product is using a product custom filter that allows it\nto filter in or filter out a recipient in a campaign.",
                    "type": "boolean"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "programLabels": {
                    "description": "Set of program labels that can be selected.",
                    "items": {
                        "$ref": "GammaProductProgramLabel"
                    },
                    "type": "array"
                },
                "recipientRoles": {
                    "description": "Roles that will appear in the dropdown for products that support filtering\nby the role of potential recipients.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rssExpansionConfig": {
                    "description": "Pick an RSS expansion config by name. Names are in\njava/com/google/ads/crm/gamma/common/domain/RSSExpansionConfig.java",
                    "type": "string"
                },
                "shortTerm2019CrossProductChimeOptOutFilterConfig": {
                    "$ref": "ShortTerm2019CrossProductChimeOptOutFilterConfig",
                    "description": "Configuration for the ShortTerm2019CrossProductChimeOptOutFilter. See\ngo/gammads. If not set, the filter is disabled by default."
                },
                "spannerShardCount": {
                    "description": "Avoid hotspotting in spanner by sharding our traffic that goes there.\nUsed to create extra bigstore buckets (which uses a Spanner backend). Avoid\nwasting resources (like extra buckets) by setting it only on products that\nneed it. (default of 0 means 1 unlabeled shard).",
                    "format": "int32",
                    "type": "integer"
                },
                "uaidProductId": {
                    "description": "Matches ProductIdentifier numbers in:\ncrm/cmr/accountidentifier/proto/accountidentifier.proto",
                    "format": "int32",
                    "type": "integer"
                },
                "universalNavPropertyTypes": {
                    "description": "Allows proper sorting of user preferred languages. Users can specify a\ndifferent language for say \"Adwords\" than they use as their default\nlanguage for interacting with Google.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "validationLevel": {
                    "enum": [
                        "VALIDATION_LEVEL_UNSPECIFIED",
                        "VALIDATION_LEVEL_1"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProductTemplate": {
            "id": "ProductTemplate",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "enableRestrictedAccess": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "isDeprecated": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProofAxpTreatmentObject": {
            "id": "ProofAxpTreatmentObject",
            "properties": {
                "snapshotId": {
                    "format": "int64",
                    "type": "string"
                },
                "treatmentDescription": {
                    "type": "string"
                },
                "treatmentId": {
                    "type": "string"
                },
                "treatmentName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProofConfig": {
            "id": "ProofConfig",
            "properties": {
                "proofRecipients": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProofConfigResponse": {
            "id": "ProofConfigResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "proofConfig": {
                    "$ref": "ProofConfig"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "ProofErrorData": {
            "description": "Error data for ERROR_TYPE_PROOF_FAILED",
            "id": "ProofErrorData",
            "properties": {
                "rpcResult": {
                    "$ref": "ProofResult"
                }
            },
            "type": "object"
        },
        "ProofMessageObject": {
            "id": "ProofMessageObject",
            "properties": {
                "languages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageName": {
                    "type": "string"
                },
                "messageProofInfo": {
                    "$ref": "MessageProofInfo"
                },
                "workflowNodeIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProofRecipient": {
            "description": "Protos representing object used to pass proof data through Gamma",
            "id": "ProofRecipient",
            "properties": {
                "androidId": {
                    "description": "Recipient Android id, should be decimal long",
                    "format": "int64",
                    "type": "string"
                },
                "apnsDeviceToken": {
                    "description": "Recipient APNS device token, should contain even number of hex characters",
                    "type": "string"
                },
                "apnsProxyRegistration": {
                    "description": "Recipient APNS proxy, should contain a valid hex string",
                    "type": "string"
                },
                "emailAddress": {
                    "description": "Recipient email address",
                    "type": "string"
                },
                "gaiaId": {
                    "description": "Recipient gaia id",
                    "format": "int64",
                    "type": "string"
                },
                "smsPhoneNumber": {
                    "description": "Recipient phone number in international format, +[0-9]* and US 10-digit\nnumbers. Punctuation and spaces are accepted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProofRecipientObject": {
            "id": "ProofRecipientObject",
            "properties": {
                "isProofList": {
                    "type": "boolean"
                },
                "listId": {
                    "format": "int64",
                    "type": "string"
                },
                "listName": {
                    "type": "string"
                },
                "recipientsCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "sourceType": {
                    "enum": [
                        "RECIPSRC_UNKNOWN",
                        "RECIPSRC_CSV_EMAIL_LIST",
                        "RECIPSRC_CSV_CID_EXPANSION",
                        "RECIPSRC_CSV_GAIA_ID",
                        "RECIPSRC_CUSTOMER_LOOKUP",
                        "RECIPSRC_CUSTOMER_QUERY",
                        "RECIPSRC_DIVVY_PROGRAM",
                        "RECIPSRC_ACTIVE_ADWORDS",
                        "RECIPSRC_STANDALONE_DYNAMIC_QUERY",
                        "RECIPSRC_PROOF_LIST_DEPRECATED",
                        "RECIPSRC_CSV_CONTACTS_PIPELINE",
                        "RECIPSRC_PLX_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "timestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProofResult": {
            "description": "Information about whether the RPC call was successful.\nContains response status and possibly the error message and stack trace.",
            "id": "ProofResult",
            "properties": {
                "errorMessage": {
                    "description": "Error message will be present in case of an error.",
                    "type": "string"
                },
                "exceptionType": {
                    "description": "String representation of ExceptionType enum.\nMay be set if the status is PIPELINE_ERROR or RECIPIENT_ERROR.\nExample: INFRASTRUCTURE, CONFIGURATION.",
                    "type": "string"
                },
                "stackTrace": {
                    "description": "Stack trace *may* be present in case of an error.",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "STATUS_UNKNOWN",
                        "STATUS_SUCCESS",
                        "STATUS_PIPELINE_ERROR",
                        "STATUS_RECIPIENT_ERROR",
                        "STATUS_SYSTEM_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublishCampaignRequest": {
            "id": "PublishCampaignRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "cutoffTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublishCampaignResponse": {
            "id": "PublishCampaignResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "versionId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublishedCampaign": {
            "description": "published campaign snapshot",
            "id": "PublishedCampaign",
            "properties": {
                "aliasInfos": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "executionTimestamp": {
                    "$ref": "ExecutionTimestamp"
                },
                "fastSendConfig": {
                    "$ref": "FastSendConfig"
                },
                "filterConfig": {
                    "$ref": "FilterConfig"
                },
                "messageInfos": {
                    "items": {
                        "$ref": "Message"
                    },
                    "type": "array"
                },
                "proofConfig": {
                    "$ref": "ProofConfig",
                    "description": "TODO(fdiego) The following three fields probably don't belong in a\npublished campaign, but are here to support the legacy UI which reads from\nPublished Campaign. Remove once the legacy UI is turned down."
                },
                "publishUser": {
                    "type": "string"
                },
                "timestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "format": "int64",
                    "type": "string"
                },
                "workflowInfo": {
                    "$ref": "WorkflowInfo"
                },
                "workflowSections": {
                    "items": {
                        "$ref": "WorkflowSection"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PublishedCampaignStatus": {
            "id": "PublishedCampaignStatus",
            "properties": {
                "campaignHasUnpublishedChanges": {
                    "type": "boolean"
                },
                "lastPublishedVersionId": {
                    "format": "int64",
                    "type": "string"
                },
                "lastRunTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryContactsRequest": {
            "id": "QueryContactsRequest",
            "properties": {
                "contactIdsOnly": {
                    "type": "boolean"
                },
                "criteria": {
                    "$ref": "CriteriaProto"
                },
                "maxResults": {
                    "format": "int32",
                    "type": "integer"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "requestor": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryContactsResponse": {
            "id": "QueryContactsResponse",
            "properties": {
                "customers": {
                    "items": {
                        "$ref": "Customer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RecipientKey": {
            "description": "Next Id: 32",
            "id": "RecipientKey",
            "properties": {
                "adsenseWebPropertyId": {
                    "description": "Adsense and Doubleclick realms are for Publisher accounts",
                    "format": "int64",
                    "type": "string"
                },
                "adwordsCustomerId": {
                    "format": "int64",
                    "type": "string"
                },
                "analyticsAccountId": {
                    "format": "int64",
                    "type": "string"
                },
                "androidPayExternalId": {
                    "format": "int64",
                    "type": "string"
                },
                "appleDeviceAddress": {
                    "$ref": "AppleDeviceAddress"
                },
                "appleProxyDeviceAddress": {
                    "$ref": "AppleProxyDeviceAddress"
                },
                "classroomAccountId": {
                    "format": "int64",
                    "type": "string"
                },
                "contactManagementId": {
                    "format": "int64",
                    "type": "string"
                },
                "customEndpointAddress": {
                    "$ref": "CustomEndpointAddress"
                },
                "customerAcquisitionPlatformId": {
                    "description": "This key should not be used. For CAP, please use the V2 key.",
                    "format": "int64",
                    "type": "string"
                },
                "customerAcquisitionPlatformV2Id": {
                    "type": "string"
                },
                "doubleclickNetworkId": {
                    "format": "int64",
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "gaiaId": {
                    "format": "int64",
                    "type": "string"
                },
                "gammaCampaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "gcmDeviceAddress": {
                    "$ref": "GcmDeviceAddress"
                },
                "gcmRegistrationIdAddress": {
                    "$ref": "GcmRegistrationIdAddress"
                },
                "gcpBillingAccountId": {
                    "type": "string"
                },
                "gcpProjectId": {
                    "description": "Project \"Number\" in GCP, but named \"id\" to follow axp naming conventions",
                    "type": "string"
                },
                "gmbAccountId": {
                    "format": "int64",
                    "type": "string"
                },
                "googleRetailId": {
                    "format": "int64",
                    "type": "string"
                },
                "greenTeaAgencyId": {
                    "description": "There is no planned use for this realm",
                    "format": "int64",
                    "type": "string"
                },
                "greenTeaCompanyTeamId": {
                    "$ref": "GreenTeaCompanyTeamId"
                },
                "hotelAdsAccountId": {
                    "format": "int64",
                    "type": "string"
                },
                "leadId": {
                    "format": "int64",
                    "type": "string"
                },
                "merchantCenterId": {
                    "format": "int64",
                    "type": "string"
                },
                "partnersUserId": {
                    "format": "int64",
                    "type": "string"
                },
                "realm": {
                    "enum": [
                        "UNKNOWN",
                        "ADSENSE_WEB_PROPERTY",
                        "ADWORDS_CUSTOMER",
                        "ANALYTICS",
                        "ANDROID_PAY",
                        "APPLE_DEVICE",
                        "APPLE_PROXY_DEVICE",
                        "CLASSROOM",
                        "CONTACT_MANAGEMENT",
                        "CUSTOMER_ACQUISITION_PLATFORM",
                        "CUSTOMER_ACQUISITION_PLATFORM_V2",
                        "CUSTOM_ENDPOINT",
                        "DOUBLECLICK_NETWORK",
                        "EMAIL",
                        "GAIA",
                        "GAMMA_CAMPAIGN",
                        "GAMMA_INTERNAL",
                        "GCM_DEVICE",
                        "GCM_REGISTRATION_ID",
                        "GCP_BILLING_ACCOUNT",
                        "GCP_PROJECT",
                        "GOOGLE_MY_BUSINESS",
                        "GOOGLE_RETAIL",
                        "GREEN_TEA_AGENCY",
                        "GREEN_TEA_COMPANY_TEAM",
                        "HOTEL_ADS",
                        "MERCHANT_CENTER",
                        "PARTNERS",
                        "SMS",
                        "YOUTUBE_CHANNEL",
                        "YOUTUBE_VIEWER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "This realm should not be used. For CAP, please use the V2 realm.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "This realm is used internally by Gamma, currently only for RSS Expansion.\nFor RSS Expansion it is meant to represnt that the RSS step applicability\nis governed by Gamma policy and is unrelated to the type of recipient and\nwhat additional product/channel specific information is present.\nE.g. we run Gaia Id inferrence on recipients of all types, we just care if\nafter expansion they have an email present.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "smsPhoneNumber": {
                    "type": "string"
                },
                "youtubeChannelId": {
                    "type": "string"
                },
                "youtubeViewerId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecipientListInfo": {
            "id": "RecipientListInfo",
            "properties": {
                "lastRunTimeMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "nextRunTimeMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "recipientListName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecipientSignal": {
            "description": "=============================================================================\nGoops Fast Send Request proto-messages.\n# See: http://docs/document/d/1nXAOUSKQPPlRzBXOx4ZHM8nLY6BIVfjB_2e7wim1Uos/edit\n\nSignals contain additional metadata available to the Freemarker renderer.\nFreemarker allows these values to be coerced into various data types like\ncurrency, numbers, dates, and other such values that can be automatically\nlocalized by the GAMMA renderer.",
            "id": "RecipientSignal",
            "properties": {
                "signalName": {
                    "description": "You can reference these signals in your Message templates with\n\"${the_signal_name}\".",
                    "type": "string"
                },
                "signalValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecipientSource": {
            "description": "All recipient sources and schedules derived from:\n  java/com/google/ads/crm/gamma/common/domain/gamma_email.proto\n  java/com/google/ads/crm/gamma/lists/common/repository/lists.proto",
            "id": "RecipientSource",
            "properties": {
                "activeAdwordsSource": {
                    "$ref": "ActiveAdwordsRecipientSource"
                },
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "creationTimestamp": {
                    "format": "int64",
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "csvSource": {
                    "$ref": "CsvRecipientSource"
                },
                "divvySource": {
                    "$ref": "DivvyRecipientSource"
                },
                "dynamicQuerySource": {
                    "$ref": "DynamicQueryRecipientSource"
                },
                "expiredSchedule": {
                    "$ref": "ExpiredScheduleInfo",
                    "description": "Next available ID: 24"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "outputDirectory": {
                    "type": "string"
                },
                "owners": {
                    "description": "LDAPs of source owners.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "plxSource": {
                    "$ref": "PlxQueryRecipientSource"
                },
                "schedule": {
                    "$ref": "Schedule"
                },
                "type": {
                    "enum": [
                        "RECIPSRC_UNKNOWN",
                        "RECIPSRC_CSV_EMAIL_LIST",
                        "RECIPSRC_CSV_CID_EXPANSION",
                        "RECIPSRC_CSV_GAIA_ID",
                        "RECIPSRC_CUSTOMER_LOOKUP",
                        "RECIPSRC_CUSTOMER_QUERY",
                        "RECIPSRC_DIVVY_PROGRAM",
                        "RECIPSRC_ACTIVE_ADWORDS",
                        "RECIPSRC_STANDALONE_DYNAMIC_QUERY",
                        "RECIPSRC_PROOF_LIST_DEPRECATED",
                        "RECIPSRC_CSV_CONTACTS_PIPELINE",
                        "RECIPSRC_PLX_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadSource": {
                    "enum": [
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_UNKNOWN",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_GAMMA_UI",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_CSV_FETCH",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_CONTACT_MGMT_UI",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_CREATED_FROM_GROUP",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_FORMBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "versionTime": {
                    "format": "int64",
                    "type": "string"
                },
                "versionUser": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecipientWarnings": {
            "id": "RecipientWarnings",
            "properties": {
                "recipientWarnings": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RecordMetricRequest": {
            "id": "RecordMetricRequest",
            "properties": {
                "additionalParameters": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "metricDurationMillis": {
                    "description": "Optional; only provide this if the metric measures duration, rather than\ncount",
                    "format": "int64",
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecordMetricResponse": {
            "id": "RecordMetricResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "RecordNotFoundErrorData": {
            "description": "Error data for ERROR_TYPE_RECORD_NOT_EXISTING",
            "id": "RecordNotFoundErrorData",
            "properties": {
                "recordIdentifiers": {
                    "items": {
                        "$ref": "RecordNotFoundErrorDataRecordIdentifier"
                    },
                    "type": "array"
                },
                "recordType": {
                    "enum": [
                        "RECORD_TYPE_UNKNOWN",
                        "RECORD_TYPE_CAMPAIGN",
                        "RECORD_TYPE_MESSAGE",
                        "RECORD_TYPE_CREATIVE",
                        "RECORD_TYPE_RECIPIENT_LIST",
                        "RECORD_TYPE_SCHEDULE",
                        "RECORD_TYPE_CREATIVE_BODY",
                        "RECORD_TYPE_ALIAS_SET",
                        "RECORD_TYPE_VERSION",
                        "RECORD_TYPE_WORKFLOW_SECTION",
                        "RECORD_TYPE_WORKFLOW_QUEUE_RECORD",
                        "RECORD_TYPE_CREATIVE_VERSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecordNotFoundErrorDataRecordIdentifier": {
            "id": "RecordNotFoundErrorDataRecordIdentifier",
            "properties": {
                "id": {
                    "type": "string"
                },
                "idType": {
                    "enum": [
                        "RECORD_TYPE_UNKNOWN",
                        "RECORD_TYPE_CAMPAIGN",
                        "RECORD_TYPE_MESSAGE",
                        "RECORD_TYPE_CREATIVE",
                        "RECORD_TYPE_RECIPIENT_LIST",
                        "RECORD_TYPE_SCHEDULE",
                        "RECORD_TYPE_CREATIVE_BODY",
                        "RECORD_TYPE_ALIAS_SET",
                        "RECORD_TYPE_VERSION",
                        "RECORD_TYPE_WORKFLOW_SECTION",
                        "RECORD_TYPE_WORKFLOW_QUEUE_RECORD",
                        "RECORD_TYPE_CREATIVE_VERSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RefreshProductSignalsRequest": {
            "id": "RefreshProductSignalsRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RefreshProductSignalsResponse": {
            "id": "RefreshProductSignalsResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "Registration": {
            "description": "Registration details for the client. Specifies all identifiers used to\nregister the client/app with UNS and other endpoints.",
            "id": "Registration",
            "properties": {
                "apnsRegistration": {
                    "$ref": "APNSRegistration"
                },
                "gcmRegistration": {
                    "$ref": "GCMRegistration",
                    "description": "Registration details for the supported channels. One and only one field\nmust be populated and this will be enforced."
                },
                "reason": {
                    "enum": [
                        "UNKNOWN_REASON",
                        "NEW_ACCOUNT",
                        "LOCALE_CHANGED",
                        "TIMEZONE_CHANGED",
                        "APP_UPGRADED",
                        "BOOT_COMPLETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Registering a new account.",
                        "Device locale changed.",
                        "Device timezone changed.",
                        "App upgraded.",
                        "Boot completed."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RenderContext": {
            "description": "Rendering context information for a specific target.\nNOTE: The user storage Spanner table (n/b/user/spanner/user_targets.sdl)\ndepends on this proto! Be aware of forward / backward compatibility in\nchanges to this proto.\nValidation will fail for RenderContexts larger than 10kb.",
            "id": "RenderContext",
            "properties": {
                "appLanguageCode": {
                    "description": "Optional. The App language/locale of the notification as overwritten by\nthe App. Must be in BCP 47.\nSee https://g3doc.corp.google.com/i18n/identifiers/g3doc/language-tags.md\nfor more information.\nFor example: \"xx-YY\" where xx is the language subtype and YY is the region\nsubtag.",
                    "type": "string"
                },
                "deviceInfo": {
                    "$ref": "RenderContextDeviceInfo"
                },
                "devicePayload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Optional. A client-specified opaque payload. This field is not logged.",
                    "type": "object"
                },
                "languageCode": {
                    "description": "Optional. The language of the notification recipient in BCP 47.\nSee https://g3doc.corp.google.com/i18n/identifiers/g3doc/language-tags.md\nfor more information.\nFor example: \"xx-YY\" where xx is the language subtype and YY is the region\nsubtag.",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Optional. i18n team maintained int code representing timezone.\nSee http://cs/google3/i18n/identifiers/data/timezones.txt for a listing of\ntimezones. See http://cs/google3/i18n/identifiers/timezones.h for various\nfunctions on this value.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RenderContextDeviceInfo": {
            "description": "Optional. Information about the target device.",
            "id": "RenderContextDeviceInfo",
            "properties": {
                "androidSdkVersion": {
                    "description": "Optional. Android specific - The Android SDK version.",
                    "format": "int32",
                    "type": "integer"
                },
                "appBlockState": {
                    "description": "Optional. The App Block State.",
                    "enum": [
                        "APP_BLOCK_STATE_UNKNOWN",
                        "ALLOWED",
                        "BANNED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "appVersion": {
                    "description": "Optional. Version of the app.",
                    "type": "string"
                },
                "channelGroups": {
                    "description": "Optional. The list of ChannelGroup that the client application supports.",
                    "items": {
                        "$ref": "RenderContextDeviceInfoChannelGroup"
                    },
                    "type": "array"
                },
                "channels": {
                    "description": "Optional. The list of channel IDs that the client application supports.",
                    "items": {
                        "$ref": "RenderContextDeviceInfoChannel"
                    },
                    "type": "array"
                },
                "deviceManufacturer": {
                    "description": "Optional. The name of device manufacturer.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "Optional. The name set by the user for their device.",
                    "type": "string"
                },
                "devicePixelRatio": {
                    "description": "Optional. The device pixel ratio of the device receiving the\nnotification.",
                    "format": "float",
                    "type": "number"
                },
                "osBuildId": {
                    "description": "Optional. OS Build ID.",
                    "type": "string"
                },
                "osModel": {
                    "description": "Optional. OS user visible model name.",
                    "type": "string"
                },
                "osVersion": {
                    "description": "Optional. Version of the host OS.",
                    "type": "string"
                },
                "sdkType": {
                    "description": "Optional. The type of SDK installed on the target device.",
                    "enum": [
                        "SDK_TYPE_UNSPECIFIED",
                        "CUSTOM",
                        "GUNS",
                        "CHIME",
                        "GUNS_GMSCORE",
                        "RAW_FCM_GMSCORE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sdkVersion": {
                    "description": "Optional. A version string associated with the SDK Type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RenderContextDeviceInfoChannel": {
            "description": "Channels are specific to Android devices and supported from Android O or\nlater (SDK version 26). For details see - go/notification-channels.",
            "id": "RenderContextDeviceInfoChannel",
            "properties": {
                "channelId": {
                    "description": "Required. The ID of the channel.",
                    "type": "string"
                },
                "groupId": {
                    "description": "The Channel group this channel belongs to.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getId()",
                    "type": "string"
                },
                "importance": {
                    "enum": [
                        "IMPORTANCE_UNSPECIFIED",
                        "IMPORTANCE_NONE",
                        "IMPORTANCE_DEFAULT",
                        "IMPORTANCE_HIGH",
                        "IMPORTANCE_LOW",
                        "IMPORTANCE_MAX",
                        "IMPORTANCE_MIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RenderContextDeviceInfoChannelGroup": {
            "id": "RenderContextDeviceInfoChannelGroup",
            "properties": {
                "channelGroupState": {
                    "enum": [
                        "CHANNEL_GROUP_UNKNOWN",
                        "ALLOWED",
                        "BANNED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "groupId": {
                    "description": "The Channel group this channel belongs to.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getId()",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RenderProofRequest": {
            "id": "RenderProofRequest",
            "properties": {
                "accountIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "axpSnapshotLabel": {
                    "type": "string"
                },
                "axpTreatmentId": {
                    "type": "string"
                },
                "axpWorkflowId": {
                    "format": "int64",
                    "type": "string"
                },
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "format": {
                    "enum": [
                        "EMAIL_TEXT",
                        "EMAIL_HTML",
                        "LANDING_PAGE",
                        "PUSH_NOTIFICATION",
                        "IN_APP_NOTIFICATION",
                        "ADWORDS_ALERT",
                        "SMS",
                        "EMAIL_AMP_HTML"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "gkmsCutoffTimeInMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "gkmsDraftsAllowed": {
                    "type": "boolean"
                },
                "languageOverride": {
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "pushToNativeAppEnabled": {
                    "type": "boolean"
                },
                "recipientIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "trackingProofPageEnabled": {
                    "type": "boolean"
                },
                "treatmentIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "RenderProofResponse": {
            "id": "RenderProofResponse",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "accountUserCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "message": {
                    "type": "string"
                },
                "renderedContentForTypes": {
                    "items": {
                        "$ref": "RenderedContentForType"
                    },
                    "type": "array"
                },
                "renderedFromAddress": {
                    "type": "string"
                },
                "renderedLanguage": {
                    "type": "string"
                },
                "renderedSubject": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "STATUS_UNKNOWN",
                        "STATUS_SUCCESS",
                        "STATUS_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RenderedContentForType": {
            "id": "RenderedContentForType",
            "properties": {
                "contentType": {
                    "enum": [
                        "TYPE_HTML"
                    ],
                    "enumDescriptions": [
                        ""
                    ],
                    "type": "string"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "renderedContent": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RestartDispatchRequest": {
            "id": "RestartDispatchRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "dispatch": {
                    "type": "string"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "predecessorNodeIds": {
                    "description": "Next available: 6",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RestorePublishedVersionRequest": {
            "id": "RestorePublishedVersionRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionId": {
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "RestorePublishedVersionResponse": {
            "id": "RestorePublishedVersionResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "versionInfo": {
                    "$ref": "CampaignVersionInfo",
                    "description": "Filled out CampaignVersionInfo for the newly created (unpublished) version"
                }
            },
            "type": "object"
        },
        "ResumeFromWaitFailure": {
            "id": "ResumeFromWaitFailure",
            "properties": {
                "exceptionMessage": {
                    "description": "Next available: 3",
                    "type": "string"
                },
                "failTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RetryErrorsRequest": {
            "id": "RetryErrorsRequest",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "endTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                },
                "startTimestampMicros": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RetryErrorsResponse": {
            "id": "RetryErrorsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData",
                    "description": "Next available: 6"
                },
                "errorCount": {
                    "format": "int64",
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "numErrorsFound": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RevalidateCsvRowsRequest": {
            "id": "RevalidateCsvRowsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "csvType": {
                    "enum": [
                        "RECIPSRC_UNKNOWN",
                        "RECIPSRC_CSV_EMAIL_LIST",
                        "RECIPSRC_CSV_CID_EXPANSION",
                        "RECIPSRC_CSV_GAIA_ID",
                        "RECIPSRC_CUSTOMER_LOOKUP",
                        "RECIPSRC_CUSTOMER_QUERY",
                        "RECIPSRC_DIVVY_PROGRAM",
                        "RECIPSRC_ACTIVE_ADWORDS",
                        "RECIPSRC_STANDALONE_DYNAMIC_QUERY",
                        "RECIPSRC_PROOF_LIST_DEPRECATED",
                        "RECIPSRC_CSV_CONTACTS_PIPELINE",
                        "RECIPSRC_PLX_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "deprecatedNotificationCategoryId": {
                    "format": "int32",
                    "type": "integer"
                },
                "deprecatedProductId": {
                    "format": "int32",
                    "type": "integer"
                },
                "deprecatedUploadTimestampMillis": {
                    "description": "Next available ID = 7",
                    "format": "int64",
                    "type": "string"
                },
                "recipientSourceId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RevalidateCsvRowsResponse": {
            "id": "RevalidateCsvRowsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "errorMsg": {
                    "type": "string"
                },
                "numInvalidRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "numValidRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "validationStatus": {
                    "enum": [
                        "VALIDATION_STATUS_UNKNOWN",
                        "VALIDATION_STATUS_IN_PROGRESS",
                        "VALIDATION_STATUS_PASSED",
                        "VALIDATION_STATUS_FAILED",
                        "VALIDATION_STATUS_MANUAL_PASSED"
                    ],
                    "enumDescriptions": [
                        "Default status for a new recipient source.",
                        "Status for a recipient source which undergoes validation.",
                        "Status for a recipient source which successfully passed validation.",
                        "Status for a recipient source which failed validation.",
                        "Status for a recipient source which failed validation\nhowever it needs to be processed so it was manually set to the status\npassed."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RolloutRatio": {
            "description": "LINT.IfChange\nDefine a rollout ratio, how many users to pick out of how many.\ne.g. 0.1% is 1 out of 1000.",
            "id": "RolloutRatio",
            "properties": {
                "rolloutRatio": {
                    "description": "What ratio of users to select (i.e. numerator)",
                    "format": "int32",
                    "type": "integer"
                },
                "rolloutTotal": {
                    "description": "Out of how many users to select (i.e. denominator)\nDefault is by default 0, but calling it out explicitly for b/136063762",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RunningDelivery": {
            "id": "RunningDelivery",
            "properties": {
                "leastProgress": {
                    "enum": [
                        "PIPELINE_PROGRESS_UNKNOWN",
                        "PIPELINE_PROGRESS_START",
                        "PIPELINE_PROGRESS_GENERATE",
                        "PIPELINE_PROGRESS_EXPAND",
                        "PIPELINE_PROGRESS_EVALUATE",
                        "PIPELINE_PROGRESS_RENDER_AND_SEND",
                        "PIPELINE_PROGRESS_RECORD_FILTERED_OUT",
                        "PIPELINE_PROGRESS_END"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "longestElapsedTimeMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "mostProgress": {
                    "enum": [
                        "PIPELINE_PROGRESS_UNKNOWN",
                        "PIPELINE_PROGRESS_START",
                        "PIPELINE_PROGRESS_GENERATE",
                        "PIPELINE_PROGRESS_EXPAND",
                        "PIPELINE_PROGRESS_EVALUATE",
                        "PIPELINE_PROGRESS_RENDER_AND_SEND",
                        "PIPELINE_PROGRESS_RECORD_FILTERED_OUT",
                        "PIPELINE_PROGRESS_END"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "numRunning": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SaveAccountPipelineCampaignIdRequest": {
            "id": "SaveAccountPipelineCampaignIdRequest",
            "properties": {
                "accountPipelineCampaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "loadTimestampMillis": {
                    "description": "uses current time if absent",
                    "format": "uint64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SaveAccountPipelineCampaignIdResponse": {
            "id": "SaveAccountPipelineCampaignIdResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "SaveAliasInfoRequest": {
            "id": "SaveAliasInfoRequest",
            "properties": {
                "aliasSetIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveAliasInfoResponse": {
            "id": "SaveAliasInfoResponse",
            "properties": {
                "aliasSetIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveAllCampaignSettingsRequest": {
            "id": "SaveAllCampaignSettingsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "config": {
                    "$ref": "FastSendConfig"
                },
                "filters": {
                    "$ref": "FilterConfig"
                },
                "rollout": {
                    "$ref": "RolloutRatio"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveAllCampaignSettingsResponse": {
            "id": "SaveAllCampaignSettingsResponse",
            "properties": {
                "campaignInfo": {
                    "$ref": "CampaignInfo"
                },
                "config": {
                    "$ref": "FastSendConfig"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "filters": {
                    "$ref": "FilterConfig"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "rollout": {
                    "$ref": "RolloutRatio"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveCampaignMetricsRequest": {
            "id": "SaveCampaignMetricsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "campaignMetrics": {
                    "$ref": "CampaignMetrics"
                }
            },
            "type": "object"
        },
        "SaveCampaignMetricsResponse": {
            "id": "SaveCampaignMetricsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "SaveCollaboratorsRequest": {
            "id": "SaveCollaboratorsRequest",
            "properties": {
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveCollaboratorsResponse": {
            "id": "SaveCollaboratorsResponse",
            "properties": {
                "collaborators": {
                    "$ref": "Collaborators"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "userCanEditCampaign": {
                    "type": "boolean"
                },
                "userCanPublishCampaign": {
                    "type": "boolean"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveConflictErrorData": {
            "description": "Error data for ERROR_TYPE_SAVE_CONFLICT",
            "id": "SaveConflictErrorData",
            "properties": {
                "conflictingVersion": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveContactRequest": {
            "id": "SaveContactRequest",
            "properties": {
                "baseEmailLimit": {
                    "description": "Restricts the number of email addresses with the same base gmail/google\nemail address to prevent against spamming.\n(e.g. foo+bar@gmail.com, foo+baz@gmail.com)\nNo limit if not set.",
                    "format": "int32",
                    "type": "integer"
                },
                "contactAttributes": {
                    "additionalProperties": {
                        "$ref": "ContactAttribute"
                    },
                    "description": "attribute name is map's key (same as signal name or column name depending\non ingest_config)",
                    "type": "object"
                },
                "ingestConfig": {
                    "$ref": "IngestConfig"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "uploadAction": {
                    "enum": [
                        "UPLOAD_ACTION_UNKNOWN",
                        "UPLOAD_ACTION_ADD_NEW_CONTACTS_ONLY",
                        "UPLOAD_ACTION_ADD_MISSING_SIGNALS",
                        "UPLOAD_ACTION_OVERWRITE_EXISTING",
                        "UPLOAD_ACTION_DELETE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadSource": {
                    "enum": [
                        "UPLOAD_SOURCE_UNKNOWN",
                        "UPLOAD_SOURCE_UI",
                        "UPLOAD_SOURCE_UPLOAD_SERVICE",
                        "UPLOAD_SOURCE_FORMBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadTagId": {
                    "type": "string"
                },
                "uploader": {
                    "description": "if not set, the actual requesting user is used",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SaveContactResponse": {
            "id": "SaveContactResponse",
            "properties": {
                "contactInfo": {
                    "$ref": "ContactInfo"
                },
                "resultingOperation": {
                    "enum": [
                        "UPLOAD_RESULTING_OPERATION_UNKNOWN",
                        "UPLOAD_RESULTING_OPERATION_INSERTED",
                        "UPLOAD_RESULTING_OPERATION_UPDATED",
                        "UPLOAD_RESULTING_OPERATION_DELETED",
                        "UPLOAD_RESULTING_OPERATION_UNCHANGED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SaveContactsRequest": {
            "id": "SaveContactsRequest",
            "properties": {
                "contacts": {
                    "items": {
                        "$ref": "Contact"
                    },
                    "type": "array"
                },
                "filename": {
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "productNamespace": {
                    "description": "If not set, the default namespace is used.",
                    "type": "string"
                },
                "uploadAction": {
                    "enum": [
                        "UPLOAD_ACTION_UNKNOWN",
                        "UPLOAD_ACTION_ADD_NEW_CONTACTS_ONLY",
                        "UPLOAD_ACTION_ADD_MISSING_SIGNALS",
                        "UPLOAD_ACTION_OVERWRITE_EXISTING",
                        "UPLOAD_ACTION_DELETE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadSource": {
                    "enum": [
                        "UPLOAD_SOURCE_UNKNOWN",
                        "UPLOAD_SOURCE_UI",
                        "UPLOAD_SOURCE_UPLOAD_SERVICE",
                        "UPLOAD_SOURCE_FORMBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadTagId": {
                    "type": "string"
                },
                "uploader": {
                    "description": "If not set, the actual requesting user is used.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SaveContactsResponse": {
            "id": "SaveContactsResponse",
            "properties": {
                "contactResults": {
                    "items": {
                        "$ref": "SaveContactResponse"
                    },
                    "type": "array"
                },
                "resultingOperations": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": "map's key is resulting operation enum name (proto map keys must be\nprimitive) map's value is count of contacts matching the result",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "SaveCreativeRequest": {
            "id": "SaveCreativeRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "creative": {
                    "$ref": "Creative"
                },
                "revertVersionTimestampMillis": {
                    "description": "NEXT AVAILABLE NUMBER: 7",
                    "format": "int64",
                    "type": "string"
                },
                "saveCreativeBodies": {
                    "type": "boolean"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveCreativeResponse": {
            "id": "SaveCreativeResponse",
            "properties": {
                "creative": {
                    "$ref": "Creative"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveDaysOfWeekRequest": {
            "id": "SaveDaysOfWeekRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "dayOfWeeks": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "DAY_OF_WEEK_UNKNOWN",
                            "DAY_OF_WEEK_SUN",
                            "DAY_OF_WEEK_MON",
                            "DAY_OF_WEEK_TUE",
                            "DAY_OF_WEEK_WED",
                            "DAY_OF_WEEK_THU",
                            "DAY_OF_WEEK_FRI",
                            "DAY_OF_WEEK_SAT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveDaysOfWeekResponse": {
            "id": "SaveDaysOfWeekResponse",
            "properties": {
                "dayOfWeeks": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "DAY_OF_WEEK_UNKNOWN",
                            "DAY_OF_WEEK_SUN",
                            "DAY_OF_WEEK_MON",
                            "DAY_OF_WEEK_TUE",
                            "DAY_OF_WEEK_WED",
                            "DAY_OF_WEEK_THU",
                            "DAY_OF_WEEK_FRI",
                            "DAY_OF_WEEK_SAT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveFilterConfigRequest": {
            "id": "SaveFilterConfigRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "filterConfig": {
                    "$ref": "FilterConfig"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveFilterConfigResponse": {
            "id": "SaveFilterConfigResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "filterConfig": {
                    "$ref": "FilterConfig"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveFormboxAccessGroupRequest": {
            "id": "SaveFormboxAccessGroupRequest",
            "properties": {
                "formboxAccessGroup": {
                    "type": "string"
                },
                "loadTimestampMillis": {
                    "description": "uses current time if absent",
                    "format": "uint64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SaveFormboxAccessGroupResponse": {
            "id": "SaveFormboxAccessGroupResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "SaveMessageDetailsRequest": {
            "id": "SaveMessageDetailsRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "isUpdate": {
                    "type": "boolean"
                },
                "messageDetails": {
                    "$ref": "MessageDetails"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveMessageDetailsResponse": {
            "id": "SaveMessageDetailsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "messageDetails": {
                    "$ref": "MessageDetails"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveMessageRequest": {
            "id": "SaveMessageRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "message": {
                    "$ref": "Message"
                },
                "saveCreativeBodies": {
                    "type": "boolean"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveMessageResponse": {
            "id": "SaveMessageResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "message": {
                    "$ref": "Message"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveProductRequest": {
            "id": "SaveProductRequest",
            "properties": {
                "loadTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "SaveProductResponse": {
            "id": "SaveProductResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "SaveProofConfigRequest": {
            "id": "SaveProofConfigRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "proofConfig": {
                    "$ref": "ProofConfig"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "SaveRecipientSourceRequest": {
            "id": "SaveRecipientSourceRequest",
            "properties": {
                "recipientSource": {
                    "$ref": "RecipientSource"
                }
            },
            "type": "object"
        },
        "SaveRecipientSourceResponse": {
            "id": "SaveRecipientSourceResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "recipientSource": {
                    "$ref": "RecipientSource"
                },
                "warnings": {
                    "$ref": "RecipientWarnings"
                }
            },
            "type": "object"
        },
        "SaveResultInfo": {
            "description": "@deprecated",
            "id": "SaveResultInfo",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "result": {
                    "enum": [
                        "SAVE_RESULT_UNKNOWN",
                        "SAVE_RESULT_SUCCESS",
                        "SAVE_RESULT_FAILURE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SaveScheduleRequest": {
            "id": "SaveScheduleRequest",
            "properties": {
                "allShards": {
                    "description": "If true and recipient_source_id is the first shard of a sharded csv, saves\nthe schedule for every shard. b/37909445",
                    "type": "boolean"
                },
                "campaignId": {
                    "description": "now in schedule",
                    "format": "int64",
                    "type": "string"
                },
                "recipientSourceId": {
                    "description": "now in schedule",
                    "format": "int32",
                    "type": "integer"
                },
                "schedule": {
                    "$ref": "Schedule"
                }
            },
            "type": "object"
        },
        "SaveScheduleResponse": {
            "id": "SaveScheduleResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "schedule": {
                    "$ref": "Schedule"
                }
            },
            "type": "object"
        },
        "SaveSignalMetadataRequest": {
            "id": "SaveSignalMetadataRequest",
            "properties": {
                "loadTimestampMillis": {
                    "description": "uses current time if absent",
                    "format": "uint64",
                    "type": "string"
                },
                "metadataMaps": {
                    "description": "name is slightly misleading, but the repeated entry does have the same wire\nformat as a map.",
                    "items": {
                        "$ref": "SignalMetadataInfoEntry"
                    },
                    "type": "array"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SaveSignalMetadataResponse": {
            "id": "SaveSignalMetadataResponse",
            "properties": {
                "lastModifiedTimestampMillis": {
                    "format": "uint64",
                    "type": "string"
                },
                "productInfo": {
                    "$ref": "ContactProductInfo"
                }
            },
            "type": "object"
        },
        "SaveStateRequest": {
            "id": "SaveStateRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SaveStateResponse": {
            "id": "SaveStateResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "state": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SaveWorkflowRequest": {
            "id": "SaveWorkflowRequest",
            "properties": {
                "sections": {
                    "items": {
                        "$ref": "WorkflowSection"
                    },
                    "type": "array"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                },
                "workflowInfo": {
                    "$ref": "WorkflowInfo"
                }
            },
            "type": "object"
        },
        "Schedule": {
            "id": "Schedule",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "dayOfWeeks": {
                    "description": "only significant when recurrence_interval is WEEKLY",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "DAY_OF_WEEK_UNKNOWN",
                            "DAY_OF_WEEK_SUN",
                            "DAY_OF_WEEK_MON",
                            "DAY_OF_WEEK_TUE",
                            "DAY_OF_WEEK_WED",
                            "DAY_OF_WEEK_THU",
                            "DAY_OF_WEEK_FRI",
                            "DAY_OF_WEEK_SAT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "ids": {
                    "description": "repeated to keep track of legacy schedules",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "lastRunTime": {
                    "description": "in milliseconds",
                    "format": "int64",
                    "type": "string"
                },
                "nextRunDate": {
                    "description": "time in YYYY-MM-DD hh:mm format",
                    "type": "string"
                },
                "nextRunTime": {
                    "description": "in milliseconds",
                    "format": "int64",
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "recurrenceInterval": {
                    "enum": [
                        "NONE",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "YEARLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "timezone": {
                    "description": "timezone string",
                    "type": "string"
                },
                "versionTime": {
                    "format": "int64",
                    "type": "string"
                },
                "versionUser": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ScheduledSourceInfo": {
            "id": "ScheduledSourceInfo",
            "properties": {
                "nextRunDatetime": {
                    "type": "string"
                },
                "sourceName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchDynamicQueriesRequest": {
            "id": "SearchDynamicQueriesRequest",
            "properties": {
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "searchQuery": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchDynamicQueriesResponse": {
            "id": "SearchDynamicQueriesResponse",
            "properties": {
                "dynamicQuerys": {
                    "items": {
                        "$ref": "DynamicQuery"
                    },
                    "type": "array"
                },
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "SendProofRequest": {
            "id": "SendProofRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "csvType": {
                    "enum": [
                        "INVALID",
                        "REGULAR_CSV",
                        "CID_EXPANSION_CSV",
                        "PROOF_LIST_DEPRECATED",
                        "GAIA_ID",
                        "CONTACTS_PIPELINE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "deliveryFormat": {
                    "enum": [
                        "PROOF_FORMAT_UNKNOWN",
                        "PROOF_FORMAT_EMAIL",
                        "PROOF_FORMAT_NOTIFICATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "gkmsDraftsAllowed": {
                    "type": "boolean"
                },
                "isEmailProof": {
                    "description": "True if the request is for a single 'email to me' proof",
                    "type": "boolean"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "proofAccountIndex": {
                    "format": "int64",
                    "type": "string"
                },
                "proofAxpSnapshotLabel": {
                    "type": "string"
                },
                "proofAxpWorkflowId": {
                    "format": "int64",
                    "type": "string"
                },
                "proofCount": {
                    "format": "int64",
                    "type": "string"
                },
                "proofLanguageOverride": {
                    "type": "string"
                },
                "proofLanguages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "proofRecipientIndex": {
                    "format": "int64",
                    "type": "string"
                },
                "proofRecipients": {
                    "items": {
                        "$ref": "ProofRecipient"
                    },
                    "type": "array"
                },
                "pushToNativeAppEnabled": {
                    "type": "boolean"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "trackingProofPageEnabled": {
                    "type": "boolean"
                },
                "treatmentIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "SendProofResponse": {
            "id": "SendProofResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "STATUS_UNKNOWN",
                        "STATUS_SUCCESS",
                        "STATUS_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SendRequestDetails": {
            "description": "Details about the send request.",
            "id": "SendRequestDetails",
            "properties": {
                "campaignId": {
                    "format": "int32",
                    "type": "integer"
                },
                "chimeId": {
                    "$ref": "ChimeWorkflowSpec"
                },
                "clientId": {
                    "description": "Client ID for feedback queue.",
                    "type": "string"
                },
                "headers": {
                    "additionalProperties": {
                        "$ref": "EmailHeader"
                    },
                    "description": "Additional Header Fields for the email. See\nhttps://tools.ietf.org/html/rfc2822#section-2.2\nThe map key is the name of the header and value is in the EmailHeader\nmessage.",
                    "type": "object"
                },
                "nodeId": {
                    "description": "INTERNAL USE ONLY (Wait and WaitUntil)",
                    "format": "int32",
                    "type": "integer"
                },
                "preRenderedEmail": {
                    "$ref": "PreRenderedEmail",
                    "description": "One pre-rendered email message is allowed per campaign.  Use this when\nyou don't want Gamma to render the message, just add tracking etc.\nWARNING: pre-rendered email are NOT supported for Account requests.\nNOTE: ${optout()} and other freemarker expressions do NOT get rendered"
                },
                "requestDeliveryReport": {
                    "type": "boolean"
                },
                "retryAttemptCount": {
                    "description": "Counter to track failure retries\nINTERNAL USE ONLY",
                    "format": "int32",
                    "type": "integer"
                },
                "retryDetails": {
                    "$ref": "InternalRetryDetails"
                },
                "transactionId": {
                    "description": "Deprecated. Please use {@code transaction_id_string} instead.\nWill be ignored if {@code transaction_id_string} is set.\nThis field MUST be set if the campaign is defined as being transactional.\nNOTE: MUST NOT CONTAIN PII",
                    "format": "int32",
                    "type": "integer"
                },
                "transactionIdString": {
                    "description": "Transactional Gamma campaigns must send requests to FastSend that include a\ntransaction ID. Collaborators can use the transaction ID to specify that a\nrequest for this recipient/campaign is unique and should only be allowed to\nbe sent once.\nIf set, {@code transaction_id} will be ignored in favor of this value.\nThis field MUST be set if the campaign is defined as being transactional.\nThis field MUST NOT be set if the campaign is not transactional.\nNOTE: MUST NOT CONTAIN PII",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SendSeedEmailRequest": {
            "description": "Send seed email request, through Bulk Audit feature",
            "id": "SendSeedEmailRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "endTimeMs": {
                    "description": "Next available ID = 9",
                    "format": "int64",
                    "type": "string"
                },
                "languages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "messageIds": {
                    "description": "lookups are intended to use either message_ids or treatment_ids",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "numMessagesPerLanguage": {
                    "format": "int32",
                    "type": "integer"
                },
                "recipients": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "startTimeMs": {
                    "format": "int64",
                    "type": "string"
                },
                "treatmentIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SendSeedEmailResponse": {
            "description": "Send seed email response, through Bulk Audit feature",
            "id": "SendSeedEmailResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "numMessagesSent": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ServerTimeRequest": {
            "id": "ServerTimeRequest",
            "properties": {},
            "type": "object"
        },
        "ServerTimeResponse": {
            "id": "ServerTimeResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "timestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SetSpamPoliciesRequest": {
            "id": "SetSpamPoliciesRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "maxWriteTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "spamPolicies": {
                    "items": {
                        "$ref": "SpamPolicyEntry"
                    },
                    "type": "array"
                },
                "spamPolicy": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SetSpamPoliciesResponse": {
            "id": "SetSpamPoliciesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                }
            },
            "type": "object"
        },
        "ShortTerm2019CrossProductChimeOptOutFilterConfig": {
            "description": "Configuration for the ShortTerm2019CrossProductChimeOptOutFilter. See\ngo/gammads.",
            "id": "ShortTerm2019CrossProductChimeOptOutFilterConfig",
            "properties": {
                "chimeClient": {
                    "description": "The Chime client to read opt-out preferences from",
                    "type": "string"
                },
                "chimeEmailPreferenceKey": {
                    "description": "The Chime preference key to use when reading email opt-out preferences\n(using target-only mode, go/chime-preferences-target-only).",
                    "type": "string"
                },
                "filterMode": {
                    "enum": [
                        "FILTER_MODE_UNSPECIFIED",
                        "DISABLED",
                        "DRY_RUN",
                        "ENABLED"
                    ],
                    "enumDescriptions": [
                        "Always invalid.",
                        "The filter won't be applied.",
                        "The filter will be applied and evaluated, but any failures will only be\nlogged and/or monitored (e.g. streamz). The filter will always pass.",
                        "The filter will be fully enabled."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Signal": {
            "id": "Signal",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SignalAlias": {
            "id": "SignalAlias",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "signal": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SignalInfo": {
            "id": "SignalInfo",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SignalInfoEntry": {
            "id": "SignalInfoEntry",
            "properties": {
                "key": {
                    "description": "opt-in signal name is map's key",
                    "type": "string"
                },
                "value": {
                    "$ref": "SignalInfo"
                }
            },
            "type": "object"
        },
        "SignalMetadataInfo": {
            "id": "SignalMetadataInfo",
            "properties": {
                "description": {
                    "type": "string"
                },
                "exportToReporting": {
                    "type": "boolean"
                },
                "signalForbidden": {
                    "type": "boolean"
                },
                "signalReadOnly": {
                    "type": "boolean"
                },
                "signalRequired": {
                    "type": "boolean"
                },
                "signalType": {
                    "enum": [
                        "SIGNAL_TYPE_UNKNOWN",
                        "SIGNAL_TYPE_GENERIC",
                        "SIGNAL_TYPE_OPT_IN",
                        "SIGNAL_TYPE_RESERVED",
                        "SIGNAL_TYPE_OPT_IN_DATE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Signals created by users that store generic data in the form of strings",
                        "Signals that store an opt-in preference",
                        "Signals hardcoded in the system (such as EmailAddress and\nLanguagePreference) with names not be overwritten by custom user signals\n(GENERIC signals)",
                        "Signals that store the collection date of an opt-in"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SignalMetadataInfoEntry": {
            "id": "SignalMetadataInfoEntry",
            "properties": {
                "key": {
                    "description": "signal name is map's key",
                    "type": "string"
                },
                "value": {
                    "$ref": "SignalMetadataInfo"
                }
            },
            "type": "object"
        },
        "SingleAtlasProductExpansionConfig": {
            "id": "SingleAtlasProductExpansionConfig",
            "properties": {
                "atlasUserIdType": {
                    "description": "The type of the id in Atlas.",
                    "enum": [
                        "UNSPECIFIED",
                        "GAIA_ID",
                        "EMAIL_ADDRESS",
                        "ADWORDS_CID"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "product": {
                    "description": "Product to retrieve from Atlas.",
                    "enum": [
                        "OTHER",
                        "ADWORDS",
                        "ADWORDS_BY_GAIA",
                        "GENIE",
                        "ADSENSE",
                        "DOUBLECLICK",
                        "YOUTUBE",
                        "YOUTUBE_V3",
                        "YOUTUBE_SUPPORT",
                        "GAIA",
                        "GMAIL",
                        "DASHER",
                        "ESCALATION",
                        "BLOGGER",
                        "CALENDAR",
                        "CHROME",
                        "EARTH",
                        "LBC",
                        "PICASA",
                        "WEBMASTER",
                        "OFFERS",
                        "DCLKDFP",
                        "DCLKDFA",
                        "DCLKRICHMEDIA",
                        "DCLKDARTSEARCH",
                        "DCLKADXBS",
                        "DCLKDFARM",
                        "DCLKDBM",
                        "DCLKADX",
                        "ANDROID",
                        "CHROMEOS",
                        "GOOGLEPLUS",
                        "LOCAL",
                        "MAPS",
                        "PLAY",
                        "WEBSEARCH",
                        "DOCS",
                        "TALK",
                        "TRAVEL",
                        "WALLET",
                        "MAPMAKER",
                        "ANALYTICS",
                        "CORP",
                        "DRIVE",
                        "POS",
                        "GRM",
                        "ADSENSEDFP",
                        "BIZBUILDER",
                        "STORAGE",
                        "VOLTRON",
                        "REGISTRAR",
                        "HELPCENTER",
                        "PLAYAPPS",
                        "SUPA_PLAY",
                        "SHOPPING_EXPRESS",
                        "LOCAL_PARTNERS",
                        "TRANSIT_PARTNERS",
                        "GMAIL_DIRECT",
                        "GOOGLE_PARTNERS",
                        "GOOGLE_NEWS",
                        "ANDROID_ENTERPRISE",
                        "GOOGLE_FOR_WORK",
                        "HOTELADS",
                        "NOVA",
                        "GOOGLE_MY_BUSINESS",
                        "LEGAL",
                        "SHOPPING",
                        "FAMILIES",
                        "SHOPPING_LIA",
                        "SHOPPING_TRANSACTIONS",
                        "GOOGLE_VOICE",
                        "GOOGLE_PHOTOS",
                        "ADMOB",
                        "PAISA",
                        "SUBSCRIPTIONS",
                        "GOOGLE_STORE",
                        "GOOGLE_MY_BUSINESS_ACCOUNT_MANAGEMENT",
                        "ANDROID_PAY",
                        "GREENTEA_CONTACTS",
                        "GREENTEA_GOOGLERS",
                        "WAZE_CARPOOL",
                        "GOOGLE_DOMAINS",
                        "AXP_ADS_DISAPPROVED",
                        "AXP_INCENTIVES",
                        "AXP_INCENTIVES_COUPON",
                        "AXP_ADWORDS_EXPRESS",
                        "AXP_ADWORDS_ASR_EXPRESS_GROUP",
                        "AXP_PBS_ADSENSE_ADOPTION",
                        "AXP_PBS_ADSENSE_ADOPTION_FOR_LPS",
                        "AXP_ADWORDS_ASR_ACCOUNTS_REVENUE_HISTORY",
                        "AXP_LCS_HTC_BRAND_CAMPAIGNS",
                        "AXP_LCS_MANUAL_SUGGESTION_APPLY_HISTORY",
                        "AXP_ADWORDS_CUSTOMER_LOGINS",
                        "AXP_ADWORDS_CUSTOMER_MATCH_STATS",
                        "AXP_APPDEV_FINANCE_ANALYST_WEEKLY",
                        "AXP_AWCL_ADGROUPS_3_PLUS_ETA",
                        "AXP_AWCL_ADGROUPS_T3_PLUS_ETA",
                        "AXP_AWCL_CALL_ADJUSTMENT_TARGETS",
                        "AXP_ASTORE_OPTIMIZE_AD_ROTATION_HISTORY",
                        "AXP_CRT_ADMIN_CONFIGURATION",
                        "AXP_DOUBLECLICK_COMMON_SIGNALS",
                        "AXP_EXPAND_MARKETS",
                        "AXP_EXPAND_MARKETS_ADOPTION",
                        "AXP_GALAXY_SIGNALS",
                        "AXP_LCS_ROPPS_CID_SIGNALS",
                        "AXP_LEAD_ENGINE_SIGNALS",
                        "AXP_LEADGEN_ASSIGNMENTS",
                        "AXP_MESSAGE_EXTENSION_AWCL_SIGNALS",
                        "AXP_MOBILE_PAGE_SPEED_SIGNALS",
                        "AXP_PERF_ACCOUNT_STATS",
                        "AXP_SIMILAR_AUDIENCES_IMPRESSIONS",
                        "AXP_SIMILAR_AUDIENCES_IMPRESSIONS_CAMPAIGNS",
                        "AXP_SIMILAR_AUDIENCES_YOUTUBE",
                        "AXP_SMB_EMAIL_AUGMENTATION_SIGNALS",
                        "AXP_ADS_CALL_LEADS",
                        "AXP_ADWORDS_PERFORMANCE_CAMPAIGN_STATS",
                        "AXP_ANALYTICS_ADWORDS",
                        "AXP_AWX_MAP_ACTIONS",
                        "AXP_MCC_LEVEL_PITCHES",
                        "AXP_YOUTUBE_SMB_MARKETING_SIGNALS",
                        "AXP_ADWORDS_ASR",
                        "AXP_ADWORDS_ASR_CAMPAIGNS_REVENUE_HISTORY",
                        "AXP_APPDEV_FINANCE_ANALYST",
                        "AXP_AWCL_ADOPTION",
                        "AXP_AWCL_ELIGIBILITY",
                        "AXP_AWCL_PASS_THROUGH",
                        "AXP_AWCL_PAY_PER_CONVERSION_ELIGIBILITY",
                        "AXP_AWCL_UAC_BID_LANDSCAPES",
                        "AXP_GLENGARRY_SIGNALS",
                        "AXP_GMS_AAT_SIGNALS",
                        "AXP_GMS_ADOPTION_TRACKING_DATA_SOURCE_GROUP",
                        "AXP_GMS_ELIGIBILITY_DATA_SOURCE_GROUP",
                        "AXP_LCS_AAT_DISPLAY_RESERVATION",
                        "AXP_LCS_AAT_SIGNALS",
                        "AXP_LCS_AAT_TRV_MAXIMIZE_UPLIFT",
                        "AXP_LPS_ADSENSE_SIGNALS",
                        "AXP_LPS_DOUBLECLICK_SIGNALS",
                        "AXP_MOBILE_SITE_ADOPTIONS",
                        "AXP_OPG_AD_MANAGER_SIGNALS",
                        "AXP_OPG_AD_MANAGER_ADOPTION_DATASOURCE_GROUP",
                        "AXP_OPG_ADSENSE_ADMOB_SIGNALS",
                        "AXP_OPG_ADSENSE_AFC_SIGNALS",
                        "AXP_OPG_ADSENSE_ADOPTION_DATASOURCE_GROUP",
                        "AXP_OPG_ADSENSE_REWARDED_IAP_SIGNALS",
                        "AXP_OPG_ADSENSE_SIGNALS",
                        "AXP_OPG_DOUBLECLICK_SIGNALS",
                        "AXP_OPP_TAB_ANALYTICS",
                        "AXP_OPP_TAB_ANALYTICS_DOWNLOADS",
                        "AXP_PBS_DOUBLECLICK_ADOPTION",
                        "AXP_PBS_DOUBLECLICK_ADOPTION_FOR_LPS",
                        "AXP_SMB_AAT_SIGNALS",
                        "AXP_OSTAR",
                        "AXP_XP_DAILY_CURRENT_STATS",
                        "AXP_PERF_CAMPAIGN_STATS",
                        "AXP_TEST_NALANDA",
                        "AXP_TEST_XSR",
                        "AXP_DV360_XP_ACCOUNT_SIGNALS",
                        "AXP_DELIVER_ACTIVATE_ACCOUNT_PERF",
                        "AXP_DELIVER_ACTIVATE_ACCOUNT_PERF_ALTERNATIVE",
                        "AXP_DV360_CUSTOM_INTENT_AUDIENCES_ROPPS",
                        "AXP_DV360_GUARANTEED_DEALS_PG_FEATURES_ROPPS",
                        "AXP_DV360_NATIVE_VIDEO_ADS_ROPPS",
                        "AXP_DV360_PERF_DBMACCOUNTS",
                        "AXP_DV360_SALESOPS_DBM_AUTOBIDDING_SIGNALS",
                        "AXP_DV360_SALESOPS_ANALYTICS_REVENUE_CURRENT_JAGR",
                        "AXP_DV360_TRUE_VIEW_IN_STREAM_UPSELL_UNDERUTILIZED_ROPPS",
                        "AXP_AWCL_FIX_CONVERSION_TRACKING_ELIGIBILITY2",
                        "AXP_AWCL_FIX_CONVERSION_TRACKING_ADOPTION2",
                        "AXP_DELIVER_ACTIVATE_CAMPAIGN_COSTS",
                        "AXP_DELIVER_ACTIVATE_CAMPAIGN_PERF",
                        "AXP_SA360_SALESOPS_DAILY_FEATURE_CAMPAIGN_STATS",
                        "AXP_SA360_SALESOPS_ATTRIBUTION_DDADASH",
                        "AXP_USE_NEW_RESPONSIVE_DISPLAY_ADS_ADOPTION",
                        "AXP_USE_NEW_RESPONSIVE_DISPLAY_ADS_ELIGIBILITY",
                        "AXP_USER_VERTICAL_CRITERION",
                        "AXP_AWCL_AW_CONVERSION_RISK_JAGR_ELIGIBILITY",
                        "AXP_AWCL_AW_CONVERSION_RISK_JAGR_ADOPTION",
                        "AXP_AWCL_BETTER_THEMED_ADS_ADOPTION",
                        "AXP_AWCL_BETTER_THEMED_ADS_IMPRESSIONS",
                        "AXP_AWCL_SEARCH_PLUS_OPT_IN_ADOPTION",
                        "AXP_LCS_AAT_CUSTOM_CID_SIGNALS",
                        "AXP_LCS_BLOCKED_KEYWORDS",
                        "AXP_LCS_DD_AUDIENCES_TO_SEARCH_CAMPAIGNS",
                        "AXP_LCS_SHASTA_USER_LIST_REPORT",
                        "AXP_LOCAL_CAMPAIGNS_ADOPTION",
                        "AXP_LOCAL_GUIDES_USER_SIGNALS",
                        "AXP_LPS_DOUBLECLICK_SIGNALS_MASTER",
                        "AXP_LPS_ADSENSE_SIGNALS_MASTER",
                        "AXP_NON_LAST_CLICK_ATTRIBUTION_ELIGIBILITY",
                        "AXP_BID_LOWERING_SURFACED_CAMPAIGNS",
                        "AXP_APPDEV_FINANCE_ANALYST_MONTHLY",
                        "AXP_AWCL_2_EXTENSIONS_CALLOUTS",
                        "AXP_AWCL_2_EXTENSIONS_CALLOUTS_SPEND",
                        "AXP_AWCL_2_EXTENSIONS_SITELINKS",
                        "AXP_AWCL_2_EXTENSIONS_SITELINKS_SPEND",
                        "AXP_AWCL_ADS_PROGRAMMABLE_GDN_REVENUE",
                        "AXP_AWCL_BUMPER_ADS_INCREMENTAL_REACH_ADOPTION",
                        "AXP_AWCL_BUMPER_ADS_INCREMENTAL_REACH_ELIGIBILITY",
                        "AXP_AWCL_DYNAMIC_REMARKETING_ACCOUNT_STATS",
                        "AXP_AWCL_DYNAMIC_REMARKETING_HPA_SPEND",
                        "AXP_AWCL_DYNAMIC_REMARKETING_UPSELL_FLOW",
                        "AXP_AWCL_DYNAMIC_SEARCH_ADS",
                        "AXP_AWCL_DYNAMIC_SEARCH_ADS_V2",
                        "AXP_AWCL_FINANCE_ANALYSTS_APPDOWNLOAD",
                        "AXP_AWCL_MAXIMIZE_PRODUCTS_TARGETED_IN_PLAS",
                        "AXP_AWCL_RESPONSIVE_SEARCH_ADS_ADOPTION",
                        "AXP_AWCL_RESPONSIVE_SEARCH_ADS_ELIGIBILITY",
                        "AXP_AWCL_USC_3P_BIDDING",
                        "AXP_CAP_ADWORDS_ASR",
                        "AXP_ECOMMERCE_ELIGIBILITY",
                        "AXP_LCS_AAT_PASSTHROUGH",
                        "AXP_LCS_BUMPER_ADS_SEQUENCE_YOUR_BUMPERS",
                        "AXP_LCS_TRV_REACH_INSTREAM_CPM_ADS_ADOPTION",
                        "AXP_PLATFORMS_MENU_PROD",
                        "AXP_SMART_DISPLAY_CAMPAIGN_ASSETS_ADOPTION",
                        "AXP_SMART_DISPLAY_CAMPAIGN_ASSETS_ELIGIBILITY",
                        "AXP_UAC_PORTRAIT_VIDEO_ADOPTION",
                        "AXP_UNIVERSAL_SHOPPING_CAMPAIGN_ELIGIBILITY",
                        "AXP_XP_DAILY_CURRENT_STATS_365DAY",
                        "AXP_XP_DAILY_CURRENT_STATS_QUARTER",
                        "AXP_XP_UAID_DAILY_QUOTAS",
                        "AXP_ASTORE",
                        "AXP_ASTORE_FIRST_PAGE_BID",
                        "AXP_XSCORE_SUGGESTION_ACCEPTANCES",
                        "AXP_AWCL_LCS_GDN_REMARKETING",
                        "AXP_UAC_PORTRAIT_VIDEO_ELIGIBILITY",
                        "AXP_AWCL_CUSTOM_INTENT_ADD_TO_YT4P_ADOPTION",
                        "AXP_AWCL_CUSTOM_INTENT_ADD_TO_YT4P_ELIGIBILITY",
                        "AXP_AWCL_MAXIMIZE_PRODUCTS_TARGETED_IN_PLAS_ADOPTION",
                        "AXP_AWCL_SMART_BID_OPT_INTO_PAY_FOR_CONVERSION_ADOPTION",
                        "AXP_AWCL_SMART_BID_OPT_INTO_PAY_FOR_CONVERSION_ELIGIBILITY",
                        "AXP_DELIVER_OPTIMIZE_CAMPAIGN_PERF",
                        "AXP_DELIVER_OPPTAB_UPLIFT_SCORES",
                        "AXP_SIMILAR_AUDIENCES_FOR_SEARCH_CAMPAIGNS_ELIGIBILITY",
                        "AXP_DV360_LINKED_DBM_DIVISION_COUNTRIES",
                        "AXP_GMAIL_ADS_NEW_TARGETING_ADOPTION",
                        "AXP_SUPPORT_COMPLETION_TRACKING_GROUP",
                        "AXP_LCS_ADOPTION_TRACKING_DATA_SOURCE_GROUP",
                        "AXP_LCS_ELIGIBILITY_COMPANY_TEAM_DATASOURCE_GROUP",
                        "AXP_LCS_ELIGIBILITY_DATA_SOURCE_GROUP",
                        "AXP_DV360_DATASOURCE_GROUP",
                        "AXP_TRUE_VIEW_FOR_ACTION_ELIGIBILITY_GROUP",
                        "AXP_DIVVY_SRP_GAMMA_ACTIONS",
                        "AXP_LCS_ROPPS_CURATION_DATASOURCE",
                        "AXP_XSCORE_ADOPTION_TRACKING_DATA_SOURCE_GROUP",
                        "AXP_INSERTED_CALLOUT_EXTENSIONS",
                        "AXP_PERFORMANCE_EXAMPLE_DERIVED_SIGNALS",
                        "IDENTITY",
                        "FIBER",
                        "WAYMO",
                        "GREENTEA_COMPANY",
                        "GREENTEA_OPPORTUNITY",
                        "GREENTEA_OFFERING",
                        "GREENTEA_PERFORMANCE_TARGET",
                        "GREENTEA_SECTOR",
                        "GREENTEA_TEAM",
                        "GREENTEA_REGION",
                        "ENGAGE_HR_INFO",
                        "EXAMPLE",
                        "SOURCE_TRIAL_1",
                        "SOURCE_TRIAL_2",
                        "GAMMA_TESTING",
                        "ORGSTORE_DEPRECATED_DO_NOT_USE",
                        "ADWORDS_ACCOUNT_INTEGRITY",
                        "ADWORDS_ACCOUNT_INTEGRITY_TANGLE",
                        "ADWORDS_ACCOUNT_INTEGRITY_MCC_CHECK_TANGLE",
                        "ADWORDS_CAMPAIGN_SETTINGS_CUSTOMER_ADGROUP_TANGLE",
                        "ADWORDS_CAMPAIGN_SETTINGS_CUSTOMER_CAMPAIGN_TANGLE",
                        "ADWORDS_INCENTIVES_TANGLE",
                        "ADWORDS_INCENTIVES_INCENTIVE_ID_TANGLE",
                        "ADWORDS_INCENTIVES_INCENTIVE_GROUP_ID_TANGLE",
                        "ADWORDS_INCENTIVES_COUPON_CODE_TANGLE",
                        "ADWORDS_EXTENSIONS_SETTINGS_TANGLE",
                        "ADWORDS_EXTENSIONS_SETTINGS_FEED_ITEM_TANGLE",
                        "YOUTUBE_ADMIN",
                        "ADWORDS_ACCOUNT_INTEGRITY_CID_AND_UID",
                        "AD_GRANTS",
                        "LOJAX_JURISDICTION",
                        "SALESFORCE_DBM_ACCOUNT_ASSIGNMENT",
                        "DS_JURISDICTION",
                        "DBM_AUTHORIZATION",
                        "TELESCOPE",
                        "Q_PLUS_AGENT_AND_CATEGORY_SIGNALS",
                        "Q_PLUS_AGENT_SIGNALS",
                        "PUBLISHER",
                        "PUBLISHER_ADSENSE",
                        "PUBLISHER_DOUBLECLICK",
                        "CONSUMER_PAYMENTS",
                        "CID_MCC_INFO_BY_GAIA",
                        "CID_MCC_INFO_BY_CID",
                        "DEPRECATED_AXP_ETA_CREATIVE_COUNT",
                        "DEPRECATED_AXP_CASES_RESOLUTION_SIGNALS",
                        "DEPRECATED_AXP_CUSTOMER_DOMAIN_STATS",
                        "DEPRECATED_GREENTEA",
                        "DEPRECATED_AXP_SMB_MOBILE_PAGE_SPEED_SIGNALS",
                        "DEPRECATED_AXP_AWCL_AAT_BETTER_THEMED_SIGNALS",
                        "DEPRECATED_AXP_AWCL_CIDS_DS_AUTO_BIDDING_REVENUE",
                        "DEPRECATED_AXP_AWCL_STRUCTURED_SNIPPETS_ADGROUP_LEVEL",
                        "DEPRECATED_AXP_XSCORE",
                        "DEPRECATED_AXP_HISTORIAN_ADOPTIONS",
                        "DEPRECATED_AXP_TOP_CAMPAIGN_AUDIENCES",
                        "DEPRECATED_AXP_UAC_SIMILAR_CAMPAIGNS",
                        "DEPRECATED_AXP_LCS_AAT_CIDS_BUDGET_INCREASE",
                        "DEPRECATED_AXP_AWCL_SMB_GDN_REMARKETING",
                        "DEPRECATED_AXP_ADS_GEO_DATA"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Used for data associated with a Genie request.",
                        "",
                        "",
                        "",
                        "Temporary signal group to hold youbue_v3 signals for QA. This is here to\nfacilitate Arke signals moving from Legacy Atlas to fully Nalanda.",
                        "",
                        "",
                        "Gmail signals that come indirectly (through Atlas) from Gaia service.\nThese signals are not stored in Atlas.",
                        "",
                        "Used for data associated with an Escalation request.",
                        "Imported from UDS, to support logs writing",
                        "Imported from UDS, to support logs writing",
                        "Imported from UDS, to support logs writing",
                        "Imported from UDS, to support logs writing",
                        "LBC is Local Business Center, also known as Places for Business, see\ngo/banyan\nImported from UDS, to support logs writing",
                        "Imported from UDS, to support logs writing",
                        "Webmaster console\nImported from UDS, to support logs writing",
                        "",
                        "Doubleclick categories that need separate signals",
                        "",
                        "",
                        "",
                        "Doubleclick Adx Buy Side",
                        "DoubleClick DFA + Rich media",
                        "DoubleClick Bid Manager (DBM)",
                        "DoubleClick AdX + Ultra",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PointOfSale",
                        "",
                        "!!! DEPRECATED !!! Adsense account signals for DFP users",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Play signals retrieved through SUPA",
                        "",
                        "",
                        "",
                        "Gmail signals that come from Atlas directly.\nThey are exported to Atlas and stored in Atlas.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Deprecated in favor of AXP_INCENTIVES_COUPON",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Deprecated in favor of AXP_AWCL_ADGROUPS3_PLUS_ETA",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "AXP Derived Signal Library Sources",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Non-production products for testing and long term development",
                        "",
                        "",
                        "",
                        "Deprecated values for backward compatibility",
                        "Used for all adwords account-integrity signals.",
                        "Used for all adwords account-integrity signals (tangle version).",
                        "",
                        "Used for adwords campaign settings tangle signals.",
                        "",
                        "Used for adwords incentives tangle signals.",
                        "",
                        "",
                        "",
                        "For AdWords extensions settings with a single parameter (customer ID).",
                        "For AdWords extensions settings with (customer ID, feed item ID).",
                        "Youtube admin api.",
                        "Deprecated value.",
                        "Signals for premium ad grants customers.",
                        "Used for getting jurisdiction information for lojax check.",
                        "Used for getting dbm account assignments for a user.",
                        "Doubleclick search entity jurisdiction information for lojax check.",
                        "Used for DoubleClick Bid Manager (DBM) authorization",
                        "Used to retrieve signals for IVR.",
                        "Used for Q+ ML models.",
                        "",
                        "Publisher vertical products for customer provided account IDs.",
                        "",
                        "",
                        "",
                        "Products used by Cases to walk the MCC hierarchy in UI.",
                        "",
                        "F1 does not allow stored values to become undefined.\nUnused values should be moved here.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "signalsWhitelists": {
                    "description": "A list of signal names to retrieve for product. If empty, retrieve all.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SmsAddress": {
            "description": "Used when the ChannelType is SMS.",
            "id": "SmsAddress",
            "properties": {
                "phoneNumber": {
                    "description": "Required. International SMS number, beginning with + and containing only\ndigits. (Ex: +1234567890)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmsOptInRequest": {
            "description": "### Chime",
            "id": "SmsOptInRequest",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "mobileGatewayClientName": {
                    "type": "string"
                },
                "smsPhoneNumber": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmsOptInResponse": {
            "id": "SmsOptInResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "outcome": {
                    "enum": [
                        "OUTCOME_UNKNOWN",
                        "OUTCOME_SUCCESS",
                        "OUTCOME_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SpamPolicyEntry": {
            "id": "SpamPolicyEntry",
            "properties": {
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "spamPolicy": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StateChange": {
            "id": "StateChange",
            "properties": {
                "changeUser": {
                    "type": "string"
                },
                "newState": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "oldState": {
                    "enum": [
                        "DRAFT",
                        "WAITING_APPROVAL",
                        "READY",
                        "ACTIVE",
                        "ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "saveTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SubjectLineEvaluation": {
            "id": "SubjectLineEvaluation",
            "properties": {
                "rank": {
                    "format": "int32",
                    "type": "integer"
                },
                "score": {
                    "format": "float",
                    "type": "number"
                },
                "subjectLine": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SubjectLineModelResult": {
            "id": "SubjectLineModelResult",
            "properties": {
                "significantDelta": {
                    "format": "float",
                    "type": "number"
                },
                "subjectLineEvaluations": {
                    "items": {
                        "$ref": "SubjectLineEvaluation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Target": {
            "description": "Delivery information for a specific target.\nNOTE: The user storage Spanner table (n/b/user/spanner/user_targets.sdl)\ndepends on this proto! Be aware of forward / backward compatibility in\nchanges to this proto.\nNOTE: Any update to this proto should be echoed in\nnotifications/backend/common/target_log_util.h, and relevant changes should\nbe echoed in the TargetLog proto.",
            "id": "Target",
            "properties": {
                "channelType": {
                    "description": "Required.",
                    "enum": [
                        "CHANNEL_UNKNOWN",
                        "EMAIL",
                        "APPLE_PUSH",
                        "GCM_DEVICE_PUSH",
                        "GCM_GROUP_PUSH",
                        "SMS",
                        "CUSTOM_ENDPOINT",
                        "WEB_PUSH",
                        "MATCHSTICK",
                        "HTTP_STREAMING"
                    ],
                    "enumDescriptions": [
                        "",
                        "This uses the EmailSelection for selecting targets.",
                        "This uses the AppleSelection for selecting targets.",
                        "This uses the GcmSelection for selecting targets.",
                        "This uses the GcmSelection for selecting targets.",
                        "This uses the SmsSelection for selecting targets.",
                        "",
                        "This uses the WebPushSelection for selecting targets.",
                        "For more information: go/chime-matchstick",
                        "For more information: go/chime-http-streaming."
                    ],
                    "type": "string"
                },
                "deliveryAddress": {
                    "$ref": "DeliveryAddress",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "TargetRecipient": {
            "description": "This Recipient is only used internally for wait node resume.\nIt currently supports android address, apple address, and sms phone numbers.\nNext ID: 7",
            "id": "TargetRecipient",
            "properties": {
                "externalRecipientKey": {
                    "description": "A recipient identifier provided by external GAMMA clients.\nIf present, will be sent back with Fast Server feedback messages.",
                    "format": "byte",
                    "type": "string"
                },
                "internalData": {
                    "$ref": "InternalRecipientData",
                    "description": "INTERNAL ONLY\nThis field must not be set by external clients.\nIt is set and used only internally by Gamma."
                },
                "languagePreference": {
                    "description": "Required.",
                    "type": "string"
                },
                "recipientKey": {
                    "$ref": "RecipientKey",
                    "description": "Required."
                },
                "signals": {
                    "items": {
                        "$ref": "RecipientSignal"
                    },
                    "type": "array"
                },
                "userId": {
                    "description": "Required if campaign allows for opt-out.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimeZoneAwareNode": {
            "description": "Node that adjusts workflow execution to the recipient timezone",
            "id": "TimeZoneAwareNode",
            "properties": {},
            "type": "object"
        },
        "TimezoneInfo": {
            "id": "TimezoneInfo",
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "suffixInfos": {
                    "items": {
                        "$ref": "TimezoneSuffixInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TimezoneSuffixInfo": {
            "id": "TimezoneSuffixInfo",
            "properties": {
                "suffix": {
                    "type": "string"
                },
                "suffixOffset": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TopCampaignsResponse": {
            "id": "TopCampaignsResponse",
            "properties": {
                "campaignSummarys": {
                    "items": {
                        "$ref": "TopCampaignsResponseCampaignSummary"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TopCampaignsResponseCampaignSummary": {
            "id": "TopCampaignsResponseCampaignSummary",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "collaboratorCount": {
                    "format": "int64",
                    "type": "string"
                },
                "messageCount": {
                    "format": "int64",
                    "type": "string"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                },
                "recipientListCount": {
                    "format": "int64",
                    "type": "string"
                },
                "workflowNodeCount": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UnregisterDeviceFromChimeRequest": {
            "id": "UnregisterDeviceFromChimeRequest",
            "properties": {
                "target": {
                    "$ref": "Target",
                    "description": "The target to remove."
                }
            },
            "type": "object"
        },
        "UnregisterDeviceFromChimeResponse": {
            "id": "UnregisterDeviceFromChimeResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "UnregisterDeviceFromGunsRequest": {
            "id": "UnregisterDeviceFromGunsRequest",
            "properties": {
                "registration": {
                    "$ref": "Registration",
                    "description": "The registration details for the device."
                }
            },
            "type": "object"
        },
        "UnregisterDeviceFromGunsResponse": {
            "id": "UnregisterDeviceFromGunsResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                }
            },
            "type": "object"
        },
        "UploadMessagesAndCreativesRequest": {
            "id": "UploadMessagesAndCreativesRequest",
            "properties": {
                "base64EncodedData": {
                    "type": "string"
                },
                "uploadParams": {
                    "$ref": "UploadParams"
                }
            },
            "type": "object"
        },
        "UploadMessagesAndCreativesResponse": {
            "id": "UploadMessagesAndCreativesResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "parseErrors": {
                    "$ref": "ParseErrors"
                },
                "savedMessagesResponses": {
                    "items": {
                        "$ref": "SaveMessageResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "UploadParams": {
            "id": "UploadParams",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "supportedCreativeFormats": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CREATIVE_BODY_FORMAT_UNKNOWN",
                            "CREATIVE_BODY_FORMAT_EMAIL_TEXT",
                            "CREATIVE_BODY_FORMAT_EMAIL_HTML",
                            "CREATIVE_BODY_FORMAT_LANDING_PAGE",
                            "CREATIVE_BODY_FORMAT_PUSH_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_SMS",
                            "CREATIVE_BODY_FORMAT_ADWORDS_ALERT",
                            "CREATIVE_BODY_FORMAT_IN_APP_NOTIFICATION",
                            "CREATIVE_BODY_FORMAT_EMAIL_AMP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "uploadType": {
                    "enum": [
                        "BULK_MESSAGES",
                        "BULK_CREATIVES",
                        "SINGLE_CREATIVE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo",
                    "description": "Latest version info for the currently loaded messages."
                }
            },
            "type": "object"
        },
        "UploadRecipientSourceRequest": {
            "id": "UploadRecipientSourceRequest",
            "properties": {
                "base64EncodedData": {
                    "type": "string"
                },
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "isProofList": {
                    "type": "boolean"
                },
                "uploadSource": {
                    "enum": [
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_UNKNOWN",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_GAMMA_UI",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_CSV_FETCH",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_CONTACT_MGMT_UI",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_CREATED_FROM_GROUP",
                        "RECIPIENT_SOURCE_UPLOAD_SOURCE_FORMBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UploadRecipientSourceResponse": {
            "id": "UploadRecipientSourceResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "parseErrors": {
                    "$ref": "ParseErrors"
                },
                "recipientSource": {
                    "$ref": "RecipientSource"
                },
                "warnings": {
                    "$ref": "RecipientWarnings"
                }
            },
            "type": "object"
        },
        "UploadTag": {
            "id": "UploadTag",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "numContactsAffected": {
                    "format": "int64",
                    "type": "string"
                },
                "uploadAction": {
                    "enum": [
                        "UPLOAD_ACTION_UNKNOWN",
                        "UPLOAD_ACTION_ADD_NEW_CONTACTS_ONLY",
                        "UPLOAD_ACTION_ADD_MISSING_SIGNALS",
                        "UPLOAD_ACTION_OVERWRITE_EXISTING",
                        "UPLOAD_ACTION_DELETE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadSource": {
                    "enum": [
                        "UPLOAD_SOURCE_UNKNOWN",
                        "UPLOAD_SOURCE_UI",
                        "UPLOAD_SOURCE_UPLOAD_SERVICE",
                        "UPLOAD_SOURCE_FORMBOX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uploadTagId": {
                    "type": "string"
                },
                "uploadTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "uploader": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ValidateCsvHeaderColumn": {
            "id": "ValidateCsvHeaderColumn",
            "properties": {
                "error": {
                    "type": "string"
                },
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "warning": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ValidateCsvHeaderRequest": {
            "id": "ValidateCsvHeaderRequest",
            "properties": {
                "csvHeader": {
                    "type": "string"
                },
                "executionModelVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "notificationCategoryId": {
                    "format": "int32",
                    "type": "integer"
                },
                "productId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ValidateCsvHeaderResponse": {
            "id": "ValidateCsvHeaderResponse",
            "properties": {
                "columnsDatas": {
                    "items": {
                        "$ref": "ValidateCsvHeaderColumn"
                    },
                    "type": "array"
                },
                "errorsNum": {
                    "format": "int32",
                    "type": "integer"
                },
                "warningsNum": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "VersionInfo": {
            "id": "VersionInfo",
            "properties": {
                "versionId": {
                    "description": "ignored unless VERSION_TYPE_SPECIFIED_VERSION",
                    "format": "int64",
                    "type": "string"
                },
                "versionType": {
                    "enum": [
                        "VERSION_TYPE_UNKNOWN",
                        "VERSION_TYPE_LATEST_PUBLISH",
                        "VERSION_TYPE_UNPUBLISHED",
                        "VERSION_TYPE_SPECIFIED_VERSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaitNode": {
            "description": "Node that blocks processing of the workflow for specified time",
            "id": "WaitNode",
            "properties": {
                "duration": {
                    "format": "int32",
                    "type": "integer"
                },
                "timeUnit": {
                    "enum": [
                        "TIME_UNIT_UNKNOWN",
                        "TIME_UNIT_HOURS",
                        "TIME_UNIT_DAYS",
                        "TIME_UNIT_WEEKS",
                        "TIME_UNIT_MONTHS",
                        "TIME_UNIT_MINUTES"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaitUntilEvent": {
            "id": "WaitUntilEvent",
            "properties": {
                "eventType": {
                    "enum": [
                        "WAIT_UNTIL_EVENT_TYPE_UNKNOWN",
                        "WAIT_UNTIL_EVENT_TYPE_NAMED_EVENT",
                        "WAIT_UNTIL_EVENT_TYPE_CLICK_LINK_IN_MESSAGE",
                        "WAIT_UNTIL_EVENT_TYPE_CLICK_ANY_LINK_IN_MESSAGE",
                        "WAIT_UNTIL_EVENT_TYPE_CLICK_LINK_IN_ANY_MESSAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "linkName": {
                    "type": "string"
                },
                "messageId": {
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaitUntilNode": {
            "description": "Node that is used to hold processing of the workflow until specified event\nor until timeout occurs",
            "id": "WaitUntilNode",
            "properties": {
                "event": {
                    "$ref": "WaitUntilEvent"
                },
                "eventChildIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "timeout": {
                    "format": "int32",
                    "type": "integer"
                },
                "timeoutChildIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "timeoutTimeUnit": {
                    "enum": [
                        "TIME_UNIT_UNKNOWN",
                        "TIME_UNIT_HOURS",
                        "TIME_UNIT_DAYS",
                        "TIME_UNIT_WEEKS",
                        "TIME_UNIT_MONTHS",
                        "TIME_UNIT_MINUTES"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WebPushAddress": {
            "description": "Used when the ChannelType is WEB_PUSH.",
            "id": "WebPushAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. This must correspond to a configured WebPushApplication\nfor the client sending to this address. This field will NOT be passed to\nGCM when we call it as the application_id is automatically populated for\nChrome apps via the registration token.",
                    "type": "string"
                },
                "auth": {
                    "description": "Required. The corresponding encryption auth key.",
                    "type": "string"
                },
                "endpoint": {
                    "description": "Required. The gcm endpoint to deliver to. When a service worker subscribes\nfor push notifications, an endpoint is provided, part of which includes the\ngcm registration id.",
                    "type": "string"
                },
                "p256dh": {
                    "description": "Required. The p256dh encryption key used when delivering the notification.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowConfig": {
            "id": "WorkflowConfig",
            "properties": {
                "gammaCampaignId": {
                    "description": "Required. The Gamma campaign ID that this workflow will be sent to. It\nmust previously be configured in Gamma.",
                    "format": "int64",
                    "type": "string"
                },
                "workflowName": {
                    "description": "Required. The name that represents this workflow.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowInfo": {
            "description": "Workflow metadata. Contains UI-related information about the workflow such as\nworkflow appearance, section ordering, e.t.c.",
            "id": "WorkflowInfo",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "dayOfWeeks": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "DAY_OF_WEEK_UNKNOWN",
                            "DAY_OF_WEEK_SUN",
                            "DAY_OF_WEEK_MON",
                            "DAY_OF_WEEK_TUE",
                            "DAY_OF_WEEK_WED",
                            "DAY_OF_WEEK_THU",
                            "DAY_OF_WEEK_FRI",
                            "DAY_OF_WEEK_SAT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "sectionMetadatas": {
                    "description": "section metadata. also defines order the sections appear in the UI",
                    "items": {
                        "$ref": "WorkflowSectionMetadata"
                    },
                    "type": "array"
                },
                "workflowNote": {
                    "type": "string"
                },
                "workflowType": {
                    "enum": [
                        "WORKFLOW_TYPE_UNKNOWN",
                        "WORKFLOW_TYPE_NONE",
                        "WORKFLOW_TYPE_SINGLE_MESSAGE",
                        "WORKFLOW_TYPE_MULTI_MESSAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowNode": {
            "id": "WorkflowNode",
            "properties": {
                "axpTreatmentNode": {
                    "$ref": "AxpTreatmentNode"
                },
                "childNodes": {
                    "items": {
                        "$ref": "WorkflowNode"
                    },
                    "type": "array"
                },
                "conditionNode": {
                    "$ref": "ConditionNode"
                },
                "controlGroupNode": {
                    "$ref": "ControlGroupNode"
                },
                "exportToContactManagementNode": {
                    "$ref": "ExportToContactManagementNode"
                },
                "exportToDivvyNode": {
                    "$ref": "ExportToDivvyNode"
                },
                "exportToGoopsNode": {
                    "$ref": "ExportToGoopsNode"
                },
                "gnpNodeInfo": {
                    "$ref": "GnpWorkflowNodeInfo",
                    "description": "GNP node info. This field is populated in GNP campaigns only."
                },
                "incentivesNode": {
                    "$ref": "IncentivesNode"
                },
                "mendelExperimentNode": {
                    "$ref": "MendelExperimentNode"
                },
                "messageNode": {
                    "$ref": "MessageNode"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "optOutNode": {
                    "$ref": "OptOutNode"
                },
                "percentSplitNode": {
                    "$ref": "PercentSplitNode"
                },
                "timeZoneAwareNode": {
                    "$ref": "TimeZoneAwareNode"
                },
                "type": {
                    "enum": [
                        "NODE_UNKNOWN",
                        "NODE_SECTION_LINK_NODE",
                        "NODE_MESSAGE_NODE",
                        "NODE_CONTROL_NODE",
                        "NODE_PERCENT_SPLIT_NODE",
                        "NODE_WAIT_NODE",
                        "NODE_INCENTIVES_NODE",
                        "NODE_AXP_NODE",
                        "NODE_EXPORT_TO_GOOPS_NODE",
                        "NODE_WAIT_UNTIL_NODE",
                        "NODE_TIME_ZONE_NODE",
                        "NODE_EXPORT_TO_DIVVY_NODE",
                        "NODE_CONDITION_NODE",
                        "NODE_UI_LEADS_ROUTING_ETO",
                        "NODE_UI_LEADS_ROUTING_ISO",
                        "NODE_UI_ATLAS_EXPORT",
                        "NODE_UI_CAMPAIGN_DELEGATION",
                        "NODE_OPT_OUT",
                        "NODE_EXPORT_TO_CONTACT_MANAGEMENT_NODE",
                        "NODE_MENDEL_EXPERIMENT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "waitNode": {
                    "$ref": "WaitNode"
                },
                "waitUntilNode": {
                    "$ref": "WaitUntilNode"
                },
                "workflowSectionLinkNode": {
                    "$ref": "WorkflowSectionLinkNode"
                }
            },
            "type": "object"
        },
        "WorkflowResponse": {
            "id": "WorkflowResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "result": {
                    "$ref": "SaveResultInfo"
                },
                "sections": {
                    "items": {
                        "$ref": "WorkflowSection"
                    },
                    "type": "array"
                },
                "version": {
                    "$ref": "LastSavedVersionInfo"
                },
                "workflowInfo": {
                    "$ref": "WorkflowInfo"
                }
            },
            "type": "object"
        },
        "WorkflowResumeDetails": {
            "id": "WorkflowResumeDetails",
            "properties": {
                "campaignVersionId": {
                    "description": "The campaign version to resume. 0 indicates 'latest published version';\nhowever, a specific version is recommended, since the node_id is only\nguaranteed to be valid in a specific version of the campaign.\nNext available ID: 6",
                    "format": "int64",
                    "type": "string"
                },
                "dispatchId": {
                    "description": "Dispatch ID of the original workflow.",
                    "type": "string"
                },
                "nodeId": {
                    "description": "Node ID at which we should resume.",
                    "format": "int32",
                    "type": "integer"
                },
                "resumeFromWaitFailure": {
                    "$ref": "ResumeFromWaitFailure",
                    "description": "The Wait service could not resume this workflow and this error needs to be\nrecorded as a failure in the fast send errors table."
                },
                "timezone": {
                    "description": "Timezone that the workflow should use to schedule further resumes after\nfollowing wait nodes.\nSpecified in the format supported by java.util.TimeZone: either a full name\nsuch as \"America/Los_Angeles\", or a custom ID such as \"GMT-8:00\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowSection": {
            "id": "WorkflowSection",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "rootNode": {
                    "$ref": "WorkflowNode"
                },
                "rootSection": {
                    "type": "boolean"
                },
                "sectionId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowSectionLinkNode": {
            "description": "Node that links to a different workflow section",
            "id": "WorkflowSectionLinkNode",
            "properties": {
                "sectionId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowSectionMetadata": {
            "description": "UI-related metadata of a single workflow section.",
            "id": "WorkflowSectionMetadata",
            "properties": {
                "sectionId": {
                    "format": "int64",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowSimulationInfo": {
            "id": "WorkflowSimulationInfo",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "simulationTimestampMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "startNodeId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowSimulationRequest": {
            "id": "WorkflowSimulationRequest",
            "properties": {
                "campaignId": {
                    "format": "int64",
                    "type": "string"
                },
                "fastSimulationTime": {
                    "format": "int32",
                    "type": "integer"
                },
                "forceAdmissionFilter": {
                    "description": "for simulation only",
                    "type": "boolean"
                },
                "gkmsDraftsAllowed": {
                    "description": "for simulation only",
                    "type": "boolean"
                },
                "nodeId": {
                    "format": "int64",
                    "type": "string"
                },
                "recipientSourceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "versionId": {
                    "description": "[UNPUBLISHED]",
                    "format": "int64",
                    "type": "string"
                },
                "versionInfo": {
                    "$ref": "VersionInfo",
                    "description": "version_id if unset"
                }
            },
            "type": "object"
        },
        "WorkflowSimulationResponse": {
            "id": "WorkflowSimulationResponse",
            "properties": {
                "error": {
                    "$ref": "ErrorData"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "STATUS_UNKNOWN",
                        "STATUS_SUCCESS",
                        "STATUS_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Automated Marketing Private API (nightly)",
    "version": "v1missive",
    "version_module": true
}