{
    "basePath": "",
    "baseUrl": "https://daily-2-incidentcenter.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "IncidentCenter",
    "description": "G Suite API for incidents managment.",
    "discoveryVersion": "v1",
    "documentationLink": "https://gsuite.google.com/products/alerts/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "daily_2_incidentcenter_sandbox:v1alpha1",
    "kind": "discovery#restDescription",
    "name": "daily_2_incidentcenter_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "incidents": {
            "methods": {
                "delete": {
                    "description": "Marks the specified incident for deletion. An incident that has been marked\nfor deletion will be removed from the Alert Center after 30 days.\nMarking an incident for deletion will have no effect on an incident which\nhas already been marked for deletion. Attempting to mark a nonexistent\nincident for deletion will return NOT_FOUND.",
                    "flatPath": "v1alpha1/incidents/{incidentId}",
                    "httpMethod": "DELETE",
                    "id": "daily_2_incidentcenter_sandbox.incidents.delete",
                    "parameterOrder": [
                        "incidentId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Optional. The unique identifier of the Google account of the customer the\nincident is associated with. This is obfuscated and not the plain customer\nID as stored internally. Inferred from the caller identity if not provided.",
                            "location": "query",
                            "type": "string"
                        },
                        "incidentId": {
                            "description": "Required. The identifier of the incident to delete.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha1/incidents/{incidentId}",
                    "response": {
                        "$ref": "Empty"
                    }
                },
                "get": {
                    "description": "Gets the specified incident.",
                    "flatPath": "v1alpha1/incidents/{incidentId}",
                    "httpMethod": "GET",
                    "id": "daily_2_incidentcenter_sandbox.incidents.get",
                    "parameterOrder": [
                        "incidentId"
                    ],
                    "parameters": {
                        "customerId": {
                            "description": "Optional. The unique identifier of the Google account of the customer the\nincident is associated with. This is obfuscated and not the plain customer\nID as stored internally. Inferred from the caller identity if not provided.",
                            "location": "query",
                            "type": "string"
                        },
                        "incidentId": {
                            "description": "Required. The identifier of the incident to retrieve.",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha1/incidents/{incidentId}",
                    "response": {
                        "$ref": "Incident"
                    }
                },
                "list": {
                    "description": "Lists all the incidents for the current user and application.",
                    "flatPath": "v1alpha1/incidents",
                    "httpMethod": "GET",
                    "id": "daily_2_incidentcenter_sandbox.incidents.list",
                    "parameterOrder": [],
                    "parameters": {
                        "customerId": {
                            "description": "Optional. The unique identifier of the Google account of the customer the\nincidents are associated with. This is obfuscated and not the plain\ncustomer ID as stored internally. Inferred from the caller identity if not\nprovided.",
                            "location": "query",
                            "type": "string"
                        },
                        "filter": {
                            "description": "Optional. Query string for filtering incident results.\nThis string must be specified as an expression or list of expressions,\nusing the following grammar:\n\n### Expressions\n\nAn expression has the general form `<field> <operator> <value>`.\n\nA field or value which contains a space or a colon must be enclosed by\ndouble quotes.\n\n#### Operators\n\nOperators follow the BNF specification:\n\n`<equalityOperator> ::= \"=\" | \":\"`\n\n`<relationalOperator> ::= \"<\" | \">\" | \"<=\" | \">=\"`\n\nRelational operators are defined only for timestamp fields. Equality\noperators are defined only for string fields.\n\n#### Timestamp fields\n\nThe value supplied for a timestamp field must be an\n[RFC 3339](https://tools.ietf.org/html/rfc3339) date-time string.\n\nSupported timestamp fields are `create_time`, `start_time`, and `end_time`.\n\n#### String fields\n\nThe value supplied for a string field may be an arbitrary string.\n\n#### Examples\n\nTo query for all incidents created on or after April 5, 2018:\n\n`create_time >= \"2018-04-05T00:00:00Z\"`\n\nTo query for all incidents from the source \"Anomaly detection\":\n\n`source:\"Anomaly detection\"`\n\n### Joining expressions\n\nExpressions may be joined to form a more complex query. The BNF\nspecification is:\n\n`<expressionList> ::= <expression> | <expressionList> <conjunction>\n<expressionList> | <negation> <expressionList>`\n`<conjunction> ::= \"AND\" | \"OR\" | \"\"`\n`<negation> ::= \"NOT\"`\n\nUsing the empty string as a conjunction acts as an implicit AND.\n\nThe precedence of joining operations, from highest to lowest, is NOT, AND,\nOR.\n\n#### Examples\n\nTo query for all incidents which started in 2017:\n\n`start_time >= \"2017-01-01T00:00:00Z\" AND start_time <\n\"2018-01-01T00:00:00Z\"`\n\nTo query for all Drive sharing incidents from the source\n\"Anomaly detection\":\n\n`type:\"Drive sharing\" source:\"Anomaly detection\"`",
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "Optional. Sort the list results by a certain order.\nIf not specified results may be returned in arbitrary order.\nYou can sort the results in a descending order based on the creation\ntimestamp using order_by=\"create_time desc\".\nCurrently, only sorting by create_time desc is supported.",
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "description": "Optional. Requested page size. Server may return fewer items than\nrequested. If unspecified, server will pick an appropriate default.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Optional. A token identifying a page of results the server should return.\nIf empty, a new iteration is started. To continue an iteration, pass in\nthe value from the previous ListIncidentsResponse's next_page_token field.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1alpha1/incidents",
                    "response": {
                        "$ref": "ListIncidentsResponse"
                    }
                }
            },
            "resources": {
                "feedback": {
                    "methods": {
                        "create": {
                            "description": "Creates a new incident feedback.",
                            "flatPath": "v1alpha1/incidents/{incidentId}/feedback",
                            "httpMethod": "POST",
                            "id": "daily_2_incidentcenter_sandbox.incidents.feedback.create",
                            "parameterOrder": [
                                "incidentId"
                            ],
                            "parameters": {
                                "customerId": {
                                    "description": "Optional. The unique identifier of the Google account of the customer the\nincident's feedback is associated with. This is obfuscated and not the\nplain customer ID as stored internally. Inferred from the caller identity\nif not provided.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "incidentId": {
                                    "description": "Required. The identifier of the incident this feedback belongs to.\nReturns a NOT_FOUND error if no such incident.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1alpha1/incidents/{incidentId}/feedback",
                            "request": {
                                "$ref": "IncidentFeedback"
                            },
                            "response": {
                                "$ref": "IncidentFeedback"
                            }
                        },
                        "list": {
                            "description": "Lists all the feedback for an incident.",
                            "flatPath": "v1alpha1/incidents/{incidentId}/feedback",
                            "httpMethod": "GET",
                            "id": "daily_2_incidentcenter_sandbox.incidents.feedback.list",
                            "parameterOrder": [
                                "incidentId"
                            ],
                            "parameters": {
                                "customerId": {
                                    "description": "Optional. The unique identifier of the Google account of the customer the\nincident is associated with. This is obfuscated and not the plain customer\nID as stored internally. Inferred from the caller identity if not provided.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "incidentId": {
                                    "description": "Required. The incident identifier.\nIf the incident does not exist returns a NOT_FOUND error.",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1alpha1/incidents/{incidentId}/feedback",
                            "response": {
                                "$ref": "ListIncidentFeedbackResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "revision": "20190910",
    "rootUrl": "https://daily-2-incidentcenter.sandbox.googleapis.com/",
    "schemas": {
        "AccountWarning": {
            "description": "Alerts for user account warning events.",
            "id": "AccountWarning",
            "properties": {
                "email": {
                    "description": "Required. Email of the user that this event belongs to.",
                    "type": "string"
                },
                "loginDetails": {
                    "$ref": "LoginDetails",
                    "description": "Optional. Details of the login action associated with the warning event.\nThis is only available for:\nSuspicious login\nSuspicious login (less secure app)\nSuspicious programmatic login\nUser suspended (suspicious activity)"
                }
            },
            "type": "object"
        },
        "ActivityRule": {
            "description": "Alerts from GSuite Security Center rules service configured by user.",
            "id": "ActivityRule",
            "properties": {
                "actionNames": {
                    "description": "List of action names associated with the rule threshold.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "createTime": {
                    "description": "Rule create timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the rule.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Alert display name.",
                    "type": "string"
                },
                "name": {
                    "description": "Rule name.",
                    "type": "string"
                },
                "query": {
                    "description": "Query that is used to get the data from the associated source.",
                    "type": "string"
                },
                "supersededAlerts": {
                    "description": "List of alert ids superseded by this alert. It is used to indicate that\nthis alert is essentially extension of superseded alerts and we found the\nrelationship after creating these alerts.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "supersedingAlert": {
                    "description": "Alert id superseding this alert. It is used to indicate that superseding\nalert is essentially extension of this alert and we found the relationship\nafter creating both alerts.",
                    "type": "string"
                },
                "threshold": {
                    "description": "Alert threshold is for example \u201cCOUNT > 5\u201d.",
                    "type": "string"
                },
                "triggerSource": {
                    "description": "The trigger sources for this rule.\n\n* GMAIL_EVENTS\n* DEVICE_EVENTS\n* USER_EVENTS",
                    "type": "string"
                },
                "updateTime": {
                    "description": "The timestamp of the last update to the rule.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "windowSize": {
                    "description": "Rule window size. Possible values are 1 hour or 24 hours.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AppMakerSqlSetupNotification": {
            "description": "Alerts from App Maker to notify admins to set up default SQL instance.",
            "id": "AppMakerSqlSetupNotification",
            "properties": {
                "requestInfo": {
                    "description": "List of applications with requests for default SQL set up.",
                    "items": {
                        "$ref": "RequestInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Attachment": {
            "description": "Attachment with application-specific information about an alert.",
            "id": "Attachment",
            "properties": {
                "csv": {
                    "$ref": "Csv",
                    "description": "CSV file attachment."
                }
            },
            "type": "object"
        },
        "BadWhitelist": {
            "description": "Incident for setting the domain or ip that malicious email comes from as\nwhitelisted domain or ip in Gmail advanced settings.",
            "id": "BadWhitelist",
            "properties": {
                "domainId": {
                    "$ref": "DomainId",
                    "description": "Domain id."
                },
                "maliciousEntity": {
                    "$ref": "MaliciousEntity",
                    "description": "Entity whose actions triggered a Gmail phishing incident."
                },
                "messages": {
                    "description": "Every incident could contain multiple messages.",
                    "items": {
                        "$ref": "GmailMessageInfo"
                    },
                    "type": "array"
                },
                "sourceIp": {
                    "description": "The source ip address of the malicious email. e.g. \"127.0.0.1\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Csv": {
            "description": "Representation of a CSV file attachment, as a list of column headers and\na list of data rows.",
            "id": "Csv",
            "properties": {
                "dataRows": {
                    "description": "List of data rows in a CSV file, as string arrays rather than as a\nsingle comma-separated string.",
                    "items": {
                        "$ref": "CsvRow"
                    },
                    "type": "array"
                },
                "headers": {
                    "description": "List of headers for data columns in a CSV file.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CsvRow": {
            "description": "Representation of a single data row in a CSV file.",
            "id": "CsvRow",
            "properties": {
                "entries": {
                    "description": "Data entries in a CSV file row, as a string array rather than a single\ncomma-separated string.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeviceCompromised": {
            "description": "A mobile device compromised alert. Derived from audit logs.",
            "id": "DeviceCompromised",
            "properties": {
                "email": {
                    "description": "The email of the user this incident was created for.",
                    "type": "string"
                },
                "events": {
                    "description": "Required. List of security events.",
                    "items": {
                        "$ref": "DeviceCompromisedSecurityDetail"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DeviceCompromisedSecurityDetail": {
            "description": "Detailed information of a single MDM device compromised event.",
            "id": "DeviceCompromisedSecurityDetail",
            "properties": {
                "deviceCompromisedState": {
                    "description": "Device compromised state includes: \"Compromised\" and \"Not Compromised\".",
                    "type": "string"
                },
                "deviceId": {
                    "description": "Required. Device Info.",
                    "type": "string"
                },
                "deviceModel": {
                    "description": "The model of the device.",
                    "type": "string"
                },
                "deviceType": {
                    "description": "The type of the device.",
                    "type": "string"
                },
                "iosVendorId": {
                    "description": "Required for IOS, empty for others.",
                    "type": "string"
                },
                "resourceId": {
                    "description": "The device resource id.",
                    "type": "string"
                },
                "serialNumber": {
                    "description": "The serial number of the device.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DocInfo": {
            "description": "Access/Usage information about a doc that was involved in this incident.",
            "id": "DocInfo",
            "properties": {
                "externalRecipients": {
                    "description": "A list of external recipients given access to this doc by this incident.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "externalViewers": {
                    "description": "A subset of external_recipients who actually accessed the doc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fileId": {
                    "description": "The id of the file.",
                    "type": "string"
                },
                "owner": {
                    "description": "The owner of the file.",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the file.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DomainId": {
            "description": "Domain id of Gmail phishing incidents.",
            "id": "DomainId",
            "properties": {
                "customerPrimaryDomain": {
                    "description": "The primary domain for the customer.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DomainWideTakeoutInitiated": {
            "description": "A takeout operation for the entire domain was initiated by an admin. Derived\nfrom audit logs.",
            "id": "DomainWideTakeoutInitiated",
            "properties": {
                "email": {
                    "description": "Email of the admin who initiated the takeout.",
                    "type": "string"
                },
                "takeoutRequestId": {
                    "description": "takeout request id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "ExternalFileSharingAnomaly": {
            "description": "A suspicious series of external file sharing by a single user.",
            "id": "ExternalFileSharingAnomaly",
            "properties": {
                "anomalyScore": {
                    "description": "The raw score (deviations above normal behavior).",
                    "format": "double",
                    "type": "number"
                },
                "confidence": {
                    "description": "The confidence of the incident generator that it has properly classified\nthe incident. Range is [0..1].",
                    "format": "double",
                    "type": "number"
                },
                "countsPerOwner": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "The number of affected files per owner.\nNote that this map is capped to 100 entries.",
                    "type": "object"
                },
                "email": {
                    "description": "The email of the user this incident was created for.",
                    "type": "string"
                },
                "explanations": {
                    "description": "The explanations for this alert.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxTime": {
                    "description": "The time of the latest addition to this incident.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "minTime": {
                    "description": "The earliest time which this incident took effect.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "numActions": {
                    "description": "The number of distinct user actions involved in this incident.",
                    "format": "int64",
                    "type": "string"
                },
                "numDocs": {
                    "description": "The number of files associated with this incident.",
                    "format": "int64",
                    "type": "string"
                },
                "numOwners": {
                    "description": "The number of owners for the associated files.",
                    "format": "int32",
                    "type": "integer"
                },
                "numPerType": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "Bucketizing the associated files by type.",
                    "type": "object"
                },
                "numPerUser": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "A map of involved users and the number of files they were involved with.\nNote that this map is capped to 100 entries.",
                    "type": "object"
                },
                "numPerViewer": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "A map of involved users and the number of files they accessed.\nNote that this map is capped to 100 entries.",
                    "type": "object"
                },
                "numWeeksSeen": {
                    "description": "The number of weeks this incident is still ongoing (1 for a new incident)",
                    "format": "int32",
                    "type": "integer"
                },
                "sampleDocs": {
                    "description": "A sample of docs such that all (users, types, owners) given above are\nrepresented by multiple samples.",
                    "items": {
                        "$ref": "DocInfo"
                    },
                    "type": "array"
                },
                "sharedUsers": {
                    "description": "The number of users that these documents are shared with.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FileAccessAnomaly": {
            "description": "A suspicious series of extraction events (download/copy/print) by a single\nuser.",
            "id": "FileAccessAnomaly",
            "properties": {
                "anomalyScore": {
                    "description": "The raw score (deviations above normal behavior).",
                    "format": "double",
                    "type": "number"
                },
                "countsPerOwner": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "The number of affected files per owner.",
                    "type": "object"
                },
                "email": {
                    "description": "The email of the user this incident was created for.",
                    "type": "string"
                },
                "explanations": {
                    "description": "The explanations for this alert.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "numActions": {
                    "description": "The number of distinct user actions involved in this incident. A single\naction may be responsible for multiple documents (for example if an action\nwas performed on a folder).",
                    "format": "int64",
                    "type": "string"
                },
                "numDocs": {
                    "description": "The number of files associated with this incident.",
                    "format": "int64",
                    "type": "string"
                },
                "numPerType": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "Bucketizing the associated files by type.",
                    "type": "object"
                },
                "numWeeksSeen": {
                    "description": "The number of weeks this incident is still ongoing (1 for a new incident).",
                    "format": "int32",
                    "type": "integer"
                },
                "sampleDocs": {
                    "description": "A sample of docs such that all (types, owners) given above are\nrepresented by multiple samples.",
                    "items": {
                        "$ref": "FileAccessDocInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FileAccessDocInfo": {
            "description": "Access/Usage information about a doc that was involved in this incident.",
            "id": "FileAccessDocInfo",
            "properties": {
                "fileId": {
                    "description": "The id of the file.",
                    "type": "string"
                },
                "numCopies": {
                    "description": "Counts of copy actions taken by the user on this doc.",
                    "format": "int32",
                    "type": "integer"
                },
                "numDownloads": {
                    "description": "Counts of download actions taken by the user on this doc.",
                    "format": "int32",
                    "type": "integer"
                },
                "numPrints": {
                    "description": "Counts of print actions taken by the user on this doc.",
                    "format": "int32",
                    "type": "integer"
                },
                "numShares": {
                    "description": "Counts of share actions taken by the user on this doc.",
                    "format": "int32",
                    "type": "integer"
                },
                "numViews": {
                    "description": "Counts of view actions taken by the user on this doc.",
                    "format": "int32",
                    "type": "integer"
                },
                "owner": {
                    "description": "The owner of the file.",
                    "type": "string"
                },
                "paramVisibility": {
                    "description": "The highest visibility setting on this doc during this incident.",
                    "type": "string"
                },
                "sharedDirectly": {
                    "description": "Whether this doc was shared directly with this user. False if the doc was\naccessed via open sharing settings or doc link.",
                    "type": "boolean"
                },
                "title": {
                    "description": "The title of the file.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FileSharingAnomaly": {
            "description": "Supported types are any of the following:\nDrive public oversharing\nDrive habitual sharing\nDrive internal oversharing",
            "id": "FileSharingAnomaly",
            "properties": {
                "anomalyScore": {
                    "description": "The raw score (deviations above normal behavior).",
                    "format": "double",
                    "type": "number"
                },
                "confidence": {
                    "description": "The confidence of the incident generator that it has properly classified\nthe incident. Range is [0..1].",
                    "format": "double",
                    "type": "number"
                },
                "countsPerOwner": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "The number of affected files per owner.\nNote that this map is capped to 100 entries.",
                    "type": "object"
                },
                "email": {
                    "description": "The email of the user this incident was created for.",
                    "type": "string"
                },
                "explanations": {
                    "description": "The explanations for this alert.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxTime": {
                    "description": "The time of the latest addition to this incident.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "minTime": {
                    "description": "The earliest time which this incident took effect.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "numActions": {
                    "description": "The number of distinct user actions involved in this incident.",
                    "format": "int64",
                    "type": "string"
                },
                "numDocs": {
                    "description": "The number of files associated with this incident.",
                    "format": "int64",
                    "type": "string"
                },
                "numOwners": {
                    "description": "The number of owners for the associated files.",
                    "format": "int32",
                    "type": "integer"
                },
                "numPerType": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "Bucketizing the associated files by type.",
                    "type": "object"
                },
                "numPerUser": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "A map of involved users and the number of files they were involved with.\nNote that this map is capped to 100 entries.",
                    "type": "object"
                },
                "numPerViewer": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "A map of involved users and the number of files they accessed.\nNote that this map is capped to 100 entries.",
                    "type": "object"
                },
                "numWeeksSeen": {
                    "description": "The number of weeks this incident is still ongoing (1 for a new incident)",
                    "format": "int32",
                    "type": "integer"
                },
                "sampleDocs": {
                    "description": "A sample of docs such that all (users, types, owners) given above are\nrepresented by multiple samples.",
                    "items": {
                        "$ref": "FileSharingDocInfo"
                    },
                    "type": "array"
                },
                "sharedUsers": {
                    "description": "The number of users that these documents are shared with.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FileSharingDocInfo": {
            "description": "Access/Usage information about a doc that was involved in this incident.",
            "id": "FileSharingDocInfo",
            "properties": {
                "externalRecipients": {
                    "description": "A list of external recipients given access to this doc by this incident.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "externalViewers": {
                    "description": "A subset of external_recipients who actually accessed the doc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fileId": {
                    "description": "The id of the file.",
                    "type": "string"
                },
                "owner": {
                    "description": "The owner of the file.",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the file.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GeneralAnomaly": {
            "description": "Details of a generic anomaly detection alert.",
            "id": "GeneralAnomaly",
            "properties": {
                "attachmentData": {
                    "$ref": "Attachment",
                    "description": "Optional. Model specific details for the alert."
                },
                "description": {
                    "description": "A detailed, freeform alert description.",
                    "type": "string"
                },
                "title": {
                    "description": "A one-line alert description.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GmailMessageInfo": {
            "description": "Details of a message in phishing spike incident.",
            "id": "GmailMessageInfo",
            "properties": {
                "attachmentsSha256Hash": {
                    "description": "SHA256 Hash of email's attachment and all MIME parts.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "date": {
                    "description": "The date the malicious email was sent.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "md5HashMessageBody": {
                    "description": "Hash of message body text.",
                    "type": "string"
                },
                "md5HashSubject": {
                    "description": "MD5 Hash of email's subject. (Only available for reported emails).",
                    "type": "string"
                },
                "messageBodySnippet": {
                    "description": "Snippet of the message body text. (Only available for reported emails)",
                    "type": "string"
                },
                "messageId": {
                    "description": "Message id.",
                    "type": "string"
                },
                "recipient": {
                    "description": "Recipient of this email.",
                    "type": "string"
                },
                "subjectText": {
                    "description": "Email subject text. (Only available for reported emails).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleOperations": {
            "description": "An incident reported by Google Operations for a G Suite application.",
            "id": "GoogleOperations",
            "properties": {
                "affectedUserEmails": {
                    "description": "List of emails which correspond to the users directly affected by the\nincident.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "attachmentData": {
                    "$ref": "Attachment",
                    "description": "Optional application-specific data for an incident, provided when the\nG Suite application which reported the incident cannot be completely\nrestored to a valid state."
                },
                "description": {
                    "description": "Detailed, freeform incident description.",
                    "type": "string"
                },
                "title": {
                    "description": "One-line incident description.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Incident": {
            "description": "An incident affecting a customer.\nAll fields are read-only once created.",
            "id": "Incident",
            "properties": {
                "createTime": {
                    "description": "Output only. The time this incident was created. Assigned by the server.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "customerId": {
                    "description": "Output only. The unique identifier of the Google account of the customer.",
                    "type": "string"
                },
                "data": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Optional. Specific data associated with this incident.\ne.g. google.apps.incident_center.v1alpha1.ExternalFileSharingAnomaly.",
                    "type": "object"
                },
                "endTime": {
                    "description": "Optional. The time this incident was no longer active. If provided, the\nend time must not be earlier than the start time. If not provided, the end\ntime will default to the start time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "incidentId": {
                    "description": "Output only. The unique identifier for the incident.",
                    "type": "string"
                },
                "securityInvestigationToolLink": {
                    "description": "Output only. An optional Security Investigation Tool query for this\nincident.",
                    "type": "string"
                },
                "source": {
                    "description": "Required. A unique identifier for the system that is reported the incident.\n\nSupported sources are any of the following:\n * \"Anomaly detection\"\n * \"Google Operations\"\n * \"Mobile device management\"\n * \"Gmail phishing\"\n * \"Domain wide takeout\"\n * \"Government attack warning\"\n * \"Google identity\"\n * \"Security Center rules\"",
                    "type": "string"
                },
                "startTime": {
                    "description": "Required. The time this incident became active.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "type": {
                    "description": "Required. The type of the incident.\n\nSupported types are any of the following:\n * \"Drive sharing\"\n * \"Drive download\"\n * \"Drive public oversharing\"\n * \"Drive habitual sharing\"\n * \"Drive internal oversharing\"\n * \"Suspicious message engagement\"\n * \"Google Operations\"\n * \"Device compromised\"\n * \"Suspicious activity\"\n * \"Customer takeout initiated\"\n * \"Government attack warning\"\n * \"Activity Rule\"\nLINT.IfChange\n * \"User reported phishing\"\n * \"Misconfigured whitelist\"\n * \"User reported spam spike\"\n * \"Suspicious message reported\"\n * \"Phishing reclassification\"\n * \"Malware reclassification\"\nLINT.ThenChange(//depot/google3/caribou/spam/alerts_generator/\\\n                alerts_generator_queries.py)\nLINT.IfChange\n * \"Suspicious login\"\n * \"Suspicious login (less secure app)\"\n * \"Suspicious programmatic login\"\n * \"User suspended\"\n * \"Leaked password\"\n * \"User suspended (suspicious activity)\"\n * \"User suspended (spam)\"\n * \"User suspended (spam through relay)\"\nLINT.ThenChange(//depot/google3/apps/albert/data/albert_enums.proto)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IncidentFeedback": {
            "description": "A customer feedback about an incident.",
            "id": "IncidentFeedback",
            "properties": {
                "createTime": {
                    "description": "Output only. The time this feedback was created. Assigned by the server.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "customerId": {
                    "description": "Output only. The unique identifier of the Google account of the customer.",
                    "type": "string"
                },
                "email": {
                    "description": "Output only. The email of the user that provided the feedback.",
                    "type": "string"
                },
                "feedbackId": {
                    "description": "Output only. A unique identifier for the feedback. When creating a new\nfeedback the system will assign one.",
                    "type": "string"
                },
                "incidentId": {
                    "description": "Output only. The incident identifier.",
                    "type": "string"
                },
                "type": {
                    "description": "Required. The type of the feedback.",
                    "enum": [
                        "INCIDENT_FEEDBACK_TYPE_UNSPECIFIED",
                        "NOT_USEFUL",
                        "SOMEWHAT_USEFUL",
                        "VERY_USEFUL"
                    ],
                    "enumDescriptions": [
                        "Feedback type is not specified.",
                        "Incident report is not useful.",
                        "Incident report is somewhat useful.",
                        "Incident report is very useful."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListIncidentFeedbackResponse": {
            "description": "Response message for an incident feedback listing request.",
            "id": "ListIncidentFeedbackResponse",
            "properties": {
                "feedback": {
                    "description": "The list of incident feedback.\nResult is ordered descending by creation time.",
                    "items": {
                        "$ref": "IncidentFeedback"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListIncidentsResponse": {
            "description": "Response message for an incident listing request.",
            "id": "ListIncidentsResponse",
            "properties": {
                "incidents": {
                    "description": "The list of incidents.",
                    "items": {
                        "$ref": "Incident"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "If not empty, indicates that there may be more incidents that match the\nrequest; this value can be passed in a new ListIncidentsRequest to get the\nnext page of values.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LoginDetails": {
            "description": "Details of the login action",
            "id": "LoginDetails",
            "properties": {
                "ipAddress": {
                    "description": "Optional. Human readable IP address (e.g., 11.22.33.44) that is\nassociated with the warning event.",
                    "type": "string"
                },
                "loginTime": {
                    "description": "Optional. The successful login time that is associated with the warning\nevent. This will not be present for blocked login attempts.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MailPhishing": {
            "description": "Incident for all phishing alerts with common payloads.\nSupported types are any of the following:\nUser reported phishing\nUser reported spam spike\nSuspicious message reported\nPhishing reclassification\nMalware reclassification",
            "id": "MailPhishing",
            "properties": {
                "domainId": {
                    "$ref": "DomainId",
                    "description": "Domain id."
                },
                "isInternal": {
                    "description": "If true, the email is originated from within the organization.",
                    "type": "boolean"
                },
                "maliciousEntity": {
                    "$ref": "MaliciousEntity",
                    "description": "Entity whose actions triggered a Gmail phishing incident."
                },
                "messages": {
                    "description": "Every incident could contain multiple messages.",
                    "items": {
                        "$ref": "GmailMessageInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MaliciousEntity": {
            "description": "Entity whose actions triggered a Gmail phishing incident.",
            "id": "MaliciousEntity",
            "properties": {
                "displayName": {
                    "description": "The header from display name.",
                    "type": "string"
                },
                "fromHeader": {
                    "description": "Sender email address.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PhishingSpike": {
            "description": "Incident for a spike in user reported phishing.\nThis will be deprecated in favor of MailPhishing.",
            "id": "PhishingSpike",
            "properties": {
                "domainId": {
                    "$ref": "DomainId",
                    "description": "Domain id."
                },
                "isInternal": {
                    "description": "If true, the email is originated from within the organization.",
                    "type": "boolean"
                },
                "maliciousEntity": {
                    "$ref": "MaliciousEntity",
                    "description": "Entity whose actions triggered a Gmail phishing incident."
                },
                "messages": {
                    "description": "Every incident could contain multiple messages.",
                    "items": {
                        "$ref": "GmailMessageInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RequestInfo": {
            "description": "Requests for one application that needs default SQL setup.",
            "id": "RequestInfo",
            "properties": {
                "appDeveloperEmail": {
                    "description": "List of app developers who triggered notifications for above\napplication.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "appKey": {
                    "description": "Required. The application that requires the SQL setup.",
                    "type": "string"
                },
                "numberOfRequests": {
                    "description": "Required. Number of requests sent for this application to set up default\nSQL instance.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StateSponsoredAttack": {
            "description": "A state sponsored attack alert. Derived from audit logs.",
            "id": "StateSponsoredAttack",
            "properties": {
                "email": {
                    "description": "The email of the user this incident was created for.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SuspiciousActivity": {
            "description": "A mobile suspicious activity alert. Derived from audit logs.",
            "id": "SuspiciousActivity",
            "properties": {
                "email": {
                    "description": "The email of the user this incident was created for.",
                    "type": "string"
                },
                "events": {
                    "description": "Required. List of security events.",
                    "items": {
                        "$ref": "SuspiciousActivitySecurityDetail"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SuspiciousActivitySecurityDetail": {
            "description": "Detailed information of a single MDM suspicious activity event.",
            "id": "SuspiciousActivitySecurityDetail",
            "properties": {
                "deviceId": {
                    "description": "Required. Device Info.",
                    "type": "string"
                },
                "deviceModel": {
                    "description": "The model of the device.",
                    "type": "string"
                },
                "deviceProperty": {
                    "description": "Device property which is changed.",
                    "type": "string"
                },
                "deviceType": {
                    "description": "The type of the device.",
                    "type": "string"
                },
                "iosVendorId": {
                    "description": "Required for IOS, empty for others.",
                    "type": "string"
                },
                "newValue": {
                    "description": "New value of the device property after change.",
                    "type": "string"
                },
                "oldValue": {
                    "description": "Old value of the device property before change.",
                    "type": "string"
                },
                "resourceId": {
                    "description": "The device resource id.",
                    "type": "string"
                },
                "serialNumber": {
                    "description": "The serial number of the device.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "G Suite Incident Center API (daily-2)",
    "version": "v1alpha1",
    "version_module": true
}