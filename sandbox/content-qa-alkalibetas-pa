{
    "basePath": "",
    "baseUrl": "https://qa-alkalibetas-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Alkali Betas",
    "description": "A single, unified platform for managing Betas across Google.",
    "discoveryVersion": "v1",
    "documentationLink": "http://go/alkali",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "qa_alkalibetas_pa_sandbox:v1",
    "kind": "discovery#restDescription",
    "name": "qa_alkalibetas_pa_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "betas": {
            "methods": {
                "list": {
                    "description": "Lists betas.",
                    "flatPath": "v1/betas",
                    "httpMethod": "GET",
                    "id": "qa_alkalibetas_pa_sandbox.betas.list",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/betas",
                    "response": {
                        "$ref": "ListBetasResponse"
                    }
                }
            }
        },
        "echo": {
            "methods": {
                "create": {
                    "description": "Responds back with same message.",
                    "flatPath": "v1/echo",
                    "httpMethod": "POST",
                    "id": "qa_alkalibetas_pa_sandbox.echo.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/echo",
                    "request": {
                        "$ref": "CreateEchoRequest"
                    },
                    "response": {
                        "$ref": "Echo"
                    }
                }
            }
        }
    },
    "revision": "20190917",
    "rootUrl": "https://qa-alkalibetas-pa.sandbox.googleapis.com/",
    "schemas": {
        "BetaMetaData": {
            "description": "Message for listing betas.",
            "id": "BetaMetaData",
            "properties": {
                "betaId": {
                    "description": "Primary key of the beta.",
                    "format": "int64",
                    "type": "string"
                },
                "endDate": {
                    "$ref": "Date",
                    "description": "End date of beta."
                },
                "name": {
                    "description": "Name of beta.",
                    "type": "string"
                },
                "serviceabilityLevel": {
                    "description": "Serviceability levels of beta.",
                    "enum": [
                        "SERVICEABILITY_LEVEL_UNKNOWN",
                        "S0",
                        "S1",
                        "S2",
                        "S3"
                    ],
                    "enumDescriptions": [
                        "Unknown serviceability level.",
                        "Reserved for specialized development\naimed at strategic publishers & early initiatives.",
                        "Reserved for high complexity initiatives that will likely require a fair\namount of back-and-forth with publisher for successful participation.",
                        "Reserved for mid complexity and stable initiatives ready to\nbe scaled out without massive technical complexity.",
                        "Reserved for simple, self-explanatory betas with minor changes to product\nbehavior."
                    ],
                    "type": "string"
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "Start date of beta."
                },
                "status": {
                    "description": "Status of beta.",
                    "enum": [
                        "STATUS_UNKNOWN",
                        "CANCELLED",
                        "EXPERIMENTING",
                        "FULLY_LAUNCHED",
                        "PAUSED",
                        "PENDING",
                        "PROCESS_MANAGEMENT",
                        "STARTED",
                        "UPCOMING"
                    ],
                    "enumDescriptions": [
                        "Unknown status of beta.",
                        "Applicable when beta is no longer active and all participants have the\nfeature disabled.",
                        "All users on the beta will be activated via an\nautomated serving experiment vs. manual implementation.",
                        "Indicates general availability of a beta.",
                        "Beta is no longer accepting new participants but existing beta participants\nmay still use the feature.",
                        "When beta initiative is currently being scoped but with no further details.",
                        "Allows sales to utilize betabot for managing their sales funnel after beta\nhas launched.",
                        "Users are expected to follow instructions on how to enable the feature once\napproved.",
                        "When beta initiative details have been finalized with a hard start date\navailable."
                    ],
                    "type": "string"
                },
                "updateTime": {
                    "description": "Timestamp at which beta was last updated.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateEchoRequest": {
            "description": "Echo request.",
            "id": "CreateEchoRequest",
            "properties": {
                "in": {
                    "description": "Input message to echo.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Date": {
            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
            "id": "Date",
            "properties": {
                "day": {
                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                    "format": "int32",
                    "type": "integer"
                },
                "year": {
                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Echo": {
            "description": "Echo response.",
            "id": "Echo",
            "properties": {
                "out": {
                    "description": "Echoed input message.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListBetasResponse": {
            "description": "Response message for listing betas.",
            "id": "ListBetasResponse",
            "properties": {
                "betas": {
                    "description": "The list of all betas.",
                    "items": {
                        "$ref": "BetaMetaData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Alkali Betas Private API (QA)",
    "version": "v1",
    "version_module": true
}