{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "View and manage your data across Google Cloud Platform services"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://dev-firebaseremoteconfig.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Firebase Remote Config",
    "description": "The Firebase Remote Config API lets developers change the behavior and appearance of their apps without requiring users to download an app update. It is an alternative to, but can be used in tandem with, the Firebase console at https://console.firebase.google.com.",
    "discoveryVersion": "v1",
    "documentationLink": "https://firebase.google.com/docs/remote-config/use-config-rest",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "firebaseremoteconfig:v1",
    "kind": "discovery#restDescription",
    "name": "firebaseremoteconfig",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "projects": {
            "methods": {
                "getRemoteConfig": {
                    "description": "Get a project's Remote Config template and associated ETag header.\nReturns the requested RemoteConfig as the payload and an ETag as a\nresponse header.",
                    "flatPath": "v1/projects/{projectsId}/remoteConfig",
                    "httpMethod": "GET",
                    "id": "firebaseremoteconfig.projects.getRemoteConfig",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Required. The Firebase project's Project ID or Project Number, prefixed\nwith \"projects/\".",
                            "location": "path",
                            "pattern": "^projects/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "versionNumber": {
                            "description": "Optional. Version number of the RemoteConfig to look up.\u00a0If not specified,\nthe latest RemoteConfig will be returned.",
                            "format": "int64",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/{+project}/remoteConfig",
                    "response": {
                        "$ref": "RemoteConfig"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "updateRemoteConfig": {
                    "description": "Publish a project's Remote Config template.\n\nPass the ETag returned by\nGetRemoteConfig\nas an `If-Match` header to ensure the last seen Remote Config template is\nthe one being overwritten by this update. Pass `If-Match: *` to force an\nupdate, regardless of the current version.\n\nReturns the published RemoteConfig and the updated ETag as a\nresponse header if successful, or an error.\n\nSee the publishing guide for a list of [error\ncodes](/docs/remote-config/use-config-rest#step_5_publish_json_data_to_replace_data_in_the_service).",
                    "flatPath": "v1/projects/{projectsId}/remoteConfig",
                    "httpMethod": "PUT",
                    "id": "firebaseremoteconfig.projects.updateRemoteConfig",
                    "parameterOrder": [
                        "project"
                    ],
                    "parameters": {
                        "project": {
                            "description": "Required. The Firebase project's Project ID or Project Number, prefixed\nwith \"projects/\".",
                            "location": "path",
                            "pattern": "^projects/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "validateOnly": {
                            "description": "Optional. Defaults to `false`. If `true`, the server will only attempt to\nvalidate the RemoteConfig. If validation succeeds, the RemoteConfig is\nnot written to the Remote Config server, instead a `200 OK` response is\nreturned. If validation fails, a validation error is returned.\n\nNote: other errors may still occur after this boolean is set to `false`,\neven if getting a `200 OK` when calling with UpdateRemoteConfig\nwith `validate_only` set to `true`.",
                            "location": "query",
                            "type": "boolean"
                        }
                    },
                    "path": "v1/{+project}/remoteConfig",
                    "request": {
                        "$ref": "RemoteConfig"
                    },
                    "response": {
                        "$ref": "RemoteConfig"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            },
            "resources": {
                "namespaces": {
                    "methods": {
                        "fetch": {
                            "description": "Fetch parameter values and any Firebase A/B Testing experiment information\nfor the calling device. An ETag header is also returned. Pass the ETag in\nfuture requests via the `If-None-Match` header to save bandwidth.\n\nNOTE: The Fetch REST API requires an Instance ID to be populated in the\nrequest. The Instance ID can obtained from the IID SDK. See\nhttps://firebase.google.com/docs/reference/android/com/google/firebase/iid/FirebaseInstanceId\nand\nhttps://firebase.google.com/docs/reference/ios/firebaseinstanceid/api/reference/Classes/FIRInstanceID",
                            "flatPath": "v1/projects/{project}/namespaces/{namespace}:fetch",
                            "httpMethod": "POST",
                            "id": "firebaseremoteconfig.projects.namespaces.fetch",
                            "parameterOrder": [
                                "project",
                                "namespace"
                            ],
                            "parameters": {
                                "namespace": {
                                    "description": "Required. The string \"firebase\".",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                },
                                "project": {
                                    "description": "Required. The Firebase project ID or project number.\n(NOTE: These identifiers can be retrieved from the Firebase console.)",
                                    "location": "path",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/projects/{project}/namespaces/{namespace}:fetch",
                            "request": {
                                "$ref": "FetchRemoteConfigRequest"
                            },
                            "response": {
                                "$ref": "FetchRemoteConfigResponse"
                            }
                        }
                    }
                },
                "remoteConfig": {
                    "methods": {
                        "listVersions": {
                            "description": "Get a list of Remote Config template\nversions that have been\npublished, sorted in reverse chronological order.\n\nOnly the last 300 versions are stored.\n\nAll versions that correspond to non-active Remote Config templates (i.e.,\nall except the template that is being fetched by clients) are also\ndeleted if they are older than 90 days.",
                            "flatPath": "v1/projects/{projectsId}/remoteConfig:listVersions",
                            "httpMethod": "GET",
                            "id": "firebaseremoteconfig.projects.remoteConfig.listVersions",
                            "parameterOrder": [
                                "project"
                            ],
                            "parameters": {
                                "endTime": {
                                    "description": "Optional. Specify the latest update time to include in the results; any\nentries updated on or after this time are omitted.",
                                    "format": "google-datetime",
                                    "location": "query",
                                    "type": "string"
                                },
                                "endVersionNumber": {
                                    "description": "Optional. Specify the newest version number to include in the results. If\nspecified, must be greater than zero. Defaults to the newest version.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Optional. The maximum number of items to return per page.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "Optional. The next_page_token value returned from a previous List request,\nif any.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "project": {
                                    "description": "Required. The Firebase project's Project ID or Project Number, prefixed\nwith \"projects/\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "startTime": {
                                    "description": "Optional. Specify the earliest update time to include in the results; any\nentries updated before this time are omitted.",
                                    "format": "google-datetime",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+project}/remoteConfig:listVersions",
                            "response": {
                                "$ref": "ListVersionsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "rollback": {
                            "description": "Roll back a project's published Remote Config template to the one\nspecified by the provided version number.\n\nA rollback is equivalent to getting a previously published Remote Config\ntemplate, and re-publishing it using a force update. Returns the published\nRemoteConfig and the updated ETag as a response header if successful, or an\nerror.\n\nSee the publishing guide for a list of [error\ncodes](/docs/remote-config/use-config-rest#step_5_publish_json_data_to_replace_data_in_the_service).\nIn particular, note that the method returns an error with HTTP Status 404\nif the requested\nversion_number\nto rollback to is not found.",
                            "flatPath": "v1/projects/{projectsId}/remoteConfig:rollback",
                            "httpMethod": "POST",
                            "id": "firebaseremoteconfig.projects.remoteConfig.rollback",
                            "parameterOrder": [
                                "project"
                            ],
                            "parameters": {
                                "project": {
                                    "description": "Required. The Firebase project's Project ID or Project Number, prefixed\nwith \"projects/\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+project}/remoteConfig:rollback",
                            "request": {
                                "$ref": "RollbackRemoteConfigRequest"
                            },
                            "response": {
                                "$ref": "RemoteConfig"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    }
                }
            }
        }
    },
    "revision": "20190920",
    "rootUrl": "https://dev-firebaseremoteconfig.sandbox.googleapis.com/",
    "schemas": {
        "ExperimentDescription": {
            "description": "Encapsulates per-experiment data.",
            "id": "ExperimentDescription",
            "properties": {
                "experimentId": {
                    "description": "The Firebase A/B Testing experiment ID.\nA string of max length 22 characters.",
                    "type": "string"
                },
                "experimentStartTime": {
                    "description": "When the experiment was started.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "timeToLiveMillis": {
                    "description": "How long the experiment can remain in ON state. Valid range from 1 ms to 6\nmonths.",
                    "format": "int64",
                    "type": "string"
                },
                "triggerEvent": {
                    "description": "The Google Analytics event that activates the experiment.",
                    "type": "string"
                },
                "triggerTimeoutMillis": {
                    "description": "How long the experiment can remain in STANDBY state. Valid range from 1 ms\nto 6 months.",
                    "format": "int64",
                    "type": "string"
                },
                "variantId": {
                    "description": "The variant of the experiment assigned to the app instance.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FetchRemoteConfigRequest": {
            "description": "*\nA request to render parameter values from the current RemoteConfig template\nand Firebase A/B Testing experiments.",
            "id": "FetchRemoteConfigRequest",
            "properties": {
                "analyticsUserProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional - List of Analytics user properties.",
                    "type": "object"
                },
                "appId": {
                    "description": "Required. If not specified, fetch will return 400 (Bad Request).\nGMP App id.",
                    "type": "string"
                },
                "appInstanceId": {
                    "description": "Required. The instance id of the app.\nIf unspecified, fetch will return 400 (Bad Request).\nRefer to https://firebase.google.com/support/privacy/manage-iids.",
                    "type": "string"
                },
                "appInstanceIdToken": {
                    "description": "Required. The instance id token of the app, which is retrieved using the default\nscope.\nIf omitted and the template has any percentile conditions, they will be\nevaluated to false. If specified incorrectly, can lead to a 401 response\ncode (Unauthorized).",
                    "type": "string"
                },
                "appVersion": {
                    "description": "Optional - If omitted and the template has any conditions that depend\non app_version, they will be evaluated as false.\nApp version, using the native app version format on the client's OS.\nExamples: 0, 123, 0123, 1.2.3, 001.33.043.321.55 .",
                    "type": "string"
                },
                "countryCode": {
                    "description": "Optional - If omitted and the template has any conditions that depend\non country_code, they will be evaluated as false.\nShould be 2 lower-case letters, e.g. \"us\", \"tr\", or \"gb\", as defined in\nISO 3166-1 alpha-2. This is case-insensitive.  See\nhttps://www.iso.org/obp/ui/#search .",
                    "type": "string"
                },
                "languageCode": {
                    "description": "Optional - If omitted and the template has any conditions that depend on\nlocale, they will be evaluated as false. The default locale of the device,\nin BCP47 format, for example \"en-US\". This is case-insensitive.  See\nhttps://www.w3.org/International/core/langtags/rfc3066bis.html .",
                    "type": "string"
                },
                "packageName": {
                    "description": "Optional - If omitted, the project's default package will be fetched.\nName of the package for which we are fetching data from. Should\nmatch the app name for Android apps, or the corresponding entity (e.g.\nbundle name) for iOS apps.",
                    "type": "string"
                },
                "platformVersion": {
                    "description": "Optional - If omitted and the template has any conditions that depend\non platform version, they will be evaluated as false.\nThe version string of the device, e.g. \"21\" for (Android) Lollipop, or\n(for iOS) three non-negative, period separated integers, e.g. \"9.0.0\".",
                    "type": "string"
                },
                "sdkVersion": {
                    "description": "Optional - Version of the Firebase Remote Config SDK. This number is\nhard-coded into each client.",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Optional - If omitted and the template has any conditions that depend\non timezone, they will be evaluated as false.\nThe timezone id of the device, in Olson Id format, e.g.\n\"America/Los_Angeles\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FetchRemoteConfigResponse": {
            "description": "*\nThe Firebase Remote Config configuration data for an app instance.",
            "id": "FetchRemoteConfigResponse",
            "properties": {
                "activeRollouts": {
                    "description": "Metadata associated with any currently active Firebase Feature Rollouts\nthat target the device. Only\nFeatures that are\nbeing rolled-out at fetch time (i.e., have not been archived) would have a\ncorresponding RemoteConfigClientRollout object set.",
                    "items": {
                        "$ref": "RemoteConfigClientRollout"
                    },
                    "type": "array"
                },
                "appName": {
                    "description": "For Android apps, app_name is the package name of the app.\nFor iOS apps, it is the bundle name.",
                    "type": "string"
                },
                "enabledFeatureKeys": {
                    "description": "The keys of all enabled\nFeatures for the\ndevice.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "entries": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Key-Value pairs of the config.",
                    "type": "object"
                },
                "experimentDescriptions": {
                    "description": "Firebase A/B Testing experiment configuration and metadata.",
                    "items": {
                        "$ref": "ExperimentDescription"
                    },
                    "type": "array"
                },
                "state": {
                    "description": "The state of the fetched response.",
                    "enum": [
                        "INSTANCE_STATE_UNSPECIFIED",
                        "UPDATE",
                        "NO_TEMPLATE",
                        "NO_CHANGE",
                        "EMPTY_CONFIG"
                    ],
                    "enumDescriptions": [
                        "Default (when the enum is not set by the server for any reason).",
                        "The Remote Config parameter values and/or the Firebase A/B Testing\nexperiments differ from the last fetch.",
                        "No template defined.",
                        "The Remote Config parameter values and Firebase A/B Testing experiments\nboth match those returned during the last fetch.",
                        "Template found, but evaluates to empty (e.g. all keys omitted)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListVersionsResponse": {
            "description": "Contains a paginated list of\nversions of the RemoteConfig.",
            "id": "ListVersionsResponse",
            "properties": {
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
                    "type": "string"
                },
                "versions": {
                    "description": "A list of version metadata objects, sorted in reverse chronological order.",
                    "items": {
                        "$ref": "Version"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RemoteConfig": {
            "description": "A RemoteConfig represents a Remote Config template.\n\nA project's Remote Config template is evaluated during each application\ninstance's fetch.\n\nThe resolved value of a parameter is determined as\nfollows:\n\nGiven the conditional values\nthat refer to `true` conditions for the application\ninstance, the parameter's resolved value is the conditional value whose\nname is the\nearliest in the conditions list.\n\nElse, if the parameter has a default value, the\nresolved value is set to the default value.\n\nElse, the parameter has no value and is omitted from the result that the\napplication instance fetches.\n\nFor example, assume we have parameter key `fruit`, with default value `pear`\nand conditional value submap `{\"is_ios\": \"apple\", \"is_in_20_percent\":\n\"banana\"}` where `\"is_ios\"` and `\"is_20_percent\"` are names of conditions in\nthe ordered condition list. The value of `fruit` would evaluate to `apple` if\n`is_ios` is true. Otherwise, if `is_in_20_percent` is `true`, `fruit` would\nevaluate to `banana`, and if `is_ios` and `is_in_20_percent` are both false,\n`fruit` would evaluate to `pear`. If no default value were specified, and\n`is_ios` and `is_in_20_percent` were both false, no value for `fruit` would\nbe returned from the Remote Config server to the client.\n\nOnce a project's Remote Config template has been published via a successful\nUpdateRemoteConfig\ncall, clients can fetch these parameter values and display them to users.",
            "id": "RemoteConfig",
            "properties": {
                "conditions": {
                    "description": "A list of conditions in descending order by priority.\n\nThe values of the\ngoogle.firebase.remoteconfig.v1.RemoteConfigCondition.name entries\nmust be unique.",
                    "items": {
                        "$ref": "RemoteConfigCondition"
                    },
                    "type": "array"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "RemoteConfigParameter"
                    },
                    "description": "Map of parameter keys to their optional default values and optional\nconditional values.",
                    "type": "object"
                },
                "version": {
                    "$ref": "Version",
                    "description": "Output only, except for the version description. Metadata\nassociated with a particular version of a template. A version's description\nfield may be specified in\nUpdateRemoteConfig\ncalls."
                }
            },
            "type": "object"
        },
        "RemoteConfigClientRollout": {
            "description": "Metadata associated with a Feature Rollout.",
            "id": "RemoteConfigClientRollout",
            "properties": {
                "featureEnabled": {
                    "description": "True if the feature is enabled on the device.",
                    "type": "boolean"
                },
                "featureKey": {
                    "description": "The key of the\nFeature associated\nwith this Rollout.",
                    "type": "string"
                },
                "rollout": {
                    "description": "The full resource name of a Firebase Feature Rollout.\ne.g. projects/<project-number>/rollouts/<rollout-id>.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RemoteConfigCondition": {
            "description": "A condition targeting a specific group of users. A\nlist of these conditions make up part of a RemoteConfig object.",
            "id": "RemoteConfigCondition",
            "properties": {
                "expression": {
                    "description": "Required. The logic of this condition.\n\nSee the documentation regarding\n[Condition\nExpressions](/docs/remote-config/condition-reference)\nfor the expected syntax of this field.",
                    "type": "string"
                },
                "name": {
                    "description": "Required. A non-empty and unique name of this condition.",
                    "type": "string"
                },
                "tagColor": {
                    "description": "Optional. The color associated with this condition for display purposes in the\nFirebase Console.\nNot specifying this value or having \"CONDITION_DISPLAY_COLOR_UNSPECIFIED\"\nresults in the Console picking an arbitrary color to associate with the\ncondition.",
                    "enum": [
                        "CONDITION_DISPLAY_COLOR_UNSPECIFIED",
                        "BLUE",
                        "BROWN",
                        "CYAN",
                        "DEEP_ORANGE",
                        "GREEN",
                        "INDIGO",
                        "LIME",
                        "ORANGE",
                        "PINK",
                        "PURPLE",
                        "TEAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "Blue",
                        "Brown",
                        "Cyan",
                        "aka \"Red Orange\"",
                        "Green",
                        "Indigo",
                        "Lime",
                        "Orange",
                        "Pink",
                        "Purple",
                        "Teal"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RemoteConfigParameter": {
            "description": "A parameter value associated with a parameter key in\ngoogle.firebase.remoteconfig.v1.RemoteConfig.parameters.\n\nAt minimum, a `default_value` or a `conditional_values` entry should be\npresent for the parameter to have any effect.",
            "id": "RemoteConfigParameter",
            "properties": {
                "conditionalValues": {
                    "additionalProperties": {
                        "$ref": "RemoteConfigParameterValue"
                    },
                    "description": "Optional - a (condition\nname, value)\nmap. The condition_name of the highest priority (the one listed first in\nthe RemoteConfig's conditions list) determines the value of this parameter.",
                    "type": "object"
                },
                "defaultValue": {
                    "$ref": "RemoteConfigParameterValue",
                    "description": "Optional - value to set the parameter to, when none of the named conditions\nevaluate to `true`."
                },
                "description": {
                    "description": "Optional. A description for this Parameter. Its length must be less than or equal to\n100 characters . A description may contain any Unicode characters.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RemoteConfigParameterValue": {
            "description": "A RemoteConfigParameterValue resource contains the value that a parameter may\nhave.",
            "id": "RemoteConfigParameterValue",
            "properties": {
                "useInAppDefault": {
                    "description": "If true, the parameter is omitted from the parameter values returned\nto a client.",
                    "type": "boolean"
                },
                "value": {
                    "description": "The string value that the parameter is set to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RemoteConfigUser": {
            "description": "All the fields associated with the person/service account that wrote a\nRemote Config template.",
            "id": "RemoteConfigUser",
            "properties": {
                "email": {
                    "description": "Output only. Email address.",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "Output only. Image URL.",
                    "type": "string"
                },
                "name": {
                    "description": "Output only. Display name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RollbackRemoteConfigRequest": {
            "description": "Replace the published Remote Config template with an earlier version.",
            "id": "RollbackRemoteConfigRequest",
            "properties": {
                "versionNumber": {
                    "description": "Required. The version number of the RemoteConfig to roll back to. The\nspecified version number must be less than the current version number, and\nnot have been deleted due to staleness.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Version": {
            "description": "Contains all metadata about a particular version of the Remote Config\ntemplate.\n\nAll fields are set at the time the specified Remote Config template was\nwritten.",
            "id": "Version",
            "properties": {
                "description": {
                    "description": "Optional. The user-provided description of the corresponding Remote Config\ntemplate",
                    "type": "string"
                },
                "isLegacy": {
                    "description": "Output only. `True` if this Remote Config template was published before\nversion history was supported.",
                    "type": "boolean"
                },
                "rollbackSource": {
                    "description": "Output only. Only present if this version is the result of a rollback, and\nwill be the version number of the Remote Config template that was\nrolled-back to.",
                    "format": "int64",
                    "type": "string"
                },
                "updateOrigin": {
                    "description": "Output only. Where the update action originated.",
                    "enum": [
                        "REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED",
                        "CONSOLE",
                        "REST_API"
                    ],
                    "enumDescriptions": [
                        "Catch-all for unrecognized values.",
                        "The update came from the Firebase UI.",
                        "The update came from the Remote Config REST API."
                    ],
                    "type": "string"
                },
                "updateTime": {
                    "description": "Output only. When the Remote Config template was written to the Remote\nConfig server.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "updateType": {
                    "description": "Output only. What type of update was made.",
                    "enum": [
                        "REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED",
                        "INCREMENTAL_UPDATE",
                        "FORCED_UPDATE",
                        "ROLLBACK"
                    ],
                    "enumDescriptions": [
                        "Catch-all for unrecognized enum values.",
                        "A regular incremental update.",
                        "A forced update. The ETag was specified as \"*\" in an\nUpdateRemoteConfigRequest\nrequest or the \"Force Update\" button was pressed on the console.",
                        "A rollback to a previous Remote Config template."
                    ],
                    "type": "string"
                },
                "updateUser": {
                    "$ref": "RemoteConfigUser",
                    "description": "Output only. Aggregation of all metadata fields about the account that\nperformed the update."
                },
                "versionNumber": {
                    "description": "Output only. The version number of the version's corresponding\nRemote Config template.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Firebase Remote Config Frontend Dev API",
    "version": "v1",
    "version_module": true
}