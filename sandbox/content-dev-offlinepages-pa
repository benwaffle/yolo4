{
    "basePath": "",
    "baseUrl": "https://dev-offlinepages-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Offline Pages",
    "description": "An API to generate web page archives suitable for offline viewing in Chrome.",
    "discoveryVersion": "v1",
    "documentationLink": "http://go/chrome-offline-pages-api",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "dev_offlinepages_pa_sandbox:v1",
    "kind": "discovery#restDescription",
    "name": "dev_offlinepages_pa_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "media": {
            "methods": {
                "download": {
                    "description": "Downloads media. Download is supported\non the URI `/v1/media/{+name}?alt=media`.",
                    "flatPath": "v1/media/{mediaId}",
                    "httpMethod": "GET",
                    "id": "dev_offlinepages_pa_sandbox.media.download",
                    "parameterOrder": [
                        "resourceName"
                    ],
                    "parameters": {
                        "resourceName": {
                            "description": "Name of the media that is being downloaded.  See\nReadRequest.resource_name.",
                            "location": "path",
                            "pattern": "^.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/media/{+resourceName}",
                    "response": {
                        "$ref": "Media"
                    },
                    "supportsMediaDownload": true
                },
                "upload": {
                    "description": "Uploads media. Upload is supported on\nthe URI `/upload/v1/media/{+name}`.",
                    "flatPath": "v1/media/{mediaId}",
                    "httpMethod": "POST",
                    "id": "dev_offlinepages_pa_sandbox.media.upload",
                    "mediaUpload": {
                        "accept": [
                            "*/*"
                        ],
                        "protocols": {
                            "simple": {
                                "multipart": true,
                                "path": "/upload/v1/media/{+resourceName}"
                            }
                        }
                    },
                    "parameterOrder": [
                        "resourceName"
                    ],
                    "parameters": {
                        "resourceName": {
                            "description": "Name of the media that is being downloaded.  See\nReadRequest.resource_name.",
                            "location": "path",
                            "pattern": "^.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/media/{+resourceName}",
                    "request": {
                        "$ref": "Media"
                    },
                    "response": {
                        "$ref": "Media"
                    },
                    "supportsMediaUpload": true
                }
            }
        },
        "operations": {
            "methods": {
                "cancel": {
                    "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
                    "flatPath": "v1/operations/{operationsId}:cancel",
                    "httpMethod": "POST",
                    "id": "dev_offlinepages_pa_sandbox.operations.cancel",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource to be cancelled.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:cancel",
                    "request": {
                        "$ref": "CancelOperationRequest"
                    },
                    "response": {
                        "$ref": "Empty"
                    }
                },
                "delete": {
                    "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
                    "flatPath": "v1/operations/{operationsId}",
                    "httpMethod": "DELETE",
                    "id": "dev_offlinepages_pa_sandbox.operations.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource to be deleted.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Empty"
                    }
                },
                "get": {
                    "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                    "flatPath": "v1/operations/{operationsId}",
                    "httpMethod": "GET",
                    "id": "dev_offlinepages_pa_sandbox.operations.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Operation"
                    }
                },
                "list": {
                    "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
                    "flatPath": "v1/operations",
                    "httpMethod": "GET",
                    "id": "dev_offlinepages_pa_sandbox.operations.list",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "The standard list filter.",
                            "location": "query",
                            "type": "string"
                        },
                        "name": {
                            "description": "The name of the operation's parent resource.",
                            "location": "path",
                            "pattern": "^operations$",
                            "required": true,
                            "type": "string"
                        },
                        "pageSize": {
                            "description": "The standard list page size.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "The standard list page token.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "ListOperationsResponse"
                    }
                }
            }
        },
        "v1": {
            "methods": {
                "generatePageBundle": {
                    "description": "Request a set of pages to be returned in a format suitable for offline\nviewing.",
                    "flatPath": "v1:GeneratePageBundle",
                    "httpMethod": "POST",
                    "id": "dev_offlinepages_pa_sandbox.generatePageBundle",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1:GeneratePageBundle",
                    "request": {
                        "$ref": "GeneratePageBundleRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    }
                }
            }
        }
    },
    "revision": "20190917",
    "rootUrl": "https://dev-offlinepages-pa.sandbox.googleapis.com/",
    "schemas": {
        "Archive": {
            "description": "A resource containing one or more serialized offline pages.",
            "id": "Archive",
            "properties": {
                "bodyLength": {
                    "description": "Length of the body in bytes on the wire, not including HTTP response\nheaders. Note that this is counted after HTTP content encoding. So, for\nexample, with output_format MHTML and Content-Encoding gzip, body_length is\nthe size of the MHTML after gzip compression.",
                    "format": "int64",
                    "type": "string"
                },
                "bodyName": {
                    "description": "Resource name for the body which can be read via the ByteStream API.\nThis resource will remain available for a minimum of 24 hours after the\nGeneratePageBundle request.",
                    "type": "string"
                },
                "outputFormat": {
                    "description": "Format of the body.",
                    "enum": [
                        "FORMAT_UNSPECIFIED",
                        "FORMAT_MHTML"
                    ],
                    "enumDescriptions": [
                        "Format not specified.",
                        "An MHTML archive containing a single web page."
                    ],
                    "type": "string"
                },
                "pageInfos": {
                    "description": "Information about the individual page(s) used to create the Archive.\nThere will be one PageInfo message for every page in the archive, including\nthose that encountered an error or were elided due to size considerations.",
                    "items": {
                        "$ref": "PageInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CancelOperationRequest": {
            "description": "The request message for Operations.CancelOperation.",
            "id": "CancelOperationRequest",
            "properties": {},
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "GeneratePageBundleRequest": {
            "description": "Request to return a list of pages in a format suitable for offline viewing.",
            "id": "GeneratePageBundleRequest",
            "properties": {
                "browserLanguages": {
                    "description": "Preferred browser language(s) as defined by\n[IETF BCP 47](https://tools.ietf.org/html/bcp47).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gcmRegistrationId": {
                    "description": "The GCM registration ID that can be used to inform the client\nof LRO completion.",
                    "type": "string"
                },
                "maxBundleSizeBytes": {
                    "description": "Maximum total size of generated pages on the wire, not including HTTP\nresponse headers. Note that this is counted after HTTP content encoding.\nThe first page in the pages list that would exceed this size is omitted\nfrom the bundle, as well as all subsequent pages in the pages list.",
                    "format": "int64",
                    "type": "string"
                },
                "outputFormat": {
                    "description": "Desired format of the web page archive(s).",
                    "enum": [
                        "FORMAT_UNSPECIFIED",
                        "FORMAT_MHTML"
                    ],
                    "enumDescriptions": [
                        "Format not specified.",
                        "An MHTML archive containing a single web page."
                    ],
                    "type": "string"
                },
                "pages": {
                    "description": "List of individual page requests, in order of priority. At most 100 pages\nmay be requested at a time.",
                    "items": {
                        "$ref": "PageParameters"
                    },
                    "type": "array"
                },
                "userAgent": {
                    "description": "The client's browser's user agent string.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListOperationsResponse": {
            "description": "The response message for Operations.ListOperations.",
            "id": "ListOperationsResponse",
            "properties": {
                "nextPageToken": {
                    "description": "The standard List next-page token.",
                    "type": "string"
                },
                "operations": {
                    "description": "A list of operations that matches the specified filter in the request.",
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Media": {
            "description": "Media resource.",
            "id": "Media",
            "properties": {
                "resourceName": {
                    "description": "Name of the media resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
            "id": "Operation",
            "properties": {
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "error": {
                    "$ref": "Status",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "metadata": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "type": "object"
                },
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
                    "type": "string"
                },
                "response": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PageBundle": {
            "description": "Response to the GeneratePageBundle request.",
            "id": "PageBundle",
            "properties": {
                "archives": {
                    "description": "The list of archives in the bundle. The distribution of pages into archives\nis arbitrary.",
                    "items": {
                        "$ref": "Archive"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PageInfo": {
            "description": "Information about a single returned offline page.",
            "id": "PageInfo",
            "properties": {
                "redirectUrl": {
                    "description": "The final URL after redirects. Empty if the final URL is url.",
                    "type": "string"
                },
                "renderTime": {
                    "description": "Time the page was rendered.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "$ref": "Status",
                    "description": "Status of the render attempt. If status.code != OK, fields below this will\nbe unset. If the operation is still running, status is NotFound to\nindicate the page is still being processed.\nIf the page was not returned due to bundle size limits, status is\nFailedPrecondition. If the page failed to render for any other reason,\nstatus is Unknown."
                },
                "transformation": {
                    "description": "Transformation that was applied to the page.",
                    "enum": [
                        "TRANSFORMATION_UNSPECIFIED",
                        "NO_TRANSFORMATION"
                    ],
                    "enumDescriptions": [
                        "Transformation not specified.",
                        "Minimal transformation required to provide an offline-accessible web page."
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "The URL of the page that was rendered.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PageParameters": {
            "description": "Request a set of pages to be returned in a format suitable for offline\nviewing.",
            "id": "PageParameters",
            "properties": {
                "transformation": {
                    "description": "Transformation to apply. Must not be TRANSFORMATION_UNSPECIFIED.",
                    "enum": [
                        "TRANSFORMATION_UNSPECIFIED",
                        "NO_TRANSFORMATION"
                    ],
                    "enumDescriptions": [
                        "Transformation not specified.",
                        "Minimal transformation required to provide an offline-accessible web page."
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "URL of the web page to return.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "id": "Status",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Chrome Offline Pages Private API",
    "version": "v1",
    "version_module": true
}