{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "View and manage your data across Google Cloud Platform services"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://test-scorecard.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Scorecard Test",
    "description": "Records, processes, and searches continuous integration data.",
    "discoveryVersion": "v1",
    "documentationLink": "http://go/upsalite",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "scorecard:v1",
    "kind": "discovery#restDescription",
    "name": "scorecard",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "continuousbuilds": {
            "methods": {
                "getRedirect": {
                    "description": "Returns a link to the most recent, completed build in the given\nContinuousBuild. If the user has read access, returns the unobfuscated\nbuild details page. If the user does not have read access and anonymous\naccess is enabled, returns the obfuscated build details page. Otherwise,\nthrows 401 (unauthorized).",
                    "flatPath": "v1/continuousbuilds/{continuousbuildsId}:redirect",
                    "httpMethod": "GET",
                    "id": "scorecard.continuousbuilds.getRedirect",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Of the form: \"continuousbuilds/some-cbuild-id\"",
                            "location": "path",
                            "pattern": "^continuousbuilds/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:redirect",
                    "response": {
                        "$ref": "GetBadgeRedirectResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "getStatus": {
                    "description": "Returns the status of the most recent, completed build in a continuous\nbuild without requiring the project id. If the project id is known, use\nGetContinuousBuildResult.",
                    "flatPath": "v1/continuousbuilds/{continuousbuildsId}:status",
                    "httpMethod": "GET",
                    "id": "scorecard.continuousbuilds.getStatus",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Of the form: \"continuousbuilds/some-cbuild-id\"",
                            "location": "path",
                            "pattern": "^continuousbuilds/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:status",
                    "response": {
                        "$ref": "GetContinuousBuildStatusResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        },
        "projects": {
            "methods": {
                "getMetadata": {
                    "description": "Get the project metadata stored for the identified project (if any).",
                    "flatPath": "v1/projects/{projectsId}:metadata",
                    "httpMethod": "GET",
                    "id": "scorecard.projects.getMetadata",
                    "parameterOrder": [
                        "projectId"
                    ],
                    "parameters": {
                        "projectId": {
                            "location": "path",
                            "pattern": "^projects/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+projectId}:metadata",
                    "response": {
                        "$ref": "GetProjectMetadataResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            },
            "resources": {
                "builds": {
                    "methods": {
                        "getResult": {
                            "description": "Get a result for a single GCB Build. Does not accept any ID other than\nthat of a GCB Build.",
                            "flatPath": "v1/projects/{projectsId}/builds/{buildsId}/result",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.builds.getResult",
                            "parameterOrder": [
                                "buildId"
                            ],
                            "parameters": {
                                "buildId": {
                                    "description": "The unique ID of the GCB Build whose result is to be retrieved.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/builds/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+buildId}/result",
                            "response": {
                                "$ref": "GetBuildResultResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    },
                    "resources": {
                        "result": {
                            "methods": {
                                "getAnonymous": {
                                    "description": "Get a result for a single GCB Build sanitized for anonymous access.",
                                    "flatPath": "v1/projects/{projectsId}/builds/{buildsId}/result:anonymous",
                                    "httpMethod": "GET",
                                    "id": "scorecard.projects.builds.result.getAnonymous",
                                    "parameterOrder": [
                                        "buildId"
                                    ],
                                    "parameters": {
                                        "buildId": {
                                            "description": "The unique ID of the GCB Build whose result is to be retrieved.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/builds/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/{+buildId}/result:anonymous",
                                    "response": {
                                        "$ref": "GetBuildResultResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            }
                        }
                    }
                },
                "continuousbuilds": {
                    "methods": {
                        "check": {
                            "description": "Rpc that returns default response if user can view the requested\nContinuousBuild. Continuous Builds.",
                            "flatPath": "v1/projects/{projectsId}/continuousbuilds/{continuousbuildsId}:check",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.continuousbuilds.check",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The string payload containing the project and ContinuousBuild ids.\nOf the form:\n`projects/<project_id>/continuousbuilds/<continuous_build_id>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/continuousbuilds/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}:check",
                            "response": {
                                "$ref": "CheckContinuousBuildAccessResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "create": {
                            "description": "Creates a ContinuousBuild row in the Spanner table and returns the fully\nconstructed ContinuousBuild.",
                            "flatPath": "v1/projects/{projectsId}/continuousbuilds",
                            "httpMethod": "POST",
                            "id": "scorecard.projects.continuousbuilds.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "The consumer Cloud project parent owning the ContinuousBuild.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+parent}/continuousbuilds",
                            "request": {
                                "$ref": "ContinuousBuild"
                            },
                            "response": {
                                "$ref": "ContinuousBuild"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "delete": {
                            "description": "Deletes the stored ContinuousBuild corresponding to the given Cloud project\nand ContinuousBuild ids.",
                            "flatPath": "v1/projects/{projectsId}/continuousbuilds/{continuousbuildsId}",
                            "httpMethod": "DELETE",
                            "id": "scorecard.projects.continuousbuilds.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The string containing the project and ContinuousBuild ids.\nOf the form:\n`projects/<project_id>/continuousbuilds/<continuous_build_id>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/continuousbuilds/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "get": {
                            "description": "Returns the ContinuousBuild for the given (Project, ContinuousBuild) id\npair in the request.",
                            "flatPath": "v1/projects/{projectsId}/continuousbuilds/{continuousbuildsId}",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.continuousbuilds.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The string containing the project and ContinuousBuild ids.\nOf the form:\n`projects/<project_id>/continuousbuilds/<continuous_build_id>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/continuousbuilds/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}",
                            "response": {
                                "$ref": "ContinuousBuild"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "getResult": {
                            "description": "Returns a ContinuousBuildResult for the given (Project, ContinuousBuild)\npair in the request.",
                            "flatPath": "v1/projects/{projectsId}/continuousbuilds/{continuousbuildsId}/result",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.continuousbuilds.getResult",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "historyFilterStatus": {
                                    "description": "If non-empty, the returned ContinuousBuildResult will only contain\nhistorical Build entries whose Status is contained in the list. Otherwise,\nno entries are filtered out based on their status.",
                                    "enum": [
                                        "STATUS_UNKNOWN",
                                        "QUEUED",
                                        "WORKING",
                                        "SUCCESS",
                                        "FAILURE",
                                        "INTERNAL_ERROR",
                                        "TIMEOUT",
                                        "CANCELLED"
                                    ],
                                    "location": "query",
                                    "repeated": true,
                                    "type": "string"
                                },
                                "maximumHistorySize": {
                                    "description": "If set, the returned ContinuousBuildResult will only contain at most that\nnumber of historical Build entries (while also respecting other\nparameters). Otherwise, it is assumed to be the default value of 50.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "minimumTimestamp": {
                                    "description": "If set, the returned ContinuousBuildResult will only contain historical\nentries with (update) timestamps greater than (i.e. later) or equal to this\ntimestamp. Otherwise, it is assumed to be \"7 days ago\". The returned\nhistory entry set has a hard limit (maximum capacity) of 1000 Builds.",
                                    "format": "google-datetime",
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The string payload containing the project and ContinuousBuild ids.\nOf the form:\n`projects/<project_id>/continuousbuilds/<continuous_build_id>`.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/continuousbuilds/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}/result",
                            "response": {
                                "$ref": "ContinuousBuildResult"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "list": {
                            "description": "Returns a list of all ContinuousBuilds owned by the given project.",
                            "flatPath": "v1/projects/{projectsId}/continuousbuilds",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.continuousbuilds.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "pageSize": {
                                    "description": "The maximum amount of ContinuousBuild to include in the response.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The page token to use from a previously paged request (if one was made).",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "The parent resource (i.e. project) that the ContinuousBuilds belong to.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+parent}/continuousbuilds",
                            "response": {
                                "$ref": "ListContinuousBuildsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "update": {
                            "description": "Updates the stored ContinuousBuild given the request's ContinuousBuild's\ndata.",
                            "flatPath": "v1/projects/{projectsId}/continuousbuilds/{continuousbuildsId}",
                            "httpMethod": "PUT",
                            "id": "scorecard.projects.continuousbuilds.update",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The Consumer cloud project and ContinuousBuild resource ids.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/continuousbuilds/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}",
                            "request": {
                                "$ref": "ContinuousBuild"
                            },
                            "response": {
                                "$ref": "ContinuousBuild"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    }
                },
                "events": {
                    "methods": {
                        "getResult": {
                            "description": "Get a result of the results for a single CI Event. If no event is found\nwith the given ID, the call will fail with the error code NOT_FOUND.",
                            "flatPath": "v1/projects/{projectsId}/events/{eventsId}/result",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.events.getResult",
                            "parameterOrder": [
                                "eventId"
                            ],
                            "parameters": {
                                "eventId": {
                                    "description": "The unique ID of the Event whose result is to be retrieved.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/events/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+eventId}/result",
                            "response": {
                                "$ref": "CIEventResult"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "search": {
                            "description": "Searches for events matching the given query parameters.\n\nAn error will be reported in the following cases:\n- If a query is not provided",
                            "flatPath": "v1/projects/{projectsId}/events:search",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.events.search",
                            "parameterOrder": [
                                "ciInstanceId"
                            ],
                            "parameters": {
                                "ciInstanceId": {
                                    "description": "The CI Instance whose events are being searched. This field is required.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "offset": {
                                    "description": "If > 0 indicates an absolute number of results to skip. If this field is\nused, then the search ignores the page_token field.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "The maximum number of items to return. Zero means all, but may be capped by\nthe server.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The next_page_token value returned from a previous Search request, if any.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "query": {
                                    "description": "The query string identifying what events to return. Syntax matches\ngo/filtering.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+ciInstanceId}/events:search",
                            "response": {
                                "$ref": "SearchEventsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    }
                },
                "triggers": {
                    "methods": {
                        "getResult": {
                            "description": "Gets information about a BuildTrigger",
                            "flatPath": "v1/projects/{projectsId}/triggers/{triggersId}/result",
                            "httpMethod": "GET",
                            "id": "scorecard.projects.triggers.getResult",
                            "parameterOrder": [
                                "triggerId"
                            ],
                            "parameters": {
                                "triggerId": {
                                    "description": "The unique ID of the GCB BuildTrigger whose info is to be retrieved.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/triggers/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+triggerId}/result",
                            "response": {
                                "$ref": "GetBuildResultTriggerResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    },
                    "resources": {
                        "result": {
                            "methods": {
                                "getAnonymous": {
                                    "description": "Gets information about a BuildTrigger sanitized for anonymous access.",
                                    "flatPath": "v1/projects/{projectsId}/triggers/{triggersId}/result:anonymous",
                                    "httpMethod": "GET",
                                    "id": "scorecard.projects.triggers.result.getAnonymous",
                                    "parameterOrder": [
                                        "triggerId"
                                    ],
                                    "parameters": {
                                        "triggerId": {
                                            "description": "The unique ID of the GCB BuildTrigger whose info is to be retrieved.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/triggers/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/{+triggerId}/result:anonymous",
                                    "response": {
                                        "$ref": "GetBuildResultTriggerResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "user": {
            "resources": {
                "builds": {
                    "methods": {
                        "listRelevant": {
                            "description": "Returns a list of RelevantBuilds for the requesting user.",
                            "flatPath": "v1/user/builds:relevant",
                            "httpMethod": "GET",
                            "id": "scorecard.user.builds.listRelevant",
                            "parameterOrder": [],
                            "parameters": {
                                "continuousBuildResource": {
                                    "description": "The set of ContinuousBuild resource paths that represent that\nContinuousBuilds the requesting user finds relevant.\nThe paths are in the form:\n\"projects/<project-id>/continuousbuilds/<cbuild-id>\".",
                                    "location": "query",
                                    "repeated": true,
                                    "type": "string"
                                },
                                "maximumBuildsPerContinuousBuild": {
                                    "description": "The maximum amount of RelevantBuilds to return for any given\nContinuousBuild. The default value and absolute maximum (with respect to\nthe other filter criteria) is 50 Builds.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "minimumTimestamp": {
                                    "description": "The minimum timestamp to use when looking at a ContinuousBuild's history\nfor RelevantBuilds (e.g. \"only get relevant builds updated in the last 24\nhours\"). If this value is not set, it will default to 7 days before the\nrequest was received. The absolute minimum is also 7 days before the\nrequest was received.",
                                    "format": "google-datetime",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/user/builds:relevant",
                            "response": {
                                "$ref": "ListRelevantBuildsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    }
                }
            }
        }
    },
    "revision": "20190920",
    "rootUrl": "https://test-scorecard.sandbox.googleapis.com/",
    "schemas": {
        "ArtifactObjects": {
            "description": "Files in the workspace to upload to Cloud Storage upon successful\ncompletion of all build steps.",
            "id": "ArtifactObjects",
            "properties": {
                "location": {
                    "description": "Cloud Storage bucket and optional object path, in the form\n\"gs://bucket/path/to/somewhere/\". (see [Bucket Name\nRequirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).\n\nFiles in the workspace matching any path pattern will be uploaded to\nCloud Storage with this location as a prefix.",
                    "type": "string"
                },
                "paths": {
                    "description": "Path globs used to match files in the build's workspace.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timing": {
                    "$ref": "TimeSpan",
                    "description": "Output only. Stores timing information for pushing all artifact objects."
                }
            },
            "type": "object"
        },
        "Artifacts": {
            "description": "Artifacts produced by a build that should be uploaded upon\nsuccessful completion of all build steps.",
            "id": "Artifacts",
            "properties": {
                "images": {
                    "description": "A list of images to be pushed upon the successful completion of all build\nsteps.\n\nThe images will be pushed using the builder service account's credentials.\n\nThe digests of the pushed images will be stored in the Build resource's\nresults field.\n\nIf any of the images fail to be pushed, the build is marked FAILURE.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "objects": {
                    "$ref": "ArtifactObjects",
                    "description": "A list of objects to be uploaded to Cloud Storage upon successful\ncompletion of all build steps.\n\nFiles in the workspace matching specified paths globs will be uploaded to\nthe specified Cloud Storage location using the builder service account's\ncredentials.\n\nThe location and generation of the uploaded objects will be stored in the\nBuild resource's results field.\n\nIf any objects fail to be pushed, the build is marked FAILURE."
                }
            },
            "type": "object"
        },
        "Build": {
            "description": "A build resource in the Cloud Build API.\n\nAt a high level, a `Build` describes where to find source code, how to build\nit (for example, the builder image to run on the source), and where to store\nthe built artifacts.\n\nFields can include the following variables, which will be expanded when the\nbuild is created:\n\n- $PROJECT_ID: the project ID of the build.\n- $BUILD_ID: the autogenerated ID of the build.\n- $REPO_NAME: the source repository name specified by RepoSource.\n- $BRANCH_NAME: the branch name specified by RepoSource.\n- $TAG_NAME: the tag name specified by RepoSource.\n- $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or\n  resolved from the specified branch or tag.\n- $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.",
            "id": "Build",
            "properties": {
                "artifacts": {
                    "$ref": "Artifacts",
                    "description": "Artifacts produced by the build that should be uploaded upon\nsuccessful completion of all build steps."
                },
                "buildTriggerId": {
                    "description": "Output only. The ID of the `BuildTrigger` that triggered this build, if it\nwas triggered automatically.",
                    "type": "string"
                },
                "createTime": {
                    "description": "Output only. Time at which the request to create the build was received.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "finishTime": {
                    "description": "Output only. Time at which execution of the build was finished.\n\nThe difference between finish_time and start_time is the duration of the\nbuild's execution.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "id": {
                    "description": "Output only. Unique identifier of the build.",
                    "type": "string"
                },
                "images": {
                    "description": "A list of images to be pushed upon the successful completion of all build\nsteps.\n\nThe images are pushed using the builder service account's credentials.\n\nThe digests of the pushed images will be stored in the `Build` resource's\nresults field.\n\nIf any of the images fail to be pushed, the build status is marked\n`FAILURE`.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "logUrl": {
                    "description": "Output only. URL to logs for this build in Google Cloud Console.",
                    "type": "string"
                },
                "logsBucket": {
                    "description": "Google Cloud Storage bucket where logs should be written (see\n[Bucket Name\nRequirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).\nLogs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.",
                    "type": "string"
                },
                "options": {
                    "$ref": "BuildOptions",
                    "description": "Special options for this build."
                },
                "projectId": {
                    "description": "Output only. ID of the project.",
                    "type": "string"
                },
                "results": {
                    "$ref": "Results",
                    "description": "Output only. Results of the build."
                },
                "secrets": {
                    "description": "Secrets to decrypt using Cloud Key Management Service.",
                    "items": {
                        "$ref": "Secret"
                    },
                    "type": "array"
                },
                "source": {
                    "$ref": "Source",
                    "description": "The location of the source files to build."
                },
                "sourceProvenance": {
                    "$ref": "SourceProvenance",
                    "description": "Output only. A permanent fixed identifier for source."
                },
                "startTime": {
                    "description": "Output only. Time at which execution of the build was started.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "description": "Output only. Status of the build.",
                    "enum": [
                        "STATUS_UNKNOWN",
                        "QUEUED",
                        "WORKING",
                        "SUCCESS",
                        "FAILURE",
                        "INTERNAL_ERROR",
                        "TIMEOUT",
                        "CANCELLED"
                    ],
                    "enumDescriptions": [
                        "Status of the build is unknown.",
                        "Build or step is queued; work has not yet begun.",
                        "Build or step is being executed.",
                        "Build or step finished successfully.",
                        "Build or step failed to complete successfully.",
                        "Build or step failed due to an internal cause.",
                        "Build or step took longer than was allowed.",
                        "Build or step was canceled by a user."
                    ],
                    "type": "string"
                },
                "statusDetail": {
                    "description": "Output only. Customer-readable message about the current status.",
                    "type": "string"
                },
                "steps": {
                    "description": "Required. The operations to be performed on the workspace.",
                    "items": {
                        "$ref": "BuildStep"
                    },
                    "type": "array"
                },
                "substitutions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Substitutions data for `Build` resource.",
                    "type": "object"
                },
                "tags": {
                    "description": "Tags for annotation of a `Build`. These are not docker tags.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timeout": {
                    "description": "Amount of time that this build should be allowed to run, to second\ngranularity. If this amount of time elapses, work on the build will cease\nand the build status will be `TIMEOUT`.\n\nDefault time is ten minutes.",
                    "format": "google-duration",
                    "type": "string"
                },
                "timing": {
                    "additionalProperties": {
                        "$ref": "TimeSpan"
                    },
                    "description": "Output only. Stores timing information for phases of the build. Valid keys\nare:\n\n* BUILD: time to execute all build steps\n* PUSH: time to push all specified images.\n* FETCHSOURCE: time to fetch source.\n\nIf the build does not specify source or images,\nthese keys will not be included.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BuildOptions": {
            "description": "Optional arguments to enable specific features of builds.",
            "id": "BuildOptions",
            "properties": {
                "diskSizeGb": {
                    "description": "Requested disk size for the VM that runs the build. Note that this is *NOT*\n\"disk free\"; some of the space will be used by the operating system and\nbuild utilities. Also note that this is the minimum disk size that will be\nallocated for the build -- the build may run with a larger disk than\nrequested. At present, the maximum disk size is 1000GB; builds that request\nmore than the maximum are rejected with an error.",
                    "format": "int64",
                    "type": "string"
                },
                "env": {
                    "description": "A list of global environment variable definitions that will exist for all\nbuild steps in this build. If a variable is defined in both globally and in\na build step, the variable will use the build step value.\n\nThe elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\"\nbeing given the value \"VALUE\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "logStreamingOption": {
                    "description": "Option to define build log streaming behavior to Google Cloud\nStorage.",
                    "enum": [
                        "STREAM_DEFAULT",
                        "STREAM_ON",
                        "STREAM_OFF"
                    ],
                    "enumDescriptions": [
                        "Service may automatically determine build log streaming behavior.",
                        "Build logs should be streamed to Google Cloud Storage.",
                        "Build logs should not be streamed to Google Cloud Storage; they will be\nwritten when the build is completed."
                    ],
                    "type": "string"
                },
                "logging": {
                    "description": "Option to specify the logging mode, which determines where the logs are\nstored.",
                    "enum": [
                        "LOGGING_UNSPECIFIED",
                        "LEGACY",
                        "GCS_ONLY"
                    ],
                    "enumDescriptions": [
                        "The service determines the logging mode. The default is `LEGACY`. Do not\nrely on the default logging behavior as it may change in the future.",
                        "Stackdriver logging and Cloud Storage logging are enabled.",
                        "Only Cloud Storage logging is enabled."
                    ],
                    "type": "string"
                },
                "machineType": {
                    "description": "Compute Engine machine type on which to run the build.",
                    "enum": [
                        "UNSPECIFIED",
                        "N1_HIGHCPU_8",
                        "N1_HIGHCPU_32"
                    ],
                    "enumDescriptions": [
                        "Standard machine type.",
                        "Highcpu machine with 8 CPUs.",
                        "Highcpu machine with 32 CPUs."
                    ],
                    "type": "string"
                },
                "requestedVerifyOption": {
                    "description": "Requested verifiability options.",
                    "enum": [
                        "NOT_VERIFIED",
                        "VERIFIED"
                    ],
                    "enumDescriptions": [
                        "Not a verifiable build. (default)",
                        "Verified build."
                    ],
                    "type": "string"
                },
                "secretEnv": {
                    "description": "A list of global environment variables, which are encrypted using a Cloud\nKey Management Service crypto key. These values must be specified in the\nbuild's `Secret`. These variables will be available to all build steps\nin this build.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sourceProvenanceHash": {
                    "description": "Requested hash for SourceProvenance.",
                    "enumDescriptions": [
                        "No hash requested.",
                        "Use a sha256 hash.",
                        "Use a md5 hash."
                    ],
                    "items": {
                        "enum": [
                            "NONE",
                            "SHA256",
                            "MD5"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "substitutionOption": {
                    "description": "Option to specify behavior when there is an error in the substitution\nchecks.",
                    "enum": [
                        "MUST_MATCH",
                        "ALLOW_LOOSE"
                    ],
                    "enumDescriptions": [
                        "Fails the build if error in substitutions checks, like missing\na substitution in the template or in the map.",
                        "Do not fail the build if error in substitutions checks."
                    ],
                    "type": "string"
                },
                "volumes": {
                    "description": "Global list of volumes to mount for ALL build steps\n\nEach volume is created as an empty volume prior to starting the build\nprocess. Upon completion of the build, volumes and their contents are\ndiscarded. Global volume names and paths cannot conflict with the volumes\ndefined a build step.\n\nUsing a global volume in a build with only one step is not valid as\nit is indicative of a build request with an incorrect configuration.",
                    "items": {
                        "$ref": "Volume"
                    },
                    "type": "array"
                },
                "workerPool": {
                    "description": "Option to specify a `WorkerPool` for the build. User specifies the pool\nwith the format \"[WORKERPOOL_PROJECT_ID]/[WORKERPOOL_NAME]\".\nThis is an experimental field.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BuildStep": {
            "description": "A step in the build pipeline.",
            "id": "BuildStep",
            "properties": {
                "args": {
                    "description": "A list of arguments that will be presented to the step when it is started.\n\nIf the image used to run the step's container has an entrypoint, the `args`\nare used as arguments to that entrypoint. If the image does not define\nan entrypoint, the first element in args is used as the entrypoint,\nand the remainder will be used as arguments.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dir": {
                    "description": "Working directory to use when running this step's container.\n\nIf this value is a relative path, it is relative to the build's working\ndirectory. If this value is absolute, it may be outside the build's working\ndirectory, in which case the contents of the path may not be persisted\nacross build step executions, unless a `volume` for that path is specified.\n\nIf the build specifies a `RepoSource` with `dir` and a step with a `dir`,\nwhich specifies an absolute path, the `RepoSource` `dir` is ignored for\nthe step's execution.",
                    "type": "string"
                },
                "entrypoint": {
                    "description": "Entrypoint to be used instead of the build step image's default entrypoint.\nIf unset, the image's default entrypoint is used.",
                    "type": "string"
                },
                "env": {
                    "description": "A list of environment variable definitions to be used when running a step.\n\nThe elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\"\nbeing given the value \"VALUE\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier for this build step, used in `wait_for` to\nreference this build step as a dependency.",
                    "type": "string"
                },
                "name": {
                    "description": "Required. The name of the container image that will run this particular\nbuild step.\n\nIf the image is available in the host's Docker daemon's cache, it\nwill be run directly. If not, the host will attempt to pull the image\nfirst, using the builder service account's credentials if necessary.\n\nThe Docker daemon's cache will already have the latest versions of all of\nthe officially supported build steps\n([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)).\nThe Docker daemon will also have cached many of the layers for some popular\nimages, like \"ubuntu\", \"debian\", but they will be refreshed at the time you\nattempt to use them.\n\nIf you built an image in a previous build step, it will be stored in the\nhost's Docker daemon's cache and is available to use as the name for a\nlater build step.",
                    "type": "string"
                },
                "pullTiming": {
                    "$ref": "TimeSpan",
                    "description": "Output only. Stores timing information for pulling this build step's\nbuilder image only."
                },
                "secretEnv": {
                    "description": "A list of environment variables which are encrypted using a Cloud Key\nManagement Service crypto key. These values must be specified in the\nbuild's `Secret`.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Output only. Status of the build step. At this time, build step status is\nonly updated on build completion; step status is not updated in real-time\nas the build progresses.",
                    "enum": [
                        "STATUS_UNKNOWN",
                        "QUEUED",
                        "WORKING",
                        "SUCCESS",
                        "FAILURE",
                        "INTERNAL_ERROR",
                        "TIMEOUT",
                        "CANCELLED"
                    ],
                    "enumDescriptions": [
                        "Status of the build is unknown.",
                        "Build or step is queued; work has not yet begun.",
                        "Build or step is being executed.",
                        "Build or step finished successfully.",
                        "Build or step failed to complete successfully.",
                        "Build or step failed due to an internal cause.",
                        "Build or step took longer than was allowed.",
                        "Build or step was canceled by a user."
                    ],
                    "type": "string"
                },
                "timeout": {
                    "description": "Time limit for executing this build step. If not defined, the step has no\ntime limit and will be allowed to continue to run until either it completes\nor the build itself times out.",
                    "format": "google-duration",
                    "type": "string"
                },
                "timing": {
                    "$ref": "TimeSpan",
                    "description": "Output only. Stores timing information for executing this build step."
                },
                "volumes": {
                    "description": "List of volumes to mount into the build step.\n\nEach volume is created as an empty volume prior to execution of the\nbuild step. Upon completion of the build, volumes and their contents are\ndiscarded.\n\nUsing a named volume in only one step is not valid as it is indicative\nof a build request with an incorrect configuration.",
                    "items": {
                        "$ref": "Volume"
                    },
                    "type": "array"
                },
                "waitFor": {
                    "description": "The ID(s) of the step(s) that this build step depends on.\nThis build step will not start until all the build steps in `wait_for`\nhave completed successfully. If `wait_for` is empty, this build step will\nstart when all previous build steps in the `Build.Steps` list have\ncompleted successfully.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BuildTrigger": {
            "description": "Configuration for an automated build in response to source repository\nchanges.",
            "id": "BuildTrigger",
            "properties": {
                "build": {
                    "$ref": "Build",
                    "description": "Contents of the build template."
                },
                "createTime": {
                    "description": "Output only. Time when the trigger was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "description": {
                    "description": "Human-readable description of this trigger.",
                    "type": "string"
                },
                "disabled": {
                    "description": "If true, the trigger will never result in a build.",
                    "type": "boolean"
                },
                "filename": {
                    "description": "Path, from the source root, to a file whose contents is used for the\ntemplate.",
                    "type": "string"
                },
                "github": {
                    "$ref": "GitHubEventsConfig",
                    "description": "GitHubEventsConfig describes the configuration of a trigger that creates\na build whenever a GitHub event is received."
                },
                "id": {
                    "description": "Output only. Unique identifier of the trigger.",
                    "type": "string"
                },
                "ignoredFiles": {
                    "description": "ignored_files and included_files are file glob matches using\nhttp://godoc/pkg/path/filepath#Match extended with support for \"**\".\n\nIf ignored_files and changed files are both empty, then they are\nnot used to determine whether or not to trigger a build.\n\nIf ignored_files is not empty, then we ignore any files that match\nany of the ignored_file globs. If the change has no files that are\noutside of the ignored_files globs, then we do not trigger a build.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedFiles": {
                    "description": "If any of the files altered in the commit pass the ignored_files\nfilter and included_files is empty, then as far as this filter is\nconcerned, we should trigger the build.\n\nIf any of the files altered in the commit pass the ignored_files\nfilter and included_files is not empty, then we make sure that at\nleast one of those files matches a included_files glob. If not,\nthen we do not trigger a build.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "User assigned name of the trigger. Must be unique within the project.",
                    "type": "string"
                },
                "substitutions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Substitutions data for Build resource.",
                    "type": "object"
                },
                "tags": {
                    "description": "Tags for annotation of a `BuildTrigger`",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "triggerTemplate": {
                    "$ref": "RepoSource",
                    "description": "Template describing the types of source changes to trigger a build.\n\nBranch and tag names in trigger templates are interpreted as regular\nexpressions. Any branch or tag change that matches that regular expression\nwill trigger a build."
                }
            },
            "type": "object"
        },
        "BuiltImage": {
            "description": "An image built by the pipeline.",
            "id": "BuiltImage",
            "properties": {
                "digest": {
                    "description": "Docker Registry 2.0 digest.",
                    "type": "string"
                },
                "name": {
                    "description": "Name used to push the container image to Google Container Registry, as\npresented to `docker push`.",
                    "type": "string"
                },
                "pushTiming": {
                    "$ref": "TimeSpan",
                    "description": "Output only. Stores timing information for pushing the specified image."
                }
            },
            "type": "object"
        },
        "CIEventPlanResult": {
            "description": "Information about the plan results associated with an event.",
            "id": "CIEventPlanResult",
            "properties": {
                "headPlanInfo": {
                    "$ref": "PlanResultInfo",
                    "description": "The plan state for the \"head\" or current context."
                }
            },
            "type": "object"
        },
        "CIEventResult": {
            "description": "Result information about a CI Event. Scorecard will synthesize this as\nvarious Evaluation Systems report information about Evaluations associated\nwith the CIEvent.",
            "id": "CIEventResult",
            "properties": {
                "cloudProjectNumber": {
                    "description": "The cloud project number to which the result belongs.",
                    "format": "int64",
                    "type": "string"
                },
                "deadline": {
                    "description": "After the deadline, if any evaluations are still not finished their\nstatus will change to TIMEOUT and the event's status will change to\nTIMEOUT.\n\nValid deadlines must be no earlier than 60 seconds in the future (as\ndetermined by the server) and no later than one week in the future. If not\nset by the client when creating the CI Event, an unspecified default\nvalue will chosen by the service.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "error": {
                    "$ref": "Error"
                },
                "finishTime": {
                    "description": "When the CI Event finished.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "planResults": {
                    "additionalProperties": {
                        "$ref": "CIEventPlanResult"
                    },
                    "description": "Plan info, one entry for each plan in the event. Key is plan name.",
                    "type": "object"
                },
                "resultId": {
                    "description": "The result document ID.",
                    "type": "string"
                },
                "status": {
                    "description": "The status for the CI Event.",
                    "enum": [
                        "STATUS_UNSPECIFIED",
                        "EVALUATING",
                        "INCOMPLETE",
                        "BROKEN",
                        "SUCCESS",
                        "FAILURE",
                        "TIMEOUT",
                        "TOOL_FAILURE",
                        "EVENT_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "Initial state for the CI Event, after it is created.",
                        "Do not use INCOMPLETE. It has been replaced with TOOL_FAILURE or\nEVENT_ERROR.",
                        "At least one plan's build was unsuccessful.",
                        "The CI Event has a successful result for all triggered plans",
                        "The CI Event has at least one result for all targets in all evaluated\nplans, and for at least one target, no results were passing.\nFAILURE is only used in Bazel builds.",
                        "At least one target did not complete execution within its allotted time.",
                        "At least one plan could not be scheduled (e.g. Argo refused the RPC).",
                        "There was an event error (e.g. could not evaluate a blueprint).\nThe details of the error will be in the error field of the CIEventResult."
                    ],
                    "type": "string"
                },
                "updateTime": {
                    "description": "When this CI Event Result was last recomputed based on the latest target\ndata.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CIEventSearchResult": {
            "description": "Result information from a search for CI Events.",
            "id": "CIEventSearchResult",
            "properties": {
                "deadline": {
                    "description": "After the deadline, if any evaluations are still not finished their\nstatus will change to TIMEOUT and the event's status will change to\nTIMEOUT.\n\nValid deadlines must be no earlier than 60 seconds in the future (as\ndetermined by the server) and no later than one week in the future. If not\nset by the client when creating the CI Event, an unspecified default\nvalue will chosen by the service.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "finishTime": {
                    "description": "When the CI Event finished.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "description": "The status for the CI Event.",
                    "enum": [
                        "STATUS_UNSPECIFIED",
                        "EVALUATING",
                        "INCOMPLETE",
                        "BROKEN",
                        "SUCCESS",
                        "FAILURE",
                        "TIMEOUT",
                        "TOOL_FAILURE",
                        "EVENT_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "Initial state for the CI Event, after it is created.",
                        "Do not use INCOMPLETE. It has been replaced with TOOL_FAILURE or\nEVENT_ERROR.",
                        "At least one plan's build was unsuccessful.",
                        "The CI Event has a successful result for all triggered plans",
                        "The CI Event has at least one result for all targets in all evaluated\nplans, and for at least one target, no results were passing.\nFAILURE is only used in Bazel builds.",
                        "At least one target did not complete execution within its allotted time.",
                        "At least one plan could not be scheduled (e.g. Argo refused the RPC).",
                        "There was an event error (e.g. could not evaluate a blueprint).\nThe details of the error will be in the error field of the CIEventResult."
                    ],
                    "type": "string"
                },
                "updateTime": {
                    "description": "When the CI Event was last updated and its result recomputed.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CheckContinuousBuildAccessResponse": {
            "description": "Empty response signalling that a user has authority to view unobfuscated\nContinuous Builds.",
            "id": "CheckContinuousBuildAccessResponse",
            "properties": {},
            "type": "object"
        },
        "CloudBuildResult": {
            "id": "CloudBuildResult",
            "properties": {
                "build": {
                    "$ref": "Build",
                    "description": "(Optional) The GCB Build for this invocation."
                },
                "commitInfo": {
                    "$ref": "CommitInfo",
                    "description": "(Optional) Information about the commit that triggered the GCB build.\nSet if gcb_build.build_trigger_id is set."
                },
                "elapsedTime": {
                    "description": "How much wall-clock time elapsed while producing this data.",
                    "format": "google-duration",
                    "type": "string"
                },
                "status": {
                    "$ref": "Status",
                    "description": "(Optional) The evaluation invocation error if it occurred."
                },
                "trigger": {
                    "$ref": "BuildTrigger",
                    "description": "(Optional) The GCB Build Trigger that initiated the Build. This field\nshould be set if the Build's trigger_id field is set."
                }
            },
            "type": "object"
        },
        "CommitInfo": {
            "description": "Commit information from Proctor about an attached Argo build.",
            "id": "CommitInfo",
            "properties": {
                "commitAuthor": {
                    "description": "Name of the commit author.",
                    "type": "string"
                },
                "commitMessage": {
                    "description": "Complete message contents, includes subject. Git commit messages\nare often hand formatted to fit into a 72 column display and are\nto be presented in a fixed width font \"as-is\".",
                    "type": "string"
                },
                "gerritId": {
                    "description": "The gerrit_id of the code change.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ContinuousBuild": {
            "description": "The parent object that correlates the results of a stream of Builds.",
            "id": "ContinuousBuild",
            "properties": {
                "buildMatchingFilter": {
                    "description": "The criteria upon which Builds should be matched to this ContinuousBuild.\nIt is expected to be in the Cloud Filtering (go/filtering) format.",
                    "type": "string"
                },
                "id": {
                    "description": "The unique identifier for the ContinuousBuild.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The human-readable ID for the Cloud project to which this ContinuousBuild\nbelongs.",
                    "type": "string"
                },
                "userLabel": {
                    "description": "The human-defined name for this ContinuousBuild.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ContinuousBuildResult": {
            "id": "ContinuousBuildResult",
            "properties": {
                "averageDuration": {
                    "description": "The average (mean) duration of all continuous build results in the\nrequested timeframe (default: last 7 days).",
                    "format": "google-duration",
                    "type": "string"
                },
                "lastFinishedResult": {
                    "$ref": "CloudBuildResult"
                },
                "lastSuccessfulResult": {
                    "$ref": "CloudBuildResult"
                },
                "recentResult": {
                    "description": "The ordered list of recent historical results (most recent first). It is\ncontrolled by the corresponding size parameter in the request, subject to\nthe request's timeframe parameter. I.e. it will contain min(size_limit,\ntimeframe_limit) results.",
                    "items": {
                        "$ref": "CloudBuildResult"
                    },
                    "type": "array"
                },
                "totalSize": {
                    "description": "If this ContinuousBuildResult is in response to a request that had a\ntimeframe filter (default: last 7 days), this is the number of builds that\nwould have been within that timeframe, irrespective of the requested\nhistory size.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "Error": {
            "id": "Error",
            "properties": {
                "status": {
                    "description": "The description of the error. The status.code must not be Code.OK.",
                    "items": {
                        "$ref": "Status"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FileHashes": {
            "description": "Container message for hashes of byte content of files, used in\nSourceProvenance messages to verify integrity of source input to the build.",
            "id": "FileHashes",
            "properties": {
                "fileHash": {
                    "description": "Collection of file hashes.",
                    "items": {
                        "$ref": "Hash"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetBadgeRedirectResponse": {
            "description": "Response including the build details page that a user is authorized to view.",
            "id": "GetBadgeRedirectResponse",
            "properties": {
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetBuildResultResponse": {
            "id": "GetBuildResultResponse",
            "properties": {
                "planResultInfo": {
                    "$ref": "PlanResultInfo",
                    "description": "Result data for this build, shaped as a single plan's result."
                }
            },
            "type": "object"
        },
        "GetBuildResultTriggerResponse": {
            "id": "GetBuildResultTriggerResponse",
            "properties": {
                "gcbBuildTrigger": {
                    "$ref": "BuildTrigger"
                }
            },
            "type": "object"
        },
        "GetContinuousBuildStatusResponse": {
            "description": "Response containing the status of the most recent, completed build in the\nincluded ContinuousBuild.",
            "id": "GetContinuousBuildStatusResponse",
            "properties": {
                "name": {
                    "description": "Of the form: \"continuousbuilds/some-cbuild-id\"",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "STATUS_UNKNOWN",
                        "QUEUED",
                        "WORKING",
                        "SUCCESS",
                        "FAILURE",
                        "INTERNAL_ERROR",
                        "TIMEOUT",
                        "CANCELLED"
                    ],
                    "enumDescriptions": [
                        "Status of the build is unknown.",
                        "Build or step is queued; work has not yet begun.",
                        "Build or step is being executed.",
                        "Build or step finished successfully.",
                        "Build or step failed to complete successfully.",
                        "Build or step failed due to an internal cause.",
                        "Build or step took longer than was allowed.",
                        "Build or step was canceled by a user."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetProjectMetadataResponse": {
            "id": "GetProjectMetadataResponse",
            "properties": {
                "obfuscatedProjectId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GitHubEventsConfig": {
            "description": "GitHubEventsConfig describes the configuration of a trigger that creates a\nbuild whenever a GitHub event is received.\n\nThis message is experimental.",
            "id": "GitHubEventsConfig",
            "properties": {
                "installationId": {
                    "description": "The installationID that emits the GitHub event.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the repository. For example: The name for\nhttps://github.com/googlecloudplatform/cloud-builders is \"cloud-builders\".",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner of the repository. For example: The owner for\nhttps://github.com/googlecloudplatform/cloud-builders is\n\"googlecloudplatform\".",
                    "type": "string"
                },
                "pullRequest": {
                    "$ref": "PullRequestFilter",
                    "description": "filter to match changes in pull requests."
                },
                "push": {
                    "$ref": "PushFilter",
                    "description": "filter to match changes in refs like branches, tags."
                }
            },
            "type": "object"
        },
        "Hash": {
            "description": "Container message for hash values.",
            "id": "Hash",
            "properties": {
                "type": {
                    "description": "The type of hash that was performed.",
                    "enum": [
                        "NONE",
                        "SHA256",
                        "MD5"
                    ],
                    "enumDescriptions": [
                        "No hash requested.",
                        "Use a sha256 hash.",
                        "Use a md5 hash."
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The hash value.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListContinuousBuildsResponse": {
            "description": "The response type for listing a consumer Cloud project's ContinuousBuilds.",
            "id": "ListContinuousBuildsResponse",
            "properties": {
                "continuousBuild": {
                    "description": "This response's list of ContinuousBuilds.",
                    "items": {
                        "$ref": "ContinuousBuild"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "The next page token the client should use to fetch more results, or empty\nif there are no more results in the list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListRelevantBuildsResponse": {
            "description": "The response type for listing a user's relevant builds.",
            "id": "ListRelevantBuildsResponse",
            "properties": {
                "relevantBuild": {
                    "description": "The set for RelevantBuilds.",
                    "items": {
                        "$ref": "RelevantBuild"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PlanResultInfo": {
            "description": "A common message for capturing plan result information.  Combines\ninstantaneous plan state [snapshot] with evaluation context data.\nWARNING: Use CloudBuildInvocationResult instead, which will eventually\nreplace this message type. See b/123519550.",
            "id": "PlanResultInfo",
            "properties": {
                "commitInfo": {
                    "$ref": "CommitInfo",
                    "description": "(Optional) Information about the commit that triggered the GCB build.\nSet if gcb_build.build_trigger_id is set."
                },
                "elapsedTime": {
                    "description": "How much wall-clock time elapsed while producing this PlanState.\n\nIf there is exactly one evaluation ID then this is the elapsed\ntime of the corresponding EvaluationResult.\n\nIf there are multiple change evaluation IDs then this will be no\nless than the least elapsed time of all cited EvaluationResults.",
                    "format": "google-duration",
                    "type": "string"
                },
                "gcbBuild": {
                    "$ref": "Build",
                    "description": "(Optional) The Google Cloud Build configuration for this Plan."
                },
                "gcbBuildTrigger": {
                    "$ref": "BuildTrigger",
                    "description": "(Optional) The Google Cloud Build trigger that initiated the GCB\nBuild. Set if gcb_build.build_trigger_id is set."
                },
                "status": {
                    "$ref": "Status",
                    "description": "A record of a single evaluation error."
                }
            },
            "type": "object"
        },
        "PullRequestFilter": {
            "description": "PullRequestFilter contains filter properties for matching GitHub Pull\nRequests.",
            "id": "PullRequestFilter",
            "properties": {
                "branch": {
                    "description": "Regex of branches to match.\n\nThe syntax of the regular expressions accepted is the syntax accepted by\nRE2 and described at https://github.com/google/re2/wiki/Syntax",
                    "type": "string"
                },
                "commentControl": {
                    "description": "Whether to block builds on a \"/gcbrun\" comment from a repository owner or\ncollaborator.",
                    "enum": [
                        "COMMENTS_DISABLED",
                        "COMMENTS_ENABLED"
                    ],
                    "enumDescriptions": [
                        "Do not require comments on Pull Requests before builds are triggered.",
                        "Enforce that repository owners or collaborators must comment on Pull\nRequests before builds are triggered."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PushFilter": {
            "description": "Push contains filter properties for matching GitHub git pushes.",
            "id": "PushFilter",
            "properties": {
                "branch": {
                    "description": "Regexes matching branches to build.\n\nThe syntax of the regular expressions accepted is the syntax accepted by\nRE2 and described at https://github.com/google/re2/wiki/Syntax",
                    "type": "string"
                },
                "tag": {
                    "description": "Regexes matching tags to build.\n\nThe syntax of the regular expressions accepted is the syntax accepted by\nRE2 and described at https://github.com/google/re2/wiki/Syntax",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RelevantBuild": {
            "description": "The type for describing a Build that is relevant to a user.",
            "id": "RelevantBuild",
            "properties": {
                "build": {
                    "$ref": "Build",
                    "description": "The Build that is relevant to the user."
                },
                "continuousBuild": {
                    "description": "The set of ContinuousBuilds to which the above Build belongs.",
                    "items": {
                        "$ref": "ContinuousBuild"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RepoSource": {
            "description": "Location of the source in a Google Cloud Source Repository.",
            "id": "RepoSource",
            "properties": {
                "branchName": {
                    "description": "Regex matching branches to build.\n\nThe syntax of the regular expressions accepted is the syntax accepted by\nRE2 and described at https://github.com/google/re2/wiki/Syntax",
                    "type": "string"
                },
                "commitSha": {
                    "description": "Explicit commit SHA to build.",
                    "type": "string"
                },
                "dir": {
                    "description": "Directory, relative to the source root, in which to run the build.\n\nThis must be a relative path. If a step's `dir` is specified and is an\nabsolute path, this value is ignored for that step's execution.",
                    "type": "string"
                },
                "projectId": {
                    "description": "ID of the project that owns the Cloud Source Repository. If omitted, the\nproject ID requesting the build is assumed.",
                    "type": "string"
                },
                "repoName": {
                    "description": "Name of the Cloud Source Repository. If omitted, the name \"default\" is\nassumed.",
                    "type": "string"
                },
                "tagName": {
                    "description": "Regex matching tags to build.\n\nThe syntax of the regular expressions accepted is the syntax accepted by\nRE2 and described at https://github.com/google/re2/wiki/Syntax",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Results": {
            "description": "Artifacts created by the build pipeline.",
            "id": "Results",
            "properties": {
                "artifactManifest": {
                    "description": "Path to the artifact manifest. Only populated when artifacts are uploaded.",
                    "type": "string"
                },
                "artifactTiming": {
                    "$ref": "TimeSpan",
                    "description": "Time to push all non-container artifacts."
                },
                "buildStepImages": {
                    "description": "List of build step digests, in the order corresponding to build step\nindices.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "buildStepOutputs": {
                    "description": "List of build step outputs, produced by builder images, in the order\ncorresponding to build step indices.\n\n[Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders)\ncan produce this output by writing to `$BUILDER_OUTPUT/output`.\nOnly the first 4KB of data is stored.",
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "images": {
                    "description": "Container images that were built as a part of the build.",
                    "items": {
                        "$ref": "BuiltImage"
                    },
                    "type": "array"
                },
                "numArtifacts": {
                    "description": "Number of artifacts uploaded. Only populated when artifacts are uploaded.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchEventsResponse": {
            "id": "SearchEventsResponse",
            "properties": {
                "events": {
                    "description": "Events matching the search, possibly capped at request.page_size or a\nserver limit.",
                    "items": {
                        "$ref": "CIEventSearchResult"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results.",
                    "type": "string"
                },
                "planResultInfos": {
                    "description": "Result data for builds matched, shaped as plan results.",
                    "items": {
                        "$ref": "PlanResultInfo"
                    },
                    "type": "array"
                },
                "totalSize": {
                    "description": "Estimated total size of the matched results. This value's accuracy is\nguaranteed up to 1000. Any number that is more than 1000 is just an\nestimation.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Secret": {
            "description": "Pairs a set of secret environment variables containing encrypted\nvalues with the Cloud KMS key to use to decrypt the value.",
            "id": "Secret",
            "properties": {
                "kmsKeyName": {
                    "description": "Cloud KMS key name to use to decrypt these envs.",
                    "type": "string"
                },
                "secretEnv": {
                    "additionalProperties": {
                        "format": "byte",
                        "type": "string"
                    },
                    "description": "Map of environment variable name to its encrypted value.\n\nSecret environment variables must be unique across all of a build's\nsecrets, and must be used by at least one build step. Values can be at most\n64 KB in size. There can be at most 100 secret values across all of a\nbuild's secrets.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Source": {
            "description": "Location of the source in a supported storage service.",
            "id": "Source",
            "properties": {
                "repoSource": {
                    "$ref": "RepoSource",
                    "description": "If provided, get the source from this location in a Cloud Source\nRepository."
                },
                "storageSource": {
                    "$ref": "StorageSource",
                    "description": "If provided, get the source from this location in Google Cloud Storage."
                }
            },
            "type": "object"
        },
        "SourceProvenance": {
            "description": "Provenance of the source. Ways to find the original source, or verify that\nsome source was used for this build.",
            "id": "SourceProvenance",
            "properties": {
                "fileHashes": {
                    "additionalProperties": {
                        "$ref": "FileHashes"
                    },
                    "description": "Output only. Hash(es) of the build source, which can be used to verify that\nthe original source integrity was maintained in the build. Note that\n`FileHashes` will only be populated if `BuildOptions` has requested a\n`SourceProvenanceHash`.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(`.tar.gz`), the `FileHash` will be for the single path to that file.",
                    "type": "object"
                },
                "resolvedRepoSource": {
                    "$ref": "RepoSource",
                    "description": "A copy of the build's `source.repo_source`, if exists, with any\nrevisions resolved."
                },
                "resolvedStorageSource": {
                    "$ref": "StorageSource",
                    "description": "A copy of the build's `source.storage_source`, if exists, with any\ngenerations resolved."
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "id": "Status",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StorageSource": {
            "description": "Location of the source in an archive file in Google Cloud Storage.",
            "id": "StorageSource",
            "properties": {
                "bucket": {
                    "description": "Google Cloud Storage bucket containing the source (see\n[Bucket Name\nRequirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
                    "type": "string"
                },
                "generation": {
                    "description": "Google Cloud Storage generation for the object. If the generation is\nomitted, the latest generation will be used.",
                    "format": "int64",
                    "type": "string"
                },
                "object": {
                    "description": "Google Cloud Storage object containing the source.\n\nThis object must be a gzipped archive file (`.tar.gz`) containing source to\nbuild.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimeSpan": {
            "description": "Start and end times for a build execution phase.",
            "id": "TimeSpan",
            "properties": {
                "endTime": {
                    "description": "End of time span.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "startTime": {
                    "description": "Start of time span.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Volume": {
            "description": "Volume describes a Docker container volume which is mounted into build steps\nin order to persist files across build step execution.",
            "id": "Volume",
            "properties": {
                "name": {
                    "description": "Name of the volume to mount.\n\nVolume names must be unique per build step and must be valid names for\nDocker volumes. Each named volume must be used by at least two build steps.",
                    "type": "string"
                },
                "path": {
                    "description": "Path at which to mount the volume.\n\nPaths must be absolute and cannot conflict with other volume paths on the\nsame build step or with certain reserved volume paths.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Cloud Scorecard Private API (Test)",
    "version": "v1",
    "version_module": true
}