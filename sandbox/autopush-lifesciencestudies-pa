{
    "basePath": "",
    "baseUrl": "https://autopush-lifesciencestudies-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Verily Lifescience Studies",
    "description": "",
    "discoveryVersion": "v1",
    "documentationLink": "http://verily.com/",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "autopush_lifesciencestudies_pa_sandbox:v1",
    "kind": "discovery#restDescription",
    "name": "autopush_lifesciencestudies_pa_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "account": {
            "methods": {
                "checkPermissions": {
                    "description": "Checks permissions to do an operation on an account.",
                    "flatPath": "v1/account:checkPermissions",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.account.checkPermissions",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/account:checkPermissions",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1CheckAccountPermissionsRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1CheckAccountPermissionsResponse"
                    }
                },
                "get": {
                    "description": "Gets an account by key.",
                    "flatPath": "v1/account:get",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.account.get",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/account:get",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1GetAccountRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1GetAccountResponse"
                    }
                },
                "getStatus": {
                    "description": "Gets the status of an account.",
                    "flatPath": "v1/account:getStatus",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.account.getStatus",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/account:getStatus",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1GetAccountStatusRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1GetAccountStatusResponse"
                    }
                },
                "insert": {
                    "description": "Inserts an account.",
                    "flatPath": "v1/account:insert",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.account.insert",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/account:insert",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1InsertAccountRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1InsertAccountResponse"
                    }
                }
            }
        },
        "accounts": {
            "methods": {
                "list": {
                    "description": "Gets the account for a given participant.",
                    "flatPath": "v1/accounts:list",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.accounts.list",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/accounts:list",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1ListAccountsRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1ListAccountsResponse"
                    }
                },
                "query": {
                    "description": "Gets accounts by various filters.",
                    "flatPath": "v1/accounts:query",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.accounts.query",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/accounts:query",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1QueryAccountsRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1QueryAccountsResponse"
                    }
                }
            }
        },
        "event": {
            "methods": {
                "insert": {
                    "description": "Inserts an event (e.g. Survey answer, challenge response).",
                    "flatPath": "v1/event:insert",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.event.insert",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/event:insert",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1InsertEventRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1InsertEventResponse"
                    }
                }
            }
        },
        "events": {
            "methods": {
                "get": {
                    "description": "Gets events by keys.",
                    "flatPath": "v1/events:get",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.events.get",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/events:get",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1GetEventsRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1GetEventsResponse"
                    }
                }
            }
        },
        "participant": {
            "methods": {
                "get": {
                    "description": "Gets a Participant by key.",
                    "flatPath": "v1/participant:get",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.participant.get",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/participant:get",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1GetParticipantRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1Participant"
                    }
                }
            }
        },
        "practitioner": {
            "methods": {
                "create": {
                    "description": "Creates a new Practitioner.",
                    "flatPath": "v1/practitioner:create",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.practitioner.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/practitioner:create",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1CreatePractitionerRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1Practitioner"
                    }
                },
                "get": {
                    "description": "Gets a Practitioner by key.",
                    "flatPath": "v1/practitioner:get",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.practitioner.get",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/practitioner:get",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1GetPractitionerRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1Practitioner"
                    }
                }
            }
        },
        "task": {
            "methods": {
                "completeGeneral": {
                    "description": "Request to mark a visible task as completed.",
                    "flatPath": "v1/task:completeGeneral",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.task.completeGeneral",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/task:completeGeneral",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1CompleteGeneralTaskRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1CompleteGeneralTaskResponse"
                    }
                },
                "completeIdv": {
                    "description": "Request to mark a visible IDV task as completed.",
                    "flatPath": "v1/task:completeIdv",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.task.completeIdv",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/task:completeIdv",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1CompleteIdvTaskRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1CompleteIdvTaskResponse"
                    }
                },
                "get": {
                    "description": "Request to get an individual task for a participant.",
                    "flatPath": "v1/task:get",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.task.get",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/task:get",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1GetTaskRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1GetTaskResponse"
                    }
                },
                "start": {
                    "description": "Request to mark a visible task as started.",
                    "flatPath": "v1/task:start",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.task.start",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/task:start",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1StartTaskRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1StartTaskResponse"
                    }
                }
            }
        },
        "tasks": {
            "methods": {
                "get": {
                    "description": "Request the task list for the participant.",
                    "flatPath": "v1/tasks:get",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.tasks.get",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/tasks:get",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1GetTaskListRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1GetTaskListResponse"
                    }
                }
            }
        },
        "tasksummaries": {
            "methods": {
                "list": {
                    "description": "Request the list of task summaries for the participant. This currently only\nreturns tasks for the REGISTRY study.",
                    "flatPath": "v1/tasksummaries:list",
                    "httpMethod": "POST",
                    "id": "autopush_lifesciencestudies_pa_sandbox.tasksummaries.list",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/tasksummaries:list",
                    "request": {
                        "$ref": "LifescienceCspStudiesV1ListTaskSummariesRequest"
                    },
                    "response": {
                        "$ref": "LifescienceCspStudiesV1ListTaskSummariesResponse"
                    }
                }
            }
        }
    },
    "revision": "20190913",
    "rootUrl": "https://autopush-lifesciencestudies-pa.sandbox.googleapis.com/",
    "schemas": {
        "GoogleTypeDate": {
            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
            "id": "GoogleTypeDate",
            "properties": {
                "day": {
                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                    "format": "int32",
                    "type": "integer"
                },
                "year": {
                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleTypeDateTime": {
            "description": "Represents civil time in one of a few possible ways:\n\n * When utc_offset is set and time_zone is unset: a civil time on a calendar\n   day with a particular offset from UTC.\n * When time_zone is set and utc_offset is unset: a civil time on a calendar\n   day in a particular time zone.\n * When neither time_zone nor utc_offset is set: a civil time on a calendar\n   day in local time.\n\nThe date is relative to the Proleptic Gregorian Calendar.\n\nIf year is 0, the DateTime is considered not to have a specific year. month\nand day must have valid, non-zero values.\n\nThis type is more flexible than some applications may want. Make sure to\ndocument and validate your application's limitations.",
            "id": "GoogleTypeDateTime",
            "properties": {
                "day": {
                    "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and\nmonth.",
                    "format": "int32",
                    "type": "integer"
                },
                "hours": {
                    "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API\nmay choose to allow the value \"24:00:00\" for scenarios like business\nclosing time.",
                    "format": "int32",
                    "type": "integer"
                },
                "minutes": {
                    "description": "Required. Minutes of hour of day. Must be from 0 to 59.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Required. Month of year. Must be from 1 to 12.",
                    "format": "int32",
                    "type": "integer"
                },
                "nanos": {
                    "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to\n999,999,999.",
                    "format": "int32",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An\nAPI may allow the value 60 if it allows leap-seconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "timeZone": {
                    "$ref": "GoogleTypeTimeZone",
                    "description": "Time zone."
                },
                "utcOffset": {
                    "description": "UTC offset. Must be in the range of valid UTC offsets. For example, a UTC\noffset of -4:00 would be represented as { seconds: -14400 }.",
                    "format": "google-duration",
                    "type": "string"
                },
                "year": {
                    "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a\ndatetime without a year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleTypeMoney": {
            "description": "Represents an amount of money with its currency type.",
            "id": "GoogleTypeMoney",
            "properties": {
                "currencyCode": {
                    "description": "The 3-letter currency code defined in ISO 4217.",
                    "type": "string"
                },
                "nanos": {
                    "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                    "format": "int32",
                    "type": "integer"
                },
                "units": {
                    "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleTypeTimeOfDay": {
            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
            "id": "GoogleTypeTimeOfDay",
            "properties": {
                "hours": {
                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                    "format": "int32",
                    "type": "integer"
                },
                "minutes": {
                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                    "format": "int32",
                    "type": "integer"
                },
                "nanos": {
                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                    "format": "int32",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleTypeTimeZone": {
            "description": "Represents a time zone from the\n[IANA Time Zone Database](https://www.iana.org/time-zones).",
            "id": "GoogleTypeTimeZone",
            "properties": {
                "id": {
                    "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                    "type": "string"
                },
                "version": {
                    "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspCommonClientVersion": {
            "description": "A platform and version pair.",
            "id": "LifescienceCspCommonClientVersion",
            "properties": {
                "platform": {
                    "description": "The type of client.",
                    "enum": [
                        "PLATFORM_TYPE_UNKNOWN",
                        "ANDROID",
                        "IOS",
                        "WEB",
                        "EXTERNAL_MOBILE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "version": {
                    "description": "The client's version string, in the form of \"major.minor.patch[.flavor]\".\nVersions are equivalent if their representative strings are equal.\nOnly populated when platform is IOS or ANDROID, in which case it represents\nthe app version.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspContentCommonQuestionnaireId": {
            "description": "Unique identifier for a questionnaire.",
            "id": "LifescienceCspContentCommonQuestionnaireId",
            "properties": {
                "id": {
                    "description": "Questionnaire id number.",
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "description": "Questionnaire version number.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonAnswer": {
            "description": "Captures answer for a single question. Note that for surveys with repeated\nsections this is only used client-side.\nNext ID: 8;",
            "id": "LifescienceCspStudiesCommonAnswer",
            "properties": {
                "answerHistoryToken": {
                    "description": "A unique token used to track the answer's audit trail history in V2 survey.\nIf two answers share the same token, they are the answer for the same\nquestion in UI. See go/baseline-audit-trail for details.",
                    "type": "string"
                },
                "questionGroupId": {
                    "description": "Store question group id, section or sub-section id.\nOnly used for V1, V2 surveys.",
                    "format": "int64",
                    "type": "string"
                },
                "questionId": {
                    "format": "int64",
                    "type": "string"
                },
                "questionnaireGroupId": {
                    "description": "Store questionnare group id.\nOnly used for V3 surveys, i.e., Questionaires.",
                    "type": "string"
                },
                "response": {
                    "$ref": "LifescienceCspStudiesCommonResponse"
                },
                "surveyId": {
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonAudioRecord": {
            "description": "An individual audio recording.",
            "id": "LifescienceCspStudiesCommonAudioRecord",
            "properties": {
                "answerMetadata": {
                    "$ref": "LifescienceCspStudiesCommonAudioRecordAnswerMetadata"
                },
                "gcsObjectId": {
                    "description": "References the id of the GCS object that stores the audio data. Generated\nby the server and corresponds to a specific GCS file path.\nUsed to fetch the download url of the audio source file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonAudioRecordAnswerMetadata": {
            "description": "The metadata associated with an audio recording.",
            "id": "LifescienceCspStudiesCommonAudioRecordAnswerMetadata",
            "properties": {
                "createdTimeMillis": {
                    "description": "When the audio was recorded in milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "durationMillis": {
                    "description": "Duration of the audio record in milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "uploadStartTimeMillis": {
                    "description": "When the audio upload started in milliseconds.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonAudioRecordResponse": {
            "description": "Represents the response to an audio record question.",
            "id": "LifescienceCspStudiesCommonAudioRecordResponse",
            "properties": {
                "audioRecord": {
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonAudioRecord"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonAutocompleteChoice": {
            "description": "An individual choice in a autocomplete question response (which can contain\none or more choices)",
            "id": "LifescienceCspStudiesCommonAutocompleteChoice",
            "properties": {
                "answerMetadata": {
                    "$ref": "LifescienceCspStudiesCommonAutocompleteChoiceAnswerMetadata"
                },
                "stringAnswer": {
                    "description": "The human-readable representation of the user's answer.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonAutocompleteChoiceAnswerMetadata": {
            "description": "The optional metadata associated with an autocomplete choice.",
            "id": "LifescienceCspStudiesCommonAutocompleteChoiceAnswerMetadata",
            "properties": {
                "autocompleteIdSpace": {
                    "enum": [
                        "AUTOCOMPLETE_ID_SPACE_UNDEFINED",
                        "AUTOCOMPLETE_ID_SPACE_KG_MIDS",
                        "AUTOCOMPLETE_ID_SPACE_CSP_AUTO_IDS"
                    ],
                    "enumDescriptions": [
                        "",
                        "See go/ke-bg-knowledge-graph for details.",
                        "An arbitrary id space for lists generated internally."
                    ],
                    "type": "string"
                },
                "idAnswer": {
                    "description": "The id of the user's answers in the provided id space.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonAutocompleteResponse": {
            "description": "Represents the response to an autocomplete question.",
            "id": "LifescienceCspStudiesCommonAutocompleteResponse",
            "properties": {
                "autocompleteChoices": {
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonAutocompleteChoice"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonBirthPlace": {
            "description": "Represents a birthplace.",
            "id": "LifescienceCspStudiesCommonBirthPlace",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "other": {
                    "description": "If the country is not US, this field captures all\nthe details except the country.",
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonChallengeId": {
            "description": "Unique identifier for a challenge.",
            "id": "LifescienceCspStudiesCommonChallengeId",
            "properties": {
                "type": {
                    "description": "Challenge type.",
                    "enum": [
                        "CHALLENGE_TYPE_UNKNOWN",
                        "CHALLENGE_TYPE_SLEEP"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "version": {
                    "description": "Challenge version number.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonCondition": {
            "description": "A condition. Evaluates to true or false.",
            "id": "LifescienceCspStudiesCommonCondition",
            "properties": {
                "match": {
                    "description": "Multiple matches are AND-ed.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonMatch"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonDateRange": {
            "id": "LifescienceCspStudiesCommonDateRange",
            "properties": {
                "lower": {
                    "$ref": "GoogleTypeDate",
                    "description": "Optional. Lower bound on date."
                },
                "upper": {
                    "$ref": "GoogleTypeDate",
                    "description": "Optional. Upper bound on date."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonDependency": {
            "description": "Defines a dependency of a question group\non other questions. Evaluates to true or false.",
            "id": "LifescienceCspStudiesCommonDependency",
            "properties": {
                "condition": {
                    "description": "Multiple conditions are OR-ed.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonCondition"
                    },
                    "type": "array"
                },
                "isNegated": {
                    "description": "If true, this negates the whole expression, e.g.,\n!(condition1 || condition2).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonInstanceProgress": {
            "description": "Progress of a task, broken into instances of different completion states.",
            "id": "LifescienceCspStudiesCommonInstanceProgress",
            "properties": {
                "result": {
                    "description": "User's progress on previous instances of this task.",
                    "enumDescriptions": [
                        "",
                        "This instance of the task was completed by the user.",
                        "This instance of the task was skipped by the user - not completed in the\nrequired time window.",
                        "This is the current instance of the task, pending user action."
                    ],
                    "items": {
                        "enum": [
                            "INSTANCE_PROGRESS_RESULT_UNSPECIFIED",
                            "INSTANCE_PROGRESS_RESULT_COMPLETE",
                            "INSTANCE_PROGRESS_RESULT_SKIPPED",
                            "INSTANCE_PROGRESS_RESULT_PENDING"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonMatch": {
            "description": "Defines the actual match against a question ID.\nIt is only evaluated when the particular question is answered.\nEvaluates to true when the response is exactly that,\nor, when is_negated == true, when the response is anything else.",
            "id": "LifescienceCspStudiesCommonMatch",
            "properties": {
                "isNegated": {
                    "description": "If true, the match will succeed with the response\nis anything other than the one defined above.",
                    "type": "boolean"
                },
                "questionId": {
                    "description": "The question ID whose response will be examined.",
                    "format": "int64",
                    "type": "string"
                },
                "response": {
                    "$ref": "LifescienceCspStudiesCommonResponse",
                    "description": "The match will succeed with the response is exactly this."
                },
                "sumScoreMatch": {
                    "$ref": "LifescienceCspStudiesCommonSumScoreMatch",
                    "description": "If this field is specified, use this field to evaluate the value\nof the Match instead of 'question_id', 'response' and 'is_negated'."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonMultipleChoice": {
            "description": "Represents a multiple choice.",
            "id": "LifescienceCspStudiesCommonMultipleChoice",
            "properties": {
                "choices": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonMultipleNumeric": {
            "description": "Represents multiple numeric input, possibly with units.",
            "id": "LifescienceCspStudiesCommonMultipleNumeric",
            "properties": {
                "numeric": {
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonNumeric"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonName": {
            "description": "Represents a typical name.",
            "id": "LifescienceCspStudiesCommonName",
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "middle": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonNoResponse": {
            "description": "Response information when no actual response is provided for a question.",
            "id": "LifescienceCspStudiesCommonNoResponse",
            "properties": {
                "justificationType": {
                    "description": "Change reason defined in the enum. JUSTIFICATION_TYPE_UNKNOWN is not\nallowed here.",
                    "enum": [
                        "JUSTIFICATION_TYPE_UNKNOWN",
                        "OTHER",
                        "SITE_OVERSIGHT",
                        "PARTICIPANT_DECLINED",
                        "PARTICIPANT_DOES_NOT_REMEMBER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Other justification which will be specified in other_justification field.",
                        "Site forgot to do the test.",
                        "Participant refused to provide the answer.",
                        "Participant doesn\u2019t remember the answer."
                    ],
                    "type": "string"
                },
                "notApplicable": {
                    "description": "Whether N/A checkbox is checked.",
                    "type": "boolean"
                },
                "otherJustification": {
                    "description": "String justification if the reason if justification_type is set to OTHER.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonNumeric": {
            "description": "Represents a numeric quantity, possibly with units and precise to 6 digits.\nNote on usage: it is okay to store values in original units of the answer.\nExample, for weight, storing either LB or KG in the DB is okay.\nFor any downstream analysis we take care to convert to SI units.",
            "id": "LifescienceCspStudiesCommonNumeric",
            "properties": {
                "unit": {
                    "description": "use UNIT_UNKNOWN if the number has no units",
                    "enum": [
                        "UNIT_UNKNOWN",
                        "INCH",
                        "LB",
                        "KILOGRAM",
                        "CENTIMETER",
                        "FOOT",
                        "MMHG",
                        "FAHRENHEIT",
                        "CELSIUS",
                        "BPM",
                        "OZ",
                        "HOUR",
                        "MINUTE",
                        "SEC",
                        "PERCENT",
                        "KVP",
                        "MGYCM",
                        "CUBIC_CENTIMETER",
                        "DOSE_AREA_PRODUCT",
                        "MM",
                        "MG",
                        "MM3",
                        "MSEC",
                        "DEGREE",
                        "METER",
                        "MILLIAMP",
                        "MILLIAMPSEC",
                        "SPHERE",
                        "CYLINDER",
                        "AXIS",
                        "SYSTOLIC",
                        "DIASTOLIC",
                        "HEARTBEAT",
                        "METER_SQUARED",
                        "ML",
                        "LITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "pound",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "milli gray",
                        "",
                        "mGy*cm^2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "valueUunit": {
                    "description": "value in unit * 10^6",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonNumericData": {
            "id": "LifescienceCspStudiesCommonNumericData",
            "properties": {
                "suffix": {
                    "description": "Suffix of this input slot, can be :, /, or other string.",
                    "type": "string"
                },
                "unit": {
                    "description": "The unit for this numeric input slot, set to UNKNOWN if there is no unit.",
                    "enum": [
                        "UNIT_UNKNOWN",
                        "INCH",
                        "LB",
                        "KILOGRAM",
                        "CENTIMETER",
                        "FOOT",
                        "MMHG",
                        "FAHRENHEIT",
                        "CELSIUS",
                        "BPM",
                        "OZ",
                        "HOUR",
                        "MINUTE",
                        "SEC",
                        "PERCENT",
                        "KVP",
                        "MGYCM",
                        "CUBIC_CENTIMETER",
                        "DOSE_AREA_PRODUCT",
                        "MM",
                        "MG",
                        "MM3",
                        "MSEC",
                        "DEGREE",
                        "METER",
                        "MILLIAMP",
                        "MILLIAMPSEC",
                        "SPHERE",
                        "CYLINDER",
                        "AXIS",
                        "SYSTOLIC",
                        "DIASTOLIC",
                        "HEARTBEAT",
                        "METER_SQUARED",
                        "ML",
                        "LITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "pound",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "milli gray",
                        "",
                        "mGy*cm^2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "validationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule to be applied for this input slot. Optional."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonNumericRange": {
            "description": "Represents a closed numeric range.",
            "id": "LifescienceCspStudiesCommonNumericRange",
            "properties": {
                "high": {
                    "$ref": "LifescienceCspStudiesCommonNumeric",
                    "description": "Closed upper bound of the numeric range."
                },
                "low": {
                    "$ref": "LifescienceCspStudiesCommonNumeric",
                    "description": "Closed lower bound of the numeric range."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonOverrideValidationDetails": {
            "id": "LifescienceCspStudiesCommonOverrideValidationDetails",
            "properties": {
                "justification": {
                    "description": "Justification for overriding custom validation. Required.",
                    "type": "string"
                },
                "multipleNumericValidation": {
                    "$ref": "LifescienceCspStudiesCommonOverrideValidationDetailsNumericDataValidations",
                    "description": "The validation rules for response type MultipleNumeric."
                },
                "unitValidationRule": {
                    "$ref": "LifescienceCspStudiesCommonOverrideValidationDetailsUnitOptionValidations",
                    "description": "The validation rules for response type Numeric with units."
                },
                "validationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "The validation rule to override."
                },
                "validationRules": {
                    "description": "The order of the failed validation rules doesn't matter, because we will\nuse the validation code.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonValidationRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonOverrideValidationDetailsNumericDataValidations": {
            "description": "Validations for NumericData.",
            "id": "LifescienceCspStudiesCommonOverrideValidationDetailsNumericDataValidations",
            "properties": {
                "unit": {
                    "description": "The unit for this numeric input slot, set to UNKNOWN if there is no\nunit.",
                    "enum": [
                        "UNIT_UNKNOWN",
                        "INCH",
                        "LB",
                        "KILOGRAM",
                        "CENTIMETER",
                        "FOOT",
                        "MMHG",
                        "FAHRENHEIT",
                        "CELSIUS",
                        "BPM",
                        "OZ",
                        "HOUR",
                        "MINUTE",
                        "SEC",
                        "PERCENT",
                        "KVP",
                        "MGYCM",
                        "CUBIC_CENTIMETER",
                        "DOSE_AREA_PRODUCT",
                        "MM",
                        "MG",
                        "MM3",
                        "MSEC",
                        "DEGREE",
                        "METER",
                        "MILLIAMP",
                        "MILLIAMPSEC",
                        "SPHERE",
                        "CYLINDER",
                        "AXIS",
                        "SYSTOLIC",
                        "DIASTOLIC",
                        "HEARTBEAT",
                        "METER_SQUARED",
                        "ML",
                        "LITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "pound",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "milli gray",
                        "",
                        "mGy*cm^2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "validationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule to be applied for this input slot. Optional."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonOverrideValidationDetailsUnitOptionValidations": {
            "description": "Validations for UnitOptionData.",
            "id": "LifescienceCspStudiesCommonOverrideValidationDetailsUnitOptionValidations",
            "properties": {
                "secondaryUnit": {
                    "description": "The item value of the second numeric input. Optional.",
                    "enum": [
                        "UNIT_UNKNOWN",
                        "INCH",
                        "LB",
                        "KILOGRAM",
                        "CENTIMETER",
                        "FOOT",
                        "MMHG",
                        "FAHRENHEIT",
                        "CELSIUS",
                        "BPM",
                        "OZ",
                        "HOUR",
                        "MINUTE",
                        "SEC",
                        "PERCENT",
                        "KVP",
                        "MGYCM",
                        "CUBIC_CENTIMETER",
                        "DOSE_AREA_PRODUCT",
                        "MM",
                        "MG",
                        "MM3",
                        "MSEC",
                        "DEGREE",
                        "METER",
                        "MILLIAMP",
                        "MILLIAMPSEC",
                        "SPHERE",
                        "CYLINDER",
                        "AXIS",
                        "SYSTOLIC",
                        "DIASTOLIC",
                        "HEARTBEAT",
                        "METER_SQUARED",
                        "ML",
                        "LITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "pound",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "milli gray",
                        "",
                        "mGy*cm^2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "secondaryValidationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule to be applied to the second numeric input. Optional\nfor secondary inputs."
                },
                "unit": {
                    "description": "The item value in the unit-drop-down list.",
                    "enum": [
                        "UNIT_UNKNOWN",
                        "INCH",
                        "LB",
                        "KILOGRAM",
                        "CENTIMETER",
                        "FOOT",
                        "MMHG",
                        "FAHRENHEIT",
                        "CELSIUS",
                        "BPM",
                        "OZ",
                        "HOUR",
                        "MINUTE",
                        "SEC",
                        "PERCENT",
                        "KVP",
                        "MGYCM",
                        "CUBIC_CENTIMETER",
                        "DOSE_AREA_PRODUCT",
                        "MM",
                        "MG",
                        "MM3",
                        "MSEC",
                        "DEGREE",
                        "METER",
                        "MILLIAMP",
                        "MILLIAMPSEC",
                        "SPHERE",
                        "CYLINDER",
                        "AXIS",
                        "SYSTOLIC",
                        "DIASTOLIC",
                        "HEARTBEAT",
                        "METER_SQUARED",
                        "ML",
                        "LITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "pound",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "milli gray",
                        "",
                        "mGy*cm^2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "validationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule to be applied if this unit is selected. Required."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonPregnancyMetadata": {
            "description": "Information regarding the user's pregnancy. This is populated when the user\nis put into the PREGNANCY user state.",
            "id": "LifescienceCspStudiesCommonPregnancyMetadata",
            "properties": {
                "expectedDueDate": {
                    "$ref": "GoogleTypeDate",
                    "description": "The user's expected due date."
                },
                "pregnancyStatusSource": {
                    "enum": [
                        "PREGNANCY_SOURCE_UNKNOWN",
                        "SELF_REPORTED_PREGNANCY",
                        "ADMIN_REPORTED_PREGNANCY"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user answered that they were pregnant in the \"Women Only\"\nenrollment survey.",
                        "An administrative user marked the user as pregnant in the admin portal\nor the EDC."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonRepeatRule": {
            "description": "Defines how a survey section/subsection should repeat.",
            "id": "LifescienceCspStudiesCommonRepeatRule",
            "properties": {
                "appendInstruction": {
                    "description": "The instruction on the append button, already i18ned.\ne.g. \"Add more medication info\"",
                    "type": "string"
                },
                "initialRenderAmount": {
                    "description": "The number of survey sections or subsections to render for initialization.\nShow append button only if not set or set to 0.",
                    "format": "int32",
                    "type": "integer"
                },
                "title": {
                    "description": "Summary title for all the repeated survey subsection/section under this\nrule.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonResponse": {
            "description": "Captures an actual response.\nNext ID: 51",
            "id": "LifescienceCspStudiesCommonResponse",
            "properties": {
                "address": {
                    "$ref": "RpcAddressData"
                },
                "audioRecordResponse": {
                    "$ref": "LifescienceCspStudiesCommonAudioRecordResponse",
                    "description": "LINT.ThenChange(//depot/google3/java/com/google/lifescience/csp/studies/converters/QuestionChangeConverter.java)"
                },
                "autocompleteResponse": {
                    "$ref": "LifescienceCspStudiesCommonAutocompleteResponse"
                },
                "birthPlace": {
                    "$ref": "LifescienceCspStudiesCommonBirthPlace"
                },
                "boolValue": {
                    "type": "boolean"
                },
                "changeJustification": {
                    "description": "Justification for updating response.",
                    "type": "string"
                },
                "dateOfBirth": {
                    "$ref": "GoogleTypeDate"
                },
                "isRepeatedRecordData": {
                    "description": "Whether the response is from a repeating record. Currently used in the EDC\nPortal to indicate that the initialized data is from a previous record.",
                    "type": "boolean"
                },
                "isValidationOverridden": {
                    "description": "Whether validation was overridden.",
                    "type": "boolean"
                },
                "multipleChoice": {
                    "$ref": "LifescienceCspStudiesCommonMultipleChoice"
                },
                "multipleNumeric": {
                    "$ref": "LifescienceCspStudiesCommonMultipleNumeric"
                },
                "name": {
                    "$ref": "LifescienceCspStudiesCommonName"
                },
                "noResponse": {
                    "description": "LINT.IfChange\nuse NoResponse instead.",
                    "type": "boolean"
                },
                "noResponseValue": {
                    "$ref": "LifescienceCspStudiesCommonNoResponse"
                },
                "numeric": {
                    "$ref": "LifescienceCspStudiesCommonNumeric"
                },
                "numericRange": {
                    "$ref": "LifescienceCspStudiesCommonNumericRange"
                },
                "numericUunit": {
                    "description": "Use numeric instead.",
                    "format": "int64",
                    "type": "string"
                },
                "overrideValidationDetails": {
                    "$ref": "LifescienceCspStudiesCommonOverrideValidationDetails",
                    "description": "Contains details about the validations that are being overridden. Required\nif is_validation_overridden is true."
                },
                "phoneNumber": {
                    "type": "string"
                },
                "singleChoice": {
                    "format": "int64",
                    "type": "string"
                },
                "singleChoiceScale": {
                    "format": "int64",
                    "type": "string"
                },
                "sourceVerification": {
                    "description": "Represents the status of the source document verification.",
                    "enum": [
                        "SOURCE_VERIFICATION_STATUS_UNSPECIFIED",
                        "NOT_APPROVED",
                        "APPROVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "starRating": {
                    "format": "int32",
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "timeOfDay": {
                    "$ref": "GoogleTypeTimeOfDay"
                },
                "timeOfDayInput": {
                    "$ref": "GoogleTypeTimeOfDay"
                },
                "timeRange": {
                    "$ref": "LifescienceCspStudiesCommonTimeRange"
                },
                "timestamp": {
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonSumScoreMatch": {
            "description": "Support the expression:\n  Sum(question.score) {\u2018=\u2019 | \u2018!=\u2019 | \u2018>\u2019 | \u2018>=\u2019 | \u2018<\u2019 | \u2018<=\u2019} \u201cthreshold\u201d",
            "id": "LifescienceCspStudiesCommonSumScoreMatch",
            "properties": {
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        "EQ",
                        "NE",
                        "GT",
                        "GE",
                        "LT",
                        "LE"
                    ],
                    "enumDescriptions": [
                        "",
                        "equal to",
                        "not equal to.",
                        "greater than",
                        "greater than or equal to.",
                        "less than",
                        "less than or equal to."
                    ],
                    "type": "string"
                },
                "questionIds": {
                    "description": "Calculate the sum of the scores of the answers to the given list of\nquestions.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "threshold": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonSurveyId": {
            "description": "Unique identifier for a survey.",
            "id": "LifescienceCspStudiesCommonSurveyId",
            "properties": {
                "surveyId": {
                    "description": "Survey id number.",
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "description": "Survey version number.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonTaskProgress": {
            "description": "Progress details about a task.",
            "id": "LifescienceCspStudiesCommonTaskProgress",
            "properties": {
                "instanceProgress": {
                    "$ref": "LifescienceCspStudiesCommonInstanceProgress",
                    "description": "Progress broken into instances, where each instance can be of a different\ncompletion state."
                },
                "instancesCompleted": {
                    "description": "Number of instances completed, rendered as \"[#] of [total #] completed\".",
                    "format": "int32",
                    "type": "integer"
                },
                "totalNum": {
                    "description": "Total number of possible progress on this task, e.g. 7 (challenge days) or\n20 (surveys in a group).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonTaskSummaryBufferPage": {
            "description": "Content used to render a page with additional details either before / after\njumping into a task.",
            "id": "LifescienceCspStudiesCommonTaskSummaryBufferPage",
            "properties": {
                "buttonLabel": {
                    "description": "The text of the button shown to proceed.",
                    "type": "string"
                },
                "description": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "Additional text content for the page (i18n). Optional."
                },
                "hiresImageUrl": {
                    "description": "Path for the 2x resolution image hosted on gstatic. Optional.",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "Path for the image hosted on gstatic. Optional.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to display on the page. Optional.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonTimeRange": {
            "description": "Represents a range between a begin and end time of day.",
            "id": "LifescienceCspStudiesCommonTimeRange",
            "properties": {
                "end": {
                    "$ref": "GoogleTypeTimeOfDay"
                },
                "start": {
                    "$ref": "GoogleTypeTimeOfDay"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonUnitOptionData": {
            "description": "Unit option allowed for numeric questions. Will be rendered as an item in the\nunit-drop-down list for numeric input.",
            "id": "LifescienceCspStudiesCommonUnitOptionData",
            "properties": {
                "conversionRate": {
                    "description": "Conversion rate from the primary unit to secondary unit. The result of a\nvalue from two units will be expressed with the secondary unit. Required\nif there is a secondary unit. For example, if the primary input is unit\nfeet and the secondary input is unit inches, the conversion rate would be\n12.",
                    "format": "int64",
                    "type": "string"
                },
                "label": {
                    "description": "The item label in the unit-drop-down list. Already i18n.",
                    "type": "string"
                },
                "secondaryLabel": {
                    "description": "The localized item label for the second input. Required if there is a\nsecondary input.",
                    "type": "string"
                },
                "secondaryUnit": {
                    "description": "The item value of the second numeric input. Optional.",
                    "enum": [
                        "UNIT_UNKNOWN",
                        "INCH",
                        "LB",
                        "KILOGRAM",
                        "CENTIMETER",
                        "FOOT",
                        "MMHG",
                        "FAHRENHEIT",
                        "CELSIUS",
                        "BPM",
                        "OZ",
                        "HOUR",
                        "MINUTE",
                        "SEC",
                        "PERCENT",
                        "KVP",
                        "MGYCM",
                        "CUBIC_CENTIMETER",
                        "DOSE_AREA_PRODUCT",
                        "MM",
                        "MG",
                        "MM3",
                        "MSEC",
                        "DEGREE",
                        "METER",
                        "MILLIAMP",
                        "MILLIAMPSEC",
                        "SPHERE",
                        "CYLINDER",
                        "AXIS",
                        "SYSTOLIC",
                        "DIASTOLIC",
                        "HEARTBEAT",
                        "METER_SQUARED",
                        "ML",
                        "LITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "pound",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "milli gray",
                        "",
                        "mGy*cm^2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "secondaryValidationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule to be applied to the second numeric input. Optional\nfor secondary inputs."
                },
                "unit": {
                    "description": "The item value in the unit-drop-down list.",
                    "enum": [
                        "UNIT_UNKNOWN",
                        "INCH",
                        "LB",
                        "KILOGRAM",
                        "CENTIMETER",
                        "FOOT",
                        "MMHG",
                        "FAHRENHEIT",
                        "CELSIUS",
                        "BPM",
                        "OZ",
                        "HOUR",
                        "MINUTE",
                        "SEC",
                        "PERCENT",
                        "KVP",
                        "MGYCM",
                        "CUBIC_CENTIMETER",
                        "DOSE_AREA_PRODUCT",
                        "MM",
                        "MG",
                        "MM3",
                        "MSEC",
                        "DEGREE",
                        "METER",
                        "MILLIAMP",
                        "MILLIAMPSEC",
                        "SPHERE",
                        "CYLINDER",
                        "AXIS",
                        "SYSTOLIC",
                        "DIASTOLIC",
                        "HEARTBEAT",
                        "METER_SQUARED",
                        "ML",
                        "LITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "pound",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "milli gray",
                        "",
                        "mGy*cm^2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "validationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule to be applied if this unit is selected. Optional."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonValidationRule": {
            "description": "Next ID: 14\nValidation rule for a single question.",
            "id": "LifescienceCspStudiesCommonValidationRule",
            "properties": {
                "allowPartialDate": {
                    "description": "For date inputs only.  Allows partial dates including (Year), (Year,\nMonth). Note that this is not supported for datetime inputs.",
                    "type": "boolean"
                },
                "checkCode": {
                    "description": "Optional. The code associated with this validation rule.",
                    "type": "string"
                },
                "checkMessage": {
                    "description": "Optional. The custom error message to display when this rule fails.",
                    "type": "string"
                },
                "dateRange": {
                    "$ref": "LifescienceCspStudiesCommonDateRange",
                    "description": "For date inputs only. Specifies an allowable range for a date."
                },
                "isFuture": {
                    "description": "For date inputs only. Restricts to dates in the future. Note that\nthis includes today.",
                    "type": "boolean"
                },
                "isInteger": {
                    "description": "For numeric inputs only. If set, only allows inputs that are integers.",
                    "type": "boolean"
                },
                "isPast": {
                    "description": "For date/datetime inputs only. Restricts to dates in the past. Note that\nthis includes today.",
                    "type": "boolean"
                },
                "minYearsAgo": {
                    "description": "For date inputs only. Specifies a minimum number of years that the date\nmust have been in the past. For example, \"When were you born?\" could use\nthis to ensure that the user is at least 18 years old.",
                    "format": "int32",
                    "type": "integer"
                },
                "pattern": {
                    "description": "For text and numeric inputs only. Case-sensitive regular expression.\nValues must be in the subset of allowed syntax that is shared by all\nsupported platforms: Java, Javascript and NSRegularExpression.\nNote that it should not be enclosed in slashes, i.e., use \"ab+c\" rather\nthan \"/ab+c/\".",
                    "type": "string"
                },
                "range": {
                    "$ref": "LifescienceCspStudiesCommonNumericRange",
                    "description": "For numeric inputs only. Allows input to be in a certain (closed) range."
                },
                "timeRange": {
                    "$ref": "LifescienceCspStudiesCommonTimeRange",
                    "description": "For TIME_OF_DAY questions only. Specifies an allowable range for a time."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonVoiceLogId": {
            "description": "Unique identifier for a voice log.",
            "id": "LifescienceCspStudiesCommonVoiceLogId",
            "properties": {
                "id": {
                    "description": "Voice log id number.",
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "description": "Voice log version number.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesCommonVoidEntity": {
            "description": "Content for a VOID QuestionType.",
            "id": "LifescienceCspStudiesCommonVoidEntity",
            "properties": {
                "information": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "The html content to render."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesStoragePaymentConfiguration": {
            "description": "Payment configuration for a Participant in CSP.",
            "id": "LifescienceCspStudiesStoragePaymentConfiguration",
            "properties": {
                "hyperwalletPaymentConfiguration": {
                    "$ref": "LifescienceCspStudiesStoragePaymentConfigurationHyperwalletPaymentConfiguration",
                    "description": "A Hyperwallet payment configuration"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesStoragePaymentConfigurationHyperwalletPaymentConfiguration": {
            "description": "A Hyperwallet specific configuration.",
            "id": "LifescienceCspStudiesStoragePaymentConfigurationHyperwalletPaymentConfiguration",
            "properties": {
                "program": {
                    "description": "The program to which the user_token belongs.",
                    "enum": [
                        "HYPERWALLET_PROGRAM_UNKNOWN",
                        "DUKE_LPA_PROGRAM",
                        "VERILY_CSP_STUDIES_PROGRAM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "userToken": {
                    "description": "The token provided by Hyperwallet to uniquely identify a user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Account": {
            "description": "Account data for a clinical study participant.\nNext ID: 31",
            "id": "LifescienceCspStudiesV1Account",
            "properties": {
                "accountKeys": {
                    "description": "Additional account keys.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1AccountKey"
                    },
                    "type": "array"
                },
                "accountTags": {
                    "description": "Tags that can be used for task targeting.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1AccountTag"
                    },
                    "type": "array"
                },
                "adminNotes": {
                    "description": "Administrator notes for the participant.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1AdminNote"
                    },
                    "type": "array"
                },
                "appointments": {
                    "description": "All appointments (past and future) for this account.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1Appointment"
                    },
                    "type": "array"
                },
                "bioSampleKits": {
                    "description": "Bio Sample Kits associated with this account.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1BioSampleKit"
                    },
                    "type": "array"
                },
                "cohortAllocation": {
                    "$ref": "LifescienceCspStudiesV1CohortAllocation",
                    "description": "Cohort allocation info."
                },
                "contactInfo": {
                    "$ref": "LifescienceCspStudiesV1ContactInfo"
                },
                "createdTimeMillis": {
                    "description": "When this account was created.",
                    "format": "int64",
                    "type": "string"
                },
                "demographics": {
                    "$ref": "LifescienceCspStudiesV1Demographics"
                },
                "enrolledTimeMillis": {
                    "description": "When the account first transitioned to ENROLLED state.",
                    "format": "int64",
                    "type": "string"
                },
                "heartbeatAnchorTime": {
                    "description": "Anchor time for all heartbeat queue events. The scheduled time for\nenqueued HandleHeartbeat messages will be some multiple of the heartbeat\nfrequency after this time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "heartbeatStarted": {
                    "description": "Whether this account has a heartbeat entry in the queue.\nFalse when the account is first created, then forever true\nafter the heartbeat has started.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique internal id. The id is always more than 0 if assigned.",
                    "format": "int64",
                    "type": "string"
                },
                "identityMetadata": {
                    "$ref": "LifescienceCspStudiesV1IdentityMetadata",
                    "description": "Metadata about verification of the participant's identity."
                },
                "modifiedTimeMillis": {
                    "description": "When this account was last modified.",
                    "format": "int64",
                    "type": "string"
                },
                "nextUpcomingAppointment": {
                    "$ref": "LifescienceCspStudiesV1Appointment",
                    "description": "The next upcoming appointment for this account, where the next upcoming\nappointment is the appointment with the lowest timestamp that is greater\nthan the request time."
                },
                "owedEarnings": {
                    "$ref": "LifescienceCspStudiesV1OwedEarnings",
                    "description": "Information about any owed earnings to be paid to this user."
                },
                "participantKey": {
                    "$ref": "LifescienceCspStudiesV1ParticipantKey",
                    "description": "Key identifying the participant tied to this account.\nOptional. Only set for accounts that are tied to a Participant (as of\n2018-11-02, only accounts created via the Registry)."
                },
                "participantType": {
                    "description": "Whether the participant is referred by an admin.",
                    "enum": [
                        "PARTICIPANT_TYPE_UNKNOWN",
                        "SELF_ENROLL_PARTICIPANT",
                        "REFERRED_PARTICIPANT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "pregnancyMetadata": {
                    "$ref": "LifescienceCspStudiesCommonPregnancyMetadata",
                    "description": "Pregnancy metadata. To be completed when the user is PREGNANT."
                },
                "randomizationMetadata": {
                    "$ref": "LifescienceCspStudiesV1RandomizationMetadata",
                    "description": "Randomization metadata."
                },
                "savedTasks": {
                    "description": "Tasks that the participant has completed or partially completed.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1SavedTask"
                    },
                    "type": "array"
                },
                "site": {
                    "description": "Optional. The site that the participant has been assigned to, if any. Some\nstudies assign a participant to a site at enrollment.",
                    "enum": [
                        "SITE_UNKNOWN",
                        "SITE_KANNAPOLIS",
                        "SITE_DURHAM",
                        "SITE_PALO_ALTO",
                        "SITE_LOS_ANGELES",
                        "SITE_ALLEGHENY",
                        "SITE_SUTTER",
                        "SITE_VIRTUAL",
                        "SITE_SHASTA_CALIFORNIA",
                        "SITE_SHASTA_ILLINOIS",
                        "SITE_SHASTA_INDIANA",
                        "SITE_SHASTA_OKLAHOMA",
                        "SITE_SHASTA_TEXAS",
                        "SITE_SHASTA_WISCONSIN",
                        "SITE_DENALI_PRIMARY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Duke",
                        "",
                        "Stanford Health",
                        "California Health and Longevity Insitute (CHLI)",
                        "Allegheny Health Network",
                        "Sutter Health / Palo Alto Medical Foundation",
                        "Virtual Site.\nThis is used for studies such as Duke Lpa where CSP\ntracks appointments like a LabCorp visit but there\nis not a specific site associated with this visit.",
                        "Sites for SHASTA (Skin Study)\n\nShasta is a virtual study; there are no physical sites. Sites are used to\nrestrict study administrator access to a subset of participants.\n\nWARNING: DO NOT use these sites for studies other than SHASTA. Doing so\nmay result in unintended consequences. For example, some states may have\nmore than one time zone, but sites are limited to a single time zone. This\nis OK in SHASTA but may not be OK for other studies.\n\nFor additional context, see go/hawthorne-screening-tdd.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sites for DENALI (Speech Analysis Study)"
                    ],
                    "type": "string"
                },
                "status": {
                    "$ref": "LifescienceCspStudiesV1AccountStatus",
                    "description": "Status of the account."
                },
                "study": {
                    "description": "The study this account is for.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "thirdPartyLinks": {
                    "description": "Links to third-party accounts (e.g. Medicare).",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1ThirdPartyLink"
                    },
                    "type": "array"
                },
                "version": {
                    "description": "the version of the account.  This is an incrementing number that starts\nat zero when the account is first inserted and is increased by one every\ntime a change is made to the account or any child tables.  This can be\nused for optimistic concurrency, caching, and conflict detection.\nThe history of the versions can be found in the AccountChangeHistory\ntable.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1AccountKey": {
            "description": "An identifier that can be used to locate an Account. It is composed of a\nkey type (essentially a namespace) and an id (a value in that namespace).",
            "id": "LifescienceCspStudiesV1AccountKey",
            "properties": {
                "id": {
                    "description": "Optional. Uniquely identifies an account in the context of the |key_type|.\nRequired if |key_type| is not GAIA. For GAIA, if this is unset, the GAIA\nid of the authenicated user will be used to lookup the study account.",
                    "type": "string"
                },
                "keyType": {
                    "description": "Required. Type of account key.",
                    "enum": [
                        "ACCOUNT_KEY_TYPE_UNKNOWN",
                        "GAIA",
                        "PARTICIPANT",
                        "GAIA_EMAIL",
                        "VERILY_PARTICIPANT_ID",
                        "RANDOMIZATION_ID",
                        "SUBJECT_ID"
                    ],
                    "enumDescriptions": [
                        "",
                        "GAIA ID. This key type is present for all accounts for self-enrolled\nparticipants, but may be absent for referred participant accounts created\nby an admin (Such accounts can only be proxied by admins).",
                        "External CSP participant ID. This key type is present for all accounts.",
                        "Like GAIA, but allows the client to specify email address rather than ID.\nThis is used only by the API, not storage.",
                        "Verily IdService ID of the associated Participant entity.\nAs of 2018/08, this is only used for debugging, e.g. bequt.\nThis is used only by the API, not storage.",
                        "An identifier given to participants that have been randomized into a study.",
                        "An arbitrary identifier that can be set for a user, typically coming from\nan external system."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1AccountStatus": {
            "description": "Status of the study account.",
            "id": "LifescienceCspStudiesV1AccountStatus",
            "properties": {
                "explicitlySet": {
                    "description": "If this is set, the state machine is suspended and the state is pinned\nto the state in the field above.",
                    "type": "boolean"
                },
                "state": {
                    "description": "State the account is in.",
                    "enum": [
                        "ACCOUNT_STATE_UNKNOWN",
                        "PRESCREEN",
                        "SCREEN_ELIGIBLE",
                        "SCREEN_COMPLETE",
                        "WAITING_SCHEDULING",
                        "SCHEDULED",
                        "ENROLLED",
                        "SCREEN_DECLINED",
                        "DECEASED",
                        "WITHDRAWN",
                        "ABUSE",
                        "LOST_TO_FOLLOWUP",
                        "PREGNANT",
                        "REGISTRY_ONLY",
                        "IDENTITY_VERIFICATION_FAILED",
                        "IDENTITY_VERIFIED",
                        "WAITLISTED",
                        "DUPLICATE",
                        "ELIGIBLE_FOR_SCREENING",
                        "SCHEDULED_FOR_SCREENING",
                        "ELIGIBLE_FOR_STUDY",
                        "INELIGIBLE_FOR_SCREENING",
                        "SCREENING_COMPLETE",
                        "DECLINED_TO_JOIN_STUDY",
                        "FROZEN",
                        "WAITING_FOR_SCHEDULING_SCREENING"
                    ],
                    "enumDescriptions": [
                        "",
                        "The account has just been created (after the user hit the enrollment\nportal).",
                        "This account has signed both consents of the enrollment portal and is\ncreating their Baseline profile.",
                        "Participant has completed all enrollment portal tasks (e.g. application\nsurveys), and we\u2019re waiting on some other condition to be met (e.g. cohort\nassignment, identity verification).",
                        "Participant is waiting for a visit scheduling.",
                        "Participant has a visit scheduled.",
                        "Participant has a visit scheduled and attended.",
                        "Hard rejection state. The participant is out.",
                        "Participant has died. Access is denied.",
                        "Participant has withdrawn registry consent. Access is denied.",
                        "Participant has abused the system. Access is denied.",
                        "Participant has not responded to communication several times. Access is\ndenied.",
                        "Participant self-reported pregnancy or was found pregnant in a test. Access\nis denied.",
                        "Can get there either through (automatic) soft rejection, or explicitly if\nthe participant refuses to sign (or withdraws) onsite consent.",
                        "Participant's identity could not be verified. The participant is out.",
                        "Participant's identity was verified.",
                        "Enrollment cap has been met at the moment. The participant might be\ncontacted later if the cap is increased.",
                        "Duplicate account.",
                        "Participant is eligible for screening.",
                        "Participant is scheduled for screening.",
                        "Participant is eligible for the study.",
                        "Participant is ineligible for screening.",
                        "Participant complete the screening.",
                        "Participant decline to join the study.",
                        "A frozen account, typically used at the end of studies that need to lock\naccounts. No new events (surveys, CRFs, etc) may be submitted for or by\nthese users (unless their account is unfrozen).",
                        "Participant is waiting for scheduling for the screening in home visit."
                    ],
                    "type": "string"
                },
                "timeMillis": {
                    "description": "When the account entered this state.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1AccountTag": {
            "description": "A cohort-like tag that is used for targeting tasks. See\ngo/csp-channel-tasks-dd.",
            "id": "LifescienceCspStudiesV1AccountTag",
            "properties": {
                "tag": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ActionPath": {
            "description": "A semantic path combining a view context and a path within that view.",
            "id": "LifescienceCspStudiesV1ActionPath",
            "properties": {
                "relativePath": {
                    "description": "A path which can be appended to the view.",
                    "type": "string"
                },
                "viewContext": {
                    "description": "View context in which the relative_path should be interpreted.",
                    "enum": [
                        "VIEW_CONTEXT_UNKNOWN",
                        "ENROLLMENT_PORTAL",
                        "PARTICIPANT_PORTAL",
                        "MOCK_PARTICIPANT_PORTAL",
                        "EDC_PORTAL",
                        "MARKETING_SITE",
                        "ADMIN_PORTAL",
                        "BUILDER_PORTAL",
                        "IDENTITY_VERIFICATION",
                        "MEMBER_PORTAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "For testing.",
                        "",
                        "Not a view supported by CSP servers, but can be used to indicate a\nredirect.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Actor": {
            "description": "The actor who made a change.",
            "id": "LifescienceCspStudiesV1Actor",
            "properties": {
                "adminTypes": {
                    "description": "The admin types of the user that made the change.",
                    "enumDescriptions": [
                        "NOTE(b/62036461): There's data in the prod db with this value, but it\nshouldn't be interpreted to have any meaning.",
                        "Can view/edit participant contact info, appointment, cohorts and admin\nnotes in their assigned site, view  participant details and add / remove\nadmins for their assigned site group.",
                        "Can read most participant data and edit operational notes and appointments.",
                        "Can view most of the info for all participants, and can edit contact info,\nadmin notes and appointments.",
                        "Review site operations. Generally has read access on account resources.",
                        "DEPRECATED: Had oversight on executing the study. Generally had read\naccess on account resources.",
                        "Responsible for making decisions about any aspect of the study. Can read\nnon-pii and participant status.",
                        "Generally has read access on most data except PII.",
                        "Owns everything. Super-users can view & edit any admin groups in the\nprogram.",
                        "Site principal investigator. Generally has read/write access on most data.",
                        "Phone support. Generally has read access on most data.",
                        "Imaging partners. Have access to enter data in EDC but no PII access.",
                        "Can configure a study and content for a study, but can't view any user\ninformation (PII or otherwise)."
                    ],
                    "items": {
                        "enum": [
                            "USER_TYPE_PARTICIPANT",
                            "SITE_ADMIN",
                            "SITE_ENROLLMENT_COORDINATOR",
                            "SUPPORT",
                            "STUDY_MONITOR",
                            "OPERATIONAL_COMMITTEE",
                            "SCIENTIFIC_EXEC_COMMITTEE",
                            "CLINICAL_DATA_MANAGER",
                            "SUPER_ADMIN",
                            "SITE_PI",
                            "CALL_CENTER",
                            "IMAGING_PARTNER",
                            "CONFIGURATION_EDITOR"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "email": {
                    "description": "The email of authenticated GAIA user or mdb group that made the change;",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the GAIA user that made the change, if the actor is a mdb\ngroup, this can be friendly name such as \"Cohort Pipeline\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1AdminNote": {
            "id": "LifescienceCspStudiesV1AdminNote",
            "properties": {
                "authorEmail": {
                    "description": "The email of the note's author.",
                    "type": "string"
                },
                "authorGaia": {
                    "description": "The gaia id of the note's author.",
                    "format": "int64",
                    "type": "string"
                },
                "noteContent": {
                    "description": "The contents of the note.",
                    "type": "string"
                },
                "timeMillis": {
                    "description": "The time the note was added.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Appointment": {
            "description": "An appointment for use in various studies. This is used only for reading\nAppointments, and is not used for inserting or mutating appointments.\nNext ID: 7",
            "id": "LifescienceCspStudiesV1Appointment",
            "properties": {
                "createdTime": {
                    "description": "Timestamp for when this appointment was created, if known. If not\nknown, this will not be set.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "dateTime": {
                    "$ref": "GoogleTypeDateTime",
                    "description": "The date, time, and time zone of the appointment. The expected populated\nfields are year, month, day, hours, minutes, and time_zone. This field is\nset only if the date_time is set in the storage Appointment."
                },
                "status": {
                    "description": "The status of the appointment. Only set for past appointments\n(for future appointments, has the value APPOINTMENT_STATUS_UNKNOWN).",
                    "enum": [
                        "APPOINTMENT_STATUS_UNKNOWN",
                        "ATTENDED",
                        "MISSED",
                        "COMPLETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "timeMillis": {
                    "description": "Timestamp of the appointment for the user. This is used to render the\nappointment time in the browser's time zone or, if paired with\nutc_offset_millis, render the appointment time correctly in any time zone\nwith the formatDateTime Soy plugin. If the storage Appointment does not\nhave a DateTime, the storage Appointment's time_millis is copied here.\nOtherwise, this value is calculated from that DateTime. In the second case,\nthis field *should* be the same as the storage Appointment's time_millis,\nbut may be corrected to be consistent with possible changes in daylight\nsavings.\nRequired.",
                    "format": "int64",
                    "type": "string"
                },
                "utcOffsetMillis": {
                    "description": "Time zone offset in millis from UTC. This is used by the formatDateTime Soy\nplugin to correctly render the appointment time. This field is set only if\nthe date_time is set in the storage Appointment.",
                    "format": "int64",
                    "type": "string"
                },
                "visitId": {
                    "description": "The visit that this appointment is associated with.",
                    "enum": [
                        "VISIT_ID_UNKNOWN",
                        "VISIT_ID_BASELINE_STUDY_START_VISIT",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_1_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_2_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_3_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_4_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_EVENT_RELATED_VISIT",
                        "VISIT_ID_ONDUO_VDC_SCREENING",
                        "VISIT_ID_ONDUO_VDC_BASELINE",
                        "VISIT_ID_ONDUO_VDC_4_MONTH",
                        "VISIT_ID_ONDUO_VDC_12_MONTH",
                        "VISIT_ID_ONDUO_VDC_UNSCHEDULED",
                        "VISIT_ID_DUKE_LPA_LAB",
                        "VISIT_ID_SHASTA_SCREENING",
                        "VISIT_ID_SHASTA_SCREENING_DECISION_CALL",
                        "VISIT_ID_SHASTA_DOSING_DAY_1",
                        "VISIT_ID_SHASTA_WEEK_1_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_2_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_3_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_4_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_5_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_6_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_END_OF_STUDY_FOLLOW_UP",
                        "VISIT_ID_SHASTA_ADVERSE_EVENT_VISIT",
                        "VISIT_ID_SHASTA_SEVERE_ADVERSE_EVENT_VISIT",
                        "VISIT_ID_DENALI_SCREENING",
                        "VISIT_ID_DENALI_BASELINE",
                        "VISIT_ID_DENALI_WEEK_1",
                        "VISIT_ID_DENALI_WEEK_2",
                        "VISIT_ID_DENALI_WEEK_3",
                        "VISIT_ID_DENALI_MONTH_1",
                        "VISIT_ID_DENALI_MONTH_2",
                        "VISIT_ID_DENALI_MONTH_3",
                        "VISIT_ID_DENALI_ADVERSE_EVENT",
                        "VISIT_ID_DENALI_STUDY_COMP",
                        "VISIT_ID_DENALI_PROTOCOL_DEVIATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Baseline study: 100-199",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Onduo Virtual Diabetes Clinic (\"Bandit\"): 200-299",
                        "",
                        "",
                        "",
                        "",
                        "Duke Lp(a) study: 300-399",
                        "Shasta study: 400-499",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Denali study: 500-599",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1AppointmentOverview": {
            "description": "Detailed information about a scheduled task's appointment.",
            "id": "LifescienceCspStudiesV1AppointmentOverview",
            "properties": {
                "time": {
                    "description": "The timestamp of the scheduled appointment.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1BioSampleKit": {
            "description": "Represents a bio sample kit in the context of a study.",
            "id": "LifescienceCspStudiesV1BioSampleKit",
            "properties": {
                "kitId": {
                    "description": "The bio sample kit ID.",
                    "type": "string"
                },
                "kitTypeId": {
                    "description": "The type of the bio sample kit.\nDerived from the study configuration BioSampleKitConfig.",
                    "format": "int32",
                    "type": "integer"
                },
                "visitId": {
                    "description": "The visit with which this bio sample kit is associated.",
                    "enum": [
                        "VISIT_ID_UNKNOWN",
                        "VISIT_ID_BASELINE_STUDY_START_VISIT",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_1_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_2_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_3_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_4_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_EVENT_RELATED_VISIT",
                        "VISIT_ID_ONDUO_VDC_SCREENING",
                        "VISIT_ID_ONDUO_VDC_BASELINE",
                        "VISIT_ID_ONDUO_VDC_4_MONTH",
                        "VISIT_ID_ONDUO_VDC_12_MONTH",
                        "VISIT_ID_ONDUO_VDC_UNSCHEDULED",
                        "VISIT_ID_DUKE_LPA_LAB",
                        "VISIT_ID_SHASTA_SCREENING",
                        "VISIT_ID_SHASTA_SCREENING_DECISION_CALL",
                        "VISIT_ID_SHASTA_DOSING_DAY_1",
                        "VISIT_ID_SHASTA_WEEK_1_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_2_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_3_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_4_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_5_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_6_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_END_OF_STUDY_FOLLOW_UP",
                        "VISIT_ID_SHASTA_ADVERSE_EVENT_VISIT",
                        "VISIT_ID_SHASTA_SEVERE_ADVERSE_EVENT_VISIT",
                        "VISIT_ID_DENALI_SCREENING",
                        "VISIT_ID_DENALI_BASELINE",
                        "VISIT_ID_DENALI_WEEK_1",
                        "VISIT_ID_DENALI_WEEK_2",
                        "VISIT_ID_DENALI_WEEK_3",
                        "VISIT_ID_DENALI_MONTH_1",
                        "VISIT_ID_DENALI_MONTH_2",
                        "VISIT_ID_DENALI_MONTH_3",
                        "VISIT_ID_DENALI_ADVERSE_EVENT",
                        "VISIT_ID_DENALI_STUDY_COMP",
                        "VISIT_ID_DENALI_PROTOCOL_DEVIATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Baseline study: 100-199",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Onduo Virtual Diabetes Clinic (\"Bandit\"): 200-299",
                        "",
                        "",
                        "",
                        "",
                        "Duke Lp(a) study: 300-399",
                        "Shasta study: 400-499",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Denali study: 500-599",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ChallengeCard": {
            "description": "Content used to layout basic challenge info, e.g. on a home feed.",
            "id": "LifescienceCspStudiesV1ChallengeCard",
            "properties": {
                "description": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "Additional text content for the card (i18n)."
                },
                "subtitle": {
                    "description": "Subtitle text for the card (i18n).",
                    "type": "string"
                },
                "title": {
                    "description": "Title text for the card (i18n).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ChallengeContent": {
            "description": "Actionable part of the challenge.",
            "id": "LifescienceCspStudiesV1ChallengeContent",
            "properties": {
                "survey": {
                    "$ref": "LifescienceCspStudiesV1SurveyContent"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ChallengeData": {
            "description": "Description of a challenge.\nNext ID: 11",
            "id": "LifescienceCspStudiesV1ChallengeData",
            "properties": {
                "card": {
                    "$ref": "LifescienceCspStudiesV1ChallengeCard",
                    "description": "Basic info about the challenge.\nDeprecated, replaced with TaskSummaryCard."
                },
                "challengeId": {
                    "$ref": "LifescienceCspStudiesCommonChallengeId",
                    "description": "Challenge identifier."
                },
                "content": {
                    "$ref": "LifescienceCspStudiesV1ChallengeContent",
                    "description": "Actionable part of the challenge."
                },
                "expirationMillis": {
                    "description": "Epoch time after which client may consider this challenge data stale.",
                    "format": "int64",
                    "type": "string"
                },
                "insight": {
                    "$ref": "LifescienceCspStudiesV1InsightDetail",
                    "description": "Insight detail for the challenge."
                },
                "overview": {
                    "$ref": "LifescienceCspStudiesV1ChallengeOverview",
                    "description": "Detailed info about the challenge."
                },
                "progress": {
                    "$ref": "LifescienceCspStudiesV1ChallengeProgress",
                    "description": "User's past activity for this challenge.\nDeprecated, replaced with TaskSummaryCard.TaskProgress."
                },
                "status": {
                    "description": "Status of challenge.",
                    "enum": [
                        "CHALLENGE_STATUS_UNKNOWN",
                        "CHALLENGE_STATUS_SIGNUP",
                        "CHALLENGE_STATUS_ACTIVE",
                        "CHALLENGE_STATUS_UP_TO_DATE",
                        "CHALLENGE_STATUS_COMPLETED",
                        "CHALLENGE_STATUS_OUT_OF_BOUNDS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Participant has not yet enrolled.",
                        "Challenge is ongoing, and participant can take action now.",
                        "Challenge is ongoing, and participant has already taken action for this\ninstance.",
                        "Challenge is completed.",
                        "Challenge is out of bounds, i.e., not started or expired."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ChallengeOverview": {
            "description": "Detailed information about the challenge.",
            "id": "LifescienceCspStudiesV1ChallengeOverview",
            "properties": {
                "fullDetails": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "Full details (i18n)."
                },
                "fullDuration": {
                    "description": "Duration of the full challenge, e.g. \"14 days\" (i18n).",
                    "type": "string"
                },
                "initialDetails": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "Initial details (i18n)."
                },
                "name": {
                    "description": "Name of the challenge, e.g. \"Sleep poll\" (i18n).",
                    "type": "string"
                },
                "sessionDuration": {
                    "description": "Time needed to participate, e.g. \"1 min\" (i18n).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ChallengeProgress": {
            "description": "User's earlier activity for a challenge sequence.",
            "id": "LifescienceCspStudiesV1ChallengeProgress",
            "properties": {
                "instance": {
                    "description": "User's progress on previous instances of this challenge.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1ChallengeProgressChallengeProgressInstance"
                    },
                    "type": "array"
                },
                "numInstances": {
                    "description": "Total number of instances for this challenge, e.g. 14.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ChallengeProgressChallengeProgressInstance": {
            "description": "Status of a single instance of a challenge.",
            "id": "LifescienceCspStudiesV1ChallengeProgressChallengeProgressInstance",
            "properties": {
                "result": {
                    "enum": [
                        "CHALLENGE_PROGRESS_RESULT_UNKNOWN",
                        "CHALLENGE_PROGRESS_RESULT_COMPLETE",
                        "CHALLENGE_PROGRESS_RESULT_INCOMPLETE",
                        "CHALLENGE_PROGRESS_RESULT_PENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CheckAccountPermissionsRequest": {
            "id": "LifescienceCspStudiesV1CheckAccountPermissionsRequest",
            "properties": {
                "accountParticipantId": {
                    "description": "The value of the AccountKeyType.PARTICIPANT key for the account to query.\nRequired.",
                    "type": "string"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Required. Common fields for read requests."
                },
                "permissions": {
                    "description": "Permissions to check.\nRequired.",
                    "enumDescriptions": [
                        "",
                        "Allows deletion of the account. This should be restricted to only a very\nnarrow set of trusted users because deleting accounts can have unintended\nside-effects.",
                        "Allows creating REFERRED_PARTICIPANT accounts, e.g. the \"Create Account\"\nbutton in the admin portal.",
                        "Allows changing the account's site.",
                        "Allows changing an account's state (e.g. ENROLLED, PRESCREEN, etc).",
                        "Allows viewing an account's state (e.g. ENROLLED, PRESCREEN, etc).",
                        "Allows a user to add and remove a participant's account tags.",
                        "Allows the user to edit appointments / site visits for the account.",
                        "Allows the user to view appointments / site visits for the account.",
                        "Allows the user to view an audit trail of changes for the account. This\nincludes CRF responses and the history of the changes to responses for\nthose questions.",
                        "Allows viewing of the bran content editor.",
                        "Allows revoking consent records for an account.",
                        "Allows submitting consent records for an account. Consent records\nwill still be logged as having been signed by the acting user, not the\naccount being acted on.",
                        "Allows viewing consent records for an account. Contains PII.",
                        "Allows releasing consent forms to participants. Contains PII.",
                        "Allows admins to co-sign consent forms.",
                        "Allows editing a participant's contact information such as name, email and\nphone number. Contains PII.",
                        "Allows viewing a participant's contact information such as name, email and\nphone number. Contains PII.",
                        "Allows creating a new data dictionary in the Study Editor.",
                        "Allows updating an existing data dictionary in the Study Editor.",
                        "Allows viewing data dictionaries in the Study Editor.",
                        "Allows editing a participant's demographic information such as date of\nbirth, race, sex. Contains PII.\nPII",
                        "Allows a user to view a participant's demographic information such as date\nof birth, race, sex. Contains PII.\nPII",
                        "Allows editing most device associations. Note that mobile device id\nassociations are controlled by a separate MOBILE_DEVICE_EDIT permission, to\nsupport allowing participant credentials on a request from their mobile\ndevice.",
                        "Allows viewing most device associations. Note that mobile device id\nassociations are controlled by a separate MOBILE_DEVICE_VIEW permission.",
                        "TODO(b/80188481) Rename FINAL_COHORT_VIEW to COHORT_VIEW.\nAllows editing to both final and putative cohorts, despite the name.",
                        "TODO(b/80188481) Rename FINAL_COHORT_VIEW to COHORT_VIEW.\nAllows viewing to both final and putative cohorts, despite the name.",
                        "Allows assigning a GAIA account key to an account without one and\nre-assigning an account to a different GAIA ID.",
                        "Allows requesting participant data from GCS. This may be\nused in the context of the EDC or surveys for downloading blob\ndata such as images or audio files from GCS.",
                        "Allows writing new data to GCS. This may be used in the context of the\nEDC or surveys for uploading blob data such as images or audio files\nto GCS.",
                        "Allows editing CRFs in the EDC Portal. Contains PII.",
                        "Allows viewing submitted CRFs in the EDC Portal. Contains PII.",
                        "Allows editing / updating health care providers for a participant.",
                        "Allows viewing / listing health care providers for a participant.",
                        "Allows upversioning of health reports. Contains PII.",
                        "Allows viewing of health reports. Contains PII.",
                        "Allows editing of the status of an identity check. Contains PII.",
                        "Allows viewing of the status of an identity check. Contains PII.",
                        "",
                        "Can indirectly create new inquiries. For example, when inquiries are\ncreated for overriding validations.",
                        "Allows a user to review inquiries (queries) that are in the CDM_REVIEW\nstatus.",
                        "Allows a user to create new inquiries (queries). Contains PII.",
                        "Allows a user to edit inquiries (queries) like changing priority, adding\ncomments, changing status (except closing). Contains PII.",
                        "Allows closing of existing inquiries (queries). Contains PII.",
                        "Allows viewing inquiries (queries) for the study. Contains PII.",
                        "Allows adding Micropayments (aka LineItems) to a user account.",
                        "Allows editing device associations for DeviceType.MOBILE_DEVICE.",
                        "Allows viewing device associations for DeviceType.MOBILE_DEVICE.",
                        "Allows appending new admin notes to an account. Contains PII.",
                        "Allows viewing admin notes on an account. Contains PII.",
                        "Allows sending of manual notifications.",
                        "Allows creating or editing of orders for an account.",
                        "Allows viewing of orders for an account.",
                        "Allows editing of participant settings such as notification settings.",
                        "Allows viewing of participant settings such as notification settings.",
                        "Allows deleting of identity information in participant, including both\nmanual and vendor verification data.",
                        "Allows viewing of participant identity.",
                        "Allows creating payments for a participant.",
                        "Allows viewing of payments to a participant.",
                        "Allows editing of Photos/PhotoSets for an account.",
                        "Allows viewing of Photos/PhotoSets for an account.",
                        "Allows proxying as a participant account, allowing the admin to see the\nportal as if they were the logged-in participant. Contains PII.",
                        "Allows creating new questionnaires in the Study Editor.",
                        "Allows deleting existing questionnaires from the Study Editor.",
                        "Allows updating existing questionnaires in the Study Editor.",
                        "Allows viewing existing questionnaires in the Study Editor.",
                        "Allows editing / releasing of results to be returned to a participant.\nContains PII.",
                        "Allows reviewing of unreleased results.\nContains PII.",
                        "Allows viewing of results that will be returned to the participant.\nContains PII.",
                        "Allows creating aggregate payments to a user over owed line items.",
                        "Allows user to sign_off a task.",
                        "Allows editing of source verification checks on CRFs in the EDC portal.",
                        "Allows you to view studies returned via ContentService.ListStudies",
                        "Allows editing of surveys and their responses. Contains PII.",
                        "Allows viewing of surveys and their responses. Contains PII.",
                        "Allows updating of third party links on an account e.g. Medicare.",
                        "Allows viewing of third party links on an account e.g. Medicare.",
                        "Allows entering video chat sessions relevant to the study."
                    ],
                    "items": {
                        "enum": [
                            "PERMISSION_UNSPECIFIED",
                            "ACCOUNT_DELETE",
                            "ACCOUNT_REFER",
                            "ACCOUNT_SITE_EDIT",
                            "ACCOUNT_STATE_EDIT",
                            "ACCOUNT_STATE_VIEW",
                            "ACCOUNT_TAG_EDIT",
                            "APPOINTMENT_EDIT",
                            "APPOINTMENT_VIEW",
                            "AUDIT_TRAIL_VIEW",
                            "BRAN_CONTENT_EDITOR_VIEW",
                            "CONSENT_REVOKE",
                            "CONSENT_SUBMIT",
                            "CONSENT_VIEW",
                            "CONSENT_RELEASE",
                            "CONSENT_COSIGN",
                            "CONTACT_INFO_EDIT",
                            "CONTACT_INFO_VIEW",
                            "DATA_DICTIONARY_CREATE",
                            "DATA_DICTIONARY_UPDATE",
                            "DATA_DICTIONARY_VIEW",
                            "DEMOGRAPHICS_EDIT",
                            "DEMOGRAPHICS_VIEW",
                            "DEVICE_EDIT",
                            "DEVICE_VIEW",
                            "FINAL_COHORT_EDIT",
                            "FINAL_COHORT_VIEW",
                            "GAIA_ACCOUNT_KEY_EDIT",
                            "GCS_READ",
                            "GCS_WRITE",
                            "GENERAL_CRF_EDIT",
                            "GENERAL_CRF_VIEW",
                            "HEALTH_CARE_PROVIDER_EDIT",
                            "HEALTH_CARE_PROVIDER_VIEW",
                            "HEALTH_REPORT_APPEND",
                            "HEALTH_REPORT_VIEW",
                            "IDENTITY_STATUS_EDIT",
                            "IDENTITY_STATUS_VIEW",
                            "IDV_PORTAL_ACCESS",
                            "INQUIRY_INDIRECT_CREATE",
                            "INQUIRY_CDM_REVIEW",
                            "INQUIRY_CREATE",
                            "INQUIRY_EDIT",
                            "INQUIRY_CLOSE",
                            "INQUIRY_VIEW",
                            "MICROPAYMENT_CREATE",
                            "MOBILE_DEVICE_EDIT",
                            "MOBILE_DEVICE_VIEW",
                            "NOTE_APPEND",
                            "NOTE_VIEW",
                            "NOTIFICATION_SEND",
                            "ORDER_EDIT",
                            "ORDER_VIEW",
                            "PARTICIPANT_SETTINGS_EDIT",
                            "PARTICIPANT_SETTINGS_VIEW",
                            "PARTICIPANT_IDENTITY_DELETE",
                            "PARTICIPANT_IDENTITY_VIEW",
                            "PAYMENT_CREATE",
                            "PAYMENT_VIEW",
                            "PHOTO_EDIT",
                            "PHOTO_VIEW",
                            "PROXY_MODE",
                            "QUESTIONNAIRE_CREATE",
                            "QUESTIONNAIRE_DELETE",
                            "QUESTIONNAIRE_UPDATE",
                            "QUESTIONNAIRE_VIEW",
                            "RESULTS_EDIT",
                            "RESULTS_REVIEW",
                            "RESULTS_VIEW",
                            "ROLL_UP_PAYMENT_CREATE",
                            "SIGNATURE_CREATE",
                            "SOURCE_VERIFICATION_EDIT",
                            "STUDIES_VIEW",
                            "SURVEY_EDIT",
                            "SURVEY_VIEW",
                            "THIRD_PARTY_LINK_EDIT",
                            "THIRD_PARTY_LINK_VIEW",
                            "VIDEO_CHAT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CheckAccountPermissionsResponse": {
            "id": "LifescienceCspStudiesV1CheckAccountPermissionsResponse",
            "properties": {
                "issueDetails": {
                    "$ref": "LifescienceCspStudiesV1IssueDetails",
                    "description": "If may_proceed == false, this will contain the info about the issue\nto display. Otherwise, unset."
                },
                "mayProceed": {
                    "description": "If true, the authenticated user has all of the requested permissions.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CohortAllocation": {
            "description": "Information regarding cohort assignments for the study.\nNext ID: 11",
            "id": "LifescienceCspStudiesV1CohortAllocation",
            "properties": {
                "dataReadTime": {
                    "description": "The time when the data for the last cohort update was read from storage.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "finalCohortAssignment": {
                    "$ref": "LifescienceCspStudiesV1FinalCohortAssignment",
                    "description": "The operational cohort assignment."
                },
                "generalErrorInfo": {
                    "$ref": "LifescienceCspStudiesV1CohortErrorInfo",
                    "description": "General error information: populated if age or sex is missing, or if\na general requirement is violated (e.g pregnancy). This is from a\npre-screen error, which means we cannot put the individual in any\ncohort."
                },
                "overallStatus": {
                    "description": "The overall status of the assignment.",
                    "enum": [
                        "OVERALL_STATUS_UNKNOWN",
                        "OVERALL_STATUS_ACCEPTED",
                        "OVERALL_STATUS_HARD_REJECTED",
                        "OVERALL_STATUS_SOFT_REJECTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The participant has been deemed to be eligible for some cohorts\nand there is space for them in the study.",
                        "The participant is rejected from the study and the registry because of\na hard violation (e.g., consent).",
                        "The participant is soft-rejected (e.g., they are not eligible for any\ncohorts because of some non-legal, non-excluding reason)."
                    ],
                    "type": "string"
                },
                "putativeCohort": {
                    "items": {
                        "$ref": "LifescienceCspStudiesV1CohortEligibility"
                    },
                    "type": "array"
                },
                "putativeCohortAssignmentPriority": {
                    "description": "The relative priority of this candidate when it comes to assignment\n(higher values: indication that this participant should be enrolled\nsooner).\n\nThe priority is a measure of how empty the emptiest subcohort this\nparticipant is eligible for is. So if the participant is eligible for two\nsubcohorts, with capacity 10 and 20 respectively, and these currently\ncontain 7 and 12 participants, respectively, the fill rate is 7/10 = 0.7\nand 12/20 = 0.6, so the priority for the participant will be\n100 * max(0.6, 0.7) = 70.\n\nZero priority indicates all the subcohorts are full.\nPriority -1 indicates that the participant is not eligible for any\nsubcohort.",
                    "format": "double",
                    "type": "number"
                },
                "putativeCohortProtocolVersion": {
                    "description": "The CL at which the cohort assignment pipeline was built.  Valid only if\nputative_cohort_source is the pipeline.",
                    "format": "int32",
                    "type": "integer"
                },
                "putativeCohortSource": {
                    "enum": [
                        "PUTATIVE_SOURCE_UNKNOWN",
                        "PUTATIVE_SOURCE_BIOQUERY_PIPELINE_FOR_BASELINE",
                        "PUTATIVE_SOURCE_BIOQUERY_QUICK_INCLUSION_EXCLUSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Produced by running the BioQuery cohort assignment\npipeline for Baseline in full.",
                        "Produced by calling BioQuery's quick inclusion/exclusion algorithm.\nNOTE: This is unused. We only get cohorts from the pipeline for now."
                    ],
                    "type": "string"
                },
                "putativeCohortUpdateTime": {
                    "description": "The time when the putative cohorts for this account were last updated.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CohortEligibility": {
            "description": "Information about the cohort eligibility, for each cohort.",
            "id": "LifescienceCspStudiesV1CohortEligibility",
            "properties": {
                "cohortId": {
                    "description": "The cohort identifier. Maps to a googlex.apollo.cohorts.CohortId value.",
                    "format": "int32",
                    "type": "integer"
                },
                "comments": {
                    "description": "Comments pertaining to this cohort assignment. Contains the rationale\nfor exclusion or any other information that would be useful\nto the admin.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "errorInfo": {
                    "$ref": "LifescienceCspStudiesV1CohortErrorInfo",
                    "description": "Error or warning pertaining to this cohort assignment."
                },
                "isEligible": {
                    "enum": [
                        "ELIGIBILITY_UNKNOWN",
                        "IS_ELIGIBLE",
                        "IS_INELIGIBLE",
                        "MAYBE_ELIGIBLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CohortErrorInfo": {
            "description": "This message defines why a cohort could not be assigned, or\nhow the assignment could be improved by more information.\nThis proto is not yet used.",
            "id": "LifescienceCspStudiesV1CohortErrorInfo",
            "properties": {
                "errorFields": {
                    "description": "Lists fields that have either not been populated or have been\npopulated with bad values.  If is_required_field is true, then a\ncohort could not be assigned. If it is false, then a cohort could\nbe assigned, but this information would improve the assignment.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1CohortErrorInfoField"
                    },
                    "type": "array"
                },
                "otherErrors": {
                    "description": "Other reason for cohort assignment problems.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CohortErrorInfoField": {
            "id": "LifescienceCspStudiesV1CohortErrorInfoField",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fieldName": {
                    "type": "string"
                },
                "isRequiredField": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ColumnFilter": {
            "id": "LifescienceCspStudiesV1ColumnFilter",
            "properties": {
                "boolValue": {
                    "type": "boolean"
                },
                "column": {
                    "enum": [
                        "COLUMN_TYPE_UNSPECIFIED",
                        "PARTICIPANT_ID",
                        "STATE",
                        "SITE",
                        "FINAL_COHORT",
                        "DOB",
                        "PARTICIPANT_NAME",
                        "PARTICIPANT_EMAIL",
                        "PUTATIVE_COHORT",
                        "NEXT_APPT",
                        "LAST_UPDATE_TIME",
                        "RACE",
                        "AGE",
                        "DATE_OF_ENROLLMENT",
                        "SEX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "numericRange": {
                    "$ref": "LifescienceCspStudiesV1Range",
                    "description": "NOTE: If this is used to define a range of ages (i.e. [20, 29]) to find a\nset of participants that are within this age interval, a new interval is\nfound where the lower and upper bounds are birthdates in the integer\nformat YYYYMMDD which is used to find a set of participants whose\nbirthdates lie within this interval. For example, if \"today\" is\n2017 08 20, the birthdate interval for users within the age interval\n[20, 29] is [1987 08 21, 1997 08 21) (note that the spaces in the\nbirthdate integers are for readability). The lower bound is the older\ndate (about 29 years ago) and the upper bound is the more recent date\n(about 20 years ago). Because the lower bound is the inclusive older date\nand a person is n years old until their (n + 1)th birthday, one year is\nsubtracted and one day is added to the lower bound date. For example, a\nperson who is 39 years old remains 39 until one day before their 40th\nbirthday. Because the upper bound is the exclusive more recent date and a\nperson is n years old on their nth birthday, one day is added to the\nupper bound date."
                },
                "numericValue": {
                    "description": "Always use UTC if specifying a date using this field.",
                    "format": "int64",
                    "type": "string"
                },
                "stringPrefix": {
                    "description": "NOTE: The matches for this filter field depend on the field specs for the\ncolumn. This could match a prefix, suffix or any substring. See\nhttp://g3doc.corp.google.com/spanner/g3doc/userguide/st/write_schema.md#field-specs\nhttp://google3/lifescience/csp/studies/schema/studies_indexes.st_schemas",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ColumnFilterExpression": {
            "description": "A logical grouping of filters that can be applied with different operators.\nAssists in building different combinations of structured search filters.\nWithin each expression is a set of AND and OR expressions combining different\ncolumn filters. These expression can be negated if needed similar to survey\ndependencies. See\nhttp://google3/lifescience/csp/studies/proto/common/survey_common.proto?l=35",
            "id": "LifescienceCspStudiesV1ColumnFilterExpression",
            "properties": {
                "filterAndExpression": {
                    "description": "Multiple filter expressions are AND-ed.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1FilterAndExpression"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ColumnSort": {
            "description": "Sort criteria.",
            "id": "LifescienceCspStudiesV1ColumnSort",
            "properties": {
                "column": {
                    "enum": [
                        "COLUMN_TYPE_UNSPECIFIED",
                        "PARTICIPANT_ID",
                        "STATE",
                        "SITE",
                        "FINAL_COHORT",
                        "DOB",
                        "PARTICIPANT_NAME",
                        "PARTICIPANT_EMAIL",
                        "PUTATIVE_COHORT",
                        "NEXT_APPT",
                        "LAST_UPDATE_TIME",
                        "RACE",
                        "AGE",
                        "DATE_OF_ENROLLMENT",
                        "SEX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sortDirection": {
                    "enum": [
                        "NOT_SORTED",
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CompleteGeneralTaskRequest": {
            "description": "Request to mark a general task as completed.",
            "id": "LifescienceCspStudiesV1CompleteGeneralTaskRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Key identifying the account.\nRequired."
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1WriteApiHeader",
                    "description": "Common fields for read requests.\nOptional."
                },
                "study": {
                    "description": "Study to use when finding tasks.\nRequired.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "taskId": {
                    "description": "The task ID of the task to mark as completed.\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CompleteGeneralTaskResponse": {
            "id": "LifescienceCspStudiesV1CompleteGeneralTaskResponse",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1CompleteIdvTaskRequest": {
            "description": "Request to mark an idv task as completed.",
            "id": "LifescienceCspStudiesV1CompleteIdvTaskRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Key identifying the account.\nRequired."
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1WriteApiHeader",
                    "description": "Common fields for read requests.\nOptional."
                },
                "study": {
                    "description": "Study to use when finding tasks.\nRequired.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "taskId": {
                    "description": "The task ID of the idv task to mark as completed.\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CompleteIdvTaskResponse": {
            "id": "LifescienceCspStudiesV1CompleteIdvTaskResponse",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1CompletionStageCriteria": {
            "description": "Criteria for filtering by CompletionStage.",
            "id": "LifescienceCspStudiesV1CompletionStageCriteria",
            "properties": {
                "stages": {
                    "description": "The stages to filter by for the particular CompletionStageFilterType.",
                    "enumDescriptions": [
                        "",
                        "No drafts of this task have been saved yet.",
                        "A saved draft of this task exists. If this is a repeated task, a saved\ninstance of the task exists, but the current instance has not yet been\ncompleted.",
                        "Task is completed.",
                        "Task is up-to-date; it's visible but not actionable, likely because a user\nalready completed the action in the current time window. For example, this\nis used for repeated tasks."
                    ],
                    "items": {
                        "enum": [
                            "COMPLETION_STAGE_UNSPECIFIED",
                            "COMPLETION_STAGE_NOT_STARTED",
                            "COMPLETION_STAGE_IN_PROGRESS",
                            "COMPLETION_STAGE_COMPLETED",
                            "COMPLETION_STAGE_UP_TO_DATE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "The type of filter to apply on CompletionStage.",
                    "enum": [
                        "FILTER_TYPE_UNSPECIFIED",
                        "INCLUSIVE",
                        "EXCLUSIVE"
                    ],
                    "enumDescriptions": [
                        "",
                        "If set, response will only include tasks that are in the given\nCompletionStages.",
                        "If set, response will exclude tasks that are in the given\nCompletionStages."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ConsentContent": {
            "description": "Content for a Consent task.",
            "id": "LifescienceCspStudiesV1ConsentContent",
            "properties": {
                "workflow": {
                    "description": "The consent workflow.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ContactInfo": {
            "description": "Contact info is used for various protocols for keeping in contact with\nparticipants.  THIS DATA IS CONSIDERED SENSITIVE AND SHOULD NOT BE USED\nIN ANY ANALYSIS WITHOUT APPROPRIATE APPROVALS.\nNext ID: 8",
            "id": "LifescienceCspStudiesV1ContactInfo",
            "properties": {
                "address": {
                    "$ref": "RpcAddressData",
                    "description": "Mailing address where the person can receive mail."
                },
                "email": {
                    "description": "The gaia email.",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "preferredName": {
                    "description": "The participant's preferred name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1CreatePractitionerRequest": {
            "description": "Request to create a single practitioner.",
            "id": "LifescienceCspStudiesV1CreatePractitionerRequest",
            "properties": {
                "header": {
                    "$ref": "LifescienceCspStudiesV1WriteApiHeader",
                    "description": "Optional. Common fields for write requests."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Demographics": {
            "id": "LifescienceCspStudiesV1Demographics",
            "properties": {
                "birthDate": {
                    "$ref": "GoogleTypeDate"
                },
                "birthYear": {
                    "description": "Birth year is kept distinct from birth_timestamp to allow for redaction\nin cases where reading the full birth day may restricted (HIPPA).",
                    "format": "int32",
                    "type": "integer"
                },
                "dateOfDeathMillis": {
                    "format": "int64",
                    "type": "string"
                },
                "hispanicAncestry": {
                    "enum": [
                        "HISPANIC_ANCESTRY_UNKNOWN",
                        "HISPANIC_ANCESTRY_NO",
                        "HISPANIC_ANCESTRY_MEXICAN",
                        "HISPANIC_ANCESTRY_PUERTO_RICAN",
                        "HISPANIC_ANCESTRY_CUBAN",
                        "HISPANIC_ANCESTRY_OTHER",
                        "HISPANIC_ANCESTRY_YES",
                        "HISPANIC_ANCESTRY_DONT_KNOW"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "race": {
                    "enum": [
                        "RACE_UNKNOWN",
                        "RACE_WHITE",
                        "RACE_BLACK",
                        "RACE_NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
                        "RACE_AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                        "RACE_SOME_OTHER_RACE",
                        "RACE_ASIAN",
                        "RACE_ASIAN_INDIAN",
                        "RACE_CHINESE",
                        "RACE_FILIPINO",
                        "RACE_JAPANESE",
                        "RACE_KOREAN",
                        "RACE_VIETNAMESE",
                        "RACE_OTHER_ASIAN",
                        "RACE_GUAMANIAN",
                        "RACE_SAMOAN",
                        "RACE_HISPANIC_OR_LATINO",
                        "RACE_OTHER_PACIFIC_ISLANDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sex": {
                    "enum": [
                        "SEX_UNKNOWN",
                        "SEX_MALE",
                        "SEX_FEMALE",
                        "SEX_INTERSEX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1EhrConnectContent": {
            "description": "Content for an EHR connect task.\nFor now this is empty, as we do not actually use any content from the task\nyet.",
            "id": "LifescienceCspStudiesV1EhrConnectContent",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1EventData": {
            "description": "Events are things that happen for an account over time.\nNext ID: 17",
            "id": "LifescienceCspStudiesV1EventData",
            "properties": {
                "accountId": {
                    "description": "The account id is always more than 0 if assigned.",
                    "format": "int64",
                    "type": "string"
                },
                "authenticatedAdminType": {
                    "description": "The admin type(s) of the authenticated user at the time of submission.",
                    "enumDescriptions": [
                        "NOTE(b/62036461): There's data in the prod db with this value, but it\nshouldn't be interpreted to have any meaning.",
                        "Can view/edit participant contact info, appointment, cohorts and admin\nnotes in their assigned site, view  participant details and add / remove\nadmins for their assigned site group.",
                        "Can read most participant data and edit operational notes and appointments.",
                        "Can view most of the info for all participants, and can edit contact info,\nadmin notes and appointments.",
                        "Review site operations. Generally has read access on account resources.",
                        "DEPRECATED: Had oversight on executing the study. Generally had read\naccess on account resources.",
                        "Responsible for making decisions about any aspect of the study. Can read\nnon-pii and participant status.",
                        "Generally has read access on most data except PII.",
                        "Owns everything. Super-users can view & edit any admin groups in the\nprogram.",
                        "Site principal investigator. Generally has read/write access on most data.",
                        "Phone support. Generally has read access on most data.",
                        "Imaging partners. Have access to enter data in EDC but no PII access.",
                        "Can configure a study and content for a study, but can't view any user\ninformation (PII or otherwise)."
                    ],
                    "items": {
                        "enum": [
                            "USER_TYPE_PARTICIPANT",
                            "SITE_ADMIN",
                            "SITE_ENROLLMENT_COORDINATOR",
                            "SUPPORT",
                            "STUDY_MONITOR",
                            "OPERATIONAL_COMMITTEE",
                            "SCIENTIFIC_EXEC_COMMITTEE",
                            "CLINICAL_DATA_MANAGER",
                            "SUPER_ADMIN",
                            "SITE_PI",
                            "CALL_CENTER",
                            "IMAGING_PARTNER",
                            "CONFIGURATION_EDITOR"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "authenticatedUserGaiaId": {
                    "description": "Which user submitted (authored) this event.\nWe hold this separately because it might be an admin in proxy mode\nactually submitting the event on behalf of a participant. Required.",
                    "format": "int64",
                    "type": "string"
                },
                "clientEventId": {
                    "description": "Client-supplied unique ID for this event.\nIf this is specified in the request for the event, then the client ID will\nbe saved with the event. If there was already an event with the given\nclient ID, the new event will replace the previusly-inserted event with\nthat client ID. Note, however, that the InsertEvent API only requires\nthat client IDs be unique for a given task config ID, so if a client ID\nwas used for another task, the previus event data will *not* be replaced.\n\nIt is *strongly* recommended that the clients use a UUID generator to\ncreate these IDs, and that they store those IDs in persistent store\nbefore using them. Alternatively, the clients can derive the IDs from\nIDs used by the client system, as long as those IDs are guaranteed to\nbe unique for the associated CSP account.\n\nOptional.",
                    "type": "string"
                },
                "eventId": {
                    "description": "Deprecate it since we don't want to expose event id to client side.",
                    "format": "int64",
                    "type": "string"
                },
                "insertedTimeMillis": {
                    "description": "When this event was inserted.",
                    "format": "int64",
                    "type": "string"
                },
                "isAutoSave": {
                    "description": "Whether this event is caused by auto-save.",
                    "type": "boolean"
                },
                "questionnaireSubmission": {
                    "$ref": "LifescienceCspStudiesV1QuestionnaireSubmission",
                    "description": "Result for new-generation questionnaire submission."
                },
                "relatedEventId": {
                    "description": "In case this Event is logically \"related\" to a previous Event, this\nfield holds the id of the previous Event. This may be useful on the\nserver side to manage some book keeping. For example, to tie together\nrelated medical events. Precise semantics may vary per Event type.\nDeprecate it since we don't want to expose it to client side.",
                    "format": "int64",
                    "type": "string"
                },
                "study": {
                    "description": "Which study this event is from, eg. Baseline, DMI.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "surveyAnswerSet": {
                    "$ref": "LifescienceCspStudiesV1SurveyAnswerSet",
                    "description": "Result from survey/questionnaire.\nV1 surveys need to populate this field and not SurveyAnswerSetV2."
                },
                "surveyAnswerV2": {
                    "$ref": "LifescienceCspStudiesV1SurveyAnswerV2",
                    "description": "Result from survey with repeatable survey sections and units.\nV2 surveys need to populate this field and not SurveyAnswerSet.\nSee design doc in go/baseline-survey-framework-v2"
                },
                "taskId": {
                    "description": "Uniquely identifies this task. Clients should use this to refer to the task\nwhen saving an event for it.",
                    "type": "string"
                },
                "timeMillis": {
                    "description": "When this event occurred. This is specific to the type of event.\nThis field should be set by clients.",
                    "format": "int64",
                    "type": "string"
                },
                "timeZoneName": {
                    "description": "The time zone in which this event occurred, as reported by the client, for\nexample, \"America/Los_Angeles\".\nSee http://google3/i18n/identifiers/data/timezones.txt for all valid IDs.\nOptional. This field was introduced in 01/2018 and not all clients set it.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1EventReportData": {
            "description": "A wrapper that encapsulates questions and answers for the event reporting\nsurvey.\nNext ID: 3",
            "id": "LifescienceCspStudiesV1EventReportData",
            "properties": {
                "surveyContent": {
                    "$ref": "LifescienceCspStudiesV1SurveyContent",
                    "description": "Required. Survey content."
                },
                "surveyData": {
                    "$ref": "LifescienceCspStudiesV1SurveyDataJoined",
                    "description": "Deprecated."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1EventResult": {
            "description": "Result for a single event operation.  One of these will always\nbe returned for each operation in an RPC unless the entire RPC\nfails.",
            "id": "LifescienceCspStudiesV1EventResult",
            "properties": {
                "event": {
                    "$ref": "LifescienceCspStudiesV1EventData"
                },
                "status": {
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1FilterAndExpression": {
            "description": "Wrapper around a column filter, will evaluate to true or false.\nFilterAndExpressions will be AND-ed together by default.",
            "id": "LifescienceCspStudiesV1FilterAndExpression",
            "properties": {
                "filterOrExpression": {
                    "description": "Multiple filter expressions are OR-ed.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1FilterOrExpression"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1FilterOrExpression": {
            "description": "A wrapper around a column filter,  will evaluate to true or false.\nFilterOrExpressions will be OR-ed together by default.",
            "id": "LifescienceCspStudiesV1FilterOrExpression",
            "properties": {
                "columnFilter": {
                    "$ref": "LifescienceCspStudiesV1ColumnFilter",
                    "description": "The filter to be applied to the query."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1FinalCohortAssignment": {
            "description": "ID for the final cohort that the participant has been assigned to.\nThis assignment is done through the admin console and should not\nchange under normal circumstances. Set 'rejected_from_cohorts' to\ntrue when the admin has explicitly rejected this participant from\nall Baseline cohorts.",
            "id": "LifescienceCspStudiesV1FinalCohortAssignment",
            "properties": {
                "finalCohort": {
                    "description": "The operational cohort, as explicitly set.",
                    "enum": [
                        "OPERATIONAL_COHORT_UNKNOWN",
                        "OPERATIONAL_COHORT_BASELINE_HIGH_RISK",
                        "OPERATIONAL_COHORT_BASELINE_LOW_RISK",
                        "OPERATIONAL_COHORT_DEPRESSED",
                        "OPERATIONAL_COHORT_NOT_DEPRESSED",
                        "OPERATIONAL_COHORT_MYALO_NEW_TREATMENT_MALE_YOUNGER",
                        "OPERATIONAL_COHORT_MYALO_NEW_TREATMENT_MALE_OLDER",
                        "OPERATIONAL_COHORT_MYALO_NEW_TREATMENT_FEMALE_YOUNGER",
                        "OPERATIONAL_COHORT_MYALO_NEW_TREATMENT_FEMALE_OLDER",
                        "OPERATIONAL_COHORT_MYALO_NO_TREATMENT_MALE_YOUNGER",
                        "OPERATIONAL_COHORT_MYALO_NO_TREATMENT_MALE_OLDER",
                        "OPERATIONAL_COHORT_MYALO_NO_TREATMENT_FEMALE_YOUNGER",
                        "OPERATIONAL_COHORT_MYALO_NO_TREATMENT_FEMALE_OLDER",
                        "OPERATIONAL_COHORT_MYALO_OLD_TREATMENT_MALE_YOUNGER",
                        "OPERATIONAL_COHORT_MYALO_OLD_TREATMENT_MALE_OLDER",
                        "OPERATIONAL_COHORT_MYALO_OLD_TREATMENT_FEMALE_YOUNGER",
                        "OPERATIONAL_COHORT_MYALO_OLD_TREATMENT_FEMALE_OLDER",
                        "OPERATIONAL_COHORT_BSOS_HIGH_RISK_OSA",
                        "OPERATIONAL_COHORT_BSOS_LOW_RISK_OSA"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Cohorts for the Baseline Study of Sleep",
                        ""
                    ],
                    "type": "string"
                },
                "finalCohortAssignmentTime": {
                    "description": "When the final cohort was set.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "putativeCohortSnapshotAtAssignmentTime": {
                    "description": "The putative cohorts at the time when the operational cohort was assigned,\nor when the candidate was rejected from cohorts.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1CohortEligibility"
                    },
                    "type": "array"
                },
                "putativeCohortsSnapshotTime": {
                    "description": "Denotes when the snapshot of putative cohorts above was taken.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "rejectedFromCohorts": {
                    "description": "Must be false if 'final_cohort' is set.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GeneralTaskContent": {
            "description": "Content for a general task.\nFor now this is empty, as we do not actually use any content from the task\nyet.",
            "id": "LifescienceCspStudiesV1GeneralTaskContent",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1GetAccountRequest": {
            "id": "LifescienceCspStudiesV1GetAccountRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Required. Key identifying the account to get."
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Required. Common fields for read requests."
                },
                "study": {
                    "description": "Required. Study whose account to get.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetAccountResponse": {
            "id": "LifescienceCspStudiesV1GetAccountResponse",
            "properties": {
                "account": {
                    "$ref": "LifescienceCspStudiesV1Account",
                    "description": "Account data."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetAccountStatusRequest": {
            "description": "Request to get the status of an account.\nThis can be used by clients to query whether to give access to someone\nwho can be authenticated, but who may or may not be eligible, state-wise,\nor permissions-wise, to access the application.\nNext ID: 5",
            "id": "LifescienceCspStudiesV1GetAccountStatusRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Required. Key identifying the account whose status to get."
                },
                "context": {
                    "description": "The view for which the request is made.",
                    "enum": [
                        "VIEW_CONTEXT_UNKNOWN",
                        "ENROLLMENT_PORTAL",
                        "PARTICIPANT_PORTAL",
                        "MOCK_PARTICIPANT_PORTAL",
                        "EDC_PORTAL",
                        "MARKETING_SITE",
                        "ADMIN_PORTAL",
                        "BUILDER_PORTAL",
                        "IDENTITY_VERIFICATION",
                        "MEMBER_PORTAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "For testing.",
                        "",
                        "Not a view supported by CSP servers, but can be used to indicate a\nredirect.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Optional. Common fields for read requests."
                },
                "study": {
                    "description": "Required. Study of the account whose status to get.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetAccountStatusResponse": {
            "description": "Response containing the status of an account.",
            "id": "LifescienceCspStudiesV1GetAccountStatusResponse",
            "properties": {
                "issueDetails": {
                    "$ref": "LifescienceCspStudiesV1IssueDetails",
                    "description": "If may_proceed == false, this will contain the info about the issue\nto display. Otherwise, unset."
                },
                "mayProceed": {
                    "description": "If true, the authenticated user may access the view.",
                    "type": "boolean"
                },
                "participantId": {
                    "description": "The external CSP participant id of the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetEventsRequest": {
            "description": "Next ID: 5",
            "id": "LifescienceCspStudiesV1GetEventsRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Required. Key identifying the account whose events to get."
                },
                "eventIds": {
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Optional. Common fields for read requests."
                },
                "study": {
                    "description": "Required. Study of the account whose events to get.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetEventsResponse": {
            "id": "LifescienceCspStudiesV1GetEventsResponse",
            "properties": {
                "results": {
                    "items": {
                        "$ref": "LifescienceCspStudiesV1EventResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetParticipantRequest": {
            "description": "Request to get a single participant by key.",
            "id": "LifescienceCspStudiesV1GetParticipantRequest",
            "properties": {
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Required. Common fields for read requests."
                },
                "participantKey": {
                    "$ref": "LifescienceCspStudiesV1ParticipantKey",
                    "description": "Required. Key identifying the participant to get."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetPractitionerRequest": {
            "description": "Request to get a single practitioner by key.",
            "id": "LifescienceCspStudiesV1GetPractitionerRequest",
            "properties": {
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Required. Common fields for read requests."
                },
                "practitionerKey": {
                    "$ref": "LifescienceCspStudiesV1PractitionerKey",
                    "description": "Required. Key identifying the practitioner to get."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetTaskListRequest": {
            "description": "Request to get the task list.\nNext ID: 6",
            "id": "LifescienceCspStudiesV1GetTaskListRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Required. Key identifying the account whose task list to get."
                },
                "context": {
                    "description": "The view for which the request is made.",
                    "enum": [
                        "VIEW_CONTEXT_UNKNOWN",
                        "ENROLLMENT_PORTAL",
                        "PARTICIPANT_PORTAL",
                        "MOCK_PARTICIPANT_PORTAL",
                        "EDC_PORTAL",
                        "MARKETING_SITE",
                        "ADMIN_PORTAL",
                        "BUILDER_PORTAL",
                        "IDENTITY_VERIFICATION",
                        "MEMBER_PORTAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "For testing.",
                        "",
                        "Not a view supported by CSP servers, but can be used to indicate a\nredirect.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Optional. Common fields for read requests."
                },
                "study": {
                    "description": "Required. Study whose task list to get.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetTaskListResponse": {
            "description": "Response containing list of tasks.\nNext ID: 3",
            "id": "LifescienceCspStudiesV1GetTaskListResponse",
            "properties": {
                "persistentTasks": {
                    "$ref": "LifescienceCspStudiesV1PersistentTasks",
                    "description": "Non-feed tasks for the user."
                },
                "taskWrapper": {
                    "description": "List of feed tasks for the user.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1TaskWrapper"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetTaskRequest": {
            "description": "Request to get an individual task for a participant.\nNext ID: 7",
            "id": "LifescienceCspStudiesV1GetTaskRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Key identifying the account.\nRequired."
                },
                "context": {
                    "description": "The view for which the request is made.",
                    "enum": [
                        "VIEW_CONTEXT_UNKNOWN",
                        "ENROLLMENT_PORTAL",
                        "PARTICIPANT_PORTAL",
                        "MOCK_PARTICIPANT_PORTAL",
                        "EDC_PORTAL",
                        "MARKETING_SITE",
                        "ADMIN_PORTAL",
                        "BUILDER_PORTAL",
                        "IDENTITY_VERIFICATION",
                        "MEMBER_PORTAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "For testing.",
                        "",
                        "Not a view supported by CSP servers, but can be used to indicate a\nredirect.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Common fields for read requests.\nOptional."
                },
                "study": {
                    "description": "Study to use when finding tasks.\nRequired.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "taskId": {
                    "description": "The task ID of the task to get.\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1GetTaskResponse": {
            "description": "Response containing the full content for a task.",
            "id": "LifescienceCspStudiesV1GetTaskResponse",
            "properties": {
                "summary": {
                    "$ref": "LifescienceCspStudiesV1TaskSummary",
                    "description": "Task summary content."
                },
                "taskWrapper": {
                    "$ref": "LifescienceCspStudiesV1TaskWrapper",
                    "description": "Task content."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1HelpText": {
            "description": "Holds the help text information, it will show up\nbelow the question title.",
            "id": "LifescienceCspStudiesV1HelpText",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Identity": {
            "description": "Identity proto to hold latest identity information of a person, can be\nrelated to multiple accounts, meaning those accounts are all belonging to\none person.",
            "id": "LifescienceCspStudiesV1Identity",
            "properties": {
                "latestVerification": {
                    "description": "The latest verification data. Participants are allowed to verify their\nidentity through multiple ways, but one VerificationMethod will only appear\nonce in this list.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1IdentityVerificationData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1IdentityMetadata": {
            "description": "Metadata about verification of the participant's identity.\nAs of 2017/09, this is only set for manual identity verifications, but in\nthe future this could also be at-a-glance metadata about any Idology\nverification.",
            "id": "LifescienceCspStudiesV1IdentityMetadata",
            "properties": {
                "gaiaId": {
                    "description": "Which user updated the identity verification status.",
                    "format": "int64",
                    "type": "string"
                },
                "identityUpdateSource": {
                    "description": "If identity status is updated through other sources, we can get more\ndetails from other sources.",
                    "enum": [
                        "IDENTITY_UPDATE_SOURCE_UNSPECIFIED",
                        "IDENTITY_UPDATE_SOURCE_PROPAGATED_FROM_PARTICIPANT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Identity is updated because of the propagation of Participant verification\nstate update."
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "The status of the verification. Required.",
                    "enum": [
                        "IDENTITY_STATUS_UNKNOWN",
                        "IDENTITY_STATUS_VERIFIED",
                        "IDENTITY_STATUS_VERIFICATION_FAILED",
                        "IDENTITY_STATUS_EXPLICITLY_DECLINED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Identity has been verified.",
                        "Identity verification explicitly failed.",
                        "Participant explicitly declined to verify their identity."
                    ],
                    "type": "string"
                },
                "timeMillis": {
                    "description": "When identity verification status was updated. Required.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1IdentityVerificationData": {
            "description": "Next ID: 9",
            "id": "LifescienceCspStudiesV1IdentityVerificationData",
            "properties": {
                "idVerificationMethod": {
                    "enum": [
                        "VERIFICATION_METHOD_UNSPECIFIED",
                        "VERIFICATION_METHOD_FORCED",
                        "VERIFICATION_METHOD_MANUAL_FLOW",
                        "VERIFICATION_METHOD_IDOLOGY_VENDOR_FLOW"
                    ],
                    "enumDescriptions": [
                        "",
                        "Identity is forced set to the current state.",
                        "Identity is verified through manual flow.",
                        "Identity is verified through vendor IDology."
                    ],
                    "type": "string"
                },
                "idVerificationState": {
                    "description": "This is the flag for whether the set of info has been verified.",
                    "enum": [
                        "VERIFICATION_STATE_UNSPECIFIED",
                        "VERIFICATION_STATE_VERIFIED",
                        "VERIFICATION_STATE_UNVERIFIED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "identityInfo": {
                    "$ref": "LifescienceCspStudiesV1IdentityVerificationDataIdentityInfo",
                    "description": "Identity Info being verified."
                },
                "idologyVendor": {
                    "$ref": "LifescienceCspStudiesV1IdentityVerificationDataIdologyVendorSource",
                    "description": "The info used to track the related vendor info. Even though at most one\nvendor info can be populated at a time, oneof is not used, so that the\nfields can be used in an index, e.g. idology_unique_identity_id."
                },
                "languageCode": {
                    "description": "The language code identity is verified in.",
                    "type": "string"
                },
                "lastUpdateTime": {
                    "description": "When was verification data last updated.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "latestSessionToken": {
                    "description": "Session token for latest UI flow of identity verification (either 3 step\nvendor verification or one step manual flow) This field will be updated\nevery time a new flow starts in the UI. Every field in VerificationData\nwill be reset when this field is updated.",
                    "type": "string"
                },
                "studyForDebuggingPurpose": {
                    "description": "The actor's study. We use this to trace down who make the change to\nidentity. This field will only be populated if the study specific account\ninitiated the identity change. No business logic should depend on it.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1IdentityVerificationDataIdentityInfo": {
            "description": "The IdentityInfo used to perform identity verification. Depending on\nproduct requirements, we may need to store the exact information used to\nperform IDV, or simply store an Int32Value/StringValue defaultInstance to\ndescribe this information is used. We intentionally layout each piece of\ninformation instead of dividing them into smaller protos such as\nAddress/DayOfBirth/Name, so it is easier to tell what information is used\nin one verification without unwrapping proto recursively.",
            "id": "LifescienceCspStudiesV1IdentityVerificationDataIdentityInfo",
            "properties": {
                "answerOutOfWalletQuestions": {
                    "type": "boolean"
                },
                "birthDate": {
                    "$ref": "GoogleTypeDate"
                },
                "city": {
                    "type": "string"
                },
                "firstName": {
                    "description": "This may introduce the tricky problem of where to map these info in an\nAccount, and where/how to do the flip flag logic.",
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "providedFullSsn": {
                    "type": "boolean"
                },
                "providedLast4Ssn": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1IdentityVerificationDataIdologyVendorSource": {
            "id": "LifescienceCspStudiesV1IdentityVerificationDataIdologyVendorSource",
            "properties": {
                "idologyTransactionId": {
                    "description": "The transaction id contained in IDology response which can be used for\nreference purpose.",
                    "type": "string"
                },
                "idologyUniqueIdentityId": {
                    "description": "This field can only be set once, and once it is set, we should ensure\nit is not removed/updated.",
                    "type": "string"
                },
                "idologyVerificationDetails": {
                    "$ref": "LifescienceCspStudiesV1IdentityVerificationDataIdologyVendorSourceIdologyVerificationDetails"
                },
                "idologyVerificationStage": {
                    "enum": [
                        "IDOLOGY_VERIFICATION_STAGE_UNSPECIFIED",
                        "IDOLOGY_VERIFICATION_STAGE_LAST_4_SSN",
                        "IDOLOGY_VERIFICATION_STAGE_FULL_SSN",
                        "IDOLOGY_VERIFICATION_STAGE_OUT_OF_WALLET_QUESTIONS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1IdentityVerificationDataIdologyVendorSourceIdologyVerificationDetails": {
            "description": "The details of the verification results. We will eventually disable\ncache in IDology side, so this will help use trace back what happened\nwhen participant's verification fails.",
            "id": "LifescienceCspStudiesV1IdentityVerificationDataIdologyVendorSourceIdologyVerificationDetails",
            "properties": {
                "errors": {
                    "description": "Errors returned by Idology, here are some examples:\nhttps://screenshot.googleplex.com/psDsTMEcueJ",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "oowQuestionError": {
                    "description": "Errors for answering out ot wallet questions, here are some examples:\nhttps://screenshot.googleplex.com/DXBuFZSBXjT\nThe key and message pair will become one string with a \":\" in between\nsince the key-message is just some config in Idology, and we don't\nreally need to search by them.",
                    "type": "string"
                },
                "oowQuestionResult": {
                    "description": "Results of answering out of wallet questions, here are some examples:\nhttps://screenshot.googleplex.com/VVVK19VmmnA\nThe key and message pair will become one string with a \":\" in between\nsince the key-message is just some config in Idology, and we don't\nreally need to search by them.",
                    "type": "string"
                },
                "qualifiers": {
                    "description": "Qualifiers returned by Idology explaining why the verification\nfailed, here are some examples:\nhttps://screenshot.googleplex.com/hZooGWqdxmC\nThe key and message pair will become one string with a \":\" in between\nsince the key-message is just some config in Idology, and we don't\nreally need to search by them.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "velocityResults": {
                    "description": "Velocity results returned by Idology explaining why the verification\nfailed, here are some examples:\nhttps://screenshot.googleplex.com/8qMHm9jMUZw\nThe key and message pair will become one string with a \":\" in between\nsince the key-message is just some config in Idology, and we don't\nreally need to search by them.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1IdvContent": {
            "description": "Content for IDV task.",
            "id": "LifescienceCspStudiesV1IdvContent",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1InsertAccountRequest": {
            "description": "Next ID: 9",
            "id": "LifescienceCspStudiesV1InsertAccountRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Optional. Account key to be associated with the new account. Only GAIA_ID\nand GAIA_EMAIL is valid and only for ParticipantType.REFERRED_PARTICIPANT."
                },
                "accountTags": {
                    "description": "Optional. Account tags to include in the account when created.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1AccountTag"
                    },
                    "type": "array"
                },
                "accountType": {
                    "description": "The type of account. If unset, treated as ACCOUNT_TYPE_LEGACY",
                    "enum": [
                        "ACCOUNT_TYPE_UNSPECIFIED",
                        "ACCOUNT_TYPE_LEGACY",
                        "ACCOUNT_TYPE_REGISTRY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Accounts created outside of the Registry.",
                        "Accounts created via the Registry."
                    ],
                    "type": "string"
                },
                "encodedTaskToken": {
                    "description": "Optional. Token associated with a task. If set and this insertion succeeds,\nthe task is marked as \"completed\".",
                    "type": "string"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1WriteApiHeader",
                    "description": "Optional. Common fields for write requests."
                },
                "participantType": {
                    "description": "The type of the participant.",
                    "enum": [
                        "PARTICIPANT_TYPE_UNKNOWN",
                        "SELF_ENROLL_PARTICIPANT",
                        "REFERRED_PARTICIPANT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "study": {
                    "description": "Required. Study to create an account for.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1InsertAccountResponse": {
            "id": "LifescienceCspStudiesV1InsertAccountResponse",
            "properties": {
                "account": {
                    "$ref": "LifescienceCspStudiesV1Account",
                    "description": "Initial account data after insertion."
                },
                "footer": {
                    "$ref": "LifescienceCspStudiesV1WriteApiFooter",
                    "description": "Common fields for write responses."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1InsertEventRequest": {
            "description": "Inserts an event, e.g. an answered survey.\nNext ID: 6",
            "id": "LifescienceCspStudiesV1InsertEventRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Required. Key identifying the account to insert an event for."
                },
                "consistencyToken": {
                    "description": "Consistency token to avoid write conflict.",
                    "type": "string"
                },
                "encodedTaskToken": {
                    "description": "Token associated with the task (from TaskWrapper)\nOptional.",
                    "type": "string"
                },
                "event": {
                    "$ref": "LifescienceCspStudiesV1EventData",
                    "description": "Required. Details of the event to insert."
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1WriteApiHeader",
                    "description": "Optional. Common fields for write requests."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1InsertEventResponse": {
            "id": "LifescienceCspStudiesV1InsertEventResponse",
            "properties": {
                "consistencyToken": {
                    "description": "Consistency token to avoid write conflict.",
                    "type": "string"
                },
                "event": {
                    "$ref": "LifescienceCspStudiesV1EventData",
                    "description": "Event data after insertion."
                },
                "footer": {
                    "$ref": "LifescienceCspStudiesV1WriteApiFooter",
                    "description": "Common fields for write responses."
                },
                "isAccountStateChanged": {
                    "description": "Whether the account state changed as a result of inserting the event.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1InsightDetail": {
            "description": "Description of a single insight.",
            "id": "LifescienceCspStudiesV1InsightDetail",
            "properties": {
                "attribution": {
                    "description": "Attribution for the insight (i18n).",
                    "type": "string"
                },
                "description": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "A longer description of the insight detail (i18n)."
                },
                "title": {
                    "description": "The title of an insight detail (i18n).",
                    "type": "string"
                },
                "type": {
                    "description": "The type of an insight.",
                    "enum": [
                        "INSIGHT_TYPE_UNKNOWN",
                        "INSIGHT_TYPE_SLEEP"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1IssueDetails": {
            "description": "Next ID: 8",
            "id": "LifescienceCspStudiesV1IssueDetails",
            "properties": {
                "actionablePath": {
                    "$ref": "LifescienceCspStudiesV1ActionPath",
                    "description": "A description of where to navigate to in order to address the issue."
                },
                "actionableText": {
                    "description": "If actionable_url is set, this will contain the text of the corresponding\nlink or button.",
                    "type": "string"
                },
                "actionableUrl": {
                    "description": "The URL for where to navigate to in order to address the issue.\nEquivalent to actionable_path, but different format.",
                    "type": "string"
                },
                "issueType": {
                    "description": "The type of this error.",
                    "enum": [
                        "DEFAULT",
                        "CONSENT_REQUIRED",
                        "PARTICIPANT_REJECTED",
                        "ALREADY_ENROLLED",
                        "ENROLLMENT_INCOMPLETE",
                        "WAITING_FOR_APPROVAL",
                        "WAITING_FOR_ONSITE",
                        "CONSENT_WITHDRAWN",
                        "CLIENT_OUT_OF_DATE",
                        "ACCOUNT_MISSING",
                        "PARTICIPANT_WAITLISTED",
                        "RECONSENT_REQUIRED",
                        "WAITING_FOR_CONSENT_RELEASE"
                    ],
                    "enumDescriptions": [
                        "The catch-all error for unknown or other issues.",
                        "The user has not yet provided a required consent.",
                        "The user has been rejected for the study.",
                        "The user has already enrolled in the study.",
                        "The user has not finished the enrollment surveys.",
                        "The user is waiting for approval to join the study.",
                        "The user needs to attend their first onsite before account unlocked.",
                        "The user has explicitly withdrawn their consent.",
                        "The client is out of date.",
                        "No account associated with this participant.",
                        "Study is not taking new participants, but the user on a list to be\nnotified if enrollment opens up.",
                        "The user is required to update their consent to the minimum acceptable\nversion as defined in the study policy.",
                        "The admin has not yet released required consent to the participant."
                    ],
                    "type": "string"
                },
                "subtitle": {
                    "description": "The error page's subtitle. Already i18n-ed.",
                    "type": "string"
                },
                "summary": {
                    "description": "The error page's summary. Already i18n-ed.",
                    "type": "string"
                },
                "title": {
                    "description": "The error page's title. Already i18n-ed.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1JustificationReason": {
            "description": "Store the string description for a JustificationType",
            "id": "LifescienceCspStudiesV1JustificationReason",
            "properties": {
                "justificationType": {
                    "enum": [
                        "JUSTIFICATION_TYPE_UNKNOWN",
                        "OTHER",
                        "SITE_OVERSIGHT",
                        "PARTICIPANT_DECLINED",
                        "PARTICIPANT_DOES_NOT_REMEMBER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Other justification which will be specified in other_justification field.",
                        "Site forgot to do the test.",
                        "Participant refused to provide the answer.",
                        "Participant doesn\u2019t remember the answer."
                    ],
                    "type": "string"
                },
                "reason": {
                    "description": "A string description of the reason, such as \u201cI don\u2019t remember\u201d. Already\ni18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1LearnMoreScreen": {
            "description": "Screen to show before the survey is shown. Contains more information about\nthe survey.",
            "id": "LifescienceCspStudiesV1LearnMoreScreen",
            "properties": {
                "details": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "Details about the survey. Can be further information or instructions.\nAlready i18n."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1LineItem": {
            "description": "An item worth an amount of money to be bundled into an aggregate payment.",
            "id": "LifescienceCspStudiesV1LineItem",
            "properties": {
                "accountingCode": {
                    "description": "AccountingCode corresponding to this LineItem.",
                    "enum": [
                        "ACCOUNTING_CODE_UNSPECIFIED",
                        "ACCOUNTING_CODE_MANUAL",
                        "ACCOUNTING_CODE_AGGREGATE",
                        "ACCOUNTING_CODE_BASELINE_ANNUAL_VISIT_DAY_1",
                        "ACCOUNTING_CODE_BASELINE_ANNUAL_VISIT_DAY_2",
                        "ACCOUNTING_CODE_BASELINE_QUARTERLY_VISIT",
                        "ACCOUNTING_CODE_BASELINE_QUARTERLY_VALIDATED_SURVEYS",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_DAILY_MOOD",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_SPRINT_SOCIAL",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_SPRINT_ACTIVITY",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_SPRINT_LOCATION",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_SPRINT_SLEEP",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_WEEKLY_QOL",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_WEEKLY_TEXT_LOG",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_WEEKLY_VOICE_LOG",
                        "ACCOUNTING_CODE_MYALO_SCALEIT_WEEKLY_PHQ_9"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "For aggregate payments, should contain LineItems with add'l AccountingCodes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "amount": {
                    "$ref": "GoogleTypeMoney",
                    "description": "Amount of Money this LineItem is worth"
                },
                "taskId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ListAccountsRequest": {
            "description": "Request for getting all Accounts associated with a participant (identified\nby a ParticipantKey).",
            "id": "LifescienceCspStudiesV1ListAccountsRequest",
            "properties": {
                "filter": {
                    "description": "Optional. Filtering constraints for listing accounts.",
                    "enum": [
                        "FILTER_UNKNOWN",
                        "FILTER_MANAGED_BY_REGISTRY",
                        "FILTER_REGISTRY"
                    ],
                    "enumDescriptions": [
                        "Unknown filter.",
                        "Filter for study-specific accounts that are managed by the Registry.",
                        "Filter for the Registry account, as well as all study-specific accounts\nthat are managed by the Registry (i.e. everything returned by the\nFILTER_MANAGED_BY_REGISTRY AccountFilter, plus the Registry account)."
                    ],
                    "type": "string"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Required. Common fields for read requests."
                },
                "pageToken": {
                    "description": "Pagination token. If populated with value given from last response, the\nnext response will give results from the next page. Optional.",
                    "type": "string"
                },
                "participantKey": {
                    "$ref": "LifescienceCspStudiesV1ParticipantKey",
                    "description": "Required. Key identifying the participant for the accounts to get."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ListAccountsResponse": {
            "description": "Response containing a list of Accounts (potentially paginated) associated\nwith the participant.",
            "id": "LifescienceCspStudiesV1ListAccountsResponse",
            "properties": {
                "accounts": {
                    "description": "Page of Accounts matching the request.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1Account"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Next page token, populated if there are more results, \"\" otherwise.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ListTaskSummariesRequest": {
            "description": "Request to get the list of task summaries available for the given\nparticipant.\n\nNote: This may replace GetTaskListRequest, which currently sends down all\ntask content and is not scalable.",
            "id": "LifescienceCspStudiesV1ListTaskSummariesRequest",
            "properties": {
                "context": {
                    "description": "The view for which the request is made.",
                    "enum": [
                        "VIEW_CONTEXT_UNKNOWN",
                        "ENROLLMENT_PORTAL",
                        "PARTICIPANT_PORTAL",
                        "MOCK_PARTICIPANT_PORTAL",
                        "EDC_PORTAL",
                        "MARKETING_SITE",
                        "ADMIN_PORTAL",
                        "BUILDER_PORTAL",
                        "IDENTITY_VERIFICATION",
                        "MEMBER_PORTAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "For testing.",
                        "",
                        "Not a view supported by CSP servers, but can be used to indicate a\nredirect.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "filteringCriteria": {
                    "$ref": "LifescienceCspStudiesV1ListTaskSummariesRequestFilteringCriteria",
                    "description": "Criteria to use for filtering.\nOptional."
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Optional. Common fields for read requests."
                },
                "participantKey": {
                    "$ref": "LifescienceCspStudiesV1ParticipantKey",
                    "description": "Required. Key identifying the participant whose list of task summaries to\nget."
                },
                "prefetchMode": {
                    "description": "Optional. Defines the subset of tasks that will include pre-fetched\ncontent.",
                    "enum": [
                        "PREFETCH_MODE_UNSPECIFIED",
                        "PREFETCH_MODE_NONE",
                        "PREFETCH_MODE_SOME"
                    ],
                    "enumDescriptions": [
                        "",
                        "Do not prefetch any tasks. Default when no mode is specified.",
                        "Prefetch some of the tasks. This is a useful mode for clients that are\noptimized for fewer requests (e.g. CSP mobile apps).\n\nFor now, this pre-fetches an arbitrary subset of returned tasks (e.g.\ntypically those of high emphasis, early in the feed, or of certain task\ntypes). However, clients should never assume that any task has\npre-fetched content and always provide fallback logic to load or hide\ncontent as needed."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ListTaskSummariesRequestFilteringCriteria": {
            "id": "LifescienceCspStudiesV1ListTaskSummariesRequestFilteringCriteria",
            "properties": {
                "completionStageCriteria": {
                    "$ref": "LifescienceCspStudiesV1CompletionStageCriteria",
                    "description": "Criteria for filtering tasks by CompletionStage.\nOptional."
                },
                "destinationStudy": {
                    "description": "The destination study specified on the task.\nOptional.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "study": {
                    "description": "Study to use when finding tasks. If not set, ListTaskSummaries returns\ntasks summaries for all of the participant's studies.\nOptional.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "workflowId": {
                    "description": "If set, only returns tasks matching the given workflow ID. If set, study\nmust also be set.\nOptional.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ListTaskSummariesResponse": {
            "description": "Response containing a list of task summaries.",
            "id": "LifescienceCspStudiesV1ListTaskSummariesResponse",
            "properties": {
                "taskSummary": {
                    "items": {
                        "$ref": "LifescienceCspStudiesV1TaskSummary"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Option": {
            "description": "Rendering instructions for single choice and multiple choice questions.",
            "id": "LifescienceCspStudiesV1Option",
            "properties": {
                "clearOthers": {
                    "description": "Clear other checkboxes when this one is checked. Useful for items like\n\"None of the above\" or \"None of these\".",
                    "type": "boolean"
                },
                "id": {
                    "description": "The unique option ID.",
                    "format": "int64",
                    "type": "string"
                },
                "renderingStyle": {
                    "description": "The rendering style of the option.\nOptional.",
                    "enum": [
                        "OPTION_RENDERING_STYLE_UNSPECIFIED"
                    ],
                    "enumDescriptions": [
                        ""
                    ],
                    "type": "string"
                },
                "score": {
                    "description": "The score of the option, which is used to support SumScoreMatch.\nOptional.",
                    "format": "int32",
                    "type": "integer"
                },
                "subtitle": {
                    "description": "The subtitle to show for the option. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the option. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1OptionData": {
            "description": "Rendering instructions for single choice and multiple choice questions.\nNext ID: 5",
            "id": "LifescienceCspStudiesV1OptionData",
            "properties": {
                "clearOthers": {
                    "description": "Clear other checkboxes when this one is checked. Useful for items like\n\"None of the above\" or \"None of these\".",
                    "type": "boolean"
                },
                "id": {
                    "description": "The unique option ID.",
                    "format": "int64",
                    "type": "string"
                },
                "subtitle": {
                    "description": "Option subtitle text. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "Option title text. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1OwedEarnings": {
            "description": "Information about earnings owed",
            "id": "LifescienceCspStudiesV1OwedEarnings",
            "properties": {
                "lastAggregatePaymentIdempotencyKey": {
                    "description": "Idempotency key of the last aggregate payment.",
                    "type": "string"
                },
                "lastAggregatePaymentTimeMillis": {
                    "description": "The most recent time at which an aggregate Payment was created.",
                    "format": "int64",
                    "type": "string"
                },
                "lineItemsOwed": {
                    "description": "LineItems for which no corresponding Payment has been created.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1LineItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Participant": {
            "description": "Participant data for a person that can participate in a clinical study.\nNext ID: 13",
            "id": "LifescienceCspStudiesV1Participant",
            "properties": {
                "actor": {
                    "$ref": "LifescienceCspStudiesV1Actor",
                    "description": "The actor that made the latest change to this participant."
                },
                "createdTime": {
                    "description": "When this participant was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "id": {
                    "description": "Unique internal id. The id is always more than 0 if assigned.\nIntegers are used for readability by humans.",
                    "format": "int64",
                    "type": "string"
                },
                "identityVerificationData": {
                    "$ref": "LifescienceCspStudiesV1Identity"
                },
                "modifiedTime": {
                    "description": "When this participant was last modified.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "participantKeys": {
                    "description": "Additional keys that can be used to find this participant.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1ParticipantKey"
                    },
                    "type": "array"
                },
                "participantType": {
                    "description": "Whether the participant is referred by an admin.",
                    "enum": [
                        "PARTICIPANT_TYPE_UNKNOWN",
                        "SELF_ENROLL_PARTICIPANT",
                        "REFERRED_PARTICIPANT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "paymentConfiguration": {
                    "description": "Payment configurations for a Participant.",
                    "items": {
                        "$ref": "LifescienceCspStudiesStoragePaymentConfiguration"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "LifescienceCspStudiesV1ParticipantStatus",
                    "description": "Status of the participant."
                },
                "version": {
                    "description": "The version of the participant data. This is an incrementing number that\nstarts at zero when the participant is first inserted and is increased by\none every time a change is made to the participant. This can be used for\noptimistic concurrency, caching, and conflict detection. The history of\nthe versions can be found in the ParticipantHistory table.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ParticipantKey": {
            "description": "An identifier that can be used to locate an Participant. It is composed of a\nkey type (essentially a namespace) and an id (a value in that namespace).",
            "id": "LifescienceCspStudiesV1ParticipantKey",
            "properties": {
                "id": {
                    "description": "An id whose meaning is determined by the |key_type|.",
                    "type": "string"
                },
                "keyType": {
                    "description": "Type of external key.",
                    "enum": [
                        "PARTICIPANT_KEY_TYPE_UNSPECIFIED",
                        "GAIA",
                        "REGISTRY_PARTICIPANT_ID"
                    ],
                    "enumDescriptions": [
                        "",
                        "Gaia ID. Every participant has one key of this type.\nTo lookup an entity by the this key, clients should pass in an empty\nstring for |ParticipantKey.id|.",
                        "Registry ID. This is the primary key for the Participant."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ParticipantStatus": {
            "description": "Status of the participant.",
            "id": "LifescienceCspStudiesV1ParticipantStatus",
            "properties": {
                "explicitlySet": {
                    "description": "If this is set, the state machine is suspended and the state is pinned\nto the state in the field above.",
                    "type": "boolean"
                },
                "state": {
                    "description": "State the participant is in. Note that some state values are only\nused for study states.",
                    "enum": [
                        "ACCOUNT_STATE_UNKNOWN",
                        "PRESCREEN",
                        "SCREEN_ELIGIBLE",
                        "SCREEN_COMPLETE",
                        "WAITING_SCHEDULING",
                        "SCHEDULED",
                        "ENROLLED",
                        "SCREEN_DECLINED",
                        "DECEASED",
                        "WITHDRAWN",
                        "ABUSE",
                        "LOST_TO_FOLLOWUP",
                        "PREGNANT",
                        "REGISTRY_ONLY",
                        "IDENTITY_VERIFICATION_FAILED",
                        "IDENTITY_VERIFIED",
                        "WAITLISTED",
                        "DUPLICATE",
                        "ELIGIBLE_FOR_SCREENING",
                        "SCHEDULED_FOR_SCREENING",
                        "ELIGIBLE_FOR_STUDY",
                        "INELIGIBLE_FOR_SCREENING",
                        "SCREENING_COMPLETE",
                        "DECLINED_TO_JOIN_STUDY",
                        "FROZEN",
                        "WAITING_FOR_SCHEDULING_SCREENING"
                    ],
                    "enumDescriptions": [
                        "",
                        "The account has just been created (after the user hit the enrollment\nportal).",
                        "This account has signed both consents of the enrollment portal and is\ncreating their Baseline profile.",
                        "Participant has completed all enrollment portal tasks (e.g. application\nsurveys), and we\u2019re waiting on some other condition to be met (e.g. cohort\nassignment, identity verification).",
                        "Participant is waiting for a visit scheduling.",
                        "Participant has a visit scheduled.",
                        "Participant has a visit scheduled and attended.",
                        "Hard rejection state. The participant is out.",
                        "Participant has died. Access is denied.",
                        "Participant has withdrawn registry consent. Access is denied.",
                        "Participant has abused the system. Access is denied.",
                        "Participant has not responded to communication several times. Access is\ndenied.",
                        "Participant self-reported pregnancy or was found pregnant in a test. Access\nis denied.",
                        "Can get there either through (automatic) soft rejection, or explicitly if\nthe participant refuses to sign (or withdraws) onsite consent.",
                        "Participant's identity could not be verified. The participant is out.",
                        "Participant's identity was verified.",
                        "Enrollment cap has been met at the moment. The participant might be\ncontacted later if the cap is increased.",
                        "Duplicate account.",
                        "Participant is eligible for screening.",
                        "Participant is scheduled for screening.",
                        "Participant is eligible for the study.",
                        "Participant is ineligible for screening.",
                        "Participant complete the screening.",
                        "Participant decline to join the study.",
                        "A frozen account, typically used at the end of studies that need to lock\naccounts. No new events (surveys, CRFs, etc) may be submitted for or by\nthese users (unless their account is unfrozen).",
                        "Participant is waiting for scheduling for the screening in home visit."
                    ],
                    "type": "string"
                },
                "timeMillis": {
                    "description": "When the participant entered |state|.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1PersistentTasks": {
            "description": "Immutable tasks that do not appear on the feed.",
            "id": "LifescienceCspStudiesV1PersistentTasks",
            "properties": {
                "eventReport": {
                    "$ref": "LifescienceCspStudiesV1TaskWrapper",
                    "description": "Event reporting task."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Practitioner": {
            "description": "Practitioner data for a person that can directly or indirectly provision\nhealthcare in a clinical study.\nNext ID: 6",
            "id": "LifescienceCspStudiesV1Practitioner",
            "properties": {
                "actor": {
                    "$ref": "LifescienceCspStudiesV1Actor",
                    "description": "The actor that made the latest change to this practitioner."
                },
                "createdTime": {
                    "description": "When this practitioner was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "modifiedTime": {
                    "description": "When this practitioner was last modified.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "practitionerIdKey": {
                    "$ref": "LifescienceCspStudiesV1PractitionerKey",
                    "description": "A |PractitionerKey| that can be used to fetch or update this Practitioner."
                },
                "version": {
                    "description": "The version of the practitioner data. This is an incrementing number that\nstarts at zero when the practitioner is first inserted and is increased by\none every time a change is made to the practitioner. This can be used for\noptimistic concurrency, caching, and conflict detection. The history of\nthe versions can be found in the PractitionerHistory table.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1PractitionerKey": {
            "description": "An identifier that can be used to locate a Practitioner. It is composed of a\nkey type (essentially a namespace) and an id (a value in that namespace).",
            "id": "LifescienceCspStudiesV1PractitionerKey",
            "properties": {
                "id": {
                    "description": "An id whose meaning is determined by the |key_type|.",
                    "type": "string"
                },
                "keyType": {
                    "description": "Type of external key.",
                    "enum": [
                        "PRACTITIONER_KEY_TYPE_UNSPECIFIED",
                        "PRACTITIONER_KEY_TYPE_GAIA",
                        "PRACTITIONER_KEY_TYPE_PRACTITIONER_ID"
                    ],
                    "enumDescriptions": [
                        "",
                        "GAIA ID. This key type is present for all practitioners.",
                        "Practitioner ID. Key type for the obfuscated primary key of the\nPractitioner.\nSee cs/google3/java/com/google/lifescience/csp/studies/common/CspIds.java"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QueryAccountsRequest": {
            "description": "Request for querying accounts, which should be used when there's\nno list of accountIDs - in that case you should use Get instead.\n\nThe EndUserCredentials and the identity they represent are an implicit\nquery parameter, and all requests and searches will be subject to filtering\nby the available permissions.\nNext ID: 9",
            "id": "LifescienceCspStudiesV1QueryAccountsRequest",
            "properties": {
                "columnFilterExpression": {
                    "$ref": "LifescienceCspStudiesV1ColumnFilterExpression",
                    "description": "An expression of column filters combined with different operators.\nThis expression is used to build a structured search query. By default\nthe query will be a boolean expression e.g., (A || B) && (C || D)."
                },
                "columnSort": {
                    "description": "Sorts, again applied in order with tie breakers.\nIt's illegal to specify program-specific sorts, like SITE, without\nspecifying\na unique program filter in the column_filter list.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1ColumnSort"
                    },
                    "type": "array"
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Optional. Common fields for read requests."
                },
                "pageToken": {
                    "description": "Pagination token. If populated with value given from last response, the\nnext response will give results from the next page.",
                    "type": "string"
                },
                "study": {
                    "description": "Required. Which study to query accounts for.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QueryAccountsResponse": {
            "description": "Next ID: 7",
            "id": "LifescienceCspStudiesV1QueryAccountsResponse",
            "properties": {
                "accounts": {
                    "description": "General per-request status.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1Account"
                    },
                    "type": "array"
                },
                "columnFilterExpression": {
                    "$ref": "LifescienceCspStudiesV1ColumnFilterExpression",
                    "description": "Indicates the filter expression that was used to generate this response."
                },
                "columnSort": {
                    "description": "Indicates which columns are sorted in the response.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1ColumnSort"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Next page token, populated if there are more results, \"\" otherwise.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Question": {
            "description": "Next ID: 15",
            "id": "LifescienceCspStudiesV1Question",
            "properties": {
                "autocompleteDataSource": {
                    "description": "Rendering instructions for autocomplete questions.",
                    "enum": [
                        "AUTOCOMPLETE_DATA_SOURCE_UNKNOWN",
                        "MEDICAL_CONDITIONS",
                        "SYMPTOMS_AND_CONDITIONS",
                        "MEDICATIONS",
                        "HOSPITALS",
                        "HOSPITALS_WITH_EHR_CONNECT_SUPPORT"
                    ],
                    "enumDescriptions": [
                        "",
                        "A curated list of medical conditions sourced from Knowledge Graph.",
                        "A curated list of symptoms and conditions sourced from Knowledge Graph.",
                        "A curated list of medications sourced from Knowledge Graph.",
                        "A curated list of hospitals hand curated by CSP.",
                        "A subset of HOSPITALS that we support EHR Connection for, to be used with\nthe EHR_CONNECT task."
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Globally unique ID for the question.\nRequired.",
                    "format": "int64",
                    "type": "string"
                },
                "initialValue": {
                    "$ref": "LifescienceCspStudiesCommonResponse",
                    "description": "The initial value for this question. If empty, no initial value (empty)."
                },
                "notApplicableJustificationReasons": {
                    "description": "A list of justification reasons that users can choose to skip\noptional questions.\nOptional.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1JustificationReason"
                    },
                    "type": "array"
                },
                "notApplicableReasonRequired": {
                    "description": "Whether a reason is required for N/A answers to optional questions.",
                    "type": "boolean"
                },
                "numericData": {
                    "description": "Rendering instructions for multiple-numeric questions.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonNumericData"
                    },
                    "type": "array"
                },
                "options": {
                    "description": "Rendering instructions for single- and multiple-choice questions.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1Option"
                    },
                    "type": "array"
                },
                "rendering": {
                    "$ref": "LifescienceCspStudiesV1QuestionRendering",
                    "description": "Data about how this Question will be rendered.\nRequired."
                },
                "responseRequired": {
                    "description": "Whether the question must be answered.",
                    "type": "boolean"
                },
                "type": {
                    "description": "The type of the question.\nRequired.",
                    "enum": [
                        "QUESTION_TYPE_UNKNOWN",
                        "NO_RESPONSE",
                        "BOOL_VALUE",
                        "NUMERIC_UUNIT",
                        "TEXT",
                        "SINGLE_CHOICE",
                        "MULTIPLE_CHOICE",
                        "ADDRESS",
                        "NAME",
                        "PHONE_NUMBER",
                        "BIRTH_PLACE",
                        "SINGLE_CHOICE_SCALE",
                        "NUMERIC",
                        "NUMERIC_RANGE",
                        "HEIGHT",
                        "WEIGHT",
                        "SINGLE_CHOICE_DROPDOWN",
                        "DATE_OF_BIRTH",
                        "EMAIL",
                        "TIME_RANGE",
                        "TIME_OF_DAY",
                        "DATE_TIME",
                        "MULTIPLE_NUMERIC",
                        "MONTH_YEAR",
                        "FIVE_STAR_RATING",
                        "AUTOCOMPLETE",
                        "AUDIO_RECORD",
                        "VOID"
                    ],
                    "enumDescriptions": [
                        "",
                        "Unused legacy type.",
                        "",
                        "Unused legacy type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Unused legacy type.",
                        "Use SINGLE_CHOICE instead.",
                        "",
                        "Unused legacy type.",
                        "Use NUMERIC with UnitOptionData instead.",
                        "Use NUMERIC with UnitOptionData instead.",
                        "",
                        "",
                        "",
                        "Range of start and end TimeOfDay.",
                        "Single TimeOfDay.",
                        "NOTE(b/63157451): This is not supported in firefox yet.",
                        "Use multiple questions instead.",
                        "Question with only month and year input fields.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "unitOptions": {
                    "description": "Units allowed for the response. Used for numeric inputs.\nOptional.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonUnitOptionData"
                    },
                    "type": "array"
                },
                "validationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule for the question.\n\nOptional. This field should be empty if  unit_option is set."
                },
                "voidEntity": {
                    "$ref": "LifescienceCspStudiesCommonVoidEntity",
                    "description": "Rendering instructions for a VOID QuestionType entity."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionDataJoined": {
            "description": "A question to display as part of a group.\nNext ID: 19",
            "id": "LifescienceCspStudiesV1QuestionDataJoined",
            "properties": {
                "answer": {
                    "$ref": "LifescienceCspStudiesCommonAnswer",
                    "description": "The answer for this question"
                },
                "autocompleteDataSource": {
                    "description": "Rendering instructions for autocomplete questions.",
                    "enum": [
                        "AUTOCOMPLETE_DATA_SOURCE_UNKNOWN",
                        "MEDICAL_CONDITIONS",
                        "SYMPTOMS_AND_CONDITIONS",
                        "MEDICATIONS",
                        "HOSPITALS",
                        "HOSPITALS_WITH_EHR_CONNECT_SUPPORT"
                    ],
                    "enumDescriptions": [
                        "",
                        "A curated list of medical conditions sourced from Knowledge Graph.",
                        "A curated list of symptoms and conditions sourced from Knowledge Graph.",
                        "A curated list of medications sourced from Knowledge Graph.",
                        "A curated list of hospitals hand curated by CSP.",
                        "A subset of HOSPITALS that we support EHR Connection for, to be used with\nthe EHR_CONNECT task."
                    ],
                    "type": "string"
                },
                "helpText": {
                    "$ref": "LifescienceCspStudiesV1HelpText",
                    "description": "Help text information for the question."
                },
                "id": {
                    "description": "The unique identifier for the question.",
                    "format": "int64",
                    "type": "string"
                },
                "initialValue": {
                    "$ref": "LifescienceCspStudiesCommonResponse",
                    "description": "The initial value for this question. If empty, no initial value (empty)."
                },
                "notApplicableReasonRequired": {
                    "description": "Whether a reason is required for N/A answers to optional questions.",
                    "type": "boolean"
                },
                "numericData": {
                    "description": "Rendering instructions for multiple-numeric questions.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonNumericData"
                    },
                    "type": "array"
                },
                "option": {
                    "description": "Rendering instructions for single- and multiple-choice questions.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1OptionData"
                    },
                    "type": "array"
                },
                "placeholderText": {
                    "description": "The placeholder text. Also known as 'hint text'.",
                    "type": "string"
                },
                "renderingStyle": {
                    "description": "The rendering style of the question. Not all clients will understand all\nrendering styles. If a client does not understand a particular style, it\nmay choose to apply a default rendering style.\n\nOptional.",
                    "enum": [
                        "QUESTION_RENDERING_STYLE_UNSPECIFIED",
                        "HORIZONTAL",
                        "SINGLE_CHOICE_CONVERSATIONAL_RESPONSE",
                        "TIME_TEXT_INPUT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Show a list of options in chip buttons arranged horizontally.",
                        "Show the question in App-based conversational response format.\nOnly used for single choice question type.",
                        "Text input format used for time of day question type. This accepts\ninputs of all increments, while the default 'select' style only accepts\n5-minute intervals.\nOnly supported in certain browsers."
                    ],
                    "type": "string"
                },
                "responseRequired": {
                    "description": "Whether the question must be answered.",
                    "type": "boolean"
                },
                "title": {
                    "description": "The title of the question. Already i18n.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the question.",
                    "enum": [
                        "QUESTION_TYPE_UNKNOWN",
                        "NO_RESPONSE",
                        "BOOL_VALUE",
                        "NUMERIC_UUNIT",
                        "TEXT",
                        "SINGLE_CHOICE",
                        "MULTIPLE_CHOICE",
                        "ADDRESS",
                        "NAME",
                        "PHONE_NUMBER",
                        "BIRTH_PLACE",
                        "SINGLE_CHOICE_SCALE",
                        "NUMERIC",
                        "NUMERIC_RANGE",
                        "HEIGHT",
                        "WEIGHT",
                        "SINGLE_CHOICE_DROPDOWN",
                        "DATE_OF_BIRTH",
                        "EMAIL",
                        "TIME_RANGE",
                        "TIME_OF_DAY",
                        "DATE_TIME",
                        "MULTIPLE_NUMERIC",
                        "MONTH_YEAR",
                        "FIVE_STAR_RATING",
                        "AUTOCOMPLETE",
                        "AUDIO_RECORD",
                        "VOID"
                    ],
                    "enumDescriptions": [
                        "",
                        "Unused legacy type.",
                        "",
                        "Unused legacy type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Unused legacy type.",
                        "Use SINGLE_CHOICE instead.",
                        "",
                        "Unused legacy type.",
                        "Use NUMERIC with UnitOptionData instead.",
                        "Use NUMERIC with UnitOptionData instead.",
                        "",
                        "",
                        "",
                        "Range of start and end TimeOfDay.",
                        "Single TimeOfDay.",
                        "NOTE(b/63157451): This is not supported in firefox yet.",
                        "Use multiple questions instead.",
                        "Question with only month and year input fields.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "unitOption": {
                    "description": "Units allowed for the response. Used for numeric inputs. Optional.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonUnitOptionData"
                    },
                    "type": "array"
                },
                "validationRule": {
                    "$ref": "LifescienceCspStudiesCommonValidationRule",
                    "description": "Validation rule for the question. Optional."
                },
                "voidEntity": {
                    "$ref": "LifescienceCspStudiesCommonVoidEntity",
                    "description": "Rendering instructions for a VOID QuestionType entity."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionGroupDataJoined": {
            "description": "A question group to display as part of a survey.\nNext ID: 6",
            "id": "LifescienceCspStudiesV1QuestionGroupDataJoined",
            "properties": {
                "dependency": {
                    "$ref": "LifescienceCspStudiesCommonDependency",
                    "description": "Dependency. Only show the group if it evaluates to true."
                },
                "id": {
                    "description": "Unique ID for the group.",
                    "format": "int64",
                    "type": "string"
                },
                "question": {
                    "description": "The contents of the group.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionDataJoined"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "The subtitle to display for the group. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to display for the group. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionMappings": {
            "description": "Represents how a question is mapped to the external data models.",
            "id": "LifescienceCspStudiesV1QuestionMappings",
            "properties": {
                "oid": {
                    "description": "The Object ID for the question.",
                    "type": "string"
                },
                "questionId": {
                    "description": "The id for the question that uses these mappings.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionRendering": {
            "description": "Data about how this Question will be rendered.",
            "id": "LifescienceCspStudiesV1QuestionRendering",
            "properties": {
                "helpTextCaption": {
                    "description": "The caption for the help text for the question. Already i18n.",
                    "type": "string"
                },
                "helpTextDetails": {
                    "description": "The details for the help text for the question. Already i18n.",
                    "type": "string"
                },
                "placeholderText": {
                    "description": "The placeholder text (also known as \"hint text\"). Already i18n.",
                    "type": "string"
                },
                "renderingStyle": {
                    "description": "The rendering style of the question.\nOptional.",
                    "enum": [
                        "QUESTION_RENDERING_STYLE_UNSPECIFIED",
                        "HORIZONTAL",
                        "SINGLE_CHOICE_CONVERSATIONAL_RESPONSE",
                        "TIME_TEXT_INPUT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Show a list of options in chip buttons arranged horizontally.",
                        "Show the question in App-based conversational response format.\nOnly used for single choice question type.",
                        "Text input format used for time of day question type. This accepts\ninputs of all increments, while the default 'select' style only accepts\n5-minute intervals.\nOnly supported in certain browsers."
                    ],
                    "type": "string"
                },
                "subtitle": {
                    "description": "The subtitle to show for the question. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the question. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Questionnaire": {
            "description": "Specification of a set of questions contained within recursively repeated\nquestion groups.",
            "id": "LifescienceCspStudiesV1Questionnaire",
            "properties": {
                "groups": {
                    "description": "All groups in this questionnaire.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionnaireGroup"
                    },
                    "type": "array"
                },
                "questionnaireId": {
                    "$ref": "LifescienceCspContentCommonQuestionnaireId",
                    "description": "The ID and version of this questionnaire.\n\nRequired."
                },
                "rendering": {
                    "$ref": "LifescienceCspStudiesV1QuestionnaireRendering",
                    "description": "Data about how this Questionnaire will be rendered.\nRequired."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionnaireGroup": {
            "description": "A grouping of questions in a questionnare.",
            "id": "LifescienceCspStudiesV1QuestionnaireGroup",
            "properties": {
                "dependency": {
                    "$ref": "LifescienceCspStudiesCommonDependency",
                    "description": "Dependency for this group. If this is set, the group will only be shown if\nit evaluates to true.\n\nOptional."
                },
                "groups": {
                    "description": "All groups in this QuestionnaireGroup.\n\nA QuestionnaireGroup cannot contain both questions and groups.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionnaireGroup"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Globally unique ID for the group. Note that the id could be changed\nwhen the QuestionareGroup is modified so it can't be used to identify\nthe content or meaning of a questionnaire group.\nRequired.",
                    "type": "string"
                },
                "questions": {
                    "description": "All questions in this QuestionnaireGroup.\n\nA QuestionnaireGroup cannot contain both questions and groups.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1Question"
                    },
                    "type": "array"
                },
                "rendering": {
                    "$ref": "LifescienceCspStudiesV1QuestionnaireGroupRendering",
                    "description": "Data about how this QuestionnaireGroup will be rendered.\nRequired."
                },
                "repeatRule": {
                    "$ref": "LifescienceCspStudiesCommonRepeatRule",
                    "description": "Define how this questionaire group will be repeated. QuestionnaireGroup\nwill be rendered only once if not set."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionnaireGroupAnswer": {
            "description": "Answers to a questionnaire group.",
            "id": "LifescienceCspStudiesV1QuestionnaireGroupAnswer",
            "properties": {
                "groupAnswers": {
                    "description": "Answers to groups contained within this group.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionnaireGroupAnswer"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The ID of the group.",
                    "type": "string"
                },
                "questionAnswers": {
                    "description": "Answers to questions contained in this group but not sub-groups.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonAnswer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionnaireGroupRendering": {
            "description": "Data about how this QuestionnaireGroup will be rendered.",
            "id": "LifescienceCspStudiesV1QuestionnaireGroupRendering",
            "properties": {
                "subtitle": {
                    "description": "The subtitle to show for the group. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the group. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionnaireRendering": {
            "description": "Data about how this Questionnaire will be rendered.",
            "id": "LifescienceCspStudiesV1QuestionnaireRendering",
            "properties": {
                "description": {
                    "description": "The description of the survey. Already i18n.",
                    "type": "string"
                },
                "intro": {
                    "description": "The contents to render in the intro page. Already i18n.",
                    "type": "string"
                },
                "outroSubtitle": {
                    "description": "The subtitle to show on the outro page. Already i18n.",
                    "type": "string"
                },
                "outroTitle": {
                    "description": "The title to show on the outro page. Already i18n.",
                    "type": "string"
                },
                "subtitle": {
                    "description": "The subtitle to show for the survey. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the survey. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1QuestionnaireSubmission": {
            "description": "LINT.IfChange\nSubmission for a new-generation questionnaire.",
            "id": "LifescienceCspStudiesV1QuestionnaireSubmission",
            "properties": {
                "complete": {
                    "description": "We save partial surveys as events too. This will be set to false for\nthose events.",
                    "type": "boolean"
                },
                "groupAnswers": {
                    "description": "The group answers.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionnaireGroupAnswer"
                    },
                    "type": "array"
                },
                "isSourceVerificationSave": {
                    "description": "Whether it is a source document verification save.",
                    "type": "boolean"
                },
                "questionnaireId": {
                    "$ref": "LifescienceCspContentCommonQuestionnaireId",
                    "description": "The ID of the questionnaire that we're saving answers to."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1RandomizationMetadata": {
            "description": "Metadata about randomization of a participant.\nRandomization may be used in some studies to customize the flow participants\ngo through, e.g., the consent they sign, the tasks they see, or the payments\nthey receive.",
            "id": "LifescienceCspStudiesV1RandomizationMetadata",
            "properties": {
                "groupId": {
                    "description": "Which group a participant is assigned to.",
                    "type": "string"
                },
                "status": {
                    "description": "Denotes whether the participant is randomized tentatively or finally to\nthis group.",
                    "enum": [
                        "RANDOMIZATION_STATUS_UNKNOWN",
                        "RANDOMIZATION_STATUS_TENTATIVE",
                        "RANDOMIZATION_STATUS_FINAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "The participant is randomized to this experimental group tentatively,\nin the sense that their participation does not count towards how \"full\"\nthat group's bucket is.",
                        "The participant is randomized to this group in a final manner,\nmeaning they count towards the number of people actually in that\ngroup."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1Range": {
            "id": "LifescienceCspStudiesV1Range",
            "properties": {
                "end": {
                    "format": "int64",
                    "type": "string"
                },
                "start": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ReadApiHeader": {
            "id": "LifescienceCspStudiesV1ReadApiHeader",
            "properties": {
                "clientVersion": {
                    "$ref": "LifescienceCspCommonClientVersion",
                    "description": "Set by mobile clients to determine whether an update is needed."
                },
                "languageCode": {
                    "description": "Language or locale code requested by client.\nAs defined by BCP 47, e.g. \"en\" or \"en-US\".\nSee http://google3/i18n/identifiers/tools/language_code_constants.txt\nLanguage will not necessarily be honored by the server. Server responses\nwill either be in the requested language or English.\n\nNOTE: This is not used in practice by standard boq web clients, which\ninstead propagate the language code in the stubby side channel via\ngoogle.rpc.context.OriginContext,\nsent here:\nhttp://google3/java/com/google/apps/framework/sidechannel/UserDataPropagationModule.java?l=280&rcl=174819156\nand pulled out here:\nhttp://google3/java/com/google/apps/framework/request/impl/LanguageCodeStringModule.java?l=74&rcl=157108716",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SavedTask": {
            "description": "Tasks that the user can complete (e.g. in the portal). These could\nbe as simple as entering their contact information or as complex as\nsetting up a new device.\nNext ID: 10",
            "id": "LifescienceCspStudiesV1SavedTask",
            "properties": {
                "autogeneratedInquiryIssueId": {
                    "description": "The issue ID for a Buganizer issue that was created when an auto-generated\ninquiry was generated for this task. Note that the buganizer issue will be\ncreated very soon after the task is submitted for the first time.\n\nCurrently only set for event reports.",
                    "format": "int64",
                    "type": "string"
                },
                "clientEventId": {
                    "description": "Client-supplied unique ID for the event.\nOptional.",
                    "type": "string"
                },
                "completedTimeMillis": {
                    "description": "Time that the task was completed. This field is not set for the\nsave-but-not-yet-completed tasks.",
                    "format": "int64",
                    "type": "string"
                },
                "lastSavedTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "latestAutoSavedEventId": {
                    "format": "int64",
                    "type": "string"
                },
                "latestEventId": {
                    "description": "Id of the most recent manual-saved event containing this task's data.\nThis field is set for both completed and saved-but-not-completed tasks,\nbut not set for the assigned-but-not-saved-at-all-tasks. It need to be\nupdated every time the task response is manually updated.",
                    "format": "int64",
                    "type": "string"
                },
                "startTimeMillis": {
                    "description": "Time that the task was started. This field was added in 02/2019, so\nclients cannot rely on it being set for older task submissions.\n\nOptional.",
                    "format": "int64",
                    "type": "string"
                },
                "taskId": {
                    "description": "Id used to uniquely identify this task.",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "TASK_TYPE_UNKNOWN",
                        "TASK_TYPE_SURVEY",
                        "TASK_TYPE_CHALLENGE",
                        "TASK_TYPE_EVENT_REPORT",
                        "TASK_TYPE_CRF",
                        "TASK_TYPE_SURVEY_GROUP",
                        "TASK_TYPE_THIRD_PARTY_LINK",
                        "TASK_TYPE_SENSOR_DATA",
                        "TASK_TYPE_EHR_CONNECT",
                        "TASK_TYPE_IDV",
                        "TASK_TYPE_CONSENT",
                        "TASK_TYPE_SCHEDULE_LAB",
                        "TASK_TYPE_STUDY_ENROLLMENT",
                        "TASK_TYPE_VOICE_LOG",
                        "TASK_TYPE_PHOTO_CAPTURE",
                        "TASK_TYPE_GENERAL",
                        "TASK_TYPE_INFORMATIONAL",
                        "TASK_TYPE_SHASTA_PHOTO_CAPTURE",
                        "TASK_TYPE_VIDEO_CHAT"
                    ],
                    "enumDescriptions": [
                        "",
                        "A survey that a participant needs to complete. Survey tasks can only be\nfetched via GetTask when they are not complete.",
                        "A challenge for the participant. Challenge tasks can be fetched via GetTask\nin any completion status.",
                        "A task for reporting an adverse event. Event report tasks are a\n\"persistent\" task, which is NOT fetchable via GetTask.",
                        "A Case Report Form to be completed by the admin for a participant.",
                        "A group of surveys to be completed by the participant. Survey group tasks\ncan be fetched via GetTask when at least 1 of the surveys in the group is\nnot complete.",
                        "Task for a user to link a third-party account (e.g. Medicare) to their CSP\naccount. Third party link tasks can only be fetched via GetTask when they\nare not complete.",
                        "Task for a user to view their sensor data (e.g. Study Watch). Sensor tasks\ndo not have a concept of \"completion\" and thus can be fetched via GetTask\nas long as they are available.",
                        "A task for connecting health care providers and electronic health records\nto a participant's account. EHR connect tasks can be fetched via GetTask in\nany completion status.",
                        "A task for completing the identity verification. IDV tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task for completing consent. Consent tasks can be fetched via GetTask in\nany completion status.",
                        "A task for scheduling a lab visit. Labs scheduling tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task that allows enrolling in a study. Study enrollment tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task for taking voice log from users. Voice Log tasks can be fetched via\nGetTask when they are not complete.",
                        "A task for taking camera captured photos from  users. Photo capture tasks\ncan be fetched via GetTask when they are not complete.",
                        "A general task type containing a start task and complete task button,\nallowing us to prototype and integration test the work flow independently.",
                        "A task to convey information to the participant without invoking action.",
                        "A task for taking pictures from users for the Shasta study. Note that this\nis distinct from TASK_TYPE_PHOTO_CAPTURE, which is intended to be a more\ngeneral configurable task.",
                        "A task for video conferencing between users. Currently supported only\nin the Shasta study."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ScheduleLabContent": {
            "description": "Content for the SCHEDULE_LAB task.",
            "id": "LifescienceCspStudiesV1ScheduleLabContent",
            "properties": {
                "visitId": {
                    "description": "Visit to be scheduled.",
                    "enum": [
                        "VISIT_ID_UNKNOWN",
                        "VISIT_ID_BASELINE_STUDY_START_VISIT",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_0_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_1_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_1_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_2_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_2_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_3_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_1",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_2",
                        "VISIT_ID_BASELINE_YEAR_3_QUARTERLY_VISIT_3",
                        "VISIT_ID_BASELINE_YEAR_4_ANNUAL_VISIT",
                        "VISIT_ID_BASELINE_EVENT_RELATED_VISIT",
                        "VISIT_ID_ONDUO_VDC_SCREENING",
                        "VISIT_ID_ONDUO_VDC_BASELINE",
                        "VISIT_ID_ONDUO_VDC_4_MONTH",
                        "VISIT_ID_ONDUO_VDC_12_MONTH",
                        "VISIT_ID_ONDUO_VDC_UNSCHEDULED",
                        "VISIT_ID_DUKE_LPA_LAB",
                        "VISIT_ID_SHASTA_SCREENING",
                        "VISIT_ID_SHASTA_SCREENING_DECISION_CALL",
                        "VISIT_ID_SHASTA_DOSING_DAY_1",
                        "VISIT_ID_SHASTA_WEEK_1_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_2_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_3_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_4_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_5_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_WEEK_6_VIDEO_CHAT",
                        "VISIT_ID_SHASTA_END_OF_STUDY_FOLLOW_UP",
                        "VISIT_ID_SHASTA_ADVERSE_EVENT_VISIT",
                        "VISIT_ID_SHASTA_SEVERE_ADVERSE_EVENT_VISIT",
                        "VISIT_ID_DENALI_SCREENING",
                        "VISIT_ID_DENALI_BASELINE",
                        "VISIT_ID_DENALI_WEEK_1",
                        "VISIT_ID_DENALI_WEEK_2",
                        "VISIT_ID_DENALI_WEEK_3",
                        "VISIT_ID_DENALI_MONTH_1",
                        "VISIT_ID_DENALI_MONTH_2",
                        "VISIT_ID_DENALI_MONTH_3",
                        "VISIT_ID_DENALI_ADVERSE_EVENT",
                        "VISIT_ID_DENALI_STUDY_COMP",
                        "VISIT_ID_DENALI_PROTOCOL_DEVIATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Baseline study: 100-199",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Onduo Virtual Diabetes Clinic (\"Bandit\"): 200-299",
                        "",
                        "",
                        "",
                        "",
                        "Duke Lp(a) study: 300-399",
                        "Shasta study: 400-499",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Denali study: 500-599",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SensorDataTaskCard": {
            "description": "Content for a task list card that presents a user with their sensor data\n(e.g. step count).\nNext ID: 9",
            "id": "LifescienceCspStudiesV1SensorDataTaskCard",
            "properties": {
                "cardState": {
                    "enum": [
                        "SENSOR_DATA_CARD_STATE_UNSPECIFIED",
                        "SENSOR_DATA_CARD_STATE_RECENT_SYNC",
                        "SENSOR_DATA_CARD_STATE_EXPIRED_SYNC",
                        "SENSOR_DATA_CARD_STATE_RECENT_SYNC_NO_DATA",
                        "SENSOR_DATA_CARD_STATE_RECENT_SYNC_STILL_PROCESSING"
                    ],
                    "enumDescriptions": [
                        "",
                        "Recently synced data is available.",
                        "Recently synced data is not available, because the last sync is too old.",
                        "Recently synced data is available, but there is none of the requested\nquantity, maybe because it was not recorded, or user was not wearing the\ndevice.",
                        "Recently synced but data is still processing"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Description text for the card (i18n). Optional.",
                    "type": "string"
                },
                "header": {
                    "description": "Header for the card (i18n).\nDeprecated, remove after web migrates to use summary header.",
                    "type": "string"
                },
                "lastSyncMillis": {
                    "description": "The last time the device was synced, in milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "serialNumber": {
                    "description": "The serial number of the device from which the data came.",
                    "type": "string"
                },
                "subtitle": {
                    "description": "Subtitle text for the card (i18n).",
                    "type": "string"
                },
                "title": {
                    "description": "Title text for the card (i18n).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ShastaPhotoCaptureContent": {
            "description": "Content for a Shasta-specific Photo Capture Task.",
            "id": "LifescienceCspStudiesV1ShastaPhotoCaptureContent",
            "properties": {
                "photoSetVersion": {
                    "description": "The photo set version that should be set by the client in\nSubmitPhotoSetRequest when submitting retakes. Used by the server to\nenforce consistency.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1StartTaskRequest": {
            "description": "Request to get an individual task for a participant and mark it as started.",
            "id": "LifescienceCspStudiesV1StartTaskRequest",
            "properties": {
                "accountKey": {
                    "$ref": "LifescienceCspStudiesV1AccountKey",
                    "description": "Key identifying the account.\nRequired."
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1ReadApiHeader",
                    "description": "Common fields for read requests.\nOptional."
                },
                "study": {
                    "description": "Study to use when finding tasks.\nRequired.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "taskId": {
                    "description": "The task ID of the task to mark as started.\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1StartTaskResponse": {
            "id": "LifescienceCspStudiesV1StartTaskResponse",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1StudyEnrollmentContent": {
            "description": "Content for the STUDY_ENROLLMENT task.",
            "id": "LifescienceCspStudiesV1StudyEnrollmentContent",
            "properties": {
                "study": {
                    "description": "The study which the user is enrolling into.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SubmissionScreen": {
            "description": "Screen to show after the survey has been filled out, before it is submitted.",
            "id": "LifescienceCspStudiesV1SubmissionScreen",
            "properties": {
                "subtitle": {
                    "description": "Subtitle for the screen.",
                    "type": "string"
                },
                "title": {
                    "description": "Title for the screen.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SummaryCardContent": {
            "description": "Content section of the task card.",
            "id": "LifescienceCspStudiesV1SummaryCardContent",
            "properties": {
                "description": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "The description of this card. Optional."
                },
                "subtitle": {
                    "description": "The subtitle of this card. Optional.",
                    "type": "string"
                },
                "title": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "The title of this card, e.g. \"Tell us how your health has changed\"."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SummaryCardHeader": {
            "description": "Header section of the task card.",
            "id": "LifescienceCspStudiesV1SummaryCardHeader",
            "properties": {
                "activityTitle": {
                    "description": "The activity the card triggers, e.g. \"Feedback survey\" or \"Study Watch\".",
                    "type": "string"
                },
                "studyName": {
                    "description": "The name of the study, e.g. \"Project Baseline Health Study\". Optional;\nonly present in branded cards.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyAnswerSet": {
            "description": "The set of answers from a survey.\nNext ID: 6",
            "id": "LifescienceCspStudiesV1SurveyAnswerSet",
            "properties": {
                "answers": {
                    "description": "Answers for regular survey. This field is set only for regular survey.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonAnswer"
                    },
                    "type": "array"
                },
                "complete": {
                    "description": "We save partial surveys as events too. This will be set to false for\nthose events.",
                    "type": "boolean"
                },
                "surveyId": {
                    "description": "If set, all answers above belong to this single survey",
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "description": "The version of the survey this answer is for.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyAnswerV2": {
            "description": "Answer for a v2 survey, which contains repeatable sections and subsections.",
            "id": "LifescienceCspStudiesV1SurveyAnswerV2",
            "properties": {
                "complete": {
                    "description": "We save partial surveys as events too. This will be set to false for\nthose events.",
                    "type": "boolean"
                },
                "isSourceVerificationSave": {
                    "description": "Whether it is a source document verification save.",
                    "type": "boolean"
                },
                "sectionAnswers": {
                    "description": "Survey section answers.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1SurveySectionAnswer"
                    },
                    "type": "array"
                },
                "surveyId": {
                    "$ref": "LifescienceCspStudiesCommonSurveyId",
                    "description": "Id for the survey."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyContent": {
            "description": "Wrapper which packages survey and answer data together.\nNext ID: 8",
            "id": "LifescienceCspStudiesV1SurveyContent",
            "properties": {
                "instructionsScreen": {
                    "$ref": "LifescienceCspStudiesV1LearnMoreScreen",
                    "description": "Screen to show before the survey is shown. Contains more information about\nthe survey.\nOptional."
                },
                "metadata": {
                    "$ref": "LifescienceCspStudiesV1SurveyMetadata",
                    "description": "Metadata about the survey that can be helpful at render time. Optional."
                },
                "submissionScreen": {
                    "$ref": "LifescienceCspStudiesV1SubmissionScreen",
                    "description": "Screen to show after the survey has been filled out, before it is\nsubmitted."
                },
                "surveyData": {
                    "$ref": "LifescienceCspStudiesV1SurveyDataJoined",
                    "description": "Survey data."
                },
                "surveyDataV2": {
                    "$ref": "LifescienceCspStudiesV1SurveyDataV2",
                    "description": "Data for the survey with repeated sections and subsections."
                },
                "surveyDataV3": {
                    "$ref": "LifescienceCspStudiesV1Questionnaire",
                    "description": "Data for the survey with recurisvely repeated question groups."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyDataJoined": {
            "description": "Represents a V1 survey for the client.\nNext ID: 10",
            "id": "LifescienceCspStudiesV1SurveyDataJoined",
            "properties": {
                "description": {
                    "description": "The description to show for the survey. Already i18n.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the survey (unique).",
                    "format": "int64",
                    "type": "string"
                },
                "questionGroup": {
                    "description": "The contents of the survey.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionGroupDataJoined"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "The subtitle to show for the survey. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the survey. Already i18n.",
                    "type": "string"
                },
                "version": {
                    "description": "The version of the survey.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyDataV2": {
            "description": "Data used to render a V2 survey.",
            "id": "LifescienceCspStudiesV1SurveyDataV2",
            "properties": {
                "id": {
                    "$ref": "LifescienceCspStudiesCommonSurveyId",
                    "description": "The ID of the survey (unique)."
                },
                "sections": {
                    "description": "Survey sections in this survey.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1SurveySection"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "The subtitle to show for the survey. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the survey. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyGroupContent": {
            "description": "Task content that represents a group of surveys.\nCurrently, the children can only contain SurveyContent.\nNext ID: 10",
            "id": "LifescienceCspStudiesV1SurveyGroupContent",
            "properties": {
                "description": {
                    "description": "Description of the group. Already i18n.\nRequired.",
                    "type": "string"
                },
                "details": {
                    "$ref": "LifescienceCspStudiesV1SurveyGroupDetails",
                    "description": "Descriptive details on the group, displayed when the client selects 'Learn\nMore'. Already i18n.\nRequired."
                },
                "innerTitle": {
                    "description": "Title of inner components of the group, e.g. on details and pending_surveys\nscreens. Already i18n.\nRequired.",
                    "type": "string"
                },
                "pendingSurveys": {
                    "description": "All non-completed child surveys. Each of these is a task, and can have\none or more saved events related to it.\nRequired.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1SurveyGroupEntry"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "Subtitle of the group. Already i18n.\nRequired.",
                    "type": "string"
                },
                "surveyGroupBehavior": {
                    "description": "Specifies the behavior of the surveys in this group.",
                    "enum": [
                        "SURVEY_GROUP_BEHAVIOR_UNSPECIFIED",
                        "FIRST_SURVEY_ENABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The first child survey task is enabled, and the other child tasks are\ninitially disabled. When the first survey task is completed, the second\nsurvey task implicitly becomes enabled."
                    ],
                    "type": "string"
                },
                "title": {
                    "description": "Title of the group. Already i18n.\nRequired.",
                    "type": "string"
                },
                "totalSurveyCount": {
                    "description": "Total number of surveys in this group, including completed surveys.\nRequired.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyGroupDetails": {
            "description": "Detailed overview information about a survey group.",
            "id": "LifescienceCspStudiesV1SurveyGroupDetails",
            "properties": {
                "availability": {
                    "description": "A message indicating how long this survey group will be available to the\nuser, e.g., \"Available until the end of the week\".\nRequired.",
                    "type": "string"
                },
                "entryDuration": {
                    "description": "A message indicating how long we estimate an individual survey in the group\nto take, e.g., \"A few minutes for each survey\".\nRequired.",
                    "type": "string"
                },
                "learnMoreContent": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "More details about this group of surveys. Already i18n.\nRequired."
                },
                "paymentInfo": {
                    "description": "A message indicating the payment for completion of all surveys in the\ngroup, e.g., \"$10.00 for completing all surveys\".\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyGroupEntry": {
            "description": "An entry in a survey group.\nNext ID: 7",
            "id": "LifescienceCspStudiesV1SurveyGroupEntry",
            "properties": {
                "consistencyToken": {
                    "description": "Consistency token that should be set on an InsertEventRequest to save an\nevent related to this survey, to avoid potential write conflicts with other\nclients.",
                    "type": "string"
                },
                "intro": {
                    "$ref": "LifescienceCspStudiesCommonTaskSummaryBufferPage",
                    "description": "Content used to render an intro (instructions) page before the survey."
                },
                "outro": {
                    "$ref": "LifescienceCspStudiesCommonTaskSummaryBufferPage",
                    "description": "Content used to render an outro page after a survey was submitted."
                },
                "surveyContent": {
                    "$ref": "LifescienceCspStudiesV1SurveyContent",
                    "description": "Contains the survey.\nRequired."
                },
                "surveyGroupDescription": {
                    "description": "Description to use in the containing survey group when this is the next\nenabled survey task to be completed. For instance, the task group may\ninitially have a description of \"Your Quarterly Surveys are Ready!\" when\nthe first task is pending, and then after that is done it might say \"Great\njob on that mood survey. Care to continue?\"\n\nRequired.",
                    "type": "string"
                },
                "taskId": {
                    "description": "Uniquely identifies the task associated with this survey. Clients should\nuse this to refer to the task when saving an event for it.\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveyMetadata": {
            "description": "Extra data about the survey content that can be helpful at render time.",
            "id": "LifescienceCspStudiesV1SurveyMetadata",
            "properties": {
                "questionMappings": {
                    "description": "How the questions in this questionnaire are mapped to the external data\nmodels. This is useful for pre-filling information that has already been\nprovided by a user.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionMappings"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveySection": {
            "description": "Data used to render a survey section.",
            "id": "LifescienceCspStudiesV1SurveySection",
            "properties": {
                "hasAnswers": {
                    "description": "Whether this section has any answers.",
                    "type": "boolean"
                },
                "repeatRule": {
                    "$ref": "LifescienceCspStudiesCommonRepeatRule",
                    "description": "Define how this survey section will be repeated. SurveySection will be\nrendered only once if not set."
                },
                "sectionId": {
                    "description": "ID of the survey section.",
                    "format": "int64",
                    "type": "string"
                },
                "subsections": {
                    "description": "The content of this survey section.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1SurveySubsection"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "The subtitle to show for the survey section. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the survey section. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveySectionAnswer": {
            "description": "Answer for a survey section.",
            "id": "LifescienceCspStudiesV1SurveySectionAnswer",
            "properties": {
                "sectionId": {
                    "description": "Id of the survey section.",
                    "format": "int64",
                    "type": "string"
                },
                "subsectionAnswers": {
                    "description": "Survey subsection answers.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1SurveySubsectionAnswer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveySubsection": {
            "description": "Renders a subsection of the survey which can be repeated if the condition is\nsatisfied.",
            "id": "LifescienceCspStudiesV1SurveySubsection",
            "properties": {
                "hasAnswers": {
                    "description": "Whether this survey subsection has any answers.",
                    "type": "boolean"
                },
                "questionGroups": {
                    "description": "The contents of the survey subsection.",
                    "items": {
                        "$ref": "LifescienceCspStudiesV1QuestionGroupDataJoined"
                    },
                    "type": "array"
                },
                "repeatRule": {
                    "$ref": "LifescienceCspStudiesCommonRepeatRule",
                    "description": "Define how this survey subsection will be repeated. SurveySubsection\nwill be rendered only once if not set."
                },
                "subsectionId": {
                    "description": "ID of the survey subsection.",
                    "format": "int64",
                    "type": "string"
                },
                "subtitle": {
                    "description": "The subtitle to show for the survey subsection. Already i18n.",
                    "type": "string"
                },
                "title": {
                    "description": "The title to show for the survey subsection. Already i18n.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1SurveySubsectionAnswer": {
            "description": "Answer for a survey subsection.",
            "id": "LifescienceCspStudiesV1SurveySubsectionAnswer",
            "properties": {
                "answers": {
                    "description": "Answers for regular survey. This field is set only for regular survey.",
                    "items": {
                        "$ref": "LifescienceCspStudiesCommonAnswer"
                    },
                    "type": "array"
                },
                "subsectionId": {
                    "description": "Id of the survey subsection.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1TaskContent": {
            "description": "The content of a task.\nNext ID: 28",
            "id": "LifescienceCspStudiesV1TaskContent",
            "properties": {
                "challengeData": {
                    "$ref": "LifescienceCspStudiesV1ChallengeData",
                    "description": "Contains challenge data if the task type is challenge."
                },
                "completionTime": {
                    "description": "When this was submitted. Set only if the task is completed.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "consentContent": {
                    "$ref": "LifescienceCspStudiesV1ConsentContent",
                    "description": "Contains content associated with a consent task."
                },
                "ehrConnectContent": {
                    "$ref": "LifescienceCspStudiesV1EhrConnectContent",
                    "description": "Contains content for connecting EHR data to an account."
                },
                "eventReportData": {
                    "$ref": "LifescienceCspStudiesV1EventReportData",
                    "description": "Contains event reporting data if the task type is event reporting."
                },
                "generalTaskContent": {
                    "$ref": "LifescienceCspStudiesV1GeneralTaskContent",
                    "description": "Contains content for a general task."
                },
                "idvContent": {
                    "$ref": "LifescienceCspStudiesV1IdvContent",
                    "description": "Contains content associated with an identity verification task."
                },
                "isCompleted": {
                    "description": "Whether the task is completed or not",
                    "type": "boolean"
                },
                "lastSavedTime": {
                    "description": "Last time this task was saved.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "outro": {
                    "$ref": "LifescienceCspStudiesCommonTaskSummaryBufferPage",
                    "description": "Outro page content used to render additional details after a task was\nsubmitted."
                },
                "scheduleLabContent": {
                    "$ref": "LifescienceCspStudiesV1ScheduleLabContent",
                    "description": "Contains content for scheduling a lab visit."
                },
                "sensorDataContent": {
                    "$ref": "LifescienceCspStudiesV1SensorDataTaskCard",
                    "description": "Contains sensor data associated with account."
                },
                "shastaPhotoCaptureContent": {
                    "$ref": "LifescienceCspStudiesV1ShastaPhotoCaptureContent",
                    "description": "Contains content for a Shasta-specific photo capture task."
                },
                "studyEnrollmentContent": {
                    "$ref": "LifescienceCspStudiesV1StudyEnrollmentContent",
                    "description": "Contains content associated with a study enrollment task."
                },
                "surveyContent": {
                    "$ref": "LifescienceCspStudiesV1SurveyContent",
                    "description": "Contains the survey if the task type is a survey."
                },
                "surveyGroup": {
                    "$ref": "LifescienceCspStudiesV1SurveyGroupContent",
                    "description": "Contains a task that contains a group of surveys."
                },
                "thirdPartyLinkContent": {
                    "$ref": "LifescienceCspStudiesV1ThirdPartyLinkTaskCard",
                    "description": "Contains content for linking a CSP account to a third-party account,\ne.g. Medicare."
                },
                "type": {
                    "description": "Type of the task. Note that this field should be consistent with details,\nhowever we provide this as syntactic sugar for client-side code where\noneof support is currently lacking.",
                    "enum": [
                        "TASK_TYPE_UNKNOWN",
                        "TASK_TYPE_SURVEY",
                        "TASK_TYPE_CHALLENGE",
                        "TASK_TYPE_EVENT_REPORT",
                        "TASK_TYPE_CRF",
                        "TASK_TYPE_SURVEY_GROUP",
                        "TASK_TYPE_THIRD_PARTY_LINK",
                        "TASK_TYPE_SENSOR_DATA",
                        "TASK_TYPE_EHR_CONNECT",
                        "TASK_TYPE_IDV",
                        "TASK_TYPE_CONSENT",
                        "TASK_TYPE_SCHEDULE_LAB",
                        "TASK_TYPE_STUDY_ENROLLMENT",
                        "TASK_TYPE_VOICE_LOG",
                        "TASK_TYPE_PHOTO_CAPTURE",
                        "TASK_TYPE_GENERAL",
                        "TASK_TYPE_INFORMATIONAL",
                        "TASK_TYPE_SHASTA_PHOTO_CAPTURE",
                        "TASK_TYPE_VIDEO_CHAT"
                    ],
                    "enumDescriptions": [
                        "",
                        "A survey that a participant needs to complete. Survey tasks can only be\nfetched via GetTask when they are not complete.",
                        "A challenge for the participant. Challenge tasks can be fetched via GetTask\nin any completion status.",
                        "A task for reporting an adverse event. Event report tasks are a\n\"persistent\" task, which is NOT fetchable via GetTask.",
                        "A Case Report Form to be completed by the admin for a participant.",
                        "A group of surveys to be completed by the participant. Survey group tasks\ncan be fetched via GetTask when at least 1 of the surveys in the group is\nnot complete.",
                        "Task for a user to link a third-party account (e.g. Medicare) to their CSP\naccount. Third party link tasks can only be fetched via GetTask when they\nare not complete.",
                        "Task for a user to view their sensor data (e.g. Study Watch). Sensor tasks\ndo not have a concept of \"completion\" and thus can be fetched via GetTask\nas long as they are available.",
                        "A task for connecting health care providers and electronic health records\nto a participant's account. EHR connect tasks can be fetched via GetTask in\nany completion status.",
                        "A task for completing the identity verification. IDV tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task for completing consent. Consent tasks can be fetched via GetTask in\nany completion status.",
                        "A task for scheduling a lab visit. Labs scheduling tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task that allows enrolling in a study. Study enrollment tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task for taking voice log from users. Voice Log tasks can be fetched via\nGetTask when they are not complete.",
                        "A task for taking camera captured photos from  users. Photo capture tasks\ncan be fetched via GetTask when they are not complete.",
                        "A general task type containing a start task and complete task button,\nallowing us to prototype and integration test the work flow independently.",
                        "A task to convey information to the participant without invoking action.",
                        "A task for taking pictures from users for the Shasta study. Note that this\nis distinct from TASK_TYPE_PHOTO_CAPTURE, which is intended to be a more\ngeneral configurable task.",
                        "A task for video conferencing between users. Currently supported only\nin the Shasta study."
                    ],
                    "type": "string"
                },
                "videoChatContent": {
                    "$ref": "LifescienceCspStudiesV1VideoChatContent",
                    "description": "Contains content for a video chat task."
                },
                "voiceLogContent": {
                    "$ref": "LifescienceCspStudiesV1VoiceLogContent",
                    "description": "Contains content associated with a voice log task."
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1TaskOverview": {
            "description": "Detailed information about the task.",
            "id": "LifescienceCspStudiesV1TaskOverview",
            "properties": {
                "appointmentOverview": {
                    "$ref": "LifescienceCspStudiesV1AppointmentOverview",
                    "description": "The overview of a scheduled appointment."
                },
                "compensation": {
                    "description": "Compensation value of completing the task, e.g. 10.",
                    "type": "string"
                },
                "location": {
                    "description": "The location of where the task is taking place, e.g. address, online.",
                    "type": "string"
                },
                "sessionDuration": {
                    "description": "Estimated duration of session of task, e.g. 30-60 minutes.",
                    "type": "string"
                },
                "timeFrame": {
                    "description": "Estimated time frame of the task or study, e.g. Nov 12-14.",
                    "type": "string"
                },
                "userTargeting": {
                    "description": "The user groups being recruited for the task, e.g. heart attack survivors.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1TaskSummary": {
            "description": "The summary of a task, needed to render a task card.\nNext ID: 10",
            "id": "LifescienceCspStudiesV1TaskSummary",
            "properties": {
                "card": {
                    "$ref": "LifescienceCspStudiesV1TaskSummaryCard",
                    "description": "Content used to layout task summary info, e.g. on a home feed."
                },
                "completionStage": {
                    "description": "The stage of completion the task is in.",
                    "enum": [
                        "COMPLETION_STAGE_UNSPECIFIED",
                        "COMPLETION_STAGE_NOT_STARTED",
                        "COMPLETION_STAGE_IN_PROGRESS",
                        "COMPLETION_STAGE_COMPLETED",
                        "COMPLETION_STAGE_UP_TO_DATE"
                    ],
                    "enumDescriptions": [
                        "",
                        "No drafts of this task have been saved yet.",
                        "A saved draft of this task exists. If this is a repeated task, a saved\ninstance of the task exists, but the current instance has not yet been\ncompleted.",
                        "Task is completed.",
                        "Task is up-to-date; it's visible but not actionable, likely because a user\nalready completed the action in the current time window. For example, this\nis used for repeated tasks."
                    ],
                    "type": "string"
                },
                "completionTime": {
                    "description": "When this was submitted. Set only if the task is completed.\nNever set for TASK_TYPE_SURVEY_GROUP, instead refer to\ncard.completion_stage.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "destinationStudy": {
                    "description": "Set for study enrollment surveys. Optional.",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "lastSavedTime": {
                    "description": "Last time this task was saved in milliseconds. Set only if the task is in\nprogress. Never set for TASK_TYPE_SURVEY_GROUP, instead refer to\ncard.progress.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "prefetchedTask": {
                    "$ref": "LifescienceCspStudiesV1TaskWrapper",
                    "description": "Populated if prefetched content for the task is available."
                },
                "study": {
                    "description": "Study used for finding tasks and configuring the study in requests\n(e.g. GetTaskRequest).",
                    "enum": [
                        "STUDY_UNSPECIFIED",
                        "BASELINE",
                        "INTERNAL_DEVELOPMENT",
                        "MYALO_FEASIBILITY",
                        "COPPA_USABILITY",
                        "PPP",
                        "AURORA",
                        "DMI_TT",
                        "MYALO_DOGFOOD",
                        "QA1",
                        "QA2",
                        "QA3",
                        "MYALO_TEST",
                        "CGM_005",
                        "WELLNESS_DOGFOOD",
                        "DMI",
                        "PLATFORM_TEST",
                        "REGISTRY",
                        "ONDUO_VDC",
                        "MYALO_SCALE_IT",
                        "DESIGN_WITH_US",
                        "DUKE_LPA",
                        "HYPNOS_ALPHA2",
                        "SHASTA",
                        "DENALI",
                        "TEST_SANDBOX",
                        "SCIENCE_OF_SLEEP",
                        "TEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "taskId": {
                    "description": "Uniquely identifies this task.",
                    "type": "string"
                },
                "workflowId": {
                    "description": "Name of the workflow that includes this task. This is an empty string if\nthe task is not part of a workflow.\n\nIf a task is in a workflow, then after the client completes the task it\nshould query the API (via ListTaskSummaries, etc) to find the next task to\ncomplete in the same workflow, and if there is one, transition to that task\nright away. If the API returns no other tasks in the workflow, the client\nshould transition back back to the screen that shows all available tasks.\n\nIf a destination_study is provided, it is assumed that subsequent tasks in\nthe workflow can be found in that study.\n\nOptional.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1TaskSummaryCard": {
            "description": "Content used to layout task summary info, e.g. on a home feed.\nNext ID: 14",
            "id": "LifescienceCspStudiesV1TaskSummaryCard",
            "properties": {
                "completionStage": {
                    "description": "The stage of completion the task is in.",
                    "enum": [
                        "COMPLETION_STAGE_UNSPECIFIED",
                        "COMPLETION_STAGE_NOT_STARTED",
                        "COMPLETION_STAGE_IN_PROGRESS",
                        "COMPLETION_STAGE_COMPLETED",
                        "COMPLETION_STAGE_UP_TO_DATE"
                    ],
                    "enumDescriptions": [
                        "",
                        "No drafts of this task have been saved yet.",
                        "A saved draft of this task exists. If this is a repeated task, a saved\ninstance of the task exists, but the current instance has not yet been\ncompleted.",
                        "Task is completed.",
                        "Task is up-to-date; it's visible but not actionable, likely because a user\nalready completed the action in the current time window. For example, this\nis used for repeated tasks."
                    ],
                    "type": "string"
                },
                "content": {
                    "$ref": "LifescienceCspStudiesV1SummaryCardContent",
                    "description": "The content section of the card."
                },
                "header": {
                    "$ref": "LifescienceCspStudiesV1SummaryCardHeader",
                    "description": "The header section of the card."
                },
                "intro": {
                    "$ref": "LifescienceCspStudiesCommonTaskSummaryBufferPage",
                    "description": "Optional content used to render a page with additional details before\njumping into a task."
                },
                "outro": {
                    "$ref": "LifescienceCspStudiesCommonTaskSummaryBufferPage",
                    "description": "Optional content used to render a page with additional details after a\ntask."
                },
                "overview": {
                    "$ref": "LifescienceCspStudiesV1TaskOverview",
                    "description": "Detailed info about the task. Optional; only used for NOT_STARTED stage."
                },
                "progress": {
                    "$ref": "LifescienceCspStudiesCommonTaskProgress",
                    "description": "Progress info about the task. Optional; only used for IN_PROGRESS stage and\nUP_TO_DATE stages. If task is IN_PROGRESS and this is unset, the client\nrenders a hardcoded progress indicator."
                },
                "subtitle": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "The subtitle to display on the card."
                },
                "taskType": {
                    "enum": [
                        "TASK_TYPE_UNKNOWN",
                        "TASK_TYPE_SURVEY",
                        "TASK_TYPE_CHALLENGE",
                        "TASK_TYPE_EVENT_REPORT",
                        "TASK_TYPE_CRF",
                        "TASK_TYPE_SURVEY_GROUP",
                        "TASK_TYPE_THIRD_PARTY_LINK",
                        "TASK_TYPE_SENSOR_DATA",
                        "TASK_TYPE_EHR_CONNECT",
                        "TASK_TYPE_IDV",
                        "TASK_TYPE_CONSENT",
                        "TASK_TYPE_SCHEDULE_LAB",
                        "TASK_TYPE_STUDY_ENROLLMENT",
                        "TASK_TYPE_VOICE_LOG",
                        "TASK_TYPE_PHOTO_CAPTURE",
                        "TASK_TYPE_GENERAL",
                        "TASK_TYPE_INFORMATIONAL",
                        "TASK_TYPE_SHASTA_PHOTO_CAPTURE",
                        "TASK_TYPE_VIDEO_CHAT"
                    ],
                    "enumDescriptions": [
                        "",
                        "A survey that a participant needs to complete. Survey tasks can only be\nfetched via GetTask when they are not complete.",
                        "A challenge for the participant. Challenge tasks can be fetched via GetTask\nin any completion status.",
                        "A task for reporting an adverse event. Event report tasks are a\n\"persistent\" task, which is NOT fetchable via GetTask.",
                        "A Case Report Form to be completed by the admin for a participant.",
                        "A group of surveys to be completed by the participant. Survey group tasks\ncan be fetched via GetTask when at least 1 of the surveys in the group is\nnot complete.",
                        "Task for a user to link a third-party account (e.g. Medicare) to their CSP\naccount. Third party link tasks can only be fetched via GetTask when they\nare not complete.",
                        "Task for a user to view their sensor data (e.g. Study Watch). Sensor tasks\ndo not have a concept of \"completion\" and thus can be fetched via GetTask\nas long as they are available.",
                        "A task for connecting health care providers and electronic health records\nto a participant's account. EHR connect tasks can be fetched via GetTask in\nany completion status.",
                        "A task for completing the identity verification. IDV tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task for completing consent. Consent tasks can be fetched via GetTask in\nany completion status.",
                        "A task for scheduling a lab visit. Labs scheduling tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task that allows enrolling in a study. Study enrollment tasks can only be\nfetched via GetTask when they are not complete.",
                        "A task for taking voice log from users. Voice Log tasks can be fetched via\nGetTask when they are not complete.",
                        "A task for taking camera captured photos from  users. Photo capture tasks\ncan be fetched via GetTask when they are not complete.",
                        "A general task type containing a start task and complete task button,\nallowing us to prototype and integration test the work flow independently.",
                        "A task to convey information to the participant without invoking action.",
                        "A task for taking pictures from users for the Shasta study. Note that this\nis distinct from TASK_TYPE_PHOTO_CAPTURE, which is intended to be a more\ngeneral configurable task.",
                        "A task for video conferencing between users. Currently supported only\nin the Shasta study."
                    ],
                    "type": "string"
                },
                "title": {
                    "description": "The title to display on the card.",
                    "type": "string"
                },
                "visualWeight": {
                    "description": "Describes the visual weight of the task.",
                    "enum": [
                        "TASK_VISUAL_WEIGHT_UNKNOWN",
                        "TASK_VISUAL_WEIGHT_EMPHASIZE"
                    ],
                    "enumDescriptions": [
                        "",
                        "An increase of the visual weight so the task stands out above others."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1TaskWrapper": {
            "description": "The metadata and content of a task.\nNext ID: 8",
            "id": "LifescienceCspStudiesV1TaskWrapper",
            "properties": {
                "consistencyToken": {
                    "description": "Consistency token that should be set on an InsertEventRequest to save an\nevent related to this task, to avoid potential write conflicts with other\nclients.\n\nNOTE: For survey groups use the consistency token in the SurveyGroupEntry,\nas each survey in the group is independent and will submit its own events.",
                    "type": "string"
                },
                "content": {
                    "$ref": "LifescienceCspStudiesV1TaskContent",
                    "description": "Task content."
                },
                "encodedTaskToken": {
                    "description": "Blackbox data that the client is responsible for passing back to the\nserver. In practice, this field is set to a serialized TaskToken proto.",
                    "type": "string"
                },
                "step": {
                    "description": "The ordinal of the step in the task workflow.",
                    "format": "int32",
                    "type": "integer"
                },
                "taskId": {
                    "description": "Uniquely identifies this task. Clients should use this to refer to the task\nwhen saving an event for it.",
                    "type": "string"
                },
                "taskOccurrenceIndex": {
                    "description": "The occurrence number for a recurring task (1-indexed). Set to zero for\nnon-recurrent tasks.\nSee: cs/symbol:lifescience.csp.studies.storage.TaskId.occurrence_index",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ThirdPartyLink": {
            "description": "Link to a third-party account (e.g. Medicare).",
            "id": "LifescienceCspStudiesV1ThirdPartyLink",
            "properties": {
                "status": {
                    "description": "The status of the third-party link.\nRequired.",
                    "enum": [
                        "THIRD_PARTY_LINK_STATUS_UNSPECIFIED",
                        "THIRD_PARTY_LINK_STATUS_STARTED",
                        "THIRD_PARTY_LINK_STATUS_ACTIVE",
                        "THIRD_PARTY_LINK_STATUS_REVOKED",
                        "THIRD_PARTY_LINK_STATUS_ABANDONED",
                        "THIRD_PARTY_LINK_STATUS_OPTED_OUT",
                        "THIRD_PARTY_LINK_STATUS_EXPIRED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user started the OAuth flow to link the account.",
                        "The user successfully completed the third-party link, and we are actively\nable to fetch data from the third party.",
                        "Access to the user's third-party data has been explicitly revoked in CSP,\nand we are no longer able to fetch data from the third party.",
                        "We're not quite sure why, but we no longer seem to be able to fetch data\nfrom the third party, so we've given up on it.",
                        "The user was asked to link their third-party account, but explicitly opted\nout.",
                        "Access to the user's third-party data has expired."
                    ],
                    "type": "string"
                },
                "thirdPartyOauthTokenId": {
                    "description": "'token_id' from a completed OAuth flow in\nlifescience.thirdpartyoauth.ThirdPartyOAuthService\nOptional. Only relevant for THIRD_PARTY_LINK_STATUS_ACTIVE.",
                    "type": "string"
                },
                "thirdPartyServiceId": {
                    "description": "Arbitrary ID of the third-party service, used to distinguish from other\nthird-party services in CSP, as well as in ThirdPartyOAuthService and\nFhirSyncService.\nRequired.",
                    "type": "string"
                },
                "timeMillis": {
                    "description": "When status was updated.\nRequired.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1ThirdPartyLinkTaskCard": {
            "description": "Content for a task list card asking a user to link a third-party account\n(e.g. Medicare) to their CSP account.",
            "id": "LifescienceCspStudiesV1ThirdPartyLinkTaskCard",
            "properties": {
                "description": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "Additional text content for the card (i18n)."
                },
                "subtitle": {
                    "description": "Subtitle text for the card (i18n).",
                    "type": "string"
                },
                "thirdPartyServiceId": {
                    "description": "Arbitrary ID of the third-party service, used to distinguish from other\nthird-party services in CSP, as well as in ThirdPartyOAuthService and\nFhirSyncService.",
                    "type": "string"
                },
                "title": {
                    "description": "Title text for the card (i18n).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1VideoChatContent": {
            "description": "Content for a Video Chat Task.",
            "id": "LifescienceCspStudiesV1VideoChatContent",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1VoiceLogContent": {
            "description": "Content for a task list card asking a user to do a voice log.",
            "id": "LifescienceCspStudiesV1VoiceLogContent",
            "properties": {
                "maxTime": {
                    "description": "Max time allowed for the voice log. Unit is seconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "minTime": {
                    "description": "Min time allowed for the voice log. Unit is seconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "passage": {
                    "$ref": "WebutilHtmlTypesSafeHtmlProto",
                    "description": "The passage to read for the voice log, e.g. Gettysburg Address (i18n).\nOptional."
                },
                "prompt": {
                    "description": "Prompt of the voice log, e.g. \"What is your favourite food?\" (i18n).",
                    "type": "string"
                },
                "subtitle": {
                    "description": "Subtitle text for the card (i18n).",
                    "type": "string"
                },
                "title": {
                    "description": "Title text for the card (i18n).",
                    "type": "string"
                },
                "voiceLogId": {
                    "$ref": "LifescienceCspStudiesCommonVoiceLogId",
                    "description": "Unique identifier"
                }
            },
            "type": "object"
        },
        "LifescienceCspStudiesV1WriteApiFooter": {
            "id": "LifescienceCspStudiesV1WriteApiFooter",
            "properties": {},
            "type": "object"
        },
        "LifescienceCspStudiesV1WriteApiHeader": {
            "id": "LifescienceCspStudiesV1WriteApiHeader",
            "properties": {
                "clientVersion": {
                    "$ref": "LifescienceCspCommonClientVersion",
                    "description": "Set by mobile clients to determine whether an update is needed."
                },
                "languageCode": {
                    "description": "Language or locale code requested by client.\nAs defined by BCP 47, e.g. \"en\" or \"en-US\".\nSee http://google3/i18n/identifiers/tools/language_code_constants.txt\nLanguage will not necessarily be honored by the server. Server responses\nwill either be in the requested language or English.\n\nNOTE: This is not used in practice by standard boq web clients, which\ninstead propagate the language code in the stubby side channel via\ngoogle.rpc.context.OriginContext,\nsent here:\nhttp://google3/java/com/google/apps/framework/sidechannel/UserDataPropagationModule.java?l=280&rcl=174819156\nand pulled out here:\nhttp://google3/java/com/google/apps/framework/request/impl/LanguageCodeStringModule.java?l=74&rcl=157108716",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RpcAddressData": {
            "description": "Protocol representation of the address data for use in the Fava address\nwidget. The fields defined in this protocol buffer are designed to represent\nboth high- and low- level address components.\n\nHigh-level fields mirror those used in AddressData.java and are based on the\nOASIS standard, so should roughly correspond to fields in\nlocation/country/postaladdress.proto.\n\nLow-level fields mirror Geo/Oyster address fields, as defined in either\ngeostore/base/proto/addresscomponent.proto or\ngeostore/base/proto/feature.proto\n\nJSPB protocol buffers require sub-messages to be defined as nested types.\n\nSee: http://www.oasis-open.org/committees/ciq/download.shtml\nSee: java/com/google/gwt/corp/address/common/AddressData.java\n\nA GWS counterpart of this proto for use by GMM, Tactile and LU has been\ndefined at:\n  cs/symbol:maps_tactile.shared.address_data_feedback.SemiStructuredAddress\nAny changes made to this proto may require corresponding changes in GWS in\norder to properly convert between these two variations. Please note, even\nwith proper converters in place, it's possible that older GWS clients (ie old\nversion of GMM) may not populate newly added fields.\n\nWARNING: While this protocol buffer is visible to users and instances of it\ncan be created and passed around in user code, the semantics of the fields it\ncontains are completely private to the address widgets and associated\nconversion utilities and MAY CHANGE AT ANY TIME. Code relying on specific\nfields within AddressData is subject to being broken without warning.\nThis protocol representation is unsuitable for any form of persistence.\n",
            "id": "RpcAddressData",
            "properties": {
                "addressLine": {
                    "description": "The following address lines represent the most specific part of any\naddress. If low-level address line components are present then this should\nbe empty, unless LowLevelComponentType.ADDRESS_LINE is expected for this\ncountry. This should be rare since we only do it when addresses in this\ncountry cannot always be represented in a structured way, e.g. in Kyoto.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "administrativeArea": {
                    "description": "Top-level administrative subdivision of this country.",
                    "type": "string"
                },
                "dependentLocality": {
                    "description": "Dependent locality or sublocality. Used for UK dependent localities, or\nneighborhoods or boroughs in other locations. If low-level dependent\nlocality components are present then this shouldn't be set.",
                    "type": "string"
                },
                "languageCode": {
                    "description": "Language code of the address. Should be in BCP 47 format.",
                    "type": "string"
                },
                "locality": {
                    "description": "Generally refers to the city/town portion of an address. If low-level\nlocality components are present then this shouldn't be set.",
                    "type": "string"
                },
                "lowLevelComponent": {
                    "description": "Low-level address components that replace address_line. Typically these are\nonly present if address_line is empty: however in some rare cases an\naddress line is still needed in addition to these. If both\nlow_level_component and address_line are present, then they should\nrepresent different parts of the address and both will be shown to the user\nfor editing.",
                    "items": {
                        "$ref": "RpcAddressDataLowLevelAddressComponent"
                    },
                    "type": "array"
                },
                "lowLevelDependentLocalityComponent": {
                    "description": "Low-level address components that replace dependent_locality, only present\nif dependent_locality is not set.",
                    "items": {
                        "$ref": "RpcAddressDataLowLevelAddressComponent"
                    },
                    "type": "array"
                },
                "lowLevelLocalityComponent": {
                    "description": "Low-level address components that replace locality, only present if\nlocality is not set.",
                    "items": {
                        "$ref": "RpcAddressDataLowLevelAddressComponent"
                    },
                    "type": "array"
                },
                "organization": {
                    "description": "Name of organization or firm.",
                    "type": "string"
                },
                "postalCode": {
                    "description": "Values are frequently alphanumeric.",
                    "type": "string"
                },
                "recipient": {
                    "description": "Name of recipient or contact person. Not present in xAL.",
                    "type": "string"
                },
                "regionCode": {
                    "description": "CLDR (Common Locale Data Repository) region code (http://goto/iii).",
                    "type": "string"
                },
                "sortingCode": {
                    "description": "This corresponds to the SortingCode sub-element of the xAL\nPostalServiceElements element. Use is very country-specific. Where it is\nused, the value is either a string like \"CEDEX\", optionally followed by a\nnumber (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector\ncode\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office\nindicator\" (e.g. C\u00f4te d'Ivoire).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RpcAddressDataLowLevelAddressComponent": {
            "description": "Protocol representation of lower (street/premise) level address fields.\nThese fields are potentially country-specific and have a relatively direct\nmapping to fields in the Geo/Oyster address protocol buffers. Address\nfields declared via this mechanism should only appear in \"low level\" cards\nof the structured address widget and never in the semi-structured address\nwidget.\n\nSee also: java/com/google/gwt/corp/address/common/AddressField.java",
            "id": "RpcAddressDataLowLevelAddressComponent",
            "properties": {
                "id": {
                    "description": "The unique address field ID of this component. The enumeration of address\nfield IDs is defined by address_field.js and needs to be mirrored in any\ncode converting to/from other representations. While ordering of IDs may\nbe important for converting an AddressData instance, it is not required\nthat users of this protocol buffer order the fields in any specific way.\nIt is expected that IDs of low level components will not be repeated (and\nmust not contain any high level field IDs).",
                    "type": "string"
                },
                "value": {
                    "description": "The value(s) of this address component. Often address components will\nonly have a single value (house number) and different components will be\nused for other values (eg, building number in Czech republic), but it is\nstill possible for a single component to have multiple values (eg,\nmultiple floors in a shopping center). The precise meaning of each value\nand how it is converted to/from other representations should be\ncompletely opaque to anyone outside the address widget or associated\nconversion utilities.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WebutilHtmlTypesSafeHtmlProto": {
            "description": "IMPORTANT: It is unsafe to accept this message from an untrusted source,\nsince it's trivial for an attacker to forge serialized messages that\ndon't fulfill the type's safety contract -- for example, it could contain\nattacker controlled script. A system which receives a SafeHtmlProto\nimplicitly trusts the producer of the SafeHtmlProto. So, it's generally safe\nto return this message in RPC responses, but generally unsafe to accept it\nin RPC requests.",
            "id": "WebutilHtmlTypesSafeHtmlProto",
            "properties": {
                "privateDoNotAccessOrElseSafeHtmlWrappedValue": {
                    "description": "IMPORTANT: Never set or read this field, even from tests, it is private.\nSee documentation at the top of .proto file for programming language\npackages with which to create or read this message.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Verily Lifescience Studies Private API (Autopush)",
    "version": "v1",
    "version_module": true
}