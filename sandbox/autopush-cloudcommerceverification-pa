{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloudmarketplace": {
                    "description": "Manage your solutions listed on the Cloud Marketplace"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://autopush-cloudcommerceverification-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Cloud Commerce Verification Service",
    "description": "Internal facing API for the Cloud Commerce Verification Service.",
    "discoveryVersion": "v1",
    "documentationLink": "http://go/cloud-commerce",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "autopush_cloudcommerceverification_pa_sandbox:v0",
    "kind": "discovery#restDescription",
    "name": "autopush_cloudcommerceverification_pa_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "v0": {
            "methods": {
                "verificationentity": {
                    "description": "Verifies the user-specified entities. Returns a longrunning Operation\ncontaining the verification ID, in the form of\n\"verifications/{entity_name}/operations/{verification_id}. The verification\nID can be used to get corresponding verification report. If the Operation\nhas successfully finished (i.e. Operation.done is true and Operation.error\nis not set), the Operation.response field will be populated with a\nVerificationReport message.",
                    "flatPath": "v0/verificationentity",
                    "httpMethod": "POST",
                    "id": "autopush_cloudcommerceverification_pa_sandbox.verificationentity",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v0/verificationentity",
                    "request": {
                        "$ref": "GoogleCloudCommerceVerificationV0VerifyEntityRequest"
                    },
                    "response": {
                        "$ref": "GoogleLongrunningOperation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloudmarketplace"
                    ]
                }
            }
        },
        "verificationreports": {
            "methods": {
                "get": {
                    "description": "Retrieves a verification report. Returns NOT_FOUND if the report doesn't\nexist.",
                    "flatPath": "v0/verificationreports/{verificationreportsId}",
                    "httpMethod": "GET",
                    "id": "autopush_cloudcommerceverification_pa_sandbox.verificationreports.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The resource name of the verification report.\nReport names have the form `verificationreports/{report_id}`.\nRequired.",
                            "location": "path",
                            "pattern": "^verificationreports/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v0/{+name}",
                    "response": {
                        "$ref": "GoogleCloudCommerceVerificationV0VerificationReport"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloudmarketplace"
                    ]
                }
            }
        },
        "verifications": {
            "resources": {
                "operations": {
                    "methods": {
                        "cancel": {
                            "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
                            "flatPath": "v0/verifications/{verificationsId}/operations/{operationsId}:cancel",
                            "httpMethod": "POST",
                            "id": "autopush_cloudcommerceverification_pa_sandbox.verifications.operations.cancel",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the operation resource to be cancelled.",
                                    "location": "path",
                                    "pattern": "^verifications/[^/]+/operations/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v0/{+name}:cancel",
                            "request": {
                                "$ref": "GoogleLongrunningCancelOperationRequest"
                            },
                            "response": {
                                "$ref": "GoogleProtobufEmpty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloudmarketplace"
                            ]
                        },
                        "delete": {
                            "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
                            "flatPath": "v0/verifications/{verificationsId}/operations/{operationsId}",
                            "httpMethod": "DELETE",
                            "id": "autopush_cloudcommerceverification_pa_sandbox.verifications.operations.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the operation resource to be deleted.",
                                    "location": "path",
                                    "pattern": "^verifications/[^/]+/operations/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v0/{+name}",
                            "response": {
                                "$ref": "GoogleProtobufEmpty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloudmarketplace"
                            ]
                        },
                        "get": {
                            "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                            "flatPath": "v0/verifications/{verificationsId}/operations/{operationsId}",
                            "httpMethod": "GET",
                            "id": "autopush_cloudcommerceverification_pa_sandbox.verifications.operations.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the operation resource.",
                                    "location": "path",
                                    "pattern": "^verifications/[^/]+/operations/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v0/{+name}",
                            "response": {
                                "$ref": "GoogleLongrunningOperation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloudmarketplace"
                            ]
                        },
                        "list": {
                            "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
                            "flatPath": "v0/verifications/{verificationsId}/operations",
                            "httpMethod": "GET",
                            "id": "autopush_cloudcommerceverification_pa_sandbox.verifications.operations.list",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "filter": {
                                    "description": "The standard list filter.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the operation's parent resource.",
                                    "location": "path",
                                    "pattern": "^verifications/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "The standard list page size.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The standard list page token.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v0/{+name}/operations",
                            "response": {
                                "$ref": "GoogleLongrunningListOperationsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloudmarketplace"
                            ]
                        }
                    }
                }
            }
        }
    },
    "revision": "20190913",
    "rootUrl": "https://autopush-cloudcommerceverification-pa.sandbox.googleapis.com/",
    "schemas": {
        "GoogleCloudCommerceVerificationV0CheckImageReport": {
            "description": "Report from checking entity's Image.",
            "id": "GoogleCloudCommerceVerificationV0CheckImageReport",
            "properties": {
                "createTime": {
                    "description": "The image's creation time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "imageState": {
                    "description": "State of the image.",
                    "enum": [
                        "IMAGE_STATE_UNSPECIFIED",
                        "PENDING",
                        "FAILED",
                        "READY",
                        "NOT_FOUND",
                        "PERMISSION_DENIED",
                        "MISSING_LICENSES"
                    ],
                    "enumDescriptions": [
                        "Unspecified image state.",
                        "Image has status \"Pending\".",
                        "Image has status \"Failed\".",
                        "Image has status \"Ready\".",
                        "Image not found.",
                        "Permission denied when getting the image.",
                        "Licenses associated with the image are missing."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0CheckLicenseInfoReport": {
            "description": "Report of checking licenses info task, one entity can have multiple licenses.",
            "id": "GoogleCloudCommerceVerificationV0CheckLicenseInfoReport",
            "properties": {
                "licenseInfo": {
                    "description": "The license info for each license.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0LicenseInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ClusterConfiguration": {
            "description": "Minimum requirements for the cluster config to make this test reproducible.",
            "id": "GoogleCloudCommerceVerificationV0ClusterConfiguration",
            "properties": {
                "clusterType": {
                    "enum": [
                        "CLUSTER_TYPE_UNSPECIFIED",
                        "GKE",
                        "ON_PREM"
                    ],
                    "enumDescriptions": [
                        "",
                        "Cluster is hosted in GKE.",
                        "Cluster is hosted outside GCP, on some other premises."
                    ],
                    "type": "string"
                },
                "k8sVersion": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ContainerImage": {
            "description": "Placeholder for minimum information required to validate one Container Image.\nValidations to perform include: check package vulnerability.",
            "id": "GoogleCloudCommerceVerificationV0ContainerImage",
            "properties": {
                "gcrRepositoryName": {
                    "description": "GCR repository containing container images associated with this entity.\nFor example, \"gcr.io/partner-foo/software-bar\".\nRequired.",
                    "type": "string"
                },
                "manifestDigest": {
                    "description": "The manifest digest associated with this container image.\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ContainerImages": {
            "description": "Placeholder for minimum information required to validate VerificationEntity\nwith one or more Container Images. Validations to perform include:\ncheck package vulnerability.",
            "id": "GoogleCloudCommerceVerificationV0ContainerImages",
            "properties": {
                "images": {
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0ContainerImage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0DeploymentCreationReport": {
            "description": "Report from creating deployment.",
            "id": "GoogleCloudCommerceVerificationV0DeploymentCreationReport",
            "properties": {
                "deploymentOperation": {
                    "description": "A string/json representation of the Deployment Operation returned from\nDeployment Manager. Caller can parse the json into Operation as defined in\ncom.google.api.services.deploymentmanager.v2.model.Operation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0DeploymentManifest": {
            "description": "Structured information extracted from Deployment Manager's deployment\nmanifest.",
            "id": "GoogleCloudCommerceVerificationV0DeploymentManifest",
            "properties": {
                "resources": {
                    "description": "Resources extracted from the manifest.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0Resource"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ExtractDeploymentManifestReport": {
            "description": "Report from extracting manifest from deployment.",
            "id": "GoogleCloudCommerceVerificationV0ExtractDeploymentManifestReport",
            "properties": {
                "deploymentManifest": {
                    "$ref": "GoogleCloudCommerceVerificationV0DeploymentManifest",
                    "description": "Manifest extracted from deployment."
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ExtractImageStateReport": {
            "description": "Report from extracting one Image state.",
            "id": "GoogleCloudCommerceVerificationV0ExtractImageStateReport",
            "properties": {
                "createTime": {
                    "description": "The image's creation time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "imageDeprecationStatus": {
                    "$ref": "GoogleCloudCommerceVerificationV0ImageDeprecationStatus",
                    "description": "The status of image deprecation."
                },
                "imageName": {
                    "description": "The name of the image.",
                    "type": "string"
                },
                "imageState": {
                    "description": "The state of the image.",
                    "enum": [
                        "IMAGE_STATE_UNSPECIFIED",
                        "PENDING",
                        "FAILED",
                        "READY",
                        "NOT_FOUND",
                        "PERMISSION_DENIED",
                        "MISSING_LICENSES"
                    ],
                    "enumDescriptions": [
                        "Unspecified image state.",
                        "Image has status \"Pending\".",
                        "Image has status \"Failed\".",
                        "Image has status \"Ready\".",
                        "Image not found.",
                        "Permission denied when getting the image.",
                        "Licenses associated with the image are missing."
                    ],
                    "type": "string"
                },
                "licenseNames": {
                    "description": "The name of licenses associated with this image.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "projectId": {
                    "description": "The project ID of image.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ExtractImagesStatesReport": {
            "description": "Report from extracting entity's Images states. One entity may have multiple\nimages.",
            "id": "GoogleCloudCommerceVerificationV0ExtractImagesStatesReport",
            "properties": {
                "extractImageStateReport": {
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0ExtractImageStateReport"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0FacetBinding": {
            "description": "Facet binding is an annotation in solution marketing info, which\nrepresents the binding relationship between solutions and facet values. The\nrelationship is multiple to multiple.",
            "id": "GoogleCloudCommerceVerificationV0FacetBinding",
            "properties": {
                "facetId": {
                    "description": "Required. The facet ID of the binding.",
                    "type": "string"
                },
                "facetValueId": {
                    "description": "Required. The facet value ID of the binding.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0File": {
            "description": "File represents the template, schema and display file which define the\ndeployment, configuration options, and display metadata.",
            "id": "GoogleCloudCommerceVerificationV0File",
            "properties": {
                "content": {
                    "description": "The content of file.",
                    "type": "string"
                },
                "path": {
                    "description": "The path of file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0GceAccelerator": {
            "description": "A Google Compute Engine Accelerator resource.",
            "id": "GoogleCloudCommerceVerificationV0GceAccelerator",
            "properties": {
                "count": {
                    "description": "Count of accelerators.",
                    "format": "int32",
                    "type": "integer"
                },
                "gceInstanceName": {
                    "description": "The GCE Instance with which this accelerator is associated.",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_NVIDIA_K80_GPUS",
                        "TYPE_NVIDIA_P100_GPUS",
                        "TYPE_NVIDIA_V100_GPUS",
                        "TYPE_NVIDIA_P100_VWS_GPUS",
                        "TYPE_NVIDIA_P4_VWS_GPUS",
                        "TYPE_NVIDIA_P4_GPUS",
                        "TYPE_NVIDIA_T4_GPUS",
                        "TYPE_NVIDIA_T4_VWS_GPUS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "zone": {
                    "description": "GCE zone for this accelerator.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0GceDisk": {
            "description": "A Google Compute Engine disk resource.",
            "id": "GoogleCloudCommerceVerificationV0GceDisk",
            "properties": {
                "boot": {
                    "description": "Whether this is the boot disk for a VM.",
                    "type": "boolean"
                },
                "gceInstanceName": {
                    "description": "The GCE Instance that this disk is associated with, if any.",
                    "type": "string"
                },
                "sizeGb": {
                    "description": "Disk size in GB.",
                    "format": "int32",
                    "type": "integer"
                },
                "sourceImage": {
                    "description": "Source image (full resource URL) for the disk, if any.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the GceDisk.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "PD_STANDARD",
                        "PD_SSD",
                        "LOCAL_SSD"
                    ],
                    "enumDescriptions": [
                        "Sentinel value. Do not use.",
                        "Persistent Disk, Standard",
                        "Persistent Disk, SSD",
                        "Local SSD"
                    ],
                    "type": "string"
                },
                "zone": {
                    "description": "GCE zone for the disk.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0GceInstance": {
            "description": "A Google Compute Engine Instance resource.",
            "id": "GoogleCloudCommerceVerificationV0GceInstance",
            "properties": {
                "gceLicenseNames": {
                    "description": "The GCE Licenses attached to this instance's boot image, if any.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hasStartupScript": {
                    "description": "True if the VM instance has a startup script.",
                    "type": "boolean"
                },
                "isSharedCpu": {
                    "description": "True if the machine uses a shared core.",
                    "type": "boolean"
                },
                "machineTypeCpu": {
                    "description": "The number of CPUs, as defined by the standard or custom machine type.",
                    "format": "int32",
                    "type": "integer"
                },
                "machineTypeMemoryMb": {
                    "description": "The ram size in MB, as defined by the standard or custom machine type.",
                    "format": "int32",
                    "type": "integer"
                },
                "standardMachineType": {
                    "description": "A standard machine type string e.g. n1-standard-1",
                    "type": "string"
                },
                "zone": {
                    "description": "GCE zone for the instance.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0GceLicense": {
            "description": "A Google Compute Engine license resource. This resource is not created\nduring the deployment or directly listed in the manifest. They are\ngenerated based on GCE instance boot disk images present in the manifest.",
            "id": "GoogleCloudCommerceVerificationV0GceLicense",
            "properties": {
                "image": {
                    "description": "The GCE image (full resource URL) that this license is associated with.",
                    "type": "string"
                },
                "licenseId": {
                    "description": "License ID (e.g.: \"1000203\").",
                    "type": "string"
                },
                "licenseName": {
                    "description": "License name (e.g.: \"debian-7-wheezy\").",
                    "type": "string"
                },
                "licenseProjectName": {
                    "description": "License project name (e.g.: \"debian-cloud\").",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ImageDeprecationStatus": {
            "description": "The deprecation status associated with the image.\nIn Compute API, DeprecationStatus is a proto object has structure defined in:\nhttp://google3/third_party/golang/google_api/compute/v1/compute-api.json?l=2803&rcl=183327178\nIt contains lots of information related to resources deprecation, here we\nhave the similar structure.",
            "id": "GoogleCloudCommerceVerificationV0ImageDeprecationStatus",
            "properties": {
                "imageDeprecationState": {
                    "description": "In Compute API, a deprecated Image may have different deprecation state.",
                    "enum": [
                        "IMAGE_DEPRECATION_STATE_UNSPECIFIED",
                        "DEPRECATED",
                        "DELETED",
                        "OBSOLETED"
                    ],
                    "enumDescriptions": [
                        "Unspecified image deprecation state.",
                        "Image deprecated and has state DEPRECATED.",
                        "Image deprecated and has state DELETED.",
                        "Image deprecated and has state OBSOLETED."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ImageWithOccurrences": {
            "description": "Analysis occurrences found on one image.",
            "id": "GoogleCloudCommerceVerificationV0ImageWithOccurrences",
            "properties": {
                "imageName": {
                    "description": "The name of image.",
                    "type": "string"
                },
                "occurrences": {
                    "description": "Analysis occurrences found on the image in project_id with image_name.\nDeprecated.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Occurrence"
                    },
                    "type": "array"
                },
                "projectId": {
                    "description": "The id of the GCP Project under which this Image is registered.",
                    "type": "string"
                },
                "truePositiveOccurrences": {
                    "description": "True positive analysis occurrences found on the image in project_id with\nimage_name.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Occurrence"
                    },
                    "type": "array"
                },
                "truePositiveOccurrencesV2": {
                    "description": "True positive analysis occurrences found on the image in project_id with\nimage_name.",
                    "items": {
                        "$ref": "GrafeasV1beta1Occurrence"
                    },
                    "type": "array"
                },
                "unknownOccurrences": {
                    "description": "Occurrences found on the image in project_id with image_name with unknown\ntriage result.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Occurrence"
                    },
                    "type": "array"
                },
                "unknownOccurrencesV2": {
                    "description": "Occurrences found on the image in project_id with image_name with unknown\ntriage result.",
                    "items": {
                        "$ref": "GrafeasV1beta1Occurrence"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0K8sAppFunctionalityTestReport": {
            "description": "Report of k8s app functionality test.",
            "id": "GoogleCloudCommerceVerificationV0K8sAppFunctionalityTestReport",
            "properties": {
                "cloudBuildUrl": {
                    "description": "Url to the cloud build in GCP UI.",
                    "type": "string"
                },
                "clusterConfiguration": {
                    "$ref": "GoogleCloudCommerceVerificationV0ClusterConfiguration"
                },
                "clusterUrl": {
                    "description": "Url to the cluster in GKE UI. This is exposed to help troubleshooting.",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "Error message from executing the task, if any.",
                    "type": "string"
                },
                "result": {
                    "description": "Human readable brief summary of the task execution result.",
                    "type": "string"
                },
                "steps": {
                    "description": "Executed steps in this report.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0Step"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0K8sAppFunctionalityTestReports": {
            "description": "Reports of k8s app functionality test.",
            "id": "GoogleCloudCommerceVerificationV0K8sAppFunctionalityTestReports",
            "properties": {
                "reports": {
                    "description": "Reports of k8s app functionality test.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0K8sAppFunctionalityTestReport"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0K8sApplication": {
            "description": "Placeholder for minimum information required to validate a kubernetes\napplication.",
            "id": "GoogleCloudCommerceVerificationV0K8sApplication",
            "properties": {
                "deployerConfigSchema": {
                    "description": "The schema for providing parameters to a kubernetes application.",
                    "type": "string"
                },
                "facetBindings": {
                    "description": "The facet bindings associated with the application.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0FacetBinding"
                    },
                    "type": "array"
                },
                "images": {
                    "description": "Images of a kubernetes application.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0K8sImage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0K8sImage": {
            "description": "Info of an image in a Kubernetes app.",
            "id": "GoogleCloudCommerceVerificationV0K8sImage",
            "properties": {
                "deployerConfigSchemaKey": {
                    "description": "The key identifying this image in the deployer_config_schema.\nRequired.",
                    "type": "string"
                },
                "fullImagePath": {
                    "description": "Full image path in gcr repo.",
                    "type": "string"
                },
                "imageDigest": {
                    "description": "The image digest.",
                    "type": "string"
                },
                "imageType": {
                    "description": "Image type.",
                    "enum": [
                        "K8S_IMAGE_TYPE_UNSPECIFIED",
                        "DEPLOYMENT_IMAGE",
                        "PRIMARY_APP_IMAGE",
                        "APP_IMAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0LicenseInfo": {
            "description": "License info of single license.",
            "id": "GoogleCloudCommerceVerificationV0LicenseInfo",
            "properties": {
                "licenseId": {
                    "description": "Id of license.",
                    "type": "string"
                },
                "licenseState": {
                    "description": "The state of license.",
                    "enum": [
                        "LICENSE_STATE_UNSPECIFIED",
                        "HEALTHY",
                        "LICENSE_MISSING",
                        "VALID_PRICE_MISSING"
                    ],
                    "enumDescriptions": [
                        "Unspecified license state.",
                        "License is healthy, no issue found for this license.",
                        "License is missing in Catalog Api.",
                        "License doesn't have any valid price. Each license requires to have at\nleast one valid price."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0NetworkVulnerabilityScanReport": {
            "description": "Report from scanning network vulnerabilities.",
            "id": "GoogleCloudCommerceVerificationV0NetworkVulnerabilityScanReport",
            "properties": {},
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0OsImage": {
            "description": "Placeholder for minimum information required to validate OS Image based\nVerificationEntity. Validations to perform include: check image state.",
            "id": "GoogleCloudCommerceVerificationV0OsImage",
            "properties": {
                "imageName": {
                    "description": "The GCE Image name to deploy.\nImage name must match: [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?\nThis pattern is mandated by the GCE Compute API.\nRequired.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The id of the GCP Project under which this Image is registered for this\nentity.\nThe field must match the following regular expression:\n   (?:\n      (?:[-a-z0-9]{1,63}\\.)*\n      (?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?\n   (?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0PackageVulnerabilityScanReport": {
            "description": "Report from scanning package vulnerabilities.",
            "id": "GoogleCloudCommerceVerificationV0PackageVulnerabilityScanReport",
            "properties": {
                "occurrences": {
                    "description": "Analysis occurrences found on the entity's images.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0ImageWithOccurrences"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0PackagedDeployment": {
            "description": "Minimum information required to validate Packaged Deployment based\nVerificationEntity. Validations to perform include: create deployment, check\nimage state, check deployment manifest, check price info associated with the\nimage's licenses, and check package vulnerability.",
            "id": "GoogleCloudCommerceVerificationV0PackagedDeployment",
            "properties": {
                "billingServiceName": {
                    "description": "Service name in Google Cloud Billing.\nThis is necessary to get the latest pricing information for the entity.\nThis is expected to be of the form 'services/{service_id}'.\nRequired.",
                    "type": "string"
                },
                "compositeTypeName": {
                    "description": "The name of the Type Registry composite type to use for deploying this\nentity.\nComposite type will be replacing solution package for deployment, thus will\nbe the only format supported by Verification Service.\nRequired.",
                    "type": "string"
                },
                "files": {
                    "description": "The collection of templates, schema and display files used to create\ndeployment via DM.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0File"
                    },
                    "type": "array"
                },
                "imageName": {
                    "description": "The GCE Image name to deploy.\nImage name must match: [a-z](?:[-a-z0-9]{0,61}[a-z0-9])?\nThis pattern is mandated by the GCE Compute API.\nRequired.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The id of the GCP Project under which Image is registered for this\nentity.\nThe field must match the following regular expression:\n   (?:\n      (?:[-a-z0-9]{1,63}\\.)*\n      (?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?):)?\n   (?:[0-9]{1,19}|(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?))\nRequired.",
                    "type": "string"
                },
                "skipCheckNetworkVulnerability": {
                    "description": "Flag indicates if task 'check network vulnerability' needs to be skipped.\nChecking network vulnerability takes long time to finish, clients who\ndon't care about it and want to get verification result sooner can\nset it to true.",
                    "type": "boolean"
                },
                "targetConfiguration": {
                    "description": "The json representation of target configuration that deployment manager\nuses to create deployment.\nhttp://google3/third_party/golang/google_api/deploymentmanager/v2/deploymentmanager-api.json?l=987&rcl=183327178.\nClient must serialize target configuration object to json correctly,\nfor example, client can use Gson to get json object, using \"toString()\"\nmethod would not work.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0Resource": {
            "description": "A resource created by DM, or in some cases (e.g. GceLicense) a virtual\nresource derived from the manifest.",
            "id": "GoogleCloudCommerceVerificationV0Resource",
            "properties": {
                "gceAccelerator": {
                    "$ref": "GoogleCloudCommerceVerificationV0GceAccelerator",
                    "description": "Extension for Google Compute Engine accelerators."
                },
                "gceDisk": {
                    "$ref": "GoogleCloudCommerceVerificationV0GceDisk",
                    "description": "Extension for Google Compute Engine disks."
                },
                "gceInstance": {
                    "$ref": "GoogleCloudCommerceVerificationV0GceInstance",
                    "description": "Extension for Google Compute Engine instances."
                },
                "gceLicense": {
                    "$ref": "GoogleCloudCommerceVerificationV0GceLicense",
                    "description": "Extension for Google Compute Engine licenses."
                },
                "name": {
                    "description": "The identifier that DM uses for this resource.",
                    "type": "string"
                },
                "title": {
                    "description": "The user-visible title of the resource.",
                    "type": "string"
                },
                "type": {
                    "description": "Extension type.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "GCE_INSTANCE",
                        "GCE_DISK",
                        "GCE_LICENSE",
                        "GCE_ACCELERATOR"
                    ],
                    "enumDescriptions": [
                        "Sentinel value, do not use.",
                        "GCE Instance extension type",
                        "GCE Disk extension type",
                        "GCE License extension type",
                        "GCE License extension type"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0Step": {
            "id": "GoogleCloudCommerceVerificationV0Step",
            "properties": {
                "description": {
                    "description": "Brief description of what this step does.",
                    "type": "string"
                },
                "name": {
                    "description": "Human readable name for this step.",
                    "type": "string"
                },
                "result": {
                    "description": "Explanation of the result for this step.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0TaskReport": {
            "id": "GoogleCloudCommerceVerificationV0TaskReport",
            "properties": {
                "checkImageReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0CheckImageReport",
                    "description": "Image state detected on the entity."
                },
                "checkLicenseInfoReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0CheckLicenseInfoReport",
                    "description": "Report of checking license info, licenses are extracted from deployment\nmanifest."
                },
                "createTime": {
                    "description": "The report's creation time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "deploymentCreationReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0DeploymentCreationReport",
                    "description": "Create deployment result."
                },
                "digest": {
                    "description": "Human readable brief summary of the task execution result.\nRequired.",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "Error message from executing the task, if any. The message will only show\ninformation that callers of this service can act on, and try to hide\ndetails caused by internal errors.\nOptional.",
                    "type": "string"
                },
                "extractDeploymentManifestReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0ExtractDeploymentManifestReport",
                    "description": "Extract deployment manifest result."
                },
                "extractImagesStatesReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0ExtractImagesStatesReport",
                    "description": "Images states detected on the entity."
                },
                "k8sAppFunctionalityTestReports": {
                    "$ref": "GoogleCloudCommerceVerificationV0K8sAppFunctionalityTestReports",
                    "description": "Reports of k8s app functionality test."
                },
                "networkVulnerabilitiesScanReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0NetworkVulnerabilityScanReport",
                    "description": "Network vulnerabilities detected on the entity."
                },
                "packagedVulnerabilityScanReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0PackageVulnerabilityScanReport",
                    "description": "Package vulnerabilities detected on the entity."
                },
                "taskExecutionStatus": {
                    "description": "Task execution status.",
                    "enum": [
                        "TASK_EXECUTION_STATUS_UNSPECIFIED",
                        "NO_ISSUE_FOUND",
                        "ISSUES_FOUND"
                    ],
                    "enumDescriptions": [
                        "Unspecified task status.",
                        "No issue found during task execution.",
                        "Issue(s) found on the entity, or errors occurred during task execution."
                    ],
                    "type": "string"
                },
                "taskType": {
                    "description": "Task type.",
                    "enum": [
                        "TASK_TYPE_UNSPECIFIED",
                        "CREATE_DEPLOYMENT",
                        "CHECK_IMAGE",
                        "EXTRACT_DEPLOYMENT_MANIFEST",
                        "CHECK_LICENSE_INFO",
                        "CHECK_PACKAGE_VULNERABILITIES",
                        "CHECK_NETWORK_VULNERABILITIES",
                        "VALIDATE_DEPLOYMENT_MANIFEST",
                        "EXTRACT_IMAGES_STATES",
                        "TEST_K8S_APP_FUNCTIONALITY"
                    ],
                    "enumDescriptions": [
                        "Unspecified task type.",
                        "Create deployment.",
                        "Check Image.",
                        "Extract deployment manifest.",
                        "Check license info.",
                        "Check package vulnerabilities.",
                        "Check network vulnerabilities.",
                        "Validate deployment manifest.",
                        "Extract images states.",
                        "Test k8s app functionality."
                    ],
                    "type": "string"
                },
                "validateDeploymentManifestReport": {
                    "$ref": "GoogleCloudCommerceVerificationV0ValidateDeploymentManifestReport",
                    "description": "Validate deployment manifest result."
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0ValidateDeploymentManifestReport": {
            "description": "Report from validating extracted deployment manifest.",
            "id": "GoogleCloudCommerceVerificationV0ValidateDeploymentManifestReport",
            "properties": {
                "manifestValidity": {
                    "description": "Validity of manifest.",
                    "enum": [
                        "MANIFEST_VALIDITY_UNSPECIFIED",
                        "VALID",
                        "INVALID"
                    ],
                    "enumDescriptions": [
                        "Unspecified validity.",
                        "Valid manifest.",
                        "Invalid manifest."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0VerificationEntity": {
            "description": "VerificationEntity contains the minimum information required to verify a\nresource.",
            "id": "GoogleCloudCommerceVerificationV0VerificationEntity",
            "properties": {
                "containerImages": {
                    "$ref": "GoogleCloudCommerceVerificationV0ContainerImages",
                    "description": "Metadata for container images entity."
                },
                "entityName": {
                    "description": "Name of the entity to verify.\nPlain-text. Format: must not contain '/', max length: 438.\nThe format of entity name depends on the verification requester.\nSuggestion: a name that can identify the entity within the requester\nservice.\nRequired.",
                    "type": "string"
                },
                "k8sApp": {
                    "$ref": "GoogleCloudCommerceVerificationV0K8sApplication",
                    "description": "Metadata for k8s app."
                },
                "osImage": {
                    "$ref": "GoogleCloudCommerceVerificationV0OsImage",
                    "description": "Metadata for OS entity."
                },
                "packagedDeployment": {
                    "$ref": "GoogleCloudCommerceVerificationV0PackagedDeployment",
                    "description": "Metadata for packaged deployment entity."
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0VerificationReport": {
            "description": "Verification report generated by Verification Service.",
            "id": "GoogleCloudCommerceVerificationV0VerificationReport",
            "properties": {
                "createTime": {
                    "description": "The creation timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "entityName": {
                    "description": "Name of the verified entity.",
                    "type": "string"
                },
                "name": {
                    "description": "The resource name of the verification report.\nReport names have the form `verificationreports/{report_id}`, while\nreport_id is contained in the response from calling VerifyEntity.",
                    "type": "string"
                },
                "taskReports": {
                    "description": "Task reports generated by the verification workflow.",
                    "items": {
                        "$ref": "GoogleCloudCommerceVerificationV0TaskReport"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudCommerceVerificationV0VerifyEntityRequest": {
            "description": "Request message for\ngoogle.cloud.commerce.verification.service.v0.VerificationService.VerifyEntity",
            "id": "GoogleCloudCommerceVerificationV0VerifyEntityRequest",
            "properties": {
                "iamPolicyName": {
                    "$ref": "TechIamPolicyName",
                    "description": "The IAM policy name of the entity to be verified. It is used to determine\nthe IAM policy name of the verification report, which is the child of\nthe entity with respect to IAM.\nRequired."
                },
                "verificationEntity": {
                    "$ref": "GoogleCloudCommerceVerificationV0VerificationEntity",
                    "description": "The entity to verify.\nRequired."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1AliasContext": {
            "description": "An alias to a repo revision.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1AliasContext",
            "properties": {
                "kind": {
                    "description": "The alias kind.",
                    "enum": [
                        "KIND_UNSPECIFIED",
                        "FIXED",
                        "MOVABLE",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "Git tag.",
                        "Git branch.",
                        "Used to specify non-standard aliases. For example, if a Git repo has a\nref named \"refs/foo/bar\"."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The alias name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Artifact": {
            "description": "Artifact describes a build product.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Artifact",
            "properties": {
                "checksum": {
                    "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.",
                    "type": "string"
                },
                "id": {
                    "description": "Artifact ID, if any; for container images, this will be a URL by digest\nlike gcr.io/projectID/imagename@sha256:123456",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the artifact. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`.\n\nThis field is deprecated in favor of the plural `names` field; it continues\nto exist here to allow existing BuildProvenance serialized to json in\ngoogle.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes to\ndeserialize back into proto.",
                    "type": "string"
                },
                "names": {
                    "description": "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Attestation": {
            "description": "Occurrence that represents a single \"attestation\".  The authenticity of an\nAttestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust.  In this circumstance, the\nAttestationAuthority to which this Attestation is attached is primarily\nuseful for look-up (how to find this Attestation if you already know the\nAuthority and artifact to be verified) and intent (which authority was this\nattestation intended to sign for).",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Attestation",
            "properties": {
                "genericSignedAttestation": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1GenericSignedAttestation"
                },
                "kmsSignedAttestation": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1KmsSignedAttestation"
                },
                "pgpSignedAttestation": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1PgpSignedAttestation"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1BuildDetails": {
            "description": "Message encapsulating build provenance details.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1BuildDetails",
            "properties": {
                "provenance": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1BuildProvenance",
                    "description": "The actual provenance"
                },
                "provenanceBytes": {
                    "description": "Serialized JSON representation of the provenance, used in generating the\n`BuildSignature` in the corresponding Result. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1BuildProvenance": {
            "description": "Provenance of a build. Contains all information needed to verify the full\ndetails about the build from source to completion.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1BuildProvenance",
            "properties": {
                "buildOptions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details.",
                    "type": "object"
                },
                "builderVersion": {
                    "description": "Version string of the builder at the time this build was executed.",
                    "type": "string"
                },
                "builtArtifacts": {
                    "description": "Output of the build.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Artifact"
                    },
                    "type": "array"
                },
                "commands": {
                    "description": "Commands requested by the build.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Command"
                    },
                    "type": "array"
                },
                "createTime": {
                    "description": "Time at which the build was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "creator": {
                    "description": "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time.",
                    "type": "string"
                },
                "finishTime": {
                    "description": "Time at which execution of the build was finished.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of the build.",
                    "type": "string"
                },
                "logsBucket": {
                    "description": "Google Cloud Storage bucket where logs were written.",
                    "type": "string"
                },
                "projectId": {
                    "description": "ID of the project.",
                    "type": "string"
                },
                "projectNum": {
                    "description": "Numerical ID of the project.",
                    "format": "int64",
                    "type": "string"
                },
                "sourceProvenance": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Source",
                    "description": "Details of the Source input to the build."
                },
                "startTime": {
                    "description": "Time at which execution of the build was started.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "triggerId": {
                    "description": "Trigger identifier if the build was triggered automatically; empty if not.",
                    "type": "string"
                },
                "userId": {
                    "description": "GAIA ID of end user who initiated this build; at the time that the\nBuildProvenance is uploaded to Analysis, this will be resolved to the\nprimary e-mail address of the user and stored in the Creator field.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext": {
            "description": "A CloudRepoSourceContext denotes a particular revision in a Google Cloud\nSource Repo.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext",
            "properties": {
                "aliasContext": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1AliasContext",
                    "description": "An alias, which may be a branch or tag."
                },
                "repoId": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1RepoId",
                    "description": "The ID of the repo."
                },
                "revisionId": {
                    "description": "A revision ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Command": {
            "description": "Command describes a step performed as part of the build pipeline.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Command",
            "properties": {
                "args": {
                    "description": "Command-line arguments used when executing this Command.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dir": {
                    "description": "Working directory (relative to project source root) used when running\nthis Command.",
                    "type": "string"
                },
                "env": {
                    "description": "Environment variables set before running this Command.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Optional unique identifier for this Command, used in wait_for to reference\nthis Command as a dependency.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the command, as presented on the command line, or if the command is\npackaged as a Docker container, as presented to `docker pull`.",
                    "type": "string"
                },
                "waitFor": {
                    "description": "The ID(s) of the Command(s) that this Command depends on.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1CustomDetails": {
            "description": "Details of the custom note type",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1CustomDetails",
            "properties": {
                "description": {
                    "description": "A description of location of a custom note.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Deployment": {
            "description": "The period during which some deployable was active in a runtime.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Deployment",
            "properties": {
                "address": {
                    "description": "Address of the runtime element hosting this deployment.",
                    "type": "string"
                },
                "config": {
                    "description": "Configuration used to create this deployment.",
                    "type": "string"
                },
                "deployTime": {
                    "description": "Beginning of the lifetime of this deployment.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "deprecatedAndUnused": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Deprecated in favor of config/8.",
                    "type": "object"
                },
                "platform": {
                    "description": "Platform hosting this deployment.",
                    "enum": [
                        "PLATFORM_UNSPECIFIED",
                        "GKE",
                        "FLEX",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "Unknown",
                        "Google Container Engine",
                        "Google App Engine: Flexible Environment",
                        "Custom user-defined platform"
                    ],
                    "type": "string"
                },
                "resourceUri": {
                    "description": "Output only. Resource URI for the artifact being deployed taken from the\ndeployable field with the same name.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "undeployTime": {
                    "description": "End of the lifetime of this deployment.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "userEmail": {
                    "description": "Identity of the user that triggered this deployment.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Derived": {
            "description": "Derived describes the derived image portion (Occurrence) of the\nDockerImage relationship.  This image would be produced from a Dockerfile\nwith FROM <DockerImage.Basis in attached Note>.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Derived",
            "properties": {
                "baseResourceUrl": {
                    "description": "Output only. This contains the base image URL for the derived image\noccurrence.",
                    "type": "string"
                },
                "distance": {
                    "description": "Output only. The number of layers by which this image differs from the\nassociated image basis.",
                    "format": "uint32",
                    "type": "integer"
                },
                "fingerprint": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Fingerprint",
                    "description": "The fingerprint of the derived image."
                },
                "layerInfo": {
                    "description": "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Layer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Discovered": {
            "description": "Provides information about the scan status of a discovered resource.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Discovered",
            "properties": {
                "analysisStatus": {
                    "description": "The status of discovery for the resource.",
                    "enum": [
                        "ANALYSIS_STATUS_UNSPECIFIED",
                        "PENDING",
                        "SCANNING",
                        "FINISHED_SUCCESS",
                        "FINISHED_FAILED",
                        "FINISHED_UNSUPPORTED"
                    ],
                    "enumDescriptions": [
                        "Unknown",
                        "Resource is known but no action has been taken yet.",
                        "Resource is being analyzed.",
                        "Analysis has finished successfully.",
                        "Analysis has finished unsuccessfully, the analysis itself is in a bad\nstate.",
                        "The resource is known not to be supported."
                    ],
                    "type": "string"
                },
                "analysisStatusError": {
                    "$ref": "GoogleRpcStatus",
                    "description": "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage output only and\npopulated by the API."
                },
                "continuousAnalysis": {
                    "description": "Whether the resource is continuously analyzed.",
                    "enum": [
                        "CONTINUOUS_ANALYSIS_UNSPECIFIED",
                        "ACTIVE",
                        "INACTIVE"
                    ],
                    "enumDescriptions": [
                        "Unknown",
                        "The resource is continuously analyzed.",
                        "The resource is ignored for continuous analysis."
                    ],
                    "type": "string"
                },
                "cpe": {
                    "description": "The CPE of the resource being scanned.",
                    "type": "string"
                },
                "lastVulnerabilityTime": {
                    "description": "The last time a vulnerability was found on this resource.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "operation": {
                    "$ref": "GoogleLongrunningOperation",
                    "description": "Output only. An operation that indicates the status of the current scan.\nThis field is deprecated, do not use."
                },
                "scanStatusUpdateTime": {
                    "description": "Timestamp at which resource was last analyzed.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1FileHashes": {
            "description": "Container message for hashes of byte content of files, used in Source\nmessages to verify integrity of source input to the build.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1FileHashes",
            "properties": {
                "fileHash": {
                    "description": "Collection of file hashes.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Hash"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Fingerprint": {
            "description": "A set of properties that uniquely identify a given Docker image.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Fingerprint",
            "properties": {
                "v1Name": {
                    "description": "The layer-id of the final layer in the Docker image's v1\nrepresentation.\nThis field can be used as a filter in list requests.",
                    "type": "string"
                },
                "v2Blob": {
                    "description": "The ordered list of v2 blobs that represent a given image.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "v2Name": {
                    "description": "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.\nThis field can be used as a filter in list requests.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1GenericSignedAttestation": {
            "description": "An attestation wrapper that uses the generic Grafeas `Signature` message.\nThis attestation must define the `plaintext` that the `signatures` verify\nand any metadata necessary to interpret that plaintext.  The signatures\nshould always be over the `plaintext` bytestring.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1GenericSignedAttestation",
            "properties": {
                "contentType": {
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "SIMPLE_SIGNING_JSON"
                    ],
                    "enumDescriptions": [
                        "`ContentType` is not set.",
                        "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted in `plaintext` is a JSON blob conforming to the\nlinked schema."
                    ],
                    "type": "string"
                },
                "serializedPayload": {
                    "format": "byte",
                    "type": "string"
                },
                "signatures": {
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Signature"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext": {
            "description": "A SourceContext referring to a Gerrit project.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext",
            "properties": {
                "aliasContext": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1AliasContext",
                    "description": "An alias, which may be a branch or tag."
                },
                "gerritProject": {
                    "description": "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is\nthe hostURI/project.",
                    "type": "string"
                },
                "hostUri": {
                    "description": "The URI of a running Gerrit instance.",
                    "type": "string"
                },
                "revisionId": {
                    "description": "A revision (commit) ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext": {
            "description": "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g., GitHub).",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext",
            "properties": {
                "revisionId": {
                    "description": "Required. Git commit hash.",
                    "type": "string"
                },
                "url": {
                    "description": "Git repository URL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Hash": {
            "description": "Container message for hash values.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Hash",
            "properties": {
                "type": {
                    "description": "The type of hash that was performed.",
                    "enum": [
                        "NONE",
                        "SHA256",
                        "MD5",
                        "PSHA2"
                    ],
                    "enumDescriptions": [
                        "No hash requested.",
                        "A sha256 hash.",
                        "An md5 hash. This is a legacy option for Google internal systems that\nalready rely on it and should not be used in any new code.",
                        "A psha2 hash; this is expected to never be released publicly."
                    ],
                    "type": "string"
                },
                "typeString": {
                    "description": "The type of hash that was performed. If provided will be used instead of\ntype.",
                    "type": "string"
                },
                "value": {
                    "description": "The hash value.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Installation": {
            "description": "This represents how a particular software package may be installed on\na system.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Installation",
            "properties": {
                "location": {
                    "description": "All of the places within the filesystem versions of this package\nhave been found.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Location"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Output only. The name of the installed package.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1KmsSignedAttestation": {
            "description": "An attestation wrapper with a Cloud KMS created signature.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1KmsSignedAttestation",
            "properties": {
                "contentType": {
                    "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "SIMPLE_SIGNING_JSON"
                    ],
                    "enumDescriptions": [
                        "`ContentType` is not set.",
                        "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."
                    ],
                    "type": "string"
                },
                "kmsCryptoKeyVersionName": {
                    "description": "Cloud KMS resource name that refers to the specific version of a CryptoKey\nthat was used to create the signature. e.g\n\"projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*\"",
                    "type": "string"
                },
                "plaintext": {
                    "description": "The plaintext that was signed by Cloud KMS. Since Cloud KMS signs a\nprecomputed digest, this must be the plaintext that was hashed, not the\nresulting hash. This field is required to verify the signature; without it,\nthe verifier could confirm that the signature was valid, but it wouldn't\nknow what was actually signed.",
                    "type": "string"
                },
                "signature": {
                    "description": "Signature returned by Cloud KMS asymmetric sign method. The signature is\n\"DETACHED\" so the exact payload that was signed must be included in the\n'plaintext' field in this message.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Layer": {
            "description": "Layer holds metadata specific to a layer of a Docker image.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Layer",
            "properties": {
                "arguments": {
                    "description": "The recovered arguments to the Dockerfile directive.",
                    "type": "string"
                },
                "directive": {
                    "description": "The recovered Dockerfile directive used to construct this layer.",
                    "enum": [
                        "DIRECTIVE_UNSPECIFIED",
                        "MAINTAINER",
                        "RUN",
                        "CMD",
                        "LABEL",
                        "EXPOSE",
                        "ENV",
                        "ADD",
                        "COPY",
                        "ENTRYPOINT",
                        "VOLUME",
                        "USER",
                        "WORKDIR",
                        "ARG",
                        "ONBUILD",
                        "STOPSIGNAL",
                        "HEALTHCHECK",
                        "SHELL"
                    ],
                    "enumDescriptions": [
                        "Default value for unsupported/missing directive",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/reference/builder/#copy",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/"
                    ],
                    "type": "string"
                },
                "directiveString": {
                    "description": "The recovered Dockerfile directive used to construct this layer.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Location": {
            "description": "An occurrence of a particular package installation found within a\nsystem's filesystem.\ne.g. glibc was found in /var/lib/dpkg/status",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Location",
            "properties": {
                "cpeUri": {
                    "description": "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.",
                    "type": "string"
                },
                "path": {
                    "description": "The path from which we gathered that this package/version is installed.",
                    "type": "string"
                },
                "version": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Version",
                    "description": "The version installed at this location."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Occurrence": {
            "description": "`Occurrence` includes information about analysis occurrences for an image.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Occurrence",
            "properties": {
                "attestation": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Attestation",
                    "description": "Describes an attestation of an artifact."
                },
                "buildDetails": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1BuildDetails",
                    "description": "Build details for a verifiable build."
                },
                "createTime": {
                    "description": "Output only. The time this `Occurrence` was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "customDetails": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1CustomDetails",
                    "description": "Details of the custom note."
                },
                "deployment": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Deployment",
                    "description": "Describes the deployment of an artifact on a runtime."
                },
                "derivedImage": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Derived",
                    "description": "Describes how this resource derives from the basis\nin the associated note."
                },
                "discovered": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Discovered",
                    "description": "Describes the initial scan status for this resource."
                },
                "installation": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Installation",
                    "description": "Describes the installation of a package on the linked resource."
                },
                "kind": {
                    "description": "Output only. This explicitly denotes which of the `Occurrence` details are\nspecified. This field can be used as a filter in list requests.",
                    "enum": [
                        "KIND_UNSPECIFIED",
                        "CUSTOM",
                        "PACKAGE_VULNERABILITY",
                        "BUILD_DETAILS",
                        "IMAGE_BASIS",
                        "PACKAGE_MANAGER",
                        "DEPLOYABLE",
                        "DISCOVERY",
                        "ATTESTATION_AUTHORITY",
                        "UPGRADE"
                    ],
                    "enumDescriptions": [
                        "Unknown",
                        "Custom",
                        "The note and occurrence represent a package vulnerability.",
                        "The note and occurrence assert build provenance.",
                        "This represents an image basis relationship.",
                        "This represents a package installed via a package manager.",
                        "The note and occurrence track deployment events.",
                        "The note and occurrence track the initial discovery status of a resource.",
                        "This represents a logical \"role\" that can attest to artifacts.",
                        "This represents an available software upgrade."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Output only. The name of the `Occurrence` in the form\n\"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"",
                    "type": "string"
                },
                "noteName": {
                    "description": "An analysis note associated with this image, in the form\n\"providers/{provider_id}/notes/{NOTE_ID}\"\nThis field can be used as a filter in list requests.",
                    "type": "string"
                },
                "operationName": {
                    "description": "The name of the operation that created this note.",
                    "type": "string"
                },
                "remediation": {
                    "description": "A description of actions that can be taken to remedy the `Note`",
                    "type": "string"
                },
                "resource": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Resource",
                    "description": "\nThe resource for which the `Occurrence` applies."
                },
                "resourceUrl": {
                    "description": "The unique URL of the image or the container for which the `Occurrence`\napplies. For example, https://gcr.io/project/image@sha256:foo This field\ncan be used as a filter in list requests.",
                    "type": "string"
                },
                "updateTime": {
                    "description": "Output only. The time this `Occurrence` was last updated.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "upgrade": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1UpgradeOccurrence",
                    "description": "Describes an upgrade."
                },
                "vulnerabilityDetails": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityDetails",
                    "description": "Details of a security vulnerability note."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1PackageIssue": {
            "description": "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1PackageIssue",
            "properties": {
                "affectedLocation": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityLocation",
                    "description": "The location of the vulnerability."
                },
                "fixedLocation": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityLocation",
                    "description": "The location of the available fix for vulnerability."
                },
                "severityName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1PgpSignedAttestation": {
            "description": "An attestation wrapper with a PGP-compatible signature.\nThis message only supports `ATTACHED` signatures, where the payload that is\nsigned is included alongside the signature itself in the same file.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1PgpSignedAttestation",
            "properties": {
                "contentType": {
                    "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "SIMPLE_SIGNING_JSON"
                    ],
                    "enumDescriptions": [
                        "`ContentType` is not set.",
                        "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."
                    ],
                    "type": "string"
                },
                "pgpKeyId": {
                    "description": "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexadecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.",
                    "type": "string"
                },
                "signature": {
                    "description": "The raw content of the signature, as output by GNU Privacy Guard (GPG) or\nequivalent.  Since this message only supports attached signatures, the\npayload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId": {
            "description": "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId",
            "properties": {
                "projectId": {
                    "description": "The ID of the project.",
                    "type": "string"
                },
                "repoName": {
                    "description": "The name of the repo. Leave empty for the default repo.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1RepoId": {
            "description": "A unique identifier for a Cloud Repo.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1RepoId",
            "properties": {
                "projectRepoId": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId",
                    "description": "A combination of a project ID and a repo name."
                },
                "uid": {
                    "description": "A server-assigned, globally unique identifier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1RepoSource": {
            "description": "RepoSource describes the location of the source in a Google Cloud Source\nRepository.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1RepoSource",
            "properties": {
                "branchName": {
                    "description": "Name of the branch to build.",
                    "type": "string"
                },
                "commitSha": {
                    "description": "Explicit commit SHA to build.",
                    "type": "string"
                },
                "projectId": {
                    "description": "ID of the project that owns the repo.",
                    "type": "string"
                },
                "repoName": {
                    "description": "Name of the repo.",
                    "type": "string"
                },
                "tagName": {
                    "description": "Name of the tag to build.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Resource": {
            "description": "\nResource is an entity that can have metadata. E.g., a Docker image.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Resource",
            "properties": {
                "contentHash": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Hash",
                    "description": "The hash of the resource content. E.g., the Docker digest."
                },
                "name": {
                    "description": "The name of the resource. E.g., the name of a Docker image - \"Debian\".",
                    "type": "string"
                },
                "uri": {
                    "description": "The unique URI of the resource. E.g.,\n\"https://gcr.io/project/image@sha256:foo\" for a Docker image.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Signature": {
            "description": "Inlined from third_party/grafeas/v1beta1/proto/common.proto.\nSee that proto for detailed comments and semantics.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Signature",
            "properties": {
                "publicKeyId": {
                    "type": "string"
                },
                "signature": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Source": {
            "description": "Source describes the location of the source used for the build.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Source",
            "properties": {
                "additionalContexts": {
                    "description": "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1SourceContext"
                    },
                    "type": "array"
                },
                "additionalSourceContexts": {
                    "description": "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe source_context field.",
                    "items": {
                        "$ref": "GoogleDevtoolsSourceV1ExtendedSourceContext"
                    },
                    "type": "array"
                },
                "artifactStorageSource": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1StorageSource",
                    "description": "If provided, the input binary artifacts for the build came from this\nlocation."
                },
                "artifactStorageSourceUri": {
                    "description": "Internal-only for storage. V1beta1 and onwards use a URI instead of\nartifact_storage_source.",
                    "type": "string"
                },
                "context": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1SourceContext",
                    "description": "If provided, the source code used for the build came from this location."
                },
                "fileHashes": {
                    "additionalProperties": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1FileHashes"
                    },
                    "description": "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.",
                    "type": "object"
                },
                "repoSource": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1RepoSource",
                    "description": "If provided, get source from this location in a Cloud Repo."
                },
                "sourceContext": {
                    "$ref": "GoogleDevtoolsSourceV1ExtendedSourceContext",
                    "description": "If provided, the source code used for the build came from this location."
                },
                "storageSource": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1StorageSource",
                    "description": "If provided, get the source from this location in in Google Cloud\nStorage."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1SourceContext": {
            "description": "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1SourceContext",
            "properties": {
                "cloudRepo": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext",
                    "description": "A SourceContext referring to a revision in a Google Cloud Source Repo."
                },
                "gerrit": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext",
                    "description": "A SourceContext referring to a Gerrit project."
                },
                "git": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext",
                    "description": "A SourceContext referring to any third party Git repo (e.g., GitHub)."
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels with user defined metadata.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1StorageSource": {
            "description": "StorageSource describes the location of the source in an archive file in\nGoogle Cloud Storage.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1StorageSource",
            "properties": {
                "bucket": {
                    "description": "Google Cloud Storage bucket containing source (see [Bucket Name\nRequirements]\n(https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
                    "type": "string"
                },
                "generation": {
                    "description": "Google Cloud Storage generation for the object.",
                    "format": "int64",
                    "type": "string"
                },
                "object": {
                    "description": "Google Cloud Storage object containing source.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1UpgradeDistribution": {
            "description": "The Upgrade Distribution represents metadata about the Upgrade for each\noperating system (CPE). Some distributions have additional metadata around\nupdates, classifying them into various categories and severities.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1UpgradeDistribution",
            "properties": {
                "classification": {
                    "description": "The operating system classification of this Upgrade, as specified by the\nupstream operating system upgrade feed.",
                    "type": "string"
                },
                "cpeUri": {
                    "description": "Required - The specific operating system this metadata applies to. See\nhttps://cpe.mitre.org/specification/.",
                    "type": "string"
                },
                "cve": {
                    "description": "The cve that would be resolved by this upgrade.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "severity": {
                    "description": "The severity as specified by the upstream operating system.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1UpgradeOccurrence": {
            "description": "An Upgrade Occurrence represents that a specific resource_url could install a\nspecific upgrade. This presence is supplied via local sources (i.e. it is\npresent in the mirror and the running system has noticed its availability).",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1UpgradeOccurrence",
            "properties": {
                "distribution": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1UpgradeDistribution",
                    "description": "Metadata about the upgrade for available for the specific operating system\nfor the resource_url. This allows efficient filtering, as well as\nmaking it easier to use the occurrence."
                },
                "package": {
                    "description": "Required - The package this Upgrade is for.",
                    "type": "string"
                },
                "parsedVersion": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Version",
                    "description": "Required - The version of the package in a machine + human readable form."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1Version": {
            "description": "Version contains structured information about the version of the package.\nFor a discussion of this in Debian/Ubuntu:\nhttp://serverfault.com/questions/604541/debian-packages-version-convention\nFor a discussion of this in Redhat/Fedora/Centos:\nhttp://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1Version",
            "properties": {
                "epoch": {
                    "description": "Used to correct mistakes in the version numbering scheme.",
                    "format": "int32",
                    "type": "integer"
                },
                "kind": {
                    "description": "Distinguish between sentinel MIN/MAX versions and normal versions.\nIf kind is not NORMAL, then the other fields are ignored.",
                    "enum": [
                        "NORMAL",
                        "MINIMUM",
                        "MAXIMUM",
                        "VERSION_KIND_UNSPECIFIED"
                    ],
                    "enumDescriptions": [
                        "A standard package version, defined by the other fields.",
                        "A special version representing negative infinity,\nother fields are ignored.",
                        "A special version representing positive infinity,\nother fields are ignored.",
                        "Unknown.\n\nIdeally this should be 0, but it wasn't initially added to v1alpha1,\nso for backward compatibility when migrating to internal storage\nprotos, we needed to add it as the next ID.\n\nThis is internal for now as we're re-using the v1alpha1 protos as\nstorage protos for version migration. Once v1alpha1 is turned down, we\nwill use the internal storage protos:\nhttp://google3/cloud/containers/analysis/api/proto/vulnerability.proto?l=31&rcl=192661010"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The main part of the version name.",
                    "type": "string"
                },
                "ordinal": {
                    "description": "The deprecated ordinal field.",
                    "type": "string"
                },
                "ordinal2": {
                    "description": "This field holds a mapping of the above into an ordinal form,\nwhich we can use to efficiently filter on versions.  It is\npopulated by the API (internal only).",
                    "type": "string"
                },
                "revision": {
                    "description": "The iteration of the package build from the above version.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityDetails": {
            "description": "Used by Occurrence to point to where the vulnerability exists and how\nto fix it.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityDetails",
            "properties": {
                "cvssScore": {
                    "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.",
                    "format": "float",
                    "type": "number"
                },
                "effectiveSeverity": {
                    "description": "The distro assigned severity for this vulnerability when that is\navailable and note provider assigned severity when distro has not yet\nassigned a severity for this vulnerability.",
                    "enum": [
                        "SEVERITY_UNSPECIFIED",
                        "MINIMAL",
                        "LOW",
                        "MEDIUM",
                        "HIGH",
                        "CRITICAL"
                    ],
                    "enumDescriptions": [
                        "Unknown Impact",
                        "Minimal Impact",
                        "Low Impact",
                        "Medium Impact",
                        "High Impact",
                        "Critical Impact"
                    ],
                    "type": "string"
                },
                "longDescription": {
                    "description": "Output only. A long description for this vulnerability. This exists for\ncompatibility to to beta protos, and is therefore internal only.",
                    "type": "string"
                },
                "packageIssue": {
                    "description": "The set of affected locations and their fixes (if available) within\nthe associated resource.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1PackageIssue"
                    },
                    "type": "array"
                },
                "relatedUrls": {
                    "description": "Output only. Urls related to this vulnerability. This exists for\ncompatibility to to beta protos, and is therefore internal only.",
                    "items": {
                        "$ref": "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityRelatedUrl"
                    },
                    "type": "array"
                },
                "severity": {
                    "description": "Output only. The note provider assigned Severity of the vulnerability.",
                    "enum": [
                        "SEVERITY_UNSPECIFIED",
                        "MINIMAL",
                        "LOW",
                        "MEDIUM",
                        "HIGH",
                        "CRITICAL"
                    ],
                    "enumDescriptions": [
                        "Unknown Impact",
                        "Minimal Impact",
                        "Low Impact",
                        "Medium Impact",
                        "High Impact",
                        "Critical Impact"
                    ],
                    "type": "string"
                },
                "shortDescription": {
                    "description": "Output only. The short description for this vulnerability. This exists\nfor compatibility to to beta protos, and is therefore internal only.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of package; whether native or non native(ruby gems,\nnode.js packages etc)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityLocation": {
            "description": "The location of the vulnerability",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityLocation",
            "properties": {
                "cpeUri": {
                    "description": "The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.\nThis field can be used as a filter in list requests.",
                    "type": "string"
                },
                "deprecatedVersion": {
                    "description": "Unused.",
                    "type": "string"
                },
                "package": {
                    "description": "The package being described.",
                    "type": "string"
                },
                "version": {
                    "$ref": "GoogleDevtoolsContaineranalysisV1alpha1Version",
                    "description": "The version of the package being described. This field can be used as a\nfilter in list requests."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityRelatedUrl": {
            "description": "Internal only field to support RelatedUrl message for beta.",
            "id": "GoogleDevtoolsContaineranalysisV1alpha1VulnerabilityRelatedUrl",
            "properties": {
                "label": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1AliasContext": {
            "description": "An alias to a repo revision.",
            "id": "GoogleDevtoolsSourceV1AliasContext",
            "properties": {
                "kind": {
                    "description": "The alias kind.",
                    "enum": [
                        "ANY",
                        "FIXED",
                        "MOVABLE",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "Do not use.",
                        "Git tag",
                        "Git branch",
                        "OTHER is used to specify non-standard aliases, those not of the kinds\nabove. For example, if a Git repo has a ref named \"refs/foo/bar\", it\nis considered to be of kind OTHER."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The alias name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1CitcWorkspaceSourceContext": {
            "description": "A CitC workspace as represented by its ID and snapshot.",
            "id": "GoogleDevtoolsSourceV1CitcWorkspaceSourceContext",
            "properties": {
                "branchName": {
                    "description": "See PiperDepotSourceContext.branch_name for documentation.",
                    "type": "string"
                },
                "isBaseline": {
                    "description": "If true, ignore local workspace changes and use the\nbaseline of the workspace instead.",
                    "type": "boolean"
                },
                "snapshotVersion": {
                    "description": "The snapshot within the workspace. If zero, refers to the moving head of\nthe workspace.  Clients which use zero should be robust against remote\nchanges made to a workspace.\n\nIf non-zero, refers to an immutable CitC snapshot.\n\nThe current snapshot_version for USER's CLIENT can be found in\n/google/src/cloud/USER/CLIENT/.citc/snapshot_version",
                    "format": "uint64",
                    "type": "string"
                },
                "workspaceId": {
                    "description": "A unique identifier for a citc workspace.\nThe workspace_id for USER's CLIENT can be found in\n/google/src/cloud/USER/CLIENT/.citc/workspace_id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1CloudRepoSourceContext": {
            "description": "A CloudRepoSourceContext denotes a particular revision in a cloud\nrepo (a repo hosted by the Google Cloud Platform).",
            "id": "GoogleDevtoolsSourceV1CloudRepoSourceContext",
            "properties": {
                "aliasContext": {
                    "$ref": "GoogleDevtoolsSourceV1AliasContext",
                    "description": "An alias, which may be a branch or tag."
                },
                "aliasName": {
                    "description": "The name of an alias (branch, tag, etc.).",
                    "type": "string"
                },
                "repoId": {
                    "$ref": "GoogleDevtoolsSourceV1RepoId",
                    "description": "The ID of the repo."
                },
                "revisionId": {
                    "description": "A revision ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1CloudWorkspaceId": {
            "description": "A CloudWorkspaceId is a unique identifier for a cloud workspace.\nA cloud workspace is a place associated with a repo where modified files\ncan be stored before they are committed.",
            "id": "GoogleDevtoolsSourceV1CloudWorkspaceId",
            "properties": {
                "name": {
                    "description": "The unique name of the workspace within the repo.  This is the name\nchosen by the client in the Source API's CreateWorkspace method.",
                    "type": "string"
                },
                "repoId": {
                    "$ref": "GoogleDevtoolsSourceV1RepoId",
                    "description": "The ID of the repo containing the workspace."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1CloudWorkspaceSourceContext": {
            "description": "A CloudWorkspaceSourceContext denotes a workspace at a particular snapshot.",
            "id": "GoogleDevtoolsSourceV1CloudWorkspaceSourceContext",
            "properties": {
                "snapshotId": {
                    "description": "The ID of the snapshot.\nAn empty snapshot_id refers to the most recent snapshot.",
                    "type": "string"
                },
                "workspaceId": {
                    "$ref": "GoogleDevtoolsSourceV1CloudWorkspaceId",
                    "description": "The ID of the workspace."
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1ExtendedSourceContext": {
            "description": "An ExtendedSourceContext is a SourceContext combined with additional\ndetails describing the context.",
            "id": "GoogleDevtoolsSourceV1ExtendedSourceContext",
            "properties": {
                "context": {
                    "$ref": "GoogleDevtoolsSourceV1SourceContext",
                    "description": "Any source context."
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels with user defined metadata.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1GerritSourceContext": {
            "description": "A SourceContext referring to a Gerrit project.",
            "id": "GoogleDevtoolsSourceV1GerritSourceContext",
            "properties": {
                "aliasContext": {
                    "$ref": "GoogleDevtoolsSourceV1AliasContext",
                    "description": "An alias, which may be a branch or tag."
                },
                "aliasName": {
                    "description": "The name of an alias (branch, tag, etc.).",
                    "type": "string"
                },
                "gerritProject": {
                    "description": "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name.\nThe \"repo name\" is hostURI/project.",
                    "type": "string"
                },
                "hostUri": {
                    "description": "The URI of a running Gerrit instance.",
                    "type": "string"
                },
                "revisionId": {
                    "description": "A revision (commit) ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1GitSourceContext": {
            "description": "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g. GitHub).",
            "id": "GoogleDevtoolsSourceV1GitSourceContext",
            "properties": {
                "revisionId": {
                    "description": "Git commit hash.\nrequired.",
                    "type": "string"
                },
                "url": {
                    "description": "Git repository URL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1PiperDepotSourceContext": {
            "description": "Source code in the Piper depot as of a certain change.",
            "id": "GoogleDevtoolsSourceV1PiperDepotSourceContext",
            "properties": {
                "branchName": {
                    "description": "Specifies that the source context refers to a branch, rather than the\ndepot root.  For example, if the branch files live under\n//depot/branches/mybranch/25, then branch_name should be \"mybranch/25\".",
                    "type": "string"
                },
                "changeNumber": {
                    "description": "CL number. Must be greater than zero.",
                    "format": "int64",
                    "type": "string"
                },
                "disableComponents": {
                    "description": "If false, use the released components as of the CL.\nIf true, use true head.\nIf branch_name is present and indicates a release branch, this field is not\nuseful since the presence or absence of the .srcfs_workspace file checked\nin under e.g. depot/branches/mybranch/25 carries the same information and\nis more authoritative.",
                    "type": "boolean"
                },
                "versionMap": {
                    "description": "The complete components state description. If present, disable_components\nis ignored.  Not all services accept arbitrary version map.  Services not\nsupporting arbitrary version maps must emit an error if this field is set,\ninstead of silently falling back on disable_components.\n\nThis is a serialized VersionMap from\n//devtools/components/proto/version_map.proto. We use bytes instead of the\nactual type to avoid having a file under //google depend on one outside of\n//google.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1ProjectRepoId": {
            "description": "Selects a repo using a Google Cloud Platform project ID\n(e.g. winged-cargo-31) and a repo name within that project.",
            "id": "GoogleDevtoolsSourceV1ProjectRepoId",
            "properties": {
                "projectId": {
                    "description": "The ID of the project.",
                    "type": "string"
                },
                "repoName": {
                    "description": "The name of the repo. Leave empty for the default repo.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1RepoId": {
            "description": "A unique identifier for a cloud repo.",
            "id": "GoogleDevtoolsSourceV1RepoId",
            "properties": {
                "projectRepoId": {
                    "$ref": "GoogleDevtoolsSourceV1ProjectRepoId",
                    "description": "A combination of a project ID and a repo name."
                },
                "uid": {
                    "description": "A server-assigned, globally unique identifier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleDevtoolsSourceV1SourceContext": {
            "description": "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.",
            "id": "GoogleDevtoolsSourceV1SourceContext",
            "properties": {
                "citc": {
                    "$ref": "GoogleDevtoolsSourceV1CitcWorkspaceSourceContext",
                    "description": "A SourceContext referring to a Citc client."
                },
                "cloudRepo": {
                    "$ref": "GoogleDevtoolsSourceV1CloudRepoSourceContext",
                    "description": "A SourceContext referring to a revision in a cloud repo."
                },
                "cloudWorkspace": {
                    "$ref": "GoogleDevtoolsSourceV1CloudWorkspaceSourceContext",
                    "description": "A SourceContext referring to a snapshot in a cloud workspace."
                },
                "gerrit": {
                    "$ref": "GoogleDevtoolsSourceV1GerritSourceContext",
                    "description": "A SourceContext referring to a Gerrit project."
                },
                "git": {
                    "$ref": "GoogleDevtoolsSourceV1GitSourceContext",
                    "description": "A SourceContext referring to any third party Git repo (e.g. GitHub)."
                },
                "piper": {
                    "$ref": "GoogleDevtoolsSourceV1PiperDepotSourceContext",
                    "description": "A SourceContext referring to a CL in Piper."
                }
            },
            "type": "object"
        },
        "GoogleLongrunningCancelOperationRequest": {
            "description": "The request message for Operations.CancelOperation.",
            "id": "GoogleLongrunningCancelOperationRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleLongrunningListOperationsResponse": {
            "description": "The response message for Operations.ListOperations.",
            "id": "GoogleLongrunningListOperationsResponse",
            "properties": {
                "nextPageToken": {
                    "description": "The standard List next-page token.",
                    "type": "string"
                },
                "operations": {
                    "description": "A list of operations that matches the specified filter in the request.",
                    "items": {
                        "$ref": "GoogleLongrunningOperation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleLongrunningOperation": {
            "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
            "id": "GoogleLongrunningOperation",
            "properties": {
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "error": {
                    "$ref": "GoogleRpcStatus",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "metadata": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "type": "object"
                },
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
                    "type": "string"
                },
                "response": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleProtobufEmpty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "GoogleProtobufEmpty",
            "properties": {},
            "type": "object"
        },
        "GoogleRpcStatus": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "id": "GoogleRpcStatus",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1AttestationAttestation": {
            "description": "Occurrence that represents a single \"attestation\". The authenticity of an\nattestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust. In this circumstance, the authority to which\nthis attestation is attached is primarily useful for look-up (how to find\nthis attestation if you already know the authority and artifact to be\nverified) and intent (which authority was this attestation intended to sign\nfor).",
            "id": "GrafeasV1beta1AttestationAttestation",
            "properties": {
                "eapGenericSignedAttestation": {
                    "$ref": "GrafeasV1beta1AttestationGenericSignedAttestation"
                },
                "eapKmsSignedAttestation": {
                    "$ref": "GrafeasV1beta1AttestationKmsSignedAttestation"
                },
                "genericSignedAttestation": {
                    "$ref": "GrafeasV1beta1AttestationGenericSignedAttestation"
                },
                "pgpSignedAttestation": {
                    "$ref": "GrafeasV1beta1AttestationPgpSignedAttestation",
                    "description": "A PGP signed attestation."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1AttestationDetails": {
            "description": "Details of an attestation occurrence.",
            "id": "GrafeasV1beta1AttestationDetails",
            "properties": {
                "attestation": {
                    "$ref": "GrafeasV1beta1AttestationAttestation",
                    "description": "Required. Attestation for the resource."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1AttestationGenericSignedAttestation": {
            "description": "An attestation wrapper that uses the Grafeas `Signature` message.\nThis attestation must define the `serialized_payload` that the `signatures`\nverify and any metadata necessary to interpret that plaintext.  The\nsignatures should always be over the `serialized_payload` bytestring.",
            "id": "GrafeasV1beta1AttestationGenericSignedAttestation",
            "properties": {
                "contentType": {
                    "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "SIMPLE_SIGNING_JSON"
                    ],
                    "enumDescriptions": [
                        "`ContentType` is not set.",
                        "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted in `plaintext` is a JSON blob conforming to the\nlinked schema."
                    ],
                    "type": "string"
                },
                "serializedPayload": {
                    "description": "The serialized payload that is verified by one or more `signatures`.\nThe encoding and semantic meaning of this payload must match what is set in\n`content_type`.",
                    "format": "byte",
                    "type": "string"
                },
                "signatures": {
                    "description": "One or more signatures over `serialized_payload`.  Verifier implementations\nshould consider this attestation message verified if at least one\n`signature` verifies `serialized_payload`.  See `Signature` in common.proto\nfor more details on signature structure and verification.",
                    "items": {
                        "$ref": "GrafeasV1beta1Signature"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1AttestationKmsSignedAttestation": {
            "description": "An attestation wrapper with a Cloud KMS created signature.",
            "id": "GrafeasV1beta1AttestationKmsSignedAttestation",
            "properties": {
                "contentType": {
                    "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "SIMPLE_SIGNING_JSON"
                    ],
                    "enumDescriptions": [
                        "`ContentType` is not set.",
                        "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."
                    ],
                    "type": "string"
                },
                "kmsCryptoKeyVersionName": {
                    "description": "Cloud KMS resource name that refers to the specific version of a CryptoKey\nthat was used to create the signature. e.g\n\"projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*\"",
                    "type": "string"
                },
                "plaintext": {
                    "description": "The plaintext that was signed by Cloud KMS. Since Cloud KMS signs a\nprecomputed digest, this must be the plaintext that was hashed, not the\nresulting hash. This field is required to verify the signature; without it,\nthe verifier could confirm that the signature was valid, but it wouldn't\nknow what was actually signed.",
                    "type": "string"
                },
                "signature": {
                    "description": "Signature returned by Cloud KMS asymmetric sign method. The signature is\n\"DETACHED\" so the exact payload that was signed must be included in the\n'plaintext' field in this message.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1AttestationPgpSignedAttestation": {
            "description": "An attestation wrapper with a PGP-compatible signature. This message only\nsupports `ATTACHED` signatures, where the payload that is signed is included\nalongside the signature itself in the same file.",
            "id": "GrafeasV1beta1AttestationPgpSignedAttestation",
            "properties": {
                "contentType": {
                    "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "SIMPLE_SIGNING_JSON"
                    ],
                    "enumDescriptions": [
                        "`ContentType` is not set.",
                        "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."
                    ],
                    "type": "string"
                },
                "pgpKeyId": {
                    "description": "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexidecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.",
                    "type": "string"
                },
                "signature": {
                    "description": "Required. The raw content of the signature, as output by GNU Privacy Guard\n(GPG) or equivalent. Since this message only supports attached signatures,\nthe payload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1BuildDetails": {
            "description": "Details of a build occurrence.",
            "id": "GrafeasV1beta1BuildDetails",
            "properties": {
                "provenance": {
                    "$ref": "GrafeasV1beta1ProvenanceBuildProvenance",
                    "description": "Required. The actual provenance for the build."
                },
                "provenanceBytes": {
                    "description": "Serialized JSON representation of the provenance, used in generating the\nbuild signature in the corresponding build note. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1DeploymentDeployment": {
            "description": "The period during which some deployable was active in a runtime.",
            "id": "GrafeasV1beta1DeploymentDeployment",
            "properties": {
                "address": {
                    "description": "Address of the runtime element hosting this deployment.",
                    "type": "string"
                },
                "config": {
                    "description": "Configuration used to create this deployment.",
                    "type": "string"
                },
                "deployTime": {
                    "description": "Required. Beginning of the lifetime of this deployment.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "platform": {
                    "description": "Platform hosting this deployment.",
                    "enum": [
                        "PLATFORM_UNSPECIFIED",
                        "GKE",
                        "FLEX",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "Google Container Engine.",
                        "Google App Engine: Flexible Environment.",
                        "Custom user-defined platform."
                    ],
                    "type": "string"
                },
                "resourceUri": {
                    "description": "Output only. Resource URI for the artifact being deployed taken from\nthe deployable field with the same name.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "undeployTime": {
                    "description": "End of the lifetime of this deployment.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "userEmail": {
                    "description": "Identity of the user that triggered this deployment.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1DeploymentDetails": {
            "description": "Details of a deployment occurrence.",
            "id": "GrafeasV1beta1DeploymentDetails",
            "properties": {
                "deployment": {
                    "$ref": "GrafeasV1beta1DeploymentDeployment",
                    "description": "Required. Deployment history for the resource."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1DiscoveryDetails": {
            "description": "Details of a discovery occurrence.",
            "id": "GrafeasV1beta1DiscoveryDetails",
            "properties": {
                "discovered": {
                    "$ref": "GrafeasV1beta1DiscoveryDiscovered",
                    "description": "Required. Analysis status for the discovered resource."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1DiscoveryDiscovered": {
            "description": "Provides information about the analysis status of a discovered resource.",
            "id": "GrafeasV1beta1DiscoveryDiscovered",
            "properties": {
                "analysisStatus": {
                    "description": "The status of discovery for the resource.",
                    "enum": [
                        "ANALYSIS_STATUS_UNSPECIFIED",
                        "PENDING",
                        "SCANNING",
                        "FINISHED_SUCCESS",
                        "FINISHED_FAILED",
                        "FINISHED_UNSUPPORTED"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "Resource is known but no action has been taken yet.",
                        "Resource is being analyzed.",
                        "Analysis has finished successfully.",
                        "Analysis has finished unsuccessfully, the analysis itself is in a bad\nstate.",
                        "The resource is known not to be supported"
                    ],
                    "type": "string"
                },
                "analysisStatusError": {
                    "$ref": "GoogleRpcStatus",
                    "description": "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage is output only and\npopulated by the API."
                },
                "continuousAnalysis": {
                    "description": "Whether the resource is continuously analyzed.",
                    "enum": [
                        "CONTINUOUS_ANALYSIS_UNSPECIFIED",
                        "ACTIVE",
                        "INACTIVE"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "The resource is continuously analyzed.",
                        "The resource is ignored for continuous analysis."
                    ],
                    "type": "string"
                },
                "lastAnalysisTime": {
                    "description": "The last time continuous analysis was done for this resource.\nDeprecated, do not use.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ImageDerived": {
            "description": "Derived describes the derived image portion (Occurrence) of the DockerImage\nrelationship. This image would be produced from a Dockerfile with FROM\n<DockerImage.Basis in attached Note>.",
            "id": "GrafeasV1beta1ImageDerived",
            "properties": {
                "baseResourceUrl": {
                    "description": "Output only. This contains the base image URL for the derived image\noccurrence.",
                    "type": "string"
                },
                "distance": {
                    "description": "Output only. The number of layers by which this image differs from the\nassociated image basis.",
                    "format": "int32",
                    "type": "integer"
                },
                "fingerprint": {
                    "$ref": "GrafeasV1beta1ImageFingerprint",
                    "description": "Required. The fingerprint of the derived image."
                },
                "layerInfo": {
                    "description": "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.",
                    "items": {
                        "$ref": "GrafeasV1beta1ImageLayer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ImageDetails": {
            "description": "Details of an image occurrence.",
            "id": "GrafeasV1beta1ImageDetails",
            "properties": {
                "derivedImage": {
                    "$ref": "GrafeasV1beta1ImageDerived",
                    "description": "Required. Immutable. The child image derived from the base image."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ImageFingerprint": {
            "description": "A set of properties that uniquely identify a given Docker image.",
            "id": "GrafeasV1beta1ImageFingerprint",
            "properties": {
                "v1Name": {
                    "description": "Required. The layer ID of the final layer in the Docker image's v1\nrepresentation.",
                    "type": "string"
                },
                "v2Blob": {
                    "description": "Required. The ordered list of v2 blobs that represent a given image.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "v2Name": {
                    "description": "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ImageLayer": {
            "description": "Layer holds metadata specific to a layer of a Docker image.",
            "id": "GrafeasV1beta1ImageLayer",
            "properties": {
                "arguments": {
                    "description": "The recovered arguments to the Dockerfile directive.",
                    "type": "string"
                },
                "directive": {
                    "description": "Required. The recovered Dockerfile directive used to construct this layer.",
                    "enum": [
                        "DIRECTIVE_UNSPECIFIED",
                        "MAINTAINER",
                        "RUN",
                        "CMD",
                        "LABEL",
                        "EXPOSE",
                        "ENV",
                        "ADD",
                        "COPY",
                        "ENTRYPOINT",
                        "VOLUME",
                        "USER",
                        "WORKDIR",
                        "ARG",
                        "ONBUILD",
                        "STOPSIGNAL",
                        "HEALTHCHECK",
                        "SHELL"
                    ],
                    "enumDescriptions": [
                        "Default value for unsupported/missing directive.",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/",
                        "https://docs.docker.com/engine/reference/builder/"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1Occurrence": {
            "description": "An instance of an analysis type that has been found on a resource.",
            "id": "GrafeasV1beta1Occurrence",
            "properties": {
                "attestation": {
                    "$ref": "GrafeasV1beta1AttestationDetails",
                    "description": "Describes an attestation of an artifact."
                },
                "build": {
                    "$ref": "GrafeasV1beta1BuildDetails",
                    "description": "Describes a verifiable build."
                },
                "createTime": {
                    "description": "Output only. The time this occurrence was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "deployment": {
                    "$ref": "GrafeasV1beta1DeploymentDetails",
                    "description": "Describes the deployment of an artifact on a runtime."
                },
                "derivedImage": {
                    "$ref": "GrafeasV1beta1ImageDetails",
                    "description": "Describes how this resource derives from the basis in the associated\nnote."
                },
                "discovered": {
                    "$ref": "GrafeasV1beta1DiscoveryDetails",
                    "description": "Describes when a resource was discovered."
                },
                "installation": {
                    "$ref": "GrafeasV1beta1PackageDetails",
                    "description": "Describes the installation of a package on the linked resource."
                },
                "kind": {
                    "description": "Output only. This explicitly denotes which of the occurrence details are\nspecified. This field can be used as a filter in list requests.",
                    "enum": [
                        "NOTE_KIND_UNSPECIFIED",
                        "VULNERABILITY",
                        "BUILD",
                        "IMAGE",
                        "PACKAGE",
                        "DEPLOYMENT",
                        "DISCOVERY",
                        "ATTESTATION"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "The note and occurrence represent a package vulnerability.",
                        "The note and occurrence assert build provenance.",
                        "This represents an image basis relationship.",
                        "This represents a package installed via a package manager.",
                        "The note and occurrence track deployment events.",
                        "The note and occurrence track the initial discovery status of a resource.",
                        "This represents a logical \"role\" that can attest to artifacts."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Output only. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                    "type": "string"
                },
                "noteName": {
                    "description": "Required. Immutable. The analysis note associated with this occurrence, in\nthe form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be\nused as a filter in list requests.",
                    "type": "string"
                },
                "remediation": {
                    "description": "A description of actions that can be taken to remedy the note.",
                    "type": "string"
                },
                "resource": {
                    "$ref": "GrafeasV1beta1Resource",
                    "description": "Required. Immutable. The resource for which the occurrence applies."
                },
                "updateTime": {
                    "description": "Output only. The time this occurrence was last updated.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "vulnerability": {
                    "$ref": "GrafeasV1beta1VulnerabilityDetails",
                    "description": "Describes a security vulnerability."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1PackageDetails": {
            "description": "Details of a package occurrence.",
            "id": "GrafeasV1beta1PackageDetails",
            "properties": {
                "installation": {
                    "$ref": "GrafeasV1beta1PackageInstallation",
                    "description": "Required. Where the package was installed."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1PackageInstallation": {
            "description": "This represents how a particular software package may be installed on a\nsystem.",
            "id": "GrafeasV1beta1PackageInstallation",
            "properties": {
                "location": {
                    "description": "Required. All of the places within the filesystem versions of this package\nhave been found.",
                    "items": {
                        "$ref": "GrafeasV1beta1PackageLocation"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Output only. The name of the installed package.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1PackageLocation": {
            "description": "An occurrence of a particular package installation found within a system's\nfilesystem. E.g., glibc was found in `/var/lib/dpkg/status`.",
            "id": "GrafeasV1beta1PackageLocation",
            "properties": {
                "cpeUri": {
                    "description": "Required. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.",
                    "type": "string"
                },
                "path": {
                    "description": "The path from which we gathered that this package/version is installed.",
                    "type": "string"
                },
                "version": {
                    "$ref": "GrafeasV1beta1PackageVersion",
                    "description": "The version installed at this location."
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1PackageVersion": {
            "description": "Version contains structured information about the version of a package.",
            "id": "GrafeasV1beta1PackageVersion",
            "properties": {
                "epoch": {
                    "description": "Used to correct mistakes in the version numbering scheme.",
                    "format": "int32",
                    "type": "integer"
                },
                "kind": {
                    "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal\nversions.",
                    "enum": [
                        "VERSION_KIND_UNSPECIFIED",
                        "NORMAL",
                        "MINIMUM",
                        "MAXIMUM"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "A standard package version.",
                        "A special version representing negative infinity.",
                        "A special version representing positive infinity."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Required only when version kind is NORMAL. The main part of the version\nname.",
                    "type": "string"
                },
                "revision": {
                    "description": "The iteration of the package build from the above version.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ProvenanceArtifact": {
            "description": "Artifact describes a build product.",
            "id": "GrafeasV1beta1ProvenanceArtifact",
            "properties": {
                "checksum": {
                    "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.",
                    "type": "string"
                },
                "id": {
                    "description": "Artifact ID, if any; for container images, this will be a URL by digest\nlike `gcr.io/projectID/imagename@sha256:123456`.",
                    "type": "string"
                },
                "names": {
                    "description": "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ProvenanceBuildProvenance": {
            "description": "Provenance of a build. Contains all information needed to verify the full\ndetails about the build from source to completion.",
            "id": "GrafeasV1beta1ProvenanceBuildProvenance",
            "properties": {
                "buildOptions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details.",
                    "type": "object"
                },
                "builderVersion": {
                    "description": "Version string of the builder at the time this build was executed.",
                    "type": "string"
                },
                "builtArtifacts": {
                    "description": "Output of the build.",
                    "items": {
                        "$ref": "GrafeasV1beta1ProvenanceArtifact"
                    },
                    "type": "array"
                },
                "commands": {
                    "description": "Commands requested by the build.",
                    "items": {
                        "$ref": "GrafeasV1beta1ProvenanceCommand"
                    },
                    "type": "array"
                },
                "createTime": {
                    "description": "Time at which the build was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "creator": {
                    "description": "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time.",
                    "type": "string"
                },
                "endTime": {
                    "description": "Time at which execution of the build was finished.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "id": {
                    "description": "Required. Unique identifier of the build.",
                    "type": "string"
                },
                "logsUri": {
                    "description": "URI where any logs for this provenance were written.",
                    "type": "string"
                },
                "projectId": {
                    "description": "ID of the project.",
                    "type": "string"
                },
                "sourceProvenance": {
                    "$ref": "GrafeasV1beta1ProvenanceSource",
                    "description": "Details of the Source input to the build."
                },
                "startTime": {
                    "description": "Time at which execution of the build was started.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "triggerId": {
                    "description": "Trigger identifier if the build was triggered automatically; empty if not.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ProvenanceCommand": {
            "description": "Command describes a step performed as part of the build pipeline.",
            "id": "GrafeasV1beta1ProvenanceCommand",
            "properties": {
                "args": {
                    "description": "Command-line arguments used when executing this command.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dir": {
                    "description": "Working directory (relative to project source root) used when running this\ncommand.",
                    "type": "string"
                },
                "env": {
                    "description": "Environment variables set before running this command.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Optional unique identifier for this command, used in wait_for to reference\nthis command as a dependency.",
                    "type": "string"
                },
                "name": {
                    "description": "Required. Name of the command, as presented on the command line, or if the\ncommand is packaged as a Docker container, as presented to `docker pull`.",
                    "type": "string"
                },
                "waitFor": {
                    "description": "The ID(s) of the command(s) that this command depends on.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ProvenanceFileHashes": {
            "description": "Container message for hashes of byte content of files, used in source\nmessages to verify integrity of source input to the build.",
            "id": "GrafeasV1beta1ProvenanceFileHashes",
            "properties": {
                "fileHash": {
                    "description": "Required. Collection of file hashes.",
                    "items": {
                        "$ref": "GrafeasV1beta1ProvenanceHash"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ProvenanceHash": {
            "description": "Container message for hash values.",
            "id": "GrafeasV1beta1ProvenanceHash",
            "properties": {
                "type": {
                    "description": "Required. The type of hash that was performed.",
                    "enum": [
                        "HASH_TYPE_UNSPECIFIED",
                        "SHA256",
                        "MD5",
                        "PSHA2"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "A SHA-256 hash.",
                        "An md5 hash. This is a legacy option for Google internal systems that\nalready rely on it and should not be used in any new code.",
                        "A psha2 hash. This option is for Google internal systems; there is no\nplan to publicly release psha2."
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "Required. The hash value.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1ProvenanceSource": {
            "description": "Source describes the location of the source used for the build.",
            "id": "GrafeasV1beta1ProvenanceSource",
            "properties": {
                "additionalContexts": {
                    "description": "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.",
                    "items": {
                        "$ref": "GrafeasV1beta1SourceSourceContext"
                    },
                    "type": "array"
                },
                "artifactStorageSourceUri": {
                    "description": "If provided, the input binary artifacts for the build came from this\nlocation.",
                    "type": "string"
                },
                "context": {
                    "$ref": "GrafeasV1beta1SourceSourceContext",
                    "description": "If provided, the source code used for the build came from this location."
                },
                "fileHashes": {
                    "additionalProperties": {
                        "$ref": "GrafeasV1beta1ProvenanceFileHashes"
                    },
                    "description": "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1RelatedUrl": {
            "description": "Metadata for any related URL information.",
            "id": "GrafeasV1beta1RelatedUrl",
            "properties": {
                "label": {
                    "description": "Label to describe usage of the URL.",
                    "type": "string"
                },
                "url": {
                    "description": "Specific URL associated with the resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1Resource": {
            "description": "An entity that can have metadata. For example, a Docker image.",
            "id": "GrafeasV1beta1Resource",
            "properties": {
                "contentHash": {
                    "$ref": "GrafeasV1beta1ProvenanceHash",
                    "description": "Deprecated, do not use. Use uri instead.\n\nThe hash of the resource content. For example, the Docker digest."
                },
                "name": {
                    "description": "Deprecated, do not use. Use uri instead.\n\nThe name of the resource. For example, the name of a Docker image -\n\"Debian\".",
                    "type": "string"
                },
                "uri": {
                    "description": "Required. The unique URI of the resource. For example,\n`https://gcr.io/project/image@sha256:foo` for a Docker image.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1Signature": {
            "description": "Verifiers (e.g. Kritis implementations) MUST verify signatures\nwith respect to the trust anchors defined in policy (e.g. a Kritis policy).\nTypically this means that the verifier has been configured with a map from\n`public_key_id` to public key material (and any required parameters, e.g.\nsigning algorithm).\n\nIn particular, verification implementations MUST NOT treat the signature\n`public_key_id` as anything more than a key lookup hint. The `public_key_id`\nDOES NOT validate or authenticate a public key; it only provides a mechanism\nfor quickly selecting a public key ALREADY CONFIGURED on the verifier through\na trusted channel. Verification implementations MUST reject signatures in any\nof the following circumstances:\n  * The `public_key_id` is not recognized by the verifier.\n  * The public key that `public_key_id` refers to does not verify the\n    signature with respect to the payload.\n\nThe `signature` contents SHOULD NOT be \"attached\" (where the payload is\nincluded with the serialized `signature` bytes). Verifiers MUST ignore any\n\"attached\" payload and only verify signatures with respect to explicitly\nprovided payload (e.g. a `payload` field on the proto message that holds\nthis Signature, or the canonical serialization of the proto message that\nholds this signature).",
            "id": "GrafeasV1beta1Signature",
            "properties": {
                "publicKeyId": {
                    "description": "The identifier for the public key that verifies this signature.\n  * The `public_key_id` is required.\n  * The `public_key_id` MUST be an RFC3986 conformant URI.\n  * When possible, the `public_key_id` SHOULD be an immutable reference,\n    such as a cryptographic digest.\n\nExamples of valid `public_key_id`s:\n\nOpenPGP V4 public key fingerprint:\n  * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\"\nSee https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr for more\ndetails on this scheme.\n\nRFC6920 digest-named SubjectPublicKeyInfo (digest of the DER\nserialization):\n  * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\"\n  * \"nih:///sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\"",
                    "type": "string"
                },
                "signature": {
                    "description": "The content of the signature, an opaque bytestring.\nThe payload that this signature verifies MUST be unambiguously provided\nwith the Signature during verification. A wrapper message might provide\nthe payload explicitly. Alternatively, a message might have a canonical\nserialization that can always be unambiguously computed to derive the\npayload.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1SourceAliasContext": {
            "description": "An alias to a repo revision.",
            "id": "GrafeasV1beta1SourceAliasContext",
            "properties": {
                "kind": {
                    "description": "The alias kind.",
                    "enum": [
                        "KIND_UNSPECIFIED",
                        "FIXED",
                        "MOVABLE",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "Git tag.",
                        "Git branch.",
                        "Used to specify non-standard aliases. For example, if a Git repo has a\nref named \"refs/foo/bar\"."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The alias name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1SourceCloudRepoSourceContext": {
            "description": "A CloudRepoSourceContext denotes a particular revision in a Google Cloud\nSource Repo.",
            "id": "GrafeasV1beta1SourceCloudRepoSourceContext",
            "properties": {
                "aliasContext": {
                    "$ref": "GrafeasV1beta1SourceAliasContext",
                    "description": "An alias, which may be a branch or tag."
                },
                "repoId": {
                    "$ref": "GrafeasV1beta1SourceRepoId",
                    "description": "The ID of the repo."
                },
                "revisionId": {
                    "description": "A revision ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1SourceGerritSourceContext": {
            "description": "A SourceContext referring to a Gerrit project.",
            "id": "GrafeasV1beta1SourceGerritSourceContext",
            "properties": {
                "aliasContext": {
                    "$ref": "GrafeasV1beta1SourceAliasContext",
                    "description": "An alias, which may be a branch or tag."
                },
                "gerritProject": {
                    "description": "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is the\nhostURI/project.",
                    "type": "string"
                },
                "hostUri": {
                    "description": "The URI of a running Gerrit instance.",
                    "type": "string"
                },
                "revisionId": {
                    "description": "A revision (commit) ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1SourceGitSourceContext": {
            "description": "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g., GitHub).",
            "id": "GrafeasV1beta1SourceGitSourceContext",
            "properties": {
                "revisionId": {
                    "description": "Git commit hash.",
                    "type": "string"
                },
                "url": {
                    "description": "Git repository URL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1SourceProjectRepoId": {
            "description": "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project.",
            "id": "GrafeasV1beta1SourceProjectRepoId",
            "properties": {
                "projectId": {
                    "description": "The ID of the project.",
                    "type": "string"
                },
                "repoName": {
                    "description": "The name of the repo. Leave empty for the default repo.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1SourceRepoId": {
            "description": "A unique identifier for a Cloud Repo.",
            "id": "GrafeasV1beta1SourceRepoId",
            "properties": {
                "projectRepoId": {
                    "$ref": "GrafeasV1beta1SourceProjectRepoId",
                    "description": "A combination of a project ID and a repo name."
                },
                "uid": {
                    "description": "A server-assigned, globally unique identifier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1SourceSourceContext": {
            "description": "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.",
            "id": "GrafeasV1beta1SourceSourceContext",
            "properties": {
                "cloudRepo": {
                    "$ref": "GrafeasV1beta1SourceCloudRepoSourceContext",
                    "description": "A SourceContext referring to a revision in a Google Cloud Source Repo."
                },
                "gerrit": {
                    "$ref": "GrafeasV1beta1SourceGerritSourceContext",
                    "description": "A SourceContext referring to a Gerrit project."
                },
                "git": {
                    "$ref": "GrafeasV1beta1SourceGitSourceContext",
                    "description": "A SourceContext referring to any third party Git repo (e.g., GitHub)."
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels with user defined metadata.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1VulnerabilityDetails": {
            "description": "Details of a vulnerability Occurrence.",
            "id": "GrafeasV1beta1VulnerabilityDetails",
            "properties": {
                "cvssScore": {
                    "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.",
                    "format": "float",
                    "type": "number"
                },
                "effectiveSeverity": {
                    "description": "The distro assigned severity for this vulnerability when it is\navailable, and note provider assigned severity when distro has not yet\nassigned a severity for this vulnerability.",
                    "enum": [
                        "SEVERITY_UNSPECIFIED",
                        "MINIMAL",
                        "LOW",
                        "MEDIUM",
                        "HIGH",
                        "CRITICAL"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "Minimal severity.",
                        "Low severity.",
                        "Medium severity.",
                        "High severity.",
                        "Critical severity."
                    ],
                    "type": "string"
                },
                "longDescription": {
                    "description": "Output only. A detailed description of this vulnerability.",
                    "type": "string"
                },
                "packageIssue": {
                    "description": "Required. The set of affected locations and their fixes (if available)\nwithin the associated resource.",
                    "items": {
                        "$ref": "GrafeasV1beta1VulnerabilityPackageIssue"
                    },
                    "type": "array"
                },
                "relatedUrls": {
                    "description": "Output only. URLs related to this vulnerability.",
                    "items": {
                        "$ref": "GrafeasV1beta1RelatedUrl"
                    },
                    "type": "array"
                },
                "severity": {
                    "description": "Output only. The note provider assigned Severity of the vulnerability.",
                    "enum": [
                        "SEVERITY_UNSPECIFIED",
                        "MINIMAL",
                        "LOW",
                        "MEDIUM",
                        "HIGH",
                        "CRITICAL"
                    ],
                    "enumDescriptions": [
                        "Unknown.",
                        "Minimal severity.",
                        "Low severity.",
                        "Medium severity.",
                        "High severity.",
                        "Critical severity."
                    ],
                    "type": "string"
                },
                "shortDescription": {
                    "description": "Output only. A one sentence description of this vulnerability.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of package; whether native or non native(ruby gems, node.js\npackages etc)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1VulnerabilityPackageIssue": {
            "description": "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).",
            "id": "GrafeasV1beta1VulnerabilityPackageIssue",
            "properties": {
                "affectedLocation": {
                    "$ref": "GrafeasV1beta1VulnerabilityVulnerabilityLocation",
                    "description": "Required. The location of the vulnerability."
                },
                "fixedLocation": {
                    "$ref": "GrafeasV1beta1VulnerabilityVulnerabilityLocation",
                    "description": "The location of the available fix for vulnerability."
                },
                "severityName": {
                    "description": "Deprecated, use Details.effective_severity instead\nThe severity (e.g., distro assigned severity) for this vulnerability.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GrafeasV1beta1VulnerabilityVulnerabilityLocation": {
            "description": "The location of the vulnerability.",
            "id": "GrafeasV1beta1VulnerabilityVulnerabilityLocation",
            "properties": {
                "cpeUri": {
                    "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.",
                    "type": "string"
                },
                "package": {
                    "description": "Required. The package being described.",
                    "type": "string"
                },
                "version": {
                    "$ref": "GrafeasV1beta1PackageVersion",
                    "description": "Required. The version of the package being described."
                }
            },
            "type": "object"
        },
        "TechIamPolicyName": {
            "id": "TechIamPolicyName",
            "properties": {
                "id": {
                    "type": "string"
                },
                "region": {
                    "description": "For Cloud IAM:\nThe location of the Policy.\nMust be empty or \"global\" for Policies owned by global IAM.  Must name a\nregion from prodspec/cloud-iam-cloudspec for Regional IAM Policies, see\nhttp://go/iam-faq#where-is-iam-currently-deployed.\n\nFor Local IAM:\nThis field should be set to \"local\".",
                    "type": "string"
                },
                "type": {
                    "description": "Valid values for type might be 'gce', 'gcs', 'project', 'account' etc.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Cloud Commerce Verification Service API (Autopush)",
    "version": "v0",
    "version_module": true
}