{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/plus.me": {
                    "description": "Associate you with your personal info on Google"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://daily-2-notifications-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Notifications",
    "description": "Google Notifications Private API is an internal (0p/1p) API for accessing Google Notifications (http://goto.google.com/chime).",
    "discoveryVersion": "v1",
    "documentationLink": "http://goto.google.com/chime",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "daily_2_notifications_pa_sandbox:v1",
    "kind": "discovery#restDescription",
    "name": "daily_2_notifications_pa_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "createusersubscription": {
            "methods": {
                "create": {
                    "description": "Subscribes the user to a topic.",
                    "flatPath": "v1/createusersubscription",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.createusersubscription.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/createusersubscription",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsCreateUserSubscriptionRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsCreateUserSubscriptionResponse"
                    }
                }
            }
        },
        "gmscore": {
            "resources": {
                "legacy": {
                    "methods": {
                        "fetchbyidentifier": {
                            "description": "Fetch notifications by identifier from GUNS.",
                            "flatPath": "v1/gmscore/legacy/fetchbyidentifier",
                            "httpMethod": "POST",
                            "id": "daily_2_notifications_pa_sandbox.gmscore.legacy.fetchbyidentifier",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/gmscore/legacy/fetchbyidentifier",
                            "request": {
                                "$ref": "AppsPeopleOzInternalApi__GmsGnotsFetchByIdentifierRequest"
                            },
                            "response": {
                                "$ref": "AppsPeopleOzInternalApi__GmsGnotsFetchByIdentifierResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plus.me"
                            ]
                        },
                        "setreadstates": {
                            "description": "Set ReadState of a notification.",
                            "flatPath": "v1/gmscore/legacy/setreadstates",
                            "httpMethod": "POST",
                            "id": "daily_2_notifications_pa_sandbox.gmscore.legacy.setreadstates",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/gmscore/legacy/setreadstates",
                            "request": {
                                "$ref": "AppsPeopleOzInternalApi__GmsGnotsSetReadStatesRequest"
                            },
                            "response": {
                                "$ref": "AppsPeopleOzInternalApi__GmsGnotsSetReadStatesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plus.me"
                            ]
                        }
                    }
                }
            }
        },
        "v1": {
            "methods": {
                "acknowledgedeliveries": {
                    "description": "Acknowledges a delivery without doing a fetch or update.",
                    "flatPath": "v1/acknowledgedeliveries",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.acknowledgedeliveries",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/acknowledgedeliveries",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsAcknowledgeDeliveriesRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsAcknowledgeDeliveriesResponse"
                    }
                },
                "batchupdatethreadstate": {
                    "description": "Batch version of UpdateThreadState RPC.",
                    "flatPath": "v1/batchupdatethreadstate",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.batchupdatethreadstate",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/batchupdatethreadstate",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsBatchUpdateThreadStateRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsBatchUpdateThreadStateResponse"
                    }
                },
                "countthreads": {
                    "description": "Counts the number of notification threads for a client.",
                    "flatPath": "v1/countthreads",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.countthreads",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/countthreads",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsCountThreadsRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsCountThreadsResponse"
                    }
                },
                "deleteusersubscription": {
                    "description": "Unsubscribes the user from a topic.",
                    "flatPath": "v1/deleteusersubscription",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.deleteusersubscription",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/deleteusersubscription",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsDeleteUserSubscriptionRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsDeleteUserSubscriptionResponse"
                    }
                },
                "demonotifytopic": {
                    "description": "NotifyTopic RPC used in the Chime Chat Demo (http://chime/chat).",
                    "flatPath": "v1/demonotifytopic",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.demonotifytopic",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/demonotifytopic",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsDemoNotifyTopicRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsDemoNotifyTopicResponse"
                    }
                },
                "fetchMultiUserBadgeCount": {
                    "description": "Fetches the badge count for all users on the target.",
                    "flatPath": "v1/FetchMultiUserBadgeCount",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchMultiUserBadgeCount",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/FetchMultiUserBadgeCount",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchMultiUserBadgeCountRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchMultiUserBadgeCountResponse"
                    }
                },
                "fetchlatestthreads": {
                    "description": "Fetches the latest notification threads for a client.",
                    "flatPath": "v1/fetchlatestthreads",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchlatestthreads",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchlatestthreads",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchLatestThreadsRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchLatestThreadsResponse"
                    }
                },
                "fetchstoredtargets": {
                    "description": "Fetches the stored targets for a client.",
                    "flatPath": "v1/fetchstoredtargets",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchstoredtargets",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchstoredtargets",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchStoredTargetsRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchStoredTargetsResponse"
                    }
                },
                "fetchtargetgrouppreferences": {
                    "description": "Fetches the target group preferences.",
                    "flatPath": "v1/fetchtargetgrouppreferences",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchtargetgrouppreferences",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchtargetgrouppreferences",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchTargetGroupPreferencesRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchTargetGroupPreferencesResponse"
                    }
                },
                "fetchtargetpreferences": {
                    "description": "Fetches the target preferences.",
                    "flatPath": "v1/fetchtargetpreferences",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchtargetpreferences",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchtargetpreferences",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchTargetPreferencesRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchTargetPreferencesResponse"
                    }
                },
                "fetchtargetpreferencesbytoken": {
                    "description": "Fetches the target preferences by token.",
                    "flatPath": "v1/fetchtargetpreferencesbytoken",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchtargetpreferencesbytoken",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchtargetpreferencesbytoken",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchTargetPreferencesByTokenRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchTargetPreferencesByTokenResponse"
                    }
                },
                "fetchthreadsbyid": {
                    "description": "Fetches the updated notification threads for a client.",
                    "flatPath": "v1/fetchthreadsbyid",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchthreadsbyid",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchthreadsbyid",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchThreadsByIdRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchThreadsByIdResponse"
                    }
                },
                "fetchupdatedthreads": {
                    "description": "Fetches the updated notification threads for a client.",
                    "flatPath": "v1/fetchupdatedthreads",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchupdatedthreads",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchupdatedthreads",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchUpdatedThreadsRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchUpdatedThreadsResponse"
                    }
                },
                "fetchuserpreferences": {
                    "description": "Fetches the user preferences.",
                    "flatPath": "v1/fetchuserpreferences",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchuserpreferences",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchuserpreferences",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchUserPreferencesRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchUserPreferencesResponse"
                    }
                },
                "fetchusersubscription": {
                    "description": "Fetches a user's subscriptions.",
                    "flatPath": "v1/fetchusersubscription",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchusersubscription",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchusersubscription",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchUserSubscriptionRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchUserSubscriptionResponse"
                    }
                },
                "fetchversion": {
                    "description": "Fetches the version of the latest notification for a client.",
                    "flatPath": "v1/fetchversion",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.fetchversion",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/fetchversion",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchVersionRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsFetchVersionResponse"
                    }
                },
                "multiLoginUpdate": {
                    "description": "Updates the set of Gaia users registered for a given target.",
                    "flatPath": "v1/MultiLoginUpdate",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.multiLoginUpdate",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/MultiLoginUpdate",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsMultiLoginUpdateRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsMultiLoginUpdateResponse"
                    }
                },
                "notifyself": {
                    "description": "Sends a notification to oneself.",
                    "flatPath": "v1/notifyself",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.notifyself",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/notifyself",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsNotifySelfRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsNotifySelfResponse"
                    }
                },
                "notifytarget": {
                    "description": "Sends a notification to target.",
                    "flatPath": "v1/notifytarget",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.notifytarget",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/notifytarget",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsNotifyTargetRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsNotifyTargetResponse"
                    }
                },
                "ping": {
                    "description": "Pings the service. This is for debugging/testing purpose.",
                    "flatPath": "v1/ping",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.ping",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/ping",
                    "request": {
                        "$ref": "GoogleInternalNotificationsV1__PingRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalNotificationsV1__PingResponse"
                    }
                },
                "removetarget": {
                    "description": "Removes a user's target, including its tokens and all additional data, for\na client.",
                    "flatPath": "v1/removetarget",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.removetarget",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/removetarget",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsRemoveTargetRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsRemoveTargetResponse"
                    }
                },
                "settargetgroupreferences": {
                    "description": "Sets the target group preferences.",
                    "flatPath": "v1/settargetgroupreferences",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.settargetgroupreferences",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/settargetgroupreferences",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsSetTargetGroupPreferencesRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsSetTargetGroupPreferencesResponse"
                    }
                },
                "settargetpreference": {
                    "description": "Sets the target preference.",
                    "flatPath": "v1/settargetpreference",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.settargetpreference",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/settargetpreference",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsSetTargetPreferenceRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsSetTargetPreferenceResponse"
                    }
                },
                "settargetpreferencebytoken": {
                    "description": "Sets the target preference by token.",
                    "flatPath": "v1/settargetpreferencebytoken",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.settargetpreferencebytoken",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/settargetpreferencebytoken",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsSetTargetPreferenceByTokenRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsSetTargetPreferenceByTokenResponse"
                    }
                },
                "setuserpreference": {
                    "description": "Sets the user preference.",
                    "flatPath": "v1/setuserpreference",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.setuserpreference",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/setuserpreference",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsSetUserPreferenceRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsSetUserPreferenceResponse"
                    }
                },
                "storetarget": {
                    "description": "Stores a user's target for a client with additional data. It will\noverwrite any previous data for the same target.",
                    "flatPath": "v1/storetarget",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.storetarget",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/storetarget",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsStoreTargetRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsStoreTargetResponse"
                    }
                },
                "updateallthreadstates": {
                    "description": "Updates state of all notifications threads.",
                    "flatPath": "v1/updateallthreadstates",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.updateallthreadstates",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/updateallthreadstates",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsUpdateAllThreadStatesRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsUpdateAllThreadStatesResponse"
                    }
                },
                "updatethreadstate": {
                    "description": "Updates state of notifications threads.",
                    "flatPath": "v1/updatethreadstate",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.updatethreadstate",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/updatethreadstate",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsUpdateThreadStateRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsUpdateThreadStateResponse"
                    }
                },
                "updatethreadstatebytoken": {
                    "description": "Updates the thread state given a token.",
                    "flatPath": "v1/updatethreadstatebytoken",
                    "httpMethod": "POST",
                    "id": "daily_2_notifications_pa_sandbox.updatethreadstatebytoken",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/updatethreadstatebytoken",
                    "request": {
                        "$ref": "NotificationsFrontendData__NotificationsUpdateThreadStateByTokenRequest"
                    },
                    "response": {
                        "$ref": "NotificationsFrontendData__NotificationsUpdateThreadStateByTokenResponse"
                    }
                }
            }
        }
    },
    "revision": "20190917",
    "rootUrl": "https://daily-2-notifications-pa.sandbox.googleapis.com/",
    "schemas": {
        "Abuseiam__Feature": {
            "id": "Abuseiam__Feature",
            "properties": {
                "booleanValue": {
                    "description": "Exactly one of the following should be filled in.",
                    "type": "boolean"
                },
                "doubleValue": {
                    "format": "double",
                    "type": "number"
                },
                "featureCount": {
                    "description": "Useful for applications that need to know how many times a specific feature\noccurs",
                    "format": "int64",
                    "type": "string"
                },
                "int64Value": {
                    "description": "Useful for timestamps, or for numerical features where it is\nhelpful for decision scripts to have exact values.",
                    "format": "int64",
                    "type": "string"
                },
                "integerValue": {
                    "description": "integer value field is deprecated and shall only be used for passing\nthe following features hardcoded in spamiam::SpamIAmMessage:\n    spamiam::OrkutSenderId\n    spamiam::OrkutPostnumReports\n    spamiam::BloggerNumComments\n    spamiam::BloggerNumCommentsByOthers\nAnother hard-coded spamiam feature is spamiam::BlogName, which can be\nspecified via string value.",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stringValue": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timestampSequence": {
                    "description": "This field should only be used to store a sequence of timestamps associated\nwith the feature.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Abuseiam__Metadata": {
            "description": "Metadata of a message or a chunk of a message.",
            "id": "Abuseiam__Metadata",
            "properties": {
                "botguardDecodeRequest": {
                    "$ref": "Botguard__DecodeRequest",
                    "description": "Data required to decode BotGuard response (including encoded BotGuard\nresponse). Decoding requries RPC to BotGuard server and it could be done in\nparallel with other AIA actions.\nFor more info about BotGuard: http://go/botguard.\nFor more info about BotGuard usage in OZ: http://go/botguardOfOZ."
                },
                "botguardResponse": {
                    "$ref": "Botguard__DecodeResponse",
                    "description": "Response from the BotGuard anti-automation system, if used for this\nmessage. See http://sites.google.com/a/google.com/botguard for more\ninformation."
                },
                "clientIp": {
                    "description": "IP address where the message is created/updated. dot-decimal notation is\nexpected, such as 100.2.3.4.",
                    "type": "string"
                },
                "containerUrl": {
                    "description": "Deprecated. If necessary, add a Feature to AbuseIAmMessage.feature.",
                    "type": "string"
                },
                "contentHash": {
                    "description": "Hash of the content of the message or chunk. The client should not set it.\nSee ccc/abuse/abuseiam/util/util.cc for more info how it is calculated.",
                    "format": "uint64",
                    "type": "string"
                },
                "deviceIdHash": {
                    "description": "Mobile Device ID. One way hash is required. The device id is expected to be\na hex encoded MD5 hash of the actual device id.",
                    "type": "string"
                },
                "headerOrder": {
                    "description": "Header order of the http request from client.\nThe header order is a string where each character in the string is an\nabbreviation of a field name in the header of the http request, and the\nordering of these characters represents the ordering of the fields\nwithin the request.  With each request the set of fields and their\nordering within the request may change.\nHeader order field abbreviations and names:\n        A accept\n        C cookie\n        E accept-encoding\n        F x-forwarded-for\n        H host\n        I if-modified-since\n        K keep-alive\n        L accept-language\n        N connection\n        R referer\n        S accept-charset\n        U user-agent\n        V via\nExample header order: ARLEUHNKC\n\nThis is an optional field that is send to AbuseIAm to help fighting spam.\nDetails about the header order is here:\nhttps://cs.corp.google.com/p#google3/logs/gws/gwslog.proto&q=headerorder&l=1175",
                    "type": "string"
                },
                "networkId": {
                    "description": "Mobile Network ID - Identifies the network the mobile device is operating\non.",
                    "type": "string"
                },
                "oauthTokenTimestampMicros": {
                    "description": "Timestamp(in micros) at which the last OAuth Token was issued. This will\nbe used by content that comes from APIs and will typically be used to\nprevent replay attacks.",
                    "format": "int64",
                    "type": "string"
                },
                "os": {
                    "description": "Contains the operating system of the client. Typically used by mobile\nclients to specific the mobile OS.",
                    "type": "string"
                },
                "source": {
                    "description": "Where does the request come from? e.g. gmail, webspam, aol, etc.\nThe source is a unique identifier for a service that calls AbuseIAm.",
                    "type": "string"
                },
                "timestampMicros": {
                    "description": "The time when the user created the current version of the content. In other\nwords, the last time this content is modified by the user.\nNote: a client should try its best to fill this field whenever a content is\nsent to AbuseIAm, both in ClassifyMessage RPC and as a response to\nRetrieveMessage RPC.",
                    "format": "int64",
                    "type": "string"
                },
                "userAgent": {
                    "type": "string"
                },
                "userKey": {
                    "$ref": "Abuseiam__UserKey"
                }
            },
            "type": "object"
        },
        "Abuseiam__UserKey": {
            "description": "All users are identified by a user (service, id) tuple. The\nservice field is used to guarantee uniqueness over services. It is\nessentially the same proto defined in kansas/rpc/client.proto,\nbut proto2 cannot depend on proto1 in proto_library.\n\nFor gaia user, the id shall be a hex value. More info is availabe at:\n https://sites.google.com/a/google.com/kansas/Home/kansas-client-documentation/kansas-developers-guide\nNote that we prefer hex without prefix padding of 0s, such as f48eaa2,\ninstead of 000000000f48eaa2.",
            "id": "Abuseiam__UserKey",
            "properties": {
                "id": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdsLogs__EncryptedMessageProto": {
            "id": "AdsLogs__EncryptedMessageProto",
            "properties": {
                "decrypterPublicKeyHash": {
                    "description": "An optional 4-byte hash of the decrypter's public key used during the key\nexchange.",
                    "items": {
                        "format": "uint32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "encryptedMessage": {
                    "description": "Encrypted logs data. The data could be encrypted multiple times according\nto encryption reasons and the encryption methods and order could be\nderived from them. If this message is encrypted using public key\nencryption, then the symmetric key(s) used to encrypt the message will be\ngiven below.",
                    "format": "byte",
                    "type": "string"
                },
                "encryptedSymmetricKey": {
                    "description": "The encrypted symmetric keys used to encrypt the above message, assuming\nthis message was encrypted using public key encryption. Since we currently\nonly have one encryption reason, this field is expected to have only one\nvalue. We define it as repeated, however, to later support multi-encryption\nuse cases. If this message has been encrypted using ECDH then the\nlogger_public_key field will be used to perform the key exchange and this\nfield will be left blank.",
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "encryptionReasons": {
                    "description": "The reasons why this message was encrypted. Since we currenly only have one\nencryption reason, this field is expected to have only one value. We define\nit as repeated, however, to later support multi-encryption use cases.",
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "ENCRYPTION_REASON_ADSPAM_PLOGS",
                            "ENCRYPTION_REASON_ADSPAM_F1",
                            "ENCRYPTION_REASON_BRAND_METRICS_SEARCH_LIFT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "keyDerivationSalt": {
                    "description": "A value for randomizing the key derivation function used to derive the\nsecret key. This is only set in cases where the event_id is not used as a\nnonce.",
                    "format": "uint64",
                    "type": "string"
                },
                "loggerPublicKey": {
                    "description": "The elliptic curve public key used by the logging process to create a\nshared secret using elliptic curve Diffie\u2013Hellman (ECDH) key exchange. The\nkey is represented as an (x,y) point on an elliptic curve in compressed\npoints format. If this field is set, then encrypted_symmetric_key should\nnot be used.",
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AdsSpam_ChefbotLeads_DefinedGlobalProperties": {
            "id": "AdsSpam_ChefbotLeads_DefinedGlobalProperties",
            "properties": {
                "proxIcecandidF": {
                    "enum": [
                        "PROPERTY_NOT_COLLECTED",
                        "PROPERTY_UNDEFINED",
                        "PROPERTY_DEFINED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "proxIcesesF": {
                    "enum": [
                        "PROPERTY_NOT_COLLECTED",
                        "PROPERTY_UNDEFINED",
                        "PROPERTY_DEFINED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "realIcecandidF": {
                    "enum": [
                        "PROPERTY_NOT_COLLECTED",
                        "PROPERTY_UNDEFINED",
                        "PROPERTY_DEFINED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "realIcesesF": {
                    "enum": [
                        "PROPERTY_NOT_COLLECTED",
                        "PROPERTY_UNDEFINED",
                        "PROPERTY_DEFINED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "xDataCpucore": {
                    "enum": [
                        "PROPERTY_NOT_COLLECTED",
                        "PROPERTY_UNDEFINED",
                        "PROPERTY_DEFINED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdsSpam_ChefbotLeads_MockedFunctionGetters": {
            "id": "AdsSpam_ChefbotLeads_MockedFunctionGetters",
            "properties": {
                "navigatorHardwareconcurrency": {
                    "enum": [
                        "NOT_COLLECTED",
                        "UNDEFINED_OBJECT",
                        "UNDEFINED_GETTER",
                        "MOCKED_FUNCTION",
                        "NATIVE_FUNCTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "rtcicecandidateCandidate": {
                    "enum": [
                        "NOT_COLLECTED",
                        "UNDEFINED_OBJECT",
                        "UNDEFINED_GETTER",
                        "MOCKED_FUNCTION",
                        "NATIVE_FUNCTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "rtcsessiondescriptionSdp": {
                    "enum": [
                        "NOT_COLLECTED",
                        "UNDEFINED_OBJECT",
                        "UNDEFINED_GETTER",
                        "MOCKED_FUNCTION",
                        "NATIVE_FUNCTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdsSpam__BotGuardResponse": {
            "description": "This is a simplified BotGuard response which is only intended for\nlogging the botguard decode response in the CEM. It also helps decoupling\nchanges to the underlying internal BotGuard DecodeResponse proto from the\nfields that get exposed in the ClickEventMessage and it also adds support\nto AdSpam specific error codes which are specific to the implementation of\nBotGuard in ads.",
            "id": "AdsSpam__BotGuardResponse",
            "properties": {
                "botguardBypassToken": {
                    "description": "A boolean which indicates whether the bypass token was enabled. In this\ncase no signals are collected. The token avoids inevitable failures on\nbrowsers which cannot properly run BotGuard.",
                    "type": "boolean"
                },
                "botguardJsError": {
                    "description": "Error codes generated within the ad script which calls botguard challenge.\nThese error codes are defined in botguard_common.js",
                    "format": "int32",
                    "type": "integer"
                },
                "botguardSignal": {
                    "description": "This indicates the status of the botguard signal and follows the\nClickNumeric error codes semantics. It can be thought as any of the other\nnumerical signals and holds the value 1 whenever the botguard signal is\nenabled and present. In these situations, more information about the signal\ncan be obtained by looking at the fields below, namely:\n- botguard_js_error: Will hold any of the error in the client-side\n  integration of BotGuard.\n- reasons: Will hold any error in the decoding of the parameter.",
                    "format": "int32",
                    "type": "integer"
                },
                "embeddedIeMessage": {
                    "description": "An enum value which indicates the class of Embedded IE message that we\nreceived, such that translations of a given message will map to the same\nclass.",
                    "enum": [
                        "UNKNOWN_MESSAGE",
                        "PERMISSION_DENIED",
                        "ACCESS_IS_DENIED",
                        "A_SECURITY_PROBLEM_OCCURRED",
                        "INVALID_ARGUMENT",
                        "EMPTY_MESSAGE",
                        "UNSPECIFIED_ERROR",
                        "EXCEPTION_OCCURRED",
                        "UNKNOWN_NAME",
                        "URL_IS_INVALID",
                        "COULD_NOT_COMPLETE_THE_OPERATION",
                        "COULD_NOT_SET_BACKGROUND_COLOR",
                        "UNDEFINED",
                        "INVALID_PROCEDURE_CALL",
                        "SCRIPT_ERROR",
                        "THREAT_DETECTION",
                        "MYSTERIOUS_MESSAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "reasons": {
                    "description": "Reason codes are found in\ngoogle3/ccc/abuse/botguard/botguard.proto?q=enum.SuspiciousReason. Signals\nthat collect boolean values are often implemented here.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AdsSpam__ChefbotLeads": {
            "description": "Message containing collected chefbot properties.",
            "id": "AdsSpam__ChefbotLeads",
            "properties": {
                "definedGlobalProperties": {
                    "$ref": "AdsSpam_ChefbotLeads_DefinedGlobalProperties"
                },
                "mockedFunctionGetters": {
                    "$ref": "AdsSpam_ChefbotLeads_MockedFunctionGetters"
                }
            },
            "type": "object"
        },
        "AdsSpam__JavaScriptSignalCoordinate": {
            "description": "Message representing an (x,y) coordinate.",
            "id": "AdsSpam__JavaScriptSignalCoordinate",
            "properties": {
                "x": {
                    "format": "int32",
                    "type": "integer"
                },
                "y": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AdsSpam__JavascriptAdClickSignals": {
            "description": "LINT.IfChange\nClick-time signals\nhttp://sites/adspam-javascript-signals/javascript-signals",
            "id": "AdsSpam__JavascriptAdClickSignals",
            "properties": {
                "ancestorOriginsChain": {
                    "description": "Comma-separated list of iframe domains from the ancestorOrigins property.",
                    "type": "string"
                },
                "ancestorOriginsUndefined": {
                    "description": "Set if the ancestorOrigins property is undefined.",
                    "type": "boolean"
                },
                "angleDispersion": {
                    "description": "The 360 degree angle space is descretized intop 38 bins. The number of\nbins which have non-zero traversed distances are counted.",
                    "format": "int32",
                    "type": "integer"
                },
                "botguardResponse": {
                    "$ref": "AdsSpam__BotGuardResponse",
                    "description": "Extracted signals from the botguard response."
                },
                "buttonExpansionDelay": {
                    "description": "On a 1.5 click ad, the time between the first click (which may have\nexpanded the ad button) and the last click. In the case of only one click,\nthis will be 0.\nThis signal is never enabled in the clickstring, instead it is logged as\ndisabled whenever the signal is not present, and logged as if it were\nenabled whenever it is present.",
                    "format": "int32",
                    "type": "integer"
                },
                "callstackFrames": {
                    "description": "Number of callstack frames at click time.",
                    "format": "int32",
                    "type": "integer"
                },
                "chefbotLeads": {
                    "$ref": "AdsSpam__ChefbotLeads",
                    "description": "Status of chefbot properties."
                },
                "clickDuration": {
                    "description": "Duration of the click, from mousedown to onclick, in milliseconds,\nfor spam detection.",
                    "format": "int32",
                    "type": "integer"
                },
                "clickLocation": {
                    "description": "Code to indicate where in the creative the user clicked.\nNOTE: The following signal uses the ClickLocationCode\nenum in google3/ads/base/ad-enums.h for its error codes.",
                    "format": "int32",
                    "type": "integer"
                },
                "clickX": {
                    "description": "Pixel position of the click relative to the top-left of the ad,\nfor spam detection.",
                    "format": "int32",
                    "type": "integer"
                },
                "clickY": {
                    "format": "int32",
                    "type": "integer"
                },
                "devicePixelRatio": {
                    "description": "Describes the ratio of physical screen pixels to zoom-dependent CSS pixels.\nComputed as MIN(1000 * window.devicePixelRatio, 65535)",
                    "format": "int32",
                    "type": "integer"
                },
                "documentFocus": {
                    "description": "The document focus state.",
                    "enum": [
                        "FOCUS_NOT_COLLECTED",
                        "FOCUS_FALSE",
                        "FOCUS_TRUE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "encryptedPluginList": {
                    "$ref": "AdsLogs__EncryptedMessageProto",
                    "description": "Encrypted list of plug-ins."
                },
                "historyLength": {
                    "description": "The collected value of history.length, see go/history-length-botguard.\nValues set for this field:\n  * -5 denotes situations where the signal was not available.\n  * 0 to 253 correspond to recorded values of history.length.\n  * 254 is used for values of history.length equal to 254 or larger.\nNo other values should be set.",
                    "format": "int32",
                    "type": "integer"
                },
                "iframeMoves": {
                    "description": "The number of times we record a movement in the ad cross-domain iframe.",
                    "format": "int32",
                    "type": "integer"
                },
                "javascriptComputation": {
                    "description": "Deprecated, this signal is no longer collected.\nValues were used to indicate result of JS computation, as indicated in the\n(now deleted) JavascriptComputationCode in google3/ads/base/ad-enums.h.",
                    "format": "int32",
                    "type": "integer"
                },
                "jsHeapSizeLimit": {
                    "description": "Value of window.performance.memory.jsHeapSizeLimit. The value -1 indicates\nthe property was not defined.",
                    "format": "int32",
                    "type": "integer"
                },
                "lastDeltaSquareDistance": {
                    "description": "Last delta square distance traversed inside the ad - Should be small as the\nuser stalls before the click actually happens.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxAngle": {
                    "description": "The 360 degree angle space is descretized into 38 bins. The max angle is\nthe one that registers the largest traversed distance.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxConnections": {
                    "description": "Corresponds to window.maxConnectionsPerServer.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxDeltaTime": {
                    "description": "Maximum delta between two mousemoves. This is a measure of the longest\nstall of the user inside the ad.",
                    "format": "int32",
                    "type": "integer"
                },
                "medianDeltaSquareDistance": {
                    "description": "Median delta square distance between two mousemoves. This measures the\nmedian speed of the mouse moves.",
                    "format": "int32",
                    "type": "integer"
                },
                "medianDeltaTime": {
                    "description": "Median time delta (in millisecond) between two mousemoves. This should be\nfairly stable and a measure of the browser's sampling rate.",
                    "format": "int32",
                    "type": "integer"
                },
                "mouseButton": {
                    "description": "The mouse button used to click on the ad.\nThe value is a bitmask where each of the bits are associated with\na particular mouse button or key pressed during the click:\n1 (1 << 0) --> Left mouse button\n2 (1 << 1) --> Right mouse button\n4 (1 << 2) --> Middle mouse button\n8 (1 << 3) --> Shift key\n16 (1 << 4) --> Alt key\n32 (1 << 5) --> Ctrl key\nSee also: google3/contentads/frontend/js/elements/html/mouse_button.js",
                    "format": "int32",
                    "type": "integer"
                },
                "mouseEndPosition": {
                    "$ref": "AdsSpam__JavaScriptSignalCoordinate",
                    "description": "Pixel position of the mouse at the end of ad interaction, relative to the\ntop-left of the ad, for spam detection, on engagement ads only."
                },
                "mouseStartPosition": {
                    "$ref": "AdsSpam__JavaScriptSignalCoordinate",
                    "description": "Pixel position of the mouse at the start of ad interaction, relative to the\ntop-left of the ad, for spam detection, on engagement ads only."
                },
                "mouseoverDuration": {
                    "description": "Duration of mouseover on the ad, in milliseconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "mozPaintCount": {
                    "description": "Corresponds to window.mozPaintCount, the number of times the ad was\npainted. Measured at BotGuard snapshot time, not setup time. Only use\nmoz_paint_count if moz_paint_count_state is MOZ_PAINT_COUNT_AVAILABLE. Uses\nClickNumericErrorCodes.CLICK_NUMERIC_NEGATIVE when the paint count value\nwas negative, and CLICK_NUMERIC_NON_INTEGER when the paint count value is\nnon-numeric, but no other error codes.",
                    "format": "int32",
                    "type": "integer"
                },
                "mozPaintCountState": {
                    "description": "State of the mozPaintCount signal (not collected, undefined, available).",
                    "enum": [
                        "MOZ_PAINT_COUNT_NOT_COLLECTED",
                        "MOZ_PAINT_COUNT_UNDEFINED",
                        "MOZ_PAINT_COUNT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "navigatorConnectionType": {
                    "description": "Corresponds to navigator.connection.type.\nSee google3/ccc/abuse/botguard/signals/adspam_navigator_connection_type.h\nand http://w3c.github.io/netinfo",
                    "enum": [
                        "UNSET",
                        "BLUETOOTH",
                        "CELLULAR",
                        "ETHERNET",
                        "NONE",
                        "WIFI",
                        "OTHER",
                        "UNKNOWN",
                        "MIXED",
                        "WIMAX",
                        "MISSING_PROPERTY",
                        "OUT_OF_SPEC"
                    ],
                    "enumDescriptions": [
                        "Default proto value indicating that value has not been set.",
                        "These 7 values correspond to the ConnectionType enums defined at:\nhttp://w3c.github.io/netinfo/",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "!navigator || !navigator.connection || !navigator.connection.type",
                        "value does not match a spec-defined value."
                    ],
                    "type": "string"
                },
                "navigatorConnectionTypeHash": {
                    "description": "Hash of navigator.connection.type. This value is only set when the value is\nout of spec.",
                    "format": "int32",
                    "type": "integer"
                },
                "navigatorPlatform": {
                    "description": "Value of navigator.platform, i.e. the system the browser was compiled for.\nExamples include \"Win32\", \"Linux armv7l\", \"iPhone\", and \"Linux x86_64\".\nAdSpamNavigatorPlatformDecoder::kInvalidNavigatorMessage = \"NO_NAV\" is\nstored when the navigator object is null or undefined.\nAdSpamNavigatorPlatformDecoder::kMissingPlatformMessage = \"NO_PLAT\" is\nstored when the platform could not be found.",
                    "type": "string"
                },
                "numMouseovers": {
                    "description": "Number of mouseovers on the ad creative.",
                    "format": "int32",
                    "type": "integer"
                },
                "opacity": {
                    "description": "The effective opacity of the ad, scaled between 0 and 100 indicating\nthe opacity as a percentage.  This field is only set if opacity_state\nis equal to OPACITY_AVAILABLE.  This field is set to\nClickNumericErrorCodes.CLICK_NUMERIC_NEGATIVE or CLICK_NUMERIC_NON_INTEGER\nif we detect a negative or non-integer value respectively.",
                    "format": "int32",
                    "type": "integer"
                },
                "opacityState": {
                    "description": "State of the opacity signal (not collected, undefined, available).",
                    "enum": [
                        "OPACITY_NOT_COLLECTED",
                        "OPACITY_UNDEFINED",
                        "OPACITY_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "pluginList": {
                    "$ref": "AdsSpam__PluginList",
                    "description": "Placeholder field which is used by other systems to ephemerally hold the\nplugin list (although it's logged in encrypted_plugin_list).\nThis field is never logged."
                },
                "renderToViewTime": {
                    "description": "Delay in milliseconds between when a delayed-impression ad was rendered\nand when it was made visible.",
                    "format": "int32",
                    "type": "integer"
                },
                "spellcheck": {
                    "description": "Corresponds to document.body.spellcheck.",
                    "enum": [
                        "SPELLCHECK_NOT_COLLECTED",
                        "SPELLCHECK_UNDEFINED",
                        "SPELLCHECK_ENABLED",
                        "SPELLCHECK_DISABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "timeIn": {
                    "description": "Time spend inside the ad.",
                    "format": "int32",
                    "type": "integer"
                },
                "totalDistance": {
                    "description": "Total tarversed distance on the Ad document.",
                    "format": "int32",
                    "type": "integer"
                },
                "totalJsHeapSize": {
                    "description": "Value of window.performance.memory.totalJSHeapSize. The value -1 indicates\nthe property was not defined.",
                    "format": "int32",
                    "type": "integer"
                },
                "totalMousemoves": {
                    "description": "Total number of mousemoves recorded on the Ad document.",
                    "format": "int32",
                    "type": "integer"
                },
                "touchDuration": {
                    "description": "Duration of touch event, from touchstart to touchend, in milliseconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "touchEndPosition": {
                    "$ref": "AdsSpam__JavaScriptSignalCoordinate",
                    "description": "Pixel position of the touch at the end of ad interaction, relative to the\ntop-left of the ad, for spam detection, on engagement ads only."
                },
                "touchInterval": {
                    "description": "Time, in milliseconds, between the touchend of an initial touch on the ad\nto the touchend of the final touch on the ad that caused a chargeable event\n(e.g. expansion).",
                    "format": "int32",
                    "type": "integer"
                },
                "touchStartPosition": {
                    "$ref": "AdsSpam__JavaScriptSignalCoordinate",
                    "description": "Pixel position of the touch at the start of ad interaction, relative to the\ntop-left of the ad, for spam detection, on engagement ads only."
                },
                "usedJsHeapSize": {
                    "description": "Value of window.performance.memory.usedJSHeapSize. The value -1 indicates\nthe property was not defined.",
                    "format": "int32",
                    "type": "integer"
                },
                "webglRenderer": {
                    "description": "Unmasked 3D graphics renderer info reported by WebGL.",
                    "type": "string"
                },
                "windowExternal": {
                    "description": "A value corresponding to whether window.external was defined or not. See\ngo/lasergoat-extension for how to interpret the values stored in this\nfield.",
                    "enum": [
                        "PROPERTY_NOT_COLLECTED",
                        "PROPERTY_UNDEFINED",
                        "PROPERTY_DEFINED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "windowLocationbarVisible": {
                    "description": "A value corresponding to visibility of the browser location bar. See\nhttp://g3doc/ads/spam/g3doc/PROTECTED/signals/dclk/popunder.md for how to\ninterpret values stored in this field.",
                    "enum": [
                        "NOT_COLLECTED",
                        "UNDEFINED",
                        "TRUE_VALUE",
                        "FALSE_VALUE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "windowMenubarVisible": {
                    "description": "A value corresponding to visibility of the browser menu bar. See\nhttp://g3doc/ads/spam/g3doc/PROTECTED/signals/dclk/popunder.md for how to\ninterpret values stored in this field.",
                    "enum": [
                        "NOT_COLLECTED",
                        "UNDEFINED",
                        "TRUE_VALUE",
                        "FALSE_VALUE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "windowStatusbarVisible": {
                    "description": "A value corresponding to visibility of the browser status bar. See\nhttp://g3doc/ads/spam/g3doc/PROTECTED/signals/dclk/popunder.md for how to\ninterpret values stored in this field.",
                    "enum": [
                        "NOT_COLLECTED",
                        "UNDEFINED",
                        "TRUE_VALUE",
                        "FALSE_VALUE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "windowToolbarVisible": {
                    "description": "A value corresponding to visibility of the browser tool bar. See\nhttp://g3doc/ads/spam/g3doc/PROTECTED/signals/dclk/popunder.md for how to\ninterpret values stored in this field.",
                    "enum": [
                        "NOT_COLLECTED",
                        "UNDEFINED",
                        "TRUE_VALUE",
                        "FALSE_VALUE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdsSpam__PluginList": {
            "description": "List of Plugins collected through Botguard.\nSee http://go/compressed-botguard-plugin",
            "id": "AdsSpam__PluginList",
            "properties": {
                "plugin": {
                    "description": "Potentially truncated list of plugins collected from browser. Collection\nlimit is defined in adspam-js-manager.",
                    "items": {
                        "$ref": "Botguard__Plugin"
                    },
                    "type": "array"
                },
                "totalDetectedPluginCount": {
                    "description": "Number of plugins that were detected on the device.\nThis is left at the default value if:\n# detected plugins == # collected plugins.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AdwordsMobileappApi_NotificationSettings_EnabledCategory": {
            "description": "Represents the enabled/disabled state of a particular setting category.\n\nThe legacy native apps use this to represent only enabled categories.\n",
            "id": "AdwordsMobileappApi_NotificationSettings_EnabledCategory",
            "properties": {
                "category": {
                    "enum": [
                        "CATEGORY_UNKNOWN",
                        "ACCOUNT_ACCESS",
                        "BILLING",
                        "CAMPAIGN_MAINTENANCE",
                        "PROMOTIONAL",
                        "PERFORMANCE_SUMMARY",
                        "CRITICAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Types not actively used are below."
                    ],
                    "type": "string"
                },
                "state": {
                    "description": "Whether the specified category is enabled or disabled.\n\nThis field is only populated by the flutter app, not the legacy\nnative applications.",
                    "enum": [
                        "SETTING_STATE_UNKNOWN",
                        "INDETERMINATE",
                        "ENABLED",
                        "DISABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdwordsMobileappApi_NotificationSettings_SelectedManagedCustomer": {
            "description": "Using a message instead of a repeated scalar to support extensibility.",
            "id": "AdwordsMobileappApi_NotificationSettings_SelectedManagedCustomer",
            "properties": {
                "customerId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdwordsMobileappApi__AwmAppContext": {
            "description": "Contains client application and user info.\nNext TAG: 6",
            "id": "AdwordsMobileappApi__AwmAppContext",
            "properties": {
                "appVersionCode": {
                    "description": "Internal version code of Adwords Mobile App.",
                    "format": "int32",
                    "type": "integer"
                },
                "applicationId": {
                    "description": "Id assigned to client application, \"awm-android\", \"awm-ios\"",
                    "type": "string"
                },
                "euid": {
                    "description": "AdWords effective user id.\n\nSee go/awn-ids for more info.",
                    "format": "int64",
                    "type": "string"
                },
                "ocid": {
                    "description": "AdWords operating customer ID.\n\nSee go/awn-ids for more info.",
                    "format": "int64",
                    "type": "string"
                },
                "uscid": {
                    "description": "AdWords user's selected customer ID.\n\nSee go/awn-ids for more info.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdwordsMobileappApi__NotificationSettings": {
            "description": "Specifies push notification settings.\n\nNext TAG: 4",
            "id": "AdwordsMobileappApi__NotificationSettings",
            "properties": {
                "deviceSettingState": {
                    "description": "The OS-level setting state. Represents whether notifications are\nenabled/disabled globally for the app at the system level. Will be marked\nas INDETERMINATE iff this information is unavailable.\n\nThis field is not populated by legacy native clients.",
                    "enum": [
                        "SETTING_STATE_UNKNOWN",
                        "INDETERMINATE",
                        "ENABLED",
                        "DISABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "enabledCategory": {
                    "description": "A list indicating the state of each category supported by the app.\n\nNote: The legacy app only populates this list with categories that are\nenabled.\n",
                    "items": {
                        "$ref": "AdwordsMobileappApi_NotificationSettings_EnabledCategory"
                    },
                    "type": "array"
                },
                "selectedManagedCustomer": {
                    "description": "Set of managed customers that the user has selected to receive push\nnotifications.\n\nThis field is only utilized for users with manager accounts.",
                    "items": {
                        "$ref": "AdwordsMobileappApi_NotificationSettings_SelectedManagedCustomer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AdwordsMobileapp__AwmDestinationInfo": {
            "description": "AWM settings and info tied to a user device.  This is stored as an\nextension of DestinationInfo in the UNS settings service.\nNext TAG: 9",
            "id": "AdwordsMobileapp__AwmDestinationInfo",
            "properties": {
                "awmAppContext": {
                    "$ref": "AdwordsMobileappApi__AwmAppContext",
                    "description": "The version of the app that made this registration call.\n\nThis field is deprecated and should only used by legacy native clients."
                },
                "initialRegistrationMillis": {
                    "description": "Timestamp in milliseconds of the initial registration seen for this\ndestination. This field was not always present, and it will be unpopulated\nfor destinations that were registered before the field existed.\n\nThis field is deprecated and should only used by legacy native clients.",
                    "format": "int64",
                    "type": "string"
                },
                "instanceId": {
                    "description": "The InstanceID is a unique identifier for this app installation.\n\nThis is not yet populated by the flutter app.",
                    "type": "string"
                },
                "languageCode": {
                    "description": "The user's language code.\n\nThis field is deprecated and should only used by legacy native clients.",
                    "type": "string"
                },
                "settings": {
                    "$ref": "AdwordsMobileappApi__NotificationSettings",
                    "description": "The settings is used to determine behavior for notifications\nrelated to any customer that does not have explicit settings specified in\nper_customer_settings."
                },
                "timestamp": {
                    "description": "Timestamp in milliseconds since epoch for the most recent registration of\nthis destination.\n\nThis field is deprecated and should only be used by legacy native clients.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Apiserving__AbuseProto": {
            "description": "A wrapper proto that encapsulates abuse signals passed from apiary to\nrosy backends.\nMetadata includes 3 core spam signals: user_agent, client_ip and\nheader_order.\nFeature can be used for additional signals like JS navigator object.",
            "id": "Apiserving__AbuseProto",
            "properties": {
                "feature": {
                    "items": {
                        "$ref": "Abuseiam__Feature"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "Abuseiam__Metadata"
                }
            },
            "type": "object"
        },
        "AppsNotify__RegistrationPayload": {
            "description": "Data for registration of mobile app clients.",
            "id": "AppsNotify__RegistrationPayload",
            "properties": {
                "supportedType": {
                    "description": "Payload types supported by the mobile client.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "SHARE",
                            "ACCESS_REQUEST",
                            "COMMENT",
                            "STORAGE",
                            "TEAM_DRIVE_JOIN",
                            "CHANGE",
                            "WATCH_COMMENT",
                            "APPROVAL_CHANGE",
                            "APPROVAL_SYSTEM_NOTIFICATION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "timezoneOffset": {
                    "description": "The timezone offset the web client is in.\nNOTE: this is only set for web clients, as there is no easy way to acquire\nthe timezone ID from the browser.",
                    "format": "int32",
                    "type": "integer"
                },
                "version": {
                    "description": "Version of the mobile client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzApiary__ApiaryFields": {
            "description": "These common apiary fields will be provided automatically on every apiary\nsourced request from the request context, as indicated by the context\nannotation.",
            "id": "AppsPeopleOzApiary__ApiaryFields",
            "properties": {
                "abuse": {
                    "$ref": "Apiserving__AbuseProto",
                    "description": "The abuse proto contains general information useful for spam and\nabuse reporting."
                },
                "acceptLanguage": {
                    "description": "The accept-language field from the header of incoming requests.",
                    "type": "string"
                },
                "apiaryExtensions": {
                    "$ref": "SocialCommon__SocialApiaryExtensions"
                },
                "appVersion": {
                    "description": "The version of the calling app, something specific to the client.\nThis is different from the generated apiary client version.\nCan be empty if not applicable.  If it is applicable, then\napp_version_full (see below) should also be filled out.",
                    "format": "int32",
                    "type": "integer"
                },
                "appVersionFull": {
                    "$ref": "AppsPeopleOzApiary__Version",
                    "description": "The version of the calling app, something specific to the client.\nThis is different from the generated apiary client version.\nCan be empty if not applicable.\nSupercedes the field app_version.\nThis field was introduced after version 4.4.0 for iOS, and 4.0.0 Android.\nSo these versions and older should still check the old field app_version."
                },
                "clientPollingState": {
                    "$ref": "AppsPeopleOzApiary__ClientPollingState",
                    "description": "Information about previous (otherwise identical) requests from the client.\nIts presence implies that the client intends to poll again."
                },
                "clientRetryState": {
                    "$ref": "AppsPeopleOzApiary__ClientRetryState",
                    "description": "Clients must indicate a request is a retry by populating this field. Other\nrequest should omit it. For example, if the first request times out,\nsubsequent retries should include this field with information about the\nprevious requests."
                },
                "containerUrl": {
                    "description": "This is set to the value of the x-container-url header field.\nMobile sharebox uses it to pass in 1P and 3P api project_ids.",
                    "type": "string"
                },
                "effectiveUser": {
                    "description": "The effective id. Used to delegate actions to a +page.",
                    "type": "string"
                },
                "experimentOverride": {
                    "description": "Callers can override experiments with it, similar to e=* param for web,\nalthough this one is not sticky across requests.\nAll google.com accounts can use this, see experiment_selection_access\nfor more details.\nThis is meant to help testing, do not ship any code using it.\nExample values:\n  \"ExperimentOne\": enables ExperimentOne\n  \"ExperimentOne,-ExperimentTwo\": enables ExperimentOne and\n      disables ExperimentTwo",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the api being called.",
                    "type": "string"
                },
                "noLog": {
                    "description": "The \"nolog\" parameter. If set, the backend must not log the authenticated\nuser, including in temp GWS logs.",
                    "type": "boolean"
                },
                "originalUrl": {
                    "description": "The full original url the api request was sent to.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The devconsole project id/client key.",
                    "format": "uint64",
                    "type": "string"
                },
                "remoteIp": {
                    "description": "Contains the IP address of the person making the api call, as a string.",
                    "type": "string"
                },
                "socialClient": {
                    "$ref": "SocialClients__SocialClient",
                    "description": "Client metadata passed down the social stack to differentiate G+\nusage by devices, applications and platforms. It is eventually stored in\nthe logs generated for the request.  http://go/social_extension"
                },
                "socialClientString": {
                    "description": "Client metadata forwarded to social stack by Apiary calls. This data comes\nfrom the X-Api-Client HTTP header parameter and should be in the following\nformat: device=3;application=2L;platform=1 (using the enum tag numbers here\nhttp://google3/logs/proto/social/social_client.proto)\nThis field is only for external API (1P/3P) callers which use a RESTful API\nthat might have no request body (POST and PUT requests will still have a\nrequest body). 0P API callers should use the social_client field above.",
                    "type": "string"
                },
                "sourceInfo": {
                    "description": "A source parameter for logging common widget (+1 Button, ShareBox)\nlocations",
                    "type": "string"
                },
                "version": {
                    "description": "The version of the api.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzApiary__ClientPollingState": {
            "description": "Information about the client state for a repeated request. If present, the\nclient may intend to poll again.",
            "id": "AppsPeopleOzApiary__ClientPollingState",
            "properties": {
                "requestCount": {
                    "description": "How many times this request has been issued so far, including this one.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzApiary__ClientRetryState": {
            "description": "Information about previously failed attempts to make this request in the\ncontext of the same original attempt. Used to communicate that the request is\na retry to the server. A retry is only a retry if it's made in response to a\nfailure and the request is (other than the this message) identical.",
            "id": "AppsPeopleOzApiary__ClientRetryState",
            "properties": {
                "requestCount": {
                    "description": "Number of previous requests with the same payload that have already been\nattempted and failed. On the first retry, set this to 1 and increment by 1\non each subsequent attempt.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzApiary__PollingDirective": {
            "description": "A directive from the server to the client to poll again later.",
            "id": "AppsPeopleOzApiary__PollingDirective",
            "properties": {
                "timeDeltaMs": {
                    "description": "How many milliseconds to wait before making this request again.\nIf absent, do not make this request again.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzApiary__Version": {
            "description": "Version is typically four numbers major.minor.patch.build, e.g. \"4.0.1.294\"\nWe use separate numbers instead of one string because it is easier to\nsearch in the logs.\nIf any of these are included in the request, they must all be included.\nNative app clients should follow versioning rules defined at\nhttp://semver.org/spec/v2.0.0-rc.1.html\nand must at least adhere to the \"increment by one\" rule and\n\"never change a released package\" rule.",
            "id": "AppsPeopleOzApiary__Version",
            "properties": {
                "build": {
                    "format": "int32",
                    "type": "integer"
                },
                "major": {
                    "format": "int32",
                    "type": "integer"
                },
                "minor": {
                    "format": "int32",
                    "type": "integer"
                },
                "patch": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzInternalApi__ApiRequestHeader": {
            "description": "Represents a common header for every request.",
            "id": "AppsPeopleOzInternalApi__ApiRequestHeader",
            "properties": {
                "commonFields": {
                    "$ref": "AppsPeopleOzApiary__ApiaryFields",
                    "description": "Other common header fields, shared between Oz apiary services."
                },
                "consistencyTokenJar": {
                    "description": "An optional opaque consistency token jar so that users can\nperform consistent reads. This value should be gathered from\nthe field consistency_header contained in ApiResponseHeader.\nFor more details, please see http://go/ctpropagation-mobile.",
                    "type": "string"
                },
                "enableTracing": {
                    "description": "Whether tracing should be enabled.",
                    "type": "boolean"
                },
                "fbsVersionInfo": {
                    "description": "An optional opaque version token for any requests that query data\nfrom focus. If you made a request that writes to focus, you must\nensure that any fbs_version_info token returned via the\nApiResponseHeader is propagated to subsequent requests to ensure\ndata consistency (i.e. in order to see changes you just made).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzInternalApi__ApiResponseHeader": {
            "description": "Represents a common header for every response.",
            "id": "AppsPeopleOzInternalApi__ApiResponseHeader",
            "properties": {
                "backendTrace": {
                    "$ref": "Gdata__TraceRecords",
                    "description": "The trace records delivered by the backend."
                },
                "consistencyHeader": {
                    "$ref": "FrameworkConsistency__ApiaryConsistencyTokenResponseHeader",
                    "description": "Includes the consistency information to be persisted on the client so that\nlater consistent requests can be made."
                },
                "errors": {
                    "$ref": "Gdata__Errors",
                    "description": "The errors delivered by the backend."
                },
                "fbsVersionInfo": {
                    "description": "An optional opaque version token returned by focus for write requests.\nAny request that results in a write to focus may return this token. It\nmust be passed through to subsequent requests in order to ensure data\nconsistency (i.e. in order to see the changes you just made).",
                    "type": "string"
                },
                "pollingDirective": {
                    "$ref": "AppsPeopleOzApiary__PollingDirective",
                    "description": "An optional directive that informs the client about polling again.\nIf present, the server wants the client to issue the request again, based\non the conditions within the PollingDirective.\nIf absent, the client should not issue the request again."
                },
                "requestMetadata": {
                    "$ref": "FrameworkRequestmetadata__RequestMetadata"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzInternalApi__GmsGnotsFetchByIdentifierRequest": {
            "id": "AppsPeopleOzInternalApi__GmsGnotsFetchByIdentifierRequest",
            "properties": {
                "apiHeader": {
                    "$ref": "AppsPeopleOzInternalApi__ApiRequestHeader"
                },
                "params": {
                    "$ref": "OzNotificationsGunsGmsRequests__FetchByIdentifierRequest"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzInternalApi__GmsGnotsFetchByIdentifierResponse": {
            "id": "AppsPeopleOzInternalApi__GmsGnotsFetchByIdentifierResponse",
            "properties": {
                "apiHeader": {
                    "$ref": "AppsPeopleOzInternalApi__ApiResponseHeader"
                },
                "response": {
                    "$ref": "OzNotificationsGunsGmsResponses__FetchByIdentifierResponse"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzInternalApi__GmsGnotsSetReadStatesRequest": {
            "description": "GUNS GMS core API.",
            "id": "AppsPeopleOzInternalApi__GmsGnotsSetReadStatesRequest",
            "properties": {
                "apiHeader": {
                    "$ref": "AppsPeopleOzInternalApi__ApiRequestHeader"
                },
                "params": {
                    "$ref": "OzNotificationsGunsGmsRequests__SetReadStatesRequest"
                }
            },
            "type": "object"
        },
        "AppsPeopleOzInternalApi__GmsGnotsSetReadStatesResponse": {
            "id": "AppsPeopleOzInternalApi__GmsGnotsSetReadStatesResponse",
            "properties": {
                "apiHeader": {
                    "$ref": "AppsPeopleOzInternalApi__ApiResponseHeader"
                },
                "response": {
                    "$ref": "OzNotificationsGunsGmsResponses__SetReadStatesResponse"
                }
            },
            "type": "object"
        },
        "Assist_Ocr_Line": {
            "id": "Assist_Ocr_Line",
            "properties": {
                "boundingBox": {
                    "$ref": "Assist__Box",
                    "description": "Bounding box of the whole line."
                },
                "confidence": {
                    "description": "Range [0..100]. Field not guaranteed to be set.",
                    "format": "int32",
                    "type": "integer"
                },
                "fontStyle": {
                    "description": "The font style for every word in this line.",
                    "enum": [
                        "NORMAL",
                        "BOLD",
                        "ITALIC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "language": {
                    "description": "This field gets set instead of Word.language when every Word is in the\nsame language. See Word.language for details.",
                    "format": "int32",
                    "type": "integer"
                },
                "word": {
                    "description": "List of the words that belong to this line.",
                    "items": {
                        "$ref": "Assist_Ocr_Word"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Assist_Ocr_Paragraph": {
            "id": "Assist_Ocr_Paragraph",
            "properties": {
                "boundingBox": {
                    "$ref": "Assist__Box",
                    "description": "Bounding box of the whole paragraph."
                },
                "confidence": {
                    "description": "Range [0..100]. Field not guaranteed to be set.",
                    "format": "int32",
                    "type": "integer"
                },
                "fontStyle": {
                    "description": "The font style for every word in this paragraph.",
                    "enum": [
                        "NORMAL",
                        "BOLD",
                        "ITALIC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "language": {
                    "description": "This field gets set instead of Line.language when every Line is in the\nsame language. See Word.language for details.",
                    "format": "int32",
                    "type": "integer"
                },
                "line": {
                    "description": "List of the lines that belong to this paragraph.",
                    "items": {
                        "$ref": "Assist_Ocr_Line"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Assist_Ocr_Symbol": {
            "id": "Assist_Ocr_Symbol",
            "properties": {
                "boundingBox": {
                    "$ref": "Assist__Box"
                },
                "code": {
                    "description": "Unicode code of the symbol",
                    "format": "int32",
                    "type": "integer"
                },
                "confidence": {
                    "description": "Range [0..100]. Field not guaranteed to be set.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Assist_Ocr_Word": {
            "id": "Assist_Ocr_Word",
            "properties": {
                "boundingBox": {
                    "$ref": "Assist__Box",
                    "description": "Bounding box of the word."
                },
                "confidence": {
                    "description": "Range [0..100]. Field not guaranteed to be set.",
                    "format": "int32",
                    "type": "integer"
                },
                "fontStyle": {
                    "description": "The font style for this word. Defaults to NORMAL.",
                    "enum": [
                        "NORMAL",
                        "BOLD",
                        "ITALIC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "language": {
                    "description": "Detected language. This is an i18n.languages.Language constant.\nSee i18n/languages/public/languages.h for utilities to convert this.",
                    "format": "int32",
                    "type": "integer"
                },
                "symbol": {
                    "description": "List of symbols belonging to this word.",
                    "items": {
                        "$ref": "Assist_Ocr_Symbol"
                    },
                    "type": "array"
                },
                "text": {
                    "description": "The word text. This is extracted from the screenshot and it's not a\nuser-generated string.",
                    "type": "string"
                },
                "textBackgroundColor": {
                    "description": "Detected color of the background.",
                    "format": "int32",
                    "type": "integer"
                },
                "textColor": {
                    "description": "Detected color of the text for this word.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Assist__Box": {
            "id": "Assist__Box",
            "properties": {
                "angle": {
                    "description": "The angle of the box.",
                    "format": "float",
                    "type": "number"
                },
                "height": {
                    "description": "Height of the box.",
                    "format": "int32",
                    "type": "integer"
                },
                "left": {
                    "description": "X position of the top-left corner of this box, growing left.",
                    "format": "int32",
                    "type": "integer"
                },
                "top": {
                    "description": "Y position of the top-left corner of this box, growing down.",
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "description": "Width of the box.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Assist__Ocr": {
            "description": "Represents the output of running OCR on the screenshot, indicating the text\ndetected and its position on screen.",
            "id": "Assist__Ocr",
            "properties": {
                "confidence": {
                    "description": "Range [0..100].",
                    "format": "int32",
                    "type": "integer"
                },
                "language": {
                    "description": "This field gets set instead of Paragraph.language when every Paragraph is\nin the same language. See Word.language for details.",
                    "format": "int32",
                    "type": "integer"
                },
                "paragraph": {
                    "description": "List of all the paragraphs found with OCR.",
                    "items": {
                        "$ref": "Assist_Ocr_Paragraph"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Assist__ScreenAssistNowStreamFilter": {
            "id": "Assist__ScreenAssistNowStreamFilter",
            "properties": {
                "desiredNowCardTypes": {
                    "description": "List of desired now cards to grab.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Note that MOVIE_LIST should be replaced with a sub-tree of MOVIE\nentries. We should not have entries that are rolled-up entries.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Lure to enter browse mode about an interest.",
                        "Lure to enter browse mode about a trip.",
                        "Lure to read articles from an author.",
                        "Lure to enter browse mode about a place.",
                        "A single entry in the Browse Mode Author lure.",
                        "A single URL recommendation in browse mode.",
                        "A list of entity recommendations in browse mode.",
                        "A single entity recommendation for the list in browse mode.",
                        "A list of video recommendations in browse mode.",
                        "A single video recommendation for the list in browse mode.",
                        "Lure to enter browse mode for things to read.",
                        "A single entry in the Browse Mode Author lure.",
                        "Things to watch card.",
                        "A TV things to watch recommendation.",
                        "A VOD things to watch recommendation.",
                        "",
                        "",
                        "A card showing a single suggested application for the user.",
                        "List card containing multiple app suggestions.",
                        "A card showing personalized news for a user.",
                        "A card showing a single suggested contact (call/sms) for the user.",
                        "List card containing multiple contact suggestions.",
                        "Detected car parking location.",
                        "List of detected car parking location cards.",
                        "List of related music entries.",
                        "Individual transportation cards.",
                        "List of transportation cards.",
                        "Traffic incidents a user is likely to encounter.",
                        "Individual bill card.",
                        "List of bill cards.",
                        "Entry for a product that the user is interested in.",
                        "Entry for list of products that the user is interested in.",
                        "A card for the store the user is in.",
                        "A card for a product with price drop that a user has visited online.",
                        "A card with a list of Web sites relating to the TV program the user is\nwatching.",
                        "A single reference in the TV Web site list card.",
                        "",
                        "Special group entry used to display suggested apps and contacts in the\nhotseat.",
                        "A list of content update items.",
                        "A content update item.",
                        "The app suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "The contact suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "",
                        "A card used to display interesting nearby content from Field Trip.",
                        "A cards containing photos from a friend at a location.",
                        "Lure to enter browse mode of Field Trip.",
                        "Text displayed in the background, between other cards.",
                        "Card which brings the user to a Google Now feedback survey.",
                        "Card for information on whatever is showing in the Chromecast ambient\nstate.  Can be a link to a news story, a G+ photo with a link to the\nalbum, etc.",
                        "Card displaying fitness data.",
                        "Card displaying agenda data.",
                        "Card displaying web result from predictive search",
                        "Card displaying gas stations along a route.",
                        "A List of AlongRouteEntry.",
                        "Module-based card",
                        "Module-based list card",
                        "Piet-based card (go/piet)",
                        "List lure to enter browse mode of Things To Do.",
                        "A list of flights with prices and price changes.",
                        "An individual flight entry from the list above.",
                        "G+ stories card",
                        "Card displaying welcome information to users receiving third party cards.",
                        "Card promoting the hotword.",
                        "Tutorial card for customizing your Google Now experience.",
                        "Tutorial card for how to change card preferences.",
                        "Tutorial card for how to swipe the cards away.",
                        "Tutorial card for swiping to customize.",
                        "Tutorial card for how to pull down the top bar to search.",
                        "Entry containing metadata about a lotic cluster (e.g. title, color).",
                        "Entry type for the Carousel.  The Carousel is a Group entry\nwith entries made up of Modules.  The Modules should be defined\nas SmallContentModules.",
                        "Entry type for the App Launcher.  The App Launcher is a Group entry\nwith the entries made up of modules.",
                        "Ulysses list type entry for displaying various needs at a location.",
                        "Entry type for a contact card which directs user to the contacts app",
                        "Gmail location of interest card.",
                        "Entry type for a card built from a Hallmark Component.",
                        "Closet interests page (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for interests landing page.\nThe client would show its preview of several interests on its parent page,\nand show all intersts children on its own page by different collections:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet interest category (from AGSA 6.5). This type should only be assigned\nto a group_entry. The client would show its preview of several interests on\nits parent page, and show all interests in this collection on its own page\nby interested, suggested, or not intersted:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control list (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for \"More preferences\" case.\nThe client would show a list of control types:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control category (from AGSA 6.5). This type should only be assigned\nto a group_entry. It would be used for \"Weather\", \"Commute\" cases and etc.:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Single type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Multi-type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Button in profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one interest: go/now-closet-proto.",
                        "Cards and notifications controls in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one question: go/now-closet-proto.",
                        "Closet template group which may contain template rows and headers/footers,\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Closet now settings for enabling Now and notifications, also providing an\nentry for clearing all preference.\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Related to happy hour code yellow in 2015 Q4, this is expected to only be\nused as a synthentic type.  A request translator is the only place this\nis put into a request, and this type will never be returned to a client.\nShould be removed as part of the transition to Action Pipelines taking over\ncommute notifications delivery.\n\nMore details at: http://go/now-hh-commute-cy-15q4",
                        "Used to create a background-less card for Lobby, see: go/lobby.",
                        "Module-based list card with modules displayed in a multi-column grid.",
                        "Non-rendering entry type that is used solely for area traffic notifications\nbound for GMM; there is no corresponding EntrySource.",
                        "Non-rendering entry type that is used solely for transit system\nnotifications bound for GMM; there is no corresponding EntrySource.",
                        "Synthetic entry type for client-generated promotional or tutorial\ncards.  These pseudo-cards are created on the client and are not\nused by the server.",
                        "A Health-related card.",
                        "Collection in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Card cap entry in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Search awareness cards (go/search-aware).",
                        "Cards containing Element data, which can be passed to the Element runtime\nto render the contents of the card on the UI. More details at go/elements",
                        "EntryType for facet chips (go/complex-facets)"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            "FREQUENT_PLACE",
                            "UI_NAVIGATION",
                            "WEATHER",
                            "WEATHER_TINY",
                            "WEATHER_LIST",
                            "TRANSIT_STATION",
                            "GENERIC_CARD",
                            "GENERIC_TABLE",
                            "FLIGHT_STATUS",
                            "FLIGHT_LIST",
                            "SPORT_SCORE",
                            "SPORT_LURE_LIST",
                            "SPORT_EVENT",
                            "SPORT_HIGHLIGHT_LIST",
                            "SPORT_HIGHLIGHT",
                            "CALENDAR",
                            "TRANSLATE",
                            "CURRENCY_EXCHANGE",
                            "CLOCK",
                            "NEARBY_PLACE",
                            "PUBLIC_ALERT",
                            "MOVIE_LIST",
                            "STOCK_QUOTE_LIST",
                            "STOCK_QUOTE",
                            "ATTRACTIONS_LIST",
                            "ATTRACTION",
                            "PACKAGE_TRACKING",
                            "PACKAGE_TRACKING_LIST",
                            "NEWS",
                            "BREAKING_NEWS",
                            "HYPERLOCAL_NEWS",
                            "ENTITY_NEWS",
                            "PHOTO_SPOT",
                            "BIRTHDAY_CARD",
                            "EVENT",
                            "MOVIE",
                            "EVENT_LIST",
                            "RESEARCH_TOPIC",
                            "RESEARCH_PAGE",
                            "BARCODE",
                            "GMAIL",
                            "NEARBY_PLACES_LIST",
                            "REAL_ESTATE",
                            "REAL_ESTATE_LIST",
                            "OPEN_HOUSE",
                            "MOVIE_TICKET",
                            "REMINDER",
                            "REMINDER_LIST",
                            "WEBSITE_UPDATE",
                            "WEBSITE_UPDATE_LIST",
                            "GENERIC_TICKET",
                            "BOOK",
                            "ALBUM",
                            "VIDEO_GAME",
                            "TV_EPISODE",
                            "SHARED_TRAFFIC_CARD",
                            "RELEVANT_WEBSITE",
                            "RELEVANT_WEBSITE_LIST",
                            "LAST_TRAIN_HOME",
                            "TV_RECOGNITION",
                            "WALLET_LOYALTY",
                            "HOTEL_PLACE",
                            "RESTAURANT_PLACE",
                            "CAR_RENTAL",
                            "GENERIC_TV_PROGRAM",
                            "CONCERT_TICKET",
                            "TRAINING_QUESTION",
                            "TV_NEWS",
                            "TV_MUSIC",
                            "TV_KNOWLEDGE",
                            "TV_KNOWLEDGE_LIST",
                            "SPORT_EVENT_TICKET",
                            "PROTOTYPE",
                            "BROWSE_MODE_LURE_INTEREST_UPDATE",
                            "BROWSE_MODE_LURE_TRAVEL",
                            "BROWSE_MODE_LURE_AUTHOR",
                            "AT_A_PLACE",
                            "BROWSE_MODE_AUTHOR_STORY",
                            "BROWSE_MODE_WEB_LINK",
                            "BROWSE_MODE_ENTITY_LIST",
                            "BROWSE_MODE_ENTITY",
                            "BROWSE_MODE_VIDEO_LIST",
                            "BROWSE_MODE_VIDEO",
                            "BROWSE_MODE_READING_LURE",
                            "BROWSE_MODE_READING_STORY",
                            "THINGS_TO_WATCH",
                            "THINGS_TO_WATCH_TV",
                            "THINGS_TO_WATCH_VOD",
                            "THINGS_TO_WATCH_LURE",
                            "THINGS_TO_WATCH_LIST_LURE",
                            "APP_SUGGESTION",
                            "APP_SUGGESTION_LIST",
                            "PERSONALIZED_NEWS",
                            "CONTACT_SUGGESTION",
                            "CONTACT_SUGGESTION_LIST",
                            "VEHICLE_PARKING_LOCATION",
                            "VEHICLE_PARKING_LOCATION_LIST",
                            "TV_MUSIC_KNOWLEDGE_LIST",
                            "TRANSPORTATION",
                            "TRANSPORTATION_LIST",
                            "TRAFFIC_INCIDENTS",
                            "BILL",
                            "BILL_LIST",
                            "PRODUCT",
                            "PRODUCT_LIST",
                            "IN_STORE",
                            "PRICE_DROP",
                            "TV_RELATED_WEB_SITE_LIST",
                            "TV_RELATED_WEB_SITE",
                            "TV_RELATED_WEB_SITE_KNOWLEDGE",
                            "HOTSEAT_SUGGESTION_LIST",
                            "CONTENT_UPDATE_LIST",
                            "CONTENT_UPDATE_ITEM",
                            "HOTSEAT_APP_SUGGESTION",
                            "HOTSEAT_CONTACT_SUGGESTION",
                            "MALL_DIRECTORY",
                            "FIELD_TRIP",
                            "FRIEND_LOCATION_PHOTOS",
                            "FIELD_TRIP_LURE",
                            "BACKGROUND_TEXT",
                            "SURVEY_LURE",
                            "CHROMECAST_IMAX",
                            "FITNESS",
                            "AGENDA",
                            "WEB_ANSWER",
                            "GAS_STATION_ALONG_ROUTE",
                            "ALONG_ROUTE_LIST",
                            "MODULE",
                            "MODULE_LIST",
                            "PIET",
                            "THINGS_TO_DO_LIST_LURE",
                            "FLIGHT_PRICE_LIST",
                            "FLIGHT_PRICE",
                            "GOOGLE_PLUS_STORY",
                            "THIRD_PARTY_WELCOME",
                            "HOTWORD_PROMO",
                            "TUTORIAL_CARD_CUSTOMIZE",
                            "TUTORIAL_CARD_INTRO",
                            "TUTORIAL_CARD_SWIPE",
                            "TUTORIAL_CARD_SWIPE_FOR_CUSTOMIZE",
                            "TUTORIAL_CARD_PULL_DOWN",
                            "CLUSTER_METADATA",
                            "CAROUSEL_MODULE_LIST",
                            "APP_LAUNCH_LIST",
                            "ULYSSES_LIST",
                            "CONTACT_CARD",
                            "GMAIL_LOCATION_OF_INTEREST",
                            "COMPONENT",
                            "CLOSET_INTERESTS_PAGE",
                            "CLOSET_INTEREST_CATEGORY",
                            "CLOSET_CONTROL_LIST",
                            "CLOSET_CONTROL_CATEGORY",
                            "CLOSET_PROFILE_SINGLE_TYPE",
                            "CLOSET_PROFILE_MULTI_TYPE",
                            "CLOSET_PROFILE_BUTTON",
                            "CLOSET_ENTITY",
                            "CLOSET_CONTROL",
                            "CLOSET_QUESTION",
                            "CLOSET_TEMPLATE_GROUP",
                            "CLOSET_NOW_SETTINGS",
                            "COMMUTE_NOTIFICATION",
                            "LOBBY_CAROUSEL",
                            "GRID_MODULE_LIST",
                            "AREA_TRAFFIC",
                            "TRANSIT_SYSTEM",
                            "NOW_CLIENT_OPT_IN_PROMO",
                            "HEALTH_UPDATE",
                            "FEED_COLLECTION",
                            "CARD_CAP",
                            "SEARCH_AWARENESS",
                            "ELEMENT",
                            "FACETS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "desiredTabType": {
                    "description": "Value corresponds to type of sidekick.TabType.",
                    "format": "int32",
                    "type": "integer"
                },
                "excludedNowCardTypes": {
                    "description": "List of cards not to grab.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Note that MOVIE_LIST should be replaced with a sub-tree of MOVIE\nentries. We should not have entries that are rolled-up entries.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Lure to enter browse mode about an interest.",
                        "Lure to enter browse mode about a trip.",
                        "Lure to read articles from an author.",
                        "Lure to enter browse mode about a place.",
                        "A single entry in the Browse Mode Author lure.",
                        "A single URL recommendation in browse mode.",
                        "A list of entity recommendations in browse mode.",
                        "A single entity recommendation for the list in browse mode.",
                        "A list of video recommendations in browse mode.",
                        "A single video recommendation for the list in browse mode.",
                        "Lure to enter browse mode for things to read.",
                        "A single entry in the Browse Mode Author lure.",
                        "Things to watch card.",
                        "A TV things to watch recommendation.",
                        "A VOD things to watch recommendation.",
                        "",
                        "",
                        "A card showing a single suggested application for the user.",
                        "List card containing multiple app suggestions.",
                        "A card showing personalized news for a user.",
                        "A card showing a single suggested contact (call/sms) for the user.",
                        "List card containing multiple contact suggestions.",
                        "Detected car parking location.",
                        "List of detected car parking location cards.",
                        "List of related music entries.",
                        "Individual transportation cards.",
                        "List of transportation cards.",
                        "Traffic incidents a user is likely to encounter.",
                        "Individual bill card.",
                        "List of bill cards.",
                        "Entry for a product that the user is interested in.",
                        "Entry for list of products that the user is interested in.",
                        "A card for the store the user is in.",
                        "A card for a product with price drop that a user has visited online.",
                        "A card with a list of Web sites relating to the TV program the user is\nwatching.",
                        "A single reference in the TV Web site list card.",
                        "",
                        "Special group entry used to display suggested apps and contacts in the\nhotseat.",
                        "A list of content update items.",
                        "A content update item.",
                        "The app suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "The contact suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "",
                        "A card used to display interesting nearby content from Field Trip.",
                        "A cards containing photos from a friend at a location.",
                        "Lure to enter browse mode of Field Trip.",
                        "Text displayed in the background, between other cards.",
                        "Card which brings the user to a Google Now feedback survey.",
                        "Card for information on whatever is showing in the Chromecast ambient\nstate.  Can be a link to a news story, a G+ photo with a link to the\nalbum, etc.",
                        "Card displaying fitness data.",
                        "Card displaying agenda data.",
                        "Card displaying web result from predictive search",
                        "Card displaying gas stations along a route.",
                        "A List of AlongRouteEntry.",
                        "Module-based card",
                        "Module-based list card",
                        "Piet-based card (go/piet)",
                        "List lure to enter browse mode of Things To Do.",
                        "A list of flights with prices and price changes.",
                        "An individual flight entry from the list above.",
                        "G+ stories card",
                        "Card displaying welcome information to users receiving third party cards.",
                        "Card promoting the hotword.",
                        "Tutorial card for customizing your Google Now experience.",
                        "Tutorial card for how to change card preferences.",
                        "Tutorial card for how to swipe the cards away.",
                        "Tutorial card for swiping to customize.",
                        "Tutorial card for how to pull down the top bar to search.",
                        "Entry containing metadata about a lotic cluster (e.g. title, color).",
                        "Entry type for the Carousel.  The Carousel is a Group entry\nwith entries made up of Modules.  The Modules should be defined\nas SmallContentModules.",
                        "Entry type for the App Launcher.  The App Launcher is a Group entry\nwith the entries made up of modules.",
                        "Ulysses list type entry for displaying various needs at a location.",
                        "Entry type for a contact card which directs user to the contacts app",
                        "Gmail location of interest card.",
                        "Entry type for a card built from a Hallmark Component.",
                        "Closet interests page (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for interests landing page.\nThe client would show its preview of several interests on its parent page,\nand show all intersts children on its own page by different collections:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet interest category (from AGSA 6.5). This type should only be assigned\nto a group_entry. The client would show its preview of several interests on\nits parent page, and show all interests in this collection on its own page\nby interested, suggested, or not intersted:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control list (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for \"More preferences\" case.\nThe client would show a list of control types:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control category (from AGSA 6.5). This type should only be assigned\nto a group_entry. It would be used for \"Weather\", \"Commute\" cases and etc.:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Single type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Multi-type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Button in profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one interest: go/now-closet-proto.",
                        "Cards and notifications controls in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one question: go/now-closet-proto.",
                        "Closet template group which may contain template rows and headers/footers,\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Closet now settings for enabling Now and notifications, also providing an\nentry for clearing all preference.\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Related to happy hour code yellow in 2015 Q4, this is expected to only be\nused as a synthentic type.  A request translator is the only place this\nis put into a request, and this type will never be returned to a client.\nShould be removed as part of the transition to Action Pipelines taking over\ncommute notifications delivery.\n\nMore details at: http://go/now-hh-commute-cy-15q4",
                        "Used to create a background-less card for Lobby, see: go/lobby.",
                        "Module-based list card with modules displayed in a multi-column grid.",
                        "Non-rendering entry type that is used solely for area traffic notifications\nbound for GMM; there is no corresponding EntrySource.",
                        "Non-rendering entry type that is used solely for transit system\nnotifications bound for GMM; there is no corresponding EntrySource.",
                        "Synthetic entry type for client-generated promotional or tutorial\ncards.  These pseudo-cards are created on the client and are not\nused by the server.",
                        "A Health-related card.",
                        "Collection in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Card cap entry in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Search awareness cards (go/search-aware).",
                        "Cards containing Element data, which can be passed to the Element runtime\nto render the contents of the card on the UI. More details at go/elements",
                        "EntryType for facet chips (go/complex-facets)"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            "FREQUENT_PLACE",
                            "UI_NAVIGATION",
                            "WEATHER",
                            "WEATHER_TINY",
                            "WEATHER_LIST",
                            "TRANSIT_STATION",
                            "GENERIC_CARD",
                            "GENERIC_TABLE",
                            "FLIGHT_STATUS",
                            "FLIGHT_LIST",
                            "SPORT_SCORE",
                            "SPORT_LURE_LIST",
                            "SPORT_EVENT",
                            "SPORT_HIGHLIGHT_LIST",
                            "SPORT_HIGHLIGHT",
                            "CALENDAR",
                            "TRANSLATE",
                            "CURRENCY_EXCHANGE",
                            "CLOCK",
                            "NEARBY_PLACE",
                            "PUBLIC_ALERT",
                            "MOVIE_LIST",
                            "STOCK_QUOTE_LIST",
                            "STOCK_QUOTE",
                            "ATTRACTIONS_LIST",
                            "ATTRACTION",
                            "PACKAGE_TRACKING",
                            "PACKAGE_TRACKING_LIST",
                            "NEWS",
                            "BREAKING_NEWS",
                            "HYPERLOCAL_NEWS",
                            "ENTITY_NEWS",
                            "PHOTO_SPOT",
                            "BIRTHDAY_CARD",
                            "EVENT",
                            "MOVIE",
                            "EVENT_LIST",
                            "RESEARCH_TOPIC",
                            "RESEARCH_PAGE",
                            "BARCODE",
                            "GMAIL",
                            "NEARBY_PLACES_LIST",
                            "REAL_ESTATE",
                            "REAL_ESTATE_LIST",
                            "OPEN_HOUSE",
                            "MOVIE_TICKET",
                            "REMINDER",
                            "REMINDER_LIST",
                            "WEBSITE_UPDATE",
                            "WEBSITE_UPDATE_LIST",
                            "GENERIC_TICKET",
                            "BOOK",
                            "ALBUM",
                            "VIDEO_GAME",
                            "TV_EPISODE",
                            "SHARED_TRAFFIC_CARD",
                            "RELEVANT_WEBSITE",
                            "RELEVANT_WEBSITE_LIST",
                            "LAST_TRAIN_HOME",
                            "TV_RECOGNITION",
                            "WALLET_LOYALTY",
                            "HOTEL_PLACE",
                            "RESTAURANT_PLACE",
                            "CAR_RENTAL",
                            "GENERIC_TV_PROGRAM",
                            "CONCERT_TICKET",
                            "TRAINING_QUESTION",
                            "TV_NEWS",
                            "TV_MUSIC",
                            "TV_KNOWLEDGE",
                            "TV_KNOWLEDGE_LIST",
                            "SPORT_EVENT_TICKET",
                            "PROTOTYPE",
                            "BROWSE_MODE_LURE_INTEREST_UPDATE",
                            "BROWSE_MODE_LURE_TRAVEL",
                            "BROWSE_MODE_LURE_AUTHOR",
                            "AT_A_PLACE",
                            "BROWSE_MODE_AUTHOR_STORY",
                            "BROWSE_MODE_WEB_LINK",
                            "BROWSE_MODE_ENTITY_LIST",
                            "BROWSE_MODE_ENTITY",
                            "BROWSE_MODE_VIDEO_LIST",
                            "BROWSE_MODE_VIDEO",
                            "BROWSE_MODE_READING_LURE",
                            "BROWSE_MODE_READING_STORY",
                            "THINGS_TO_WATCH",
                            "THINGS_TO_WATCH_TV",
                            "THINGS_TO_WATCH_VOD",
                            "THINGS_TO_WATCH_LURE",
                            "THINGS_TO_WATCH_LIST_LURE",
                            "APP_SUGGESTION",
                            "APP_SUGGESTION_LIST",
                            "PERSONALIZED_NEWS",
                            "CONTACT_SUGGESTION",
                            "CONTACT_SUGGESTION_LIST",
                            "VEHICLE_PARKING_LOCATION",
                            "VEHICLE_PARKING_LOCATION_LIST",
                            "TV_MUSIC_KNOWLEDGE_LIST",
                            "TRANSPORTATION",
                            "TRANSPORTATION_LIST",
                            "TRAFFIC_INCIDENTS",
                            "BILL",
                            "BILL_LIST",
                            "PRODUCT",
                            "PRODUCT_LIST",
                            "IN_STORE",
                            "PRICE_DROP",
                            "TV_RELATED_WEB_SITE_LIST",
                            "TV_RELATED_WEB_SITE",
                            "TV_RELATED_WEB_SITE_KNOWLEDGE",
                            "HOTSEAT_SUGGESTION_LIST",
                            "CONTENT_UPDATE_LIST",
                            "CONTENT_UPDATE_ITEM",
                            "HOTSEAT_APP_SUGGESTION",
                            "HOTSEAT_CONTACT_SUGGESTION",
                            "MALL_DIRECTORY",
                            "FIELD_TRIP",
                            "FRIEND_LOCATION_PHOTOS",
                            "FIELD_TRIP_LURE",
                            "BACKGROUND_TEXT",
                            "SURVEY_LURE",
                            "CHROMECAST_IMAX",
                            "FITNESS",
                            "AGENDA",
                            "WEB_ANSWER",
                            "GAS_STATION_ALONG_ROUTE",
                            "ALONG_ROUTE_LIST",
                            "MODULE",
                            "MODULE_LIST",
                            "PIET",
                            "THINGS_TO_DO_LIST_LURE",
                            "FLIGHT_PRICE_LIST",
                            "FLIGHT_PRICE",
                            "GOOGLE_PLUS_STORY",
                            "THIRD_PARTY_WELCOME",
                            "HOTWORD_PROMO",
                            "TUTORIAL_CARD_CUSTOMIZE",
                            "TUTORIAL_CARD_INTRO",
                            "TUTORIAL_CARD_SWIPE",
                            "TUTORIAL_CARD_SWIPE_FOR_CUSTOMIZE",
                            "TUTORIAL_CARD_PULL_DOWN",
                            "CLUSTER_METADATA",
                            "CAROUSEL_MODULE_LIST",
                            "APP_LAUNCH_LIST",
                            "ULYSSES_LIST",
                            "CONTACT_CARD",
                            "GMAIL_LOCATION_OF_INTEREST",
                            "COMPONENT",
                            "CLOSET_INTERESTS_PAGE",
                            "CLOSET_INTEREST_CATEGORY",
                            "CLOSET_CONTROL_LIST",
                            "CLOSET_CONTROL_CATEGORY",
                            "CLOSET_PROFILE_SINGLE_TYPE",
                            "CLOSET_PROFILE_MULTI_TYPE",
                            "CLOSET_PROFILE_BUTTON",
                            "CLOSET_ENTITY",
                            "CLOSET_CONTROL",
                            "CLOSET_QUESTION",
                            "CLOSET_TEMPLATE_GROUP",
                            "CLOSET_NOW_SETTINGS",
                            "COMMUTE_NOTIFICATION",
                            "LOBBY_CAROUSEL",
                            "GRID_MODULE_LIST",
                            "AREA_TRAFFIC",
                            "TRANSIT_SYSTEM",
                            "NOW_CLIENT_OPT_IN_PROMO",
                            "HEALTH_UPDATE",
                            "FEED_COLLECTION",
                            "CARD_CAP",
                            "SEARCH_AWARENESS",
                            "ELEMENT",
                            "FACETS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "replacementType": {
                    "enum": [
                        "DEFAULT",
                        "REPLACE_OR_REMOVE",
                        "REPLACE_IF_POSSIBLE",
                        "REPLACE_OR_ANY"
                    ],
                    "enumDescriptions": [
                        "Defaults to REPLACE_OR_ANY",
                        "Replace with a desired card type or remove from stream.",
                        "Try to replace the card with a desired card type or leave as is.",
                        "Try to replace with a desired card or select any valid Now card instead."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__BrowserBindingV2CrowdsourcingResult": {
            "description": "Results message for the browser binding v2 crowdsourcing pipeline.\nThe pipeline collects profiles for the strong binding.",
            "id": "BotguardCrowdsourcing__BrowserBindingV2CrowdsourcingResult",
            "properties": {
                "strongBindingConstructor": {
                    "$ref": "BotguardCrowdsourcing__BrowserStrongBindingV2Constructor"
                },
                "strongBindingProperty": {
                    "$ref": "BotguardCrowdsourcing__BrowserStrongBindingV2Property"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__BrowserProfileResult": {
            "id": "BotguardCrowdsourcing__BrowserProfileResult",
            "properties": {
                "getOwnPropertyNames": {
                    "type": "boolean"
                },
                "getPrototypeOf": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "objectIndex": {
                    "description": "The path to the property can be represented by one of:\n1. object_index + name, where object_index is the object path in\nthe current crowdsourcing configuration and name is the property name.\n2. path_hash, which is BotGuard's CalcHash value over object path + \".\" +\nproperty name",
                    "format": "int32",
                    "type": "integer"
                },
                "pathHash": {
                    "format": "int32",
                    "type": "integer"
                },
                "protoChainDepth": {
                    "description": "The proto chain depth of object_index.",
                    "format": "int32",
                    "type": "integer"
                },
                "protoProperty": {
                    "description": "Features supported by the browser.",
                    "type": "boolean"
                },
                "type": {
                    "description": "What type the property specified above was found to have.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__BrowserStrongBindingV2Constructor": {
            "description": "Results message for the discovered constructors in the browser binding v2\ncrowdsourcing.",
            "id": "BotguardCrowdsourcing__BrowserStrongBindingV2Constructor",
            "properties": {
                "constructorName": {
                    "description": "The name of this constructor. e.g. \"HTMLElement\".",
                    "type": "string"
                },
                "propertyCount": {
                    "description": "Number of properites in this constructor. i.e.\n  Object.getOwnPropertyNames(constructor.prototype).length",
                    "format": "int32",
                    "type": "integer"
                },
                "randomProperty": {
                    "items": {
                        "$ref": "BotguardCrowdsourcing__BrowserStrongBindingV2RandomDiscoverProperty"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__BrowserStrongBindingV2Property": {
            "description": "Results message for the discovered properties of the browser binding v2\ncrowdsourcing.",
            "id": "BotguardCrowdsourcing__BrowserStrongBindingV2Property",
            "properties": {
                "constructorNameHash": {
                    "description": "The hash of the constructor name, computed with botguard::CalcHash.",
                    "format": "uint32",
                    "type": "integer"
                },
                "matched": {
                    "description": "For mature profiles, whether this property matched the profile of the\nclaimed useragent_id.",
                    "type": "boolean"
                },
                "propertyIndex": {
                    "description": "The index of this property in the constructor's property list.",
                    "format": "int32",
                    "type": "integer"
                },
                "propertyName": {
                    "description": "The property name. This is not always collected. It is sampled at a very\nlow ratio.",
                    "type": "string"
                },
                "propertyNameHash": {
                    "description": "The hash of the property name, computed with botguard::CalcHash.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__BrowserStrongBindingV2RandomDiscoverProperty": {
            "description": "Properties randomly collected from the randomly discovered constructor.\nThese aren't used in property validation. But being randomly discovered,\nthey might be properties that wouldn't be collected normally, for example,\nproperties of a constructor added by an automation framework.",
            "id": "BotguardCrowdsourcing__BrowserStrongBindingV2RandomDiscoverProperty",
            "properties": {
                "index": {
                    "format": "int32",
                    "type": "integer"
                },
                "nameHash": {
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__DiscoverClassesResult": {
            "description": "Results message for the DISCOVER_CLASSES stage of the Obj-C environment\ncrowdsourcing signal.",
            "id": "BotguardCrowdsourcing__DiscoverClassesResult",
            "properties": {
                "emptyImage": {
                    "description": "Whether no class names could be retrieved for the image hash.",
                    "type": "boolean"
                },
                "imageNameHash": {
                    "description": "The hash of the image name for which the classes were crowdsourced.",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The crowdsourced class names.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__DiscoverMethodsResult": {
            "description": "Results message for the DISCOVER_METHODS stage of the Obj-C environment\ncrowdsourcing signal.",
            "id": "BotguardCrowdsourcing__DiscoverMethodsResult",
            "properties": {
                "emptyClass": {
                    "description": "Whether not method names could be retrieved for the path hash.",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the method.",
                    "type": "string"
                },
                "pathHash": {
                    "description": "The hash of the image name joined with the name of the selected class,\nseparated by '.'.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__IOSGuassoCrowdsourcingResult": {
            "description": "Result of crowdsourcing the iOSGuasso fingerprints.",
            "id": "BotguardCrowdsourcing__IOSGuassoCrowdsourcingResult",
            "properties": {
                "errorMessage": {
                    "description": "The error message if the signal failed to collect the fingerprint.",
                    "type": "string"
                },
                "fingerprint": {
                    "description": "The fingerprint collected for the selected scene.",
                    "format": "uint32",
                    "type": "integer"
                },
                "taskId": {
                    "description": "The index of the selected scene in task.scene.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__JavaScriptCoreResult": {
            "id": "BotguardCrowdsourcing__JavaScriptCoreResult",
            "properties": {
                "arraySize": {
                    "description": "The size of the array of instructions.",
                    "format": "uint32",
                    "type": "integer"
                },
                "functionId": {
                    "description": "The ID of the JavaScript function for which the crowdsourcing was\nperformed.",
                    "format": "uint32",
                    "type": "integer"
                },
                "iosVersionLowerBound": {
                    "description": "The oldest iOS version for which the JavaScriptCore ABI matches this\ncrowdsourcing result. See iosguard.jsc.ProfileKey.",
                    "type": "string"
                },
                "offset": {
                    "description": "The offset from the start of the instruction array where the crowdsourcing\nis performed.",
                    "format": "int32",
                    "type": "integer"
                },
                "operand": {
                    "description": "The crowdsourced JavaScript bytecode operands.",
                    "items": {
                        "format": "uint32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__ObjcRuntimeResult": {
            "description": "Result of crowdsourcing the Objective-C runtime environment.",
            "id": "BotguardCrowdsourcing__ObjcRuntimeResult",
            "properties": {
                "discoveredClasses": {
                    "$ref": "BotguardCrowdsourcing__DiscoverClassesResult",
                    "description": "Class discovered by the crowdsourcing signal."
                },
                "discoveredMethod": {
                    "$ref": "BotguardCrowdsourcing__DiscoverMethodsResult",
                    "description": "Method discovered by the crowdsourcing signal."
                },
                "imageName": {
                    "description": "DISCOVER_IMAGES stage results.\nThe name of an image (dynamic library) seen by the crowdsourcing signal in\nthe runtime.",
                    "type": "string"
                },
                "validatedMethod": {
                    "$ref": "BotguardCrowdsourcing__ValidateMethodsResult",
                    "description": "Method encodings validated by the crowdsourcing signal."
                }
            },
            "type": "object"
        },
        "BotguardCrowdsourcing__ValidateMethodsResult": {
            "description": "Results message for the VALIDATE_METHODS stage of the Obj-C environment\ncrowdsourcing signal.",
            "id": "BotguardCrowdsourcing__ValidateMethodsResult",
            "properties": {
                "pathHash": {
                    "description": "The hash of the image name joined with the name of the selected class and\nthe name of the selected method, separated by '.'.",
                    "format": "int32",
                    "type": "integer"
                },
                "typeEncoding": {
                    "description": "The type encoding of the selected method.\n'???' if the method is not stable.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard_AccelerometerEventLog_Acceleration": {
            "id": "Botguard_AccelerometerEventLog_Acceleration",
            "properties": {
                "x": {
                    "format": "float",
                    "type": "number"
                },
                "y": {
                    "format": "float",
                    "type": "number"
                },
                "z": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Botguard_AccelerometerEventLog_Orientation": {
            "id": "Botguard_AccelerometerEventLog_Orientation",
            "properties": {
                "alpha": {
                    "description": "Used both for orientation (in degrees) and for rotation rate (in degrees\nper second). See devicemotion and deviceorientation docs for the meaning\nof each axis.",
                    "format": "float",
                    "type": "number"
                },
                "beta": {
                    "format": "float",
                    "type": "number"
                },
                "gamma": {
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Botguard_BehavioralEvent_Point": {
            "description": "Represents a 2D co-ordinate.",
            "id": "Botguard_BehavioralEvent_Point",
            "properties": {
                "x": {
                    "description": "x co-ordinate of this point",
                    "format": "int32",
                    "type": "integer"
                },
                "y": {
                    "description": "y co-ordinate of this point",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard_BehavioralEvent_Size2D": {
            "description": "Represents a 2D size.",
            "id": "Botguard_BehavioralEvent_Size2D",
            "properties": {
                "height": {
                    "description": "height of this 2D size",
                    "format": "int32",
                    "type": "integer"
                },
                "width": {
                    "description": "width of this 2D size",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__AccelerometerEventLog": {
            "id": "Botguard__AccelerometerEventLog",
            "properties": {
                "accelerationSummary": {
                    "description": "A discrete summary of whether the device mostly stood still. This is\nderived from the length of max_acceleration_by_length.",
                    "enum": [
                        "NO_MOVEMENT",
                        "TINY_MOVEMENT",
                        "SMALL_MOVEMENT",
                        "BIG_MOVEMENT"
                    ],
                    "enumDescriptions": [
                        "All movements were exactly zero. Probably not a real device with real\nsensors (they should have at least some noise).",
                        "The device barely moved. It might be on a table or in a rack.",
                        "The device moved only slowly. It might be in a person's hand.",
                        "The device moved quickly. (The threshold between SMALL_MOVEMENT and\nBIG_MOVEMENT is rather arbitrary.)"
                    ],
                    "type": "string"
                },
                "firstAcceleration": {
                    "$ref": "Botguard_AccelerometerEventLog_Acceleration",
                    "description": "first/last is data from the first and last event.\nmin/max_..._per_axis has the minimum and maximum for each axis separately.\nmax_..._by_length has the longest measured vector.\nAll these fields are unset if motion_event_count is 0."
                },
                "firstAccelerationIncludingGravity": {
                    "$ref": "Botguard_AccelerometerEventLog_Acceleration"
                },
                "firstOrientation": {
                    "$ref": "Botguard_AccelerometerEventLog_Orientation",
                    "description": "first/last is data from the first and last event.\nmin/max_..._per_axis has the minimum and maximum for each axis separately.\nAll these fields are unset if orientation_event_count is 0."
                },
                "firstRotationRate": {
                    "$ref": "Botguard_AccelerometerEventLog_Orientation"
                },
                "lastAcceleration": {
                    "$ref": "Botguard_AccelerometerEventLog_Acceleration"
                },
                "lastAccelerationIncludingGravity": {
                    "$ref": "Botguard_AccelerometerEventLog_Acceleration"
                },
                "lastOrientation": {
                    "$ref": "Botguard_AccelerometerEventLog_Orientation"
                },
                "lastRotationRate": {
                    "$ref": "Botguard_AccelerometerEventLog_Orientation"
                },
                "maxAccelerationByLength": {
                    "$ref": "Botguard_AccelerometerEventLog_Acceleration"
                },
                "maxAccelerationIncludingGravityPerAxis": {
                    "$ref": "Botguard_AccelerometerEventLog_Acceleration"
                },
                "maxOrientationPerAxis": {
                    "$ref": "Botguard_AccelerometerEventLog_Orientation"
                },
                "maxRotationRateByLength": {
                    "$ref": "Botguard_AccelerometerEventLog_Orientation"
                },
                "minAccelerationIncludingGravityPerAxis": {
                    "$ref": "Botguard_AccelerometerEventLog_Acceleration"
                },
                "minOrientationPerAxis": {
                    "$ref": "Botguard_AccelerometerEventLog_Orientation"
                },
                "motionEventCount": {
                    "description": "Number of devicemotion events.",
                    "format": "int32",
                    "type": "integer"
                },
                "multipleCompletelyEqualEvents": {
                    "description": "We got multiple nonzero measurements, but they all had the same values (see\nabove for what values are collected). Probably not a real device (they\nshould have at least some noise).",
                    "type": "boolean"
                },
                "noMeasurements": {
                    "description": "There were no events at all, or they contained only zeros.",
                    "type": "boolean"
                },
                "oneMeasurement": {
                    "description": "We only got one nonzero measurement.",
                    "type": "boolean"
                },
                "orientationEventCount": {
                    "description": "Number of deviceorientation events.",
                    "format": "int32",
                    "type": "integer"
                },
                "parallelToTheGround": {
                    "description": "The device was parallel to the ground (e.g. lying on a table). It might\nhave moved, but gravity was always pointing downwards.\nThis is detected by checking if all device orientation events had beta and\ngamma values within a few degrees of 0.",
                    "type": "boolean"
                },
                "rotationRateSummary": {
                    "description": "A discrete summary of whether the device mostly kept its orientation. This\nis derived from the length of max_rotation_rate_by_length.",
                    "enum": [
                        "NO_MOVEMENT",
                        "TINY_MOVEMENT",
                        "SMALL_MOVEMENT",
                        "BIG_MOVEMENT"
                    ],
                    "enumDescriptions": [
                        "All movements were exactly zero. Probably not a real device with real\nsensors (they should have at least some noise).",
                        "The device barely moved. It might be on a table or in a rack.",
                        "The device moved only slowly. It might be in a person's hand.",
                        "The device moved quickly. (The threshold between SMALL_MOVEMENT and\nBIG_MOVEMENT is rather arbitrary.)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__AppReceiptData": {
            "description": "Data about an AppReceipt from an iOS application.",
            "id": "Botguard__AppReceiptData",
            "properties": {
                "ageRating": {
                    "description": "The age rating of the app.",
                    "type": "string"
                },
                "appItemId": {
                    "description": "Unique AppStore ID of the app that created the transaction.",
                    "format": "uint64",
                    "type": "string"
                },
                "appVersion": {
                    "description": "The version of the application.",
                    "type": "string"
                },
                "bundleId": {
                    "description": "The bundle identifier from the receipt, in case of mismatch.",
                    "type": "string"
                },
                "creationDate": {
                    "description": "The creation date of the receipt.\nFormat: RFC 3339.",
                    "type": "string"
                },
                "dataSize": {
                    "description": "The size of the data returned from the device.",
                    "format": "uint32",
                    "type": "integer"
                },
                "dataType": {
                    "description": "The type of data returned.",
                    "enum": [
                        "UNKNOWN",
                        "PAYLOAD",
                        "FULL_RECEIPT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "expirationDate": {
                    "description": "Expiration date of receipt. Only for Volume Purchase Program.\nFormat: RFC 3339.",
                    "type": "string"
                },
                "gzipped": {
                    "description": "Whether the data was gzipped or not.",
                    "type": "boolean"
                },
                "originalApplicationVersion": {
                    "description": "Version of app when initial purchase was made.",
                    "type": "string"
                },
                "originalPurchaseDate": {
                    "description": "Original purchase date.",
                    "type": "string"
                },
                "receiptType": {
                    "description": "The type of the receipt, e.g. Production or ProductionSandbox.",
                    "type": "string"
                },
                "versionExternalIdentifier": {
                    "description": "Unique ID of an app revision.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__BehavioralEvent": {
            "id": "Botguard__BehavioralEvent",
            "properties": {
                "eventTime": {
                    "description": "Time the event occurred, as measured on the client\nMilliseconds relative to client_setup_time.",
                    "format": "int32",
                    "type": "integer"
                },
                "eventType": {
                    "description": "Specifies the event type of this message; payload fields are set or not\nbased on the value of this field.",
                    "enum": [
                        "UNKNOWN_BEHAVIORAL_EVENT",
                        "MOUSE_MOVE",
                        "MOUSE_DOWN",
                        "MOUSE_UP",
                        "MOUSE_CLICK",
                        "SCROLL",
                        "PAGE_VISIBILITY",
                        "FOCUS",
                        "RESIZE",
                        "TOUCH_START",
                        "TOUCH_END",
                        "TOUCH_MOVE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "focus": {
                    "description": "Payload field set for the FOCUS event type, specifying the focus change\nthat occurred.",
                    "enum": [
                        "UNKNOWN_FOCUS",
                        "FOCUSSED",
                        "BLURRED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "pageVisibility": {
                    "description": "For the PAGE_VISIBILITY event type, specifies the new state from the\nHTML Page Visibility API.",
                    "enum": [
                        "UNKNOWN_PAGE_VISIBILITY",
                        "VISIBLE",
                        "HIDDEN",
                        "PRERENDER",
                        "UNLOAD",
                        "PREVIEW"
                    ],
                    "enumDescriptions": [
                        "The API was not available or not checked",
                        "",
                        "",
                        "",
                        "",
                        "not in the spec, but present in previous non-standard impls."
                    ],
                    "type": "string"
                },
                "position": {
                    "$ref": "Botguard_BehavioralEvent_Point",
                    "description": "Payload field set when the behavioural event has a cursor position\nrecorded."
                },
                "size": {
                    "$ref": "Botguard_BehavioralEvent_Size2D",
                    "description": "Payload field set when the behavioural event has a size recorded."
                }
            },
            "type": "object"
        },
        "Botguard__BehavioralEventLog": {
            "id": "Botguard__BehavioralEventLog",
            "properties": {
                "event": {
                    "items": {
                        "$ref": "Botguard__BehavioralEvent"
                    },
                    "type": "array"
                },
                "sessionStart": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__BrowserEvent": {
            "id": "Botguard__BrowserEvent",
            "properties": {
                "alt": {
                    "type": "boolean"
                },
                "charCode": {
                    "description": "For KEYPRESS. Unicode character code.",
                    "format": "int32",
                    "type": "integer"
                },
                "ctrl": {
                    "description": "For KEYDOWN, KEYUP, KEYPRESS.",
                    "type": "boolean"
                },
                "isTrusted": {
                    "description": "Set when event.isTrusted is true.\nNext tag = 16",
                    "type": "boolean"
                },
                "keyCode": {
                    "description": "For KEYDOWN,KEYUP. Browser-specific key code.",
                    "format": "int32",
                    "type": "integer"
                },
                "meta": {
                    "description": "Meta is the Command key on Macs.",
                    "type": "boolean"
                },
                "serial": {
                    "description": "Ordering of the events with the same timestamp.",
                    "format": "int32",
                    "type": "integer"
                },
                "shift": {
                    "type": "boolean"
                },
                "target": {
                    "description": "Field index.",
                    "format": "int32",
                    "type": "integer"
                },
                "timeDelta": {
                    "description": "Delta to the last event of the same type.",
                    "format": "int64",
                    "type": "string"
                },
                "timestamp": {
                    "description": "In milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "KEYDOWN",
                        "KEYUP",
                        "KEYPRESS",
                        "FOCUS",
                        "BLUR",
                        "NEXT_SESSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "Event type occupies 3 bits in event flag in bgresponse, so it\ncannot be larger than 7 when passed from the client.",
                        "Marker events.\nSession start. This event is inserted between event log sessions."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__BundleInformation": {
            "description": "Information about a Bundle from an iOS application.",
            "id": "Botguard__BundleInformation",
            "properties": {
                "displayName": {
                    "description": "CFBundleDisplayName",
                    "type": "string"
                },
                "id": {
                    "description": "CFBundleIdentifier",
                    "type": "string"
                },
                "version": {
                    "description": "CFBundleVersion",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__ChunkTelemetry": {
            "description": "Information about one chunk of execution.",
            "id": "Botguard__ChunkTelemetry",
            "properties": {
                "durationMs": {
                    "description": "The duration of the chunk, in ms.",
                    "format": "int32",
                    "type": "integer"
                },
                "lastProgressReport": {
                    "description": "The last progress report (a progress_report_string from\nbotguard.ProgressReport) that was emitted before the end of this chunk;\nempty if none had been emitted yet.",
                    "type": "string"
                },
                "phase": {
                    "description": "Which program phase this chunk happened in.",
                    "enum": [
                        "UNSPECIFIED",
                        "SETUP",
                        "EVENT_HANDLERS",
                        "SNAPSHOT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__CollectedVariableValue": {
            "id": "Botguard__CollectedVariableValue",
            "properties": {
                "stringValue": {
                    "description": "The value of the requested global variable, converted to a string. If null\nor undefined, this field will not be present.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__ContentBindingField": {
            "description": "One field for content binding. This should be corresponding to one item in\nthe opt_snapshot_arg dictionary passed to vm.invoke().",
            "id": "Botguard__ContentBindingField",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "fieldValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__DecodeMetadata": {
            "id": "Botguard__DecodeMetadata",
            "properties": {
                "range": {
                    "description": "List of data ranges in the response.",
                    "items": {
                        "$ref": "Botguard__DecodeRange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Botguard__DecodeRange": {
            "id": "Botguard__DecodeRange",
            "properties": {
                "description": {
                    "description": "Free-text human-readable description of the range.",
                    "type": "string"
                },
                "end": {
                    "description": "Where does the range end.",
                    "format": "int32",
                    "type": "integer"
                },
                "start": {
                    "description": "Where does the range start in the response after base64 decoding.",
                    "format": "int32",
                    "type": "integer"
                },
                "tag": {
                    "description": "What tag is the range associated with.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__DecodeRequest": {
            "id": "Botguard__DecodeRequest",
            "properties": {
                "actionName": {
                    "description": "See CreationRequest.",
                    "type": "string"
                },
                "adspamQueryIdFingerprint": {
                    "format": "uint64",
                    "type": "string"
                },
                "breed": {
                    "description": "Which breed to decode for.",
                    "enum": [
                        "STANDARD",
                        "LITE",
                        "HIGHRISK",
                        "EXPERIMENTAL",
                        "STEALTHY",
                        "IOSGUARD"
                    ],
                    "enumDescriptions": [
                        "All signals can be used, full set of browser binding tables. You may only\nuse this on google-owned properties and iframes originating from\nsuch properties.",
                        "Only signals without secrets in the program can be used. This is for\ncontent embedded in third party sites.",
                        "Same as standard, but programs and responses aren't compatible. This is\nfor more risky integrations.",
                        "Decode-compatible with STANDARD. This is for conducting experiments on\nVMs.",
                        "Stealthy breed that doesn't doesn't contain references to Google.\nFor use on honeypots.",
                        "Breed designed for use in iOSGuard."
                    ],
                    "type": "string"
                },
                "clientResponse": {
                    "description": "The response string generated by the BotGuard program.",
                    "type": "string"
                },
                "contentBindingField": {
                    "description": "Fields for content binding. If content binding was enabled, here a client\nshould send the whole opt_snapshot_arg dictionary that was passed to\nvm.invoke() in JavaScript.",
                    "items": {
                        "$ref": "Botguard__ContentBindingField"
                    },
                    "type": "array"
                },
                "emergencyStop": {
                    "description": "If true, use emergency-stop mode for this request. All decodes will be\nmarked as not suspicious.\nThis is to be used only for the communication between BotGuard server and\nAPI, not for clients.",
                    "type": "boolean"
                },
                "eventTime": {
                    "description": "This is the time (in seconds) at which the client_response is recorded.\nIf you are not doing offline analysis, then you do not need to set this\nfield.\nWhen the event_time has the default value of zero the expiration status of\nthe response is compared to the current time, otherwise it would be\ncompared to the value stored in this field.",
                    "format": "uint32",
                    "type": "integer"
                },
                "expectedReferrerUrl": {
                    "description": "When expected_referrer_url is set, the decoder tries to compare it to the\nhash collected from document.referrer. When the hash doesn't match, the\ndecoder yields REASON_REFERRER_MISMATCH and marks response suspicious.\ncollect_referrer_hash is expected to be set during generation time.\nOtherwise the decoder yields REASON_MISSING_HASH instead because the hash\ncannot be found in response.",
                    "type": "string"
                },
                "gaiaId": {
                    "description": "Credential hopping. See ProgramDescriptor for documentation on each field.",
                    "format": "uint64",
                    "type": "string"
                },
                "httpHeaders": {
                    "description": "Same as in CreationRequest.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "inputs": {
                    "description": "If using form protection, provide the contents of the form elements.\nThe order of the inputs must be the same as it was in the CreationRequest.",
                    "items": {
                        "$ref": "Botguard__InputField"
                    },
                    "type": "array"
                },
                "invokeSoftSignalsModel": {
                    "description": "Invoke one or more soft signals ML models. The models' predictions will be\nincluded in the decode response.\nNote: Clients should not set this. This will be configured by the BotGuard\nteam using per-action signal config. Contact botguard-team@ if you are\ninterested in soft signal models.\nNote: setting this means BotGuard server will send RPCs to Servomatic\nduring the decode RPC. The total latency of the decode RPC increases\naccordingly, typically by about 5ms.",
                    "items": {
                        "$ref": "Botguard__SoftSignalsModelSpec"
                    },
                    "type": "array"
                },
                "lsoClientId": {
                    "type": "string"
                },
                "lsoProjectId": {
                    "type": "string"
                },
                "protocolVersion": {
                    "description": "See CreationRequest.",
                    "format": "uint32",
                    "type": "integer"
                },
                "rejectIfNoAppIdentity": {
                    "description": "Whether to add a specific reason to the verdict if no app identity\ninformation was found in the response. This is used for clients that\nrequire at least some proof of app identity to be present in the response.",
                    "type": "boolean"
                },
                "rejectSyntheticClick": {
                    "description": "Whether simple synthetic clicks are considered suspicious.\nDon't set this if the UI would do button.click() from JavaScript on a\nBotGuard monitored button.",
                    "type": "boolean"
                },
                "rejectZeroEvents": {
                    "description": "Whether no user interaction (ZeroEvents signal) should be suspicious. The\ndefault value is true, which is good for most cases. If the action can be\nlegitimately completed without any user interaction, set this to false.",
                    "type": "boolean"
                },
                "rejectZeroMouseEvents": {
                    "description": "Whether completely missing mouse events is considered an abnormal behavior.\nClients whose UI don't necessarily require any user interaction, e.g.\nYouTube player, should consider setting this to false.",
                    "type": "boolean"
                },
                "requiresTyping": {
                    "description": "Whether the typing is required to legitimately complete the action. It\nwill then mark as suspicious traffic that has no typing from the user\ndetected.",
                    "type": "boolean"
                },
                "withMetadata": {
                    "description": "Request the decoder to provide DecodeMetadata submessage with the debugging\ninformation about this response.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Botguard__DecodeResponse": {
            "id": "Botguard__DecodeResponse",
            "properties": {
                "accelerometer": {
                    "$ref": "Botguard__AccelerometerEventLog",
                    "description": "Data about device motion and orientation."
                },
                "actionLifetimeMs": {
                    "description": "Lifetime of the action in milliseconds, i.e., the time between the program\nstartup and the feedback string being finalized.",
                    "format": "uint32",
                    "type": "integer"
                },
                "adspamSignals": {
                    "$ref": "AdsSpam__JavascriptAdClickSignals",
                    "description": "AD SPAM\nThe adspam_signals that were returned in the feedback."
                },
                "appReceiptData": {
                    "$ref": "Botguard__AppReceiptData",
                    "description": "Data retrieved from or about the AppReceipt of the iOS application."
                },
                "availableScreenHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "availableScreenLeft": {
                    "description": "The position of the available area on the screen.",
                    "format": "int32",
                    "type": "integer"
                },
                "availableScreenTop": {
                    "format": "int32",
                    "type": "integer"
                },
                "availableScreenWidth": {
                    "description": "AVAILABLE SCREEN",
                    "format": "int32",
                    "type": "integer"
                },
                "bbv2CrowdsourcingResult": {
                    "description": "The results collected by the browser binding V2 signal to be used by the\ncrowdsourcing pipeline.",
                    "items": {
                        "$ref": "BotguardCrowdsourcing__BrowserBindingV2CrowdsourcingResult"
                    },
                    "type": "array"
                },
                "behavioralEventLog": {
                    "$ref": "Botguard__BehavioralEventLog",
                    "description": "A list of behavioral events collected from the browser"
                },
                "browserBindingFingerprint": {
                    "description": "BROWSER BINDING\nUsed for debugging only. This is the concatenated sequence of types\nobserved in the browser that were used for browser binding.",
                    "type": "string"
                },
                "browserBindingSelectedProperties": {
                    "description": "Used for debugging. When logged, these are the properties that were used\nin the Browser Binding and transmitted back salted and hashed in the\nfeedback.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "browserWeakBindingResult": {
                    "description": "When browser weak binding fails, this collects the response from the user's\nbrowser, which doesn't match the expected response based on our profile.\nThe value the concatenation of a random salt and the values of the selected\nproperties.\nFor debugging, this response can be joined with the generation log's\nbrowser_weak_binding_properties field to better understand why the binding\nfailed.",
                    "type": "string"
                },
                "bundleInformation": {
                    "$ref": "Botguard__BundleInformation",
                    "description": "Information retrieved from the Bundle of the iOS application."
                },
                "chromeApi": {
                    "description": "This contains the window.chrome.* APIs. For example, Chrome58 has the\nfollowing properties defined under window.chrome: app, webstore, runtime,\nloadTimes and csi. Thus this field would be \"lcawr\", the join of the first\ncharacter of each property. However, the order is not defined because we\nobtain this simply by applying the FOREACH opcode on the window.chrome\nobject. Hence \"crawl\" might be valid too. In reality, the value is rather\nstable as \"lcawr\". Anything else might justify a suspicion.",
                    "type": "string"
                },
                "chunkTelemetry": {
                    "description": "For selected programs, information about the chunks. They are ordered in\nthe same order that the chunks happened. Note that we may skip small event\nhandler chunks.",
                    "items": {
                        "$ref": "Botguard__ChunkTelemetry"
                    },
                    "type": "array"
                },
                "classdPing": {
                    "description": "CLASSD PING LATENCY (to detect proxy)",
                    "format": "uint32",
                    "type": "integer"
                },
                "clientRunningTimeMs": {
                    "description": "Milliseconds the program init phase ran for, as measured by the\nclient (ie, it is untrusted for any specific run).",
                    "format": "uint32",
                    "type": "integer"
                },
                "clientTerminationTimeMs": {
                    "description": "Milliseconds the program termination phase ran for, as measured by the\nclient (ie, it is untrusted for any specific run).",
                    "format": "uint32",
                    "type": "integer"
                },
                "collectedVariableValues": {
                    "description": "Values of the global variables asked for in the creation request. It's up\nto the client to interpret and verify them. If variables were requested,\nbut this list doesn't have the right amount or is empty, the client should\nconsider the response suspicious.",
                    "items": {
                        "$ref": "Botguard__CollectedVariableValue"
                    },
                    "type": "array"
                },
                "crashReport": {
                    "description": "If set, contains the value of the crash register, the meaning of which\ndepends on the first byte. See the comments in vm.js for additional\ninstructions. If you're a user, you can ignore this.",
                    "format": "byte",
                    "type": "string"
                },
                "crowdsourcingResult": {
                    "description": "Bits of browser profile information we crowdsource from our users.",
                    "items": {
                        "$ref": "BotguardCrowdsourcing__BrowserProfileResult"
                    },
                    "type": "array"
                },
                "cuckooFilterData": {
                    "description": "Raw cuckoo filter data.",
                    "format": "byte",
                    "type": "string"
                },
                "dcomIntercepts": {
                    "description": "DCOM INTERCEPTS\nHow many times did we see certain methods on the document object get\ncalled in a way that suggests inter-process RPCs were being used. If\nthis is non-zero it's suspicious.",
                    "format": "int32",
                    "type": "integer"
                },
                "dynamicPicassoFingerprint": {
                    "description": "The fingerprint of the dynamic picasso scene. The seed for the scene is in\nreplay_protection.",
                    "format": "uint32",
                    "type": "integer"
                },
                "embeddedIeErrorCode": {
                    "description": "The exception error code observed in the browser.",
                    "format": "uint32",
                    "type": "integer"
                },
                "embeddedIeMessage": {
                    "description": "EMBEDDED IE\nUsed during debugging only, this is the exception message observed in the\nbrowser.",
                    "type": "string"
                },
                "embeddedIeMessageClass": {
                    "description": "Used by AdSpam to store a short version of the embedded_ie_message in the\nAdClicks logs.",
                    "enum": [
                        "UNKNOWN_MESSAGE",
                        "PERMISSION_DENIED",
                        "ACCESS_IS_DENIED",
                        "A_SECURITY_PROBLEM_OCCURRED",
                        "INVALID_ARGUMENT",
                        "EMPTY_MESSAGE",
                        "UNSPECIFIED_ERROR",
                        "EXCEPTION_OCCURRED",
                        "UNKNOWN_NAME",
                        "URL_IS_INVALID",
                        "COULD_NOT_COMPLETE_THE_OPERATION",
                        "COULD_NOT_SET_BACKGROUND_COLOR",
                        "UNDEFINED",
                        "INVALID_PROCEDURE_CALL",
                        "SCRIPT_ERROR",
                        "THREAT_DETECTION",
                        "MYSTERIOUS_MESSAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "encoding": {
                    "description": "The encoding of the response.",
                    "enum": [
                        "HEX",
                        "BASE64",
                        "UNKNOWN"
                    ],
                    "enumDescriptions": [
                        "Response encoding format used when something goes wrong with the base64\nencoder.",
                        "Web-safe Base 64 encoding format.",
                        "Indicates that the response failed to decode at all."
                    ],
                    "type": "string"
                },
                "escapeToken": {
                    "description": "An escape token is a magic bgresponse that should be whitelisted. They are\ngiven out to end users who have a legitimate need to bypass BotGuard for\nsome reason (like non-malicious automation). If this field is set, it's set\nto the response that was provided.",
                    "type": "string"
                },
                "eventCounts": {
                    "description": "EVENT COUNTING\nA list of event counts in the order specified by the server in\nkMonitoredEvents.",
                    "items": {
                        "format": "uint32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "eventLog": {
                    "$ref": "Botguard__EventLog",
                    "description": "EVENT LOGGER"
                },
                "eventStackDepth": {
                    "description": "Stack depth for the first event of each type for each target.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "experimentalPicassoFingerprint": {
                    "description": "(Can't be removed because it's stored in archival logs, see b/110771477.)",
                    "format": "uint32",
                    "type": "integer"
                },
                "experiments": {
                    "description": "EXPERIMENTS\nA list of experiments applied to this message.\n\nThis field is also used in a more general context to log the values of\nexperimental tag:value pairs for which we do not necessarily want to create\nspecific entries that would end up polluting the proto in case these\nsignals are never actually used. As part of this iterative process, a\nsignal can be stored temporarily in this container and later moved to a\nspecific entry when we decide it actually brings additional value and we\nwant to keep collecting it.\nExperiments based on ProgramDescriptor.js_eval will have their output here\nfor the BotGuard logs only, but their output will not be part of the Decode\nRPC response (except for servers with --dev=true, which will have it in\nboth).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "explanation": {
                    "description": "If set, contains arbitrary text used to debug why something went wrong, for\nexample the stack trace of a JavaScript error collected from the browser.",
                    "type": "string"
                },
                "failedUrlBarCheckLocation": {
                    "description": "URL BAR CHECK\nIf a URL bar crash happens (the client-side hostname isn't what we\nexpected, as controlled by HTTP headers, use_referer_for_url_bar_check and\nstatic_host_for_url_bar_check), this contains the actual client-side URL.",
                    "type": "string"
                },
                "fontFingerprint": {
                    "description": "Font fingerprint obtained from all font_fingerprint_chunk-s.",
                    "format": "uint64",
                    "type": "string"
                },
                "fontFingerprintChunk": {
                    "description": "Font fingerprint obtained from width of unicode characters rendered in\npredefined font family and width of text in predefined set of fonts.",
                    "items": {
                        "format": "uint32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "formValues": {
                    "description": "Same as InputField.value but collected on client side by BotGuard program\nbefore hashing. There are used to debug mysterious form hash mismatches.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hardwareConcurrency": {
                    "description": "Navigator.hardwareConcurrency, the number of logical processor cores of the\nuser's machine.",
                    "format": "uint32",
                    "type": "integer"
                },
                "iframeHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "iframeWidth": {
                    "description": "IFRAME SIZE",
                    "format": "int32",
                    "type": "integer"
                },
                "incognitoWindow": {
                    "description": "Whether the user's browser is in incognito mode. If the signal for the\ncorresponding browser was run, but this field is not set, there is no\ninformation about the type of window in which the code was run.",
                    "type": "boolean"
                },
                "iosguassoCrowdsourcingResult": {
                    "description": "The iOSGuasso fingerprints we crowdsource from our users.",
                    "items": {
                        "$ref": "BotguardCrowdsourcing__IOSGuassoCrowdsourcingResult"
                    },
                    "type": "array"
                },
                "iosguassoResult": {
                    "$ref": "Botguard__IOSGuassoResult",
                    "description": "Graphics fingerprint for iOS devices."
                },
                "isPotentialScreenReader": {
                    "description": "Whether this is potentially a screen reader based on the events pattern.",
                    "type": "boolean"
                },
                "isTrustedEventCount": {
                    "description": "Number of events that are created and dispatched by user action. See:\nhttps://developer.mozilla.org/en/docs/Web/API/Event/isTrusted",
                    "format": "uint32",
                    "type": "integer"
                },
                "jailbreakDetectionBitmask": {
                    "description": "Contains information whether iOS device has been jailbroken. It is a\nbitmask of existence of some jailbreak specific files and whether some\ndirectories have full permissions. Jailbreak has been detected if this\nbitmask is non-zero. For more information on how to interpret the bitmask\nsee the signal's code.",
                    "type": "string"
                },
                "jsEvalResults": {
                    "description": "Container for experiments based on ProgramDescriptor.js_eval to temporarily\nstore their results before the response is fully decoded. This will be\nempty in both the logs and the RPC response.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "jscCrowdsourcingResult": {
                    "$ref": "BotguardCrowdsourcing__JavaScriptCoreResult",
                    "description": "Bits of information about the JavaScriptCore environment we crowdsource\nfrom our users."
                },
                "localTime": {
                    "description": "LOCAL TIME\nThe time reported by the users clock, in their local time zone.\nFormat is (hours (24 format) * 100) + (minutes), eg, 8:30pm is\nthe integer 2030.",
                    "format": "int32",
                    "type": "integer"
                },
                "machineId": {
                    "$ref": "Botguard__MachineId",
                    "description": "MACHINE ID"
                },
                "mediaDeviceCount": {
                    "description": "Number of media devices available to the navigator.\nThis is the length of the array returned by\n  await navigator.mediaDevices.enumerateDevices()",
                    "format": "int32",
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "Botguard__DecodeMetadata",
                    "description": "Debugging information about the decode, such as the physical position of\nthe data in the encoded response. Should not be used in production."
                },
                "mouseEventLog": {
                    "$ref": "Botguard__MouseEventLog",
                    "description": "MOUSE EVENTS"
                },
                "objcCrowdsourcingResult": {
                    "description": "Bits of information about the Objective-C runtime environment we\ncrowdsource from our users.",
                    "items": {
                        "$ref": "BotguardCrowdsourcing__ObjcRuntimeResult"
                    },
                    "type": "array"
                },
                "outerWindowHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "outerWindowWidth": {
                    "description": "OUTER WINDOW SIZE",
                    "format": "int32",
                    "type": "integer"
                },
                "pageReport": {
                    "$ref": "Botguard__PageReport"
                },
                "pairId": {
                    "description": "This number uniquely identifies the DecodeResponse so we can find it in\nboth the BotGuard logs and the AbuseIAm logs.",
                    "format": "uint64",
                    "type": "string"
                },
                "pasteCounts": {
                    "description": "Provides the number of paste events for each input field that\nrequested this. The order of results is the same as specified in the\nProgramDescriptor.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "picassoFingerprint": {
                    "description": "Graphics Fingerprint. Two fields are needed here in order to update the\npicasso fingerprint with new capabilities, while still maintaining\nbackwards compatibility.",
                    "format": "uint32",
                    "type": "integer"
                },
                "picassoFingerprintAppearsSpoofed": {
                    "description": "Whether the canvas.toDataURL function is overwritten that the collected\npicasso fingerprint might be a spoofed result.",
                    "type": "boolean"
                },
                "possibleUseragentId": {
                    "description": "The list of useragent ids that this response possibly comes from. A\nuseragent id is included in this list if we have crowdsourced the browser\nprofile for this useragent id and the profile matches all of the properties\nwe collected in this response. The actual useragent id might not be in the\nlist if we haven't crowdsourced a profile for it and/or the browser strong\nbinding v2 signal didn't run property collection.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "progressReport": {
                    "description": "A record of program execution through its major phases. If there is a\ncrash, this string summarizes where the crash occurred, i.e., during\nbrowser binding, or during the url bar check, etc. Each of the codes is\ndefined in http://cs/class:botguard.ProgressReport.",
                    "type": "string"
                },
                "proxyUsage": {
                    "$ref": "Botguard__ProxyUsage",
                    "description": "Information about proxy usage"
                },
                "reasons": {
                    "description": "The reasons are a list of short strings enumerating anything that\ncontributes to the suspiciousness of the response. They're for users to\nread so they understand roughly how a decision was made, and for abuse\nengineers to dremel over and put on graphs. Things that do not contribute\nto the suspiciousness of the response do not belong here. They belong in\nthe experiments list. Non-suspicious results might also have some reasons,\nfor logging purposes, but the signals were not strong enough to mark the\naction suspicious.\nExamples:\n'empty response'\n'high confidence browser binding crash'\n'embedded ie'",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "reasonsEnum": {
                    "description": "Identical to the reasons field, only the original enum.",
                    "enumDescriptions": [
                        "",
                        "",
                        "Syntactical integrity of the response.\nLINT.IfChange",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "LINT.ThenChange(//depot/google3/ccc/abuse/botguard/response_decoding.cc)\nSemantic integrity of the response.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Signals.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Suspicious crashes.\nLINT.IfChange",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "LINT.ThenChange(//depot/google3/ccc/abuse/botguard/response_decoding.cc)\nSuspicious crashes, but not yet enforced.",
                        "",
                        "",
                        "Automation Frameworks.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HtmlUnit.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "In-browser extensions and helpers.",
                        "",
                        "Creation-time reasons.",
                        "",
                        "",
                        "",
                        "",
                        "For YouTube signals.",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "REASON_NO_SUSPICIOUS_REASON",
                            "REASON_DECODE_WHITELISTED",
                            "REASON_EMPTY_RESPONSE",
                            "REASON_BASE64_PARSE_FAILED",
                            "REASON_HEX_PARSE_FAILED",
                            "REASON_VM_EXCEPTION",
                            "REASON_RESPONSE_TOO_BIG",
                            "REASON_BAD_PROTOCOL",
                            "REASON_TAG_PARSE_FAILED",
                            "REASON_J_S_DISABLED",
                            "REASON_INVALID_SYNTAX",
                            "REASON_ESCAPE_TOKEN",
                            "REASON_EVALFRAME_NOT_LOADED",
                            "REASON_IOSGUARD_LIBRARY_FATAL_ERROR",
                            "REASON_MISSING_PROOF_OF_EXECUTION",
                            "REASON_IP_CHANGED",
                            "REASON_CREDENTIAL_CHANGED",
                            "REASON_PROGRAM_EXPIRED",
                            "REASON_FORM_HASH_MISMATCH",
                            "REASON_MISSING_HASH",
                            "REASON_MISSING_HASH_ANDROID_DRIVER",
                            "REASON_MISSING_HASH_AWESOMIUM",
                            "REASON_MISSING_HASH_BROWSER_FINGERPRINT",
                            "REASON_MISSING_HASH_CEF_SHARP",
                            "REASON_MISSING_HASH_CEF_UBOT_STUDIO",
                            "REASON_MISSING_HASH_CHROME_AUTOMATION",
                            "REASON_MISSING_HASH_CHROME_DRIVER",
                            "REASON_MISSING_HASH_ELEX_S_STATUS1",
                            "REASON_MISSING_HASH_EMBEDDED_IE",
                            "REASON_MISSING_HASH_FIREFOX_DRIVER",
                            "REASON_MISSING_HASH_IE_DRIVER",
                            "REASON_MISSING_HASH_NAVIGATOR_WEB_DRIVER",
                            "REASON_MISSING_HASH_NIGHTMARE",
                            "REASON_MISSING_HASH_NODEJS",
                            "REASON_MISSING_HASH_OLDER_CHROME",
                            "REASON_MISSING_HASH_PHANTOMJS",
                            "REASON_MISSING_HASH_REFERRER",
                            "REASON_MISSING_HASH_RHINO",
                            "REASON_MISSING_HASH_SELENIUM_RC",
                            "REASON_MISSING_HASH_UBOT_STUDIO",
                            "REASON_MISSING_HASH_WINDMILL",
                            "REASON_MISSING_HASH_WINDOW_NOTIFICATION",
                            "REASON_MISSING_HASH_R_WEB_SOCKET",
                            "REASON_MISSING_HASH_IS_TRUSTED_SPOOF",
                            "REASON_MISSING_BROWSER_STRONG_BINDING_PROPERTY",
                            "REASON_USERAGENT_CHANGED",
                            "REASON_CONTENT_BINDING_FAILED",
                            "REASON_BAD_AD_SPAM_SIGNAL",
                            "REASON_BAD_EVENT_SIGNATURE",
                            "REASON_CROSS_DOMAIN",
                            "REASON_MISSING_KEY_DOWN_CODES",
                            "REASON_ZERO_EVENTS",
                            "REASON_NO_REQUIRED_KEY_EVENTS",
                            "REASON_UNTRUSTED_EVENTS",
                            "REASON_BAD_STACK_DEPTH",
                            "REASON_ZENNOPOSTER_EVENT_PATTERN",
                            "REASON_TELERIK_KEYCODES",
                            "REASON_AD_SPAM_SIGNAL_MISSING_EVENTS",
                            "REASON_FAST_TYPING",
                            "REASON_AUTOMATED_TYPING",
                            "REASON_SYNTHETIC_TIMESTAMP",
                            "REASON_SYNTHETIC_TIMESTAMP_INEXACT",
                            "REASON_BROWSER_FINGERPRINT_HASH_MISMATCH",
                            "REASON_REFERRER_MISMATCH",
                            "REASON_GET_OWN_PROPERTY_NAMES",
                            "REASON_SET_TIMEOUT_SIGNAL_NOT_RUN",
                            "REASON_SET_TIMEOUT_NOT_CALLED",
                            "REASON_SET_TIMEOUT_TOO_EARLY",
                            "REASON_SET_TIMEOUT_TOO_LATE",
                            "REASON_HOOKED_EVAL",
                            "REASON_LAYOUT_ENGINE_WRONG",
                            "REASON_LAYOUT_ENGINE_ERROR",
                            "REASON_LAYOUT_ENGINE_ALL_ZERO",
                            "REASON_BRIDGE_CHECK_FAILURE",
                            "REASON_BRIDGE_HASH_MISMATCH",
                            "REASON_OLDER_CHROME",
                            "REASON_INVALID_APP_RECEIPT",
                            "REASON_MISSING_APP_RECEIPT",
                            "REASON_APP_RECEIPT_TOO_BIG",
                            "REASON_INVALID_APP_RECEIPT_HASH",
                            "REASON_FAILED_JAVASCRIPTCORE_BINDING",
                            "REASON_BUNDLE_ID_MISMATCH",
                            "REASON_MISSING_ID_FOR_VENDOR",
                            "REASON_NO_APP_IDENTITY_PROOF_FOUND",
                            "REASON_MISMATCHED_IOSGUASSO_FINGERPRINT",
                            "REASON_JAILBREAK_DETECTED",
                            "REASON_MISSING_APN",
                            "REASON_INVALID_APN_CONTENT",
                            "REASON_ABNORMAL_MOUSE_BEHAVIOR",
                            "REASON_SCREEN_RESOLUTION_SPOOFED",
                            "REASON_PICASSO_FINGERPRINT_SPOOFED",
                            "REASON_WEBGL_RENDERER_SPOOFED",
                            "REASON_IS_TRUSTED_SPOOFED",
                            "REASON_SOFT_SIGNALS_HIGH_BADNESS_SCORE",
                            "REASON_IOS_SIMULATOR",
                            "REASON_NO_PROGRESS_REPORT",
                            "REASON_BASE64_DECODE_CRASH",
                            "REASON_FAILED_BROWSER_BINDING",
                            "REASON_FAILED_BROWSER_WEAK_BINDING",
                            "REASON_SOURCE_HASH_CRASH",
                            "REASON_URL_BAR_CRASH",
                            "REASON_WHITELISTED_URL_BAR_CRASH",
                            "REASON_ENVIRONMENT_BINDING_FAILED",
                            "REASON_FAILED_BROWSER_STRONG_BINDING",
                            "REASON_BROWSER_ENGINE_MISMATCH",
                            "REASON_ANDROID_DRIVER",
                            "REASON_AWESOMIUM",
                            "REASON_CEF_CLIENT",
                            "REASON_CEF_SHARP",
                            "REASON_CHROME_DRIVER",
                            "REASON_CHROME_AUTOMATION",
                            "REASON_FIREFOX_DRIVER",
                            "REASON_I_E_DRIVER",
                            "REASON_RHINO_J_S",
                            "REASON_SELENIUM_R_C",
                            "REASON_WINDMILL",
                            "REASON_PHANTOM_JS",
                            "REASON_EMBEDDED_I_E",
                            "REASON_WHITELISTED_EMBEDDED_I_E",
                            "REASON_NODE_JS",
                            "REASON_WINDOW_EXTERNAL",
                            "REASON_DYNSRC",
                            "REASON_WEB_DRIVER",
                            "REASON_EDGE_DRIVER",
                            "REASON_WINDOW_NOTIFICATION",
                            "REASON_UBOT_STUDIO",
                            "REASON_MISSING_CHROME_API",
                            "REASON_NIGHTMARE",
                            "REASON_ELEX",
                            "REASON_SUSPICIOUS_PROPERTY",
                            "REASON_D_C_O_M_INTERCEPTS",
                            "REASON_I_MACROS_EVENTS",
                            "REASON_SELF_ADVERTISED_BOT",
                            "REASON_MISSING_CHALLENGE_REQUEST",
                            "REASON_INVALID_FRONTEND_REQUEST_KEY",
                            "REASON_BOGUS_PICASSO_THUMBNAIL",
                            "REASON_R_WEB_SOCKET",
                            "REASON_YT_VIDEO_ID_MISMATCH",
                            "REASON_YT_VIDEO_ID_MISSING"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "referrerUrl": {
                    "description": "Referrer url collected from document.referrer. This field is set only when\ncollect_referrer_url is set.",
                    "type": "string"
                },
                "relativeClick": {
                    "$ref": "Botguard__RelativeClickResult",
                    "description": "Click information collected by the relative click signal."
                },
                "replayProtection": {
                    "$ref": "Botguard__ReplayProtection",
                    "description": "The original IP addr/timestamp of when the program was generated."
                },
                "rttMs": {
                    "description": "The user's RTT, in milliseconds (from the RTT signal). This is the time\nit takes for an HTTP (or HTTPS, whatever the current page uses) request\nfrom the client to a Google server to complete. Missing if we didn't try to\ncollect it, -1 if we tried to collect it but couldn't (because the RTT ping\ndidn't come back to us in time).",
                    "format": "int32",
                    "type": "integer"
                },
                "screenHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "screenResolutionDetail": {
                    "$ref": "Botguard__ScreenResolutionDetail"
                },
                "screenWidth": {
                    "description": "SCREEN RESOLUTION",
                    "format": "int32",
                    "type": "integer"
                },
                "signalRunningTime": {
                    "description": "SignalProfiler measurements. See SignalProfiler.h for details.",
                    "items": {
                        "$ref": "Botguard__SignalRunningTime"
                    },
                    "type": "array"
                },
                "snapshotIndex": {
                    "description": "In the multi-snapshot scenario, the n-th snapshot is assigned index n\n(i.e. 1-based). In single-snapshot scenario, this field has value 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "softSignalsModelPrediction": {
                    "description": "Predictions of soft signals ML models.",
                    "items": {
                        "$ref": "Botguard__SoftSignalsModelPrediction"
                    },
                    "type": "array"
                },
                "suspicious": {
                    "description": "An executive summary. If you don't care about the precise signals, you can\nuse this field to decide what to do. For instance, if suspicious maybe\nrequire SMS verification or make the user solve a CAPTCHA.\n\nWhether a result is suspicious or not is a complicated decision based on\nwhether the results made sense, the signals extracted, and possibly some\ndetails about the action being protected.\n\nIt's recommended that you rely on this unless you have some kind of\ndecision script system in place to flexibly interpret the returned\nsignals.",
                    "type": "boolean"
                },
                "suspiciousPropertyExists": {
                    "description": "For each property in ProgramDescriptor.detect_suspicious_property, the\ncorresponding bool value in this repeated field reports whether the\nproperty was detected.",
                    "items": {
                        "type": "boolean"
                    },
                    "type": "array"
                },
                "syntheticTimestamps": {
                    "description": "How many time did we see event's timeStamp to be set to a value\nthat suggests a synthetic event.",
                    "format": "int32",
                    "type": "integer"
                },
                "timezone": {
                    "description": "This is the localized part of the time zone string. For example, if the\nDate is printed as:\nFri Aug 31 09:37:01 UTC-0300 2012, this field is 'UTC', or if\nFri Aug 31 2012 13:53:17 GMT+0530 (India Standard Time), this field is\n'(India Standard Time)'.",
                    "type": "string"
                },
                "timezoneOffset": {
                    "description": "The time zone offsets is reported in minutes away from GMT.",
                    "format": "int32",
                    "type": "integer"
                },
                "unitTest": {
                    "items": {
                        "$ref": "Botguard__UnitTestDecodeResponse"
                    },
                    "type": "array"
                },
                "userActivation": {
                    "$ref": "Botguard__UserActivation",
                    "description": "State of navigator.userActivation at snapshot, collected when user\nactivation API v2 is available. When there were multiple snapshots, this\nwould be the one collected at the last snapshot."
                },
                "useragentId": {
                    "description": "A boiled down identifier computed from the User-Agent. Think of it as a\nsummary of which browser BotGuard thinks you're using.",
                    "type": "string"
                },
                "webglRenderer": {
                    "description": "Unmasked 3D graphics renderer info reported by WebGL.",
                    "type": "string"
                },
                "webglRendererAppearsSpoofed": {
                    "description": "Whether the webgl_context.getParameter function is overwritten that the\ncollected webgl_renderer might be a spoofed result.",
                    "type": "boolean"
                },
                "windowHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "windowWidth": {
                    "description": "INNER WINDOW SIZE",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__EventLog": {
            "id": "Botguard__EventLog",
            "properties": {
                "event": {
                    "items": {
                        "$ref": "Botguard__BrowserEvent"
                    },
                    "type": "array"
                },
                "hasEnter": {
                    "description": "The <Enter> key is pressed, likely to submit the form.",
                    "type": "boolean"
                },
                "hasTab": {
                    "description": "The <Tab> key is pressed, likely to switch focus.",
                    "type": "boolean"
                },
                "sessionStart": {
                    "description": "When event logging was initialized. One timestamp for each session.\nIn milliseconds.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "targetId": {
                    "description": "The ids of the fields that correspond to the target indices in the\nBrowserEvents. The first string in this list is target index 0, etc.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Botguard__IOSGuassoResult": {
            "id": "Botguard__IOSGuassoResult",
            "properties": {
                "appState": {
                    "description": "The state in which the app was when it was supposed to run iOSGuasso.\nIf unset, then the app is considered to have been in active state, and\nshould have a corresponding fingerprint set.\nValid values:\n* 1 (UIApplicationStateInactive)\n* 2 (UIApplicationStateBackground)",
                    "format": "int32",
                    "type": "integer"
                },
                "background": {
                    "description": "Whether the app was in the background when the iOSGuasso signal should have\nrun.\n(Can't be removed because it's stored in archival logs, see b/110771477.)",
                    "type": "boolean"
                },
                "error": {
                    "description": "Errors encountered during rendering.",
                    "type": "string"
                },
                "fingerprint": {
                    "description": "The GPU fingerprint of the device.",
                    "format": "uint32",
                    "type": "integer"
                },
                "sceneDescriptor": {
                    "$ref": "IosguardDevice__IOSGuassoSceneDescriptor",
                    "description": "The scene descriptor that generated the fingerprint or error."
                }
            },
            "type": "object"
        },
        "Botguard__InputField": {
            "description": "Not all form fields are the same. For example, hidden input fields should\nbe hashed but there is no point counting events on them. This message\nallows you to configure what to do with each one. Each InputField should\nbe uniquely identifiable, both at create and decode time, by id and\noptionally children path if that feature is in use.",
            "id": "Botguard__InputField",
            "properties": {
                "cache": {
                    "description": "Whether the VM should cache the InputField. Caching the InputFields is\nmore performant because it requires fewer JavaScript calls to access them,\nbut it occupies a Register per InputField. This can be prohibitive when\nthere are very many InputFields for a single VM instance, for example if\nthere are 20 ads being monitored by a single VM. Re-using the same program\non different widgets on the page on the other hand does not incur this\ncost. Clients should not alter this field unless there is a strong need\nto do so.",
                    "type": "boolean"
                },
                "children": {
                    "description": "An alternate way of accessing the DOM elements exists for InputFields where\nthe ID can not be known a priori, or when there are several widgets with\nthe same set of ids sharing the same program. BotGuard will walk the DOM\nusing the childNodes array, with respect to a known root element whose ID\ncan be specified. Use -1 to walk up the DOM tree using parentNode. The\nclient web app is responsible for setting up and cleaning up the root DOM\nelement.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "countEvents": {
                    "description": "Whether to include events on this field in the event counts for the page.",
                    "type": "boolean"
                },
                "hash": {
                    "description": "Whether to hash the contents of the field at submit time to prevent replay\nattacks.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The HTML id attribute of the element. Required.",
                    "type": "string"
                },
                "logEvents": {
                    "description": "Whether to log events on this field.",
                    "type": "boolean"
                },
                "logEventsLimit": {
                    "description": "Maximum number of events of each type to log on this field. With more\nevents logged, client_response will become larger.\nSee ccc/abuse/botguard/event_logging.cc for event sizes.",
                    "format": "int32",
                    "type": "integer"
                },
                "optional": {
                    "description": "Whether the input field is optional. Optional means you don't always expect\nthe input field to exist and BotGuard program shouldn't crash when it is\nnot there. This flag is for creation requests only.\nNote:\n - You should send only and all of expected form values in decode requests.\n   i.e. Don't send values for optional inputs if they were not on the page;\n   don't omit optional inputs if they were present on the page.\n - Setting this to true increases botguard program size and execution time.\n   The increase is linear to number of optional inputs. Only use it when\n   necessary.\nExample:\n  CreationRequest:\n    input { id: \"firstname\" hash: true optional: true }\n    input { id: \"middlename\" hash: true optional: true }\n    input { id: \"lastname\" hash: true optional: true }\n  Actual page:\n    <form>\n      <input id=\"firstname\" type=\"text\">\n      <!-- no middle name -->\n      <input id=\"lastname\" type=\"text\">\n    </form>\n  DecodeRequest should be:\n    input { id: \"firstname\" value: \"Bot\" hash: true }\n    input { id: \"lastname\" value: \"Guard\" hash: true }",
                    "type": "boolean"
                },
                "queryParameterName": {
                    "description": "The BotGuard client can be configured to extract the value of the input\nfield out of the HTTP servlet request for you. If an input field has a\nname attribute that is different from it's id (or path), the value will\nbe accessible only via that name at decode time, so you have to tell\nBotGuard the name. Otherwise, it will use the id. This field is used only\nby the BotGuard client; the server does not need it for anything.",
                    "type": "string"
                },
                "remove": {
                    "description": "Used only by experiments for emergency fixes, for example the id of an\nInputField changed without updating BotGuard and somehow the change makes\nit through testing and canarying in the client web server. Clients should\nnever set this because it is ignored in all other cases.",
                    "type": "boolean"
                },
                "value": {
                    "description": "The value of the form as observed by the product web server. Required at\ndecode time but not creation time (since it does not exist at creation\ntime).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__IntPropertyInformation": {
            "description": "The results that we get when checking the value of a property, which has\ninteger values, in different ways.",
            "id": "Botguard__IntPropertyInformation",
            "properties": {
                "directValue": {
                    "description": "From the \"value\" of the property descriptor. This would be set if the\nproperty is defined like this:\n  obj[\"property\"] = <direct_value>; or\n  Object.defineProperty(obj, \"property\", { value: <direct_value> })",
                    "format": "int32",
                    "type": "integer"
                },
                "getterSpoofed": {
                    "description": "If \"get\" of either the object or prototype property descriptor is not a\nnative function. Note: this has false positives in IE family browsers\nincluding Edge.",
                    "type": "boolean"
                },
                "getterValue": {
                    "description": "From calling the \"get\" of the property descriptor. This would be set if the\nproperty is defined like this:\n  Object.defineProperty(obj, \"property\",\n      { get: function() { return <getter_value>; }})",
                    "format": "int32",
                    "type": "integer"
                },
                "prototypeGetterValue": {
                    "description": "From calling the \"get\" of the property descriptor of the prototype of this\nobject. This would be set if the property is defined like this:\n  Object.defineProperty(MyObjectTypeToSpoof.prototype, \"property\",\n      { get: function() { return <getter_value>; }}); or\n  Object.defineProperty(obj.__proto__, \"property\",\n      { get: function() { return <getter_value>; }})",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__IosGuardGenerationData": {
            "description": "Holds information about the iOSGuard generation request that needs to be\npassed to decoding.",
            "id": "Botguard__IosGuardGenerationData",
            "properties": {
                "iosguassoInexactMatch": {
                    "description": "If true, iOSGuasso validator decoder will accept any fingerprint that was\ncrowdsourced for the scene ID, without limitation to a specific device\nmodel or iOS version.",
                    "type": "boolean"
                },
                "iosguassoValidationSceneId": {
                    "description": "The ID of the scene used for iOSGuasso validation.",
                    "format": "uint32",
                    "type": "integer"
                },
                "javascriptcoreBindingFunctionId": {
                    "description": "The ID of the JavaScript function for which the JavaScriptCore integrity\nsignal was run.",
                    "format": "uint64",
                    "type": "string"
                },
                "javascriptcoreCryptoBinding": {
                    "description": "Whether the JavascriptcoreIntegrity signal performed crypto binding.",
                    "type": "boolean"
                },
                "objcEnvironmentCryptoBinding": {
                    "description": "Whether the EnvironmentBinding signal performed crypto binding.",
                    "type": "boolean"
                },
                "objcEnvironmentProfileSelectedOsVersion": {
                    "description": "The iOS version the EnvironmentBinding signal matched. This needs to be\npassed via IosGuardGenerationData to make sure that the decoding is done\naccording to the same version, in case another profile was added between\ngenerate and decode.",
                    "type": "string"
                },
                "partialCapabilities": {
                    "$ref": "Iosguard__LibraryCapabilities",
                    "description": "Stripped version of the LibraryCapabilities computed based on the\nDeviceChallengeRequest."
                },
                "partialChallengeRequest": {
                    "$ref": "IosguardDevice__DeviceChallengeRequest",
                    "description": "Stripped version of the DeviceChallengeRequest received from the device\nlibrary."
                },
                "silentApnData": {
                    "$ref": "Iosguard__SilentApnData",
                    "description": "The data sent in a silent APN to the device, for app identity validation."
                }
            },
            "type": "object"
        },
        "Botguard__MachineId": {
            "id": "Botguard__MachineId",
            "properties": {
                "availableScreenHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "availableScreenLeft": {
                    "description": "The position of the available area on the screen.",
                    "format": "int32",
                    "type": "integer"
                },
                "availableScreenTop": {
                    "format": "int32",
                    "type": "integer"
                },
                "availableScreenWidth": {
                    "description": "Available screen resolution.",
                    "format": "int32",
                    "type": "integer"
                },
                "language": {
                    "description": "What languages and charsets browser reports.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "plugin": {
                    "description": "Potentially truncated list of plugins on the device. Truncation depends on\nwhether max_collected_plugins is set in the machine id configuration.",
                    "items": {
                        "$ref": "Botguard__Plugin"
                    },
                    "type": "array"
                },
                "screenHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "screenWidth": {
                    "description": "The following are not filled in the logs, only filled when\nthe Machine ID is processed or exported.\nScreen resolution.",
                    "format": "int32",
                    "type": "integer"
                },
                "scriptEngineVersion": {
                    "description": "Browser's script engine version. Only supported by IE.",
                    "type": "string"
                },
                "timezone": {
                    "description": "Next tag = 15",
                    "type": "string"
                },
                "totalPluginCount": {
                    "description": "Number of plugins that were detected on the device. Only is set when\nmax_collected_plugins is set in the machine id configuration.",
                    "format": "int32",
                    "type": "integer"
                },
                "useragent": {
                    "description": "Browser's navigator.userAgent (not always the same as User-Agent header).",
                    "type": "string"
                },
                "windowDecorationHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "windowDecorationWidth": {
                    "description": "The size of the browser window decoration.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__MouseEventLog": {
            "id": "Botguard__MouseEventLog",
            "properties": {
                "allEventsAtZeroPos": {
                    "description": "All events, including move events, have 0,0 clientX/Y position.",
                    "type": "boolean"
                },
                "allMoveEventsAtClickPos": {
                    "description": "All the move events are at the position of the previous or the next click.",
                    "type": "boolean"
                },
                "event": {
                    "items": {
                        "$ref": "Botguard__MouseMoveEvent"
                    },
                    "type": "array"
                },
                "hasMoveEvents": {
                    "description": "The event log contains at least one move event.",
                    "type": "boolean"
                },
                "hasUpDownEvents": {
                    "description": "The event log contains at least one mouse up or mouse down event.",
                    "type": "boolean"
                },
                "lastTimestamp": {
                    "description": "The time since global_start_time of the last event in the log in\nmilliseconds. This can be used to join mouse events with other logs like\nkeyboard events.",
                    "format": "uint32",
                    "type": "integer"
                },
                "totalEventCount": {
                    "description": "Total number of mouse events in this session, including events in previous\nsnapshots and earlier events that are dropped because of buffer size limit.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__MouseMoveEvent": {
            "id": "Botguard__MouseMoveEvent",
            "properties": {
                "timestamp": {
                    "description": "Delta since the previous event in milliseconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "UNKNOWN",
                        "MOVE",
                        "DOWN",
                        "UP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "The type is encoded in 3 bits, so the max allowed value is 7.\nEnum 0 (UNKNOWN) is wasted now since in reality there's always an event\ntype. When we really need to use all 8 types, we can send value 0 in the\nbgresponse and map value 0 to enum 8 in the decoder. Another solution is\nto always send value = enum - 1, but then every type has a value-enum\nmismatch. That is probably more confusing."
                    ],
                    "type": "string"
                },
                "xpos": {
                    "description": "Event mouse coordinates.",
                    "format": "int32",
                    "type": "integer"
                },
                "ypos": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__PageReport": {
            "id": "Botguard__PageReport",
            "properties": {
                "href": {
                    "description": "If a non-whitelisted <A> tag is found, its href attribute is reported.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "scriptSrc": {
                    "description": "If a non-whitelisted <SCRIPT> tag is found, its src attrubute is reported.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Botguard__Plugin": {
            "id": "Botguard__Plugin",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "description": "Name and description as is. Normally absent, only collected for debugging.",
                    "type": "string"
                },
                "textHash": {
                    "description": "The hash of the non-version part of name/description and the version part\nof name/description as is. For cases, when plugins do not explicitly\npresent version, we extract all numbers and dots fron name+description.",
                    "format": "int64",
                    "type": "string"
                },
                "version": {
                    "description": "Next tag = 5",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__ProxyUsage": {
            "description": "Information about proxy usage.",
            "id": "Botguard__ProxyUsage",
            "properties": {
                "ipAddressPrefixBehindProxy": {
                    "description": "(Can't be removed because it's stored in archival logs, see b/110771477.)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "srflxPrefix": {
                    "description": "Prefix of the user's \"srflx\" (server reflexive) IP addresses. Only a prefix\nand not the full address is given to protect privacy. The value of this\nfield is an IPv4 or IPv6 subnetwork in CIDR notation, for example\n  123.34.2.0/24       for the prefix 123.34.2....\n  204e:250:1f00::/48  for the prefix 204e:0250:1f00:...\nTo convert this to an IPRange, see StringToIPRange in net/util/ipaddress.h.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "required",
                    "enum": [
                        "UNKNOWN_PROXY_USAGE",
                        "BROWSER_CLAIMS_UNSUPPORTED",
                        "SUCCESS",
                        "SIGNAL_UNEXPECTEDLY_NOT_RUN",
                        "END_NOT_REACHED",
                        "WHITELISTED_USER",
                        "BROWSER_UNSUPPORTED",
                        "NO_PROXY",
                        "PROXY",
                        "NO_CLIENT_IP"
                    ],
                    "enumDescriptions": [
                        "",
                        "Browser claims not to support WebRTC, but it actually should. This is\nsuspicious.",
                        "The signal ran successfully.",
                        "The signal should have run, but didn't. This is suspicious.",
                        "The snapshot was made before the whole list of candidates could be\nobtained. It could be that we didn't wait enough, or that we run in\na simulator that doesn't implement this.",
                        "The following fields are deprecated. I'd love to use the \"reserved\"\nsyntax but some readers are using an obsolete parser that doesn't\nunderstand that.",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__RelativeClickResult": {
            "description": "Click information collected by the relative click signal.\nSee RelativeClickDescriptor for details about the signal and the target\nelement.",
            "id": "Botguard__RelativeClickResult",
            "properties": {
                "relativeX": {
                    "description": "Click position x relative to the target element, in pixels.",
                    "format": "int32",
                    "type": "integer"
                },
                "relativeY": {
                    "description": "Click position y relative to the target element, in pixels.",
                    "format": "int32",
                    "type": "integer"
                },
                "targetHeight": {
                    "description": "Height of the target element, in pixels.",
                    "format": "int32",
                    "type": "integer"
                },
                "targetWidth": {
                    "description": "Width of the target element, in pixels.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__ReplayProtection": {
            "description": "A serialized, encrypted ReplayProtection protobuf is included in the program\nat generation time and made a part of the feedback returned from the users\nweb browser. It's treated as an opaque blob by everything except the BotGuard\nstubby servers.  It is also used as a bypass token when server connectivity\nis flapping.\n\nThe goal is to detect spambots submitting whatever their author noticed their\nown browser generating when they manually perform the abusive action.",
            "id": "Botguard__ReplayProtection",
            "properties": {
                "adspamEnabledSignals": {
                    "description": "Bitmask encoding which javascript spam signals have been enabled.\nA bitvector set from JavascriptSignalsEnum (in ads/base/ad-enums.h).",
                    "format": "uint64",
                    "type": "string"
                },
                "adspamQueryIdFingerprint": {
                    "format": "uint64",
                    "type": "string"
                },
                "browserFingerprintHash": {
                    "description": "Expected browser fingerprint hash.",
                    "format": "uint32",
                    "type": "integer"
                },
                "browserStrongBindingPropertiesCount": {
                    "description": "The number of properties the browser strong binding signal should collect.\nThe decoder expects to find this many properties.",
                    "format": "int32",
                    "type": "integer"
                },
                "bypassToken": {
                    "description": "This field marks the protocol buffer as a bypass token.  See the design\ndoc for complete details.",
                    "type": "boolean"
                },
                "creationTimeReasons": {
                    "description": "If we see something suspicious at generation time, we record it here.",
                    "enumDescriptions": [
                        "",
                        "",
                        "Syntactical integrity of the response.\nLINT.IfChange",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "LINT.ThenChange(//depot/google3/ccc/abuse/botguard/response_decoding.cc)\nSemantic integrity of the response.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Signals.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Suspicious crashes.\nLINT.IfChange",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "LINT.ThenChange(//depot/google3/ccc/abuse/botguard/response_decoding.cc)\nSuspicious crashes, but not yet enforced.",
                        "",
                        "",
                        "Automation Frameworks.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HtmlUnit.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "In-browser extensions and helpers.",
                        "",
                        "Creation-time reasons.",
                        "",
                        "",
                        "",
                        "",
                        "For YouTube signals.",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "REASON_NO_SUSPICIOUS_REASON",
                            "REASON_DECODE_WHITELISTED",
                            "REASON_EMPTY_RESPONSE",
                            "REASON_BASE64_PARSE_FAILED",
                            "REASON_HEX_PARSE_FAILED",
                            "REASON_VM_EXCEPTION",
                            "REASON_RESPONSE_TOO_BIG",
                            "REASON_BAD_PROTOCOL",
                            "REASON_TAG_PARSE_FAILED",
                            "REASON_J_S_DISABLED",
                            "REASON_INVALID_SYNTAX",
                            "REASON_ESCAPE_TOKEN",
                            "REASON_EVALFRAME_NOT_LOADED",
                            "REASON_IOSGUARD_LIBRARY_FATAL_ERROR",
                            "REASON_MISSING_PROOF_OF_EXECUTION",
                            "REASON_IP_CHANGED",
                            "REASON_CREDENTIAL_CHANGED",
                            "REASON_PROGRAM_EXPIRED",
                            "REASON_FORM_HASH_MISMATCH",
                            "REASON_MISSING_HASH",
                            "REASON_MISSING_HASH_ANDROID_DRIVER",
                            "REASON_MISSING_HASH_AWESOMIUM",
                            "REASON_MISSING_HASH_BROWSER_FINGERPRINT",
                            "REASON_MISSING_HASH_CEF_SHARP",
                            "REASON_MISSING_HASH_CEF_UBOT_STUDIO",
                            "REASON_MISSING_HASH_CHROME_AUTOMATION",
                            "REASON_MISSING_HASH_CHROME_DRIVER",
                            "REASON_MISSING_HASH_ELEX_S_STATUS1",
                            "REASON_MISSING_HASH_EMBEDDED_IE",
                            "REASON_MISSING_HASH_FIREFOX_DRIVER",
                            "REASON_MISSING_HASH_IE_DRIVER",
                            "REASON_MISSING_HASH_NAVIGATOR_WEB_DRIVER",
                            "REASON_MISSING_HASH_NIGHTMARE",
                            "REASON_MISSING_HASH_NODEJS",
                            "REASON_MISSING_HASH_OLDER_CHROME",
                            "REASON_MISSING_HASH_PHANTOMJS",
                            "REASON_MISSING_HASH_REFERRER",
                            "REASON_MISSING_HASH_RHINO",
                            "REASON_MISSING_HASH_SELENIUM_RC",
                            "REASON_MISSING_HASH_UBOT_STUDIO",
                            "REASON_MISSING_HASH_WINDMILL",
                            "REASON_MISSING_HASH_WINDOW_NOTIFICATION",
                            "REASON_MISSING_HASH_R_WEB_SOCKET",
                            "REASON_MISSING_HASH_IS_TRUSTED_SPOOF",
                            "REASON_MISSING_BROWSER_STRONG_BINDING_PROPERTY",
                            "REASON_USERAGENT_CHANGED",
                            "REASON_CONTENT_BINDING_FAILED",
                            "REASON_BAD_AD_SPAM_SIGNAL",
                            "REASON_BAD_EVENT_SIGNATURE",
                            "REASON_CROSS_DOMAIN",
                            "REASON_MISSING_KEY_DOWN_CODES",
                            "REASON_ZERO_EVENTS",
                            "REASON_NO_REQUIRED_KEY_EVENTS",
                            "REASON_UNTRUSTED_EVENTS",
                            "REASON_BAD_STACK_DEPTH",
                            "REASON_ZENNOPOSTER_EVENT_PATTERN",
                            "REASON_TELERIK_KEYCODES",
                            "REASON_AD_SPAM_SIGNAL_MISSING_EVENTS",
                            "REASON_FAST_TYPING",
                            "REASON_AUTOMATED_TYPING",
                            "REASON_SYNTHETIC_TIMESTAMP",
                            "REASON_SYNTHETIC_TIMESTAMP_INEXACT",
                            "REASON_BROWSER_FINGERPRINT_HASH_MISMATCH",
                            "REASON_REFERRER_MISMATCH",
                            "REASON_GET_OWN_PROPERTY_NAMES",
                            "REASON_SET_TIMEOUT_SIGNAL_NOT_RUN",
                            "REASON_SET_TIMEOUT_NOT_CALLED",
                            "REASON_SET_TIMEOUT_TOO_EARLY",
                            "REASON_SET_TIMEOUT_TOO_LATE",
                            "REASON_HOOKED_EVAL",
                            "REASON_LAYOUT_ENGINE_WRONG",
                            "REASON_LAYOUT_ENGINE_ERROR",
                            "REASON_LAYOUT_ENGINE_ALL_ZERO",
                            "REASON_BRIDGE_CHECK_FAILURE",
                            "REASON_BRIDGE_HASH_MISMATCH",
                            "REASON_OLDER_CHROME",
                            "REASON_INVALID_APP_RECEIPT",
                            "REASON_MISSING_APP_RECEIPT",
                            "REASON_APP_RECEIPT_TOO_BIG",
                            "REASON_INVALID_APP_RECEIPT_HASH",
                            "REASON_FAILED_JAVASCRIPTCORE_BINDING",
                            "REASON_BUNDLE_ID_MISMATCH",
                            "REASON_MISSING_ID_FOR_VENDOR",
                            "REASON_NO_APP_IDENTITY_PROOF_FOUND",
                            "REASON_MISMATCHED_IOSGUASSO_FINGERPRINT",
                            "REASON_JAILBREAK_DETECTED",
                            "REASON_MISSING_APN",
                            "REASON_INVALID_APN_CONTENT",
                            "REASON_ABNORMAL_MOUSE_BEHAVIOR",
                            "REASON_SCREEN_RESOLUTION_SPOOFED",
                            "REASON_PICASSO_FINGERPRINT_SPOOFED",
                            "REASON_WEBGL_RENDERER_SPOOFED",
                            "REASON_IS_TRUSTED_SPOOFED",
                            "REASON_SOFT_SIGNALS_HIGH_BADNESS_SCORE",
                            "REASON_IOS_SIMULATOR",
                            "REASON_NO_PROGRESS_REPORT",
                            "REASON_BASE64_DECODE_CRASH",
                            "REASON_FAILED_BROWSER_BINDING",
                            "REASON_FAILED_BROWSER_WEAK_BINDING",
                            "REASON_SOURCE_HASH_CRASH",
                            "REASON_URL_BAR_CRASH",
                            "REASON_WHITELISTED_URL_BAR_CRASH",
                            "REASON_ENVIRONMENT_BINDING_FAILED",
                            "REASON_FAILED_BROWSER_STRONG_BINDING",
                            "REASON_BROWSER_ENGINE_MISMATCH",
                            "REASON_ANDROID_DRIVER",
                            "REASON_AWESOMIUM",
                            "REASON_CEF_CLIENT",
                            "REASON_CEF_SHARP",
                            "REASON_CHROME_DRIVER",
                            "REASON_CHROME_AUTOMATION",
                            "REASON_FIREFOX_DRIVER",
                            "REASON_I_E_DRIVER",
                            "REASON_RHINO_J_S",
                            "REASON_SELENIUM_R_C",
                            "REASON_WINDMILL",
                            "REASON_PHANTOM_JS",
                            "REASON_EMBEDDED_I_E",
                            "REASON_WHITELISTED_EMBEDDED_I_E",
                            "REASON_NODE_JS",
                            "REASON_WINDOW_EXTERNAL",
                            "REASON_DYNSRC",
                            "REASON_WEB_DRIVER",
                            "REASON_EDGE_DRIVER",
                            "REASON_WINDOW_NOTIFICATION",
                            "REASON_UBOT_STUDIO",
                            "REASON_MISSING_CHROME_API",
                            "REASON_NIGHTMARE",
                            "REASON_ELEX",
                            "REASON_SUSPICIOUS_PROPERTY",
                            "REASON_D_C_O_M_INTERCEPTS",
                            "REASON_I_MACROS_EVENTS",
                            "REASON_SELF_ADVERTISED_BOT",
                            "REASON_MISSING_CHALLENGE_REQUEST",
                            "REASON_INVALID_FRONTEND_REQUEST_KEY",
                            "REASON_BOGUS_PICASSO_THUMBNAIL",
                            "REASON_R_WEB_SOCKET",
                            "REASON_YT_VIDEO_ID_MISMATCH",
                            "REASON_YT_VIDEO_ID_MISSING"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "dynamicPicassoSeed": {
                    "description": "The seed of the picasso dynamic scene. This is only set when the dynamic\nscene is generated. The range of the seed is uint16.",
                    "format": "int32",
                    "type": "integer"
                },
                "enabledSignals": {
                    "description": "Bitmask encoding which signals are expected in the response. See\nconstants.h for the list of applicable signals.\n(Can't be removed because it's stored in archival logs, see b/110771477.)",
                    "format": "uint64",
                    "type": "string"
                },
                "enabledSignalsBitmask": {
                    "description": "Same as above, but extended to support more than 64 signals.",
                    "format": "byte",
                    "type": "string"
                },
                "experimentId": {
                    "description": "Which experiment was running as part of this program, if any.",
                    "format": "uint32",
                    "type": "integer"
                },
                "expiryTime": {
                    "description": "Seconds since epoch.",
                    "format": "uint32",
                    "type": "integer"
                },
                "gaiaId": {
                    "description": "Credential hopping. See ProgramDescriptor for documentation on each field.",
                    "format": "uint64",
                    "type": "string"
                },
                "iosguardData": {
                    "$ref": "Botguard__IosGuardGenerationData",
                    "description": "Information about the iOSGuard generation request."
                },
                "ipAddress": {
                    "description": "The IP address for which the program was generated. The encoding is a\n\"packed\" address as raw bytes, using the functions in net/util/ipaddress.h",
                    "format": "byte",
                    "type": "string"
                },
                "lsoClientId": {
                    "type": "string"
                },
                "lsoProjectId": {
                    "type": "string"
                },
                "rawUseragentId": {
                    "description": "The raw useragent_id for which this program was generated. May be empty if\nthis is a client-generated bypass token.",
                    "type": "string"
                },
                "recaptchaChallengeToken": {
                    "type": "string"
                },
                "salt": {
                    "description": "A small amount of random data. The generated program combines it with\nthe contents of the form being submitted and hashes the result. See\ndesign doc for details.",
                    "format": "byte",
                    "type": "string"
                },
                "traceLogged": {
                    "description": "If set, the generation trace for the program that contains this\nReplayProtection appears in the logs, for easier debugging since only a\nsmall percentage of traces are logged.",
                    "type": "boolean"
                },
                "useragentId": {
                    "description": "The decoded useragent_id for which this program was generated. Only set if\na signal needs to carry this information to the decode stage.",
                    "type": "string"
                },
                "useragentRulesHash": {
                    "description": "Version of the user agent rules file at this program's generation time.\nUsed to suppress the \"user agent changed\" reason when the rules change,\nbecause we can't know if the ID is different because the real user agent\nis different or just because it matches a different rule.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__ScreenResolutionDetail": {
            "id": "Botguard__ScreenResolutionDetail",
            "properties": {
                "availHeight": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "availLeft": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "availTop": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "availWidth": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "height": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "width": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "windowInnerHeight": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "windowInnerWidth": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "windowOuterHeight": {
                    "$ref": "Botguard__IntPropertyInformation"
                },
                "windowOuterWidth": {
                    "$ref": "Botguard__IntPropertyInformation"
                }
            },
            "type": "object"
        },
        "Botguard__SignalRunningTime": {
            "description": "Signal running time measurement collected by SignalProfiler.\nSignalProfiler.cc for details.",
            "id": "Botguard__SignalRunningTime",
            "properties": {
                "phase": {
                    "enum": [
                        "UNSPECIFIED",
                        "SETUP",
                        "EVENT_HANDLERS",
                        "SNAPSHOT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "signal": {
                    "enum": [
                        "UNKNOWN_SIGNAL",
                        "ANDROID_DRIVER",
                        "CHROME_DRIVER",
                        "EDGE_DRIVER",
                        "FIREFOX_DRIVER",
                        "IE_DRIVER",
                        "SELENIUM_RC",
                        "NAVIGATOR_WEB_DRIVER",
                        "AWESOMIUM",
                        "CEF_SHARP",
                        "CEF_UBOT_STUDIO",
                        "CHROME_API",
                        "CHROME_AUTOMATION",
                        "DCOM",
                        "NODEJS",
                        "PHANTOMJS",
                        "RHINO",
                        "UBOT_STUDIO",
                        "WINDMILL",
                        "WINDOW_NOTIFICATION",
                        "NIGHTMARE",
                        "ELEX_S_STATUS1",
                        "R_WEB_SOCKET",
                        "MACHINE_ID",
                        "PICASSO",
                        "PICASSO_EXPERIMENTAL",
                        "PICASSO_STABLE",
                        "FONT_FINGERPRINT",
                        "BOTGUARD_CONTACT",
                        "BROWSER_BINDING",
                        "BROWSER_WEAK_BINDING_V2",
                        "BROWSER_STRONG_BINDING_V2",
                        "BROWSER_PROFILE_CROWDSOURCING",
                        "CACHE_PRELOAD",
                        "JS_EVAL",
                        "REPLAY_PROTECTION",
                        "SNAPSHOT_INDEX",
                        "SOURCE_HASHING",
                        "TIME_MODEL",
                        "URL_BAR_CHECK",
                        "GET_OWN_PROPERTY_NAMES",
                        "HOOKED_EVAL",
                        "LAYOUT_ENGINE",
                        "SET_TIMEOUT",
                        "BEHAVIORAL_EVENTS",
                        "BROWSER_FINGERPRINT",
                        "CEF_CLIENT",
                        "CLASSD_PING",
                        "COLLECT_VARIABLES",
                        "CROSS_DOMAIN",
                        "DYNSRC",
                        "EMBEDDED_IE",
                        "EVENT_COUNTING",
                        "EVENT_LOGGING",
                        "FORM_HASH",
                        "LOCAL_TIME",
                        "MEDIA_DEVICE",
                        "MOUSE_EVENTS",
                        "OLDER_CHROME",
                        "PAGE_REPORT",
                        "PASTE_COUNTING",
                        "RECAPTCHA_OVERLAY",
                        "REFERRER",
                        "RTT",
                        "SCREEN_RESOLUTION",
                        "EXTENDED_SCREEN_RESOLUTION",
                        "WEBGL_RENDERER",
                        "WEBRTC_PROXY",
                        "WINDOW_EXTERNAL",
                        "ZERO_KNOWLEDGE_SIGNALS",
                        "ACCELEROMETER",
                        "RELATIVE_CLICK",
                        "CONTENT_BINDING",
                        "IS_TRUSTED_SPOOF",
                        "USER_ACTIVATION",
                        "HARDWARE_CONCURRENCY",
                        "SUSPICIOUS_PROPERTY",
                        "ADSPAM_ANCESTOR_ORIGINS",
                        "ADSPAM_CHEFBOT_LEADS",
                        "ADSPAM_CLICK_XY",
                        "ADSPAM_DEVICE_PIXEL_RATIO",
                        "ADSPAM_DOCUMENT_FOCUS",
                        "ADSPAM_DOM_PROPERTIES",
                        "ADSPAM_EXPERIMENTAL_SIGNALS",
                        "ADSPAM_HISTORY_LENGTH",
                        "ADSPAM_IFRAME_MOVEMENTS",
                        "ADSPAM_JS_HEAP_SIZE",
                        "ADSPAM_MAX_CONNECTIONS",
                        "ADSPAM_MOUSE_DOWN_DURATION",
                        "ADSPAM_MOUSE_MOVEMENTS",
                        "ADSPAM_NAVIGATOR_CONNECTION_TYPE",
                        "ADSPAM_NAVIGATOR_PLATFORM",
                        "ADSPAM_SPELLCHECK",
                        "ADSPAM_TOUCH_DURATION",
                        "ADSPAM_WINDOW_BARS",
                        "ADSPAM_WINDOW_EXTERNAL",
                        "MOZ_PAINT_COUNT",
                        "OPACITY",
                        "INCOGNITO_DETECTOR_CHROME",
                        "INCOGNITO_DETECTOR_EDGE",
                        "INCOGNITO_DETECTOR_FIREFOX",
                        "INCOGNITO_DETECTOR_SAFARI",
                        "APP_RECEIPT",
                        "BRIDGE_HASH_OLD",
                        "BRIDGE_HASH",
                        "BUNDLE_INFORMATION",
                        "ENVIRONMENT_BINDING",
                        "ENVIRONMENT_BINDING_CRYPTO_HASHING",
                        "ENVIRONMENT_CROWDSOURCING",
                        "IOS_CONTENT_BINDING",
                        "IOS_BRIDGE_CHECK",
                        "IOSGUASSO_CROWDSOURCING",
                        "IOSGUASSO_VALIDATOR",
                        "JAILBREAK_DETECTION",
                        "JAVASCRIPTCORE_CROWDSOURCING",
                        "JAVASCRIPTCORE_INTEGRITY",
                        "JAVASCRIPTCORE_INTEGRITY_CRYPTO_HASHING",
                        "SILENT_APN",
                        "UNIT_TESTING",
                        "MUCH_WORK_SETUP",
                        "MUCH_WORK_SNAPSHOT",
                        "SYSTEM",
                        "SYSTEM_CRASH",
                        "SYSTEM_REPLAY",
                        "YOUTUBE_PLAYER"
                    ],
                    "enumDescriptions": [
                        "",
                        "WebDriver detection signals.",
                        "",
                        "EDGE_DRIVER is deprecated. Use NAVIGATOR_WEB_DRIVER instead.",
                        "",
                        "",
                        "",
                        "",
                        "Web automation framework detection signals.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Web fingerprinting signals.",
                        "",
                        "",
                        "",
                        "",
                        "Infrastructure signals (including integrity checks).",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "XRumer detection signals.",
                        "",
                        "",
                        "",
                        "General BotGuard signals.",
                        "A.k.a. browser binding as a signal.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Local time, timezone offset and timezone name.",
                        "",
                        "Last n mouse positions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Screen and window geometry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "AdSpam web signals.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Incognito detection signals.",
                        "",
                        "",
                        "",
                        "General iOSGuard signals.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Unit testing signals.\nTo be used only in unit-tests to mark custom signals.",
                        "",
                        "",
                        "The response trace assigns this \"signal\" to data that is not emitted by\nany signal but by the infrastructure, such as timing metadata, crypto\nkeys, embedded buffers, and so on.",
                        "The response trace assigns this \"signal\" to data that correspond to tags\ndecoded by the CrashDecoder.",
                        "The response trace assigns this \"signal\" to data that correspond to tags\ndecoded by the ReplayDecoder.",
                        "YouTube-specific signals"
                    ],
                    "type": "string"
                },
                "timeMs": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Botguard__SoftSignalsModelPrediction": {
            "description": "Predictions produced by invoking one soft signals model.",
            "id": "Botguard__SoftSignalsModelPrediction",
            "properties": {
                "badnessScore": {
                    "description": "The badness score in [0, 1]. This roughly translates to how confident we\nare about the traffic being bad. 1.0 means very confident.",
                    "format": "float",
                    "type": "number"
                },
                "classifiedAsBad": {
                    "description": "Whether the response was classified as BAD, i.e. potentially abusive or\nautomated.",
                    "type": "boolean"
                },
                "error": {
                    "description": "If an error occurred during the model invocation, this will be set to the\ncorresponding error code.",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS",
                        "DO_NOT_USE_RESERVED_FOR_FUTURE_EXPANSION_USE_DEFAULT_IN_SWITCH_INSTEAD_"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success",
                        "The operation was cancelled, typically by the caller.",
                        "Unknown error.  For example, this error may be returned when\na Status value received from another address space belongs to\nan error-space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.",
                        "The client specified an invalid argument.  Note that this differs\nfrom FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.",
                        "The request does not have valid authentication credentials for the\noperation.",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nA litmus test that may help a service implementor in deciding\nbetween FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n (a) Use UNAVAILABLE if the client can retry just the failing call.\n (b) Use ABORTED if the client should retry at a higher-level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use FAILED_PRECONDITION if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, FAILED_PRECONDITION\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee litmus test above for deciding between FAILED_PRECONDITION,\nABORTED, and UNAVAILABLE.",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike INVALID_ARGUMENT, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate INVALID_ARGUMENT if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\nOUT_OF_RANGE if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between FAILED_PRECONDITION and\nOUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an OUT_OF_RANGE error to detect when\nthey are done.",
                        "The operation is not implemented or is not supported/enabled in this\nservice.",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee litmus test above for deciding between FAILED_PRECONDITION,\nABORTED, and UNAVAILABLE.",
                        "Unrecoverable data loss or corruption.",
                        "An extra enum entry to prevent people from writing code that\nfails to compile when a new code is added.\n\nNobody should ever reference this enumeration entry. In particular,\nif you write C++ code that switches on this enumeration, add a default:\ncase instead of a case that mentions this enumeration entry.\n\nNobody should rely on the value (currently 20) listed here.  It\nmay change in the future."
                    ],
                    "type": "string"
                },
                "skipped": {
                    "description": "This prediction is skipped due to skip_if* conditions in the spec.",
                    "type": "boolean"
                },
                "skippedResponse": {
                    "description": "This prediction is skipped due to skip_response in the spec.",
                    "type": "boolean"
                },
                "spec": {
                    "$ref": "Botguard__SoftSignalsModelSpec",
                    "description": "Specs of the model, corresponds to the model spec in decode request."
                }
            },
            "type": "object"
        },
        "Botguard__SoftSignalsModelSpec": {
            "description": "Specs of a soft signals model invocation.\nDespite being part of a DecodeRequest, SoftSignalsModelSpec is expected to be\nconfigured by the BotGuard team using per-action signal config. Clients are\nnot supposed to fill this.",
            "id": "Botguard__SoftSignalsModelSpec",
            "properties": {
                "badnessThreshold": {
                    "description": "When the score is above this threshold, set classified_as_bad in the\nprediction, suspicious reason SoftSignalsHighBadnessScore would thus be\nadded to the decode response.\nThe default is 1.0 such that no request will be marked bad.",
                    "format": "float",
                    "type": "number"
                },
                "name": {
                    "description": "Name of the model. This determines which model to invoke.\ne.g. \"soft-signals-grads.boosted-trees-model\".",
                    "type": "string"
                },
                "skipIfNoKeyboardEventLog": {
                    "description": "If decode.event_log is not collected, skip this model invocation.\nNote: it doesn't skip when the log is correctly collected but contains no\nevent (e.g. when the user doesn't use the keyboard).",
                    "type": "boolean"
                },
                "skipIfNoMouseEventLog": {
                    "description": "If decode.mouse_event_log is not collected, skip this model invocation.\nNote: it doesn't skip when the log is correctly collected but contains no\nevent (e.g. when the user doesn't use the mouse).",
                    "type": "boolean"
                },
                "skipResponse": {
                    "description": "If set, the response of this model will be ignored and the corresponding\nSoftSignalsModelPrediction will have \"skipped\" set to true.\nThe RPC will still be sent to the model server and the response will be\ncounted towards relevant streamz metrics for monitoring, but Decode won't\nwait for the RPC response, nor will the decode verdict be affected by the\nmodel's prediction.\nThis option exists so that we could dark launch a model in a way that\naffects neither the decode verdict nor the decode latency.",
                    "type": "boolean"
                },
                "version": {
                    "description": "If set, use this specific version of the model. The version needs to be\navailable from Servomatic, otherwise the RPC would fail.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__UnitTestDecodeResponse": {
            "description": "DecodeResponse data used in unit tests.\nOnly one of the following is present.",
            "id": "Botguard__UnitTestDecodeResponse",
            "properties": {
                "valBool": {
                    "format": "uint32",
                    "type": "integer"
                },
                "valBytes": {
                    "format": "byte",
                    "type": "string"
                },
                "valInt16": {
                    "format": "uint32",
                    "type": "integer"
                },
                "valInt32": {
                    "format": "uint32",
                    "type": "integer"
                },
                "valInt8": {
                    "description": "For val_int*, the BotGuard code will have appended the indicated number of\nbits from an integer register. They are all decoded as unsigned values;\nsignedness information is lost.",
                    "format": "uint32",
                    "type": "integer"
                },
                "valString": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Botguard__UserActivation": {
            "description": "State of navigator.userActivation.",
            "id": "Botguard__UserActivation",
            "properties": {
                "hasBeenActive": {
                    "description": "Whether the user had interacted with window or its subframes before\nsnapshot.",
                    "type": "boolean"
                },
                "isActive": {
                    "description": "Whether the user was interacting with window or its subframes shortly\nbefore snapshot (within a few seconds, the precise expiry time of\nactiveness is not specified by the API).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CaribouAbuse__AbuseDetails": {
            "description": "AbuseDetails encapsulates information about whom to attribute email abuse to.\nIt is supposed to be used as a proto field in a MessageRouterMessage, not as\na stand-alone protobuf.",
            "id": "CaribouAbuse__AbuseDetails",
            "properties": {
                "responsibleGaiaId": {
                    "description": "If your GMR service sends mail on behalf of a user, set ResponsibleGaiaId\nto the GAIA id of the user's account. This field will be used to trace\nabuse reports back to the sender and to enforce quotas per user for certain\nGMR services, for example.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommunicationSmsrelayProto_MmsMessage_ContentDetails": {
            "description": "The additional details of a ContentPart.",
            "id": "CommunicationSmsrelayProto_MmsMessage_ContentDetails",
            "properties": {
                "filename": {
                    "description": "The filename for the ContentPart.",
                    "type": "string"
                },
                "mediaDuration": {
                    "description": "The duration of the ContentPart containing media such as audio or video.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommunicationSmsrelayProto_MmsMessage_ContentPart": {
            "description": "Message which specifies a single content part for an MMS.",
            "id": "CommunicationSmsrelayProto_MmsMessage_ContentPart",
            "properties": {
                "content": {
                    "description": "The content data. For text, including SMIL, HTML or other kinds of code,\nthe content should be UTF-8 encoded.",
                    "format": "byte",
                    "type": "string"
                },
                "contentDetails": {
                    "$ref": "CommunicationSmsrelayProto_MmsMessage_ContentDetails",
                    "description": "Any additional details for the ContentPart for outgoing messages.\nThis field is only applicable for outgoing requests that rely on the\ndefault SMIL generated by SmsRelay.\nSee comments on [MmsMessage.content_parts] for the details about the\ndefault SMIL."
                },
                "contentId": {
                    "description": "Content ID of the ContentPart. It is referenced in the first ContentPart\nof the MMS (containing the ContentType SMIL), which defines the overall\nlayout of the message.\nOptional for outgoing messages if the application will rely on a default\ngenerated SMIL by SmsRelay.",
                    "type": "string"
                },
                "contentLocation": {
                    "description": "Optional field which corresponds to the MMS content location.\nTypically, `content_id` or `content_location` fields are used to\nreference MMS content parts within the MMS. See rfc2557 for more details.\nOptional for outgoing messages if the application will rely on a default\ngenerated SMIL by SmsRelay.",
                    "type": "string"
                },
                "contentType": {
                    "description": "The ContentType matching a known MIME type.",
                    "enum": [
                        "CONTENT_TYPE_UNKNOWN",
                        "MMS_GENERIC",
                        "MULTIPART_MIXED",
                        "MULTIPART_RELATED",
                        "MULTIPART_ALTERNATIVE",
                        "TEXT_PLAIN",
                        "TEXT_HTML",
                        "TEXT_VCALENDAR",
                        "TEXT_VCARD",
                        "IMAGE_UNSPECIFIED",
                        "IMAGE_JPEG",
                        "IMAGE_JPG",
                        "IMAGE_GIF",
                        "IMAGE_WBMP",
                        "IMAGE_PNG",
                        "IMAGE_X_MS_BMP",
                        "AUDIO_UNSPECIFIED",
                        "AUDIO_AAC",
                        "AUDIO_AMR",
                        "AUDIO_IMELODY",
                        "AUDIO_MID",
                        "AUDIO_MIDI",
                        "AUDIO_MP3",
                        "AUDIO_MPEG3",
                        "AUDIO_MPEG",
                        "AUDIO_MPG",
                        "AUDIO_MP4",
                        "AUDIO_X_MID",
                        "AUDIO_X_MIDI",
                        "AUDIO_X_MP3",
                        "AUDIO_X_MPEG3",
                        "AUDIO_X_MPEG",
                        "AUDIO_X_MPG",
                        "AUDIO_3GPP",
                        "AUDIO_X_WAV",
                        "AUDIO_OGG",
                        "VIDEO_UNSPECIFIED",
                        "VIDEO_3GPP",
                        "VIDEO_3GPP2",
                        "VIDEO_H263",
                        "VIDEO_MP4",
                        "APP_SMIL",
                        "APP_WAP_XHTML",
                        "APP_XHTML",
                        "APP_DRM_CONTENT",
                        "APP_DRM_MESSAGE"
                    ],
                    "enumDescriptions": [
                        "Unknown type.",
                        "The phony content type for generic payloads.",
                        "",
                        "",
                        "",
                        "Known text types.",
                        "",
                        "",
                        "",
                        "Known image types.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Known audio types.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Known video types.",
                        "",
                        "",
                        "",
                        "",
                        "Known application template types.",
                        "",
                        "",
                        "Known application DRM types.",
                        ""
                    ],
                    "type": "string"
                },
                "unsupportedMimeType": {
                    "description": "Any unsupported/unrecognized MIME type for the ContentPart.\nTo be used if the MIME type of an incoming message ContentPart does not\nmatch a known ContentType.\nThis field is not permitted for outgoing messages.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommunicationSmsrelayProto__Endpoint": {
            "description": "Represents a generic endpoint for messages.",
            "id": "CommunicationSmsrelayProto__Endpoint",
            "properties": {
                "phoneNumber": {
                    "$ref": "CommunicationSmsrelayProto__PhoneNumber"
                },
                "restrictedPlatformSender": {
                    "description": "An address representing a shared platform sender such as the \"Google\",\n\"PhoneCode\", \"Waze\", and \"YouTube\" alphanumeric sender or one of the\nshortcode or longcode numbers shared by the platform.\nNote: This field is only supported in the response message and is\nreturned when the `number_pool_endpoint` is\nCLIENT_POOL_WITH_SHARED_PLATFORM_POOL_FALLBACK.",
                    "type": "string"
                },
                "shortCode": {
                    "$ref": "CommunicationSmsrelayProto__ShortCode"
                }
            },
            "type": "object"
        },
        "CommunicationSmsrelayProto__MmsMessage": {
            "description": "The contents of the MMS message.",
            "id": "CommunicationSmsrelayProto__MmsMessage",
            "properties": {
                "contentParts": {
                    "description": "The list of ContentParts.\nFor outgoing messages, the `content_parts` should include an entry with\nAPP_SMIL. The SMIL is a presentation language that is used to configure\nhow an MMS message is displayed (See rfc4536).\nThe ContentPart list is only considered valid for outgoing messages if it\nis one of the following:\n1. The ContentPart list does not include a SMIL ContentType, and all of\n   the ContentParts in the list have empty `content_id`. A default SMIL\n   will be generated for the request by SmsRelay.\n2. The ContentPart list does not include a SMIL ContentType, and all the\n   ContentParts in the list have non-empty `content_id`. No SMIL will be\n   generated by SmsRelay.\n3. The ContentPart list includes a single SMIL ContentType, and all\n   ContentParts in the list have non-empty `content_id`. The included SMIL\n   will be used for the request.",
                    "items": {
                        "$ref": "CommunicationSmsrelayProto_MmsMessage_ContentPart"
                    },
                    "type": "array"
                },
                "displayAdditionalRecipients": {
                    "description": "Additional recipients for an MMS which is a group MMS, which will be\ndisplayed but not routed to.\nOptional.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subject": {
                    "description": "The subject of the MMS message.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommunicationSmsrelayProto__PhoneNumber": {
            "description": "Represents a E.164 phone number.",
            "id": "CommunicationSmsrelayProto__PhoneNumber",
            "properties": {
                "number": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommunicationSmsrelayProto__ShortCode": {
            "description": "Represents a short code.",
            "id": "CommunicationSmsrelayProto__ShortCode",
            "properties": {
                "regionCode": {
                    "description": "ISO 3166-1 alpha-2 code for the country the shortcode is valid in.\nSee https://g3doc.corp.google.com/i18n/identifiers/g3doc/using-iii.md",
                    "type": "string"
                },
                "shortCode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FrameworkConsistency__ApiaryConsistencyTokenResponseHeader": {
            "description": "*\nMessage sent from the servers to the clients containing a new consistency\ntoken jar to be sent on subsequent requests if the client wants to perform\nconsistent reads after writes.",
            "id": "FrameworkConsistency__ApiaryConsistencyTokenResponseHeader",
            "properties": {
                "maxAgeSecs": {
                    "description": "The maximum age in seconds for this consistency information. Clients\nconsuming this message need to handle this field in a similar way to\nCookie#getMaxAge. In other words:\n1. Positive values indicate the time in seconds that the clients need to\npersist the token jar. The value is not the current age for the jar, but\nthe maximum age when it is supposed to be expired.\n2. Negative values indicate that the token jar should be persisted until\nthe app closes, in other words, there is not maximum age associated with\nit.\n3. A zero value indicated that the token jar should be expired now, i.e. be\ndeleted.",
                    "format": "int32",
                    "type": "integer"
                },
                "newConsistencyTokenJar": {
                    "description": "The consistency token jar to be sent by the client in case it wants/needs\nto perform consistent read-after-writes. This should be considered as a\nblob by the clients (see http://go/apidosanddonts).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FrameworkRequestmetadata__RequestMetadata": {
            "description": "*\nMessage sent from the servers to the clients containing metadata about a\ngiven request/response pair.",
            "id": "FrameworkRequestmetadata__RequestMetadata",
            "properties": {
                "roundTripTimeEstimateMs": {
                    "description": "Estimated RTT (round trip time) to the user, in milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "serverTimeMs": {
                    "description": "The total elapsed time on the server including backends. This is typically\nset at the first apps-framework server in the stack (NOT Apiary).",
                    "format": "int64",
                    "type": "string"
                },
                "traceId": {
                    "description": "The globally unique trace ID (RPC global ID).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaData_AccountNotificationEvent_AndroidTarget": {
            "id": "GaiaData_AccountNotificationEvent_AndroidTarget",
            "properties": {
                "androidId": {
                    "description": "The Android ID of the device provided by Gservices.\nSee more at go/androidids.",
                    "format": "int64",
                    "type": "string"
                },
                "gcmRegistrationId": {
                    "description": "The registration ID of the device. The device obtains this\nID when it registers for GCM. This is the recommended Android device\nidentifier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaData_AccountNotificationEvent_ChannelFilter": {
            "description": "Client controlled channel filtering.",
            "id": "GaiaData_AccountNotificationEvent_ChannelFilter",
            "properties": {
                "channelType": {
                    "description": "The list of channels to apply as either white or black list.",
                    "enumDescriptions": [
                        "Internal use only. Used as a \"null value\" for ChannelType in monitoring.",
                        "Notify the user via Apple iOS mobile device.",
                        "Notify the user via email addresses configured in:\nproduction/config/cdd/gaia-account-notifier/...",
                        "Sends a notification to all of the user's mobile devices.",
                        "Stops showing a promo to the user.",
                        "Starts showing a promo to the user.",
                        "Notify the user via a signed-out notification (using Chime) and fallback to\nSMS if Chime doesn't send any notifications.  Don't use this together with\nSMSs or it may send double SMSs.",
                        "Sends an SMS to a phone number configured in UNS.  Don't use this together\nwith SIGNED_OUT_MOBILE or it may send double SMSs.  Use SIGNED_OUT_MOBILE\ninstead if you can because it is a better experience and less expensive.",
                        "Notify relevant OAuth 2 clients (third parties) about user events."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            "APPLE_MOBILE",
                            "EMAIL",
                            "MOBILE",
                            "PROMO_DISABLE",
                            "PROMO_ENABLE",
                            "SIGNED_OUT_MOBILE",
                            "SMS",
                            "RISC"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "filterType": {
                    "description": "The channel filter type. If UNKNOWN then no filtering will be applied.",
                    "enum": [
                        "UNKNOWN",
                        "WHITELIST",
                        "BLACKLIST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaData_AccountNotificationEvent_UrlParam": {
            "description": "URL param key-value pair.",
            "id": "GaiaData_AccountNotificationEvent_UrlParam",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaData__AccountNotificationEvent": {
            "description": "An account event that a user might be notified about.\nNext id: 30",
            "id": "GaiaData__AccountNotificationEvent",
            "properties": {
                "androidTarget": {
                    "description": "Used to target specific Android devices. If not set and Android\nnotifications are enabled in configuration, all devices will be targeted.",
                    "items": {
                        "$ref": "GaiaData_AccountNotificationEvent_AndroidTarget"
                    },
                    "type": "array"
                },
                "channelFilter": {
                    "$ref": "GaiaData_AccountNotificationEvent_ChannelFilter",
                    "description": "Filter the set of channels that the event will be sent to. The base set of\nchannels is defined in the event configuration, this filter is applied to\nthat base set. If this field is not set then no filtering will be applied."
                },
                "clientExternalId": {
                    "description": "Client-provided external ID.  This string is appended to the external ID\nsent to GUNS for Android Native Notifications.\nIf it contains colons (\":\"), they are converted to underscores (\"_\").",
                    "type": "string"
                },
                "customAccountIdentifier": {
                    "description": "Set the custom identifier for contact email.\nWill only be used for notifications configured to use the email source\nEVENT_SPECIFIED_RECIPIENT.",
                    "type": "string"
                },
                "customUrlParam": {
                    "description": "Optional url params that can be added to the notification's destination\nURL. Usage of this param depends on the chosen\nguns_default_destination_uri_config. For example see AccountHealthUri.java\nor ParametersDestinationUri (the latter has some reserved placeholder\nstrings).",
                    "items": {
                        "$ref": "GaiaData_AccountNotificationEvent_UrlParam"
                    },
                    "type": "array"
                },
                "debugInfo": {
                    "$ref": "GaiaData__DebugInfo",
                    "description": "Optional debugging data to include in messages. Note: for this\nfeature to be used the relevant event type needs to be\nwhitelisted in the notifier."
                },
                "duplicateKey": {
                    "description": "Notifications with the same Event Type that are sent to the same user with\nthe same duplicate_key will only be sent once.\nIt is optional to set this field. If this field is not set or empty no\ndeduplication will be performed.\nSee go/an-deduping for more information.",
                    "type": "string"
                },
                "emailReplyToHeaderParameter": {
                    "description": "Special customization for email headers.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "eventId": {
                    "description": "Optional. An external identifier for an event, this can be used for logs\nand for notification destination URLs.",
                    "format": "int64",
                    "type": "string"
                },
                "eventType": {
                    "enum": [
                        "UNKNOWN",
                        "AC_GMAIL_DOWNGRADE",
                        "AC_TAKEOUT_INSTRUCTIONS_DEPRECATED",
                        "ACCOUNT_CREDENTIAL_CHANGE_REQUIRED",
                        "ACCOUNT_DELETED",
                        "ACCOUNT_DISABLED",
                        "ACCOUNT_DISABLED_ABUSE",
                        "ACCOUNT_DISABLED_ABUSE_GENERIC",
                        "ACCOUNT_DISABLED_ABUSE_GENERIC_ONLY_EMAIL",
                        "ACCOUNT_DISABLED_DMCA",
                        "ACCOUNT_DISABLED_HARASSMENT",
                        "ACCOUNT_DISABLED_HIJACKED",
                        "ACCOUNT_DISABLED_LEGAL_COURT_ORDER",
                        "ACCOUNT_DISABLED_LEGAL_EXPORT",
                        "ACCOUNT_DISABLED_LEGAL_GOVERNMENT_ORDER",
                        "ACCOUNT_DISABLED_MALWARE",
                        "ACCOUNT_DISABLED_NUDITY",
                        "ACCOUNT_DISABLED_PAYMENT_FRAUD_HIJACKED",
                        "ACCOUNT_DISABLED_PHISHING",
                        "ACCOUNT_DISABLED_RECOVERABLE",
                        "ACCOUNT_DISABLED_SPAMMING",
                        "ACCOUNT_DISABLED_UNDER_13",
                        "ACCOUNT_DISABLED_BULK_ACCOUNT",
                        "ACCOUNT_DISABLED_SPAMMING_THROUGH_RELAY",
                        "ACCOUNT_DISABLED_ROBODIALING",
                        "ACCOUNT_DISABLED_LEGAL_GAG_ORDER",
                        "ACCOUNT_DISABLED_SOCIAL_ENGINEERING",
                        "ACCOUNT_DISABLED_CSAI_CARTOON_HUMOR",
                        "ACCOUNT_DISABLED_TRAFFIC_PUMPING",
                        "ACCOUNT_DISABLED_DECEASED_ACCOUNT_CLOSURE",
                        "ACCOUNT_DISABLED_VIOLENT_EXTREMISM",
                        "ACCOUNT_DISABLED_CHILD_PORN",
                        "ACCOUNT_NAME_CHANGED",
                        "ACCOUNT_PURGED",
                        "ACCOUNT_RECOVERY_2SV_CLAIM_FILED_ACK",
                        "ACCOUNT_RECOVERY_2SV_CLAIM_FILED_ACK_TITANIUM",
                        "ACCOUNT_RECOVERY_2SV_CLAIM_FILED_STOP_GO_PAGE",
                        "ACCOUNT_RECOVERY_2SV_CLAIM_FILED_STOP_GO_PAGE_FOR_CLAIMANT",
                        "ACCOUNT_RECOVERY_2SV_RECENT_SIGNIN_TO_1SV_ACCOUNT",
                        "ACCOUNT_RECOVERY_2SV_RECENT_SIGNIN_TO_2SV_ACCOUNT",
                        "ACCOUNT_RECOVERY_2SV_RECENT_SIGNIN_TO_2SV_ACCOUNT_TITANIUM",
                        "ACCOUNT_RECOVERY_2SV_REJECTED_CLAIM",
                        "ACCOUNT_RECOVERY_2SV_REMOVED_2SV_AFTER_CLAIM",
                        "ACCOUNT_RECOVERY_2SV_REMOVED_2SV_AFTER_CLAIM_TITANIUM",
                        "ACCOUNT_RECOVERY_2SV_STOP_CLICKED",
                        "ACCOUNT_RECOVERY_RECENT_SIGNIN_TO_1SV_ACCOUNT",
                        "ACCOUNT_RECOVERY_RECENT_SIGNIN_TO_2SV_ACCOUNT",
                        "ACCOUNT_RECOVERY_RECENT_SIGNIN_TO_2SV_ACCOUNT_TITANIUM",
                        "ACCOUNT_RECOVERY_2SV_SUCCESSFUL_LOST_BOTH_CLAIM",
                        "ACCOUNT_RECOVERY_2SV_SUCCESSFUL_TITANIUM",
                        "ACCOUNT_RECOVERY_CNAME_REJECTED_CLAIM",
                        "ACCOUNT_RECOVERY_CNAME_SUCCESSFUL_CLAIM",
                        "ACCOUNT_RECOVERY_CNAME_TO_QUEUE",
                        "ACCOUNT_RECOVERY_SUCCESSFUL_CLAIM",
                        "ACCOUNT_RECOVERY_HIJACKING_MITIGATION",
                        "ACCOUNT_RECOVERY_TIME_DELAY_STOP_GO",
                        "ACCOUNT_REENABLED",
                        "ACCOUNT_REENABLED_AFTER_APPEAL",
                        "ACCOUNT_UNDELETED",
                        "AGE_DISABLE_GRACE_PERIOD",
                        "AH_RECOVERY_OPTIONS_1_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_2_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_3_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_4_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_5_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_6_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_7_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_8_DEPRECATED",
                        "AH_RECOVERY_OPTIONS_9_DEPRECATED",
                        "AH_RECOVERY_OPTIONS",
                        "AH_CONTACT_OPTIONS",
                        "AH_SIM_CHANGED",
                        "AH_OWNERSHIP_CHANGED",
                        "AH_OAUTH_EMAIL_DEPRECATED",
                        "AH_PHONE_RENUMBER_NONSMS",
                        "AH_PHONE_RENUMBER_SMS",
                        "AH_FAILED_2SV_SIGN_IN_SMS_OUTAGE",
                        "AH_FAILED_RECOVERY_SMS_OUTAGE",
                        "AH_FAILED_RECOVERY_NON_SMS_OUTAGE",
                        "AH_FAILED_SIGN_IN_NO_RECOVERY",
                        "AH_SECURITY_ADVISOR_EMAIL",
                        "AH_PERIODIC_SECURITY_ADVISOR_EMAIL",
                        "AH_PERIODIC_SECURITY_ADVISOR_EMAIL_CONTROL",
                        "AH_GOVERNMENT_BACKED_ATTACK_WARNING",
                        "AH_IDAAS_2SV_ENFORCEMENT_REMINDER",
                        "AH_POST_HIJACKING_MITIGATION_FOLLOW_UP_EMAIL",
                        "AH_SHOULD_TRY_RECOVERY",
                        "ALTERNATE_EMAIL_ADD",
                        "ALTERNATE_EMAIL_REMOVE",
                        "AU_DATE_OF_BIRTH",
                        "CHALLENGE_CONFIG_SETTINGS_UPDATED",
                        "CHROME_SMARTLOCK_ENABLED",
                        "CONSENT_BUMP_ANDROID",
                        "CONSENT_BUMP_2_ANDROID",
                        "DATA_LIBERATION_TAKEOUT_STARTED",
                        "DATA_LIBERATION_TAKEOUT_SCHEDULED",
                        "DEVICE_CENTRIC_AUTH_ENROLL",
                        "DEVICE_CENTRIC_AUTH_ENROLL_AUTO_MODE",
                        "DEVICE_CENTRIC_AUTH_UNENROLL",
                        "DEVICE_CENTRIC_AUTH_ENROLLMENT_MECHANISM_ADDED",
                        "DEVICE_CENTRIC_AUTH_ENROLLMENT_MECHANISM_CHANGED",
                        "DEVICE_REVOKED",
                        "DISABLED_ACCOUNT_DELETED",
                        "DISABLED_ACCOUNT_SOON_DELETED",
                        "EMERGENCY",
                        "EMMETT_LEGAL_ENTITY_CHANGE",
                        "EXAMPLE_EVENT",
                        "EXPORT_CONTACTS",
                        "GAIA_CLOUD_PIN_CHANGE",
                        "GDPR_ANDROID_NOTIFICATION",
                        "GMAIL_MAYBE_HIJACKED",
                        "GMAIL_MAYBE_HIJACKED_AND_DISABLED_MAIL_DELETED",
                        "GMAIL_MAYBE_HIJACKED_AND_DISABLED",
                        "GMAIL_MAYBE_HIJACKED_FILTERS_ADDED",
                        "GMAIL_MAYBE_HIJACKED_MAIL_DELETED",
                        "GMAIL_MAYBE_HIJACKED_RECOVERY_CHANGED",
                        "GMAIL_MAYBE_HIJACKED_RECOVERY_EMAIL_CHANGED",
                        "GMAIL_MAYBE_HIJACKED_RECOVERY_PHONE_CHANGED",
                        "GMAIL_MAYBE_HIJACKED_SENT_MAIL",
                        "GMAIL_MAYBE_HIJACKED_SETTINGS_CHANGED",
                        "GMAIL_MAYBE_HIJACKED_SHARED_FORWARD_EMAIL",
                        "GMAIL_MAYBE_HIJACKED_TELLER_ACTIVATE_IMAP",
                        "GMAIL_MAYBE_HIJACKED_TELLER_DELETE_VOLUME_DEPRECATED",
                        "GMAIL_MAYBE_HIJACKED_TELLER_EXPORT_BCC",
                        "GMAIL_MAYBE_HIJACKED_TELLER_MAIL_SEND_VOLUME",
                        "GMAIL_MAYBE_HIJACKED_TELLER_NOSPAM_FILTER_DEPRECATED",
                        "GMAIL_MAYBE_HIJACKED_TELLER_NOTIFICATION_DELETE_TRASH",
                        "GMAIL_MAYBE_HIJACKED_TELLER_SENSITIVE_SEARCH_DEPRECATED",
                        "GMAIL_MAYBE_HIJACKED_TELLER_SETTINGS_CHANGED_DEPRECATED",
                        "GMAIL_MAYBE_SUBSCRIPTION_MAIL_BOMB",
                        "GMAIL_MAY_NOT_HIJACKED_EMAIL_FORWARDING_CHANGED",
                        "NEW_DEVICE_DEPRECATED",
                        "GPS_NEW_DEVICE",
                        "GPS_NEW_DEVICE_SANDBOX_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_7_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_DROP_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_CONTROL_DEPRECATED",
                        "GPS_NEW_DEVICE_EDGE_PROMOTION_CONTROL_DEPRECATED",
                        "GPS_NEW_DEVICE_EDGE_PROMOTION_4_DEPRECATED",
                        "GPS_NEW_DEVICE_WINDOWS10_MSIE_PROMOTION_1_DEPRECATED",
                        "GPS_NEW_DEVICE_WINDOWS10_MSIE_PROMOTION_CONTROL_DEPRECATED",
                        "GPS_NEW_DEVICE_ANDROID_PROMOTION_DEPRECATED",
                        "GPS_NEW_DEVICE_ANDROID_CONTROL_DEPRECATED",
                        "GPS_NEW_DEVICE_ANDROID_ROUND_2_PROMOTION_1_DEPRECATED",
                        "GPS_NEW_DEVICE_ANDROID_ROUND_2_PROMOTION_2_DEPRECATED",
                        "GPS_NEW_DEVICE_PIXELBOOK_PROMOTION_DEPRECATED",
                        "GPS_NEW_DEVICE_PIXEL_SLATE_PROMOTION_DEPRECATED",
                        "GPS_NEW_DEVICE_WITH_RECOVERY_KEY",
                        "GPS_UNSAFE_APP_LOGIN_BLOCKED",
                        "GPS_UNSAFE_APP_LOGINS_USER_ENABLED",
                        "HIJACK_ABANDON_LOGIN_CHAL",
                        "HIJACK_ABANDON_2SV",
                        "HIJACK_ABANDON_REAUTH_PGC",
                        "HIJACK_ABANDON_REAUTH_TAKEOUT",
                        "HIJACK_MALWARE_DETECTED",
                        "HIJACK_PROGRAMMATIC_BLOCK",
                        "HIJACK_PROMO_OFF",
                        "INACTIVE_ACCOUNTS_FINAL_ACTIONS_TRIGGERED",
                        "INACTIVE_ACCOUNTS_REMINDER",
                        "INACTIVE_ACCOUNTS_INITIAL_TASKS_TRIGGERED",
                        "INACTIVE_ACCOUNTS_TRIGGER_WARNING",
                        "INACTIVE_ACCOUNTS_USER_RESET",
                        "INACTIVE_ACCOUNTS_SETTINGS_CHANGED",
                        "INACTIVE_ACCOUNTS_TRUSTEE",
                        "JAPAN_EMAIL_SMS_DEPRECATION",
                        "LIMITED_DISABLE_ADDED",
                        "LIMITED_DISABLE_REMOVED",
                        "LOCATION_HISTORY_PROMOTION",
                        "NEW_ACCOUNT_CREATION",
                        "NEW_OAUTH_GRANT",
                        "PASSWORD_ADDED",
                        "PASSWORD_CHANGE",
                        "PASSWORDS_GOOGLE_COM_SUSPICIOUS_ACTIVITY",
                        "PERIODIC_PRIVACY_REMINDERS",
                        "PLAY_RUSSIA_REGULATOR_HELP_CENTER",
                        "PRIMARY_EMAIL_CHANGE_VERIFICATION",
                        "PRIMARY_EMAIL_CHANGE_REQUESTED",
                        "PRIMARY_PHONE",
                        "RECOVERY_EMAIL",
                        "RECOVERY_PHONE",
                        "CONTACT_EMAIL",
                        "LOCATION_SHARING",
                        "CHROME_SYNC",
                        "SAVED_PASSWORDS_ACCESS",
                        "SAVED_PASSWORDS_EXPORT",
                        "SIGN_IN_WITH_GOOGLE",
                        "GMAIL_FORWARD_EMAIL",
                        "GMAIL_DELEGATE_ACCOUNT",
                        "GMAIL_BLOCKED_ADDRESS",
                        "GMAIL_SEND_MAIL_AS",
                        "GMAIL_VACATION_RESPONSE",
                        "GMAIL_FILTER_ADD",
                        "GMAIL_IMAP_TOGGLE",
                        "GMAIL_POP_TOGGLE",
                        "RECOVERY_RESCUE_KEY_ADDED",
                        "RECOVERY_RESCUE_KEY_CHANGED",
                        "RECOVERY_SECRETQA",
                        "RESET_COMPROMISED_PASSWORD",
                        "RESET_PASSWORD_FOUND_IN_DUMP",
                        "RISC_OPT_IN",
                        "RISC_OPT_OUT_CANCELLED",
                        "RISC_OPT_OUT_EFFECTIVE",
                        "RISC_OPT_OUT_INITIATED",
                        "RTC_CONSTELLATION",
                        "RTC_CONSTELLATION_VERIFICATION_FAILURE",
                        "STRONGAUTH_ASP_GENERATED",
                        "STRONGAUTH_ASP_REMOVED",
                        "STRONGAUTH_AUTHZEN_ADD_DEVICE",
                        "STRONGAUTH_AUTHZEN_AUTOMODE_DISABLED",
                        "STRONGAUTH_AUTHZEN_AUTOMODE_ENABLED",
                        "STRONGAUTH_AUTHZEN_REMOVE_DEVICE",
                        "STRONGAUTH_BACKUPCODE_GENERATED",
                        "STRONGAUTH_PHONE_ADDED",
                        "STRONGAUTH_PHONE_EDITED",
                        "STRONGAUTH_PHONE_REMOVED",
                        "STRONGAUTH_ENROLL_ANDROID",
                        "STRONGAUTH_ENROLL_NO_ASP_NO_BACKUP",
                        "STRONGAUTH_ENROLL_NO_ASP_WITH_BACKUP",
                        "STRONGAUTH_ENROLL_WITH_ASP_NO_BACKUP",
                        "STRONGAUTH_ENROLL_WITH_ASP_WITH_BACKUP",
                        "STRONGAUTH_VERIFIED_PHONE_ADDED",
                        "STRONGAUTH_VERIFIED_PHONE_EDITED",
                        "STRONGAUTH_VERIFIED_PHONE_REMOVED",
                        "STRONGAUTH_SCRATCH_CODE_USED",
                        "STRONGAUTH_SECURITY_CODE_GENERATED",
                        "STRONGAUTH_SECURITY_KEY_REGISTERED",
                        "STRONGAUTH_SECURITY_KEY_REMOVED",
                        "STRONGAUTH_SECURITY_KEY_THIS_DEVICE_REGISTERED",
                        "STRONGAUTH_TOTP_KEY_VERIFIED",
                        "STRONGAUTH_TOTP_REMOVED",
                        "STRONGAUTH_UNENROLL",
                        "STRONGAUTH_SECOND_FACTOR_USED",
                        "TEST_EVENT",
                        "UNICORN_NEW_DEVICE_UNSUPERVISED",
                        "ACCOUNT_RECOVERY_2SV_CLAIM_FILED_CALL_TO_ACTION_SMS_DEPRECATED",
                        "ACCOUNT_RECOVERY_2SV_SUCCESSFUL_LOST_HARD_CLAIM_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_1_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_2_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_3_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_4_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_5_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_6_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_7_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_PROMOTION_8_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_1_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_2_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_3_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_4_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_5_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_6_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_8_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_9_DEPRECATED",
                        "GPS_NEW_DEVICE_IOS_APP_ROUND_3_PROMOTION_10_DEPRECATED",
                        "GPS_NEW_DEVICE_EDGE_PROMOTION_1_DEPRECATED",
                        "GPS_NEW_DEVICE_EDGE_PROMOTION_2_DEPRECATED",
                        "GPS_NEW_DEVICE_EDGE_PROMOTION_3_DEPRECATED",
                        "GOOGLE_TALK_DEPRECATION_WINDOWS_DEPRECATED",
                        "GROWTH_MOBILE_PROMOTION_DEPRECATED",
                        "RECOVERY_RESCUE_KEY_ADD_DEPRECATED",
                        "RECOVERY_RESCUE_KEY_REMINDER_DEPRECATED",
                        "TOKEN_REVOCATION_USER",
                        "TITANIUM_SECURITY_KEY_PURCHASE_REMINDER",
                        "TITANIUM_ENABLED",
                        "TITANIUM_DISABLED",
                        "TITANIUM_WAITLIST_JOINED",
                        "GET_INSTANT_TITANIUM",
                        "INSTANT_TITANIUM_ENABLED",
                        "INSTANT_TITANIUM_NUDGE",
                        "INSTANT_TITANIUM_WARNING",
                        "INSTANT_TITANIUM_DISABLED",
                        "AOG_ACCOUNT_LINKING_NEW_ACCOUNT_CREATED_TOS",
                        "AOG_ACCOUNT_LINKING_REQUEST_MORE_INFO",
                        "AOG_ACCOUNT_LINKING_GSI_ONLY_TOS",
                        "AOG_ACCOUNT_LINKING_GSI_ONLY_NEW_ACCOUNT_CREATED",
                        "AOG_ACCOUNT_LINKING_EXISTING_ACCOUNT_LINKED",
                        "LISTENABLE_SESSION_LOGIN_CONFIRMATION_DEFAULT",
                        "LISTENABLE_SESSION_LOGIN_CONFIRMATION_FULLSCREEN",
                        "LISTENABLE_SESSION_LOGIN_CONFIRMATION_DEFAULT_SILENT",
                        "ADVICE_DEVICES_INACTIVE_DEVICE",
                        "ADVICE_DEVICES_WITHOUT_SCREEN_LOCK",
                        "ADVICE_DEVICES_PLAY_PROTECT_DISABLED",
                        "ADVICE_DEVICES_INSTALL_FIRST_PARTY_APP",
                        "ADVICE_APPS_HIGH_RISK_APP",
                        "ADVICE_APPS_DISABLE_LESS_SECURE_APPS",
                        "ADVICE_APPS_REMOVE_SPECIFIC_PASSWORD",
                        "ADVICE_TSV_ADD_AUTHZEN",
                        "ADVICE_TSV_ADD_BACKUP_PHONE",
                        "ADVICE_RECOVERY_OPTIONS_ADD_PHONE",
                        "ADVICE_RECOVERY_OPTIONS_VERIFY_PHONE",
                        "ADVICE_RECOVERY_OPTIONS_ADD_EMAIL",
                        "ADVICE_RECOVERY_OPTIONS_CONFIRM_PHONE",
                        "ADVICE_RECOVERY_OPTIONS_CONFIRM_EMAIL",
                        "ADVICE_RECENT_ACTIVITY_CRITICAL_EVENT",
                        "ADVICE_RECOVERY_OPTIONS_ADD_PHONE_OR_EMAIL",
                        "ADVICE_RECOVERY_OPTIONS_ENROLL_IN_2SV",
                        "ADVICE_TITANIUM_ENROLL_IN_TITANIUM",
                        "ADVICE_DASHER_ENROLL_SECURITY_KEY",
                        "ADVICE_GMAIL_SETTINGS_REMOVE_DELEGATE_ADDRESSES",
                        "ADVICE_GMAIL_SETTINGS_REMOVE_FORWARDING_ADDRESSES"
                    ],
                    "enumDescriptions": [
                        "Internal use only. Used as a \"null value\" for EventType in monitoring.",
                        "When removing Gmail from the account, the user specifies a new primary\nemail. This email address is validate by the AC_GMAIL_DOWNGRADE message.",
                        "",
                        "For now only sent to RISC channel and not sent to users.",
                        "",
                        "",
                        "Account disabled with disable reason and enable action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "User's account disabled (go/relay-abuse-auto-shutdown) because they\nare sending too many spam through the smtp relay (go/smtp-relay)",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "For now only sent to RISC channel and not sent to users.",
                        "Magic Arch 2sv Account Recovery flow",
                        "",
                        "",
                        "",
                        "The name ACCOUNT_RECOVERY_2SV_RECENT_SIGNIN_TO_1SV_ACCOUNT is a misnomer.\nThe email has nothing to do with 2SV.  It was added with other 2SV\nnotifications and the 2SV part got stuck in accidentally.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "New events for RSI notifications",
                        "",
                        "",
                        "LOST_BOTH is a historic name, this applies to any 2sv claim",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "User's account is reenabled after being disabled for some reason.\nFor now only sent to RISC channel and not sent to users.",
                        "The account was disabled for abuse and was reenabled through the\nPatronus appeal process.",
                        "For now only sent to RISC channel and not sent to users.",
                        "Notifications informing users about their account being age disabled\nsoon. See go/age-disable-grace-period-dd and b/133474148.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Account Health notification (supports experiment flow extension).\nIn GUNS dashboards the notification name will be:\nAH_RECOVERY_OPTIONS_<flavor#>",
                        "Account Health notifications for collecting contact emails",
                        "",
                        "Suspected phone number ownership change, see go/ah-ownership-change-dd.",
                        "",
                        "Phone renumber notification include email and Android notification.\nInform the users in phone renumber area.\ngo/brazil-renumbering-2017",
                        "Phone renumber sms notification.\nInform the users in phone renumber area.\ngo/brazil-renumbering-2017",
                        "Failed recovery or sign-in events, following omg/4289\ngo/omg4289-notification-prd\ngroup 1",
                        "group 2",
                        "group 3",
                        "group 4",
                        "Security Advisor email campaign. See go/ah-sa-email-prd",
                        "Periodic Security Advisor email campaign. See go/ah-sa-email-prd",
                        "Periodic Security Advisor email campaign - control group during\nexperiment launches. This event does not notify the user, but rather\nstores in session logs and in the security events storage that such\nnotification would have been sent if the user were in the experiment\ngroup, for analysis purposes.",
                        "Inform the user that they might have been targeted by govt-backed attack.",
                        "Notifications to IDaaS (aka Dasher) users who are about to be enforced to\nget enrolled in 2SV in an upcoming date set by admins.\nSee go/idaas-2svfindusers-migration-dd",
                        "Follow up email sent to users whose account has been hijacked and have\nbeen to the mitigation flow.\nSee go/ah-post-hijacking-email-prd",
                        "Campaign for users who should try account recovery. See\ngo/abc-should-try-recovery-campaign-dd.",
                        "",
                        "",
                        "Notifications asking users to set a date of birth if they don't have one.\nSee go/audubon-dob-collection-dd and b/130016270.",
                        "",
                        "",
                        "Android notification targeted to users that have not yet gone through the\nNarnia 1 Authenticated Consent Bump flow on the web, asking them to\nreview the Privacy Policy.",
                        "Android notification for users to choose new account options as part of\nNarnia 2.0 consent.",
                        "A user has started an export of their data through Takeout.\nWe want to notify the user through secondary means\n(recovery e-mail/mobile) that this is happening in case they didn't\nreally start the export (e.g. their account was hijacked).",
                        "A user has scheduled a Takeout for a future time.\nWe want to notify the user through secondary means\n(recovery e-mail/mobile) that this is happening in case they didn't\nschedule it (e.g. their account was hijacked).",
                        "User modified Device-Centric Auth (go/dca) settings.",
                        "",
                        "",
                        "",
                        "",
                        "Device access to the user's account was revoked.",
                        "Event sent out directly by tidydb. It includes all the disabled\naccount deleted events except whose accounts were disabled\nbecause their age is under 13.",
                        "Event sent out directly by tidydb 30d before deleting a disabled account.\nThis will replace the DISABLED_ACCOUNT_DELETED notification above.",
                        "Event type to be used in case when an emergency notification is needed.",
                        "Emmett. A campaign to inform users that the legal entity of their account\nhas changed (go/emmett-dd).",
                        "Internal use only. Used as an example for introducing new notification\ntypes with or without experiments.",
                        "",
                        "",
                        "Android notification informing EU users about GDPR\n(go/gdpr-android-notification-dd).",
                        "AKA Scroogled.",
                        "Scroogled + Guardian",
                        "Also Scroogled.",
                        "Scroogled action-specific notifications",
                        "Also Scroogled + Guardian",
                        "Deprecated",
                        "",
                        "",
                        "",
                        "",
                        "Scroogled notification because forward email address is associated with\nmultiple known hijacked sessions.",
                        "Scroogled experimental notifications (go/teller, go/teller-prd)\nNote: Once a specific experimental notification is proved satisfactory,\nit will be fully launched as a standing regular notification and the\ncorresponding TELLER version will be removed.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The no-confidence (not related to hijacking) events from Scroogled.\nThe events of adding or changing the email-forwarding settings.",
                        "",
                        "",
                        "",
                        "Round 3 of NDN IOS experiment. See PRD here:\ngo/ios-ndn-round-3",
                        "A dummy event type used to pass to Account Notifier without sending them\nout, it may still be served on Notification page.\nThis is an actual new device we don't want to send out as an email, as\nper go/ios-ndn \"ARM1\".",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Support for Chromebook Pixelbook campaigns, routed to Gamma campaign\nmanaged by Chrome OS PMMs (disjoint from XPA-Growth).\nPOC leeedwin@, myivory@.",
                        "",
                        "Whether the new device is logged in with recovery key.",
                        "",
                        "",
                        "Someone has your password, but was blocked by further challenges.",
                        "Someone has your password but didn't complete 2SV.",
                        "Someone didn't complete passwords.google.com reauth.\nSee go/hagrid-blocked-notification.",
                        "Someone didn't complete takeout.google.com reauth.\nSee go/hagrid-blocked-notification.",
                        "We've detected malware on the user's device.",
                        "Someone has your password, and tried to log in on non-web, such as email,\nbut was blocked.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Email notification for Japan carrier-email SMS turndown",
                        "A go/limited-disable was added to the account. The extension data\ncontains the ID of the added Limited Disable configuration.",
                        "Same as above when the Limited Disable was lifted.",
                        "",
                        "New account signal. See go/wes-dd.",
                        "",
                        "",
                        "",
                        "Passwords.Google.Com supicious activity.",
                        "Periodic Privacy Reminder emails (go/ppr-dd).",
                        "Russia regulator ruling notification.\nInform Russian users about default setting configurations in the help\ncenter. Background: http://shortn/_DD8GZo6TRW",
                        "When the user requests to change their non-Gmail primary email address, a\nverification email is sent to the new (to-be-verified) address,\ncontaining a verification link. See go/ma-primary-email-dd.",
                        "A notification email sent to the current non-Gmail primary email address,\nnotifying the user that a primary email change was requested.",
                        "",
                        "Secondary personal email changed.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Inform the user that a rescue key was added (for the first time) or\nchanged.",
                        "",
                        "",
                        "The user has been forced to change their password because it has been\nused in a denied login event.\ngo/forced-pwd-reset-notification",
                        "The user has been forced to change their password because it appeared in\na credentials dump.\ngo/forced-pwd-reset-notification",
                        "Events related to user's RISC toggle.",
                        "",
                        "",
                        "",
                        "Android notification sent from constellation. e.g. A new phone number\nis verified and added to user's account.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Internal use only. Event used for testing misc features for test users\nin prod.",
                        "Notify user that kid's device needs further setup to become supervised.",
                        "Deprecated notification types from here.",
                        "",
                        "2 flavors of BOND's experiment to add app download messaging\nto iOS new device notification.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Round 3 of NDN IOS experiment. See PRD here:\ngo/ios-ndn-round-3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Windows 10 Edge NDN experiment.",
                        "",
                        "",
                        "AKA Cricket deprecation.",
                        "Growth Mobile Promotion - Now handled by Growth server",
                        "Suggest the user to generate a new rescue key, after account creation\nof a phone ID auth (passwordless) account.",
                        "Remind the user to re-generate a rescue key, in case they forgot the\noriginal one.",
                        "Token revocation events.\nExplicit user triggered revocation, from Permissions page for example.",
                        "Reminds the user to purchase Security Keys after having started\nTitnanium Enrollment",
                        "Informs users that Titanium has been enabled on their account",
                        "Informs users that Titanium has been disabled on their account",
                        "Informs users that they have successfully joined the waitlist for\nTitanium",
                        "Email to offer Instant Titanium to users",
                        "Email indicating Instant Titanium is activated",
                        "Reminder to buy security keys",
                        "Warning when there are only 4 days left in the trial period",
                        "Trial period for Instant Titanium is over and it is disabled",
                        "AoG account linking events.\nThe user has agreed to share their basic profile information and is\nreceiving the account creation notice as well as TOS/PP via email.",
                        "The user wants to learn more about the information that they\u2019re sharing.",
                        "The user is signing up for an account that has no other option but GSI,\nand is receiving TOS/PP via email.",
                        "The user is signing up for an account that has no other option but GSI,\nand is receiving account creation notice via email.",
                        "The user has just linked their existing account (created with a username\nand password) to Google.",
                        "The default notification message for a login confirmation on a secondary\nfully-trusted device.",
                        "A login confirmation notification that immediately opens the approval\npage in a fullscreen WebView without any user interaction.",
                        "The default notification message with no vibration or sound.",
                        "Inactive device advice.",
                        "Add screen lock advice.",
                        "Play Protect disabled advice.",
                        "Install first-party app advice.",
                        "High-risk app advice.",
                        "Disable less secure apps advice.",
                        "Remove app-specific password advice.",
                        "Add authzen advice.",
                        "Add backup phone advice.",
                        "Add recovery phone advice.",
                        "Verify recovery phone advice.",
                        "Add recovery email advice.",
                        "Recovery phone freshness advice.",
                        "Recovery email freshness advice.",
                        "Review critical event.",
                        "Add recovery options generic advice.",
                        "Enroll in 2SV for high-value accounts. go/sa-segment-ads-dd",
                        "Enroll in Titanium",
                        "Dasher enroll security key advice.",
                        "Remove account delegates advice.",
                        "Remove forwarding addresses advice."
                    ],
                    "type": "string"
                },
                "forcedExperiment": {
                    "description": "Deprecated. use forced_experiment_id instead.",
                    "items": {
                        "$ref": "GaiaData__ExperimentIdentifier"
                    },
                    "type": "array"
                },
                "forcedExperimentId": {
                    "description": "Unique experiment IDs the notification is forced to be under (given the\nexperiment is configured under the relevant event type).",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "forcedLocale": {
                    "description": "Optional locale that overrides the other locales (e.g. ULS, device language\nfor Android etc.).",
                    "type": "string"
                },
                "forcedRecipientEmail": {
                    "description": "Set specific destination emails for the notification.\nWill only be used for notifications configured to use the email source\nEVENT_SPECIFIED_RECIPIENT.\nFor sanity reasons, there is a hard-coded limit of 25 recipients.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ipInfo": {
                    "$ref": "GaiaData__IpInfo",
                    "description": "Some events have an IP address associated with them. If an event\ndoes and you wish to display it to the recipient set this field."
                },
                "locale": {
                    "description": "A fallback locale used to perform the event in case we can't\ninfer it from ULS (user account language preference) or device language\n(for Android notifications). Preferably use a BCP 47 language tag\n(see go/iii). If it's not set, English would be used as fallback.",
                    "type": "string"
                },
                "originalEventTimestampUs": {
                    "description": "Used when event occurred significantly before the notification is sent\ne.g. b/35862799",
                    "format": "int64",
                    "type": "string"
                },
                "scheduledExpiryTimestampMs": {
                    "description": "Using Android Native notification, timestamp when the notification should\nbe deleted from the devices. This deletion happens through server\ninteraction, so it's not guaranteed to happen at exactly that time if\nthere's no connectivity.\nThis is in development, please do not use without asking account-notifier.",
                    "format": "int64",
                    "type": "string"
                },
                "scheduledNotifyDateTime": {
                    "$ref": "GaiaData__DateTime",
                    "description": "A DateTime in the recepient's timezone. The message will be scheduled\nto be delivered at this time in the recepient's timezone."
                },
                "scheduledNotifyTimestampMs": {
                    "description": "Timestamp in milliseconds.",
                    "format": "int64",
                    "type": "string"
                },
                "sessionInfo": {
                    "$ref": "GaiaData__SessionInfo",
                    "description": "Information about the user session causing the event."
                },
                "skipNotificationReason": {
                    "enum": [
                        "NONE",
                        "ADDITIONAL_LESS_DETAILED_EVENT",
                        "ACCOUNT_NOT_ELIGIBLE_FOR_NOTIFICATION",
                        "GAIA_BACKEND_SKIP_NOTIFICATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "go/ams-notifications",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "timestampUs": {
                    "description": "The timestamp in microseconds of when the event occurred. It is\nmandatory to set this field.",
                    "format": "int64",
                    "type": "string"
                },
                "triggeringGaiaId": {
                    "description": "The Gaia ID of the user triggering the action. This maybe different\nfrom the Gaia ID of the user whose account was affected, e.g. Dasher\nadmins taking actions on accounts in their domains, Unicorn parent\naccounts taking actions on their children's accounts, etc. This field is\noptional, however always prefer setting this field if the information\nis available.",
                    "format": "int64",
                    "type": "string"
                },
                "triggeringJob": {
                    "description": "The LOAS role of the job triggering the action.",
                    "type": "string"
                },
                "triggeringSource": {
                    "description": "The flow source which triggered this event.",
                    "enum": [
                        "TRIGGER_SOURCE_UNSPECIFIED",
                        "RECOVERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Event was automatically created in a recovery flow."
                    ],
                    "type": "string"
                },
                "userId": {
                    "description": "The Gaia ID of the user whose account was affected. It is\nmandatory to set this field.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaData__DateTime": {
            "description": "Protocol buffer representation of a DateTime. This message is a copy of the\nDateTime message as defined in chime backend - go/sched_opts.",
            "id": "GaiaData__DateTime",
            "properties": {
                "date": {
                    "$ref": "GoogleType__Date",
                    "description": "Optional. If not specified, will represent the nearest possible date at the\nspecified time in the user's timezone."
                },
                "time": {
                    "$ref": "GoogleType__TimeOfDay",
                    "description": "Required. The hours field must be specified."
                }
            },
            "type": "object"
        },
        "GaiaData__DebugInfo": {
            "description": "Debugging data to include in messages.",
            "id": "GaiaData__DebugInfo",
            "properties": {
                "debugFeature": {
                    "description": "Debug features.",
                    "enumDescriptions": [
                        "For ProtoBestPractices.",
                        "Shows the locale (forced or regular) in the sent notification subject."
                    ],
                    "items": {
                        "enum": [
                            "UNDEFINED",
                            "SHOW_LOCALE_IN_SUBJECT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "keyValuePair": {
                    "description": "Arbitrary data in key-value-pair form.",
                    "items": {
                        "$ref": "GaiaData__DebugKeyValuePair"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GaiaData__DebugKeyValuePair": {
            "description": "Arbitrary key-value data that can be attached to events for\ndebugging purposes.",
            "id": "GaiaData__DebugKeyValuePair",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaData__ExperimentIdentifier": {
            "description": "Identifies a specific experiment and whether it should be on or off.",
            "id": "GaiaData__ExperimentIdentifier",
            "properties": {
                "experimentId": {
                    "description": "The experiment ID as configured for the ExperimentConfig experiment_id\nfield at production/config/cdd/gaia-account-notifier/\naccount-notifier-config-common.gcl.",
                    "format": "int64",
                    "type": "string"
                },
                "flavorId": {
                    "description": "The experimental flavor ID as configured for the ExperimentalFlavorConfig\nflavor_id field at production/config/cdd/gaia-account-notifier/\naccount-notifier-config-common.gcl.",
                    "type": "string"
                },
                "isOn": {
                    "description": "Whether this experiment is forced to be on or off.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GaiaData__IpInfo": {
            "description": "Contains information about an ip address that we would want to present\nto the user.",
            "id": "GaiaData__IpInfo",
            "properties": {
                "ipAddress": {
                    "description": "Human readable IP address, e.g., 11.22.33.44",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GaiaData__SessionInfo": {
            "description": "Contains information about the session that caused an event.",
            "id": "GaiaData__SessionInfo",
            "properties": {
                "authTimeUsec": {
                    "description": "Authentication timestamp of the session.",
                    "format": "int64",
                    "type": "string"
                },
                "dusi": {
                    "description": "DUSI of the session. See go/dusi.",
                    "type": "string"
                },
                "userAgent": {
                    "description": "HTTP user agent of the application in the session.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Gdata_TraceRecords_Record": {
            "id": "Gdata_TraceRecords_Record",
            "properties": {
                "description": {
                    "description": "Description for the user.",
                    "type": "string"
                },
                "key": {
                    "description": "Used to agregate records.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Number of ms. since epoch.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Gdata__ErrorProto": {
            "description": "Describes one specific error.",
            "id": "Gdata__ErrorProto",
            "properties": {
                "argument": {
                    "description": "Error arguments, to be used when building user-friendly error messages\ngiven the error domain and code.  Different error codes require different\narguments.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "code": {
                    "description": "Error code in the error domain. This should correspond to\na value of the enum type whose name is in domain. See\nthe core error domain in error_domain.proto.",
                    "type": "string"
                },
                "debugInfo": {
                    "description": "Debugging information, which should not be\nshared externally.",
                    "type": "string"
                },
                "domain": {
                    "description": "Error domain. RoSy services can define their own\ndomain and error codes. This should normally be\nthe name of an enum type, such as: gdata.CoreErrorDomain",
                    "type": "string"
                },
                "externalErrorMessage": {
                    "description": "A short explanation for the error, which can be shared outside Google.\n\nPlease set domain, code and arguments whenever possible instead of this\nerror message so that external APIs can build safe error messages\nthemselves.\n\nExternal messages built in a RoSy interface will most likely refer to\ninformation and concepts that are not available externally and should not\nbe exposed. It is safer if external APIs can understand the errors and\ndecide what the error message should look like.",
                    "type": "string"
                },
                "location": {
                    "description": "Location of the error, as specified by the location type.\n\nIf location_type is PATH, this should be a path to a field that's\nrelative to the request, using FieldPath notation\n(net/proto2/util/public/field_path.h).\n\nExamples:\n  authenticated_user.gaia_id\n  resource.address[2].country",
                    "type": "string"
                },
                "locationType": {
                    "enum": [
                        "PATH",
                        "OTHER",
                        "PARAMETER"
                    ],
                    "enumDescriptions": [
                        "location is an xpath-like path pointing\nto the request field that caused the error.",
                        "other location type which can safely be shared\nexternally.",
                        "Location is request paramater. This maps to the {@link PARAMETERS} in\n{@link MessageLocation}."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Gdata__Errors": {
            "description": "Request Error information.\n\nThe presence of an error field signals that the operation\nhas failed.",
            "id": "Gdata__Errors",
            "properties": {
                "code": {
                    "description": "Global error code. Deprecated and ignored.\nSet custom error codes in ErrorProto.domain and ErrorProto.code\ninstead.",
                    "enum": [
                        "BAD_REQUEST",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "CONFLICT",
                        "GONE",
                        "PRECONDITION_FAILED",
                        "INTERNAL_ERROR",
                        "SERVICE_UNAVAILABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "error": {
                    "description": "Specific error description and codes",
                    "items": {
                        "$ref": "Gdata__ErrorProto"
                    },
                    "type": "array"
                },
                "requestId": {
                    "description": "Request identifier generated by the service, which can be\nused to identify the error in the logs",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Gdata__TraceRecords": {
            "description": "As mentioned above, this protobuf represents a set of trace messages.\nIt should be used to store any log information, that might be\nuseful to the Apiary user/developer, about the processing that's\nbeing perfomed on a particular request - the one to which this\nprotobuf is attached.",
            "id": "Gdata__TraceRecords",
            "properties": {
                "records": {
                    "items": {
                        "$ref": "Gdata_TraceRecords_Record"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GmmNotifications_ExperimentOverrides_ExperimentIdentifier": {
            "id": "GmmNotifications_ExperimentOverrides_ExperimentIdentifier",
            "properties": {
                "experimentId": {
                    "description": "Raw experiment id to force enable.\nOptional.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GmmNotifications__ExperimentOverrides": {
            "id": "GmmNotifications__ExperimentOverrides",
            "properties": {
                "experimentId": {
                    "description": "Experiment Identifiers (such as the raw id) for which experiments to\noverride.\nOptional.",
                    "items": {
                        "$ref": "GmmNotifications_ExperimentOverrides_ExperimentIdentifier"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GmmNotifications__Feature": {
            "id": "GmmNotifications__Feature",
            "properties": {
                "extensionId": {
                    "description": "Extension ID of the .guns.render.AppPayload payload for this feature.\nRequired.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GmmNotifications__GmmClientCapabilities": {
            "id": "GmmNotifications__GmmClientCapabilities",
            "properties": {
                "features": {
                    "description": "Features supported and handled by the client.",
                    "items": {
                        "$ref": "GmmNotifications__Feature"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GmmNotifications__GmmClientGunsExtension": {
            "description": "GMM-specific GUNS device settings extension for communicating\nto the feature-specific push-servers which features a client supports.",
            "id": "GmmNotifications__GmmClientGunsExtension",
            "properties": {
                "appVersion": {
                    "description": "The app version of the GMM client.",
                    "type": "string"
                },
                "capabilities": {
                    "$ref": "GmmNotifications__GmmClientCapabilities",
                    "description": "Capabilities of the GMM client.\nRequired."
                },
                "experimentOverridesInternalBuildOnly": {
                    "$ref": "GmmNotifications__ExperimentOverrides",
                    "description": "GMM allows internal builds to force enable experiments which is important\nfor testing. This passes through the set of overridden experiment state\nso that notification pipelines can see what state was forced. This feature\nis only enabled when is_internal_build is true.\nOptional."
                },
                "isInternalBuild": {
                    "description": "Whether the application is internal (e.g. dogfood, fishfood) or not.\nBy default it's assumed to be a prod build. This field is filled by\ninternal builds starting from aGMM 9.23-ish and iGMM 4.18-ish.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__AndroidIntent": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__AndroidIntent",
            "properties": {
                "intentType": {
                    "description": "Required.",
                    "enum": [
                        "UNKNOWN",
                        "SERVICE",
                        "ACTIVITY",
                        "BROADCAST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "uri": {
                    "description": "Required. This Uri is used by client to rebuild the intent by using\nhttps://developer.android.com/reference/android/content/Intent.html#parseUri(java.lang.String,%20int)\nExample (with uri_flag = 0):\n\"#Intent;action=com.youtube.WATCH_ACTION;package=com.youtube;component=com.youtube/.ui.class1;S.key1=value1;B.key2=true;end\"\nwith uri_flag = 1 (URI_INTENT_SCHEME):\n\"intent:#Intent;action=com.youtube.WATCH_ACTION;package=com.youtube;component=com.youtube/.ui.class1;S.key1=value1;B.key2=true;end\"",
                    "type": "string"
                },
                "uriParsingFlag": {
                    "description": "Required. The Android flag to be used when parsing uri to an intent, See\nhttps://developer.android.com/reference/android/content/Intent.html#parseUri(java.lang.String,%20int)\nOnly supports 0 or 1(URI_INTENT_SCHEME), others requires higher API level.\nNote: This is the flag used in Intent.toUri/parseUri, not to be confused\nwith the launch flags in Intent.setFlags which are encoded in the uri\nitself.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__ConversationInfo": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__ConversationInfo",
            "properties": {
                "displayName": {
                    "description": "Name to be shown for the conversation. Set for group conversations only.",
                    "type": "string"
                },
                "groupId": {
                    "description": "If this is a group conversation, Id of the group would be the\nconversation id.",
                    "type": "string"
                },
                "individualConversationId": {
                    "description": "For 1:1 conversations, the client can set this unique for two humans in\nthe chat so that adding bots etc to it would preserve the thread of\nmessages.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__InAppNotificationInfo": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__InAppNotificationInfo",
            "properties": {
                "messageIntent": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__AndroidIntent",
                    "description": "If this attribute is set AND the notify_intent was not set or handled,\nMatchstick Client will build an intent based on the information in this\nattribute, and will pop up a Matchstick notification, clicking upon which\nwill trigger this intent. If this attribute is not set, Matchstick Client\nwill pop up a notification, which will render the message defined in\nMessage.content in Matchstick Message Card upon tapping."
                },
                "notifyIntent": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__AndroidIntent",
                    "description": "If this attribute is available, Matchstick Client will build an intent\nbased on the information in this attribute, and forward the intent to\nspecified package directly after successful verification. If the app is\npresent and handles the intent, then Matchstick will not show the\nnotification and app will show in-app notification. All the remaining\nattributes in the message are effectively ignored."
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__LinkMessage": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__LinkMessage",
            "properties": {
                "intentUri": {
                    "description": "The intent to open on Android when recipient clicks on the content.\nThe recipient client will call Intent.parseUri(<...>, URI_INTENT_SCHEME) to\ncreate the intent from this string. The intent should have category\nCATEGORY_BROWSABLE.",
                    "type": "string"
                },
                "snippet": {
                    "description": "Snippet/description shown for the shared link to the recipient.",
                    "type": "string"
                },
                "thumbnail": {
                    "description": "Actual thumbnail data. Size <= 128k (Beyond that, a FAILED_PRECONDITION\nerror will be returned).",
                    "format": "byte",
                    "type": "string"
                },
                "thumbnailHeight": {
                    "description": "Thumbnail image height.",
                    "format": "int32",
                    "type": "integer"
                },
                "thumbnailUrl": {
                    "description": "The URL to fetch the thumbnail from.",
                    "type": "string"
                },
                "thumbnailWidth": {
                    "description": "Thumbnail image width.",
                    "format": "int32",
                    "type": "integer"
                },
                "title": {
                    "description": "The title for shared link shown to the recipient.",
                    "type": "string"
                },
                "userMessage": {
                    "description": "The accompanying text typed by the Sender at the time of sharing.",
                    "type": "string"
                },
                "webUrl": {
                    "description": "The fallback Web URL to show when the above intent cannot be handled on\nrecipient's Android device.\nEven in cases where intent is not required, this is compulsory.\n\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__MediaMessage": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__MediaMessage",
            "properties": {
                "contentType": {
                    "description": "The type of the media to be downloaded.\nSupported values: \"video/mp4\", \"video/3gpp\", \"video/mpeg\", \"video/mpeg4\",\n\"image/png\", \"image/jpeg\", \"image/webp\", \"image/gif\"\n\"audio/mp3\", \"audio/m4a\", \"audio/x-m4a\", \"audio/mp4\", \"audio/mpeg\"\nCodecs and formats supported by Android 4.1 are supported for these types.\n\nRequired.",
                    "type": "string"
                },
                "thumbnail": {
                    "description": "Thumbnail preview shown to the recipient before download.\nAvailable for video message and image message.\nSupported thumbnail image types: \"png\", \"jpeg\", \"webp\".\nSize < 64k (Beyond that, a FAILED_PRECONDITION error will be returned).\n\nRequired.",
                    "format": "byte",
                    "type": "string"
                },
                "url": {
                    "description": "The URL from where the media content can be downloaded.\n\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__Message": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__Message",
            "properties": {
                "exportData": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Client app data used to export this message. App Preview client does not\nread this data, just stores them to export when the actual app is\ninstalled.",
                    "type": "object"
                },
                "inAppNotificationInfo": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__InAppNotificationInfo",
                    "description": "Optional. If set, Matchstick client will try to trigger a to-native-app\nnotification."
                },
                "linkMessage": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__LinkMessage",
                    "description": "A link being shared with a preview."
                },
                "mediaMessage": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__MediaMessage",
                    "description": "A image/video/audio message"
                },
                "messageProperties": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__MessageProperties",
                    "description": "Optional. If set, Matchstick client will use properties stated here over\napp level configurations"
                },
                "messageReceipts": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__MessageReceipts",
                    "description": "A message receipt indicating the statuses of messages at the destination."
                },
                "notificationTextOverride": {
                    "description": "Notification string to show for this message.",
                    "type": "string"
                },
                "secureMessage": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__SecureMessage",
                    "description": "A secure message to send end-to-end encrypted messages using\nlibsignal-protocol by www.whispersystems.org."
                },
                "textMessage": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__TextMessage",
                    "description": "A text message with rich format."
                },
                "webAppMessage": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__WebAppMessage",
                    "description": "A message from 1p/3p apps."
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__MessageProperties": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__MessageProperties",
            "properties": {
                "installUrl": {
                    "description": "Per-message install URL. Used for e.g, to send referral codes via the URL",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__MessageReceipt": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__MessageReceipt",
            "properties": {
                "error": {
                    "enum": [
                        "SUCCESS",
                        "FAILED_TO_DELIVER",
                        "FAILED_TO_DECRYPT",
                        "FAILED_TO_RENDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "The receiver cannot deliver the message to the next hop (e.g., the SMS\nrelay server fails to deliver the message to the phone number).",
                        "The recipient client cannot decrypt the message.",
                        "The recipient client cannot render the message."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The ID of the original message that this receipt is for.",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "UNKNOWN",
                        "DELIVERED",
                        "READ"
                    ],
                    "enumDescriptions": [
                        "",
                        "The message has been delivered.",
                        "The recipient has read the message."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__MessageReceipts": {
            "description": "MessageReceipts contains message receipts for multiple messages in the\nconversation.",
            "id": "GoogleCommunicationsApppreviewmessagingV1__MessageReceipts",
            "properties": {
                "receipts": {
                    "description": "A list of receipts, each for a message.",
                    "items": {
                        "$ref": "GoogleCommunicationsApppreviewmessagingV1__MessageReceipt"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__SecureMessage": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__SecureMessage",
            "properties": {
                "messageType": {
                    "description": "Required.",
                    "enum": [
                        "UNKNOWN",
                        "SECURE",
                        "PREKEY_SECURE"
                    ],
                    "enumDescriptions": [
                        "",
                        "*  version || serialize(SignalMessage) || mac, or",
                        "*  version || serialize(PreKeySignalMessage)."
                    ],
                    "type": "string"
                },
                "payload": {
                    "description": "Output of encrypting google.communications.apppreviewmessaging.v1.Message\nproto bytes using libsignal-protocol-* by www.whispersystems.org.\n\nRequired.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__SenderInfo": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__SenderInfo",
            "properties": {
                "displayName": {
                    "description": "Display Name of the sender.",
                    "type": "string"
                },
                "name": {
                    "description": "ID of the sender in the 3P/1P application.\nThe application is derived from the caller in the API headers.\n\nRequired.",
                    "type": "string"
                },
                "profilePhoto": {
                    "description": "Thumbnail of the sender profile photo.\nSupported image types: \"png\", \"jpeg\", \"webp\".\nSize < 16k (Beyond that, a FAILED_PRECONDITION error will be returned).",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__TextMessage": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__TextMessage",
            "properties": {
                "text": {
                    "description": "Just plain text for now.\nSize < 4K (Beyond that, a FAILED_PRECONDITION error will be returned).\n\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCommunicationsApppreviewmessagingV1__WebAppMessage": {
            "id": "GoogleCommunicationsApppreviewmessagingV1__WebAppMessage",
            "properties": {
                "persist": {
                    "description": "MS client will not persist message in db on device if this is false.",
                    "type": "boolean"
                },
                "preloadUrls": {
                    "description": "List of URLs for MS client to preload",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "serializedMessage": {
                    "description": "This can be serialized proto or json. MS server and client do not care and\npass it to WebApp as it is.",
                    "type": "string"
                },
                "webUrl": {
                    "description": "url for fetching html files.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalNotificationsV1__PingRequest": {
            "description": "Intentionally left empty.",
            "id": "GoogleInternalNotificationsV1__PingRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalNotificationsV1__PingResponse": {
            "id": "GoogleInternalNotificationsV1__PingResponse",
            "properties": {
                "buildLabel": {
                    "description": "The build of the server that handled this request.",
                    "type": "string"
                },
                "projectId": {
                    "description": "The developer project ID associated with the current request.",
                    "type": "string"
                },
                "projectNumber": {
                    "description": "The developer project number associated with the current request.\nSee https://screenshot.googleplex.com/qAMz3cPBAwW.png on the difference\nbetween project number and project ID.",
                    "format": "int64",
                    "type": "string"
                },
                "serverName": {
                    "description": "The name of the server that handled this request.",
                    "type": "string"
                },
                "userEmail": {
                    "description": "The logged-in user's email address.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleType__Date": {
            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
            "id": "GoogleType__Date",
            "properties": {
                "day": {
                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                    "format": "int32",
                    "type": "integer"
                },
                "year": {
                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleType__TimeOfDay": {
            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
            "id": "GoogleType__TimeOfDay",
            "properties": {
                "hours": {
                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                    "format": "int32",
                    "type": "integer"
                },
                "minutes": {
                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                    "format": "int32",
                    "type": "integer"
                },
                "nanos": {
                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                    "format": "int32",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Growth__GmsCoreNotificationContext": {
            "description": "Notification context (e.g. session id) for analyzing funnel.\nLogged with GmsCoreNotification events received, shown, etc).",
            "id": "Growth__GmsCoreNotificationContext",
            "properties": {
                "ctrToken": {
                    "description": "Token to include when marking the notification as received,\nclicked, etc to be used to calculate CTR and funnel.",
                    "type": "string"
                },
                "gdsid": {
                    "description": "An ID that coupled with the account can uniquily identify the interaction.",
                    "format": "int32",
                    "type": "integer"
                },
                "notificationType": {
                    "description": "Notification type (e.g. GoogleGuide)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__Channel": {
            "description": "NotificationChannel (Only available from Android O)\nSee - https://developer.android.com/training/notify-user/channels\nNext TAG: 7",
            "id": "GunsGms__Channel",
            "properties": {
                "channelDescription": {
                    "description": "Description of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getDescription()",
                    "type": "string"
                },
                "channelId": {
                    "description": "ID of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getId()",
                    "type": "string"
                },
                "channelName": {
                    "description": "Name of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getName()",
                    "type": "string"
                },
                "groupId": {
                    "description": "The Channel group this channel belongs to.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getId()",
                    "type": "string"
                },
                "groupName": {
                    "description": "Name of the channel group.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getName()",
                    "type": "string"
                },
                "importance": {
                    "description": "Channel importance.",
                    "enum": [
                        "IMPORTANCE_UNSPECIFIED",
                        "IMPORTANCE_NONE",
                        "IMPORTANCE_DEFAULT",
                        "IMPORTANCE_HIGH",
                        "IMPORTANCE_LOW",
                        "IMPORTANCE_MAX",
                        "IMPORTANCE_MIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__EventCallbacks": {
            "description": "Callbacks for notification events.",
            "id": "GunsGms__EventCallbacks",
            "properties": {
                "onNotificationReceived": {
                    "$ref": "GunsGms__IntentPayload",
                    "description": "Intent target to be triggered when a notification is received."
                }
            },
            "type": "object"
        },
        "GunsGms__Icon": {
            "id": "GunsGms__Icon",
            "properties": {
                "url": {
                    "description": "Image URL to use. This should be a publicly accessible URL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__Identifier": {
            "id": "GunsGms__Identifier",
            "properties": {
                "appId": {
                    "description": "The ID of the GUNS app that generated the notification.",
                    "type": "string"
                },
                "clientKey": {
                    "description": "Additional notification identifying data passed down from server. This\nshould not be processed on the device side, rather it should be just passed\nback for sub-sequent RPCs.",
                    "type": "string"
                },
                "ctrToken": {
                    "description": "Identifying token to include when marking the notification as\nread/dismissed to be used to calculate CTR.",
                    "type": "string"
                },
                "key": {
                    "description": "The key identifies the underlying GUNS notification.",
                    "type": "string"
                },
                "version": {
                    "description": "The version of the GUNS notification.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__IntentPayload": {
            "id": "GunsGms__IntentPayload",
            "properties": {
                "action": {
                    "description": "The action for the Intent - required.",
                    "type": "string"
                },
                "className": {
                    "description": "Fully qualified chimera proxy class name from - required.\nNote that the class_name should not be stripped out/renamed by progaurd\nand must be within the GMS package.\nSee more about proxy here -\nhttp://g3doc/java/com/google/android/gmscore/g3doc/development/chimera/chimera-proxies.md",
                    "type": "string"
                },
                "flags": {
                    "description": "Optional - Flags controlling how intent is handled. The value must be\nbitwise OR of intent flag constants defined by Android.\nhttp://developer.android.com/reference/android/content/Intent.html#setFlags(int)",
                    "format": "int32",
                    "type": "integer"
                },
                "intentType": {
                    "description": "The type of Pending intent to create with this intent - required.",
                    "enum": [
                        "INTENT_TYPE_UNKNOWN",
                        "ACTIVITY",
                        "SERVICE",
                        "BROADCAST"
                    ],
                    "enumDescriptions": [
                        "",
                        "Will create the intent for Activity.",
                        "Will create the intent for Service.",
                        "Will create the intent for Broadcast receiver."
                    ],
                    "type": "string"
                },
                "kvPair": {
                    "description": "The key-value pair to pass as Intent extras.",
                    "items": {
                        "$ref": "GunsGms__KeyValuePair"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GunsGms__IntentTarget": {
            "id": "GunsGms__IntentTarget",
            "properties": {
                "contentIntent": {
                    "$ref": "GunsGms__IntentPayload"
                },
                "deleteIntent": {
                    "$ref": "GunsGms__IntentPayload"
                },
                "fullScreenIntent": {
                    "$ref": "GunsGms__IntentPayload"
                },
                "intentPayload": {
                    "$ref": "GunsGms__IntentPayload",
                    "description": "Payload data to create the content intent for the notification."
                }
            },
            "type": "object"
        },
        "GunsGms__KeyValuePair": {
            "id": "GunsGms__KeyValuePair",
            "properties": {
                "key": {
                    "description": "The key - required",
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__Payload": {
            "description": "The payload that will accompany GCM messages delivered to GMS core.",
            "id": "GunsGms__Payload",
            "properties": {
                "appPayload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The app payload set in the GUNS renderer.",
                    "type": "object"
                },
                "creationTimestampUsec": {
                    "description": "The creation time of the notification in microseconds since the UNIX epoch.",
                    "format": "uint64",
                    "type": "string"
                },
                "defaultTarget": {
                    "$ref": "GunsGms__Target",
                    "description": "Describes the default target to take the user to when they tap on the\nsystem notification."
                },
                "eventCallbacks": {
                    "$ref": "GunsGms__EventCallbacks",
                    "description": "Callbacks for notification events.\nNOTE: For notifications with expiration_timestamp_usec: If the\nnotification is already expired when arrives to the device, non of\nevent_callbacks will be fired."
                },
                "expirationTimestampUsec": {
                    "description": "Expiration time of the notification in microseconds since the UNIX epoch.\nIf set, the notification will be removed from system tray after this time.\nNOTE: Currently only supported for gaia targeted notifications.\nNOTE: Notifications with expiration_timestamp_usec, will not resurface\nafter device boot.",
                    "format": "uint64",
                    "type": "string"
                },
                "identifier": {
                    "$ref": "GunsGms__Identifier",
                    "description": "Identifies the GUNS notification."
                },
                "isDismissed": {
                    "description": "True if this GCM message is intended to dismiss the notification. If true,\nthe GMS app should remove the notification from the system tray.",
                    "type": "boolean"
                },
                "recipient": {
                    "$ref": "GunsGms__Recipient",
                    "description": "Identifies the intended recipient of the notification."
                },
                "renderContext": {
                    "$ref": "GunsGms__RenderContext",
                    "description": "The context used when rendering the payload."
                },
                "systemNotification": {
                    "$ref": "GunsGms__SystemNotification",
                    "description": "Describes the system tray notification."
                }
            },
            "type": "object"
        },
        "GunsGms__PublicNotificationInfo": {
            "id": "GunsGms__PublicNotificationInfo",
            "properties": {
                "contentText": {
                    "description": "Content text of the public notification - If not set, a generic text\nwould be displayed (e.g: 'You have a notification').",
                    "type": "string"
                },
                "contentTitle": {
                    "description": "Content title of the public notification - If not set, the application name\nwill be displayed.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__Recipient": {
            "id": "GunsGms__Recipient",
            "properties": {
                "obfuscatedGaiaId": {
                    "description": "The obfuscated Gaia ID of the notification recipient.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__RenderContext": {
            "id": "GunsGms__RenderContext",
            "properties": {
                "channel": {
                    "description": "List of NotificationChannel present on the device.\nNote: Name and description texts will not be populated.\nNote: Slated for GmsCore V20. Earlier versions will not populate this\nfield.",
                    "items": {
                        "$ref": "GunsGms__Channel"
                    },
                    "type": "array"
                },
                "devicePixelRatio": {
                    "description": "Optional. The device pixel ratio of the device.",
                    "format": "float",
                    "type": "number"
                },
                "deviceResolution": {
                    "description": "Deprecated - Use {@code device_pixel_ratio} instead.",
                    "enum": [
                        "DEVICE_RESOLUTION_UNKNOWN",
                        "MDPI",
                        "HDPI",
                        "XHDPI",
                        "TVDPI",
                        "XXHDPI"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "languageCode": {
                    "description": "The locale to render the notifications in.  Depending on whether\na couple of factors, this may or may not be the user's locale from ULS.\nThis uses the canonical LanguageTag string defined in the III API:\nhttps://sites.google.com/a/google.com/intl-eng/apis/iii/details#TOC-Using-Language-Tags\n\nPlease refer to the site to convert this string into the appropriate\nlocale/language code in your favorite programming language.",
                    "type": "string"
                },
                "sdkVersion": {
                    "description": "Android sdk version. This comes from android.os.Build.VERSION.SDK_INT.",
                    "format": "int32",
                    "type": "integer"
                },
                "timeZone": {
                    "description": "Optional. The English variant of the Google canonical timezone identifier.\nSee http://cs/java/com/google/i18n/identifiers/TimeZoneId.java for a\nlisting of timezones to i18n team maintained int code representing the\ntimezones.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__SecondaryAction": {
            "description": "A notification button will be created using this data.",
            "id": "GunsGms__SecondaryAction",
            "properties": {
                "actionId": {
                    "description": "Identifier to send back to server when button is pressed.",
                    "type": "string"
                },
                "newReadState": {
                    "description": "Tapping on the button will update the notification with this ReadState.",
                    "enum": [
                        "UNKNOWN_READ_STATE",
                        "UNREAD",
                        "READ",
                        "DELETED",
                        "SEEN",
                        "DISMISSED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "readState": {
                    "description": "Tapping this button will send this ReadState.\nNote - This is soon to be deprecated (b/120262533).",
                    "enum": [
                        "READ_STATE_UNKNOWN",
                        "UNREAD",
                        "SEEN",
                        "READ",
                        "DISMISSED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "removeFromTray": {
                    "description": "Should tapping this button remove the notification from the tray?",
                    "type": "boolean"
                },
                "target": {
                    "$ref": "GunsGms__Target",
                    "description": "Target to open when button is tapped."
                },
                "text": {
                    "description": "[mandatory] Text to display on button.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__SystemNotification": {
            "id": "GunsGms__SystemNotification",
            "properties": {
                "channel": {
                    "$ref": "GunsGms__Channel",
                    "description": "Note: Slated for GmsCore V20. Earlier versions will ignore this field.\n\nThe NotificationChannel this notification should be posted to.\n\nNotes:\nNotifications module in will create the NotificationChannel first if\n\"channel_name\" field is provided. If there is already a channel present\nwith the same ID, then the name would be updated.\n\nSame goes NotificationChannelGroup - in case creation / update of\nNotificationChannelGroup is desired, \"group_name\" must be set.\nA new NotificationChannelGroup will only be created if a new\nNotificationChannel gets created.\n\nIf \"importance\" field is not set for the channel, then newly created\nNotificationChannel will have importance set to IMPORTANCE_DEFAULT."
                },
                "collapsedText": {
                    "description": "The text content of the notification.",
                    "type": "string"
                },
                "collapsedTitle": {
                    "description": "The title for the notification.",
                    "type": "string"
                },
                "expandedSummary": {
                    "description": "The expanded summary text for the notification.",
                    "type": "string"
                },
                "expandedText": {
                    "description": "The expanded text for the notification. If not present, notification would\nnot be rendered as expandable.",
                    "type": "string"
                },
                "expandedTitle": {
                    "description": "The expanded title for the notification. If not present 'title' would be\nused as a fallback.",
                    "type": "string"
                },
                "isLocalOnly": {
                    "description": "Whether to set the notification as local only, i.e.: don't show the\nnotification on watch or auto.\nhttps://developer.android.com/reference/android/app/Notification.Builder.html#setLocalOnly(boolean)",
                    "type": "boolean"
                },
                "isNonDismissible": {
                    "description": "Whether to treat this notification as non-dismissible one.",
                    "type": "boolean"
                },
                "isPublic": {
                    "description": "If set to true, the notification would have its visibility set to public.\nSee:\nhttp://developer.android.com/reference/android/app/Notification.Builder.html#setVisibility(int)",
                    "type": "boolean"
                },
                "isSoundEnabled": {
                    "description": "Whether this notification type should play ringtone. If this field\nis set to true, Notification.DEFAULT_SOUND flag will be set.",
                    "type": "boolean"
                },
                "isVibrationEnabled": {
                    "description": "Whether this notification type should vibrate the device. If this field\nis set to true, Notification.DEFAULT_VIBRATE flag will be set.",
                    "type": "boolean"
                },
                "largeIcon": {
                    "$ref": "GunsGms__Icon",
                    "description": "The icon to display in the notification."
                },
                "loadFailureMessage": {
                    "description": "The message to show in case the notification fails to load the\ndefault_target.",
                    "type": "string"
                },
                "priority": {
                    "description": "The priority of the notification. This value should match those specified\nby the Android notification API.",
                    "format": "int32",
                    "type": "integer"
                },
                "publicNotificationInfo": {
                    "$ref": "GunsGms__PublicNotificationInfo",
                    "description": "Additional data to construct the public notification when user has decided\nto hide sensitive notification in lock screen."
                },
                "secondaryAction": {
                    "description": "Optional action buttons",
                    "items": {
                        "$ref": "GunsGms__SecondaryAction"
                    },
                    "type": "array"
                },
                "smallIconType": {
                    "description": "The native icon to use for this notification. If requested icon resource\nis not present in the app - default icon would be used.",
                    "type": "string"
                },
                "taskDescription": {
                    "description": "The title of the activity started by this notification.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsGms__Target": {
            "description": "Note that only one of {@code UrlTarget} or {@code IntentTarget} should be\npopulated. If both are present, {@code UrlTarget} will be ignored.",
            "id": "GunsGms__Target",
            "properties": {
                "intentTarget": {
                    "$ref": "GunsGms__IntentTarget",
                    "description": "An Intent target."
                },
                "urlTarget": {
                    "$ref": "GunsGms__UrlTarget",
                    "description": "A destination URL."
                }
            },
            "type": "object"
        },
        "GunsGms__UrlTarget": {
            "id": "GunsGms__UrlTarget",
            "properties": {
                "shouldAutoLogin": {
                    "description": "Whether the GMS core handler should auto-login the user to the given\naccount before opening the web-view.",
                    "type": "boolean"
                },
                "url": {
                    "description": "The URL itself.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GunsRender__AppPayload": {
            "id": "GunsRender__AppPayload",
            "properties": {},
            "type": "object"
        },
        "GunsSettings__AppRegistrationPayload": {
            "description": "App-specific data to be stored with a registration.",
            "id": "GunsSettings__AppRegistrationPayload",
            "properties": {},
            "type": "object"
        },
        "IdAccountnotifier__AccountNotifierRenderPayload": {
            "description": "Account Notifier payload to pass to render service.",
            "id": "IdAccountnotifier__AccountNotifierRenderPayload",
            "properties": {
                "channelType": {
                    "description": "The channel type targeted.",
                    "enum": [
                        "UNKNOWN",
                        "APPLE_MOBILE",
                        "EMAIL",
                        "MOBILE",
                        "PROMO_DISABLE",
                        "PROMO_ENABLE",
                        "SIGNED_OUT_MOBILE",
                        "SMS",
                        "RISC"
                    ],
                    "enumDescriptions": [
                        "Internal use only. Used as a \"null value\" for ChannelType in monitoring.",
                        "Notify the user via Apple iOS mobile device.",
                        "Notify the user via email addresses configured in:\nproduction/config/cdd/gaia-account-notifier/...",
                        "Sends a notification to all of the user's mobile devices.",
                        "Stops showing a promo to the user.",
                        "Starts showing a promo to the user.",
                        "Notify the user via a signed-out notification (using Chime) and fallback to\nSMS if Chime doesn't send any notifications.  Don't use this together with\nSMSs or it may send double SMSs.",
                        "Sends an SMS to a phone number configured in UNS.  Don't use this together\nwith SIGNED_OUT_MOBILE or it may send double SMSs.  Use SIGNED_OUT_MOBILE\ninstead if you can because it is a better experience and less expensive.",
                        "Notify relevant OAuth 2 clients (third parties) about user events."
                    ],
                    "type": "string"
                },
                "event": {
                    "$ref": "GaiaData__AccountNotificationEvent"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_And": {
            "description": "True iff all conditions[i] is true.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_And",
            "properties": {
                "conditions": {
                    "items": {
                        "$ref": "IdBoqGrowthGmscore__FilteringCondition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_AppInfo": {
            "description": "True iff app with package_name conforms to the provided conditions.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_AppInfo",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "installed": {
                    "type": "boolean"
                },
                "packageName": {
                    "type": "string"
                },
                "versionCodeRange": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Int64Range"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_Count": {
            "description": "True iff the number of true condition is between provided range.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_Count",
            "properties": {
                "conditions": {
                    "items": {
                        "$ref": "IdBoqGrowthGmscore__FilteringCondition"
                    },
                    "type": "array"
                },
                "countRange": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Int64Range"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_DuoRegistration": {
            "description": "True iff duo registration status on device equals to 'registered'.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_DuoRegistration",
            "properties": {
                "registered": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_Int64Range": {
            "description": "Represents a closed range of int64 (e.g. min=2,max=4 is [2,4]).\nNotice: defaults are nice for non-negative ranges but this can be used\nfor negatives as well.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_Int64Range",
            "properties": {
                "max": {
                    "description": "LONG_MAX;",
                    "format": "int64",
                    "type": "string"
                },
                "min": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_Not": {
            "description": "True iff 'condition' is false.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_Not",
            "properties": {
                "condition": {
                    "$ref": "IdBoqGrowthGmscore__FilteringCondition"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_Or": {
            "description": "True iff any of conditions[i] is true.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_Or",
            "properties": {
                "conditions": {
                    "items": {
                        "$ref": "IdBoqGrowthGmscore__FilteringCondition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_Ram": {
            "description": "True iff device ram is between provided range.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_Ram",
            "properties": {
                "mbRange": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Int64Range"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_SdkVersion": {
            "description": "True iff device sdk version is between provided range.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_SdkVersion",
            "properties": {
                "versionRange": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Int64Range"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore_FilteringCondition_SystemFeature": {
            "description": "True iff system_feature_name is available.",
            "id": "IdBoqGrowthGmscore_FilteringCondition_SystemFeature",
            "properties": {
                "systemFeatureName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore__FilteringCondition": {
            "description": "NextId: 12",
            "id": "IdBoqGrowthGmscore__FilteringCondition",
            "properties": {
                "and": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_And"
                },
                "appInfo": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_AppInfo"
                },
                "conditionName": {
                    "description": "Name for using when logging results.",
                    "type": "string"
                },
                "count": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Count"
                },
                "defaultValue": {
                    "description": "Default value to use if code can't handle a specific condition.",
                    "type": "boolean"
                },
                "duoRegistration": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_DuoRegistration"
                },
                "not": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Not"
                },
                "or": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Or"
                },
                "ram": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_Ram"
                },
                "sdkVersion": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_SdkVersion"
                },
                "systemFeature": {
                    "$ref": "IdBoqGrowthGmscore_FilteringCondition_SystemFeature"
                }
            },
            "type": "object"
        },
        "IdBoqGrowthGmscore__GmsCoreNotificationPayload": {
            "description": "Payload sent with GUNS notifications to the Growth module.",
            "id": "IdBoqGrowthGmscore__GmsCoreNotificationPayload",
            "properties": {
                "counterfactual": {
                    "description": "Indicates that the notification should not be shown to the user.\nIf true, notification will be dropped with reason COUNTERFACTUAL.",
                    "type": "boolean"
                },
                "dropIfShownAnyType": {
                    "description": "Drop notification if a notification with a type in the list was previously\nshown.\nLogged with reason ALREADY_SHOWN.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "filteringCondition": {
                    "$ref": "IdBoqGrowthGmscore__FilteringCondition",
                    "description": "Additional filtering grouped to a single condition."
                },
                "loggingContext": {
                    "$ref": "Growth__GmsCoreNotificationContext",
                    "description": "Logging context to attach to clearcut logs (RECEIVED, DROPPED, etc)."
                },
                "maxGmscoreVersion": {
                    "format": "int32",
                    "type": "integer"
                },
                "minGmscoreVersion": {
                    "description": "GMScore version range in which a notification can be shown.\nIf current version is not in range, notification will be dropped with\nreason GMSCORE_VERSION.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "IosguardDevice__DeviceChallengeRequest": {
            "id": "IosguardDevice__DeviceChallengeRequest",
            "properties": {
                "apnsDeviceToken": {
                    "description": "The device token received when registering for APNs.\ngo/iosguard-apns",
                    "type": "string"
                },
                "apnsDeviceTokenErrorCode": {
                    "description": "The error code received when failing to register for APNs.\nhttps://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622962-application?language=objc",
                    "format": "int64",
                    "type": "string"
                },
                "deviceAppBuild": {
                    "description": "Hosting app's build label.",
                    "type": "string"
                },
                "deviceAppBundleId": {
                    "description": "Hosting app's bundle id.",
                    "type": "string"
                },
                "deviceCpuSubtype": {
                    "description": "What CPU subtype the challenge is for, such as armv7s, armv7k etc.\nThe value is described in <mach/machine.h>\nDEPRECATED",
                    "format": "int32",
                    "type": "integer"
                },
                "deviceCpuType": {
                    "description": "What CPU type the challenge is for, such as x86, arm64 etc.\nThe value is described in <mach/machine.h>",
                    "format": "int32",
                    "type": "integer"
                },
                "deviceIosBuild": {
                    "description": "The iOS build string, such as \"15E5211a\".",
                    "type": "string"
                },
                "deviceIosVersion": {
                    "description": "What iOS version the challenge is for, such as \"9.3.1\"",
                    "type": "string"
                },
                "deviceLibraryVersion": {
                    "description": "Major version of the device library.",
                    "format": "int32",
                    "type": "integer"
                },
                "deviceMachine": {
                    "description": "What device model the challenge is for, such as \"iPad4,1\"",
                    "type": "string"
                },
                "generationTimeS": {
                    "description": "Time in seconds it took to generate this request.",
                    "format": "double",
                    "type": "number"
                },
                "initRunningTimeS": {
                    "description": "Time in seconds it took IGDManager to initialize. Only reported once\nper IGDManager instance.",
                    "format": "double",
                    "type": "number"
                },
                "instanceId": {
                    "description": "The random ID associated with the running instance of iOSGuard\n(IGDManager).",
                    "format": "uint64",
                    "type": "string"
                },
                "libraryPointerSize": {
                    "description": "The size of a pointer as seen by the device library (sizeof(void *)).",
                    "format": "int32",
                    "type": "integer"
                },
                "setupHash": {
                    "description": "If the device already has a \"setup\" portion, it can provide its hash and\nthe server will do its best to generate a challenge for the same setup.",
                    "type": "string"
                },
                "transformed": {
                    "$ref": "IosguardDevice__SerializedMessage",
                    "description": "This message, serialized with optional transformations."
                },
                "whitelistToken": {
                    "description": "The whitelist token. go/iosguard-whitelist",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IosguardDevice__IOSGuassoSceneDescriptor": {
            "description": "Describes a challenge scene to be sent to the iOSGuasso library to interpret\nand render using OpenGL ES, for GPU fingerprinting iOS devices.",
            "id": "IosguardDevice__IOSGuassoSceneDescriptor",
            "properties": {
                "colorMultipliers": {
                    "description": "The multiplier for colors, needed to generate multiple possible scenes.\nShould be exactly 4 multiplies, or none.",
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                },
                "customScene": {
                    "$ref": "IosguardDevice__IOSGuassoVariableSceneDescriptor",
                    "description": "The variable iOSGuasso scene message to be passed when the scene ID\nis VARIABLE_TRIANGLES_WITH_CUSTOM_SHADERS."
                },
                "sceneId": {
                    "description": "The ID of the scene to be run as a challenge.",
                    "enum": [
                        "VARIABLE_TRIANGLES_WITH_SHADERS",
                        "BLENDING_3D_CUBE",
                        "BLENDING_TRIANGLES",
                        "COLOR_BLENDING",
                        "HARD_FRAGMENT_SHADER"
                    ],
                    "enumDescriptions": [
                        "3D scene that can be customized by providing the positions in which to\ndraw the triangles (and how many), as well as providing the complete\nshader information.",
                        "3D scene with colored cube and no depth test, to ensure blending.",
                        "2D scene with two overlapping triangles and active blending.",
                        "2D scene with a very large triangle and small viewport; useful for\nchecking the precision of the GPU with regards to the interpolated color\nvalues.",
                        "2D scene which makes heavy use of the fragment shader, in calculating\ncolors based on the position and fixed trigonometric functions."
                    ],
                    "type": "string"
                },
                "vertexMultipliers": {
                    "description": "The multiplier for vertex positions, needed to generate multiple possible\nscenes. Should be exactly 3 multipliers, or none.",
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                },
                "viewportSize": {
                    "description": "The size of the visible viewport which will be used to render the scene\nand ultimately hashed.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "IosguardDevice__IOSGuassoVariableSceneDescriptor": {
            "description": "Contains parameters required for the VARIABLE_TRIANGLES_WITH_SHADERS scene.",
            "id": "IosguardDevice__IOSGuassoVariableSceneDescriptor",
            "properties": {
                "colors": {
                    "description": "The list of colors to be assigned to the above vertices. Should contain a\nnumber of elements that is a multiple of 4 (R, G, B and A colors).",
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                },
                "fragmentShader": {
                    "description": "The fragment shader.",
                    "type": "string"
                },
                "shaderVariables": {
                    "description": "The list of shader variables that the scene has access to.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "useBlending": {
                    "description": "Whether to have blending enabled in the scene or not.",
                    "type": "boolean"
                },
                "useDepthDetection": {
                    "description": "Whether to have depth test enabled in the scene or not (for proper depth\ndrawing detection).",
                    "type": "boolean"
                },
                "vertexShader": {
                    "description": "The vertex shader.",
                    "type": "string"
                },
                "vertices": {
                    "description": "The list of vertices to be drawn in the scene. Should contain a number of\nelements that is a multiple of 4 (X, Y, Z and W positions).",
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IosguardDevice__SerializedMessage": {
            "description": "Whenever a message of a type X contains this message (usually as\n\"optional SerializedMessage transformed\"), the recipient MUST clear\nthe containing message and use, instead, the result of transforming\nand deserializing of the data contained in this message.\n\nIn backwards-compatibility situations we may transfer messages X without this\nfield, in which case the other fields of the message X must be used directly.\nNo transformations are possible in that case, in particular no cryptographic\nsignatures can be made or verified.",
            "id": "IosguardDevice__SerializedMessage",
            "properties": {
                "data": {
                    "description": "The encoded data, assumed to be a serialized parent proto with zero or more\ntransformations applied, as specified by 'transformations'.",
                    "format": "byte",
                    "type": "string"
                },
                "signature": {
                    "description": "Cryptographic signature, one per SIGN transformation.",
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "transformations": {
                    "description": "The ordered list of transformations applied to the serialized data. This is\nthe order transformations were applied when encoding the data. To decode,\nthe reverse transformations need to be applied in reverse order.",
                    "enumDescriptions": [
                        "",
                        "Zlib compression",
                        "Prepends a byte to the data. Used for testing. The byte value is\nunspecified and is not used.",
                        "Signs the data with the root key and appends the signature into\nthe signature field. The data is unchanged.",
                        "Signs the data with the certificate key and appends the signature into\nthe signature field. The data is unchanged."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            "ZLIB",
                            "PREPEND_BYTE",
                            "ROOT_SIGN",
                            "CERT_SIGN"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Iosguard__LibraryCapabilities": {
            "description": "The list of all capabilities that are available to device libraries.\nDevice libraries generally implement a subset of these capabilities depending\non version.",
            "id": "Iosguard__LibraryCapabilities",
            "properties": {
                "bufferMemoryOperations": {
                    "description": "Whether fixed size buffer memory operations (and the corresponding type\nencoding) are available in the device library.",
                    "type": "boolean"
                },
                "cpuType": {
                    "description": "The CPU type the library runs on. If unset, the type is considered to be\nunknown.",
                    "enum": [
                        "UNKNOWN",
                        "ARM",
                        "X86"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "createBlock": {
                    "description": "Whether the device library supports the CREATE_BLOCK opcode that allows the\ncreation of blocks from bytecode Callbacks.",
                    "type": "boolean"
                },
                "invokeByHash": {
                    "description": "Whether the selectors to INVOKE operations can be called by hash instead of\nname. cl/139210126",
                    "type": "boolean"
                },
                "iosguassoRequiresApplicationStateCheck": {
                    "description": "Whether the application state needs to be checked in the signal before\ncalling iOSGuasso.",
                    "type": "boolean"
                },
                "is64bit": {
                    "description": "Whether the library runs on a 64bit device.",
                    "type": "boolean"
                },
                "nativeCallArm64": {
                    "description": "Whether the device library is capable of correctly calling ARM64 native\nfunctions. cl/139323339",
                    "type": "boolean"
                },
                "protoTransformations": {
                    "description": "What proto transformations the device library supports. cl/139470420",
                    "enumDescriptions": [
                        "",
                        "Zlib compression",
                        "Prepends a byte to the data. Used for testing. The byte value is\nunspecified and is not used.",
                        "Signs the data with the root key and appends the signature into\nthe signature field. The data is unchanged.",
                        "Signs the data with the certificate key and appends the signature into\nthe signature field. The data is unchanged."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            "ZLIB",
                            "PREPEND_BYTE",
                            "ROOT_SIGN",
                            "CERT_SIGN"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "safeLookupClass": {
                    "description": "Whether objc_lookupClass returns nil instead of crashing for Class objects\nnot derived from NSObject.",
                    "type": "boolean"
                },
                "setupWithCertificate": {
                    "description": "Whether the challenge setup should include a challenge signing\ncertificate.",
                    "type": "boolean"
                },
                "silentApns": {
                    "description": "Whether the library has support for receiving silent APNs.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Iosguard__SilentApnData": {
            "description": "Data sent in a silent Apple push notification to the device.",
            "id": "Iosguard__SilentApnData",
            "properties": {
                "nonce": {
                    "description": "The nonce associated with the notification.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Logs__VeOffsetIdentifier": {
            "description": "Next id: 3",
            "id": "Logs__VeOffsetIdentifier",
            "properties": {
                "base": {
                    "description": "Corresponds to VisualElement.identifier_base. Should be a unique value\nwithin a single VE tree. If unset, then the offset of this identifier\nrefers to the global offset within the entire VE tree.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "offset": {
                    "description": "The offset of the VE from the element identified by base (or within the\nfull VE tree, if base is unset).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NbuPaisaFrontendNotification__ChimeRenderContextDevicePayload": {
            "description": "Paisa-specified device payload stored in Chime render context\nnotifications.backend.common.RenderContext.device_payload and\nnotifications.frontend.data.RenderContext.device_payload\nPaisa-specified per device data for rendering should be put here so Paisa\nrenderer can use them without querying again to Paisa backend.",
            "id": "NbuPaisaFrontendNotification__ChimeRenderContextDevicePayload",
            "properties": {
                "deviceId": {
                    "description": "Device ID of the target device.",
                    "format": "int64",
                    "type": "string"
                },
                "isMerchantEnabled": {
                    "description": "Whether merchant is enabled in the target device.\nThis is Android only for now.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_AndroidIntent_Extra": {
            "description": "Map entry for the Intent extra data.",
            "id": "NotificationsBackendCommonMessage_AndroidIntent_Extra",
            "properties": {
                "name": {
                    "description": "Required - Bundle key name.",
                    "type": "string"
                },
                "value": {
                    "description": "Optional - Bundle data value associated with the key name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_AndroidMessageHint_Channel": {
            "description": "Channels are supported from Android O (SDK version 26).\nFor more information please visit - go/notification-channels.",
            "id": "NotificationsBackendCommonMessage_AndroidMessageHint_Channel",
            "properties": {
                "channelId": {
                    "description": "Required. The ID of the channel.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_AndroidMessageHint_NotificationBehavior": {
            "id": "NotificationsBackendCommonMessage_AndroidMessageHint_NotificationBehavior",
            "properties": {
                "disableLights": {
                    "description": "Whether this notification type should disable LED lights. If this field\nis set to true, the Notification.DEFAULT_LIGHTS flag won\u2019t be set.",
                    "type": "boolean"
                },
                "disableRemoveOnClick": {
                    "description": "Whether the notification should be removed from the system tray after the\nuser clicks it. If the notification has group_id set, the property is\npropagated to the group.",
                    "type": "boolean"
                },
                "disableSound": {
                    "description": "Whether this notification type should play ringtone. If this field is set\nto true, the Notification.DEFAULT_SOUND flag won\u2019t be set.",
                    "type": "boolean"
                },
                "disableVibration": {
                    "description": "Whether this notification type should vibrate the device. If this field\nis set to true, the Notification.DEFAULT_VIBRATE flag won\u2019t be set.",
                    "type": "boolean"
                },
                "isLocalOnly": {
                    "description": "Whether to set the notification as local only, i.e.: don't show the\nnotification on any connected devices, for example on a watch or on\nandroid auto.",
                    "type": "boolean"
                },
                "isNonDismissible": {
                    "description": "Whether to set this notification as non-dismissible. Clients should check\nthis field and set the Notification.FLAG_ONGOING_EVENT flag. If the\nnotification has group_id set, the property is propagated to the group.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_AndroidMessageHint_PublicNotificationInfo": {
            "description": "Additional data to construct the public notification when user has decided\nto hide sensitive notification in lock screen. Note that when multiple\nNotificationThreads are grouped together, this data will be discarded and\nonly a generic notification will be shown.",
            "id": "NotificationsBackendCommonMessage_AndroidMessageHint_PublicNotificationInfo",
            "properties": {
                "contentText": {
                    "description": "If is_public is set to false, this content text will be shown in the lock\nscreen. If not set, a generic text would be displayed (e.g: \u2018You have a\nnotification\u2019).",
                    "type": "string"
                },
                "contentTitle": {
                    "description": "If is_public is set to false, this title will be shown in the lock\nscreen. If not set, the name of the application receiving the\nnotification will be displayed. The application name will be obtained\nclient-side.",
                    "type": "string"
                },
                "isPublic": {
                    "description": "If set to true, the notification would have its visibility set to public.\nSee go/android-notification-visibility.\nWhen multiple notifications are grouped together in the android system\ntray, the group notification will have public visibility only if all the\nnotifications has this field set to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_EmailMessageAttachment_BigstoreFileSpec": {
            "id": "NotificationsBackendCommonMessage_EmailMessageAttachment_BigstoreFileSpec",
            "properties": {
                "filename": {
                    "description": "The filename must be in the format \"/bigstore/[bucket]/[object]\".\nIt must be read-accessible to the notification service jobs.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_EmailMessage_Attachment": {
            "id": "NotificationsBackendCommonMessage_EmailMessage_Attachment",
            "properties": {
                "additionalHeader": {
                    "description": "Optional additional headers for this attachment.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_EmailMessage_Header"
                    },
                    "type": "array"
                },
                "bigstoreFile": {
                    "$ref": "NotificationsBackendCommonMessage_EmailMessageAttachment_BigstoreFileSpec"
                },
                "contentType": {
                    "description": "The content type of the attachment (e.g., text/plain). If\nfilename, bigstore_file and/or part_name is set but content_type is not,\nthe content type will be derived from the part name and /etc/mime.types.",
                    "type": "string"
                },
                "filename": {
                    "description": "This file must be read-accessible to the notification service\njobs. A failure to open this file will cause delivery failure.\nOnly files readable by the Colossus File API are supported.",
                    "type": "string"
                },
                "inlineId": {
                    "description": "When this is set, treat the attachment as an inline attachment\nwith the given Content-ID. It can be referred to in the\nhtml_body using the cid: url scheme. Example: inline_id =\n'image1.png'; the url is \"cid:image1.png\". Note: the Content-ID\nis supposed to be globally unique. In practice, it is probably\ngood enough to use e.g. a fingerprint of the content.",
                    "type": "string"
                },
                "partName": {
                    "description": "The name of the attachment or part. If filename or bigstore_file is set\nbut part_name is not, the name will be derived from filename.",
                    "type": "string"
                },
                "rawData": {
                    "description": "If set, at least one of part_name and content_type must also be set.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_EmailMessage_BodyPart": {
            "id": "NotificationsBackendCommonMessage_EmailMessage_BodyPart",
            "properties": {
                "content": {
                    "description": "Required.",
                    "type": "string"
                },
                "contentType": {
                    "description": "Required. This is a MIME content type (e.g. \"text/plain\", \"text/html\").\nFor text/plain and text/html, content should be a utf8-encoded string.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_EmailMessage_Header": {
            "id": "NotificationsBackendCommonMessage_EmailMessage_Header",
            "properties": {
                "name": {
                    "description": "Required. ASCII7 string.",
                    "type": "string"
                },
                "value": {
                    "description": "Required. Utf8-encoded string.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_GcmMessage_PayloadData": {
            "id": "NotificationsBackendCommonMessage_GcmMessage_PayloadData",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "description": "ST_PERSONAL_DATA",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_GenericMessage_EndpointHints": {
            "id": "NotificationsBackendCommonMessage_GenericMessage_EndpointHints",
            "properties": {
                "androidMessageHint": {
                    "$ref": "NotificationsBackendCommonMessage__AndroidMessageHint",
                    "description": "Optional. Additional information specific to rendering for Android."
                },
                "gmscoreMessageHint": {
                    "$ref": "NotificationsBackendCommonMessage__GmsCoreMessageHint",
                    "description": "Optional. Additional information sepcific to rendering for Notifications\nmodule in GmsCore."
                },
                "iosMessageHint": {
                    "$ref": "NotificationsBackendCommonMessage__IosMessageHint",
                    "description": "Optional. Additional information specific to rendering for iOS."
                },
                "legacyGunsHint": {
                    "$ref": "NotificationsBackendCommonMessage__LegacyGunsHint",
                    "description": "Optional. Additional information sepcific to rendering for GUNS devices\nas part of the GUNS to Chime migration. Features based on fields in this\nmessage are flag-protected. Please contact chime-users@ before filling\nthis message."
                },
                "webPushMessageHint": {
                    "$ref": "NotificationsBackendCommonMessage__WebPushMessageHint",
                    "description": "Optional. Additional information speicifc to rendering for Web Push."
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_GenericMessage_ExpandedView": {
            "description": "Any fields not supplied in the expanded view will be inferred from the\nspecified prior.",
            "id": "NotificationsBackendCommonMessage_GenericMessage_ExpandedView",
            "properties": {
                "action": {
                    "description": "Optional. Actions are rendered as buttons in certain views.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage__Action"
                    },
                    "type": "array"
                },
                "media": {
                    "description": "Optional. Images to display.",
                    "items": {
                        "$ref": "NotificationsBackendCommon__Image"
                    },
                    "type": "array"
                },
                "text": {
                    "description": "Optional. Actual notification text to display.",
                    "type": "string"
                },
                "title": {
                    "description": "Optional. Notification heading text to display.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_GmsCoreMessageHint_Channel": {
            "description": "NotificationChannel (Only available from Android O)\nSupported from GmsCore v20.\nSee - https://developer.android.com/training/notify-user/channels",
            "id": "NotificationsBackendCommonMessage_GmsCoreMessageHint_Channel",
            "properties": {
                "channelDescription": {
                    "description": "Description of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getDescription()",
                    "type": "string"
                },
                "channelId": {
                    "description": "ID of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getId()",
                    "type": "string"
                },
                "channelName": {
                    "description": "Name of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getName()",
                    "type": "string"
                },
                "groupId": {
                    "description": "The Channel group this channel belongs to.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getId()",
                    "type": "string"
                },
                "groupName": {
                    "description": "Name of the channel group.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getName()",
                    "type": "string"
                },
                "importance": {
                    "description": "Channel importance.",
                    "enum": [
                        "IMPORTANCE_UNSPECIFIED",
                        "IMPORTANCE_NONE",
                        "IMPORTANCE_DEFAULT",
                        "IMPORTANCE_HIGH",
                        "IMPORTANCE_LOW",
                        "IMPORTANCE_MAX",
                        "IMPORTANCE_MIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_IosMessageHint_Attachment": {
            "id": "NotificationsBackendCommonMessage_IosMessageHint_Attachment",
            "properties": {
                "url": {
                    "description": "The URL pointing to the attachment.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_IosMessageHint_Ios10Override": {
            "description": "The overrides to apply when the target device is running iOS 10 or above.\nNOTE: The device OS version is retrieved from the render context.",
            "id": "NotificationsBackendCommonMessage_IosMessageHint_Ios10Override",
            "properties": {
                "body": {
                    "description": "Required. The body of the alert message.\nSetting the {loc_key, loc_args} pair overrides the alert body.\nSearch for \"loc-key\" in go/apns-payload for more details.",
                    "type": "string"
                },
                "groupId": {
                    "description": "Optional - An app-specific identifier for grouping related notifications.\nThis value corresponds to the threadIdentifier property in the\nUNNotificationContent object. See go/ios-push-thread-id.\nNote: APS payload will not contain this value, instead Chime will hash it\nwith the user obfuscated gaia ID (if present).\nFor more information please see: go/chime-ios-notification-grouping",
                    "type": "string"
                },
                "locArgs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "locKey": {
                    "type": "string"
                },
                "subtitle": {
                    "description": "A secondary string describing the purpose of the notification. A title is\nnot required when setting the substring.\nSetting {subtitle_loc_key, subtitle_loc_args} overrides subtitle.",
                    "type": "string"
                },
                "subtitleLocArgs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subtitleLocKey": {
                    "type": "string"
                },
                "title": {
                    "description": "A short string describing the purpose of the notification.\nSetting the {title_loc_key, title_loc_args} pair overrides title.",
                    "type": "string"
                },
                "titleLocArgs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "titleLocKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_IosMessageHint_KeyValue": {
            "description": "Optional app-specific payload that will be added to the push message.\nIMPORTANT: DO NOT use the key \"$\", as it's reserved for Chime iOS SDK and\nwill be overwritten by Chime",
            "id": "NotificationsBackendCommonMessage_IosMessageHint_KeyValue",
            "properties": {
                "key": {
                    "description": "ST_PERSONAL_DATA",
                    "type": "string"
                },
                "value": {
                    "description": "ST_PERSONAL_DATA",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_LegacyGunsHint_AndroidChannelHint": {
            "id": "NotificationsBackendCommonMessage_LegacyGunsHint_AndroidChannelHint",
            "properties": {
                "channelDescription": {
                    "description": "Optional - Description of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getDescription()",
                    "type": "string"
                },
                "channelName": {
                    "description": "Optional - Name of the NotificationChannel.\nhttps://developer.android.com/reference/android/app/NotificationChannel.html#getName()",
                    "type": "string"
                },
                "groupId": {
                    "description": "Optional - The Channel group this channel belongs to.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getId()",
                    "type": "string"
                },
                "groupName": {
                    "description": "Optional - Name of the channel group.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getName()",
                    "type": "string"
                },
                "importance": {
                    "description": "Optional - Channel importance.",
                    "enum": [
                        "IMPORTANCE_UNSPECIFIED",
                        "IMPORTANCE_NONE",
                        "IMPORTANCE_DEFAULT",
                        "IMPORTANCE_HIGH",
                        "IMPORTANCE_LOW",
                        "IMPORTANCE_MAX",
                        "IMPORTANCE_MIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage_SmsRelayInstructions_SessionEndpoint": {
            "id": "NotificationsBackendCommonMessage_SmsRelayInstructions_SessionEndpoint",
            "properties": {
                "senderOwnerId": {
                    "description": "Required. The application user that is requesting SMS relay. Max length\nis 192. This field is used by the Proxy Number service for identifying\nthe user who owns the mapping that is created for an outgoing message.\nApplications can use the sender_owner_id field to:\n  1) retrieve and cache all proxy numbers of a user;\n  2) delete all mappings of a user when a user unregisters from the app;\n\nFor peer-to-peer conversations, the value could be the same as the\napplication user ID, the user GAIA ID, or the user phone number. For\ngroup conversations, the value could be the conversation ID or some other\ngroup identifier.",
                    "type": "string"
                },
                "sessionId": {
                    "description": "Required. Matches the session_id field in SmsRelay's ApplicationEndpoint\nproto. An identifier for matching an outgoing message from the\napplication. Max length is 192.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__Action": {
            "description": "The Action message contains the fields required to render a button for the\nuser to click on in the expanded view of a notification thread.",
            "id": "NotificationsBackendCommonMessage__Action",
            "properties": {
                "actionId": {
                    "description": "Required. Identifier for this action.",
                    "type": "string"
                },
                "icon": {
                    "$ref": "NotificationsBackendCommon__Image",
                    "description": "Optional. Icon to be shown in the action button."
                },
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Optional. A client-specified opaque payload for this actions.",
                    "type": "object"
                },
                "text": {
                    "description": "Required. Text to be shown in the action button.",
                    "type": "string"
                },
                "threadStateUpdate": {
                    "$ref": "NotificationsBackendCommon__ThreadStateUpdate",
                    "description": "Optional. Updates to thread state to be applied when the action is clicked."
                },
                "url": {
                    "description": "Required for web-push notifications. URL to be opened when the user clicks\nthe action button.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__AndroidIntent": {
            "description": "Represents an Android Intent.\nhttp://developer.android.com/reference/android/content/Intent.html",
            "id": "NotificationsBackendCommonMessage__AndroidIntent",
            "properties": {
                "action": {
                    "description": "Required - The action for the Intent.",
                    "type": "string"
                },
                "className": {
                    "description": "Required - Fully qualified class name.\nNote that the class_name should not be stripped out/renamed by progaurd\nand must be within the same App receiving the notification.",
                    "type": "string"
                },
                "extra": {
                    "description": "This is a Bundle of any additional information represented as a map with\nunique key names in the constructed Intent as extras.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_AndroidIntent_Extra"
                    },
                    "type": "array"
                },
                "flags": {
                    "description": "Optional - Flags controlling how intent is handled. The value must be\nbitwise OR of intent flag constants defined by Android.\nhttp://developer.android.com/reference/android/content/Intent.html#setFlags(int)",
                    "format": "int32",
                    "type": "integer"
                },
                "intentType": {
                    "description": "Required - The type of Pending intent to create with this intent.",
                    "enum": [
                        "INTENT_TYPE_UNKNOWN",
                        "ACTIVITY",
                        "SERVICE",
                        "BROADCAST"
                    ],
                    "enumDescriptions": [
                        "",
                        "Will create the intent for Activity.",
                        "Will create the intent for Service.",
                        "Will create the intent for Broadcast receiver."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__AndroidMessageHint": {
            "description": "AndroidMessageHint can be included with the GenericMessage proto to achieve\ncustomizations of the generic message specifically for Android devices. Any\nfields in AndroidMessageHint that overlap with fields in GenericMessage will\nbe resolved in favor of the AndroidMessageHint.",
            "id": "NotificationsBackendCommonMessage__AndroidMessageHint",
            "properties": {
                "action": {
                    "description": "Optional. Setting this field will overwrite any actions specified in the\ntop-level GenericMessage when viewed on Android.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage__Action"
                    },
                    "type": "array"
                },
                "androidPayloadType": {
                    "description": "This field defines the payload format Chime will send this GenericMessage\nas. If left unset, set to unknown or set to CHIME, we'll send a Chime\nstyle payload. If explicitly set to GUNS we'll convert to a GUNS style\npayload.",
                    "enum": [
                        "UNKNOWN_ANDROID_PAYLOAD_TYPE",
                        "CHIME",
                        "GUNS_HT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "channel": {
                    "$ref": "NotificationsBackendCommonMessage_AndroidMessageHint_Channel",
                    "description": "Optional. The Channel to surface this notification in. If the specified\nChannel is not configured in the client application, a default Channel\nmight be used if configured in Chime Android SDK.\nNote: This field will be ignored in Android O-."
                },
                "collapseKey": {
                    "description": "If multiple messages with the same collapse key are sent to a phone that is\noffline, only one (chosen arbitrarily) will be sent to the device when it\nwakes up. This field is inserted directly into the resultant GcmMessage.",
                    "type": "string"
                },
                "delayWhileIdle": {
                    "description": "If true, an idle phone that is online will be treated as if it were\noffline; messages will not be delivered until the device is active and only\none message will be sent for each unique collapse key. This field is\ninserted directly into the resultant GcmMessage.",
                    "type": "boolean"
                },
                "destinationUrl": {
                    "description": "Optional. A URL that will be visited when clicking on this notification.\nThis URL will overwrite the GenericMessage destination URL when this\nnotification is delivered to Android.",
                    "type": "string"
                },
                "gcmMessagePriority": {
                    "description": "Corresponds to the GCM DataMessageProto.priority field. If unset, will\nsimply unset it in the GCM request, which will default to \"5\".\n\nhttp://cs/symbol:android_messaging.DataMessageProto.priority",
                    "format": "int32",
                    "type": "integer"
                },
                "groupId": {
                    "description": "If set, NotificationThreads with the same group_id will be grouped together\nin the same system tray row.",
                    "type": "string"
                },
                "iconColor": {
                    "description": "Optional. Accent color to apply to the displayed notification icon.\nSupported from android L (api level 21).\nFormat is: AARRGGBB (The alpha channel is ignored).\nSee -\nhttps://developer.android.com/reference/android/app/Notification.html#color",
                    "format": "int32",
                    "type": "integer"
                },
                "largeIconShape": {
                    "description": "Optional. Notification large icon shape.\nBefore Android L the icon shape is always SQUARE (this field is ignored).\nStarting from Android L, the default shape is CIRCLE.\nSee examples - https://screenshot.googleplex.com/nxP157yipJD",
                    "enum": [
                        "ICON_SHAPE_DEFAULT",
                        "CIRCLE",
                        "SQUARE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "notificationBehavior": {
                    "$ref": "NotificationsBackendCommonMessage_AndroidMessageHint_NotificationBehavior"
                },
                "priority": {
                    "description": "If set, receivers should set the notifications channel/android_system\npriority based on this value.\nSee\nhttps://material.io/design/platform-guidance/android-notifications.html#settings\nfor more details on Channel/System Tray priorities.\nNote that when multiple notifications are grouped together, the overall\npriority should be the max of all the notifications.",
                    "enum": [
                        "PRIORITY_DEFAULT",
                        "PRIORITY_HIGH",
                        "PRIORITY_LOW",
                        "PRIORITY_MAX",
                        "PRIORITY_MIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "publicNotificationInfo": {
                    "$ref": "NotificationsBackendCommonMessage_AndroidMessageHint_PublicNotificationInfo"
                },
                "showWhen": {
                    "description": "Whether notification timestamp should be displayed. If not set, the\ntimestamp will be shown.\nSee -\nhttps://developer.android.com/reference/android/app/Notification.html#EXTRA_SHOW_WHEN",
                    "type": "boolean"
                },
                "sortKey": {
                    "description": "Optional. Explicit order for notifications belonging to the same app.\nSee -\nhttps://developer.android.com/reference/android/app/Notification#getSortKey()",
                    "type": "string"
                },
                "subText": {
                    "description": "Optional. Notification sub text. If this field is not set, it will default\nto the recipient account name.\nNote for grouped notifications: If all notifications in a group share the\nsame sub_text, it will be propagated to the group summary and hidden from\nindividual notifications. If not, each notification will display their own\nsub_text and the group summary will display the recipient account name.",
                    "type": "string"
                },
                "systemCategory": {
                    "description": "Android System Notification Category. See http://go/notifications-in-L.",
                    "type": "string"
                },
                "tickerText": {
                    "description": "Optional. Ticker text for the notification bar. Summarizes this\nnotification for accessibility services.",
                    "type": "string"
                },
                "timeToLiveSecs": {
                    "description": "The number of seconds this should be stored on the GCM server if the target\ndevice is offline. Must be in the range [0, 2 419 200].\nDefault is max (4 weeks).\nThis field is inserted directly into the resultant GcmMessage.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__ApplePushMessage": {
            "description": "NOTE: It's strongly recommended that GenericMessage and IosMessageHint be\nused instead, to avoid manually building the JSON message, which is very\nerror-prone. In addition, GenericMessage has native support for Chime iOS SDK\nand will correctly set the required fields for multiple advanced iOS features\nto work properly.",
            "id": "NotificationsBackendCommonMessage__ApplePushMessage",
            "properties": {
                "collapseId": {
                    "description": "Optional. Multiple notifications with the same collapse\nidentifier are displayed to the user as a single notification.\nThe size of this key must not exceed 64 bytes.",
                    "type": "string"
                },
                "expiryUnixTimeSecs": {
                    "description": "A UNIX time in seconds that identifies when the notification is no longer\nvalid and can be discarded. If the expiry value is positive, APNS tries\nto deliver it at least once. If it is 0 or less, APNS will not store the\nnotification at all. If this field is omitted, then a default time of\n30 days from now will be used.",
                    "format": "int32",
                    "type": "integer"
                },
                "jsonPayload": {
                    "description": "Required. UTF-8 encoded. For documentation on how this payload should be\nstructured, see the Apple documentation at go/apns-protocol-documentation.",
                    "type": "string"
                },
                "priority": {
                    "description": "Indicates the priority of the push message.",
                    "enum": [
                        "PRIORITY_UNKNOWN",
                        "LOW",
                        "HIGH"
                    ],
                    "enumDescriptions": [
                        "If the priority is not specified, it will default to HIGH.",
                        "Apple will save the notification until a time that conserves power on the\ndevice receiving it.",
                        "Apple will send the notification immediately. Then it must trigger an\nalert, sound or badge. The payload cannot only contain content-available."
                    ],
                    "type": "string"
                },
                "pushType": {
                    "description": "Optional but strongly recommended (iOS 13+). The push type of the\nnotification.\nThe value of this header must accurately reflect the contents of your\nnotification's json payload. If there is a mismatch, or if the header is\nmissing on required systems, APNs may delay the delivery of the\nnotification or drop it altogether.",
                    "enum": [
                        "PUSH_TYPE_UNKNOWN",
                        "ALERT",
                        "BACKGROUND"
                    ],
                    "enumDescriptions": [
                        "",
                        "Specify alert when the delivery of the notification displays an alert,\nplays a sound, or badges your app's icon.",
                        "Specify background for silent notifications that do not interact with the\nuser.\nBackground notifications may not contain any keys that would lead to user\ninteraction."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__CustomEndpointMessage": {
            "id": "NotificationsBackendCommonMessage__CustomEndpointMessage",
            "properties": {
                "endpointTypeId": {
                    "description": "Required. The ID of the custom endpoint this notification is intended for.",
                    "type": "string"
                },
                "message": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Wrapper for the rendered message that will be sent to the\nclient-implemented delivery handler RPC for a custom endpoint.",
                    "type": "object"
                },
                "syncInstruction": {
                    "$ref": "NotificationsBackendCommonMessage__CustomEndpointSyncInstruction",
                    "description": "Sync instructions if the notifications is being sent in the sync flow."
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__CustomEndpointSyncInstruction": {
            "description": "The instructions for updating and synchronizing the custom endpoint with the\ncurrent state of the notification thread.",
            "id": "NotificationsBackendCommonMessage__CustomEndpointSyncInstruction",
            "properties": {
                "stateUpdate": {
                    "$ref": "NotificationsBackendCommon__ThreadStateUpdate",
                    "description": "All updates to the current notification thread that can be used to update\nthe thread present in the custom endpoint."
                },
                "syncVersion": {
                    "description": "If state_update above is not sufficient to update the endpoint, this can be\nused in requests to ChimeSyncService.FetchUpdatedThreads to get the set of\nupdated notification threads since this version. Endpoints can also use\nChimeSyncService.FetchLatestThreads to get the latest notification threads\nthat are available for the endpoint.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__EmailMessage": {
            "description": "Note that email is not considered to be a secure enough to send PII. Please\ntalk to privacy and security teams before sending PII/private links through\nthis channel.",
            "id": "NotificationsBackendCommonMessage__EmailMessage",
            "properties": {
                "abuseDetails": {
                    "$ref": "CaribouAbuse__AbuseDetails",
                    "description": "If given, the AbuseDetails proto will be passed untouched to GMR for abuse\nchecks."
                },
                "addMailToSentFolder": {
                    "description": "If true, will insert a copy of mail sent into the sent folder of the\nsender.",
                    "type": "boolean"
                },
                "additionalRecipient": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "attachment": {
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_EmailMessage_Attachment"
                    },
                    "type": "array"
                },
                "bccRecipient": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "bodyPart": {
                    "description": "At least one body part must be added. If there are multiple body\nparts, they will be grouped as alternative bodies (i.e. email\nclients should show only one of the bodies). There must be at\nmost one body part with a given value of content_type.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_EmailMessage_BodyPart"
                    },
                    "type": "array"
                },
                "ccRecipient": {
                    "description": "CC and BCC, and additional recipients can be formatted either as simple\naddresses (kak@google.com) or complex addresses (\"Kurt Alfred Kluever\"\n<kak@google.com>).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fromAddress": {
                    "description": "Required.",
                    "type": "string"
                },
                "gmrRoutingInfo": {
                    "$ref": "__GMRRoutingInfo",
                    "description": "This is used to determine how to route this message within GMR."
                },
                "header": {
                    "description": "A list of additional headers to include in the email.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_EmailMessage_Header"
                    },
                    "type": "array"
                },
                "messageId": {
                    "description": "The message ID to set on the outgoing email message. It must\nstart with '<' and end with '>'. If the message ID is omitted or\nmalformed, a message ID will be generated automatically. Message\nIDs should be unique amongst all messages. Clients are encouraged\nto accomplish this with the combination of a unique key and a\nclient-specific suffix, e.g.,\n\"<jd83kc73jd9sjk437d@spreadsheets.gmail.com>\".",
                    "type": "string"
                },
                "subject": {
                    "description": "Required. Utf8-encoded string.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__GcmMessage": {
            "id": "NotificationsBackendCommonMessage__GcmMessage",
            "properties": {
                "applicationId": {
                    "description": "In cases where we're sending a GCM message to a user rather than a device,\nthe application ID may not be known at settings time. In that case, the\nrenderer needs to fill in the application_id here. If the application_id is\nset in both the message and the address, the message's value will take\nprecedence. This field will be ignored if the message is sent to a device.",
                    "type": "string"
                },
                "collapseKey": {
                    "description": "If multiple messages with the same collapse key are sent to a phone that is\noffline, only one (chosen arbitrarily) will be sent to the device when it\nwakes up.",
                    "type": "string"
                },
                "delayWhileIdle": {
                    "description": "If true, an idle phone that is online will be treated as if it were\noffline; messages will not be delivered until the device is active and only\none message will be sent for each unique collapse key.",
                    "type": "boolean"
                },
                "payloadData": {
                    "description": "Any number of key/value pairs may be sent, but there is a size limit on the\nmessage sent from Chime to the device. Keys and values will not be escaped.\nTotal message size must not exceed 4096 bytes.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_GcmMessage_PayloadData"
                    },
                    "type": "array"
                },
                "priority": {
                    "description": "Corresponds to the GCM DataMessageProto.priority field. If unset, will\nsimply unset it in the GCM request, which will default to \"5\".\n\nhttp://cs/symbol:android_messaging.DataMessageProto.priority",
                    "format": "int32",
                    "type": "integer"
                },
                "timeToLiveSecs": {
                    "description": "The number of seconds this should be stored on the GCM server if the target\ndevice is offline. Must be in the range [0, 2 419 200].\nDefault is max (4 weeks).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__GenericMessage": {
            "description": "The GenericMessage proto is a way to easily pass Chime a single message that\ncan be delivered to Chime's mobile endpoints (and in future, the OGB).\nThere is a well defined set of mappings from GenericMessage back to\nGcmMessage and ApplePushMessage.\nCheck out go/chime-generic-message-g3doc for more information.\nNext tag: 11",
            "id": "NotificationsBackendCommonMessage__GenericMessage",
            "properties": {
                "destinationUrl": {
                    "description": "Optional. A URL that will be visited when clicking on this notification.\nThis URL can be overwritten by endpoint specific hints.",
                    "type": "string"
                },
                "endpointHints": {
                    "$ref": "NotificationsBackendCommonMessage_GenericMessage_EndpointHints",
                    "description": "Optional. Additional information specific to the various endpoints we\nsupport."
                },
                "expandedView": {
                    "$ref": "NotificationsBackendCommonMessage_GenericMessage_ExpandedView",
                    "description": "Optional. Some endpoints support an expanded view where a user can drag out\na notification to view more detailed information."
                },
                "favicon": {
                    "$ref": "NotificationsBackendCommon__Image",
                    "description": "Optional. A small app icon to display in certain notification views. This\nfield can be omitted in favor of using a favicon specified in client\nconfig. If this field is omitted and the client config favicon is\nunspecified, no icon is displayed (ideally clients should avoid this)."
                },
                "icon": {
                    "description": "Optional. An icon to be displayed alongside the notification, or a series\nof icons to be put in a collage. If no icon is specified, the frontend will\ndisplay a generic icon image.",
                    "items": {
                        "$ref": "NotificationsBackendCommon__Image"
                    },
                    "type": "array"
                },
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Optional. A client-specified opaque payload.",
                    "type": "object"
                },
                "payloadType": {
                    "description": "Optional. Allows clients to describe the payload and provide supplemental\ninformation. Can be used by the client to differentiate between payloads.",
                    "type": "string"
                },
                "text": {
                    "description": "Optional. Actual body text to display. It is generally recommended that you\npopulate this field, unless the payload is for a silent or background\nnotification.",
                    "type": "string"
                },
                "timestampUsec": {
                    "description": "Optional. Timestamp associated with this notification event. If omitted, a\ntimestamp corresponding to \u2018now\u2019 will be included when delivering.",
                    "format": "int64",
                    "type": "string"
                },
                "title": {
                    "description": "Optional. Notification title text to display. It is generally recommended\nthat you populate this field, unless the payload is for a silent or\nbackground notification.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__GmsCoreMessageHint": {
            "description": "GmsCoreMessageHint should be included with the GenericMessage proto to\nachieve customizations of the notifications delivered to GmsCore\nnotifications module.",
            "id": "NotificationsBackendCommonMessage__GmsCoreMessageHint",
            "properties": {
                "channel": {
                    "$ref": "NotificationsBackendCommonMessage_GmsCoreMessageHint_Channel",
                    "description": "The NotificationChannel this notification should be posted to. This will\ntake precedence over the Channel set in AndroidMessageHint.\n\nNotes:\nNotifications module in will create the NotificationChannel first if\n\"channel_name\" field is provided. If there is already a channel present\nwith the same ID, then the name would be updated.\n\nSame goes NotificationChannelGroup - in case creation / update of\nNotificationChannelGroup is desired, \"group_name\" must be set.\nA new NotificationChannelGroup will only be created if a new\nNotificationChannel gets created.\n\nIf \"importance\" field is not set for the channel, then newly created\nNotificationChannel will have importance set to IMPORTANCE_DEFAULT."
                },
                "defaultDestinationLabel": {
                    "description": "Button label for the default destination. If this is set, Notifications\nmodule will set the first action button with this text pointing to the\ndefault target (url destination or intent target).",
                    "type": "string"
                },
                "onNotificationClickIntent": {
                    "$ref": "NotificationsBackendCommonMessage__AndroidIntent",
                    "description": "Optional - Android intent to fire if user clicks the notification on the\nsystem tray.\nNote: If this is set, then http://cs/symbol:GenericMessage.destination_url\nor http://cs/symbol:AndroidMessageHint.destination_url would be ignored on\nthe client side.\nNote: Supported from GmsCore v14."
                },
                "onNotificationReceivedIntent": {
                    "$ref": "NotificationsBackendCommonMessage__AndroidIntent",
                    "description": "Optional - Android intent to fire when the notification first received\non the device.\nNote: Supported from GmsCore v24."
                },
                "smallIconType": {
                    "enum": [
                        "UNKNOWN_SMALL_ICON_TYPE",
                        "LOGIN_EVENT",
                        "SECURITY_THREAT",
                        "SECURITY_NOTIFICATION",
                        "GOOGLE_LOGO",
                        "ALERT_EVENT",
                        "GOOGLE_BOX_LOGO"
                    ],
                    "enumDescriptions": [
                        "",
                        "Keyhole icon. See: http://go/gmscore_notifications_login_event_icon",
                        "Security shield icon. See:\nhttp://go/gmscore_notifications_security_threat_icon",
                        "Security wrench icon. See: http://go/gmscore_notifications_security_icon",
                        "Four color Google G logo. See:\nhttp://go/gmscore_notifications_google_logo",
                        "System default alert icon. See: http://go/dialog_alert_icon",
                        "Transparent Google logo within a box. See:\nhttp://go/gmscore_notifications_google_box_logo\nNote: Only available from V12."
                    ],
                    "type": "string"
                },
                "webviewTaskDescription": {
                    "description": "Optional - The task description to use for the authenticated webview\nactivity started from notifications module.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__HttpStreamingMessage": {
            "id": "NotificationsBackendCommonMessage__HttpStreamingMessage",
            "properties": {
                "payload": {
                    "description": "Required. The payload that will be delivered to the client.",
                    "type": "string"
                },
                "timeToLiveSecs": {
                    "description": "The number of seconds this should be stored on the GCM server if the target\ndevice is offline. Must be in the range [0, 2419200].\nDefault is max (4 weeks).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__IosMessageHint": {
            "description": "IosMessageHint can be included with the GenericMessage proto to achieve\ncustomizations of the generic message specifically for iOS devices. Any\nfields in IosMessageHint that overlap with fields in GenericMessage will\nbe resolved in favor of the IosMessageHint.\nNext ID: 21",
            "id": "NotificationsBackendCommonMessage__IosMessageHint",
            "properties": {
                "appPayload": {
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_IosMessageHint_KeyValue"
                    },
                    "type": "array"
                },
                "attachment": {
                    "description": "The media attachments to display alongside the notification.\nThe supported attachment types can be found at go/unnotificationattachment.\nIMPORTANT: This field only works on iOS 10 devices and the client app must\nbe integrated with the Chime iOS SDK in order for the attachments to be\nproperly displayed.\nSee http://g3doc/googlemac/iPhone/Shared/Notifications/g3doc/rich on how\nto configure and send rich notifications with media attachments.",
                    "items": {
                        "$ref": "NotificationsBackendCommonMessage_IosMessageHint_Attachment"
                    },
                    "type": "array"
                },
                "autoPopulateBadgeCount": {
                    "description": "Optional. If true, then Chime will automatically calculate the badge count\nand send it alongside the notifications.\nNote: The badge count is calculated based on how many notification threads\nare of the count behavior INCLUDE_IN_COUNTS in the Chime storage.\nSee go/chime-count-behavior.\nThe client must set the synchronization_mode to SYNC in order for Chime\nto store the notification threads. See go/chime-notification-type-config.",
                    "type": "boolean"
                },
                "backgroundEnabled": {
                    "description": "Whether to include the content-available key in the APS dictionary sent to\nthe iOS device, which indicates that new content is available and can ping\nthe app in the background. See go/apns-payload.",
                    "type": "boolean"
                },
                "badgeCount": {
                    "description": "The badge count to send alongside the notification.\nNote: This overrides the auto-populated badge count for the notification.",
                    "format": "int32",
                    "type": "integer"
                },
                "category": {
                    "description": "If provided sets the 'category' in the APNS payload.",
                    "type": "string"
                },
                "collapseId": {
                    "description": "Optional. Multiple notifications with the same collapse\nidentifier are displayed to the user as a single notification.\nThe size of this key must not exceed 64 bytes.",
                    "type": "string"
                },
                "expiryUnixTimeSecs": {
                    "description": "A UNIX time in seconds that identifies when the notification is no longer\nvalid and can be discarded. If the expiry value is positive, APNS tries\nto deliver it at least once. If it is 0 or less, APNS will not store the\nnotification at all. If this field is omitted, then a default time of\n30 days from now will be used.",
                    "format": "int32",
                    "type": "integer"
                },
                "ios10Override": {
                    "$ref": "NotificationsBackendCommonMessage_IosMessageHint_Ios10Override"
                },
                "iosPayloadType": {
                    "description": "This field defines the payload format Chime will send this GenericMessage\nas. If left unset, set to unknown or set to CHIME, we'll send a Chime\nstyle payload. If explicitly set to GUNS we'll convert to a GUNS style\npayload.",
                    "enum": [
                        "UNKNOWN_IOS_PAYLOAD_TYPE",
                        "CHIME",
                        "GUNS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "locArgs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "locKey": {
                    "description": "Localization keys and arguments that go into the \"alert\" object.\nAlthough these fields override the GenericMessage's text and title, they\nmay both be superseded by their equivalents in the ios_10_override field.\nSearch for \"loc-key\" in go/apns-payload for more details.",
                    "type": "string"
                },
                "mutableContent": {
                    "description": "Whether to set the \"mutable-content\" key in the \"aps\" dictionary\nin order to support iOS 10 Notification Service Extension.\nNOTE: this key is automatically set by Chime when at least one\n\"attachment\" is specified.",
                    "type": "boolean"
                },
                "priority": {
                    "description": "Indicates the priority of the push message.",
                    "enum": [
                        "PRIORITY_UNKNOWN",
                        "LOW",
                        "HIGH"
                    ],
                    "enumDescriptions": [
                        "If the priority is not specified, it will default to HIGH.",
                        "Apple will save the notification until a time that conserves power on the\ndevice receiving it.",
                        "Apple will send the notification immediately. Then it must trigger an\nalert, sound or badge. The payload cannot only contain content-available."
                    ],
                    "type": "string"
                },
                "pushType": {
                    "description": "Optional but strongly recommended (iOS 13+). The push type of the\nnotification.\nThe value of this header must accurately reflect the contents of your\nnotification's json payload. If there is a mismatch, or if the header is\nmissing on required systems, APNs may delay the delivery of the\nnotification or drop it altogether.",
                    "enum": [
                        "PUSH_TYPE_UNKNOWN",
                        "ALERT",
                        "BACKGROUND"
                    ],
                    "enumDescriptions": [
                        "",
                        "Specify alert when the delivery of the notification displays an alert,\nplays a sound, or badges your app's icon.",
                        "Specify background for silent notifications that do not interact with the\nuser.\nBackground notifications may not contain any keys that would lead to user\ninteraction."
                    ],
                    "type": "string"
                },
                "sound": {
                    "description": "If provided, overrides the default (\"default\") sound set in the APNS\npayload.",
                    "type": "string"
                },
                "titleLocArgs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "titleLocKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__LegacyGunsHint": {
            "description": "LegacyGunsHint should be included with the GenericMessage proto to\nachieve customizations of the notifications delivered to GUNS devices\nas part of the GUNS to Chime migration. Features based on fields in these\nmessage are flag-protected. Please contact chime-users@ before filling\nthis message.",
            "id": "NotificationsBackendCommonMessage__LegacyGunsHint",
            "properties": {
                "androidChannelHint": {
                    "$ref": "NotificationsBackendCommonMessage_LegacyGunsHint_AndroidChannelHint",
                    "description": "Note: This field is to only be used by GUNS apps that create Android\nchannels based on this data. Do not use without consulting chime-users@\nfirst."
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__MatchstickMessage": {
            "id": "NotificationsBackendCommonMessage__MatchstickMessage",
            "properties": {
                "conversationInfo": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__ConversationInfo",
                    "description": "Required. Information about the conversation this message is part of."
                },
                "id": {
                    "description": "Required. We recommend that clients use the notification external_id.",
                    "type": "string"
                },
                "message": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__Message",
                    "description": "Required. Message to send using Matchstick."
                },
                "senderInfo": {
                    "$ref": "GoogleCommunicationsApppreviewmessagingV1__SenderInfo",
                    "description": "Required. Information about the sender."
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__RenderedMessage": {
            "description": "A rendered message that is ready for display at an endpoint. It can contain\none deliverable message per channel and/or a GenericMessage that can be\nmapped to any of the fetch-ready endpoints (Android, iOS, OGB). This can\nalso be used as a prerendered payload in the notify request to Chime for\nclients that do not need custom rendering.\nNext Id: 16",
            "id": "NotificationsBackendCommonMessage__RenderedMessage",
            "properties": {
                "applePushMessage": {
                    "$ref": "NotificationsBackendCommonMessage__ApplePushMessage",
                    "description": "These channel messages are only used in the push path, and more general\nfetch/push support is available using GenericMessages."
                },
                "customEndpointMessage": {
                    "$ref": "NotificationsBackendCommonMessage__CustomEndpointMessage",
                    "description": "CustomEndpointMessage should be used with client configured custom\nendpoints."
                },
                "emailMessage": {
                    "$ref": "NotificationsBackendCommonMessage__EmailMessage",
                    "description": "These push-only endpoints are not supported by GenericMessages.\nNote that email and SMS are not considered to be secure enough to send PII.\nWe strongly recommend against sending PII or sensitive information in SMS.\nPlease talk to privacy and security teams before sending PII/private links\nthrough this channels."
                },
                "gcmMessage": {
                    "$ref": "NotificationsBackendCommonMessage__GcmMessage"
                },
                "genericMessage": {
                    "$ref": "NotificationsBackendCommonMessage__GenericMessage",
                    "description": "The GenericMessage proto can be provided in lieu of a GcmMessage and/or\nApplePushMessage and Chime will automatically unpack it into the equivalent\nchannel messages, per well-defined rules.\ngo/chime-generic-g3doc for more information."
                },
                "httpStreamingMessage": {
                    "$ref": "NotificationsBackendCommonMessage__HttpStreamingMessage"
                },
                "matchstickMessage": {
                    "$ref": "NotificationsBackendCommonMessage__MatchstickMessage"
                },
                "smsMessage": {
                    "$ref": "NotificationsBackendCommonMessage__SmsMessage"
                },
                "webPushMessage": {
                    "$ref": "NotificationsBackendCommonMessage__WebPushMessage"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__SmsMessage": {
            "description": "Note that SMS is not considered to be a secure enough to send PII. We\nstrongly recommend against sending PII or sensitive information in SMS.",
            "id": "NotificationsBackendCommonMessage__SmsMessage",
            "properties": {
                "body": {
                    "description": "Message body for SMS messages.",
                    "type": "string"
                },
                "fromAddress": {
                    "description": "If you are using a special short code (or long code), specify it here.\nIf you are fine with the Mobile Gateway's default SMS number (which is\nprobably the case if you're only sending SMS messages, and not receiving\nthem), then you should omit this field.\n\nNOTE: Unless you *really* know what you're doing, you probably want to\n    omit this field.  Generally, your from address is determined by the\n    Mobile Gateway client ID, so this field should not be necessary.",
                    "type": "string"
                },
                "gaiaIdForQuota": {
                    "description": "Gaia ID to use for MobileGW quota.",
                    "format": "int64",
                    "type": "string"
                },
                "mmsMessage": {
                    "$ref": "CommunicationSmsrelayProto__MmsMessage",
                    "description": "MMS message content. To be used only by client sending through SMS Relay."
                },
                "smsRelayInstructions": {
                    "$ref": "NotificationsBackendCommonMessage__SmsRelayInstructions",
                    "description": "Optional. Delivery instructions for SMS Relay."
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__SmsRelayInstructions": {
            "description": "The fields in this message match the fields in SMSRelay ApplicationEndpoint\nmessage, which is found at\ngoogle3/communication/smsrelay/proto/api_types.proto",
            "id": "NotificationsBackendCommonMessage__SmsRelayInstructions",
            "properties": {
                "messageId": {
                    "description": "Optional. The ID used in SmsRelay to identify this message. If omitted, the\nChime thread ID will be used.\nNew messages containing an ID matching an earlier message will be de-duped\nby SmsRelay and will not be sent if the earlier message delivery was\nsuccessful. SmsRelay will return an error if a message has been deduped.",
                    "type": "string"
                },
                "senderEndpoint": {
                    "$ref": "CommunicationSmsrelayProto__Endpoint",
                    "description": "The sender endpoint (containing either a short code or phone\nnumber) used for the outgoing message.\nShould be used by most clients."
                },
                "sessionEndpoint": {
                    "$ref": "NotificationsBackendCommonMessage_SmsRelayInstructions_SessionEndpoint",
                    "description": "Represents an SMS session.\nThis should be used only in special cases that require special P2P SMS\nconversations. Please reach out to chime-team@ before using this field."
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__WebPushMessage": {
            "id": "NotificationsBackendCommonMessage__WebPushMessage",
            "properties": {
                "payload": {
                    "description": "Required. The payload that will be delivered to the service worker.\nCurrently, this is a jspb serialized WebPushPayload. However, in the\nfuture, we may add support for custom payloads.",
                    "type": "string"
                },
                "timeToLiveSecs": {
                    "description": "The number of seconds this should be stored on the GCM server if the target\ndevice is offline. Must be in the range [0, 2 419 200].\nDefault is max (4 weeks).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommonMessage__WebPushMessageHint": {
            "description": "WebPushMessageHint can be included with the GenericMessage proto to achieve\ncustomizations of the generic message specifically for Web Push endpoints.\nAny fields in WebPushMessageHint that overlap with fields in GenericMessage\nwill be resolved in favor of the WebPushMessageHint.",
            "id": "NotificationsBackendCommonMessage__WebPushMessageHint",
            "properties": {
                "timeToLiveSecs": {
                    "description": "The number of seconds this should be stored on the GCM server if the target\ndevice is offline. Must be in the range [0, 2 419 200].\nDefault is max (4 weeks).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommon__Image": {
            "description": "The Image message contains the fields required to include an image in any\npart of a rendered notification, including icons and larger media.",
            "id": "NotificationsBackendCommon__Image",
            "properties": {
                "altText": {
                    "description": "Optional. Alternate text to display if the image cannot be found and for\naccessibility reasons.",
                    "type": "string"
                },
                "url": {
                    "description": "Required. URL of this image resource. FIFE hosted URLs are preferred.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsBackendCommon__ThreadStateUpdate": {
            "description": "The ThreadStateUpdate message is used to update thread state to the new\nvalues specified.\n\nCurrently, each update can specify a single change (assume all four fields in\nthe message is in an \"oneof\"). To change multiple fields use repeated\nThreadStateUpdate.\n\nIn the near future (this comment will be updated when it is safe to do so),\neach update can specify multiple changes and a single ThreadStateUpdate will\nbe expected by the server.",
            "id": "NotificationsBackendCommon__ThreadStateUpdate",
            "properties": {
                "countBehavior": {
                    "description": "Only allowed value here is EXCLUDE_FROM_COUNTS.",
                    "enum": [
                        "COUNT_BEHAVIOR_UNSPECIFIED",
                        "INCLUDE_IN_COUNTS",
                        "EXCLUDE_FROM_COUNTS"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The thread will contribute to count calculations.",
                        "The thread will not contribute to count calculations."
                    ],
                    "type": "string"
                },
                "deletionStatus": {
                    "description": "Only allowed value here is DELETED.",
                    "enum": [
                        "DELETION_STATUS_UNKNOWN",
                        "ACTIVE",
                        "DELETED"
                    ],
                    "enumDescriptions": [
                        "Default value. This value is never legitimate, it indicates something has\ngone wrong somewhere.",
                        "The normal state of a thread. It can potentially be seen and interacted\nwith by the user (barring preference checks / render failures / etc.).",
                        "The state when a thread has been marked as deleted. Threads in this state\nare simply tombstones and should not be displayed to the user. They should\nalso be removed by clients from any local databases."
                    ],
                    "type": "string"
                },
                "readState": {
                    "description": "Only allowed value here is READ.",
                    "enum": [
                        "READ_STATE_UNKNOWN",
                        "NEW",
                        "READ"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The state of the thread when a new notification has been added, prior to\nany user interaction.",
                        "The state of the thread after a user has 'read' the thread. For a canonical\nthread this read state is set when Chime has a strong signal that the user\nhas visited the underlying entity that the thread points to (e.g. G+ post,\nDrive document). For example: A click on an Android notification marks it\nas read. An email being opened is not enough for it to be marked as read,\nbut a click on a link inside of it does."
                    ],
                    "type": "string"
                },
                "systemTrayBehavior": {
                    "description": "Only allowed value here is REMOVE_FROM_SYSTEM_TRAY.",
                    "enum": [
                        "SYSTEM_TRAY_BEHAVIOR_UNSPECIFIED",
                        "SHOW_IN_SYSTEM_TRAY",
                        "REMOVE_FROM_SYSTEM_TRAY"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The thread will be shown in system trays.",
                        "The thread won't be shown in system trays."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon_AndroidSdkMessage_Channel": {
            "description": "Channels are supported from Android O (SDK version 26).\nFor more information please visit - go/notification-channels.",
            "id": "NotificationsFrontendDataCommon_AndroidSdkMessage_Channel",
            "properties": {
                "channelId": {
                    "description": "Required. The ID of the channel.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon_AndroidSdkMessage_ExpandedView": {
            "description": "Any fields not supplied in the expanded view will be inferred from the\nspecified prior.",
            "id": "NotificationsFrontendDataCommon_AndroidSdkMessage_ExpandedView",
            "properties": {
                "action": {
                    "description": "Optional. Actions are rendered as buttons in certain views. This field\nwill be populated from the AndroidMessageHint Action field\npreferentially, else the GenericMessage Action field will be passed thru.",
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon__Action"
                    },
                    "type": "array"
                },
                "media": {
                    "description": "Optional. Images to display. All media will have been fify-fied.",
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon__Image"
                    },
                    "type": "array"
                },
                "text": {
                    "description": "Optional. Actual notification text to display.",
                    "type": "string"
                },
                "title": {
                    "description": "Optional. Notification heading text to display.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon_AndroidSdkMessage_NotificationBehavior": {
            "id": "NotificationsFrontendDataCommon_AndroidSdkMessage_NotificationBehavior",
            "properties": {
                "disableLights": {
                    "description": "Whether this notification type should disable LED lights. If this field\nis set to true, the Notification.DEFAULT_LIGHTS flag won\u2019t be set.",
                    "type": "boolean"
                },
                "disableRemoveOnClick": {
                    "description": "Whether the notification should be removed from the system tray after the\nuser clicks it.",
                    "type": "boolean"
                },
                "disableSound": {
                    "description": "Whether this notification type should play ringtone. If this field is set\nto true, the Notification.DEFAULT_SOUND flag won\u2019t be set.",
                    "type": "boolean"
                },
                "disableVibration": {
                    "description": "Whether this notification type should vibrate the device. If this field\nis set to true, the Notification.DEFAULT_VIBRATE flag won\u2019t be set.",
                    "type": "boolean"
                },
                "isNonDismissible": {
                    "description": "Whether to set this notification as non-dismissible. Clients should check\nthis field and set the Notification.FLAG_ONGOING_EVENT flag.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon_AndroidSdkMessage_PublicNotificationInfo": {
            "description": "Additional data to construct the public notification when user has decided\nto hide sensitive notification in lock screen. Note that when multiple\nNotificationThreads are grouped together, this data will be discarded and\nonly a generic notification will be shown.",
            "id": "NotificationsFrontendDataCommon_AndroidSdkMessage_PublicNotificationInfo",
            "properties": {
                "contentText": {
                    "description": "If is_public is set to false, this content text will be shown in the lock\nscreen. If not set, a generic text would be displayed (e.g: \u2018You have a\nnotification\u2019).",
                    "type": "string"
                },
                "contentTitle": {
                    "description": "If is_public is set to false, this title will be shown in the lock\nscreen. If not set, the name of the application receiving the\nnotification will be displayed. The application name will be obtained\nclient-side.",
                    "type": "string"
                },
                "isPublic": {
                    "description": "If set to true, the notification would have its visibility set to public.\nSee go/android-notification-visibility.\nWhen multiple notifications are grouped together in the android system\ntray, the group notification will have public visibility only if all the\nnotifications has this field set to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon_FrontendNotificationThread_NotificationMetadata": {
            "description": "Metadata about the notifications in this thread, ordered from newest to\noldest. At least one is required if the thread has not been deleted,\notherwise there will be none.",
            "id": "NotificationsFrontendDataCommon_FrontendNotificationThread_NotificationMetadata",
            "properties": {
                "externalId": {
                    "description": "The external ID of each notification.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__Action": {
            "description": "The Action message contains the fields required to render a button for the\nuser to click on in the expanded view of a notification thread.",
            "id": "NotificationsFrontendDataCommon__Action",
            "properties": {
                "actionId": {
                    "description": "Required. Identifier for this action.",
                    "type": "string"
                },
                "icon": {
                    "$ref": "NotificationsFrontendDataCommon__Image",
                    "description": "Optional. Icon to be shown in the action button."
                },
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "/ Optional. A client-specified opaque payload for this actions.",
                    "type": "object"
                },
                "text": {
                    "description": "Required. Text to be shown in the action button.",
                    "type": "string"
                },
                "threadStateUpdate": {
                    "$ref": "NotificationsFrontendDataCommon__ThreadStateUpdate",
                    "description": "Optional. Updates to thread state to be applied when the action is clicked."
                },
                "url": {
                    "description": "Required. URL to be opened when the user clicks the action button.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__AndroidSdkMessage": {
            "description": "A message to be populated by the GenericMessageHandler and designed to be\nunderstood by the Android FE SDK.",
            "id": "NotificationsFrontendDataCommon__AndroidSdkMessage",
            "properties": {
                "channel": {
                    "$ref": "NotificationsFrontendDataCommon_AndroidSdkMessage_Channel",
                    "description": "Optional. The Channel to surface this notification in. If the specified\nChannel is not configured in the client application, a default Channel\nmight be used if configured in Chime Android SDK.\nNote: This field will be ignored in Android O-."
                },
                "destinationUrl": {
                    "description": "Optional. A URL that will be visited when clicking on this notification.\nThis URL can be overwritten by endpoint specific hints.",
                    "type": "string"
                },
                "expandedView": {
                    "$ref": "NotificationsFrontendDataCommon_AndroidSdkMessage_ExpandedView",
                    "description": "Optional. Some endpoints support an expanded view where a user can drag out\na notification to view more detailed information."
                },
                "favicon": {
                    "$ref": "NotificationsFrontendDataCommon__Image",
                    "description": "Optional. A small app icon to display in certain notification views. This\nfield can be omitted in favor of using a favicon specified in client\nconfig. If this field is omitted and the client config favicon is\nunspecified, no icon is displayed (ideally clients should avoid this). All\nfavicon images will have been fify-fied."
                },
                "groupId": {
                    "description": "If set, NotificationThreads with the same group_id will be grouped together\nin the same system tray row.",
                    "type": "string"
                },
                "icon": {
                    "description": "Optional. An icon to be displayed alongside the notification, or a series\nof icons to be put in a collage. If no icon is specified, the frontend will\ndisplay a generic icon image. All icon images will have been fify-fied.",
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon__Image"
                    },
                    "type": "array"
                },
                "iconColor": {
                    "description": "Optional. Accent color to apply to the displayed notification icon.\nSupported from android L (api level 21).\nFormat is: AARRGGBB (The alpha channel is ignored).\nSee -\nhttps://developer.android.com/reference/android/app/Notification.html#color",
                    "format": "int32",
                    "type": "integer"
                },
                "largeIconShape": {
                    "description": "Optional. Notification large icon shape.\nBefore Android L the icon shape is always SQUARE (this field is ignored).\nStarting from Android L, the default shape is CIRCLE.",
                    "enum": [
                        "ICON_SHAPE_DEFAULT",
                        "CIRCLE",
                        "SQUARE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "notificationBehavior": {
                    "$ref": "NotificationsFrontendDataCommon_AndroidSdkMessage_NotificationBehavior"
                },
                "priority": {
                    "description": "If set, clients should set the notification priority based on this.\nNote that when multiple notifications are grouped together, the overall\npriority should be the max of all the notifications.",
                    "enum": [
                        "PRIORITY_DEFAULT",
                        "PRIORITY_HIGH",
                        "PRIORITY_LOW",
                        "PRIORITY_MAX",
                        "PRIORITY_MIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "publicNotificationInfo": {
                    "$ref": "NotificationsFrontendDataCommon_AndroidSdkMessage_PublicNotificationInfo"
                },
                "showWhen": {
                    "description": "Whether notification timestamp should be displayed. If not set, the\ntimestamp will be shown.\nSee -\nhttps://developer.android.com/reference/android/app/Notification.html#EXTRA_SHOW_WHEN",
                    "type": "boolean"
                },
                "sortKey": {
                    "description": "Optional. Explicit order for notifications belonging to the same app.\nSee -\nhttps://developer.android.com/reference/android/app/Notification#getSortKey()",
                    "type": "string"
                },
                "subText": {
                    "description": "Optional. Notification sub text. If this field is not set, it will default\nto the recipient account name.\nNote for grouped notifications: If all notifications in a group share the\nsame sub_text, it will be propagated to the group summary and hidden from\nindividual notifications. If not, each notification will display their own\nsub_text and the group summary will display the recipient account name.",
                    "type": "string"
                },
                "systemCategory": {
                    "description": "Android System Notification Category. See http://go/notifications-in-L.",
                    "type": "string"
                },
                "text": {
                    "description": "Required. Actual body text to display.",
                    "type": "string"
                },
                "tickerText": {
                    "description": "Optional. Ticker text for the notification bar. Summarizes this\nnotification for accessibility services.",
                    "type": "string"
                },
                "timestampUsec": {
                    "description": "Optional. Timestamp associated with this notification event. If omitted, a\ntimestamp corresponding to \u2018now\u2019 will be included when delivering.",
                    "format": "int64",
                    "type": "string"
                },
                "title": {
                    "description": "Required. Notification title text to display.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__DemoPayload": {
            "description": "Payload for use with device payload provider for registration.\n\nThis should only be used for Chime Demo Apps.\n\nNext tag: 2",
            "id": "NotificationsFrontendDataCommon__DemoPayload",
            "properties": {
                "token": {
                    "description": "Arbitrary token field used for testing purposes. Can be set to GAIA ID for\nexample.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__FrontendNotificationThread": {
            "description": "A representation of the notification thread for sync and delivery.\nThis is presented to the client through the sync API, and to the delivery\nhandlers at delivery time.\nNext tag: 23",
            "id": "NotificationsFrontendDataCommon__FrontendNotificationThread",
            "properties": {
                "androidSdkMessage": {
                    "$ref": "NotificationsFrontendDataCommon__AndroidSdkMessage"
                },
                "clientId": {
                    "description": "Required. Identifies the Chime client that created this thread. The\nvalue of this field must correspond to a previously configured client.",
                    "type": "string"
                },
                "deletionStatus": {
                    "description": "The current deletion status of this thread. This is deprecated and the\ndeletion_Status inside the thread_state should be used instead.",
                    "enum": [
                        "DELETION_STATUS_UNKNOWN",
                        "ACTIVE",
                        "DELETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The notification thread has not been deleted.",
                        "The notification thread has been marked as deleted using the\nChimeSyncService.DeleteThread RPC. Threads in this state are simply\ntombstones and should not be displayed to the user. They should also be\nremoved by clients from any local databases."
                    ],
                    "type": "string"
                },
                "expirationTimestampUsec": {
                    "description": "Optional. Expiration timestamp for a notification thread. If this is set,\nthe notification thread should be removed from system tray.\nNOTE: This is currently supported by apps using Chime Android SDK.",
                    "format": "int64",
                    "type": "string"
                },
                "identifier": {
                    "description": "Required. Uniquely identifies a notification thread for a particular\nclient. This identifier incorporates type and thread information - Format\nis a string containing the type and thread ID information, composed by\ncs/notifications/backend/common/thread_identifier_util.h.",
                    "type": "string"
                },
                "inAppTrayMessage": {
                    "$ref": "NotificationsFrontendDataCommon__InAppTrayMessage"
                },
                "iosSdkMessage": {
                    "$ref": "NotificationsFrontendDataCommon__IosSdkMessage"
                },
                "lastNotificationVersion": {
                    "description": "The version of creation of the latest notification in this thread. This is\nthe version that should be used in any UpdateThreadState rpcs.",
                    "format": "int64",
                    "type": "string"
                },
                "lastUpdatedVersion": {
                    "description": "The latest version at which either the thread_state was changed, or a\nnotification was added to the thread.",
                    "format": "int64",
                    "type": "string"
                },
                "notificationMetadata": {
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon_FrontendNotificationThread_NotificationMetadata"
                    },
                    "type": "array"
                },
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Optional. A client-specified opaque payload.",
                    "type": "object"
                },
                "payloadType": {
                    "description": "Optional. Allows clients to describe the payload and provide supplemental\ninformation. Can be used by the client to differentiate between payloads.",
                    "type": "string"
                },
                "readState": {
                    "description": "The current read state of this thread. This is deprecated and the\nread_state inside the thread_state should be used instead.",
                    "enum": [
                        "READ_STATE_UNKNOWN",
                        "NEW",
                        "READ"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The state of the thread when a new notification has been added, prior to\nany user interaction.",
                        "The state of the thread after a user has 'read' the thread. For a canonical\nthread this read state is set when Chime has a strong signal that the user\nhas visited the underlying entity that the thread points to (e.g. G+ post,\nDrive document). For example: A click on an Android notification marks it\nas read. An email being opened is not enough for it to be marked as read,\nbut a click on a link inside of it does."
                    ],
                    "type": "string"
                },
                "storageMode": {
                    "description": "Optional. Whether the thread is stored or not in Chime storage.",
                    "enum": [
                        "STORAGE_MODE_UNKNOWN",
                        "NOT_STORED",
                        "STORED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Not stored in Chime servers. Devices will only receive these via heavy\ntickle. Threads that are not stored cannot be fetched.",
                        "Stored in Chime servers. Devices will receive these via heavy tickle or\nwhen fetching updates from the server."
                    ],
                    "type": "string"
                },
                "threadId": {
                    "description": "Required. The thread-id of this Notification thread. Along with the\nclient_id and type_id, uniquely identifies this thread of within Chime.",
                    "type": "string"
                },
                "threadState": {
                    "$ref": "NotificationsFrontendDataCommon__ThreadState",
                    "description": "The thread state of this notification thread. This contains all the bits of\nbehavior that Chime keeps synchronised across devices and affects how and\nwhere threads are displayed."
                },
                "typeId": {
                    "description": "Required. Identifies the type of this notification thread within Chime. The\nvalue of this field must correspond to a previously configured type for the\nabove client_id.",
                    "type": "string"
                },
                "updateThreadStateToken": {
                    "description": "Optional. base64-encoded-keystore-encrypted {@code UpdateThreadStateToken}.\nSee - go/chime-notify-target-tracking for more information.\nThis will only be populated if the notification is intended for a\nparticular target without any Gaia ID associated.",
                    "type": "string"
                },
                "webPushSdkMessage": {
                    "$ref": "NotificationsFrontendDataCommon__WebPushSdkMessage"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__GunsFields": {
            "description": "This message contains the GUNS specific information partaining to this\nWebPushPayload. Used primarily for GUNS to Chime migration\nNote: INTERNAL USE ONLY. CLIENTS DO NOT POPULATE",
            "id": "NotificationsFrontendDataCommon__GunsFields",
            "properties": {
                "key": {
                    "description": "Optional. The Coalescing Key.",
                    "type": "string"
                },
                "view": {
                    "description": "Optional. The view id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__Image": {
            "description": "The Image message contains the fields required to include an image in any\npart of a rendered notification, including icons and larger media.",
            "id": "NotificationsFrontendDataCommon__Image",
            "properties": {
                "altText": {
                    "description": "Optional. Alternate text to display if the image cannot be found and for\naccessibility reasons.",
                    "type": "string"
                },
                "fifeUrl": {
                    "description": "Optional. This will be populated if the original url is proxied through\nFIFE or in case the original url was already FIFE hosted and the options\nare modified. This will be empty if the image is not FIFE hosted and it\ncan't be proxied (e.g: SVG images).",
                    "type": "string"
                },
                "url": {
                    "description": "Required. URL of this image resource. FIFE hosted URLs are preferred.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__InAppTrayMessage": {
            "description": "A message that's intended for clients who want to implement an in-app\nnotifications tray and do not use any of the push channels like GCM\nor APNS.\nNext tag: 3",
            "id": "NotificationsFrontendDataCommon__InAppTrayMessage",
            "properties": {
                "text": {
                    "description": "Optional. Actual body text to display.",
                    "type": "string"
                },
                "title": {
                    "description": "Optional. Notification title text to display.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__IosSdkMessage": {
            "description": "A message to be populated by the GenericMessageHandler and designed to be\nunderstood by the iOS SDK.\nNext tag: 4",
            "id": "NotificationsFrontendDataCommon__IosSdkMessage",
            "properties": {
                "icon": {
                    "$ref": "NotificationsFrontendDataCommon__Image",
                    "description": "Optional. An icon to be displayed alongside the notification"
                },
                "text": {
                    "description": "Required. Actual body text to display.",
                    "type": "string"
                },
                "title": {
                    "description": "Required. Notification title text to display.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__ThreadState": {
            "description": "The state associated with every persisted thread that is kept synchronized\nacross all a users devices. This state encapsulates all the information\n(excluding of course the content of the notifications within the thread) that\nshould alter how or where a thread is displayed to the user.\n\nSee go/chime-thread-state for the motivating reasons and discussion of the\ndesign.",
            "id": "NotificationsFrontendDataCommon__ThreadState",
            "properties": {
                "countBehavior": {
                    "enum": [
                        "COUNT_BEHAVIOR_UNSPECIFIED",
                        "INCLUDE_IN_COUNTS",
                        "EXCLUDE_FROM_COUNTS"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The thread will contribute to count calculations.",
                        "The thread will not contribute to count calculations."
                    ],
                    "type": "string"
                },
                "deletionStatus": {
                    "enum": [
                        "DELETION_STATUS_UNKNOWN",
                        "ACTIVE",
                        "DELETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The notification thread has not been deleted.",
                        "The notification thread has been marked as deleted using the\nChimeSyncService.DeleteThread RPC. Threads in this state are simply\ntombstones and should not be displayed to the user. They should also be\nremoved by clients from any local databases."
                    ],
                    "type": "string"
                },
                "readState": {
                    "enum": [
                        "READ_STATE_UNKNOWN",
                        "NEW",
                        "READ"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The state of the thread when a new notification has been added, prior to\nany user interaction.",
                        "The state of the thread after a user has 'read' the thread. For a canonical\nthread this read state is set when Chime has a strong signal that the user\nhas visited the underlying entity that the thread points to (e.g. G+ post,\nDrive document). For example: A click on an Android notification marks it\nas read. An email being opened is not enough for it to be marked as read,\nbut a click on a link inside of it does."
                    ],
                    "type": "string"
                },
                "systemTrayBehavior": {
                    "enum": [
                        "SYSTEM_TRAY_BEHAVIOR_UNSPECIFIED",
                        "SHOW_IN_SYSTEM_TRAY",
                        "REMOVE_FROM_SYSTEM_TRAY"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The thread will be shown in system trays.",
                        "The thread won't be shown in system trays."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__ThreadStateUpdate": {
            "description": "ThreadStateUpdate message is used to update thread state to the new values\nspecified. Each update can specify multiple changes and a single\nThreadStateUpdate will be expected by the server.",
            "id": "NotificationsFrontendDataCommon__ThreadStateUpdate",
            "properties": {
                "countBehavior": {
                    "description": "Only allowed value here is EXCLUDE_FROM_COUNTS.",
                    "enum": [
                        "COUNT_BEHAVIOR_UNSPECIFIED",
                        "INCLUDE_IN_COUNTS",
                        "EXCLUDE_FROM_COUNTS"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The thread will contribute to count calculations.",
                        "The thread will not contribute to count calculations."
                    ],
                    "type": "string"
                },
                "deletionStatus": {
                    "description": "Only allowed value here is DELETED.",
                    "enum": [
                        "DELETION_STATUS_UNKNOWN",
                        "ACTIVE",
                        "DELETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The notification thread has not been deleted.",
                        "The notification thread has been marked as deleted using the\nChimeSyncService.DeleteThread RPC. Threads in this state are simply\ntombstones and should not be displayed to the user. They should also be\nremoved by clients from any local databases."
                    ],
                    "type": "string"
                },
                "readState": {
                    "description": "Only allowed value here is READ.",
                    "enum": [
                        "READ_STATE_UNKNOWN",
                        "NEW",
                        "READ"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The state of the thread when a new notification has been added, prior to\nany user interaction.",
                        "The state of the thread after a user has 'read' the thread. For a canonical\nthread this read state is set when Chime has a strong signal that the user\nhas visited the underlying entity that the thread points to (e.g. G+ post,\nDrive document). For example: A click on an Android notification marks it\nas read. An email being opened is not enough for it to be marked as read,\nbut a click on a link inside of it does."
                    ],
                    "type": "string"
                },
                "systemTrayBehavior": {
                    "description": "Only allowed value here is REMOVE_FROM_SYSTEM_TRAY.",
                    "enum": [
                        "SYSTEM_TRAY_BEHAVIOR_UNSPECIFIED",
                        "SHOW_IN_SYSTEM_TRAY",
                        "REMOVE_FROM_SYSTEM_TRAY"
                    ],
                    "enumDescriptions": [
                        "Default value. This value may be set if the DeletionStatus of the thread is\nDELETED.",
                        "The thread will be shown in system trays.",
                        "The thread won't be shown in system trays."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendDataCommon__WebPushSdkMessage": {
            "description": "A message to be populated by the GenericMessageHandler and designed to be\nunderstood by the web push service worker.\nNext tag: 9",
            "id": "NotificationsFrontendDataCommon__WebPushSdkMessage",
            "properties": {
                "destinationUrl": {
                    "description": "Optional. A URL that will be visited when clicking on this notification.",
                    "type": "string"
                },
                "icon": {
                    "description": "Optional. The profile image urls of the Notification Message.",
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon__Image"
                    },
                    "type": "array"
                },
                "identifier": {
                    "description": "Required. Unique identifier for a notification thread for a particular\nclient.\nDeprecated. To be replaced by the identifier in FrontendNotificationThread.",
                    "type": "string"
                },
                "text": {
                    "description": "Optional. The body text of the Notification Message.",
                    "type": "string"
                },
                "title": {
                    "description": "Optional. The title of the Notification Message.",
                    "type": "string"
                },
                "updateThreadStateToken": {
                    "description": "Required. The UpdateThreadStateToken used for updating the read state of\nthis notification.\nsee google3/notifications/backend/proto/api/sync/service.proto\nDeprecated. To be replaced by the token in FrontendNotificationThread.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_AnalyticsInfo_AndroidInfo": {
            "id": "NotificationsFrontendData_AnalyticsInfo_AndroidInfo",
            "properties": {
                "actionId": {
                    "description": "Optional. Required if ActionType is CUSTOM",
                    "type": "string"
                },
                "actionType": {
                    "enum": [
                        "ACTION_TYPE_UNSPECIFIED",
                        "CUSTOM",
                        "CLICKED",
                        "DISMISSED",
                        "EXPIRED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Action was set by the client app (i.e. secondary action button).",
                        "Notification was clicked by the user.",
                        "Notification was dismissed by the user.",
                        "Notification was automatically dismissed due to expiration time."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_AnalyticsInfo_EmailInfo": {
            "id": "NotificationsFrontendData_AnalyticsInfo_EmailInfo",
            "properties": {
                "actionType": {
                    "enum": [
                        "ACTION_TYPE_UNSPECIFIED",
                        "SEEN",
                        "CLICKED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The email was seen by the user.",
                        "A link was clicked."
                    ],
                    "type": "string"
                },
                "emailFormat": {
                    "enum": [
                        "EMAILFORMAT_UNSPECIFIED",
                        "HTML",
                        "AMP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "linkId": {
                    "description": "A client-provided ID that can be used to identify which link the user\nclicked in the email.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsBatchUpdateThreadStateRequest_BatchedUpdate": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData_NotificationsBatchUpdateThreadStateRequest_BatchedUpdate",
            "properties": {
                "analyticsInfo": {
                    "$ref": "NotificationsFrontendData__AnalyticsInfo",
                    "description": "Optional. Analytics information about the source of this update."
                },
                "threadStateUpdate": {
                    "$ref": "NotificationsFrontendDataCommon__ThreadStateUpdate",
                    "description": "Required. At least one field must be set.\nUpdates to the thread state of all the notification threads in\nversioned_identifier."
                },
                "versionedIdentifier": {
                    "description": "The set of threads to update and the versions at which they should\nbe updated, All of the thread_state_updates are applied to all the\nthreads.",
                    "items": {
                        "$ref": "NotificationsFrontendData__VersionedIdentifier"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsFetchMultiUserBadgeCountResponse_BadgeEntry": {
            "id": "NotificationsFrontendData_NotificationsFetchMultiUserBadgeCountResponse_BadgeEntry",
            "properties": {
                "badgeCount": {
                    "description": "Required. Badge count for the user that matches the obfuscated Gaia ID.",
                    "format": "int32",
                    "type": "integer"
                },
                "mask": {
                    "description": "Required.",
                    "format": "int64",
                    "type": "string"
                },
                "maskedObfuscatedGaiaId": {
                    "description": "Required. Calculated by a bitwise AND operation between  the given mask\nand the obfuscated Gaia ID of a user on the target - i.e.:\nmasked_obfuscated_gaia_id = obfuscated_gaia_id & mask",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsFetchStoredTargetsResponse_StoredTarget": {
            "description": "Next tag: 6",
            "id": "NotificationsFrontendData_NotificationsFetchStoredTargetsResponse_StoredTarget",
            "properties": {
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. Render information that this target was stored with."
                },
                "selectionToken": {
                    "description": "Optional. Tokens that this target was stored with.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsFetchUserSubscriptionResponse_UserSubscription": {
            "id": "NotificationsFrontendData_NotificationsFetchUserSubscriptionResponse_UserSubscription",
            "properties": {
                "target": {
                    "description": "This will be populated if the user had targets specified in their topic\nsubscriptions.",
                    "items": {
                        "$ref": "NotificationsFrontendData__Target"
                    },
                    "type": "array"
                },
                "topic": {
                    "description": "The topic the user is subscribed to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsMultiLoginUpdateRequest_UserRegistration": {
            "id": "NotificationsFrontendData_NotificationsMultiLoginUpdateRequest_UserRegistration",
            "properties": {
                "oauthToken": {
                    "description": "Required. The OAuth token to identify the user.\nAndroid clients can obtain the token via GcoreGoogleAuthUtil.\niOS clients can obtain the token via SSOAuth.\nSee go/oauth2-developer-guide for more information.",
                    "type": "string"
                },
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. Context to assist with rendering for this target."
                },
                "selectionToken": {
                    "description": "Optional. Selection tokens to store against the target.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timeToLiveSecs": {
                    "description": "Optional. The number of seconds the target should be stored in Chime.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsMultiLoginUpdateResponse_RegistrationResult": {
            "id": "NotificationsFrontendData_NotificationsMultiLoginUpdateResponse_RegistrationResult",
            "properties": {
                "status": {
                    "$ref": "Util__StatusProto",
                    "description": "Required. Status of the outcome of this operation."
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "The modified target after Chime subscribes the client with the various\nendpoints. This field is set if the operation succeeded."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsStoreTargetRequest_UserRegistrationInfo": {
            "description": "Next tag: 3",
            "id": "NotificationsFrontendData_NotificationsStoreTargetRequest_UserRegistrationInfo",
            "properties": {
                "authToken": {
                    "description": "Required. The auth token to identify the user.",
                    "type": "string"
                },
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. Information made available to the renderer at render time.\nThis field will override the parent `render_context` if specified."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_NotificationsStoreTargetResponse_UserRegistrationResult": {
            "description": "Next tag: 3",
            "id": "NotificationsFrontendData_NotificationsStoreTargetResponse_UserRegistrationResult",
            "properties": {
                "apnsRegistration": {
                    "$ref": "NotificationsFrontendData__ApnsRegistration",
                    "description": "Deprecated. Use the 'target' field instead.\nOptional. APNS registration that will be returned if the store target\nrequest was also used to register the iOS device token in the\nAPNSDeviceRegistryService.\nThis field will be empty if the registration failed."
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The modified target after Chime subscribes the client with\nthe various endpoints."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_RegistrationMetadata_GcmRegistrationData": {
            "id": "NotificationsFrontendData_RegistrationMetadata_GcmRegistrationData",
            "properties": {
                "registrationId": {
                    "description": "Required. The registration ID of the device. The device obtains this\nID when it registers for GCM/FCM.",
                    "type": "string"
                },
                "senderProjectId": {
                    "description": "Required. The project ID obtained from http://pantheon/.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_RegistrationMetadata_TopicRegistrationData": {
            "id": "NotificationsFrontendData_RegistrationMetadata_TopicRegistrationData",
            "properties": {
                "topic": {
                    "description": "Required. At least one topic is required.\nList of topics to subscribe to (or unsubscribe from) in Chime when\nregistering (or unregistering) the target.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_RenderContextDeviceInfo_Channel": {
            "description": "Channels are specific to Android devices and supported from Android O or\nlater (SDK version 26). For details see - go/notification-channels.",
            "id": "NotificationsFrontendData_RenderContextDeviceInfo_Channel",
            "properties": {
                "channelId": {
                    "description": "Required. The ID of the channel.",
                    "type": "string"
                },
                "groupId": {
                    "description": "The Channel group this channel belongs to.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getId()",
                    "type": "string"
                },
                "importance": {
                    "enum": [
                        "IMPORTANCE_UNSPECIFIED",
                        "IMPORTANCE_NONE",
                        "IMPORTANCE_DEFAULT",
                        "IMPORTANCE_HIGH",
                        "IMPORTANCE_LOW",
                        "IMPORTANCE_MAX",
                        "IMPORTANCE_MIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_RenderContextDeviceInfo_ChannelGroup": {
            "id": "NotificationsFrontendData_RenderContextDeviceInfo_ChannelGroup",
            "properties": {
                "channelGroupState": {
                    "enum": [
                        "CHANNEL_GROUP_UNKNOWN",
                        "ALLOWED",
                        "BANNED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "groupId": {
                    "description": "The Channel group this channel belongs to.\nhttps://developer.android.com/reference/android/app/NotificationChannelGroup.html#getId()",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData_RenderContext_DeviceInfo": {
            "description": "Optional. Information about the target device.",
            "id": "NotificationsFrontendData_RenderContext_DeviceInfo",
            "properties": {
                "androidSdkVersion": {
                    "description": "Optional. Android specific - The Android SDK version.",
                    "format": "int32",
                    "type": "integer"
                },
                "appBlockState": {
                    "description": "Optional. The App Block State.",
                    "enum": [
                        "APP_BLOCK_STATE_UNKNOWN",
                        "ALLOWED",
                        "BANNED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "appVersion": {
                    "description": "Optional. Version of the app.",
                    "type": "string"
                },
                "channel": {
                    "description": "Optional. The list of channel IDs that the client application supports.",
                    "items": {
                        "$ref": "NotificationsFrontendData_RenderContextDeviceInfo_Channel"
                    },
                    "type": "array"
                },
                "channelGroup": {
                    "description": "Optional. The list of ChannelGroup that the client application supports.",
                    "items": {
                        "$ref": "NotificationsFrontendData_RenderContextDeviceInfo_ChannelGroup"
                    },
                    "type": "array"
                },
                "deviceManufacturer": {
                    "description": "Optional. The name of device manufacturer.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "Optional. The name set by the user for their device.",
                    "type": "string"
                },
                "devicePixelRatio": {
                    "description": "Optional. The device pixel ratio of the device receiving the\nnotification.",
                    "format": "float",
                    "type": "number"
                },
                "osBuildId": {
                    "description": "Optional. OS Build ID.",
                    "type": "string"
                },
                "osModel": {
                    "description": "Optional. OS user visible model name.",
                    "type": "string"
                },
                "osVersion": {
                    "description": "Optional. Version of the host OS.",
                    "type": "string"
                },
                "sdkType": {
                    "description": "Optional. The type of SDK installed on the target device.",
                    "enum": [
                        "SDK_TYPE_UNSPECIFIED",
                        "CUSTOM",
                        "GUNS",
                        "CHIME",
                        "GUNS_GMSCORE",
                        "RAW_FCM_GMSCORE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sdkVersion": {
                    "description": "Optional. A version string associated with the SDK Type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__AnalyticsInfo": {
            "description": "General information about the origin of any modifications made to\nnotification threads. This will only be used for the purposes of analytics.",
            "id": "NotificationsFrontendData__AnalyticsInfo",
            "properties": {
                "androidInfo": {
                    "$ref": "NotificationsFrontendData_AnalyticsInfo_AndroidInfo"
                },
                "emailInfo": {
                    "$ref": "NotificationsFrontendData_AnalyticsInfo_EmailInfo"
                },
                "systemName": {
                    "description": "The name of some system that performed this operation that is not\nnecessarily a Target.",
                    "type": "string"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "The target which the notification was updated from."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__ApnsRegistration": {
            "description": "The registration used for sending APNS notifications and updating an APNS\ndevice token.",
            "id": "NotificationsFrontendData__ApnsRegistration",
            "properties": {
                "enabledTokenEffectiveTimestampUsec": {
                    "description": "Optional. If present, it is the timestamp (in microseconds since the epoch)\nwhen the device token of this registration was last enabled. It can be used\nto verify a device's validity if it was recently updated.",
                    "format": "int64",
                    "type": "string"
                },
                "registeredUserEffectiveTimestampUsec": {
                    "description": "Optional. If present, it is the timestamp (in microseconds since the epoch)\nwhen the user (and the optional SSO token) of this registration became\neffective. It can be used to determine if an SSO token stored is out of\ndate and should not be used.",
                    "format": "int64",
                    "type": "string"
                },
                "registration": {
                    "description": "Required. The actual registration token used to send a message.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__ApplePushAddress": {
            "description": "Used when the ChannelType is APPLE_PUSH.",
            "id": "NotificationsFrontendData__ApplePushAddress",
            "properties": {
                "apnsEnvironment": {
                    "description": "Required. The environment to use for APNS and APNSProxy.",
                    "enum": [
                        "APNS_ENVIRONMENT_UNKNOWN",
                        "SANDBOX",
                        "PROD"
                    ],
                    "enumDescriptions": [
                        "",
                        "The sandbox environment should be used for test/development builds.",
                        "The production environment should be used for production/release builds."
                    ],
                    "type": "string"
                },
                "applicationId": {
                    "description": "Required. This must correspond to a previously configured AppleApplication\nfor the client sending to this address.",
                    "type": "string"
                },
                "applicationIdSuffix": {
                    "description": "Optional. This suffix will be appended to the application_id with no\ndelimiter prior to handoff to APNS for delivery. It should be used to\nsend to DeviceManagementProfiles (whilst supporting Chime's\nAppleApplication config model).\nExample: To send to- com.apple.mgmt.External.xxxxxxxx\nConfigure \"com.apple.mgmt.External\" as an AppleApplication and use in the\napplication_id field. Use \".xxxxxxxx\" in this suffix field.",
                    "type": "string"
                },
                "deviceToken": {
                    "description": "Required if registration is not provided. The device token of the iOS\ndevice. If your input is something like 0xABCDEF, the first byte will\ncontain {AB}, the second {CD}, and the last one {EF}. To convert from a\nstring containing hex characters, you should use a function like:\ncom.google.wireless.push.apple.apnsproxy.clientutil.DeviceTokenUtil's\nfromHexString method.",
                    "format": "byte",
                    "type": "string"
                },
                "registration": {
                    "$ref": "NotificationsFrontendData__ApnsRegistration",
                    "description": "If provided, will ignore device_token. An APNS token registration provided\nfrom the ApnsProxy device registry."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__CustomEndpointDeliveryAddress": {
            "description": "Used when the ChannelType is CustomEndpoint.",
            "id": "NotificationsFrontendData__CustomEndpointDeliveryAddress",
            "properties": {
                "address": {
                    "description": "Required. Opaque string that provides information necessary to uniquely\nidentify the target to the client-implemented delivery handler.",
                    "type": "string"
                },
                "endpointTypeId": {
                    "description": "Required. The type ID of custom endpoint the notification is intended for.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__DeliveryAddress": {
            "description": "Channel-specific address information used for notification delivery.\nNOTE: Any update to this proto should be echoed in\nnotifications/frontend.data/target_log_util.h, and relevant changes should\nbe echoed in the DeliveryAddressLog proto.",
            "id": "NotificationsFrontendData__DeliveryAddress",
            "properties": {
                "appleAddress": {
                    "$ref": "NotificationsFrontendData__ApplePushAddress"
                },
                "customEndpointAddress": {
                    "$ref": "NotificationsFrontendData__CustomEndpointDeliveryAddress"
                },
                "emailAddress": {
                    "$ref": "NotificationsFrontendData__EmailAddress"
                },
                "gcmDeviceAddress": {
                    "$ref": "NotificationsFrontendData__GcmDevicePushAddress"
                },
                "gcmGroupAddress": {
                    "$ref": "NotificationsFrontendData__GcmGroupPushAddress"
                },
                "httpStreamingAddress": {
                    "$ref": "NotificationsFrontendData__HttpStreamingAddress"
                },
                "smsAddress": {
                    "$ref": "NotificationsFrontendData__SmsAddress"
                },
                "webPushAddress": {
                    "$ref": "NotificationsFrontendData__WebPushAddress",
                    "description": "Currently being implemented. Do not use in the meantime.\nFor more information: go/chime-web-push"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__EmailAddress": {
            "description": "Used when the ChannelType is EMAIL.",
            "id": "NotificationsFrontendData__EmailAddress",
            "properties": {
                "toAddress": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__FullPreferenceKey": {
            "description": "Represents a key to a preference for a target or user.",
            "id": "NotificationsFrontendData__FullPreferenceKey",
            "properties": {
                "dynamicPreferenceKey": {
                    "description": "Optional. If set, represents the preference stored by the key\n(preference_key, dynamic_preference_key).",
                    "type": "string"
                },
                "preferenceKey": {
                    "description": "Required. The key for the preference. May correspond to a PreferenceSpec\nconfig or the preference_key field in a NotificationType config.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__GcmDevicePushAddress": {
            "description": "Used when the ChannelType is GCM_DEVICE_PUSH.\nNote: One of registration_id or android_id is required.",
            "id": "NotificationsFrontendData__GcmDevicePushAddress",
            "properties": {
                "androidId": {
                    "description": "The Android ID of the device provided by Gservices. See more at\ngo/androidids. Note that this should not be set if {@link #device_user_id}\nis set to anything other than 0 (i.e: primary profile).",
                    "format": "int64",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Required. This must correspond to a previously configured GcmApplication\nfor the client sending to this address.",
                    "type": "string"
                },
                "deviceUserId": {
                    "description": "Optional - used for the multiple user feature on JB MR1+.\nThis is the short serial number used to identify multi-user on the device.\nNote that a device_user_id > 0 indicates that the Android ID above is\nlikely \"fake\", e.g. not usable to send a notification to a device (only\nusable to distinguish unique profile-on-devices).",
                    "format": "int64",
                    "type": "string"
                },
                "registrationId": {
                    "description": "The registration ID of the device. The device obtains this\nID when it registers for GCM. This is the preferred method of identifying\na device in Chime.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__GcmGroupPushAddress": {
            "description": "Used when the ChannelType is GCM_GROUP_PUSH.",
            "id": "NotificationsFrontendData__GcmGroupPushAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. See comment on GcmDevicePushAddress.application_id.",
                    "type": "string"
                },
                "gaiaId": {
                    "description": "Required.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__HttpStreamingAddress": {
            "description": "Used when the ChannelType is HTTP_STREAMING.",
            "id": "NotificationsFrontendData__HttpStreamingAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. This must correspond to a configured HttpStreamingApplication\nfor the client sending to this address.",
                    "type": "string"
                },
                "deviceId": {
                    "description": "The ID to uniquely identify the device.\nThis ID can be provided by the client. If it's empty, then Chime will\ngenerate a random ID and return it to the client.",
                    "type": "string"
                },
                "refreshRegistrationId": {
                    "description": "Optional. If set to true in NotificationsStoreTargetRequest, Chime will\nask FCM for a new registration ID and update the existing stored target\nto use the new ID instead.",
                    "type": "boolean"
                },
                "registrationId": {
                    "description": "The FCM registration ID that can be used to send notifications to this\ndevice. This ID is generated by FCM and populated by Chime. Clients do not\npopulate this field themselves.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__Notification": {
            "id": "NotificationsFrontendData__Notification",
            "properties": {
                "clientId": {
                    "description": "Required. Identifies the Chime client that created this notification. The\nvalue of this field must correspond to a previously configured client.",
                    "type": "string"
                },
                "externalId": {
                    "description": "Optional. Along with the above client_id, uniquely identifies this\nnotification within Chime. This field may also be used for deduplication in\nthe NotifyUser and NotifyGroup APIs. If it is not provided in the notify\nrequest, Chime will generate an ID for this notification.\n\nIMPORTANT: This string may be sent to the user, included in logs and\ndebugging tools - do not expose any sensitive content: gaia ids, internal\nproduct names, credit card numbers, etc.\n\nMust be no longer than 32 characters.",
                    "type": "string"
                },
                "payload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Optional. Arbitrary payload to be delivered. If this notification is\npre-rendered then populate rendered_message instead. Otherwise this payload\nwill be passed to your client's renderer to construct the final messages\nfor delivery. Either payload or rendered_message must be provided.",
                    "type": "object"
                },
                "threadId": {
                    "description": "Optional. Can be used to thread this notification with other related\nnotifications of the same type. If left blank the value of this field will\ndefault to the same value as the external_id.\n\nIMPORTANT: This string may be sent to the user, included in logs and\ndebugging tools - do not expose any sensitive content: gaia ids, internal\nproduct names, credit card numbers, etc.",
                    "type": "string"
                },
                "typeId": {
                    "description": "Required. Identifies the type of this notification within Chime. The value\nof this field must correspond to a previously configured type for the above\nclient_id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsAcknowledgeDeliveriesRequest": {
            "id": "NotificationsFrontendData__NotificationsAcknowledgeDeliveriesRequest",
            "properties": {
                "analyticsInfo": {
                    "$ref": "NotificationsFrontendData__AnalyticsInfo",
                    "description": "Optional. Analytics information about the source of this ack."
                },
                "clientId": {
                    "description": "Required. The client who is acking these threads.",
                    "type": "string"
                },
                "versionedIdentifier": {
                    "description": "The set of threads that reached the device and the versions at which they\nshould be considered acked, The delivery ack is applied to all the threads.\nAt least one versioned_identified is required.",
                    "items": {
                        "$ref": "NotificationsFrontendData__VersionedIdentifier"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsAcknowledgeDeliveriesResponse": {
            "id": "NotificationsFrontendData__NotificationsAcknowledgeDeliveriesResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsBatchUpdateThreadStateRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsBatchUpdateThreadStateRequest",
            "properties": {
                "batchedUpdate": {
                    "description": "Required. Data necessary for a single UpdateThreadState call.\nAt least one batched update must be set.",
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsBatchUpdateThreadStateRequest_BatchedUpdate"
                    },
                    "type": "array"
                },
                "clientId": {
                    "description": "Required. The client who owns the notification.",
                    "type": "string"
                },
                "deliveryProtocol": {
                    "description": "FOR INTERNAL CHIME USE ONLY.\nIndicates how this request was delivered to the server, in order to\nevaluate the reliability of experimental delivery protocols.",
                    "enum": [
                        "DELIVERED_BY_PROTOCOL_DEFAULT",
                        "HTTP_CONTROL",
                        "FCM_UPSTREAM"
                    ],
                    "enumDescriptions": [
                        "Normal HTTP delivery (non-control).",
                        "Normal HTTP delivery, but in control group experiment.",
                        "Delivered by FCM upstream experiment."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsBatchUpdateThreadStateResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsBatchUpdateThreadStateResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsCountThreadsRequest": {
            "description": "Next tag: 5",
            "id": "NotificationsFrontendData__NotificationsCountThreadsRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who sent the notification.",
                    "type": "string"
                },
                "targetMetadata": {
                    "$ref": "NotificationsFrontendData__TargetMetadata",
                    "description": "Required. Metadata of the target that is performing the fetch."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsCountThreadsResponse": {
            "description": "Next tag: 3",
            "id": "NotificationsFrontendData__NotificationsCountThreadsResponse",
            "properties": {
                "count": {
                    "description": "Number of new notifications for this client and target.",
                    "format": "int64",
                    "type": "string"
                },
                "latestVersion": {
                    "description": "Latest notification version.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsCreateUserSubscriptionRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsCreateUserSubscriptionRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns this target data.",
                    "type": "string"
                },
                "target": {
                    "description": "Optional. The explicit targets to subscribe with.",
                    "items": {
                        "$ref": "NotificationsFrontendData__Target"
                    },
                    "type": "array"
                },
                "topic": {
                    "description": "Required. At leaste one topic must be set. The topic names to subscribe to.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsCreateUserSubscriptionResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsCreateUserSubscriptionResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsDeleteUserSubscriptionRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsDeleteUserSubscriptionRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns this target data.",
                    "type": "string"
                },
                "target": {
                    "description": "If N targets are specified (and N > 0), then N subscriptions are deleted,\nfor each of the user + target combinations; multiple requests can be made\nwith a single target or a request with multiple targets is also valid.",
                    "items": {
                        "$ref": "NotificationsFrontendData__Target"
                    },
                    "type": "array"
                },
                "topic": {
                    "description": "Required. At leaste one topic must be set. The topic names to unsubscribe\nfrom.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsDeleteUserSubscriptionResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsDeleteUserSubscriptionResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsDemoNotifyTopicRequest": {
            "description": "A datakey solely used for demoing the capability of Chime HTTP Streaming and\nNotifyTopic.",
            "id": "NotificationsFrontendData__NotificationsDemoNotifyTopicRequest",
            "properties": {
                "payload": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsDemoNotifyTopicResponse": {
            "id": "NotificationsFrontendData__NotificationsDemoNotifyTopicResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchLatestThreadsRequest": {
            "description": "Next tag: 9",
            "id": "NotificationsFrontendData__NotificationsFetchLatestThreadsRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns the notification.",
                    "type": "string"
                },
                "maxNotificationThreads": {
                    "description": "Optional. The maximum number of notification threads to return in\nthe response (max 100). If left blank this will default to 100.",
                    "format": "int64",
                    "type": "string"
                },
                "pagingVersion": {
                    "description": "Optional. A version from the previous fetch indicating the location to\nbegin returning notifications from.",
                    "format": "int64",
                    "type": "string"
                },
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. The render context for this request.\nIf unspecified Chime will try to fetch this information based on target."
                },
                "targetMetadata": {
                    "$ref": "NotificationsFrontendData__TargetMetadata",
                    "description": "Required. Metadata of the target that is performing the fetch."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchLatestThreadsResponse": {
            "description": "Next tag: 8",
            "id": "NotificationsFrontendData__NotificationsFetchLatestThreadsResponse",
            "properties": {
                "notificationThread": {
                    "description": "NotificationThreads in descending order of their most recently created\nnotification.",
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon__FrontendNotificationThread"
                    },
                    "type": "array"
                },
                "pagingVersion": {
                    "description": "This can be passed in a subsequent FetchLatestThreadsRequest to continue to\nfetch.",
                    "format": "int64",
                    "type": "string"
                },
                "resultExhausted": {
                    "description": "If true, this is the last page.",
                    "type": "boolean"
                },
                "syncVersion": {
                    "description": "This sync version can be used to synchronize a database that has\npreviously fetched for notifications. To use this version simply pass\nit into a FetchUpdatedThreadsRequest to get the changes to\nnotification threads since this fetch. This will only be returned to\nFetchLatestThreadsRequests that do not specify a paging_token.\nThis version is long-lived.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchMultiUserBadgeCountRequest": {
            "id": "NotificationsFrontendData__NotificationsFetchMultiUserBadgeCountRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client_id.",
                    "type": "string"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The target where a badge count is to be displayed."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchMultiUserBadgeCountResponse": {
            "id": "NotificationsFrontendData__NotificationsFetchMultiUserBadgeCountResponse",
            "properties": {
                "badgeCountForRequester": {
                    "description": "Required. The badge count for the initiating user and target.",
                    "format": "int32",
                    "type": "integer"
                },
                "badges": {
                    "description": "Required. An entry is present for each user on the target which is known to\nthe server. This will be ordered by the un-masked obfuscated_gaia_id of the\nmatching user (ascending).",
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsFetchMultiUserBadgeCountResponse_BadgeEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchStoredTargetsRequest": {
            "description": "Next tag: 2",
            "id": "NotificationsFrontendData__NotificationsFetchStoredTargetsRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns this registration.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchStoredTargetsResponse": {
            "description": "Next tag: 2",
            "id": "NotificationsFrontendData__NotificationsFetchStoredTargetsResponse",
            "properties": {
                "storedTarget": {
                    "description": "There will be at most one StoredTarget returned for each target.",
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsFetchStoredTargetsResponse_StoredTarget"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchTargetGroupPreferencesRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsFetchTargetGroupPreferencesRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client_id for the preferences to be fetched.",
                    "type": "string"
                },
                "preferenceKey": {
                    "description": "The preference_keys for the preferences to be fetched. If none are\nspecified, will fetch the preferences for every preference_key specified\nin this client's NotificationType config.",
                    "items": {
                        "$ref": "NotificationsFrontendData__FullPreferenceKey"
                    },
                    "type": "array"
                },
                "targetGroupId": {
                    "description": "Required. The target group stored against the preferences to be fetched.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchTargetGroupPreferencesResponse": {
            "description": "Next tag: 3",
            "id": "NotificationsFrontendData__NotificationsFetchTargetGroupPreferencesResponse",
            "properties": {
                "preferenceResult": {
                    "description": "The preferences calculated from any preference explicitly stored for this\nuser and target group and the behaviors in the PreferenceSpecs associated\nwith the given preference_keys. Calculated with the caveat that clients may\nhave underlying user/target or target preferences that override this\nresult.",
                    "items": {
                        "$ref": "NotificationsFrontendData__PreferenceResult"
                    },
                    "type": "array"
                },
                "targetGroupId": {
                    "description": "The target group associated with the provided preference results. Provided\nto facilitate Wiz Data annotations.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchTargetPreferencesByTokenRequest": {
            "id": "NotificationsFrontendData__NotificationsFetchTargetPreferencesByTokenRequest",
            "properties": {
                "chimeAuthToken": {
                    "description": "Required. The base64 encoded and encrypted ChimeAuthPreferenceToken",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchTargetPreferencesByTokenResponse": {
            "id": "NotificationsFrontendData__NotificationsFetchTargetPreferencesByTokenResponse",
            "properties": {
                "clientId": {
                    "description": "The client id these preferences refer to. Used for client customization.",
                    "type": "string"
                },
                "preferenceResult": {
                    "description": "The effective preferences for the given target and preference_keys. This\ntakes into account both explicitly stored preferences and the behavior in\nthe PreferenceSpecs for the preference_keys.",
                    "items": {
                        "$ref": "NotificationsFrontendData__PreferenceResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchTargetPreferencesRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsFetchTargetPreferencesRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client_id for the preference to be fetched.",
                    "type": "string"
                },
                "preferenceKey": {
                    "description": "The preference_keys for the preferences to be fetched.",
                    "items": {
                        "$ref": "NotificationsFrontendData__FullPreferenceKey"
                    },
                    "type": "array"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The target for the preference to be fetched."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchTargetPreferencesResponse": {
            "description": "Next tag: 2",
            "id": "NotificationsFrontendData__NotificationsFetchTargetPreferencesResponse",
            "properties": {
                "preferenceResult": {
                    "description": "The effective preferences for the given target and preference_keys. This\ntakes into account both explicitly stored preferences and the behavior in\nthe PreferenceSpecs for the preference_keys.",
                    "items": {
                        "$ref": "NotificationsFrontendData__PreferenceResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchThreadsByIdRequest": {
            "description": "Next tag: 9",
            "id": "NotificationsFrontendData__NotificationsFetchThreadsByIdRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns the notification.",
                    "type": "string"
                },
                "gunsFields": {
                    "$ref": "NotificationsFrontendDataCommon__GunsFields",
                    "description": "Optional. The message that contains the GUNS specific information for\nfetching. This is used for migration\nNote: INTERNAL USE ONLY. CLIENTS DO NOT USE."
                },
                "identifier": {
                    "description": "Required. The set of thread identifiers to lookup.  Format is a string\ncontaining the type and thread ID information, composed by\ncs/notifications/backend/common/thread_identifier_util.h. Clients should\ntreat the string as opaque.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. The render context for this request.\nIf unspecified Chime will try to fetch this information based on target."
                },
                "targetMetadata": {
                    "$ref": "NotificationsFrontendData__TargetMetadata",
                    "description": "Required. Metadata of the target that is performing the fetch."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchThreadsByIdResponse": {
            "description": "Next tag: 3",
            "id": "NotificationsFrontendData__NotificationsFetchThreadsByIdResponse",
            "properties": {
                "notificationThread": {
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon__FrontendNotificationThread"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchUpdatedThreadsRequest": {
            "description": "Next tag: 11",
            "id": "NotificationsFrontendData__NotificationsFetchUpdatedThreadsRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns the notification.",
                    "type": "string"
                },
                "knownThreads": {
                    "description": "Optional. Threads that are known by the client before calling this RPC.\nThese threads will be removed from the response if the specified version\nmatches the version in Chime storage.",
                    "items": {
                        "$ref": "NotificationsFrontendData__VersionedIdentifier"
                    },
                    "type": "array"
                },
                "maxNotificationThreads": {
                    "description": "Optional. The maximum number of notification threads to return in\nthe response. If left blank this will default to some internal server\nvalue.",
                    "format": "int64",
                    "type": "string"
                },
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. The render context for this request.\nIf unspecified Chime will try to fetch this information based on target."
                },
                "renderingBehavior": {
                    "enum": [
                        "RENDERING_BEHAVIOR_UNKNOWN",
                        "RENDER_ALL",
                        "SKIP_RENDERING_READ_STATE_CHANGES",
                        "NONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Renders all thread.",
                        "Only renders threads with new notifications.",
                        "Rendering is skipped for all threads."
                    ],
                    "type": "string"
                },
                "syncVersion": {
                    "description": "Optional. The previous version in time that this target has synced up to.\nReturned in either a FetchLatestThreadsResponse or a\nFetchUpdatedThreadsResponse. If omitted, will start at the oldest\nnotification still in storage.",
                    "format": "int64",
                    "type": "string"
                },
                "targetMetadata": {
                    "$ref": "NotificationsFrontendData__TargetMetadata",
                    "description": "Required. Metadata of the target that is performing the fetch."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchUpdatedThreadsResponse": {
            "description": "Next tag: 6",
            "id": "NotificationsFrontendData__NotificationsFetchUpdatedThreadsResponse",
            "properties": {
                "notificationThread": {
                    "description": "NotificationThreads in ascending order of their most recent change of\nany kind.",
                    "items": {
                        "$ref": "NotificationsFrontendDataCommon__FrontendNotificationThread"
                    },
                    "type": "array"
                },
                "oldestNotificationVersion": {
                    "description": "The oldest notification thread version. Clients can use it to cleanup\nlocally stored threads.",
                    "format": "int64",
                    "type": "string"
                },
                "syncVersion": {
                    "description": "The subsequent sync version to use in the next\nFetchUpdatedThreadsRequest.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchUserPreferencesRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsFetchUserPreferencesRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client_id for the preference to be fetched.",
                    "type": "string"
                },
                "preferenceKey": {
                    "description": "The preference_keys for the preferences to be fetched. If none are\nspecified, will fetch the preferences for every preference_key specified\nin this client's NotificationType config.",
                    "items": {
                        "$ref": "NotificationsFrontendData__FullPreferenceKey"
                    },
                    "type": "array"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Optional. If provided, this will fetch the above preference keys for the\ncombination of user and this target.\nSee http://g3doc/notifications/g3doc/dev/preferences for more information\non how user/target preferences are used with user-only and target-only\npreferences."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchUserPreferencesResponse": {
            "description": "Next tag: 2",
            "id": "NotificationsFrontendData__NotificationsFetchUserPreferencesResponse",
            "properties": {
                "preferenceResult": {
                    "description": "The preferences calculated from any preference explicitly stored for this\nuser and the behaviors in the PreferenceSpecs associated with the given\npreference_keys.",
                    "items": {
                        "$ref": "NotificationsFrontendData__PreferenceResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchUserSubscriptionRequest": {
            "description": "Next tag: 2",
            "id": "NotificationsFrontendData__NotificationsFetchUserSubscriptionRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The Chime client id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchUserSubscriptionResponse": {
            "description": "Next tag: 2",
            "id": "NotificationsFrontendData__NotificationsFetchUserSubscriptionResponse",
            "properties": {
                "userSubscription": {
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsFetchUserSubscriptionResponse_UserSubscription"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchVersionRequest": {
            "id": "NotificationsFrontendData__NotificationsFetchVersionRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client to fetch version for.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsFetchVersionResponse": {
            "id": "NotificationsFrontendData__NotificationsFetchVersionResponse",
            "properties": {
                "version": {
                    "description": "The latest notifications version for the requested client.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsMultiLoginUpdateRequest": {
            "description": "The MultiLoginUpdate RPC Stores a target for multiple Gaia users in a single\nrequest, and Implicitly removes the target for all other Gaia users not\nspecified in the request.\nThis method does NOT accept EUC. Instead, EUC will be generated from the\nOAuth tokens in the requests. Failure for individual registration will NOT\nfail the entire RPC. Instead, the outcome for each registration is returned\nin the response.\n\nNext tag: 4",
            "id": "NotificationsFrontendData__NotificationsMultiLoginUpdateRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns this target data.",
                    "type": "string"
                },
                "registrations": {
                    "description": "NOTICE: All other Gaia users not specified in this field will be implicitly\nunregistered for this target.",
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsMultiLoginUpdateRequest_UserRegistration"
                    },
                    "type": "array"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The target to register or unregister."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsMultiLoginUpdateResponse": {
            "description": "Next tag: 2",
            "id": "NotificationsFrontendData__NotificationsMultiLoginUpdateResponse",
            "properties": {
                "registrationResults": {
                    "description": "Optional. The list of registration results for each user.\nThe order of the results is the same as the `registration` field in the\nrequest.",
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsMultiLoginUpdateResponse_RegistrationResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsNotifySelfRequest": {
            "description": "Next tag: 5",
            "id": "NotificationsFrontendData__NotificationsNotifySelfRequest",
            "properties": {
                "gunsCoalescingKey": {
                    "type": "string"
                },
                "notification": {
                    "$ref": "NotificationsFrontendData__Notification",
                    "description": "Required. The notification to send."
                },
                "sendAsGuns": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsNotifySelfResponse": {
            "description": "Next tag: 3",
            "id": "NotificationsFrontendData__NotificationsNotifySelfResponse",
            "properties": {
                "externalId": {
                    "description": "Required. The external ID of the notification in the request.\nIf it was not provided in the request, Chime will generate an ID.",
                    "type": "string"
                },
                "identifier": {
                    "description": "The identifier of the notification thread this notification is a part of.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsNotifyTargetRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsNotifyTargetRequest",
            "properties": {
                "notification": {
                    "$ref": "NotificationsFrontendData__Notification",
                    "description": "Required. Notification to deliver."
                },
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. RenderContext information to pass to a client renderer."
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. Target to notify."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsNotifyTargetResponse": {
            "description": "Next tag: 3",
            "id": "NotificationsFrontendData__NotificationsNotifyTargetResponse",
            "properties": {
                "externalId": {
                    "description": "Required. The external ID of the notification in the request.\nIf it was not provided in the request, Chime will generate an ID.",
                    "type": "string"
                },
                "identifier": {
                    "description": "The identifier of the notification thread this notification is a part of.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsRemoveTargetRequest": {
            "description": "Next tag: 5",
            "id": "NotificationsFrontendData__NotificationsRemoveTargetRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns this target data.",
                    "type": "string"
                },
                "registrationMetadata": {
                    "$ref": "NotificationsFrontendData__RegistrationMetadata",
                    "description": "Additional data required for un-registration.\nRequired - if the target is a GCM type."
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The target to remove."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsRemoveTargetResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsRemoveTargetResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetTargetGroupPreferencesRequest": {
            "description": "Next tag: 4",
            "id": "NotificationsFrontendData__NotificationsSetTargetGroupPreferencesRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client_id for the preference to be set.",
                    "type": "string"
                },
                "preferenceVersionTimestampUsec": {
                    "description": "Optional. A timestamp to be used to check if a newer preference already\nexists in storage. If a preference already exists with a timestamp greater\nthan that specified here, this request will not result in the preference\nbeing updated.\n\nIf this timestamp is set to 0 (or omitted) then the preference will always\nbe updated.",
                    "format": "int64",
                    "type": "string"
                },
                "targetGroupPreferenceEntry": {
                    "description": "At least one required. A set of target group, preference key and notify\npreference tuples to be stored for this user. Note that repeating\npreference keys for the same target group will fail the RPC. For\nconsistency we\u2019ve used the full PreferenceEntry proto, but note that\nTargetGroup Preferences do not currently support dynamic preference keys.\nIncluding a dynamic key will see InvalidArgument returned.\nNote that a blank preference key may be supplied to set a preference at a\nwhole-client level, but that can only be entered with the magic OGB\ntarget group.",
                    "items": {
                        "$ref": "NotificationsFrontendData__TargetGroupPreferenceEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetTargetGroupPreferencesResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsSetTargetGroupPreferencesResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetTargetPreferenceByTokenRequest": {
            "id": "NotificationsFrontendData__NotificationsSetTargetPreferenceByTokenRequest",
            "properties": {
                "chimeAuthToken": {
                    "description": "Required. The base64 encoded and encrypted ChimeAuthPreferenceToken",
                    "type": "string"
                },
                "preference": {
                    "description": "The preference that should be stored. Must not be PREFERENCE_UNSPECIFIED.",
                    "enum": [
                        "NOTIFY_PREFERENCE_UNKNOWN",
                        "NOTIFY",
                        "DROP"
                    ],
                    "enumDescriptions": [
                        "",
                        "If notifications of this key are sent for this client.",
                        "If notifications of this key are dropped for this client."
                    ],
                    "type": "string"
                },
                "preferenceEntry": {
                    "description": "Optional. Use this if setting multiple keys to different preferences.\nIf present, use this instead of NotifyPreference and the\nFullPreferenceKey stored in the token.",
                    "items": {
                        "$ref": "NotificationsFrontendData__PreferenceEntry"
                    },
                    "type": "array"
                },
                "preferenceVersionTimestampUsec": {
                    "description": "Optional. A timestamp to be used to check if a newer preference already\nexists in storage. If a preference already exists with a timestamp\ngreater than that specified here, this request will not result in the\npreference being updated.\n\nIf this timestamp is set to 0 (or omitted) then the preference will\nalways be updated.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetTargetPreferenceByTokenResponse": {
            "id": "NotificationsFrontendData__NotificationsSetTargetPreferenceByTokenResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetTargetPreferenceRequest": {
            "description": "Next tag: 5",
            "id": "NotificationsFrontendData__NotificationsSetTargetPreferenceRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client_id for the preference to be set.",
                    "type": "string"
                },
                "preferenceEntry": {
                    "description": "At least one required. A set of pairs of preference key to notify\npreference that will be stored for this user. Note that repeating\npreference keys will fail the RPC. Furthermore, including both a dynamic\npreference key and its parent preference key will fail the RPC (updates\nof this form need to be completed in multiple RPC calls).",
                    "items": {
                        "$ref": "NotificationsFrontendData__PreferenceEntry"
                    },
                    "type": "array"
                },
                "preferenceVersionTimestampUsec": {
                    "description": "Optional. A timestamp to be used to check if a newer preference already\nexists in storage. If a preference already exists with a timestamp greater\nthan that specified here, this request will not result in the preference\nbeing updated.\n\nIf this timestamp is set to 0 (or omitted) then the preference will always\nbe updated.",
                    "format": "int64",
                    "type": "string"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The target whose preference is to be set."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetTargetPreferenceResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsSetTargetPreferenceResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetUserPreferenceRequest": {
            "description": "Next tag: 5",
            "id": "NotificationsFrontendData__NotificationsSetUserPreferenceRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client_id for the preference to be set.",
                    "type": "string"
                },
                "preferenceEntry": {
                    "description": "At least one required. A set of pairs of preference key to notify\npreference that will be stored for this user. Note that repeating\npreference keys will fail the RPC. Furthermore, including both a dynamic\npreference key and its parent preference key will fail the RPC (updates\nof this form need to be completed in multiple RPC calls).",
                    "items": {
                        "$ref": "NotificationsFrontendData__PreferenceEntry"
                    },
                    "type": "array"
                },
                "preferenceVersionTimestampUsec": {
                    "description": "Optional. A timestamp to be used to check if a newer preference already\nexists in storage. If a preference already exists with a timestamp greater\nthan that specified here, this request will not result in the preference\nbeing updated.\n\nIf this timestamp is set to 0 (or omitted) then the preference will always\nbe updated.",
                    "format": "int64",
                    "type": "string"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Optional. If provided, this will set the above preference for the\ncombination of user and this target. The user-only preference will remain\nuntouched.\nSee http://g3doc/notifications/g3doc/dev/preferences for more information\non how user/target preferences are used with user-only and target-only\npreferences."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsSetUserPreferenceResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsSetUserPreferenceResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsStoreTargetRequest": {
            "description": "Next tag: 10",
            "id": "NotificationsFrontendData__NotificationsStoreTargetRequest",
            "properties": {
                "clientId": {
                    "description": "Required. The client who owns this target data.",
                    "type": "string"
                },
                "registrationMetadata": {
                    "$ref": "NotificationsFrontendData__RegistrationMetadata",
                    "description": "Additional data required for registration.\nRequired - if the target is a GCM type."
                },
                "renderContext": {
                    "$ref": "NotificationsFrontendData__RenderContext",
                    "description": "Optional. Information made available to the renderer at render time."
                },
                "selectionToken": {
                    "description": "Optional. The tokens that can be used to select this target during\nnotification delivery. selection_token is compared with TargetGroup\nselection_token to determine which targets to select. Not setting a\nselection_token explicitly implies that a device should only match\nTargetGroups with no selection_token specified.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The target to store."
                },
                "userRegistrationInfo": {
                    "description": "Optional. The list of users to register for.\nNOTE: The primary account (the account initating the request) should also\nbe included in this list if this field is used.",
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsStoreTargetRequest_UserRegistrationInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsStoreTargetResponse": {
            "description": "Next tag: 6",
            "id": "NotificationsFrontendData__NotificationsStoreTargetResponse",
            "properties": {
                "apnsRegistration": {
                    "$ref": "NotificationsFrontendData__ApnsRegistration",
                    "description": "Optional. APNS registration that will be returned if the store target\nrequest was also used to register the iOS device token in the\nAPNSDeviceRegistryService."
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target",
                    "description": "Required. The modified target after Chime subscribes the client with\nthe various endpoints."
                },
                "userRegistrationResult": {
                    "description": "Optional. The list of registration results for each user.\nThe order the results are the same as the `user_registration_info` field\nin the request.",
                    "items": {
                        "$ref": "NotificationsFrontendData_NotificationsStoreTargetResponse_UserRegistrationResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsUpdateAllThreadStatesRequest": {
            "description": "Next tag: 6",
            "id": "NotificationsFrontendData__NotificationsUpdateAllThreadStatesRequest",
            "properties": {
                "analyticsInfo": {
                    "$ref": "NotificationsFrontendData__AnalyticsInfo",
                    "description": "Optional. Analytics information about the source of this update."
                },
                "clientId": {
                    "description": "Required. The client who owns the notification.",
                    "type": "string"
                },
                "syncVersion": {
                    "description": "All notifications that have a latest modified version older than or same as\nthis version will have their thread state updated as necessary.",
                    "format": "int64",
                    "type": "string"
                },
                "targetMetadata": {
                    "$ref": "NotificationsFrontendData__TargetMetadata",
                    "description": "Required. Metadata of the target that is performing the update."
                },
                "threadStateUpdate": {
                    "$ref": "NotificationsFrontendDataCommon__ThreadStateUpdate",
                    "description": "Required. At least one field must be set.\nUpdates to the thread state of the notification thread."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsUpdateAllThreadStatesResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsUpdateAllThreadStatesResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsUpdateThreadStateByTokenRequest": {
            "id": "NotificationsFrontendData__NotificationsUpdateThreadStateByTokenRequest",
            "properties": {
                "threadStateUpdate": {
                    "$ref": "NotificationsFrontendDataCommon__ThreadStateUpdate",
                    "description": "Optional. If the encoded token for {@code UpdateThreadStateToken} has\n{@code ThreadStateUpdate}, then this value will be discarded.\n\nUpdates to the thread state of all the notification threads in the\nversioned_identifier list encrypted in the token."
                },
                "token": {
                    "description": "Required. The base64-encoded-keystore-encrypted UpdateThreadStateToken.\nSee google3/notifications/backend/proto/api/sync/service.proto",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsUpdateThreadStateByTokenResponse": {
            "id": "NotificationsFrontendData__NotificationsUpdateThreadStateByTokenResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsUpdateThreadStateRequest": {
            "description": "Next tag: 5",
            "id": "NotificationsFrontendData__NotificationsUpdateThreadStateRequest",
            "properties": {
                "analyticsInfo": {
                    "$ref": "NotificationsFrontendData__AnalyticsInfo",
                    "description": "Optional. Analytics information about the source of this update."
                },
                "clientId": {
                    "description": "Required. The client who owns the notification.",
                    "type": "string"
                },
                "threadStateUpdate": {
                    "$ref": "NotificationsFrontendDataCommon__ThreadStateUpdate",
                    "description": "Required. At least one field must be set.\nUpdates to the thread state of all the notification threads in\nversioned_identifier."
                },
                "versionedIdentifier": {
                    "description": "The set of threads to update and the versions at which they should\nbe updated, All of the thread_state_updates are applied to all the threads.",
                    "items": {
                        "$ref": "NotificationsFrontendData__VersionedIdentifier"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__NotificationsUpdateThreadStateResponse": {
            "description": "Next tag: 1",
            "id": "NotificationsFrontendData__NotificationsUpdateThreadStateResponse",
            "properties": {},
            "type": "object"
        },
        "NotificationsFrontendData__PreferenceEntry": {
            "description": "Represents a preference to be set for a target or user.",
            "id": "NotificationsFrontendData__PreferenceEntry",
            "properties": {
                "preference": {
                    "description": "Required. The preference that should be stored for this User and\npreference_key. Must not be PREFERENCE_UNSPECIFIED.",
                    "enum": [
                        "NOTIFY_PREFERENCE_UNKNOWN",
                        "NOTIFY",
                        "DROP"
                    ],
                    "enumDescriptions": [
                        "",
                        "If notifications of this key are sent for this client.",
                        "If notifications of this key are dropped for this client."
                    ],
                    "type": "string"
                },
                "preferenceKey": {
                    "$ref": "NotificationsFrontendData__FullPreferenceKey",
                    "description": "Required. The preference_key to be set."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__PreferenceResult": {
            "description": "Represents the current state of a preference for a target or user. This is\nthe combination of any explicitly stored preference via a Set*Preferences\ncall and the behavior specified in the PreferenceSpec for the given\npreference_key.",
            "id": "NotificationsFrontendData__PreferenceResult",
            "properties": {
                "preference": {
                    "description": "The Notify or Drop decision that would be made for a given target/user and\npreference_key.",
                    "enum": [
                        "NOTIFY_PREFERENCE_UNKNOWN",
                        "NOTIFY",
                        "DROP"
                    ],
                    "enumDescriptions": [
                        "",
                        "If notifications of this key are sent for this client.",
                        "If notifications of this key are dropped for this client."
                    ],
                    "type": "string"
                },
                "preferenceDescription": {
                    "description": "Optional and can only be present if using a ChimeCustomPreferencesService.\nA translated description for this preference key. If present, it\nwill be used as a description in the manage preferences pages. If\nnot present and no soy template is set up for this preference, the\npreference will not be shown.",
                    "type": "string"
                },
                "preferenceKey": {
                    "$ref": "NotificationsFrontendData__FullPreferenceKey",
                    "description": "The preference_key this preference is for."
                },
                "preferenceVersionTimestampUsec": {
                    "description": "The timestamp when this preference was last updated in storage. This will\nbe set to 0 if the preference was not explicitly stored and instead was\ngenerated from defaults.",
                    "format": "int64",
                    "type": "string"
                },
                "source": {
                    "description": "The reasoning behind how the preference was calculated.",
                    "enum": [
                        "SOURCE_UNSPECIFIED",
                        "EXPLICIT_PREFERENCE",
                        "BEHAVIOR_DEFAULT",
                        "BEHAVIOR_OVERRIDE",
                        "REMOVED_PREFERENCE",
                        "NON_DYNAMIC_EXPLICIT_PREFERENCE"
                    ],
                    "enumDescriptions": [
                        "Shouldn't ever be set.",
                        "An explicit preference was stored and respected.",
                        "No explicit preference was stored, so the default as defined from the\nPreferenceSpec associated with the preference_key was used.",
                        "The behavior specified in the PreferenceSpec overrode any stored\npreference. The existence of a stored preference was not even checked.",
                        "An explicit preference was deleted, so the default as defined by the\nPreferenceSpec associated with the preference_key was used.",
                        "An explicit dynamic preference was requested but not found, so the\nexplicitly set preference with the given preference_key was used."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__RegistrationMetadata": {
            "description": "Additional information for a specific target required for the\nregistration/unregistration to other services (e.g: GCM).",
            "id": "NotificationsFrontendData__RegistrationMetadata",
            "properties": {
                "gcmRegistrationData": {
                    "$ref": "NotificationsFrontendData_RegistrationMetadata_GcmRegistrationData"
                },
                "topicRegistrationData": {
                    "$ref": "NotificationsFrontendData_RegistrationMetadata_TopicRegistrationData"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__RenderContext": {
            "description": "Rendering context information for a specific target.\nValidation will fail for RenderContexts larger than 10kb.",
            "id": "NotificationsFrontendData__RenderContext",
            "properties": {
                "appLanguageCode": {
                    "description": "Optional. The App language/locale of the notification as overwritten by\nthe App. Must be in BCP 47.\nSee https://g3doc.corp.google.com/i18n/identifiers/g3doc/language-tags.md\nfor more information.\nFor example: \"xx-YY\" where xx is the language subtype and YY is the region\nsubtag.",
                    "type": "string"
                },
                "deviceInfo": {
                    "$ref": "NotificationsFrontendData_RenderContext_DeviceInfo"
                },
                "devicePayload": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Optional. A client-specified opaque payload. This field is not logged.",
                    "type": "object"
                },
                "languageCode": {
                    "description": "Optional. The language of the notification recipient in BCP 47.\nSee https://g3doc.corp.google.com/i18n/identifiers/g3doc/language-tags.md\nfor more information.\nFor example: \"xx-YY\" where xx is the language subtype and YY is the region\nsubtag.",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Optional. The English variant of the Google canonical timezone identifier.\nSee http://cs/java/com/google/i18n/identifiers/TimeZoneId.java for a\nlisting of timezones to i18n team maintained int code representing the\ntimezones.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__SmsAddress": {
            "description": "Used when the ChannelType is SMS.",
            "id": "NotificationsFrontendData__SmsAddress",
            "properties": {
                "phoneNumber": {
                    "description": "Required. International SMS number, beginning with + and containing only\ndigits. (Ex: +1234567890)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__Target": {
            "description": "Delivery information for a specific target.",
            "id": "NotificationsFrontendData__Target",
            "properties": {
                "channelType": {
                    "description": "Required.",
                    "enum": [
                        "CHANNEL_UNKNOWN",
                        "EMAIL",
                        "APPLE_PUSH",
                        "GCM_DEVICE_PUSH",
                        "GCM_GROUP_PUSH",
                        "SMS",
                        "CUSTOM_ENDPOINT",
                        "WEB_PUSH",
                        "MATCHSTICK",
                        "HTTP_STREAMING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "deliveryAddress": {
                    "$ref": "NotificationsFrontendData__DeliveryAddress",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__TargetGroupPreferenceEntry": {
            "description": "Represents a target group preference to be set for a user.",
            "id": "NotificationsFrontendData__TargetGroupPreferenceEntry",
            "properties": {
                "preferenceEntry": {
                    "$ref": "NotificationsFrontendData__PreferenceEntry",
                    "description": "Required. The preference key and NotifyPreference to use."
                },
                "targetGroupId": {
                    "description": "Required. The target group for this preference.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__TargetMetadata": {
            "description": "Information for a specific target required by various sync api.",
            "id": "NotificationsFrontendData__TargetMetadata",
            "properties": {
                "applicationId": {
                    "description": "This must correspond to a previously configured application id for the\nclient. If specified overrides target application id.",
                    "type": "string"
                },
                "endpointType": {
                    "enum": [
                        "ENDPOINT_UNKNOWN",
                        "ANDROID",
                        "IOS",
                        "OGB",
                        "IN_APP_TRAY",
                        "WEB_PUSH",
                        "HTTP_STREAMING"
                    ],
                    "enumDescriptions": [
                        "",
                        "This uses the GcmSelection for selecting target_groups.",
                        "This uses the AppleSelection for selecting target_groups.",
                        "This uses special OGB specific logic for selecting the target_groups.",
                        "This uses the InAppSelection for selecting target_groups.",
                        "This uses the WebPushSelection for selecting target_groups.\nCurrently being implemented. Do not use in the meantime.\nFor more information: go/chime-web-push",
                        "This uses the HttpStreamingSelection for selecting target_groups."
                    ],
                    "type": "string"
                },
                "selectionToken": {
                    "description": "Optional. Overrides stored selection tokens if specified.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "target": {
                    "$ref": "NotificationsFrontendData__Target"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__VersionedIdentifier": {
            "description": "Next tag: 5",
            "id": "NotificationsFrontendData__VersionedIdentifier",
            "properties": {
                "identifier": {
                    "description": "Required. The identifier of the notification thread to update. Format is a\nstring containing the type and thread ID information, composed by\ncs/notifications/backend/common/thread_identifier_util.h. Clients should\ntreat the string as opaque.",
                    "type": "string"
                },
                "lastUpdatedVersion": {
                    "description": "The last_updated_version of this thread. If the last_updated_version is\nout-of-date, the thread is left unchanged.\nIn UpdateThreadState, if it is set to zero, the update will be always\napplied to all existing versions. Note that this can cause race conditions.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsFrontendData__WebPushAddress": {
            "description": "Used when the ChannelType is WEB_PUSH.",
            "id": "NotificationsFrontendData__WebPushAddress",
            "properties": {
                "applicationId": {
                    "description": "Required. This must correspond to a configured WebPushApplication\nfor the client sending to this address. This field will NOT be passed to\nGCM when we call it as the application_id is automatically populated for\nChrome apps via the registration token.",
                    "type": "string"
                },
                "auth": {
                    "description": "Required. The corresponding encryption auth key.",
                    "type": "string"
                },
                "endpoint": {
                    "description": "Required. The gcm endpoint to deliver to. When a service worker subscribes\nfor push notifications, an endpoint is provided, part of which includes the\ngcm registration id.",
                    "type": "string"
                },
                "p256dh": {
                    "description": "Required. The p256dh encryption key used when delivering the notification.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsStateful__NotificationIdentifier": {
            "description": "Used to uniquely identify notifications in the context of keeping\nnotifications state. Note that two notifications are considered identical if\nand only if they share the same vertical and identifier.\n\nLINT.IfChange",
            "id": "NotificationsStateful__NotificationIdentifier",
            "properties": {
                "primaryIdentifier": {
                    "description": "Identifies the notification within the given vertical. The value of this\nfield is treated as an opaque string.\nRequired.",
                    "type": "string"
                },
                "publishSniSendActionsViaRpc": {
                    "description": "If true the SEND action for sni should be written via rpc (in GWS) as\na fire in forget (vs using EUAs on round-trip).\nSee go/snisendviarpc.",
                    "type": "boolean"
                },
                "vertical": {
                    "description": "Identifies the vertical to which the notification belongs.\nRequired.",
                    "enum": [
                        "UNKNOWN",
                        "GEO_AREA_TRAFFIC",
                        "GEO_CARETAKERS_PENDING_EDIT",
                        "GEO_CONTRIBUTION_IMPACT_MILESTONE",
                        "GEO_GMB_SITE_MANAGER_OUTREACH",
                        "GEO_GMB_INFERRED_MERCHANT_OUTREACH",
                        "GEO_HERO_IMAGE",
                        "GEO_PLACE_QA_BEST_ANSWER",
                        "GEO_PLACE_QA_QUESTION_TO_USER",
                        "GEO_PLACE_QA_THUMBS_UP",
                        "GEO_POST_CONTRIBUTION_IMPACT",
                        "GEO_POST_PHOTO_VIEWS",
                        "GEO_RIDDLER_QUESTIONS",
                        "GEO_SERVICE_RECOMMENDATION",
                        "GEO_TODO_REVIEW",
                        "GEO_TRAFFIC_TO_PLACE",
                        "GEO_TRANSIT_TO_PLACE",
                        "GEO_FACTUAL_UGC_IMPACT",
                        "NOW_ATAPLACE",
                        "NOW_FEED_AWARENESS",
                        "NOW_KE_DEFAULT",
                        "NOW_PRICE_DROP",
                        "NOW_PRICE_DROP_SUBSCRIBED",
                        "NOW_PUBLIC_ALERTS",
                        "NOW_ONBOARDING_AWARENESS",
                        "NOW_SPORT_AWARENESS",
                        "NOW_STORIES",
                        "NOW_THIRD_PARTY_CARDMAKER",
                        "NOW_TRANSLATE_AWARENESS",
                        "NOW_WEATHER_DEFAULT",
                        "NOW_WEATHER_HOURLY_PRECIP",
                        "NOW_WEATHER_NEXT_DAY_DEGREE",
                        "NOW_WEATHER_NEXT_DAY_PRECIP",
                        "SEARCH_ENGAGEMENT_ASKJOE",
                        "SEARCH_ENGAGEMENT_HIGHLIGHT",
                        "SEARCH_GROWTH_QUERIES",
                        "SEARCH_GROWTH_SUBSCRIPTION_SPORTS",
                        "SEARCH_GROWTH_SUBSCRIPTION_TVM",
                        "SEARCH_LOCALIZATION_UGC",
                        "SEARCH_UGC",
                        "SNO_PERSONALIZED_FULFILLMENT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Notifications for area traffic notifications.",
                        "Notifications for place caretakers asking them to verify or provide factual\ndata about the place.",
                        "Notifications for contributors about their contribution impact milestones.\ngo/impact-milestone-notification-design-doc",
                        "Notifications for potential GMB site managers for a location on Maps,\nto encourage them to sign up for GMB.",
                        "Notifications for inferred merchants, to encourage them to claim their\nbusinesses on GMB.",
                        "Notifications for contributors about their uploaded photo featured as a\nhero image.",
                        "Notifications for contributors about their place Q&A answers being\nmarked as the best answer by question author.",
                        "Notifications to users asking them to help answer Place Q&A questions.\ngo/place-qa-notifications-designdoc",
                        "Notifications for contributors about their place Q&A answers being\nthumbed up.",
                        "Notifications for contributors about their contribution impact.\ngo/post-contribution-impact-notification",
                        "Notifications for contributors about their recent uploaded photo views.\ngo/post-photo-view-count-notification",
                        "Notifications for questions about places.",
                        "Notifications asking for recommendations for service businesses.\ngo/lsr-notification",
                        "Notifications for review contributors about their pending Todo List items.\ngo/lr-reengagement-notification-dd",
                        "Notifications for driving commute.",
                        "Notifications for transit commute.",
                        "Notifications for factual ugc impact\ngo/factual-ugc-notification-dd",
                        "Notifications generated by Now At-A-Place",
                        "Notification for feed awareness promo.",
                        "Notifications generated by Now from the Knowledge Engine.",
                        "Notifications generated by Now for passively tracked price drops.",
                        "Notifications generated by Now for actively tracked price drops.",
                        "Notifictions generated by Now for Public Alerts",
                        "Notification for the Onboarding awareness promo.",
                        "Notification for the sports awareness promo.",
                        "Notifications generated by Now for Stories-to-read.",
                        "Notifications generated by Now Cardmaker.",
                        "Notification for the Translate one-box awareness promo.",
                        "Notifications generated by Now about the weather.\nDefault notification about the current weather.",
                        "Notification warning the user of impending precipitation.",
                        "Notification warning the user of a temperature change for the next day.",
                        "Notification warning the user of precipitation for the next day.",
                        "Notifications for answers by entities on Google Cameos platform.\ngo/ev-notifs",
                        "Notifications for posts made by entities on Google.\ngo/ev-notifs",
                        "Notification with Growth Factor Queries.",
                        "Notification with Sports subscriptions promo.",
                        "Notification with TVM subscriptions promo.",
                        "Notifications for questions about localization.\nUsed in UGC contribution manager's initial experiment (go/zoltar-design)",
                        "Vertical covering a wide array of other notifications prompting user\ncontributions to search.",
                        "Mainly covering go/sno-taymyr but also might apply to any search\nnotification in the personalized fulfillment flow."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NotificationsStateful__NotificationTopic": {
            "description": "Represent the content of a notification, specifically the topic or entity a\nnotification is updating the user about.\n\nLINT.IfChange",
            "id": "NotificationsStateful__NotificationTopic",
            "properties": {
                "hashedFeatureId": {
                    "description": "Representation of a place through its feature id. Hashed with the user's\ngaia for PWG reasons.\nTo populate this field, please use the util method provided here:\ncs/NotificationDataStoreUtil.java.",
                    "type": "string"
                },
                "mid": {
                    "description": "Knowledge graph mid.",
                    "type": "string"
                },
                "topicality": {
                    "description": "Specifies how relevant the notification is for the given topic. Must be in\nthe range [0,1], where a score of 0 means not at all relevant, and a score\nof 1.0 means highly relevant.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "OzNotificationsGunsGmsRequests__FetchByIdentifierRequest": {
            "id": "OzNotificationsGunsGmsRequests__FetchByIdentifierRequest",
            "properties": {
                "identifier": {
                    "items": {
                        "$ref": "GunsGms__Identifier"
                    },
                    "type": "array"
                },
                "renderContext": {
                    "$ref": "GunsGms__RenderContext"
                }
            },
            "type": "object"
        },
        "OzNotificationsGunsGmsRequests__ReadStateUpdate": {
            "id": "OzNotificationsGunsGmsRequests__ReadStateUpdate",
            "properties": {
                "actionId": {
                    "type": "string"
                },
                "identifier": {
                    "$ref": "GunsGms__Identifier"
                },
                "newReadState": {
                    "description": "The new read state to apply on the notification.",
                    "enum": [
                        "UNKNOWN_READ_STATE",
                        "UNREAD",
                        "READ",
                        "DELETED",
                        "SEEN",
                        "DISMISSED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "readState": {
                    "description": "This field is soon to be deprecated (b/120262533).",
                    "enum": [
                        "READ_STATE_UNKNOWN",
                        "UNREAD",
                        "SEEN",
                        "READ",
                        "DISMISSED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OzNotificationsGunsGmsRequests__SetReadStatesRequest": {
            "id": "OzNotificationsGunsGmsRequests__SetReadStatesRequest",
            "properties": {
                "readStateUpdate": {
                    "items": {
                        "$ref": "OzNotificationsGunsGmsRequests__ReadStateUpdate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "OzNotificationsGunsGmsResponses__FetchByIdentifierResponse": {
            "id": "OzNotificationsGunsGmsResponses__FetchByIdentifierResponse",
            "properties": {
                "droppedPayload": {
                    "items": {
                        "$ref": "GunsGms__Payload"
                    },
                    "type": "array"
                },
                "payload": {
                    "items": {
                        "$ref": "GunsGms__Payload"
                    },
                    "type": "array"
                },
                "serverTimestampUsec": {
                    "description": "Current timestamp.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OzNotificationsGunsGmsResponses__SetReadStatesResponse": {
            "description": "RPC response code sufficient to determine success/failure.",
            "id": "OzNotificationsGunsGmsResponses__SetReadStatesResponse",
            "properties": {},
            "type": "object"
        },
        "Proto2Bridge__MessageSet": {
            "description": "This is proto2's version of MessageSet.",
            "id": "Proto2Bridge__MessageSet",
            "properties": {},
            "type": "object"
        },
        "Proto__TypedMessage": {
            "description": "Message that groups a protocol type_id (as defined by MessageSet),\nwith an encoded message of that type.  Its use is similar to\nMessageSet, except it represents a single (type, encoded message)\ninstead of a set.\n\nTo fill for known protocol type:\n  MyProtocolMsg proto;\n  TypedMessage typed_msg;\n  typed_msg.set_type_id(MyProtocolMsg::MESSAGE_TYPE_ID);\n  proto.AppendToCord(typed_msg.mutable_message());\n\nTo fill for unknown protocol type:\n  ProtocolMessage proto;\n  TypedMessage typed_msg;\n  typed_msg.set_type_id(proto.GetMapper()->type_id());\n  proto.AppendToCord(typed_msg.mutable_message());",
            "id": "Proto__TypedMessage",
            "properties": {
                "message": {
                    "description": "Message bytes.",
                    "format": "byte",
                    "type": "string"
                },
                "typeId": {
                    "description": "Identifier for the type.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNotifications__LogMetadata": {
            "description": "metadata about the action needed by go/now-logjoiner\nNOTE: EventIdMessage is required by logjoiner for matching, *but*\nEventIdMessage is already contained in the UserActionMetadata and is not\nduplicated here",
            "id": "SearchNotifications__LogMetadata",
            "properties": {
                "eventTimestampSeconds": {
                    "description": "Action time according to the client clock.\nNote: UserActionMetadata.Action.timestamp_seconds is the time the server\nreceives the action, not the time the action occurs.",
                    "format": "int64",
                    "type": "string"
                },
                "executionTimeMs": {
                    "description": "Time taken to execute the action",
                    "format": "int64",
                    "type": "string"
                },
                "pullEventId": {
                    "$ref": "__EventIdMessage",
                    "description": "Sent by the server, round-tripped by the client\ncs/symbol:sidekick.EntryMetadata.event_id"
                },
                "pullLogjoinId": {
                    "description": "Sent by the server, round-tripped by the client\ncs/symbol:sidekick.EntryMetadata.logjoin_id",
                    "format": "int64",
                    "type": "string"
                },
                "pushEventId": {
                    "$ref": "__EventIdMessage",
                    "description": "Sent by the server, round-tripped by the client\ncs/symbol:sidekick.EntryMetadata.push_event_id"
                },
                "pushLogjoinId": {
                    "description": "Sent by the server, round-tripped by the client\ncs/symbol:sidekick.EntryMetadata.push_logjoin_id",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNotifications__NotificationMetadata": {
            "description": "Metadata about a notification that is returned by clients, along with the\naction on that notification.",
            "id": "SearchNotifications__NotificationMetadata",
            "properties": {
                "category": {
                    "description": "Category of the notification (weather/sports/at-a-place, etc.)\ncs/symbol:sidekick.notificationextensions.notification_category",
                    "enum": [
                        "REGULAR",
                        "ACCOUNT_NOTIFIER_NOTIF",
                        "AGSA_OPA_I18N_VERSION_GAP_NOTIF",
                        "AGSA_UPDATE_PROMO_NOTIF",
                        "AIR_QUALITY_NOTIF",
                        "AT_A_PLACE_LOCATION_NOTIF",
                        "BILL_PAY_NOTIF",
                        "BREAKING_NEWS_NOTIF",
                        "CIVICS_DEFAULT_NOTIF",
                        "CIVICS_ELECTION_RESULTS_NOTIF",
                        "CIVICS_VOTER_INFO_NOTIF",
                        "CODELAB_NOTIF",
                        "COMMUTE_GENERAL_NOTIF",
                        "COMMUTE_TRAFFIC_INCIDENT_NOTIF",
                        "COMMUTE_NOTIF",
                        "EVENT_CALENDAR_NOTIF",
                        "EVENT_ANDROID_CALENDAR_NOTIF",
                        "EVENT_CAR_RENTAL_NOTIF",
                        "EVENT_DEFAULT_NOTIF",
                        "EVENT_RESTAURANT_PLACE_NOTIF",
                        "EVENT_TICKET_CONCERT_NOTIF",
                        "EVENT_TICKET_DAY_BEFORE_NOTIF",
                        "EVENT_TICKET_IMMINENT_NOTIF",
                        "EVENT_TICKET_MOVIE_NOTIF",
                        "EVENTS_REMINDER_NOTIF",
                        "FINANCE_DAILY_RECAP_NOTIF",
                        "FINANCE_EOD_CHANGE_DELTA_NOTIF",
                        "FINANCE_INDEX_NOTIF",
                        "FINANCE_INFERRED_NOTIF",
                        "FINANCE_INTRADAY_NOTIF",
                        "FINANCE_IPO_DAY_OF_NOTIF",
                        "FLIGHT_BOARDING_PASS_BARCODE_NOTIF",
                        "FLIGHT_BOARDING_PASS_DAY_BEFORE_NOTIF",
                        "FLIGHT_BOARDING_PASS_IMMINENT_NOTIF",
                        "FLIGHT_PRICE_DROP_NOTIF",
                        "FLIGHT_PRICE_NDF_NOTIF",
                        "FLIGHT_STATUS_DEFAULT_NOTIF",
                        "FLIGHT_STATUS_DELAYED_CANCELLED_NOTIF",
                        "FLIGHT_STATUS_GATE_OR_TERMINAL_NOTIF",
                        "FLIGHT_STATUS_TIME_TO_LEAVE_NOTIF",
                        "FREQUENT_PLACE_COMMUTE_NOTIF",
                        "FREQUENT_PLACE_OTHER_NOTIF",
                        "JANATA_HANDSHAKE_NOTIF",
                        "JANATA_EDIT_CARD_FOLLOWUP_NOTIF",
                        "JANATA_POST_IMAGE_FOLLOWUP_NOTIF",
                        "HYPERLOCAL_LOCATION_NOTIF",
                        "INFERRED_REMINDER_DEFAULT_NOTIF",
                        "INTERNAL_API_DEFAULT_NOTIF",
                        "LAST_TRAIN_HOME_NOTIF",
                        "KE_NOW_AIR_QUALITY_DAILY_NOTIF",
                        "KE_NOW_AIR_QUALITY_CRITICAL_NOTIF",
                        "KE_NOW_ACTOR_TO_MOVIE_NOTIF",
                        "KE_NOW_CELEB_TO_TV_GUEST_APPEARANCE_NOTIF",
                        "KE_NOW_DIRECTOR_TO_MOVIE_NOTIF",
                        "KE_NOW_EXAM_NOTIF",
                        "KE_NOW_MOVIE_NOTIF",
                        "KE_NOW_MOVIE_TO_MOVIE_SEQUEL_NOTIF",
                        "KE_NOW_TV_SERIES_TO_FIRST_EPISODE_NOTIF",
                        "KE_NOW_TV_SERIES_TO_NEW_EPISODE_NOTIF",
                        "KE_NOW_ACTOR_TO_MOVIE_TRAILER_NOTIF",
                        "KE_NOW_DIRECTOR_TO_MOVIE_TRAILER_NOTIF",
                        "KE_NOW_MOVIE_TO_MOVIE_TRAILER_NOTIF",
                        "KE_NOW_TICKET_AVAILABILITY_NOTIF",
                        "KE_NOW_WEEKEND_SHOWTIMES_NOTIF",
                        "KE_NOW_VIDEO_GAME_NOTIF",
                        "KE_NOW_ARTIST_TO_ALBUM_NOTIF",
                        "KE_NOW_LOTTERY_NOTIF",
                        "KE_NOW_ATHLETE_TO_TEAM_NOTIF",
                        "KE_NOW_COACH_TO_TEAM_NOTIF",
                        "KE_NOW_TEAM_TO_ATHLETE_NOTIF",
                        "KE_NOW_TEAM_TO_COACH_NOTIF",
                        "KE_NOW_AUTHOR_TO_BOOK_NOTIF",
                        "KE_NOW_BOOK_TO_BOOK_NOTIF",
                        "KE_NOW_SEARCH_ENGAGEMENT_ASKJOE",
                        "KE_NOW_SEARCH_ENGAGEMENT_HIGHLIGHT",
                        "KE_NOW_STOCK_TO_TICKER_INTRADAY_NOTIF",
                        "KE_NOW_OLYMPICS_INTRO_NOTIF",
                        "KE_NOW_OLYMPICS_COUNTRY_MEDAL_WIN_NOTIF",
                        "KE_NOW_OLYMPICS_DAILY_FEATURED_EVENT_NOTIF",
                        "KE_NOW_OLYMPICS_DAILY_RECAP_NOTIF",
                        "KE_NOW_OLYMPICS_TOP_EVENT_HEADS_UP_NOTIF",
                        "KE_NOW_OLYMPICS_TOP_EVENT_SUMMARY_NOTIF",
                        "KE_NOW_OLYMPICS_MEDAL_EVENT_HEADS_UP_NOTIF",
                        "KE_NOW_AWARDS_CEREMONY_NOTIF",
                        "KE_NOW_EPHEMERAL_EVENT_NOTIF",
                        "KE_NOW_FILM_FESTIVAL_NOTIF",
                        "KE_NOW_MUSIC_FESTIVAL_NOTIF",
                        "KE_NOW_TOUR_DE_FRANCE_NOTIF",
                        "KE_NOW_MULTISPORT_EVENT_NOTIF",
                        "KE_NOW_HEALTH_POLLEN_COUNT_NOTIF",
                        "KE_NOW_ONEOFF_NOTIF",
                        "KE_NOW_DEFAULT_NOTIF",
                        "MERCHANT_NOTIF",
                        "MERCHANT_FIRST_POST_PROMPT_NOTIF",
                        "MERCHANT_HEALTH_CHECK_NOTIF",
                        "MERCHANT_LOCAL_POST_GOING_DARK_NOTIF",
                        "MERCHANT_LOCAL_POST_MILESTONE_NOTIF",
                        "MERCHANT_LOCAL_POST_REMINDER_NOTIF",
                        "MERCHANT_OWNER_REVIEW_NOTIF",
                        "MERCHANT_PHOTO_NOTIF",
                        "MERCHANT_REVIEW_NOTIF",
                        "MERCHANT_MONTHLY_PLACE_INSIGHTS_NOTIF",
                        "MERCHANT_SITE_MANAGER_ENGAGEMENT_NOTIF",
                        "MERCHANT_INFERRED_OUTREACH_NOTIF",
                        "MINDSEARCH_ANSWERS_NOTIF",
                        "MINDSEARCH_QUESTIONS_NOTIF",
                        "PACKAGE_TRACKING_NOTIF",
                        "PRICE_DROP_NOTIF",
                        "SHOPPING_SUBSCRIBED_PRICE_DROP_NOTIF",
                        "PUBLIC_ALERT_NOTIF",
                        "REMINDER_DEFAULT_NOTIF",
                        "SPORTS_OTHER_NOTIF",
                        "SPORTS_GAME_BASEBALL_NOTIF",
                        "SPORTS_GAME_BASKETBALL_NOTIF",
                        "SPORTS_GAME_CRICKET_NOTIF",
                        "SPORTS_GAME_AUSTRALIAN_FOOTBALL_NOTIF",
                        "SPORTS_GAME_FOOTBALL_NOTIF",
                        "SPORTS_GAME_HOCKEY_NOTIF",
                        "SPORTS_GAME_RUGBY_NOTIF",
                        "SPORTS_GAME_SOCCER_NOTIF",
                        "SPORTS_GAME_TENNIS_NOTIF",
                        "SPORTS_GAME_CRICKET_MILESTONE_NOTIF",
                        "SPORTS_VIDEO_HIGHLIGHTS_NOTIF",
                        "THIRD_PARTY_NOTIF",
                        "THIRD_PARTY_CARDMAKER_NOTIF",
                        "TIME_GAP_QUERY_SUBSCRIPTION_NOTIF",
                        "FORESIGHT_QUERY_SUBSCRIPTION_NOTIF",
                        "TIME_TO_LEAVE_NOTIF",
                        "TOP_STORY_NOTIF",
                        "TOPDECK_MORNING_GREETING",
                        "TRAFFIC_INCIDENT_NOTIF",
                        "TRANSPORTATION_TICKET_DAY_BEFORE_NOTIF",
                        "TRANSPORTATION_TICKET_IMMINENT_NOTIF",
                        "TRANSIT_STATION_INFORMATION_NOTIF",
                        "TRANSLATE_AWARENESS_NOTIF",
                        "TRAVEL_ASSISTANT_NOTIF",
                        "KE_NOW_UGC_PHOTO_NOTIF",
                        "UGC_THEATER_VISIT_NOTIF",
                        "UGC_PHOTO_EVENT_NOTIF",
                        "NBU_SPORT_AWARENESS_NOTIF",
                        "WEATHER_DEFAULT_NOTIF",
                        "WEATHER_HOURLY_SNOW_RAIN_NOTIF",
                        "WEATHER_NEXT_DAY_DEGREE_DELTA_NOTIF",
                        "WEATHER_NEXT_DAY_SNOW_RAIN_NOTIF",
                        "WEATHER_NEXT_DAY_FORECAST_NOTIF",
                        "WEATHER_TODAY_FORECAST_NOTIF",
                        "WEBKICK_EXPLICIT_INTEREST_NOTIF",
                        "WEBSITE_UPDATE_NOTIF",
                        "DEPRECATED_WHILE_YOU_WAIT_BOLLYWOOD_CARD_NOTIF",
                        "DOODLES_NOTIF",
                        "SEARCH_AWARENESS_NOTIF",
                        "FEED_SUMMARY_NOTIF",
                        "FEED_PROMO_MARKETING_NOTIF",
                        "VIDYA_ONBOARDING_NOTIF",
                        "PUBLIC_HEALTH_NOTIF",
                        "DUMMY_NOTIF",
                        "CRISIS_RESPONSE_SOS_NOTIF",
                        "UGC_LOCALIZATION_NOTIF",
                        "UGC_PLACE_QA_NOTIF",
                        "WORD_COACH_NOTIF",
                        "SEARCH_FEATURES_NOTIF",
                        "KE_NOW_MUSIC_SONG_NOTIF",
                        "SPORTS_AWARENESS_NOTIF",
                        "FINANCE_AWARENESS_NOTIF",
                        "TV_AWARENESS_NOTIF",
                        "BULLETIN_EVENTS_NOTIF",
                        "EMPLOY_SAVED_SEARCH_NOTIF",
                        "EMPLOY_APPLY_SIMILAR_JOBS_NOTIF",
                        "TRAVEL_PLANNING_TRIP_CREATE_NOTIF",
                        "TRAVEL_PLANNING_TRIP_UPDATE_NOTIF",
                        "TRAVEL_PLANNING_POTENTIAL_TRIP_NOTIF",
                        "EMPLOY_SAVED_JOBS_NOTIF",
                        "SEARCH_QUERY_RECOMMENDATION_NOTIF",
                        "SUBSCRIPTION_RECOMMENDATION_NOTIF"
                    ],
                    "enumDescriptions": [
                        "No special rules. A catchall bucket.",
                        "",
                        "Notification sent to older versions of AGSA in different i18n locales where\nAssistant is being enabled retroactively. See go/agsa-gap for context.",
                        "Notification is fired when the user has an old version of AGSA to promote\nAGSA app updates.",
                        "Notification is fired to give the user general information about the\nair quality in their current location.",
                        "Notification is fired when the user is at-a-place of interest, such as\nWalmart.",
                        "Notification is fired when bill is due with in 1 day and is not\nyet paid.",
                        "Notification is fired for breaking news events.",
                        "Catch-all category for all Civic notifications which don't specify a more\nfine-grained NotificationCategory.",
                        "Notification related to election results.",
                        "Notification related to voter information.",
                        "go/now-notifications-codelab",
                        "Notification is fired when there is general information available about\na user's (expected) commute. (currently unused)",
                        "Notification is fired when there is an incident on the user's route.\n(currently unused)",
                        "Commute notifications generated by CommuteNotificationModule based on\nthe commute field in LocationAnalysisResponse. These cover both normal and\nbad traffic cases.\nCan potentially be increased by introducing non-personalized routes.\n(The other commute-related notification, FREQUENT_PLACE_COMMUTE_NOTIF, is\nbased on FrequentPlace, ie the visited_places field in\nLocationAnalysisResponse and is generated by PlaceNotificationAdder.)",
                        "Notification is fired for calendar events information from moonshine.",
                        "",
                        "Notification is fired when there is a car rental reservation for pick up/\ndrop off.",
                        "Notification is fired for a default happyhour event.",
                        "Notification is fired when there is a restaurant reservation and it is\ntime to leave.",
                        "Notification is fired for happyhour concert ticket.",
                        "Notification is fired the day before a user has a ticketed event.",
                        "Notification is fired several hours before a user has a ticketed event.",
                        "Notification is fired for happyhour movie ticket.",
                        "Notification is fired for saved events in events search.",
                        "Finance daily recap notification - go/finance-daily-recap-dd.",
                        "Notification is fired when the difference between a stock's end-of-day\nprice is greater than the previous day's closing price by a given\nthreshold.",
                        "Notification is fired when the difference between an index's end-of-day\nvalue is greater than the previous day's closing value by a given\nthreshold.",
                        "Notification is fired for a user's inferred interested stock if a the price\nchange exceeds a given threshold.",
                        "Notification is fired when the difference between a stock's\nprice (during regular trading hours) is greater than the previous day's\nclosing price by a given threshold.",
                        "Notification is fired when a company the user is interested in goes IPO,\non the day of the IPO event.",
                        "Notification is fired when user is at airport.",
                        "Notification is fired the day before a user has a flight.",
                        "Notification is fired several hours before a user has a flight.",
                        "Notification is fired if we detect a (big) price drop of a tracked flight.",
                        "Notification for a next-day-fare (NDF) price prediction of a tracked\nflight.",
                        "Notification is fired near the time of the flight to inform the user. It is\ngenerally surfaced as a LOW_PRIORITY notification.",
                        "Notification is fired if the user's flight has a change of status (is\ndelayed or cancelled).",
                        "Notification is fired if the user's flight has a change of gate/terminal.",
                        "Notification is fired to let the user know that it's time to leave for the\nairport when they have an upcoming flight.",
                        "Notification is fired to inform a user about their planned commute.",
                        "Catch-all category for all other types of FREQUENT_PLACE notifications.",
                        "Notification categories for Janata (go/janata-one-pager)\nNotification sent to inform users about handshake request or approval\n(go/janata-handshake).",
                        "Notification sent to users a reminder on how to edit their card after they\ncreate it.",
                        "Notification sent to notify users about the ability to post images.",
                        "Notification is fired when the user is at a location (similar to\nAT_A_PLACE_LOCATION), but generates a different CardCategory so we use a\ndifferent NotificationCategory as well.",
                        "Notification is fired a day right before the due date to remind user tasks\ninferred from email.",
                        "Catch-all category for notifications triggered by a card created through\nthe 1P InternalApi when the card doesn't specify the category.",
                        "",
                        "Notification is fired everyday in the morning to notify about current\nair quality conditions.",
                        "Notification is fired when there is a dramatic negative change in\nair quality.",
                        "Notification is fired when a movie starring an actor the user is interested\nin is released in theaters today.",
                        "Notification is fired when a TV new episode airs containing a guest\nappearance by a celebrity in whom the user is interested.",
                        "Notification is fired when a movie directed by someone the user is\ninterested in is released in theaters today.",
                        "Notification is fired when there's an update for an exam the user is\ninterested in.",
                        "Notification is fired when a movie the user is interested in is\nreleased in theaters today.",
                        "Notification is fired when a movie the user is interested in is releasing\na sequel in theaters today.",
                        "Notification is fired when a TV first episode the user is interested in is\naired today.",
                        "Notification is fired when a TV new episode the user is interested in is\naired today.",
                        "Notification is fired when a movie trailer for a movie starring an actor\nthat the user is interested in is uploaded today.",
                        "Notification is fired when a movie trailer for a movie directed by someone\nwho the user is interested in is uploaded today.",
                        "Notification is fired when a movie trailer for a movie that the user is\ninterested in is uploaded today.",
                        "Notification triggered when tickets of a user interested movie are\navailable.",
                        "Notification triggered for movie-goers when some user interested movie\nshowtimes are available the coming weekend.",
                        "Notification is fired when a video game that the user is interested in\nis released.",
                        "Notification is fired when an artist that the user is interested in\nreleases a new album today.",
                        "Notification is fired when lottery results are announced for a game.",
                        "Notification is fired when an athlete that the user is interested in joins\na new team today.",
                        "Notification is fired when a coach that the user is interested in\njoined a new team.",
                        "Notification is fired when a team that the user is interested in signs a\nnew athlete today.",
                        "Notification is fired when a team that the user is interested in\nrecruited a new coach.",
                        "Notification is fired when an author that the user is interested in\npublishes a new book.",
                        "Notification is fired when the author of a book that the user\nis interested in publishes a new book.",
                        "Notification is fired when an entity that the user is interested in\nanswers a question.",
                        "Notification is fired when an author that the user is interested in\npublishes a new post.",
                        "Notification is fired when a stock that the user is interested in\nfluctuates more than a certain threashold.",
                        "Intro notification, which is used to introduce Olympics related updates.",
                        "Notifications triggered when users' countries of interest win a medal.",
                        "Notifications triggered for daily featured events.",
                        "Notifications triggered for daily recaps.",
                        "Notifications triggered for top events before they start.",
                        "Notifications triggered with summary for top events after they finish.",
                        "Notifications triggered when users' countries of interest are about to\ncompete for a medal.",
                        "Notification triggered when an awards ceremony that the user is interested\nin starts.",
                        "Notification category for generic ephemeral events.",
                        "Notification triggered when a film festival that the user is interested in\nstarts.",
                        "Notification triggered when a music festival that the user is interested in\nstarts.",
                        "Notification triggered when stage or final winner list is out.",
                        "Notification triggered when the opening ceremony of a multi-sport event\n(e.g. Winter Olympics, Asian games) that the user is interested in starts.",
                        "Notification for high pollen count.",
                        "Notification for one-off cases.",
                        "Catch-all category for all KE-Now notifications which don't specify a\ncategory.",
                        "Notification categories for notifications targeting merchants\n(go/merchant-consumer-notifications).\nCatch-all category (deprecated).",
                        "Notification sent to the listings that have never created a Local post and\nare eligible to create one.",
                        "Notification sent on the anniversary of the business listing that prompts\nthe merchant to check and update their listing data.",
                        "Notification sent when the latest Local Post is about to expire.",
                        "Notification sent when the listing crosses an insights milestone for Local\nPosts. Eg: 100 views or 50 clicks.",
                        "Notification sent after the last Local Post has expired to encourage the\nmerchant to create new posts.",
                        "Notification sent when there are user-initiated changes to the business\nlisting data (e.g., phone, address), which prompts the merchant to review\nand confirm those changes.",
                        "Notification sent when there are new user-uploaded photos for the business.",
                        "Notification sent when there is a new user review for the business.",
                        "Notification sent to the merchants monthly about their listings insights.",
                        "Notifications sent to potential Site-Managers of GMB locations.\ngo/gmb-sm-outreach",
                        "Notifications sent to potential inferred merchants for sign-up as GMB\nusers.\ngo/inferred-merchant-outreach-exp-tdd",
                        "Notification sent when a user entered question is answered by another user\nThe notification is sent to the user who asked and all followers.",
                        "Notification sent when a user entered question is routed to users for\ngetting answers.",
                        "Notification is fired when a package has shipped or when it is out\nfor delivery.",
                        "Notification for Shopping.\nFired if there's a price drop on a product user is interested in(detected\nby Google).",
                        "Fired if there's a price drop on a product user has explicitly subscribed.",
                        "Notification is fired for public alerts.",
                        "Catch-all category for all notifications fired by reminders.",
                        "Notification is fired for sports, and does not fit in any of the categories\ndefined below.",
                        "Notification is fired for a game in the given sport.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Notification is fired when the video highlights are available for a game.",
                        "Notification is fired by a third-party card.",
                        "Notification is fired by a third-party cardmaker card.",
                        "Notification cateogry for time gap and ForeSIght queries. Design doc:\ngo/time-gap-dd.",
                        "",
                        "Notification category for time to leave notifications created by\nTimeToLeaveModule.",
                        "Top story notifications. Design doc: http://go/top-story-notifs",
                        "Topdeck personalized greetings.",
                        "Notification is fired to inform user of a traffic incident. Usually\ndelivered as an ACTIVE notification.",
                        "Notification is fired the day before the user has a transportation\nreservation.",
                        "Notification is fired several hours before the user has a transportation\nreservation.",
                        "Notification is fired when the user is at a transit station, giving them\ngeneral information about the station.",
                        "",
                        "Notification is fired when user is at a city, giving them travel-specific\ninformation about the city.",
                        "Notification triggered when Event is occurring and a user is requested\nto upload photos of the event.",
                        "Notification is fired when a user visited a theater to prompt the user to\nreview the film they just saw.",
                        "Notification is fired when a user arrived an event venue to prompt the user\nto upload their photos of the event.",
                        "",
                        "Notification is fired to give the user general information about the\nweather in their current location. Currently only sent as a TOPDECK or\nLOW_PRIORITY notification.",
                        "Notification is fired if it is not raining/snowing currently and it is\nexpected to in the next few hours.",
                        "Notification is fired when the difference between today's max temperature\nand tomorrow's max temperature is greater than a threshold.",
                        "Notification is fired if it didn\u2019t rain/snow today and it\u2019s expected to\nrain/snow tomorrow.",
                        "Notification is fired at evening time and if\nWEATHER_NEXT_DAY_DEGREE_DELTA_NOTIF conditions are not met.",
                        "Notification is fired at the morning and shows today's forecast.",
                        "Notification is fired if there is a news story about a user's explicitly\ndeclared interest.",
                        "Notification is fired if there's an update to a website the user follows.",
                        "DEPRECATED Notification is fired if user has interest in Bollywood and\nwhile wait at transit station. (Leave in enum until logs containing this\nvalue are no longer processed.)",
                        "Notification category for Doodle notifications.",
                        "Notification category for Search awareness (go/search-aware).",
                        "Feed summary notifications.",
                        "",
                        "Notification category for Vidya language onboarding notifications.",
                        "Notification category for public health information for travelers.",
                        "Used for testing (since any notification going thru needs to have category\nset).",
                        "SOS notifications.",
                        "UGC (User-Generated Contents) localization notification",
                        "Notification triggered when a Place Q&A question or answer is written by\na user.",
                        "Notifications that offer the user to return to the Google Word Coach game.",
                        "Notification for awareness search features.",
                        "Notifications for the new youtube music video.",
                        "Awareness subscription notifications per vertical.",
                        "",
                        "",
                        "Event notifications for go/bulletin.",
                        "Saved Search notifications for search employ go/employ-notifs.",
                        "Apply to similar jobs notifications for search employ go/employ-notifs.",
                        "Notifications for user trip creations/updates.\ngo/travel-trip-notifications",
                        "",
                        "",
                        "Saved jobs notifications for search employ go/employ-notifs.",
                        "Notifications recommending users to try a Search query.",
                        "Notifications recommending users to subscribe to some topic."
                    ],
                    "type": "string"
                },
                "displayString": {
                    "description": "Display string of the notification\ncs/symbol:sidekick.notification.text",
                    "type": "string"
                },
                "expiresAfterSeconds": {
                    "description": "Time after which the action should be discarded from\nserving storage past its recorded timestamp.  In particular, this is used\nto set the expiration time when writing to sidekick_push_criteria.\ncs/symbol:sidekick.actiondetails.expires_after_seconds",
                    "format": "int32",
                    "type": "integer"
                },
                "notificationIdentifier": {
                    "$ref": "NotificationsStateful__NotificationIdentifier",
                    "description": "Identifier for notification state\ncs/symbol:sidekick.notificationextensions.identifier"
                },
                "notificationTopic": {
                    "description": "Topic of the notification\ncs/symbol:sidekick.notificationextensions.topic",
                    "items": {
                        "$ref": "NotificationsStateful__NotificationTopic"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Type of the notification (active, passive, etc.)\ncs/symbol:sidekick.notification.type",
                    "enum": [
                        "NO_NOTIFICATION",
                        "PASSIVE",
                        "ACTIVE",
                        "ON_TRIGGER",
                        "LOW_PRIORITY",
                        "TOPDECK",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "This value is used to indicate that an entry had no notifications\nassociated with it.  This type should never be associated with any\nNotification and is included here only to facilitate tracking of entries\nwithout notifications.",
                        "This is a passive notification that shows up in the notification bar but\ndoes not cause buzzing. This notification fires immediately when it is\ndelivered to the client, or on a trigger condition if the\n\"trigger_condition\" field below is set.",
                        "This is an active notification that causes the phone to buzz. This\nnotification fires immediately when it is delivered to the client, or on\na trigger condition if the \"trigger_condition\" field below is set.",
                        "This is a notification that should be triggered when the triggering\ncondition below happens. For instance this is useful to send a list\nof notifications for reminders within a geo fence.\nDEPRECATED: this value is still supported for unmigrated use cases, but\nno new use cases/ should be built on it.",
                        "A notification that neither shows up in the notification bar nor\ncauses buzzing/light.",
                        "Will expose the notification content in go/topdeck.",
                        "This is a custom notification, its behavior is specified by the\nfields \"priority\", \"light\", \"sound\", and \"vibrate\".\nNote: ONLY use if no other defined type suits your needs and consult\nwith notifications team first. Supported on AGSA >= 5.5."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNotifications__UserActionMetadata": {
            "description": "Represents a user action performed on the client. This data is stored\nin ACTIONS_SERVING_V2 in Kansas.\nSee design at go/actions-serving-v2.",
            "id": "SearchNotifications__UserActionMetadata",
            "properties": {
                "action": {
                    "$ref": "SearchNow_UserActionMetadata_Action"
                },
                "contentId": {
                    "$ref": "Sidekick__ContentId",
                    "description": "Identifies the content that the action was performed on."
                },
                "entryType": {
                    "enum": [
                        "UNKNOWN",
                        "FREQUENT_PLACE",
                        "UI_NAVIGATION",
                        "WEATHER",
                        "WEATHER_TINY",
                        "WEATHER_LIST",
                        "TRANSIT_STATION",
                        "GENERIC_CARD",
                        "GENERIC_TABLE",
                        "FLIGHT_STATUS",
                        "FLIGHT_LIST",
                        "SPORT_SCORE",
                        "SPORT_LURE_LIST",
                        "SPORT_EVENT",
                        "SPORT_HIGHLIGHT_LIST",
                        "SPORT_HIGHLIGHT",
                        "CALENDAR",
                        "TRANSLATE",
                        "CURRENCY_EXCHANGE",
                        "CLOCK",
                        "NEARBY_PLACE",
                        "PUBLIC_ALERT",
                        "MOVIE_LIST",
                        "STOCK_QUOTE_LIST",
                        "STOCK_QUOTE",
                        "ATTRACTIONS_LIST",
                        "ATTRACTION",
                        "PACKAGE_TRACKING",
                        "PACKAGE_TRACKING_LIST",
                        "NEWS",
                        "BREAKING_NEWS",
                        "HYPERLOCAL_NEWS",
                        "ENTITY_NEWS",
                        "PHOTO_SPOT",
                        "BIRTHDAY_CARD",
                        "EVENT",
                        "MOVIE",
                        "EVENT_LIST",
                        "RESEARCH_TOPIC",
                        "RESEARCH_PAGE",
                        "BARCODE",
                        "GMAIL",
                        "NEARBY_PLACES_LIST",
                        "REAL_ESTATE",
                        "REAL_ESTATE_LIST",
                        "OPEN_HOUSE",
                        "MOVIE_TICKET",
                        "REMINDER",
                        "REMINDER_LIST",
                        "WEBSITE_UPDATE",
                        "WEBSITE_UPDATE_LIST",
                        "GENERIC_TICKET",
                        "BOOK",
                        "ALBUM",
                        "VIDEO_GAME",
                        "TV_EPISODE",
                        "SHARED_TRAFFIC_CARD",
                        "RELEVANT_WEBSITE",
                        "RELEVANT_WEBSITE_LIST",
                        "LAST_TRAIN_HOME",
                        "TV_RECOGNITION",
                        "WALLET_LOYALTY",
                        "HOTEL_PLACE",
                        "RESTAURANT_PLACE",
                        "CAR_RENTAL",
                        "GENERIC_TV_PROGRAM",
                        "CONCERT_TICKET",
                        "TRAINING_QUESTION",
                        "TV_NEWS",
                        "TV_MUSIC",
                        "TV_KNOWLEDGE",
                        "TV_KNOWLEDGE_LIST",
                        "SPORT_EVENT_TICKET",
                        "PROTOTYPE",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE",
                        "BROWSE_MODE_LURE_TRAVEL",
                        "BROWSE_MODE_LURE_AUTHOR",
                        "AT_A_PLACE",
                        "BROWSE_MODE_AUTHOR_STORY",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_ENTITY_LIST",
                        "BROWSE_MODE_ENTITY",
                        "BROWSE_MODE_VIDEO_LIST",
                        "BROWSE_MODE_VIDEO",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_READING_STORY",
                        "THINGS_TO_WATCH",
                        "THINGS_TO_WATCH_TV",
                        "THINGS_TO_WATCH_VOD",
                        "THINGS_TO_WATCH_LURE",
                        "THINGS_TO_WATCH_LIST_LURE",
                        "APP_SUGGESTION",
                        "APP_SUGGESTION_LIST",
                        "PERSONALIZED_NEWS",
                        "CONTACT_SUGGESTION",
                        "CONTACT_SUGGESTION_LIST",
                        "VEHICLE_PARKING_LOCATION",
                        "VEHICLE_PARKING_LOCATION_LIST",
                        "TV_MUSIC_KNOWLEDGE_LIST",
                        "TRANSPORTATION",
                        "TRANSPORTATION_LIST",
                        "TRAFFIC_INCIDENTS",
                        "BILL",
                        "BILL_LIST",
                        "PRODUCT",
                        "PRODUCT_LIST",
                        "IN_STORE",
                        "PRICE_DROP",
                        "TV_RELATED_WEB_SITE_LIST",
                        "TV_RELATED_WEB_SITE",
                        "TV_RELATED_WEB_SITE_KNOWLEDGE",
                        "HOTSEAT_SUGGESTION_LIST",
                        "CONTENT_UPDATE_LIST",
                        "CONTENT_UPDATE_ITEM",
                        "HOTSEAT_APP_SUGGESTION",
                        "HOTSEAT_CONTACT_SUGGESTION",
                        "MALL_DIRECTORY",
                        "FIELD_TRIP",
                        "FRIEND_LOCATION_PHOTOS",
                        "FIELD_TRIP_LURE",
                        "BACKGROUND_TEXT",
                        "SURVEY_LURE",
                        "CHROMECAST_IMAX",
                        "FITNESS",
                        "AGENDA",
                        "WEB_ANSWER",
                        "GAS_STATION_ALONG_ROUTE",
                        "ALONG_ROUTE_LIST",
                        "MODULE",
                        "MODULE_LIST",
                        "PIET",
                        "THINGS_TO_DO_LIST_LURE",
                        "FLIGHT_PRICE_LIST",
                        "FLIGHT_PRICE",
                        "GOOGLE_PLUS_STORY",
                        "THIRD_PARTY_WELCOME",
                        "HOTWORD_PROMO",
                        "TUTORIAL_CARD_CUSTOMIZE",
                        "TUTORIAL_CARD_INTRO",
                        "TUTORIAL_CARD_SWIPE",
                        "TUTORIAL_CARD_SWIPE_FOR_CUSTOMIZE",
                        "TUTORIAL_CARD_PULL_DOWN",
                        "CLUSTER_METADATA",
                        "CAROUSEL_MODULE_LIST",
                        "APP_LAUNCH_LIST",
                        "ULYSSES_LIST",
                        "CONTACT_CARD",
                        "GMAIL_LOCATION_OF_INTEREST",
                        "COMPONENT",
                        "CLOSET_INTERESTS_PAGE",
                        "CLOSET_INTEREST_CATEGORY",
                        "CLOSET_CONTROL_LIST",
                        "CLOSET_CONTROL_CATEGORY",
                        "CLOSET_PROFILE_SINGLE_TYPE",
                        "CLOSET_PROFILE_MULTI_TYPE",
                        "CLOSET_PROFILE_BUTTON",
                        "CLOSET_ENTITY",
                        "CLOSET_CONTROL",
                        "CLOSET_QUESTION",
                        "CLOSET_TEMPLATE_GROUP",
                        "CLOSET_NOW_SETTINGS",
                        "COMMUTE_NOTIFICATION",
                        "LOBBY_CAROUSEL",
                        "GRID_MODULE_LIST",
                        "AREA_TRAFFIC",
                        "TRANSIT_SYSTEM",
                        "NOW_CLIENT_OPT_IN_PROMO",
                        "HEALTH_UPDATE",
                        "FEED_COLLECTION",
                        "CARD_CAP",
                        "SEARCH_AWARENESS",
                        "ELEMENT",
                        "FACETS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Note that MOVIE_LIST should be replaced with a sub-tree of MOVIE\nentries. We should not have entries that are rolled-up entries.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Lure to enter browse mode about an interest.",
                        "Lure to enter browse mode about a trip.",
                        "Lure to read articles from an author.",
                        "Lure to enter browse mode about a place.",
                        "A single entry in the Browse Mode Author lure.",
                        "A single URL recommendation in browse mode.",
                        "A list of entity recommendations in browse mode.",
                        "A single entity recommendation for the list in browse mode.",
                        "A list of video recommendations in browse mode.",
                        "A single video recommendation for the list in browse mode.",
                        "Lure to enter browse mode for things to read.",
                        "A single entry in the Browse Mode Author lure.",
                        "Things to watch card.",
                        "A TV things to watch recommendation.",
                        "A VOD things to watch recommendation.",
                        "",
                        "",
                        "A card showing a single suggested application for the user.",
                        "List card containing multiple app suggestions.",
                        "A card showing personalized news for a user.",
                        "A card showing a single suggested contact (call/sms) for the user.",
                        "List card containing multiple contact suggestions.",
                        "Detected car parking location.",
                        "List of detected car parking location cards.",
                        "List of related music entries.",
                        "Individual transportation cards.",
                        "List of transportation cards.",
                        "Traffic incidents a user is likely to encounter.",
                        "Individual bill card.",
                        "List of bill cards.",
                        "Entry for a product that the user is interested in.",
                        "Entry for list of products that the user is interested in.",
                        "A card for the store the user is in.",
                        "A card for a product with price drop that a user has visited online.",
                        "A card with a list of Web sites relating to the TV program the user is\nwatching.",
                        "A single reference in the TV Web site list card.",
                        "",
                        "Special group entry used to display suggested apps and contacts in the\nhotseat.",
                        "A list of content update items.",
                        "A content update item.",
                        "The app suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "The contact suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "",
                        "A card used to display interesting nearby content from Field Trip.",
                        "A cards containing photos from a friend at a location.",
                        "Lure to enter browse mode of Field Trip.",
                        "Text displayed in the background, between other cards.",
                        "Card which brings the user to a Google Now feedback survey.",
                        "Card for information on whatever is showing in the Chromecast ambient\nstate.  Can be a link to a news story, a G+ photo with a link to the\nalbum, etc.",
                        "Card displaying fitness data.",
                        "Card displaying agenda data.",
                        "Card displaying web result from predictive search",
                        "Card displaying gas stations along a route.",
                        "A List of AlongRouteEntry.",
                        "Module-based card",
                        "Module-based list card",
                        "Piet-based card (go/piet)",
                        "List lure to enter browse mode of Things To Do.",
                        "A list of flights with prices and price changes.",
                        "An individual flight entry from the list above.",
                        "G+ stories card",
                        "Card displaying welcome information to users receiving third party cards.",
                        "Card promoting the hotword.",
                        "Tutorial card for customizing your Google Now experience.",
                        "Tutorial card for how to change card preferences.",
                        "Tutorial card for how to swipe the cards away.",
                        "Tutorial card for swiping to customize.",
                        "Tutorial card for how to pull down the top bar to search.",
                        "Entry containing metadata about a lotic cluster (e.g. title, color).",
                        "Entry type for the Carousel.  The Carousel is a Group entry\nwith entries made up of Modules.  The Modules should be defined\nas SmallContentModules.",
                        "Entry type for the App Launcher.  The App Launcher is a Group entry\nwith the entries made up of modules.",
                        "Ulysses list type entry for displaying various needs at a location.",
                        "Entry type for a contact card which directs user to the contacts app",
                        "Gmail location of interest card.",
                        "Entry type for a card built from a Hallmark Component.",
                        "Closet interests page (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for interests landing page.\nThe client would show its preview of several interests on its parent page,\nand show all intersts children on its own page by different collections:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet interest category (from AGSA 6.5). This type should only be assigned\nto a group_entry. The client would show its preview of several interests on\nits parent page, and show all interests in this collection on its own page\nby interested, suggested, or not intersted:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control list (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for \"More preferences\" case.\nThe client would show a list of control types:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control category (from AGSA 6.5). This type should only be assigned\nto a group_entry. It would be used for \"Weather\", \"Commute\" cases and etc.:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Single type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Multi-type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Button in profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one interest: go/now-closet-proto.",
                        "Cards and notifications controls in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one question: go/now-closet-proto.",
                        "Closet template group which may contain template rows and headers/footers,\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Closet now settings for enabling Now and notifications, also providing an\nentry for clearing all preference.\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Related to happy hour code yellow in 2015 Q4, this is expected to only be\nused as a synthentic type.  A request translator is the only place this\nis put into a request, and this type will never be returned to a client.\nShould be removed as part of the transition to Action Pipelines taking over\ncommute notifications delivery.\n\nMore details at: http://go/now-hh-commute-cy-15q4",
                        "Used to create a background-less card for Lobby, see: go/lobby.",
                        "Module-based list card with modules displayed in a multi-column grid.",
                        "Non-rendering entry type that is used solely for area traffic notifications\nbound for GMM; there is no corresponding EntrySource.",
                        "Non-rendering entry type that is used solely for transit system\nnotifications bound for GMM; there is no corresponding EntrySource.",
                        "Synthetic entry type for client-generated promotional or tutorial\ncards.  These pseudo-cards are created on the client and are not\nused by the server.",
                        "A Health-related card.",
                        "Collection in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Card cap entry in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Search awareness cards (go/search-aware).",
                        "Cards containing Element data, which can be passed to the Element runtime\nto render the contents of the card on the UI. More details at go/elements",
                        "EntryType for facet chips (go/complex-facets)"
                    ],
                    "type": "string"
                },
                "entryUpdateId": {
                    "description": "Identifies the content that the action was performed on.\nDeprecated. Use content_id instead.",
                    "format": "int64",
                    "type": "string"
                },
                "semanticProperties": {
                    "$ref": "Sidekick__SemanticProperties",
                    "description": "Used to support broader terms of equivalence which may vary by content\ntype."
                }
            },
            "type": "object"
        },
        "SearchNowAds__AdExpirationCriteria": {
            "description": "Container for data about when an ad should be expired.\nWill be attached to an Entry and read by clients.",
            "id": "SearchNowAds__AdExpirationCriteria",
            "properties": {
                "expirationTimestampSeconds": {
                    "description": "No matter what, the ad should not be displayed after time time.\nThis is a unix UTC timestamp.\nThis should always be >= view_until_timestamp_seconds.",
                    "format": "int64",
                    "type": "string"
                },
                "viewUntilTimestampSeconds": {
                    "description": "If the ad is not viewed by this time, it should be hidden in the feed.\nThis is a unix UTC timestamp.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowAds__AdMetadata": {
            "description": "Container for metadata used for Ads in Discover.",
            "id": "SearchNowAds__AdMetadata",
            "properties": {
                "viewReportSpec": {
                    "description": "Contains conditions that determine when to report to the server.",
                    "items": {
                        "$ref": "SearchNowAds__ViewReportSpec"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowAds__ViewReportSpec": {
            "description": "Contains conditions that determine when to report to the server. Even\nthough all the fields are marked optional, we will not report to the\nserver unless *all* the values are valid.",
            "id": "SearchNowAds__ViewReportSpec",
            "properties": {
                "deferReportUntilViewEnd": {
                    "description": "Report after the view completes. More specifically, if the value is\nfalse then we will report when the card exposure >= min_view_percent\nand the card has been viewed for >= min_view_duration_ms.\nIf the value is true, then we still wait for exposure >=\nmin_view_percent and card has been viewed for >= min_view_duration_ms\nbut we will *wait* to report until we have either stopped scrolling,\nor the view is destroyed.",
                    "type": "boolean"
                },
                "minViewDurationMs": {
                    "description": "How long the item must be viewed for before reporting. The timer\nto record the duration starts when the user has finished scrolling.",
                    "format": "int32",
                    "type": "integer"
                },
                "minViewPercent": {
                    "description": "How much of the item/card must be visible before reporting. The\nvalid values are between 0.0 and 1.0.",
                    "format": "float",
                    "type": "number"
                },
                "reportUrl": {
                    "description": "The URL that will be fetched by the client to report the view. This is\ntypically a gen204 request that does not return any content, and any\nresponse is ignored by the client. This must be a non-empty string.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__AgsaChimeNotificationPayload": {
            "description": "The AGSA specific payload for a Chime notification.\nChime Source that wraps/delivers this payload:\nnotifications/frontend/data/common/frontend_notification_thread.proto",
            "id": "SearchNowPushProtoChimepayloads__AgsaChimeNotificationPayload",
            "properties": {
                "clickAction": {
                    "$ref": "SearchNowPushProtoChimepayloads__ChimeAction",
                    "description": "Required. The action the client should take when the notification is clicked."
                },
                "clientOpaquePayload": {
                    "description": "Optional. The API for notifications is defined by the client. This proto is shared\nbetween the client and the server. The client invokes the API itself\nand therefore we have this opaque payload so the client can pass in\nan extra proto for specific handling that is not available to the server.",
                    "format": "byte",
                    "type": "string"
                },
                "contextFence": {
                    "$ref": "SearchNowPushProtoChimepayloads__ChimeContextFence",
                    "description": "Optional\nContextFence to evaluate before handling the notification. The\nfence is evaluated once when the is received. Only handles LocationFences.\nDoes not currently handle transitions (ENTERING, etc)."
                },
                "doNotSuppress": {
                    "description": "Optional. Signals to the client that this instance should not be suppressed (e.g.\nbased on any dismiss or delivery state tracked on the\nclient). However, state about this notification should still be\nrecorded as it normally would (e.g. delivery). This can be set in both\nregular server responses or push messages when the server side tracks\nenough state to decide if a notification should be shown without\nexception.",
                    "type": "boolean"
                },
                "euaBridge": {
                    "$ref": "SearchNowPushProtoChimepayloads__ChimeEuaBridge",
                    "description": "Optional. The data needed to continue recording EUA in chime. Failure to provide this\nfield will mean some ExecutedUserAction functionality will not work with\nchime."
                },
                "loggingPayload": {
                    "$ref": "SearchNowPushProtoChimepayloads__ChimeLoggingPayload",
                    "description": "Required. Data used for search logging."
                },
                "silentlyDrop": {
                    "description": "Optional. If true, the client should return Action.DISCARD to chime SDK. This field\nis useful for load-testing.",
                    "type": "boolean"
                },
                "smallIcon": {
                    "description": "Optional. Explicitly set the Android small icon to be used for a Chime notification.\nUse default icon, if not provided.",
                    "enum": [
                        "DEFAULT_ICON",
                        "STOCK_UP",
                        "STOCK_DOWN",
                        "NEWS",
                        "MEETING",
                        "NEARBY",
                        "CALENDAR",
                        "TIME_TO_LEAVE",
                        "REMINDER_TIME",
                        "BARCODE",
                        "FLIGHT_DEPART",
                        "PUBLIC_ALERT",
                        "REMINDER",
                        "BASEBALL",
                        "BASKETBALL",
                        "CRICKET",
                        "FOOTBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL",
                        "TRAFFIC_DESRUPTION_ROAD_CLOSURE",
                        "TRAFFIC_DESRUPTION_ACCIDENT",
                        "TRAFFIC_DESRUPTION_CONTRUCTION",
                        "TRAFFIC_DESRUPTION_JAMCIDENT",
                        "TRAFFIC_DESRUPTION_OTHER_TRIANGLE",
                        "PUBLIC_TRANSIT",
                        "BIKE",
                        "WALK",
                        "TRAFFIC_LIGHT",
                        "TRAFFIC_NORMAL",
                        "TRAFFIC_HEAVY",
                        "TRAFFIC",
                        "WEATHER",
                        "PLAY_ARROW_WHITE",
                        "STOCK_TRENDING_UP",
                        "STOCK_TRENDING_DOWN",
                        "STOCK_TRENDING_FLAT",
                        "MOVIE",
                        "TV",
                        "MUSIC",
                        "MUSIC_VIDEO",
                        "LOCAL_ACTIVITY",
                        "BOOK",
                        "VIDEO",
                        "EMAIL",
                        "SEARCH",
                        "GLOBE",
                        "PACKAGE_TRACKING",
                        "BILL_PAY",
                        "ELECTIONS_BALLOT_BOX",
                        "ELECTIONS_DEMOCRATIC",
                        "ELECTIONS_REPUBLICAN",
                        "MEDAL",
                        "OLYMPICS_RIO_SHAPE",
                        "OLYMPICS_RIO_WORD",
                        "PRICE_TAG",
                        "TRANSLATE",
                        "AT_A_PLACE_CROSSHAIR",
                        "AT_A_PLACE_BULLSEYE",
                        "INFERRED_REMINDER",
                        "AMUSEMENT_PARK",
                        "HOTEL",
                        "LANDMARK",
                        "MALL",
                        "MUSEUM",
                        "RESTAURANT",
                        "STORE",
                        "SHOPPING_CART",
                        "SHOPPING_BASKET",
                        "POLLEN_COUNT",
                        "ASSISTANT",
                        "GRAY_BELL",
                        "WORD_COACH"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Asset name on Android: quantum_ic_news_white_24",
                        "",
                        "",
                        "Current Android Usage\nCalendar - Low\nAsset name on Android: stat_notify_calendar",
                        "Current Android Usage\nCalendar - active, passive\nFlightTimeToLeave\nTimeToLeave\nAsset name on Android: ic_stat_time_to_leave",
                        "Current Android Usage\nCarRental\nLastTrainHome\nLastTrainHome\nAsset name on Android: stat_notify_reminder_time",
                        "Current Android Usage\nFlightBoardingPass\nMoonshineEventTicket\nMovieTicket\nAsset name on Android: ic_bp_notification",
                        "Current Android Usage\nFlightStatusi\nAsset name on Android: stat_notify_flight_depart",
                        "Current Android Usage\nPublicAlert\nAsset name on Android: stat_notify_public_alert",
                        "Current Android Usage\nReminder\nAsset name on Android: ic_reminder",
                        "Current Android Usage\nSports\nAsset name on Android: ic_baseball",
                        "Asset name on Android: ic_basketball",
                        "Asset name on Android: ic_cricket",
                        "Asset name on Android: ic_football",
                        "Asset name on Android: ic_hockey",
                        "Asset name on Android: ic_soccer",
                        "Asset name on Android: ic_rugby",
                        "Asset name on Android: ic_sports_tennis_white_24",
                        "Asset name on Android: ic_australian_football",
                        "Current Android Usage\nTrafficIncidents\nAsset name on Android: stat_notify_road_closure",
                        "Asset name on Android: stat_notify_accident",
                        "Asset name on Android: stat_notify_construction",
                        "Asset name on Android: ic_jamcident",
                        "Asset name on Android: stat_notify_traffic_desruption_other_triangle",
                        "Current Android Usage\nTrafficIncident\nAsset name on Android: stat_notify_public_transit",
                        "Asset name on Android: stat_notify_bike",
                        "Asset name on Android: stat_notify_walk",
                        "Asset name on Android: stat_notify_traffic_light",
                        "Asset name on Android: stat_notify_traffic_normal",
                        "Asset name on Android: stat_notify_traffic_heavy",
                        "Asset name on Android: stat_notify_traffic",
                        "Current Android Usage\nWeather\nAsset name on Android: stat_notify_weather",
                        "Asset name on Android: quantum_ic_play_arrow_white_24",
                        "Icon used to indicate a particular stock has trended up.\nAsset name on Android: ic_trending_up_white_24.",
                        "Icon used to indicate a particular stock has trended down.\nAsset name on Android: ic_trending_down_white_24.",
                        "Icon used to indicate a particular stock has trended flat.\nAsset name on Android: ic_trending_flat_white_24.",
                        "Current Android Usage\nKE-Now InterestUpdate\nAsset name on Android: quantum_ic_movie_white_24",
                        "Asset name on Android: quantum_ic_tv_white_24",
                        "Asset name on Android: quantum_ic_music_note_white_24",
                        "Asset name on Android: quantum_ic_music_video_white_24",
                        "Asset name on Android: quantum_ic_local_activity_white_24",
                        "Asset name on Android: quantum_ic_book_white_24",
                        "Current Android Usage\nVideo Highlights\nAsset name on Android: quantum_ic_play_circle_filled_white_24",
                        "Asset name on Android: ic_email",
                        "Current Android Usage\nPertinent Questions\nAsset name on Android: quantum_ic_search_white_24",
                        "Asset name on Android: ic_globe",
                        "Current Android Usage\nPackage tracking\nAsset name on Android: ic_local_shipping",
                        "Current Android Usage\nBill Pay\nAsset name on Android: ic_action_paynow_normal",
                        "Current Android Usage\nElections Voting Reminders, Election Results\nAsset name: ic_elections_ballotbox",
                        "Asset name: ic_elections_democratic",
                        "Asset name: ic_elections_republican",
                        "Notifications for olympics now experience (go/o16-notifications)\nAvailable from AGSA version 5.14 onwards.\nAsset name: ic_medal",
                        "Asset name: ic_rio_shape\nRemoved AGSA version 9.0.",
                        "Asset name: ic_rio_word\nRemoved AGSA version 9.0.",
                        "Current Android Usage\nPrice Drop\nAsset name on Android: ic_tag",
                        "Available from AGSA version 6.3 onwards.\nAsset name on Android: quantum_ic_g_translate_white_24",
                        "Available from AGSA version 6.5 onwards.\nAsset name on Android: quantum_ic_my_location_white",
                        "Available from AGSA version 6.5 onwards.\nAsset name on Android: stat_my_location_bullseye",
                        "Asset name on Android: quantum_ic_assignment_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_local_play_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_hotel_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_account_balance_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_local_mall_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_account_balance_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_restaurant_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_store_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_shopping_cart_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_shopping_basket_white_24",
                        "Available from AGSA version 7.0 onwards.\nAsset name on Android: ic_pollen_count",
                        "Available from AGSA version 7.2 onwards.\nAsset name on Android: ic_assistant_light",
                        "TODO (hhuo): add available AGSA version\nIcon that will be displayed in the notification prompt\nAsset name on Android: now_feed_prompt_bell_circle",
                        "Current Android Usage\nWordCoach\nAsset name on Android: stat_notify_word_coach"
                    ],
                    "type": "string"
                },
                "veInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "Optional. VisualElement identifier for corresponding UI element and information for\nclient on how to log it."
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__AgsaChimeRegistrationPayload": {
            "description": "This message is sent to Chime during a storeTarget call. This is used to\nregister a device.\nThis message must never be renamed or the Any proto's Type will break.",
            "id": "SearchNowPushProtoChimepayloads__AgsaChimeRegistrationPayload",
            "properties": {
                "accountHash": {
                    "description": "A hash of the account on the device that is associated with this\nregistration.",
                    "type": "string"
                },
                "clientInstanceId": {
                    "description": "Unique and stable identifier of application instance. In case of Now,\ncan be copied from ClientDescription.client_instance_id. For more details\nsee go/now-push-partner-devreg#heading=h.jl4a9rj3e01s",
                    "type": "string"
                },
                "clientTimeFormat": {
                    "description": "Description of how time should be formatted for this device.",
                    "enum": [
                        "UNKNOWN_FORMAT",
                        "TWELVE_HOURS",
                        "TWENTY_FOUR_HOURS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "deviceTag": {
                    "description": "Tag that uniquely identifies a device for a user; used to determine\nif a user should be targeted during location fanout.",
                    "format": "int32",
                    "type": "integer"
                },
                "feedDatasaverEnabled": {
                    "description": "Set to true if the user has requested an explicit Feed data-saving mode.",
                    "type": "boolean"
                },
                "isInfiniteFeedEnabled": {
                    "description": "Whether the client can handle infinite feed responses. Note: this is\ncurrently refreshed during registration and thus may have a +/- 24hr\nstaleness.",
                    "type": "boolean"
                },
                "smartspaceEnabled": {
                    "description": "Set to true if the device supports Smartspace.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__ChimeAction": {
            "description": "An action that can be performed via Chime notifications.",
            "id": "SearchNowPushProtoChimepayloads__ChimeAction",
            "properties": {
                "actionType": {
                    "description": "Action type to associate with this action, for action logging",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "feedback": {
                    "$ref": "SearchNowPushProtoChimepayloads__ChimeFeedback",
                    "description": "Actions to provide feedback such as iHNR."
                },
                "opaqueNotificationAction": {
                    "description": "This action is provided and handled on the client. Servers cannot set\nthis value.\nProto value: gsa.notification.OpaqueNotificationAction\nDefined in:\n  jcg.android.apps.shared.notifications/local_notification.proto",
                    "format": "byte",
                    "type": "string"
                },
                "openUrlAction": {
                    "$ref": "Sidekick__OpenUrlAction",
                    "description": "Opens a URL (web or Android intent)."
                },
                "searchAction": {
                    "$ref": "Sidekick__SearchAction",
                    "description": "Performs a search on GSA."
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__ChimeContextFence": {
            "description": "Represents a context fence, which can either be an AND,\nOR, or NOT of other context fences.  Or, one of the fences for\na particular context name.",
            "id": "SearchNowPushProtoChimepayloads__ChimeContextFence",
            "properties": {
                "fenceList": {
                    "description": "For AND and OR types, this is the list of ContextFence messages\nthat should be ANDed or ORed together.  For NOT type, this\nshould contain a single element.",
                    "items": {
                        "$ref": "SearchNowPushProtoChimepayloads__ChimeContextFence"
                    },
                    "type": "array"
                },
                "locationFence": {
                    "$ref": "SearchNowPushProtoChimepayloads__ChimeLocationFence",
                    "description": "Should be set only when type is LOCATION_FENCE."
                },
                "type": {
                    "enum": [
                        "UNKNOWN_CONTEXT_FENCE_TYPE",
                        "AND",
                        "OR",
                        "NOT",
                        "LOCATION_FENCE"
                    ],
                    "enumDescriptions": [
                        "",
                        "AND expression",
                        "OR expression",
                        "NOT expression",
                        "Location-based fence"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__ChimeEuaBridge": {
            "description": "The purpose of this message is to carry data that is needed for logging EUA\nthat is not available in the Chime protocol. This is a stop gap until the new\nlogging metric recording is available.",
            "id": "SearchNowPushProtoChimepayloads__ChimeEuaBridge",
            "properties": {
                "entry": {
                    "$ref": "Sidekick__Entry"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__ChimeFeedback": {
            "description": "Actions for providing feedback on a notification.",
            "id": "SearchNowPushProtoChimepayloads__ChimeFeedback",
            "properties": {
                "feedback": {
                    "$ref": "Sidekick_Notification_NotificationFeedback",
                    "description": "Optional. Dialog to provide additional feedback when the action is executed."
                },
                "type": {
                    "description": "Required. The type of feedback that the action represents.",
                    "enum": [
                        "UNDEFINED",
                        "THUMBS_UP",
                        "THUMBS_DOWN"
                    ],
                    "enumDescriptions": [
                        "",
                        "Allows the user to specify this notification is useful.\nIf this is executed, THUMBS_UP and THUMBS_DOWN will be removed from\nthe displayed notification's inline controls, if present.",
                        "Allows the user to specify this notification is not useful.\nIf this is selected, the notification will be dismissed."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__ChimeLocationFence": {
            "description": "Represents the parameters for a location-based fence.",
            "id": "SearchNowPushProtoChimepayloads__ChimeLocationFence",
            "properties": {
                "centerLatitudeE7": {
                    "description": "This represents the center latitude\nin E7 representation.",
                    "format": "int32",
                    "type": "integer"
                },
                "centerLongitudeE7": {
                    "description": "This represents the center longitude\nin E7 representation.",
                    "format": "int32",
                    "type": "integer"
                },
                "innerRadiusMeters": {
                    "description": "This represents the inner radius of the circular\nregion.  A user's location transitions from outside to inside only when\nthe user's location is found to be closer than inner_radius_meters away\nfrom the center.\nNote that the inner_radius_meters must be less than or equal to\nouter_radius_meters, and effectively, implement hysteresis to deal with\nnoisy location data.",
                    "format": "double",
                    "type": "number"
                },
                "outerRadiusMeters": {
                    "description": "This represents the outer radius in meters of\nthe circular region.  A user's location transitions from inside to\noutside only when the user's location is found to be farther than\nouter_radius_meters away from the center.\nNote that the outer_radius_meters must be greater than or equal to\ninner_radius_meters, and effectively, implements hysteresis to deal\nwith noisy location data.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__ChimeLoggingPayload": {
            "description": "Proto to be shared between Search's Chime surfaces.\nThe proto contains common logging information needed between all surface\nareas.",
            "id": "SearchNowPushProtoChimepayloads__ChimeLoggingPayload",
            "properties": {
                "contentId": {
                    "$ref": "Sidekick__ContentId",
                    "description": "Required. This id uniquely identifies a notification based on per-notification\nidentifiers."
                },
                "eventId": {
                    "$ref": "__EventIdMessage",
                    "description": "Required. The event ID for the push notification event."
                },
                "logMetadata": {
                    "$ref": "SearchNotifications__LogMetadata",
                    "description": "Required. Metadata about the action needed by go/now-logjoiner"
                },
                "logjoinId": {
                    "description": "Required. Identifies the specific payload for a single event_id.",
                    "format": "int32",
                    "type": "integer"
                },
                "notificationMetadata": {
                    "$ref": "SearchNotifications__NotificationMetadata",
                    "description": "Required. Metadata about a notification that is returned by clients, along with the\naction on that notification."
                },
                "userActionMetadata": {
                    "$ref": "SearchNotifications__UserActionMetadata",
                    "description": "Required. Represents a user action performed on the client. This data is stored\nin ACTIONS_SERVING_V2 in Kansas.\nSee design at go/actions-serving-v2."
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__GoChimeNotificationPayload": {
            "description": "The Google Go specific payload for a Chime notification.\nChime Source that wraps/delivers this payload:\nnotifications/frontend/data/common/frontend_notification_thread.proto",
            "id": "SearchNowPushProtoChimepayloads__GoChimeNotificationPayload",
            "properties": {
                "loggingPayload": {
                    "$ref": "SearchNowPushProtoChimepayloads__ChimeLoggingPayload",
                    "description": "Required. Data used for search logging."
                },
                "silentlyDrop": {
                    "description": "If true, the client should return Action.DISCARD to chime SDK. This field\nis useful for load-testing.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__IgaChimeRegistrationPayload": {
            "description": "This message is sent to Chime during a storeTarget call and is used to\nregister a device.\nThis message must never be renamed or the Any proto's Type will break.",
            "id": "SearchNowPushProtoChimepayloads__IgaChimeRegistrationPayload",
            "properties": {
                "accountHash": {
                    "description": "A hash of the account on the device that is associated with this\nregistration.",
                    "type": "string"
                },
                "clientInstanceId": {
                    "description": "Unique and stable identifier of application instance. In case of Now,\ncan be copied from ClientDescription.client_instance_id. For more details\nsee go/now-push-partner-devreg#heading=h.jl4a9rj3e01s",
                    "type": "string"
                },
                "clientTimeFormat": {
                    "description": "Description of how time should be formatted for this device.",
                    "enum": [
                        "UNKNOWN_FORMAT",
                        "TWELVE_HOURS",
                        "TWENTY_FOUR_HOURS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "deviceTag": {
                    "description": "Tag that uniquely identifies a device for a user; used to determine\nif a user should be targeted during location fanout.",
                    "format": "int32",
                    "type": "integer"
                },
                "insRegistrationParams": {
                    "$ref": "SearchNowPushProtoChimepayloads__InsRegistrationParams"
                },
                "isInfiniteFeedEnabled": {
                    "description": "Whether the client can handle infinite feed responses. Note: this is\ncurrently refreshed during registration and thus may have a +/- 24hr\nstaleness.",
                    "type": "boolean"
                },
                "isSplitFeed": {
                    "description": "Whether the client has split feed enabled.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowPushProtoChimepayloads__InsRegistrationParams": {
            "description": "Parameters needed for iNS registration. This includes all additional params\nthat can not be set on Chime's RenderContext and are necessary for iNS.",
            "id": "SearchNowPushProtoChimepayloads__InsRegistrationParams",
            "properties": {},
            "type": "object"
        },
        "SearchNowUiPiet_ParameterizedText_Parameter": {
            "description": "A parameter to be substituted in the ParameterizedText. Every type of\nparameter depends on some information only available on the client at\nrendering time, and not on the server at card and string creation time. In\nparticular, if the value can be determined on the server, it should be\ninlined in the string on the server.",
            "id": "SearchNowUiPiet_ParameterizedText_Parameter",
            "properties": {
                "location": {
                    "$ref": "SearchNowUiPiet__Location",
                    "description": "A location to be used for computing relative distances or travel times."
                },
                "timestampSeconds": {
                    "description": "An absolute timestamp in seconds since the Unix epoch.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Accessibility": {
            "description": "Defines accessibility related attributes for Piet elements.",
            "id": "SearchNowUiPiet__Accessibility",
            "properties": {
                "accessibilityId": {
                    "$ref": "SearchNowUiPiet__ParameterizedText",
                    "description": "NOTE: parameters are not supported for accessibility_id. Only the 'text'\nfield should be used to specify the identifier."
                },
                "accessibilityIdBinding": {
                    "$ref": "SearchNowUiPiet__ParameterizedTextBindingRef",
                    "description": "ID coming from a template."
                },
                "description": {
                    "$ref": "SearchNowUiPiet__ParameterizedText",
                    "description": "A string that may be spoken by the system. (TalkBack on Android,\nVoiceOver on iOS, browser on Web)"
                },
                "descriptionBinding": {
                    "$ref": "SearchNowUiPiet__ParameterizedTextBindingRef",
                    "description": "In case this is coming from a template."
                },
                "roles": {
                    "description": "Roles that this UI element plays in the UI. These annotations will be used\nby the accessibility framework for applying role-specific treatments.",
                    "enumDescriptions": [
                        "No special role. The default value, maps to 0.",
                        "Indicates that the UI element is a list containing other elements.",
                        "Indicates that the UI element is a header for a section."
                    ],
                    "items": {
                        "enum": [
                            "ACCESSIBILITY_ROLE_UNSPECIFIED",
                            "LIST",
                            "HEADER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Action": {
            "description": "Defines an Action which can be raised when the user clicks a UI element. The\naction can be defined for the full slice or something inside a slice such as\na suggestion chip. All Actions should be defined as extensions, don\u2019t define\nfields in this proto directly.",
            "id": "SearchNowUiPiet__Action",
            "properties": {},
            "type": "object"
        },
        "SearchNowUiPiet__Actions": {
            "description": "Multiple actions can be associated with every UI element. To keep the set of\nActions consistent among multiple UI elements, they\u2019re all defined in a\ndedicated message.",
            "id": "SearchNowUiPiet__Actions",
            "properties": {
                "onClickAction": {
                    "$ref": "SearchNowUiPiet__Action",
                    "description": "Action to be executed when the user taps (clicks) on a UI element."
                },
                "onForceTouchAction": {
                    "$ref": "SearchNowUiPiet__Action",
                    "description": "Action to be executed when the user force touches on a UI element. May not\nbe supported on all platforms.\n\nEx. Preview the matching detail UI for a UI element with this action."
                },
                "onHideActions": {
                    "description": "These actions will fire once a view with visibility above the threshold\ngoes below the threshold.\n\nEx. A hide action at 0.5 will trigger when a view that was half visible\nbecomes less than half visible, and not trigger again until the view has\nbecome more than half visible (reset) and then becomes less than half\nvisible.",
                    "items": {
                        "$ref": "SearchNowUiPiet__VisibilityAction"
                    },
                    "type": "array"
                },
                "onLongClickAction": {
                    "$ref": "SearchNowUiPiet__Action",
                    "description": "Action to be executed when the user long-clicks (taps & holds) a UI\nelement."
                },
                "onViewActions": {
                    "description": "These actions will fire once a view with visibility below the threshold\ngoes above the threshold\n\nEx. A view action at 0.5 will trigger when a view that was less than half\nvisible becomes half visible, and not trigger again until the view has\nbecome less than half visible (reset) and then becomes more than half\nvisible.",
                    "items": {
                        "$ref": "SearchNowUiPiet__VisibilityAction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ActionsBindingRef": {
            "description": "Actions binding references are always optional.",
            "id": "SearchNowUiPiet__ActionsBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__BindingContext": {
            "description": "A single binding context, such as a whole Frame, or a single row in a grid.\nBinding IDs must be unique; if two or more BindingValues with the same\n`binding_id` are found within the same binding context,\nERR_DUPLICATE_BINDING_VALUE is raised.",
            "id": "SearchNowUiPiet__BindingContext",
            "properties": {
                "bindingValues": {
                    "description": "The set of all bindings for a Template.",
                    "items": {
                        "$ref": "SearchNowUiPiet__BindingValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__BindingValue": {
            "description": "A BindingValue is a name/value pair which provides a value to be substituted\nwherever the specified `binding_id` is defined in the Template.\nNext Id: 18",
            "id": "SearchNowUiPiet__BindingValue",
            "properties": {
                "actions": {
                    "$ref": "SearchNowUiPiet__Actions",
                    "description": "Actions that may be bound at runtime."
                },
                "bindingId": {
                    "description": "The name of the binding within the Template where this BindingValue should\nbe substituted. Must be unique within a binding context.",
                    "type": "string"
                },
                "bindingIdFromTranscludingTemplate": {
                    "description": "Use an already existing bound value in a transcluded template.\nThis should be used to pass parameters between templates.\n\nFor example:\nLet's assume we have a template that shows a text with styling:\n\ntemplate {\n  id: \"StyledText\"\n  ...\n  element {\n    text_element {\n      parameterized_text_binding { binding_id: \"StyledTextContent\" }\n    }\n  }\n  ...\n}\n\nAnd we want to create a template that shows the styled text overlayed\nover an image:\n\ntemplate {\n  id: \"ImageWithText\"\n  ...\n  element {\n    image_element {\n      image_binding {\n        binding_id: \"TopLevelImage\"\n      }\n    }\n    overlays {\n      template_invocation {\n        id: 'StyledText'\n        binding_contexts {\n          binding_values {\n            binding_id: \"StyledTextContent\"\n            binding_id_from_transcluding_template: \"TopLevelText\"\n          }\n        }\n      }\n    }\n  }\n  ...\n}\n\nThe invocation of the template will then be:\n\nframe {\n  template_invocation {\n    id: \"ImageWithText\"\n    binding_contexts {\n      binding_values {\n        binding_id: \"TopLevelText\"\n        ...\n      }\n      binding_values {\n        binding_id: \"TopLevelImage\"\n        ...\n      }\n    }\n  }\n}",
                    "type": "string"
                },
                "boundStyle": {
                    "$ref": "SearchNowUiPiet__BoundStyle",
                    "description": "Style that is bound to an element, and overrides the styles defined by\nthe element. The Style attributes that can be bound are only a subset\nof all possible Styles."
                },
                "cellWidth": {
                    "$ref": "SearchNowUiPiet__GridCellWidth",
                    "description": "Width of a cell."
                },
                "chunkedText": {
                    "$ref": "SearchNowUiPiet__ChunkedText",
                    "description": "ChunkedText to be used in a TextElement."
                },
                "customElementData": {
                    "$ref": "SearchNowUiPiet__CustomElementData",
                    "description": "Data to be displayed in a CustomElement. Clients using Piet should add\nextensions to this proto to pass their custom data."
                },
                "element": {
                    "$ref": "SearchNowUiPiet__Element",
                    "description": "An Element, to allow binding of generic chunks of layout.\nMay have a performance penalty on some platforms."
                },
                "hostBindingData": {
                    "$ref": "SearchNowUiPiet__HostBindingData",
                    "description": "Data to provide a host in order for host to fulfill a binding for Piet.\nWhen Piet binds a value it will first look to see if there is a\nHostBindingData set. If there is one, then Piet asks the host for a new\nBindingValue to use. The host will be given this BindingValue from which it\ncan use HostBindingData to determine how to create a new BindingValue. This\nallows the host to selectively alter the server specified BindingValue. If\nthe BindingValue returned by the host has HostBindingData set it will be\nignored. If there is no binding provided in the oneof then an error will be\nraised.  See go/piet-errors for a list of possible errors that could be\nraised.\n\nPiet will use the binding reference and ask the host for a specific\nbinding based on that reference type. As an example, Piet will request the\nhost for an Image when ImageBindingRef is specified.\n\nAn example usage of a host binding would be to check if something has\nbeen stored on the device and signaling with icons whether content is\nthere or not.  The server can specify where this element will appear and\nthe host can determine what to show or even if the element should be\nshown."
                },
                "image": {
                    "$ref": "SearchNowUiPiet__Image",
                    "description": "Image to be used in an ImageElement."
                },
                "logData": {
                    "$ref": "SearchNowUiPiet__LogData"
                },
                "parameterizedText": {
                    "$ref": "SearchNowUiPiet__ParameterizedText",
                    "description": "ParameterizedText to be used in a TextElement."
                },
                "templateInvocation": {
                    "$ref": "SearchNowUiPiet__TemplateInvocation",
                    "description": "Binding value for a TemplateInvocation."
                },
                "ved": {
                    "description": "A Base64-encoded serialized ClickTrackingCGI proto that identifies the\nlogged Visual Element corresponding to a bound Piet Template.",
                    "type": "string"
                },
                "visibility": {
                    "description": "Binding value for visibility, which changes the VisibilityState of an\nElement. This value can override the default visibility value set on an\nElement.",
                    "enum": [
                        "VISIBILITY_UNSPECIFIED",
                        "VISIBLE",
                        "INVISIBLE",
                        "GONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "By default, every element is visible. If set to VISIBLE, at least one of\nthe elements in the `values` oneof MUST be present, otherwise an error is\nraised.",
                        "The UI element corresponding to this binding is included in\nlayout computation, but its visible UI is hidden.",
                        "The UI element corresponding to this binding is completely\nremoved from the view hierarchy. It is not used to compute layout. This\nis the equivalent of Android\u2019s visibility:GONE."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Border": {
            "description": "Definition of a Border.",
            "id": "SearchNowUiPiet__Border",
            "properties": {
                "color": {
                    "description": "The color of the border.",
                    "format": "uint32",
                    "type": "integer"
                },
                "width": {
                    "description": "The thickness of the border in DP.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Borders": {
            "description": "A set of four Borders for all four edges of a view.\nNextId: 8",
            "id": "SearchNowUiPiet__Borders",
            "properties": {
                "bitmask": {
                    "description": "A bitmask representing which sides should have borders. Bit values are\ndefined by the `Edges` enum. If no sides are specified (the default), then\nall sides will have a border.\n\nNOTICE: having a rounded corner with a border only on one side is strongly\ndiscouraged as it leads to undefined and inconsistent behavior across\nplatforms.",
                    "format": "int32",
                    "type": "integer"
                },
                "bottom": {
                    "$ref": "SearchNowUiPiet__Border",
                    "description": "Bottom border."
                },
                "color": {
                    "description": "The color of the border.",
                    "format": "uint32",
                    "type": "integer"
                },
                "end": {
                    "$ref": "SearchNowUiPiet__Border",
                    "description": "Border for trailing edge (right for LTR languages; left for RTL)."
                },
                "start": {
                    "$ref": "SearchNowUiPiet__Border",
                    "description": "Border for leading edge (left for LTR languages; right for RTL)."
                },
                "top": {
                    "$ref": "SearchNowUiPiet__Border",
                    "description": "Top border."
                },
                "width": {
                    "description": "Width of the border.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__BoundStyle": {
            "description": "Style that can be bound to an element. Not all style attributes can be bound\ndue to performance (specifically, this affects view recycling).\n\nPLEASE NOTE: Field names inside this message should bear the exact same names\n    as their counterparts in the Style message.\nLINT.IfChange",
            "id": "SearchNowUiPiet__BoundStyle",
            "properties": {
                "background": {
                    "$ref": "SearchNowUiPiet__Fill",
                    "description": "See comments for Style.background."
                },
                "color": {
                    "description": "See comments for Style.color.",
                    "format": "uint32",
                    "type": "integer"
                },
                "imageLoadingSettings": {
                    "$ref": "SearchNowUiPiet__ImageLoadingSettings",
                    "description": "See comments for Style.image_loading_settings"
                },
                "scaleType": {
                    "description": "See comments for Style.scale_type",
                    "enum": [
                        "SCALE_TYPE_UNSPECIFIED",
                        "CENTER_INSIDE",
                        "CENTER_CROP"
                    ],
                    "enumDescriptions": [
                        "When scale type is unspecified, we err on the side of preserving all\nareas of the image, so this is equivalent to CENTER_INSIDE.",
                        "Scale the image uniformly such that width or height will be equal to the\nsize of its view. The image will not be cropped.",
                        "Scale the image uniformly to fill its view. Some portion of the image\nwill be cropped."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__BoxShadow": {
            "description": "Defines a box shadow, as described in the CSS spec:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow.",
            "id": "SearchNowUiPiet__BoxShadow",
            "properties": {
                "blurRadius": {
                    "description": "The blur radius of the shadow. The higher the number, the more blurred the\nshadow will be.",
                    "format": "int32",
                    "type": "integer"
                },
                "color": {
                    "description": "The color of the shadow.",
                    "format": "uint32",
                    "type": "integer"
                },
                "isInset": {
                    "description": "Defines whether the shadow should appear on the inside (is_inset == true),\nor the outside (is_inset == false).\nNot supported by iOS.",
                    "type": "boolean"
                },
                "offsetX": {
                    "description": "Defines the horizontal offset of the shadow.\n * A positive value puts the shadow on the right side of the box (does not\n   flip in RTL presentation).\n * A negative value puts the shadow on the left side of the box.",
                    "format": "int32",
                    "type": "integer"
                },
                "offsetY": {
                    "description": "Defines the vertical offset of the shadow.\n * A positive value puts the shadow below the box.\n * A negative value puts the shadow above the box.",
                    "format": "int32",
                    "type": "integer"
                },
                "spreadRadius": {
                    "description": "The spread radius of the shadow. A positive value increases the size of the\nshadow, a negative value decreases the size of the shadow.\nNot supported by iOS.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Chunk": {
            "description": "A single region of content within a ChunkedText. A chunk can either be\ncomposed of an image or a styled text chunk.",
            "id": "SearchNowUiPiet__Chunk",
            "properties": {
                "actions": {
                    "$ref": "SearchNowUiPiet__Actions",
                    "description": "Inlined actions."
                },
                "actionsBinding": {
                    "$ref": "SearchNowUiPiet__ActionsBindingRef",
                    "description": "Actions from a template, bound at runtime."
                },
                "imageChunk": {
                    "$ref": "SearchNowUiPiet__StyledImageChunk",
                    "description": "A styled piece of image content."
                },
                "textChunk": {
                    "$ref": "SearchNowUiPiet__StyledTextChunk",
                    "description": "A styled piece of text content."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ChunkedText": {
            "description": "ChunkedText allows composing a single string of multiple chunks with\ndifferent formatting. In addition to this, a chunk can also be composed of an\nimage that gets inlined with the surrounding text chunks. Image chunks are\naligned to the text baseline. Chunked text flows independently from the\nchunked regions. Line wrapping is supported across different chunks. For\nexample a string composed of three chunks that needs to be wrapped in two\nlines will be wrapped as follows:\n[chunk a [chunk]]\n[[b]]",
            "id": "SearchNowUiPiet__ChunkedText",
            "properties": {
                "chunks": {
                    "description": "The set of chunks that compose this chunked text.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Chunk"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ChunkedTextBindingRef": {
            "id": "SearchNowUiPiet__ChunkedTextBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                },
                "isOptional": {
                    "description": "Indicates whether this binding reference is optional.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ColorStop": {
            "description": "A GradientStop is one color in a gradient. A simple gradient is composed of\nat least two stops: starting with `position_percent` 0 & ending with\n`position_percent` 100. The linear gradient is interpolated between these two\nendpoints. More complex gradients can be achieved by inserting more color\nstops into the list.",
            "id": "SearchNowUiPiet__ColorStop",
            "properties": {
                "color": {
                    "description": "ARGB color of the color stop.",
                    "format": "uint32",
                    "type": "integer"
                },
                "positionPercent": {
                    "description": "Position of this color stop, expressed as a percent. It is an error for\nposition_percent to be outside [0..100].",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Content": {
            "description": "Content is a placeholder which contains a layout Element, or something which\nresolves to a layout Element.",
            "id": "SearchNowUiPiet__Content",
            "properties": {
                "boundElement": {
                    "$ref": "SearchNowUiPiet__ElementBindingRef",
                    "description": "A binding to look up an element.\nMay have a performance penalty on some platforms."
                },
                "element": {
                    "$ref": "SearchNowUiPiet__Element",
                    "description": "Element, specified inline."
                },
                "templateBinding": {
                    "$ref": "SearchNowUiPiet__TemplateBindingRef",
                    "description": "See comment on template field; this looks up the template based on the\nID in the bindings."
                },
                "templateInvocation": {
                    "$ref": "SearchNowUiPiet__TemplateInvocation",
                    "description": "An instance of a Template, represented by a TemplateInvocation.\n\nIf the referenced template has several binding contexts, an Element\ninstance will be created for each one.\n\nThis may happen in one of two cases:\n\n## The Content appears inside an ElementList, or repeated Element\n\nFor example:\nIn case there's an ElementList with the following Contents:\n\n +----------------------------+\n |         Template_1         |\n +----------------------------+\n |   Template_2 with binding  |\n |     values [ a , b , c ]   |\n +----------------------------+\n |         Template_3         |\n +----------------------------+\n\nAfter the bindings are resolved, it will become:\n +----------------------------+\n |         Template_1         |\n +----------------------------+\n | Template_2 {with data \"a\"} |\n +----------------------------+\n | Template_2 {with data \"b\"} |\n +----------------------------+\n | Template_2 {with data \"c\"} |\n +----------------------------+\n |         Template_3         |\n +----------------------------+\n\n## The Content appears in a GridCell\n\nA GridCell is created for each invocation of the template. The created\nGridCells will be added to the GridRow containing this GridCell. The\nwidth of the created GridCells is duplicated from the GridCell containing\nthis Content.\n\nFor example:\nIn case there's a GridRow with the following GridCells:\n +----------+------------------------+----------+\n |   Cell   | Cell with Content with |   Cell   |\n |          |  Template 2 with data  |          |\n |     1    |    bindings {a,b,c }   |    3     |\n +----------+------------------------+----------+\n\nAfter the bindings are resolved, it will become:\n +----------+------------+------------+------------+---------+\n |   Cell   | Template 2 | Template 2 | Template 2 |   Cell  |\n |     1    | {data \"a\"} | {data \"b\"} | {data \"c\"} |     3   |\n +----------+------------+------------+------------+---------+\n\n\nIMPORTANT:\nThis feature may not be supported on all platforms; see go/piet-support."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__CustomBindingRef": {
            "id": "SearchNowUiPiet__CustomBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                },
                "isOptional": {
                    "description": "Indicates whether this binding reference is optional.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__CustomElement": {
            "description": "A custom view that Piet knows nothing about. Servers can use this message to\npopulate a custom proto extension, which Piet passes along to the Host for\nrendering. The Host is expected to be able to interpret and render this view\nand return to Piet, which then simply places it within the current view\nhierarchy at the proper position. If no renderer for this CustomElement can\nbe found at runtime, ERR_CUSTOM_ELEMENT_RENDERER_MISSING is raised.",
            "id": "SearchNowUiPiet__CustomElement",
            "properties": {
                "customBinding": {
                    "$ref": "SearchNowUiPiet__CustomBindingRef",
                    "description": "The binding to the BindingValue for a CustomElement."
                },
                "customElementData": {
                    "$ref": "SearchNowUiPiet__CustomElementData",
                    "description": "The data to be displayed."
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this CustomElement. If any style_ids cannot be found,\nERR_MISSING_STYLES is raised.\nDeprecated: use the StyleIdsStack on Element instead."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__CustomElementData": {
            "description": "Data to be displayed in a CustomElement. Clients using Piet should add\nextensions to this proto to pass their custom data to CustomElements.",
            "id": "SearchNowUiPiet__CustomElementData",
            "properties": {},
            "type": "object"
        },
        "SearchNowUiPiet__DarkLightCondition": {
            "description": "Whether the UI should use a dark theme (white/light text on a black/dark\nbackground) or a light theme (black/dark text on a white/light background).",
            "id": "SearchNowUiPiet__DarkLightCondition",
            "properties": {
                "mode": {
                    "enum": [
                        "UNSPECIFIED",
                        "LIGHT",
                        "DARK"
                    ],
                    "enumDescriptions": [
                        "Must not be set to UNSPECIFIED, otherwise\nERR_INVALID_MEDIA_QUERY_CONDITION will be raised.",
                        "Black/dark text on white/light background.",
                        "Light/white text on black/dark background."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__EdgeWidths": {
            "description": "A set of four values for widths of the edges of a view, used for\npaddings/margins.",
            "id": "SearchNowUiPiet__EdgeWidths",
            "properties": {
                "bottom": {
                    "description": "Bottom boundary.",
                    "format": "uint32",
                    "type": "integer"
                },
                "end": {
                    "description": "Boundary for trailing edge (right for LTR languages; left for RTL).",
                    "format": "uint32",
                    "type": "integer"
                },
                "start": {
                    "description": "Boundary for leading edge (left for LTR languages; right for RTL).",
                    "format": "uint32",
                    "type": "integer"
                },
                "top": {
                    "description": "Top boundary.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Element": {
            "description": "Element is the \"superclass\" of all container and content types, holding all\nshared parameters (styles, actions, etc).\n\nElement size expands to fill its container, unless the content is taller than\nthe container, and the container height is not specified explicitly. In that\ncase, the Element and the container both get the height of the content.\nNext Id: 27",
            "id": "SearchNowUiPiet__Element",
            "properties": {
                "accessibility": {
                    "$ref": "SearchNowUiPiet__Accessibility",
                    "description": "Every UI element can have accessibility-related fields."
                },
                "actions": {
                    "$ref": "SearchNowUiPiet__Actions",
                    "description": "Inlined actions."
                },
                "actionsBinding": {
                    "$ref": "SearchNowUiPiet__ActionsBindingRef",
                    "description": "Actions coming from a template."
                },
                "customElement": {
                    "$ref": "SearchNowUiPiet__CustomElement",
                    "description": "A custom view that Piet knows nothing about. Servers can use this message\nto populate a custom proto extension, which Piet passes along to the Host\nfor rendering. The Host is expected to be able to interpret and render\nthis view and return to Piet, which then simply places it within the\ncurrent view hierarchy at the proper position.\nIf a renderer cannot be found for a particular CustomElement in a client\nimplementation, Piet raises a ERR_CUSTOM_ELEMENT_RENDERER_MISSING & warns\nthe user at runtime. A black/grey box is displayed in place of the\nCustomElement, but the rest of the Frame is still rendered. It is\npossible for CustomElements to invoke Piet for rendering sub-views, but\nonly top-level Piet Frame protos can be embedded this way. (In other\nwords, do not try to embed Piet Elements directly inside a\nCustomElement)."
                },
                "elementList": {
                    "$ref": "SearchNowUiPiet__ElementList",
                    "description": "A vertical layout of multiple items."
                },
                "elementStack": {
                    "$ref": "SearchNowUiPiet__ElementStack",
                    "description": "Multiple items stacked on top of each other (overlay)."
                },
                "gravityHorizontal": {
                    "description": "Horizontal gravity of this element's content within the parent container\nDeprecated: use gravity_horizontal on Style instead",
                    "enum": [
                        "GRAVITY_HORIZONTAL_UNSPECIFIED",
                        "GRAVITY_START",
                        "GRAVITY_END",
                        "GRAVITY_CENTER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Align with the start side (left in LTR layouts)",
                        "Align with the end side (right in LTR layouts)",
                        "Align centered"
                    ],
                    "type": "string"
                },
                "gravityVertical": {
                    "description": "Vertical gravity of this element's content within the parent container\nDeprecated: use gravity_vertical on Style instead",
                    "enum": [
                        "GRAVITY_VERTICAL_UNSPECIFIED",
                        "GRAVITY_TOP",
                        "GRAVITY_MIDDLE",
                        "GRAVITY_BOTTOM"
                    ],
                    "enumDescriptions": [
                        "",
                        "Align with the top side",
                        "Align vertically centered",
                        "Align with the bottom side"
                    ],
                    "type": "string"
                },
                "gridRow": {
                    "$ref": "SearchNowUiPiet__GridRow",
                    "description": "A horizontal layout of multiple items."
                },
                "horizontalOverflow": {
                    "description": "Defines the overflow behavior for contents that are wider than this\nElement.\nContents can be wider than the container Element in two scenarios:\n 1. An element has defined width in its style, and the width is larger\n    than the size of the Element.\n 2. The element is a GridRow, where the width sum of cells with defined dp\n    width is larger than the containing Element.\n\nIn all other cases, contents cannot be wider than the container\nElement.\n\nIMPORTANT: This might not be supported in all implementations of Piet, due\n  to implementation/product decisions (for example, horizontal scrolling in\n  a swipable card might be disabled).",
                    "enum": [
                        "OVERFLOW_UNSPECIFIED",
                        "OVERFLOW_HIDDEN",
                        "OVERFLOW_SCROLL"
                    ],
                    "enumDescriptions": [
                        "Unspecified value, will default to OVERFLOW_HIDDEN.",
                        "All elements outside the boundaries of the view are hidden.",
                        "A scroll behavior is added to show elements that are outside of the view."
                    ],
                    "type": "string"
                },
                "imageElement": {
                    "$ref": "SearchNowUiPiet__ImageElement",
                    "description": "An image container"
                },
                "logData": {
                    "$ref": "SearchNowUiPiet__LogData"
                },
                "logDataRef": {
                    "$ref": "SearchNowUiPiet__LogDataBindingRef"
                },
                "moduleElement": {
                    "$ref": "SearchNowUiPiet__ModuleElement",
                    "description": "A view that is implemented by a secondary (non-Core) Piet Module. Not all\nPiet Elements are useful to all clients/servers, so only the basic ones\nare included in Piet Core. Common shareable elements can be implemented\nin secondary Piet Modules, which are optional modules that can be\nincluded in or excluded from Piet-based apps on an as-needed basis.\nModuleElements work similar to CustomElements, with the only difference\nbeing that CustomElements are rendered by non-Piet code, while\nModuleElements are rendered by secondary Piet Modules."
                },
                "overlays": {
                    "description": "A list of Contents to be overlaid on top of this Element.\nThis field is repeated to allow multiple overlay layers with different\ngravity settings. The index of the item inside the repeated field\ndetermines the order in which views will be laid out. Later items will\nappear above the earlier ones.\nDeprecated: To make an overlay on an Element, wrap the Element in an\nElementStack.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Content"
                    },
                    "type": "array"
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles to apply to this Element. If any style_ids cannot be found,\nERR_MISSING_STYLES is raised."
                },
                "textElement": {
                    "$ref": "SearchNowUiPiet__TextElement",
                    "description": "A simple text line"
                },
                "visibilityState": {
                    "$ref": "SearchNowUiPiet__VisibilityState",
                    "description": "Visibility state that can be controlled with binding."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ElementBindingRef": {
            "id": "SearchNowUiPiet__ElementBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                },
                "isOptional": {
                    "description": "Indicates whether this binding reference is optional.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ElementList": {
            "description": "A vertically-oriented top-to-bottom list of Contents.\nWithout explicit dimensions or constraints by the parent, this container is\nas wide as its largest child, and as tall as the sum of its children.\nCell height is always the size of the child Element, and vertical gravity is\nignored. Cell width defaults to the width of the ElementList.",
            "id": "SearchNowUiPiet__ElementList",
            "properties": {
                "contents": {
                    "description": "The list items to be laid out vertically.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Content"
                    },
                    "type": "array"
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this ElementList.\nDeprecated: use the StyleIdsStack on Element instead."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ElementStack": {
            "description": "A stacked (overlaid) bottom-to-top list of Contents.\nChildren can be smaller than the ElementStack and float around within it\nsubject to their horizontal and vertical gravity.\nWithout explicit dimensions or constraints by the parent, this container is\nas large as its largest child.\nBy default, children are the size of their content.",
            "id": "SearchNowUiPiet__ElementStack",
            "properties": {
                "contents": {
                    "description": "The items to be stacked from bottom to top.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Content"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ElevationShadow": {
            "description": "Defines a simple elevation-based shadow, as described in Material Design:\nhttps://developer.android.com/training/material/shadows-clipping",
            "id": "SearchNowUiPiet__ElevationShadow",
            "properties": {
                "elevation": {
                    "description": "Elevation of the view in dp; higher elevation creates larger shadows.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Fill": {
            "description": "Represents a Fill to be used for a Piet element.",
            "id": "SearchNowUiPiet__Fill",
            "properties": {
                "color": {
                    "description": "A solid color fill. Colors are ARGB.",
                    "format": "uint32",
                    "type": "integer"
                },
                "linearGradient": {
                    "$ref": "SearchNowUiPiet__LinearGradient",
                    "description": "A linear gradient, expressed as multiple color stops."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Font": {
            "description": "Font definitions for text elements. In the interest of preserving\nconsistency, feature authors are highly encouraged to use Fonts as part of a\nStyle, instead of applying font definitions to individual elements.",
            "id": "SearchNowUiPiet__Font",
            "properties": {
                "italic": {
                    "description": "Apply the italic style to the Font.",
                    "type": "boolean"
                },
                "letterSpacingDp": {
                    "description": "Sets text letter spacing in dp. This indicates how much space will be\nadded between characters. Negative values tighten text, whereas positive\nvalues increase space between letters. Also known as \u201ctracking\u201d in\ntypography, or \u201ccharacter spacing\u201d in image editing tools.",
                    "format": "float",
                    "type": "number"
                },
                "lineHeight": {
                    "description": "Line height, expressed as scale-independent pixels (sp), meaning that it\nscales with accessibility settings. If no line height is specified, the\ndefault spacing for that font will be used. This is usually\napproximately 1.2 times the height of the text, and should work well for\nmost platforms. Using the default does not guarantee the same height across\nplatforms; if that is needed, an explicit line height should be set.\nBecause line_height_ratio is deprecated, if both are specified, only\nline_height will be used.",
                    "format": "uint32",
                    "type": "integer"
                },
                "lineHeightRatio": {
                    "description": "Line height, expressed as a multiple of size (hence the `_ratio` suffix).\nThe default value of 1.2 is intended to work well for most scenarios\nwithout requiring feature authors to specify this explicitly.\nBehavior matches that of CSS: extra space appears between lines and evenly\nsplit above and below a block of text.\nFor example, if the ratio is 2.0 and the text is 12pt tall, there will be\n12pt of space between each pair of lines, and 6pt of space above and below\nthe block of text.\nThis field is deprecated. Please use line_height instead.\nTODO(b/119626040) Remove this field once the transition to line_height\nis complete.",
                    "format": "float",
                    "type": "number"
                },
                "size": {
                    "description": "The size of the text in scaled pixels (sp). For devices with a scaling\nfactor of 1.0, this size is equivalent to display pixels.\nCertain OS-level accessibility features allow users to increase/decrease\nfont size by a scaling factor (e.g. iOS > Dynamic Type, or Android Settings\n> Font Size, or Android > Accessibility > Large Text). If the user has\nturned on text scaling, the Host App should apply that scaling factor to\nthis numeric font size before rendering.\nNote that other related metrics such as width and height are NOT\nautomatically scaled, but line height does scale.",
                    "format": "int32",
                    "type": "integer"
                },
                "typeface": {
                    "description": "The typeface to use. Each typeface specified can either be a CommonTypeface\nor a string naming a custom typeface. The CommonTypeface actually pairs\ncommonly-used typefaces with weights. The custom one can be used to\nidentify any typeface. Multiple typefaces can be specified by the server,\nand the first one that is available on the client will be used. If none\nmatch, or if no typefaces are specified, then ERR_FONT_UNAVAILABLE is\nraised, and the system default typeface on each platform will be used. Piet\nprovides no way to request that a particular font face be downloaded at\nruntime; this should be done out-of-band if required.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Typeface"
                    },
                    "type": "array"
                },
                "typefaces": {
                    "description": "The typeface to use, e.g. \"roboto\", \"open-sans\", or \"product-sans\".\nMultiple typefaces can be specified by the server, and the first one that\nis available on the client will be used. If none match, or if no typefaces\nare specified, then ERR_FONT_UNAVAILABLE is raised, and the system default\ntypeface on each platform will be used. Each typeface\u2019s name is a custom\nstring, and should be negotiated between server and client to ensure that\ntypefaces requested by the server are available on the client. Piet\nprovides no way to request that a particular font face be downloaded at\nruntime; this should be done out-of-band if required.\nThis field is deprecated. Please use the typeface field that uses a\nTypeface message instead.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "weight": {
                    "description": "The font weight (boldness) to apply to the text.\nThis field is deprecated. Please use a Typeface, and either choose a\nCommonFont, which has the weight built in, or include the weight as part of\nthe style definition for a custom_font.",
                    "enum": [
                        "FONT_WEIGHT_UNSPECIFIED",
                        "THIN",
                        "LIGHT",
                        "REGULAR",
                        "MEDIUM",
                        "BOLD",
                        "BLACK"
                    ],
                    "enumDescriptions": [
                        "Unspecified font weight.",
                        "Thinnest font weight.",
                        "Light font weight.",
                        "Regular font weight (this is the default).",
                        "Medium font weight.",
                        "Bold font weight.",
                        "Black (extra-bold) font weight."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Frame": {
            "description": "A Frame is the top-level UI construct in Piet. Every layout is contained\nwithin a Frame. Each frame defines the contents displayed to the user as a\nsingle view, which may contain a complex set of child views.\nNextId: 13",
            "id": "SearchNowUiPiet__Frame",
            "properties": {
                "actions": {
                    "$ref": "SearchNowUiPiet__Actions",
                    "description": "Actions associated with the full Frame."
                },
                "contents": {
                    "description": "Content that makes up this Frame.\n\nThere are a few differences in the use of Content here vs. elsewhere:\n - These Contents are arranged in a vertical list layout.\n - Bindings are not supported in these Contents, since there is no\n   BindingContext available at the Frame level.\n - These Contents support sharding: each of these Contents can be recycled\n   as it leaves the screen, to reduce memory usage when scrolling a very\n   long Frame.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Content"
                    },
                    "type": "array"
                },
                "logData": {
                    "$ref": "SearchNowUiPiet__LogData",
                    "description": "Data used for logging info sent to the host."
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this Frame. If any style_ids cannot be found,\nERR_MISSING_STYLES is raised."
                },
                "stylesheet": {
                    "$ref": "SearchNowUiPiet__Stylesheet",
                    "description": "A local Stylesheet that provides styles used by Elements in this Frame.\nDEPRECATED: use stylesheets field instead."
                },
                "stylesheetId": {
                    "description": "If this is defined, the Stylesheet for the Frame is found by a lookup\nin PietSharedState.Stylesheets. If the stylesheet_id cannot be found,\nERR_MISSING_STYLESHEET is raised.\nDEPRECATED: use stylesheets field instead.",
                    "type": "string"
                },
                "stylesheets": {
                    "$ref": "SearchNowUiPiet__Stylesheets",
                    "description": "Defines the Stylesheets used by this Frame.\n\nNOTE: Styles from this Stylesheet are not available to Templates; they can\nonly be used by Elements defined directly in this Frame itself, such as\nnon-template Content. This limitation is a performance optimization that\nmakes view recycling efficient. This applies to both the inlined\nStylesheets and stylesheet_id's referencing a PietSharedState Stylesheet."
                },
                "tag": {
                    "description": "A string tag for the frame, currently used for debugging purposes. Need not\nbe unique.",
                    "type": "string"
                },
                "templates": {
                    "description": "Templates that are available for use within the scope of this Frame.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Template"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__FrameWidthCondition": {
            "description": "Width of each Frame in the current Piet rendering context. For multi-column\nlayouts (in which Piet is instantiated independently in more than one\ncolumn), this refers to the width of the individual column, not the overall\nwidth of the containing app.",
            "id": "SearchNowUiPiet__FrameWidthCondition",
            "properties": {
                "condition": {
                    "description": "Defines how the condition match should be evaluated.",
                    "enum": [
                        "UNSPECIFIED",
                        "EQUALS",
                        "NOT_EQUALS",
                        "LESS_THAN",
                        "GREATER_THAN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "width": {
                    "description": "Width of the viewport, expressed in DP.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__GridCell": {
            "description": "The Grid Cell represents the contents within a GridRow.\nThe content within each cell is always the same width as the cell (minus\nmargins) - width on the content's style is ignored. If the cell has extra\nvertical space (the GridRow is taller than the content), the content can\nfloat vertically with gravity.\nIf the child's style does not specify a height, it defaults to matching the\nheight of the GridRow.\nNext Id: 8",
            "id": "SearchNowUiPiet__GridCell",
            "properties": {
                "content": {
                    "$ref": "SearchNowUiPiet__Content",
                    "description": "The content of the GridCell."
                },
                "width": {
                    "$ref": "SearchNowUiPiet__GridCellWidth",
                    "description": "Specified inline."
                },
                "widthBinding": {
                    "$ref": "SearchNowUiPiet__GridCellWidthBindingRef",
                    "description": "Width specified in bindings."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__GridCellWidth": {
            "description": "The width of a GridCell.",
            "id": "SearchNowUiPiet__GridCellWidth",
            "properties": {
                "contentWidth": {
                    "description": "The width of the content, limited to Content of TextElement or\nImageElement. In case a different content is given to the cell,\nERR_CONTENT_WIDTH_GRID_CELL_WITH_INVALID_CONTENT is raised.",
                    "enum": [
                        "INVALID_CONTENT_WIDTH",
                        "CONTENT_WIDTH"
                    ],
                    "enumDescriptions": [
                        "Do not use. If used, this will raise\nERR_CONTENT_WIDTH_GRID_CELL_WITH_INVALID_CONTENT at runtime.",
                        "This cell will expand just enough to fit its content."
                    ],
                    "type": "string"
                },
                "dp": {
                    "description": "The width of the cell expressed as DP.",
                    "format": "int32",
                    "type": "integer"
                },
                "isCollapsible": {
                    "description": "Whether this cell will shrink if the GridRow is too small for its contents.\nThis cell will always be less than or equal to the defined width.\nIf there are multiple collapsible cells in a row, they will shrink in order\nfrom last to first (ex. the last cell will be width 0 before the cell\nbefore it begins to shrink).\nThis is ignored if weight is set.",
                    "type": "boolean"
                },
                "weight": {
                    "description": "The width of the cell expressed as a weight. This weight is relative to\nthe remaining width, after DP and Content were allocated.\nFor more information, see go/piet/concepts/basics.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__GridCellWidthBindingRef": {
            "description": "GridCellWidthBindings are always optional. If not provided, the default is\n[width.weight = 1].",
            "id": "SearchNowUiPiet__GridCellWidthBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__GridRow": {
            "description": "A horizontally-oriented left-to-right list of Contents with specified widths.\nWithout explicit dimensions or constraints by the parent, this container is\nas tall as its tallest child, and as wide as the sum of its cells.",
            "id": "SearchNowUiPiet__GridRow",
            "properties": {
                "cells": {
                    "description": "A list of cells defining the content of the grid.",
                    "items": {
                        "$ref": "SearchNowUiPiet__GridCell"
                    },
                    "type": "array"
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this GridRow.\nDeprecated: use the StyleIdsStack on Element instead."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__HostBindingData": {
            "description": "Data which is accompanied with BindingValue in order for a host to determine\nthe information it needs to provide the correct BindingValue to fulfill a\nbinding reference.  Client using Piet should add extensions to this proto to\npass their host specific data needed to fulfill the binding reference.",
            "id": "SearchNowUiPiet__HostBindingData",
            "properties": {},
            "type": "object"
        },
        "SearchNowUiPiet__Image": {
            "description": "An image asset.",
            "id": "SearchNowUiPiet__Image",
            "properties": {
                "sources": {
                    "description": "Image sources are `repeated` so that a feature author can specify multiple\nimage sources in the order that they should be attempted to be fetched.\nClients can go through the list until they find one they wish to fetch,\nbased either on the type of URL (e.g. `https://` versus `asset://`) or\nbased on the size of the raw image (e.g. 1x DPI or 2x DPI). Feature\nauthors are responsible for ensuring that at least one image source is\nvalid and accessible (https://gstatic.com URLs are recommended as the\nultimate fallback).\nSee go/piet-images for more details on Image handling.",
                    "items": {
                        "$ref": "SearchNowUiPiet__ImageSource"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ImageBindingRef": {
            "id": "SearchNowUiPiet__ImageBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                },
                "isOptional": {
                    "description": "Indicates whether this binding reference is optional.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ImageElement": {
            "description": "An Image which is displayed as a horizontal slice within a parent container.",
            "id": "SearchNowUiPiet__ImageElement",
            "properties": {
                "image": {
                    "$ref": "SearchNowUiPiet__Image",
                    "description": "The image to be displayed."
                },
                "imageBinding": {
                    "$ref": "SearchNowUiPiet__ImageBindingRef",
                    "description": "The binding to the BindingValue for an Image. It is an error if the\nBindingValue doesn't define an Image."
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this ImageElement. If any style_ids cannot be found,\nERR_MISSING_STYLES is raised.\nDeprecated: use the StyleIdsStack on Element instead."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ImageLoadingSettings": {
            "description": "Various configuration parameters for image loading",
            "id": "SearchNowUiPiet__ImageLoadingSettings",
            "properties": {
                "fadeInImageOnLoad": {
                    "description": "If this is set, images will fade in after loading asynchronously.\nMay not be supported on all platforms.",
                    "type": "boolean"
                },
                "preLoadFill": {
                    "$ref": "SearchNowUiPiet__Fill",
                    "description": "Defines a placeholder fill applied before an image loads.\nThis will be replaced by the Image when it loads asynchronously.\nNot relevant for platforms where image loading is synchronous."
                },
                "preLoadImage": {
                    "$ref": "SearchNowUiPiet__Image",
                    "description": "Defines a placeholder image applied before an image loads.\nThis will be replaced by the Image when it loads asynchronously.\nThis should be an on-device asset; it doesn't make sense to have the pre-\nload image also load asynchronously.\nNot relevant for platforms where image loading is synchronous."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ImageSource": {
            "description": "A single physical image, as contained in a single image file or embedded\nresource. To accommodate devices with varying Device Pixel Ratios, each image\nin a different DPI bucket can be represented as a separate `ImageSource`.\nE.g. the same image can be offered as multiple resources as:\n    ImageSource{\n      url=\"ic_icon_24@1x.png\",\n      width=24,\n      height=24\n    }\nand:\n    ImageSource{\n      url=\"ic_icon_24@2x.png\",\n      width=48,\n      height=48\n    }\nThis enables clients to choose which image to fetch based on the expected\nwidth and height, without actually having to fetch it first.\nThese dimensions also allow clients to pre-size the view for the image before\nit loads so that the view's size doesn't change once the image is loaded.",
            "id": "SearchNowUiPiet__ImageSource",
            "properties": {
                "conditions": {
                    "description": "This ImageSource is only eligible to be used if *all* the conditions\nenumerated below are met. If even one condition is unsatisfied, this\nImageSource is skipped, and Piet will pick another image. It is recommended\nto include at least one ImageSource that is loaded unconditionally.",
                    "items": {
                        "$ref": "SearchNowUiPiet__MediaQueryCondition"
                    },
                    "type": "array"
                },
                "heightPx": {
                    "description": "The intrinsic height of this image, expressed in raw pixels. This may be\ndifferent from the height of the container in which this image should be\ndisplayed. This can be used for pre-allocating space for the image before\nit loads. It is expected that the server will usually provide this field.",
                    "format": "int32",
                    "type": "integer"
                },
                "url": {
                    "description": "URLs can be \"https://\" or \"asset://\".\nHTTPS URLs can be fetched by a regular network communication library.\nAsset URLs can be fetched by implementation-specific asset helpers.\nAsset URLs must be specified in an implementation-agnostic manner.\nIf missing, ERR_IMAGE_URL_EMPTY is raised.",
                    "type": "string"
                },
                "widthPx": {
                    "description": "The intrinsic width of this image, expressed in raw pixels. This may be\ndifferent from the width of the container in which this image should be\ndisplayed. This can be used for pre-allocating space for the image before\nit loads. It is expected that the server will usually provide this field.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__LinearGradient": {
            "description": "A linear gradient interpolates the given color stops linearly.",
            "id": "SearchNowUiPiet__LinearGradient",
            "properties": {
                "directionDeg": {
                    "description": "Direction towards which this gradient should be rendered, in degrees from\nthe top.\n  0: \u2191 From Bottom to Top.\n 90: \u2192 From Left to Right.\n180: \u2193 From Top to Bottom.\n270: \u2190 From Right to Left.\nValues must be in the range [0..360). Negative values are not valid.",
                    "format": "uint32",
                    "type": "integer"
                },
                "reverseForRtl": {
                    "description": "If this boolean is true, the 'x' component of the gradient's angle will be\nreversed when Piet is rendering a layout for a right-to-left language.",
                    "type": "boolean"
                },
                "stops": {
                    "description": "Multiple stops for this gradient. A valid gradient must have at least\ntwo stops, one at position 0 and another at position 100.",
                    "items": {
                        "$ref": "SearchNowUiPiet__ColorStop"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Location": {
            "description": "A location, expressed as a { latitude, longitude } tuple. This is used to\ngenerate a string that describes the distance between the user\u2019s current\nlocation and the specified location in relative terms, e.g. \u201c10 meters away\u201d,\nor \u201c20 minutes away\u201d.\n\nSince Piet is a presentational language (not semantic), this Location should\nonly contain the fields necessary for accurate display. Specifically, other\nfields such as physical addresses, labels, titles, or feature names should\nnot be added here.\n\nBoth latitude and longitude are specified as double-precision floats. The\nworst case real-world distance expressed in this format is ~1-4 meters at the\nequator.",
            "id": "SearchNowUiPiet__Location",
            "properties": {
                "latitude": {
                    "description": "Latitude for this location.",
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude for this location.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__LogData": {
            "description": "LogData used to contain piet-agnostic information used for logging.",
            "id": "SearchNowUiPiet__LogData",
            "properties": {},
            "type": "object"
        },
        "SearchNowUiPiet__LogDataBindingRef": {
            "description": "LogData binding references are always optional.",
            "id": "SearchNowUiPiet__LogDataBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__MediaQueryCondition": {
            "description": "A single media query condition offers a way for a Piet renderer to decide\nwhether or not to apply a particular Stylesheet, Template, ImageSource, or\nother entities based on the environment config at runtime. For example,\nadding a width-based conditional enables providing different layouts/styles\nbased on the user\u2019s device, and this can be re-evaluated entirely client-side\ne.g. if the user rotates their device so that the width changes.\nThe name MediaQueryCondition derives from a similar concept for Web/CSS and\nmost principles in the Piet Media Query spec are influenced by their Web\nequivalents.\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries",
            "id": "SearchNowUiPiet__MediaQueryCondition",
            "properties": {
                "darkLight": {
                    "$ref": "SearchNowUiPiet__DarkLightCondition",
                    "description": "See the documentation for DarkLightCondition."
                },
                "frameWidth": {
                    "$ref": "SearchNowUiPiet__FrameWidthCondition",
                    "description": "See the documentation for FrameWidthCondition."
                },
                "orientation": {
                    "$ref": "SearchNowUiPiet__OrientationCondition",
                    "description": "See the documentation for OrientationCondition."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ModuleBindingRef": {
            "id": "SearchNowUiPiet__ModuleBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                },
                "isOptional": {
                    "description": "Indicates whether this binding reference is optional.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ModuleElement": {
            "description": "A view that is implemented by a secondary (non-Core) Piet Module. Not all\nPiet Elements are useful to all clients/servers, so only the basic ones are\nincluded in Piet Core. Common shareable elements can be implemented in\nsecondary Piet Modules, which are optional modules that can be included in or\nexcluded from Piet-based apps on an as-needed basis.\nModuleElements work similar to CustomElements, with the only difference being\nthat CustomElements are rendered by non-Piet code, while ModuleElements are\nrendered by secondary Piet Modules.",
            "id": "SearchNowUiPiet__ModuleElement",
            "properties": {
                "moduleBinding": {
                    "$ref": "SearchNowUiPiet__ModuleBindingRef",
                    "description": "The binding to the BindingValue for a ModuleElement."
                },
                "moduleElementData": {
                    "$ref": "SearchNowUiPiet__ModuleElementData",
                    "description": "The data to be displayed."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ModuleElementData": {
            "description": "Data to be displayed in a ModuleElement. Piet Modules should add extensions\nto this proto to pass their custom data to ModuleElements.",
            "id": "SearchNowUiPiet__ModuleElementData",
            "properties": {},
            "type": "object"
        },
        "SearchNowUiPiet__OrientationCondition": {
            "description": "Whether the device is oriented in portrait mode or landscape mode. This\napplies mostly to mobile devices, but it is possible also for a Web device to\nbe oriented in portrait mode.",
            "id": "SearchNowUiPiet__OrientationCondition",
            "properties": {
                "orientation": {
                    "enum": [
                        "UNSPECIFIED",
                        "PORTRAIT",
                        "LANDSCAPE"
                    ],
                    "enumDescriptions": [
                        "Must not be set to UNSPECIFIED, otherwise\nERR_INVALID_MEDIA_QUERY_CONDITION will be raised.",
                        "Height of the device is greater than or equal to the width of the device.\nDefault.",
                        "Width of the device is greater than the height of the device."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ParameterizedText": {
            "description": "ParameterizedText allows strings to be constructed on the client based on\nrapidly-changing information for which a server round-trip is not\nappropriate. Clients will build a string at runtime by combining the\nparameterized string with the values of the evaluated parameters.",
            "id": "SearchNowUiPiet__ParameterizedText",
            "properties": {
                "isHtml": {
                    "description": "Strings are considered to be plain text by default, for performance\nreasons. A string is parsed as HTML if and only if this field is explicitly\nset to true.",
                    "type": "boolean"
                },
                "parameters": {
                    "description": "An ordered list of parameters.",
                    "items": {
                        "$ref": "SearchNowUiPiet_ParameterizedText_Parameter"
                    },
                    "type": "array"
                },
                "text": {
                    "description": "A string that may (but need not always) include placeholders for\nparameters.\n\nIf parameters are specified, placeholders use the simplest standard C or\nJava string format specifier: \"%s\". All other instances of the \"%\"\ncharacter must be escaped with another \"%\" character. If there are no\nparameters, this string is used directly, without replacements. The number\nof placeholders must correspond to the number of parameters provided. The\norder of `parameters` is significant; parameters are replaced in the string\nin the order specified.\n\nThe server is responsible for localizing this string for the target locale;\nthe client expects to receive only a single string for the current locale.\nAny pluralization ([\"zero\" | \"one\" | \"two\" | \"few\" | \"many\" | \"other\"])\nshould be done by the server at serving time, and is not handled by the\nclient.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__ParameterizedTextBindingRef": {
            "id": "SearchNowUiPiet__ParameterizedTextBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                },
                "isOptional": {
                    "description": "Indicates whether this binding reference is optional.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__RoundedCorners": {
            "description": "Rounded corners for Views, expressed as a bit mask. If a container view has\nrounded corners applied to it, then the contents of that view SHOULD also be\ncropped to fit within the rounded rectangle bounding box established by the\ncontainer. Specifically, content within such a view SHOULD be cropped too,\nwithout having to explicitly specify rounded corners on the child content.\nCheck go/piet-status for any client-specific limitations that apply to the\ncurrent version of the implementation.",
            "id": "SearchNowUiPiet__RoundedCorners",
            "properties": {
                "bitmask": {
                    "description": "A bitmask representing which corners should be rounded. Bit values are\ndefined by the `Corners` enum. If no corners are specified, then all\ncorners will be rounded.\n\nNOTICE: having a rounded corner with a border only on one side is strongly\ndiscouraged as it leads to undefined and inconsistent behavior across\nplatforms.",
                    "format": "int32",
                    "type": "integer"
                },
                "radius": {
                    "description": "The radius of the rounding applied to the specified corners, specified in\nDP. This value must be non-zero, otherwise it\u2019s a no-op.\n\nThis field is deprecated. Please use radius_options instead.\nradius and radius_dp have the same functionality. Both fields can be\nspecified if there are concerns about users with old client versions that\ndon't support the new field yet. If the client does recognize the new\nradius_options and the deprecated radius is specified as well, only\nradius_options will be used.",
                    "format": "int32",
                    "type": "integer"
                },
                "radiusDp": {
                    "description": "The radius specified in dp.",
                    "format": "uint32",
                    "type": "integer"
                },
                "radiusPercentageOfHeight": {
                    "description": "An integer value between 1 and 100. The corner radius is calculated as a\npercentage of the height of the element being rounded. It does not\nrequire the height to be explicitly specified on the element.\n\nFor example:\nheight = 100dp, width = 50dp, radius_percentage_of_height = 20%\nActual radius (calculated by the client) = 20dp.\n\nNote that the value calculated from the height (i.e. 20dp) will be\napplied to both halves of any corners specified in the bitmask.",
                    "format": "uint32",
                    "type": "integer"
                },
                "radiusPercentageOfWidth": {
                    "description": "An integer value between 1 and 100. The corner radius is calculated as a\npercentage of the width of the element being rounded. It does not\nrequire the width to be explicitly specified on the element.\n\nFor example:\nheight = 100dp, width = 50dp, radius_percentage_of_width = 20%\nActual radius (calculated by the client) = 10dp.\n\nNote that the value calculated from the width (i.e. 10dp) will be\napplied to both halves of any corners specified in the bitmask.",
                    "format": "uint32",
                    "type": "integer"
                },
                "useHostRadiusOverride": {
                    "description": "Flag to ask the host for a default radius. If the host does not return a\nradius, fall back to \"radius_options\". If this field is true and the host\nhas provided a default radius, radius_options will be ignored.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Shadow": {
            "description": "Defines a shadow for a given element. This message has sub-messages that\ncorrespond to different methods that define shadows. Each client might\nsupport a subset of the methodologies, will ignore the ones it does not\nsupport, and may have a priority order for which type is used when multiple\nshadow messages are defined (probably defaulting to the most descriptive\nshadow type supported by the platform).\nSee go/piet-support",
            "id": "SearchNowUiPiet__Shadow",
            "properties": {
                "boxShadow": {
                    "$ref": "SearchNowUiPiet__BoxShadow",
                    "description": "BoxShadow definition. Supported by the web and iOS clients."
                },
                "elevationShadow": {
                    "$ref": "SearchNowUiPiet__ElevationShadow",
                    "description": "Simple elevation-based shadow. Supported by Android."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Style": {
            "description": "A collection of attributes describing an element\u2019s visual properties.\nNextId: 25",
            "id": "SearchNowUiPiet__Style",
            "properties": {
                "background": {
                    "$ref": "SearchNowUiPiet__Fill",
                    "description": "Defines the background fill, either as a solid color, or a gradient."
                },
                "borders": {
                    "$ref": "SearchNowUiPiet__Borders",
                    "description": "Borders"
                },
                "color": {
                    "description": "When applied to an image, this will replace all non-transparent pixels with\nthe specified color. This is used for changing the color of icons which are\nprovided as a monochrome bitmap. If this optional field is not provided,\nthe image will not be modified.",
                    "format": "uint32",
                    "type": "integer"
                },
                "conditions": {
                    "description": "This Style is only eligible to be used if *all* the conditions\nenumerated below are met. Multiple styles can have the same style id if\ntheir conditions are disjoint.",
                    "items": {
                        "$ref": "SearchNowUiPiet__MediaQueryCondition"
                    },
                    "type": "array"
                },
                "font": {
                    "$ref": "SearchNowUiPiet__Font",
                    "description": "Font information applicable to text elements."
                },
                "gravityHorizontal": {
                    "description": "Horizontal gravity of this element's content within the parent container\nNot respected in GridRow",
                    "enum": [
                        "GRAVITY_HORIZONTAL_UNSPECIFIED",
                        "GRAVITY_START",
                        "GRAVITY_END",
                        "GRAVITY_CENTER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Align with the start side (left in LTR layouts)",
                        "Align with the end side (right in LTR layouts)",
                        "Align centered"
                    ],
                    "type": "string"
                },
                "gravityVertical": {
                    "description": "Vertical gravity of this element's content within the parent container\nNot respected in ElementList",
                    "enum": [
                        "GRAVITY_VERTICAL_UNSPECIFIED",
                        "GRAVITY_TOP",
                        "GRAVITY_MIDDLE",
                        "GRAVITY_BOTTOM"
                    ],
                    "enumDescriptions": [
                        "",
                        "Align with the top side",
                        "Align vertically centered",
                        "Align with the bottom side"
                    ],
                    "type": "string"
                },
                "height": {
                    "description": "Constant height in DP",
                    "format": "uint32",
                    "type": "integer"
                },
                "imageLoadingSettings": {
                    "$ref": "SearchNowUiPiet__ImageLoadingSettings",
                    "description": "Configuration for image loading behavior (such as fading in)"
                },
                "margins": {
                    "$ref": "SearchNowUiPiet__EdgeWidths",
                    "description": "Margins around the item"
                },
                "maxLines": {
                    "description": "Maximum number of text lines to display",
                    "format": "uint32",
                    "type": "integer"
                },
                "minHeight": {
                    "description": "Minimum height for an element.",
                    "format": "uint32",
                    "type": "integer"
                },
                "opacity": {
                    "description": "Opacity. This affects the element with the current style, and also all its\ndescendants. For example, Opacity of a GridRow will affect all the\nGridCells under it, and their descendants. This value comes on top of the\nalpha value of colors.\nValues between [0..1] are valid; those outside this range will be clamped.",
                    "format": "float",
                    "type": "number"
                },
                "padding": {
                    "$ref": "SearchNowUiPiet__EdgeWidths",
                    "description": "Padding around the item"
                },
                "relativeHeight": {
                    "description": "Height relative to content or parent Element",
                    "enum": [
                        "RELATIVE_SIZE_UNDEFINED",
                        "FIT_CONTENT",
                        "FILL_PARENT"
                    ],
                    "enumDescriptions": [
                        "Undefined behavior; use the default dimensions specified by the parent\ncontainer.",
                        "Make this Element request just as much space as its content requires.",
                        "Make this Element request to fill whatever space is allocated to it."
                    ],
                    "type": "string"
                },
                "relativeWidth": {
                    "description": "Width relative to content or parent Element",
                    "enum": [
                        "RELATIVE_SIZE_UNDEFINED",
                        "FIT_CONTENT",
                        "FILL_PARENT"
                    ],
                    "enumDescriptions": [
                        "Undefined behavior; use the default dimensions specified by the parent\ncontainer.",
                        "Make this Element request just as much space as its content requires.",
                        "Make this Element request to fill whatever space is allocated to it."
                    ],
                    "type": "string"
                },
                "roundedCorners": {
                    "$ref": "SearchNowUiPiet__RoundedCorners",
                    "description": "If there is a background fill, allow the background (including borders) to\nhave rounded corners."
                },
                "scaleType": {
                    "description": "Scale type for images\nThis may not be supported for images in ChunkedText for all platforms.",
                    "enum": [
                        "SCALE_TYPE_UNSPECIFIED",
                        "CENTER_INSIDE",
                        "CENTER_CROP"
                    ],
                    "enumDescriptions": [
                        "When scale type is unspecified, we err on the side of preserving all\nareas of the image, so this is equivalent to CENTER_INSIDE.",
                        "Scale the image uniformly such that width or height will be equal to the\nsize of its view. The image will not be cropped.",
                        "Scale the image uniformly to fill its view. Some portion of the image\nwill be cropped."
                    ],
                    "type": "string"
                },
                "shadow": {
                    "$ref": "SearchNowUiPiet__Shadow",
                    "description": "Defines a shadow for an element."
                },
                "styleId": {
                    "description": "Every style must have a name that is unique within the StyleSheet. But\ndon\u2019t go overboard in naming these with namespaced constructs because\nlonger strings lead to more bytes on the wire.",
                    "type": "string"
                },
                "textAlignmentHorizontal": {
                    "description": "Text alignment",
                    "enum": [
                        "TEXT_ALIGNMENT_HORIZONTAL_UNSPECIFIED",
                        "TEXT_ALIGNMENT_START",
                        "TEXT_ALIGNMENT_END",
                        "TEXT_ALIGNMENT_CENTER"
                    ],
                    "enumDescriptions": [
                        "This value should never be used.",
                        "Align with the start side (left in LTR layouts)",
                        "Align with the end side (right in LTR layouts)",
                        "Align centered"
                    ],
                    "type": "string"
                },
                "textAlignmentVertical": {
                    "enum": [
                        "TEXT_ALIGNMENT_VERTICAL_UNSPECIFIED",
                        "TEXT_ALIGNMENT_TOP",
                        "TEXT_ALIGNMENT_BOTTOM",
                        "TEXT_ALIGNMENT_MIDDLE"
                    ],
                    "enumDescriptions": [
                        "This value should never be used.",
                        "Align top edge of text to top edge of element",
                        "Align bottom edge of text to bottom edge of element",
                        "Align centered vertically"
                    ],
                    "type": "string"
                },
                "width": {
                    "description": "Width of an element.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__StyleBindingRef": {
            "description": "Style binding references are always optional.",
            "id": "SearchNowUiPiet__StyleBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__StyleIdsStack": {
            "description": "A stack of style_ids used to evaluate the style of an element. The final\napplicable style is computed by proto-merging each style one by one, in order\nstarting from the first. Later attributes override earlier attributes. If a\nstyle_id cannot be found, ERR_MISSING_STYLE is raised.\n\nAfter the style_ids are merged, in case a bound_style is given, its values\noverride the ones produced by the merge.",
            "id": "SearchNowUiPiet__StyleIdsStack",
            "properties": {
                "styleBinding": {
                    "$ref": "SearchNowUiPiet__StyleBindingRef",
                    "description": "Optional style binding that override the styles in the given style_ids.\nSee message comment for exact use."
                },
                "styleIds": {
                    "description": "Style IDs that are proto-merged in order from first to last.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__StyledImageChunk": {
            "description": "A single region of image content that has a particular style applied to it.",
            "id": "SearchNowUiPiet__StyledImageChunk",
            "properties": {
                "image": {
                    "$ref": "SearchNowUiPiet__Image",
                    "description": "The image to be displayed."
                },
                "imageBinding": {
                    "$ref": "SearchNowUiPiet__ImageBindingRef",
                    "description": "The binding to the BindingValue for an Image."
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this chunk."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__StyledTextChunk": {
            "description": "A single region of text content that has styles applied to it.",
            "id": "SearchNowUiPiet__StyledTextChunk",
            "properties": {
                "parameterizedText": {
                    "$ref": "SearchNowUiPiet__ParameterizedText",
                    "description": "The text to display."
                },
                "parameterizedTextBinding": {
                    "$ref": "SearchNowUiPiet__ParameterizedTextBindingRef",
                    "description": "The binding to the BindingValue for a ParameterizedText."
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this chunk."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Stylesheet": {
            "description": "A set of Styles; each Style must have a style_id that is unique within this\nStylesheet. If the same style_id is found twice, ERR_DUPLICATE_STYLES is\nraised. Stylesheet is scoped to Frames or Templates. When a UI element uses a\nStyle, it is looked up in the Stylesheet within scope. If the style cannot be\nfound, ERR_MISSING_STYLES is raised.",
            "id": "SearchNowUiPiet__Stylesheet",
            "properties": {
                "conditions": {
                    "description": "This Stylesheet is only eligible to be used if *all* the conditions\nenumerated below are met. If even one condition is unsatisfied,\nthis Stylesheet is treated as if it was never sent, which may cause\nERR_STYLESHEET_NOT_FOUND.",
                    "items": {
                        "$ref": "SearchNowUiPiet__MediaQueryCondition"
                    },
                    "type": "array"
                },
                "styles": {
                    "description": "Styles available in this Stylesheet.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Style"
                    },
                    "type": "array"
                },
                "stylesheetId": {
                    "description": "A string uniquely identifying this Stylesheet within the PietSharedState in\nwhich it is used. If two Stylesheets with the same stylesheet_id are found\nin a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This\n`stylesheet_id` is used to select this Stylesheet using\nFrame.stylesheet_id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Stylesheets": {
            "description": "UI Elements in a Frame or Template use a Stylesheet to resolve the Styles\nthat define their appearance. The Stylesheet is constructed by combining\nStyles from any Stylesheets referenced here; Stylesheets can by directly\ninlined, or referenced from the global shared state in PietSharedState.\nPiet will report ERR_DUPLICATE_STYLE if multiple Styles across any of the\nStylesheets have the same style id (after MediaQueryCondition filtering).",
            "id": "SearchNowUiPiet__Stylesheets",
            "properties": {
                "stylesheetIds": {
                    "description": "Stylesheets to be fetched from the global PietSharedState.\nIf a stylesheet_id cannot be found, ERR_MISSING_STYLESHEET is raised.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "stylesheets": {
                    "description": "Inline Stylesheets. These can be filtered by MediaQueryCondition.",
                    "items": {
                        "$ref": "SearchNowUiPiet__Stylesheet"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Template": {
            "description": "A Template defines a reusable ElementList. The content is data-bound from\nBindings in the TemplateInvocation. Templates allow consistent creation of\nelements using bound data. For example, table rows with different values, or\nGridCells with different data values.",
            "id": "SearchNowUiPiet__Template",
            "properties": {
                "childDefaultStyleIds": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to all child views of this Template."
                },
                "conditions": {
                    "description": "This Template is only eligible to be used if *all* the conditions\nenumerated below are met. If even one condition is unsatisfied, this\nTemplate is treated as if it was never sent, which may cause\nERR_TEMPLATE_NOT_FOUND.",
                    "items": {
                        "$ref": "SearchNowUiPiet__MediaQueryCondition"
                    },
                    "type": "array"
                },
                "element": {
                    "$ref": "SearchNowUiPiet__Element",
                    "description": "Content defined by this Template."
                },
                "stylesheet": {
                    "$ref": "SearchNowUiPiet__Stylesheet",
                    "description": "A local Stylesheet. Styles in this Stylesheet will only be available to\nelements defined in this Template.\nDEPRECATED: use stylesheets field instead."
                },
                "stylesheetId": {
                    "description": "If defined, the Stylesheet for this Template is looked up in\nPietSharedState.Stylesheets. If the stylesheet_id cannot be found,\nERR_MISSING_STYLESHEET is raised.\nDEPRECATED: use stylesheets field instead.",
                    "type": "string"
                },
                "stylesheets": {
                    "$ref": "SearchNowUiPiet__Stylesheets",
                    "description": "The Stylesheets used within this Template's scope.\n- Styles from the Frame CANNOT be referenced from within a Template.\n- Styles from the PietSharedState CAN be referenced, only if the\n  stylesheet_id is defined by the Template."
                },
                "templateId": {
                    "description": "A unique identifier for this template. If two Templates with the same\ntemplate_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is\nraised.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__TemplateBindingRef": {
            "id": "SearchNowUiPiet__TemplateBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                },
                "isOptional": {
                    "description": "Indicates whether this binding reference is optional.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__TemplateInvocation": {
            "description": "A template can be used to instantiate a single instance, or a list of\ninstances at once: each of these is termed a TemplateInvocation. One instance\nis created for each `binding_context` provided.\n\nThe types of objects instantiated by the template are determined by the\nelement that holds the invocation. For example, an invocation from an\nElementList will create one or more cells in that list. Invocation from a\nGridCell will create one or more GridCells.",
            "id": "SearchNowUiPiet__TemplateInvocation",
            "properties": {
                "bindingContexts": {
                    "description": "To isolate Templates, we define the BindingContext used by the template\nwithin the invocation. When a TemplateInvocation is processed, we will\ncreate a template instance for each BindingContext defined (if none is\ndefined, none will be created).",
                    "items": {
                        "$ref": "SearchNowUiPiet__BindingContext"
                    },
                    "type": "array"
                },
                "templateId": {
                    "description": "The Template to be used.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__TextElement": {
            "description": "A simple text line (Android TextView, iOS UILabel, or HTML <div>).",
            "id": "SearchNowUiPiet__TextElement",
            "properties": {
                "chunkedText": {
                    "$ref": "SearchNowUiPiet__ChunkedText",
                    "description": "ChunkedText to be displayed. Styles referenced inside the text chunks\nshould override the style references in this TextElement."
                },
                "chunkedTextBinding": {
                    "$ref": "SearchNowUiPiet__ChunkedTextBindingRef",
                    "description": "The binding to the BindingValue for a ChunkedText. It is an error if the\nBindingValue doesn't define a ChunkedText. Styles referenced inside the\nChunkedText should override the style references in this TextElement."
                },
                "parameterizedText": {
                    "$ref": "SearchNowUiPiet__ParameterizedText",
                    "description": "The text to display."
                },
                "parameterizedTextBinding": {
                    "$ref": "SearchNowUiPiet__ParameterizedTextBindingRef",
                    "description": "The binding to the BindingValue for a ParameterizedText. It is an error\nif the BindingValue doesn't define a ParameterizedText."
                },
                "styleReferences": {
                    "$ref": "SearchNowUiPiet__StyleIdsStack",
                    "description": "Styles applied to this TextElement. If any style_ids cannot be found,\nERR_MISSING_STYLES is raised.\nDeprecated: use the StyleIdsStack on Element instead."
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__Typeface": {
            "id": "SearchNowUiPiet__Typeface",
            "properties": {
                "commonTypeface": {
                    "description": "Commonly used typefaces (with weights).",
                    "enum": [
                        "UNDEFINED",
                        "PLATFORM_DEFAULT_LIGHT",
                        "PLATFORM_DEFAULT_REGULAR",
                        "PLATFORM_DEFAULT_MEDIUM",
                        "GOOGLE_SANS_REGULAR",
                        "GOOGLE_SANS_MEDIUM"
                    ],
                    "enumDescriptions": [
                        "The same as PLATFORM_DEFAULT_REGULAR.",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "customTypeface": {
                    "description": "Any typeface needed that is not included in CommonTypeface should be\nspecified as a string here. Piet does not provide these typefaces, or any\nway to download them at runtime. The host is meant to perform the lookup\nand provide the correct typeface to Piet for rendering. If\nplatform-specific typefaces are needed, the string can be an identifier\n(i.e. \"group_of_typefaces_for_feature\"), and each platform can look up\nwhat that translates to. Piet will NOT parse the custom_typeface string\nto set attributes such as font weight.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__VisibilityAction": {
            "description": "Actions that trigger based on the proportion of the parent Element that is\nvisible.",
            "id": "SearchNowUiPiet__VisibilityAction",
            "properties": {
                "action": {
                    "$ref": "SearchNowUiPiet__Action",
                    "description": "Action to trigger at the given visibility threshold"
                },
                "proportionVisible": {
                    "description": "Proportion of the view that should be visible for this action to trigger\n[0.0 to 1.0]\nDefaults to 1.0 to make this an \"on full view\" action.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__VisibilityBindingRef": {
            "description": "Visibility bindings are always optional.",
            "id": "SearchNowUiPiet__VisibilityBindingRef",
            "properties": {
                "bindingId": {
                    "description": "The unique ID for this binding. See comments at the top of the file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNowUiPiet__VisibilityState": {
            "description": "Indicates element's visibility, and the option to bind visibility state that\noverrides the default value.\nThis message should be used to bind external values for controlling display\nof parts of the UI.",
            "id": "SearchNowUiPiet__VisibilityState",
            "properties": {
                "defaultVisibility": {
                    "description": "The default visibility.",
                    "enum": [
                        "VISIBILITY_UNSPECIFIED",
                        "VISIBLE",
                        "INVISIBLE",
                        "GONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "By default, every element is visible. If set to VISIBLE, at least one of\nthe elements in the `values` oneof MUST be present, otherwise an error is\nraised.",
                        "The UI element corresponding to this binding is included in\nlayout computation, but its visible UI is hidden.",
                        "The UI element corresponding to this binding is completely\nremoved from the view hierarchy. It is not used to compute layout. This\nis the equivalent of Android\u2019s visibility:GONE."
                    ],
                    "type": "string"
                },
                "overridingBoundVisibility": {
                    "$ref": "SearchNowUiPiet__VisibilityBindingRef",
                    "description": "Binding of values."
                }
            },
            "type": "object"
        },
        "SearchNow_UserActionMetadata_Action": {
            "description": "Contains data about the action itself.",
            "id": "SearchNow_UserActionMetadata_Action",
            "properties": {
                "actionDurationMs": {
                    "description": "Duration of the action, for example # milliseconds viewed for\nVIEW action.",
                    "format": "int64",
                    "type": "string"
                },
                "expirationTimeMicroseconds": {
                    "description": "Time when this entry should be deleted. This is stored both in\nKansas and in Footprints.",
                    "format": "int64",
                    "type": "string"
                },
                "timestampSeconds": {
                    "description": "Time the action was received on the server.",
                    "format": "int64",
                    "type": "string"
                },
                "timezoneOffsetSeconds": {
                    "description": "The offset of the timezone from UTC where this action happened.\nNot logged with Gaia since location could be sensitive.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchNow__NowClearcutAppData": {
            "description": "Application/Content specific data that needs to be passed back with any\ninteraction, viewport state, or other VE logging done by the client via\nClearcut.\nOnly fields that need to be explicitly manipulated by the client should be\nadded here. Data set server-side and consumed server-side (even in Clearcut\ncode) should be defined as extensions of NowClearcutAppData in\nNowClearcutAppDataExtensions",
            "id": "SearchNow__NowClearcutAppData",
            "properties": {
                "contentId": {
                    "$ref": "Sidekick__ContentId",
                    "description": "The ContentId of the relevant content. Used to construct action Footprints\nthat can be matched to the corresponding content in response Footprints\nwhich also contain the information needed to display the content in\nMyActivity. Other uses may present themselves."
                },
                "semanticProperties": {
                    "$ref": "Sidekick__SemanticProperties",
                    "description": "Semantic properties is used for analysis and may be stored in Footprints\nfor consumption by modeling team. A client-side flag controls whether this\nis populated or not."
                },
                "sequenceNumber": {
                    "description": "A monotonically-increasing sequence number that increments per\nuser + device. Populated by the client. Used in experiments to measure\nClearcut event loss between client and server.",
                    "format": "uint32",
                    "type": "integer"
                },
                "surface": {
                    "description": "This enum is used by analysis code to represent the surface a card or\nfeature was viewed or interacted on, and by the client to tag\nevents on certain surfaces.",
                    "enum": [
                        "UNKNOWN_SURFACE",
                        "AGSA_MAIN_SCREEN",
                        "AGSA_SECOND_SCREEN",
                        "ANDROID_LAUNCHER_MAIN_SCREEN",
                        "IGSA_MAIN_SCREEN",
                        "IGSA_SECOND_SCREEN",
                        "WEB_SEARCH_HOMEPAGE",
                        "ANDROID_CHROME_NEW_TAB",
                        "IOS_CHROME_NEW_TAB"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Tweed",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_AgendaEntry_SecondaryPageParameters": {
            "description": "Deprecated. Use Interest.time_space_region instead.\nParameters needed by the client to set up the secondary page for agenda.",
            "id": "Sidekick_AgendaEntry_SecondaryPageParameters",
            "properties": {
                "earliestStartTimeMs": {
                    "description": "When opening the secondary page (after tapping \"Show more\"), only\ndisplay items whose start times fall within this time range.",
                    "format": "int64",
                    "type": "string"
                },
                "latestStartTimeMs": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_BarcodeEntry_FlightBoardingPass": {
            "id": "Sidekick_BarcodeEntry_FlightBoardingPass",
            "properties": {
                "additionalTicketText": {
                    "type": "string"
                },
                "airlineCode": {
                    "description": "E.g. \"UA\"",
                    "type": "string"
                },
                "airlineLogo": {
                    "description": "The URL of airline logo.",
                    "type": "string"
                },
                "airlineName": {
                    "description": "E.g. \"United Airlines\".",
                    "type": "string"
                },
                "airportCode": {
                    "description": "E.g. \"SFO\".",
                    "type": "string"
                },
                "arrivalAirportCode": {
                    "description": "The arrival airport code.",
                    "type": "string"
                },
                "boardingPolicy": {
                    "enum": [
                        "GROUP_BASED",
                        "ZONE_BASED"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "boardingPrivilege": {
                    "description": "Some text to show right below barcode of a boarding pass, typically\nboarding privilege, e.g. \"Fast Track\"",
                    "type": "string"
                },
                "boardingTime": {
                    "description": "E.g. \"2:25PM\".",
                    "type": "string"
                },
                "departureTimeInMs": {
                    "description": "The departure time in ms, since epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "departureTimeZone": {
                    "description": "java.util parsable timezone id of departure/boarding time.",
                    "type": "string"
                },
                "flightNumber": {
                    "description": "E.g. \"352\".",
                    "type": "string"
                },
                "frequentFlyerProgram": {
                    "description": "E.g. \"Executive Platinum\"",
                    "type": "string"
                },
                "gate": {
                    "description": "E.g. \"51\".",
                    "type": "string"
                },
                "gmailReference": {
                    "description": "For Moonshine sourced boarding passes, the email references.",
                    "items": {
                        "$ref": "Sidekick__GmailReference"
                    },
                    "type": "array"
                },
                "group": {
                    "description": "E.g. \"4\".",
                    "type": "string"
                },
                "manageFlightUrl": {
                    "description": "For airlines that provide such a Url; not all of them do.",
                    "type": "string"
                },
                "operatingAirlineCode": {
                    "description": "The actual operating airline code.",
                    "type": "string"
                },
                "operatingAirlineName": {
                    "description": "The actual operating airline name.",
                    "type": "string"
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "passengerName": {
                    "description": "E.g. \"Smith / John\".",
                    "type": "string"
                },
                "reservationNumber": {
                    "description": "The reservation number, e.g. A1Y3E1",
                    "type": "string"
                },
                "seat": {
                    "description": "E.g. \"23B\".",
                    "type": "string"
                },
                "seatClass": {
                    "description": "E.g. \"Economic\".",
                    "type": "string"
                },
                "securityProgram": {
                    "description": "The security program the passenger is eligible for, e.g. TSA-Precheck",
                    "enum": [
                        "NOT_APPLICABLE",
                        "TSA_PRECHECK"
                    ],
                    "enumDescriptions": [
                        "N/A",
                        "This passenger is eligible for TSA-Precheck."
                    ],
                    "type": "string"
                },
                "sequenceNumber": {
                    "description": "The sequence number on boarding pass, e.g. '43'.",
                    "type": "string"
                },
                "terminal": {
                    "description": "E.g. \"C\".",
                    "type": "string"
                },
                "ticketNumber": {
                    "description": "The identifier for the ticket number",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ClickAction_Extra": {
            "description": "An extra key/value pair to be added to an intent that is launched\nwith this action. The value can be either a string, int64, bool or\ngmail, only one value should be filled in.",
            "id": "Sidekick_ClickAction_Extra",
            "properties": {
                "boolValue": {
                    "type": "boolean"
                },
                "gmailReference": {
                    "$ref": "Sidekick__GmailReference"
                },
                "intArrayValue": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "intValue": {
                    "format": "int32",
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "longValue": {
                    "format": "int64",
                    "type": "string"
                },
                "stringValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ClockEntry_TimeZone": {
            "id": "Sidekick_ClockEntry_TimeZone",
            "properties": {
                "offsetSeconds": {
                    "description": "Absolute offset for the time zone, when the symbolic zone is not\navailable. We prefer the symbolic version since it deals with DST,\nand do not include the absolute offset when the name is available.\nDEPRECATED: use zone_name instead.",
                    "format": "int32",
                    "type": "integer"
                },
                "zoneName": {
                    "description": "Timezone Id, e.g. \"Europe/Paris\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ClosetInterestEntry_Entity": {
            "description": "The wrapper for all entity info.",
            "id": "Sidekick_ClosetInterestEntry_Entity",
            "properties": {
                "backgroundColor": {
                    "description": "Background color for the entity.",
                    "format": "int32",
                    "type": "integer"
                },
                "fillAndCrop": {
                    "description": "If true then the image will be centerCropped.\nCenter Cropping is where the image is scaled up maintaining aspect ratio\nuntil the entire area is filled and the overflow is then cropped.",
                    "type": "boolean"
                },
                "imageUrl": {
                    "description": "The image of the entity.",
                    "type": "string"
                },
                "mid": {
                    "description": "The mid of the entity.",
                    "type": "string"
                },
                "monogram": {
                    "$ref": "Sidekick__TextIcon",
                    "description": "Used to represent a monogram icon."
                },
                "title": {
                    "description": "The title of the entity.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ClosetQuestionEntry_Condition": {
            "description": "The condition for some question entry to be shown or some dialog to be\npopped up. The condition would be either some expected answer to some\nquestion, or some value of an OS level setting. Normally, we would not\nexpect both question related and OS level setting related fields get\nfilled. If both question related and OS level setting related fields are\nfilled, then both conditions need to be satisfied (combined as an AND).",
            "id": "Sidekick_ClosetQuestionEntry_Condition",
            "properties": {
                "expectedAnswer": {
                    "description": "Expected answers of the given question to satisfy this condition,\ncombined as an OR. This lists multiple possible answers to a single\nquestion (whose fingerprint is above), all of which would allow for entry\nto be enabled.",
                    "items": {
                        "$ref": "Sidekick_Question_Answer"
                    },
                    "type": "array"
                },
                "fingerprint": {
                    "description": "Unique fingerprint for the question on which this entry is dependent.",
                    "format": "byte",
                    "type": "string"
                },
                "requiresOsNotificationsEnabled": {
                    "description": "Whether this Condition requires OS level notifications enabled for GSA.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick_ClosetQuestionEntry_Dialog": {
            "description": "The dialog for a given question.",
            "id": "Sidekick_ClosetQuestionEntry_Dialog",
            "properties": {
                "body": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The body of the dialog."
                },
                "conditionToShow": {
                    "description": "Condition to show this dialog, combined as an AND.\nOnly pop up this dialog when user clicks this question entry if and only\nif all of the conditions are satisfied.",
                    "items": {
                        "$ref": "Sidekick_ClosetQuestionEntry_Condition"
                    },
                    "type": "array"
                },
                "negativeButtonTxt": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The negative action button's text of the dialog."
                },
                "positiveButtonTxt": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The positive action button's text of the dialog."
                },
                "postDialogPositiveButtonAction": {
                    "description": "Update answers for questions if the positive button is clicked.",
                    "items": {
                        "$ref": "Sidekick_ClosetQuestionEntry_PostDialogAction"
                    },
                    "type": "array"
                },
                "title": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The title of the dialog."
                }
            },
            "type": "object"
        },
        "Sidekick_ClosetQuestionEntry_PostDialogAction": {
            "description": "The post actions should be done by the client if the positive button is\nclicked by the user.\nThe post action would be one of the following action:\n  1. Update and send back to server the answer to a question (including\n         notification setting).\n  2. Send user to some OS level setting page (notifications for now).",
            "id": "Sidekick_ClosetQuestionEntry_PostDialogAction",
            "properties": {
                "answer": {
                    "$ref": "Sidekick_Question_Answer"
                },
                "questionFingerprint": {
                    "format": "byte",
                    "type": "string"
                },
                "visitOsNotificationsSetting": {
                    "description": "If true, then send user to the page of OS notification setting for GSA.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick_ClosetRowTemplate_RankingInfo": {
            "description": "The wrapper for ranking info.",
            "id": "Sidekick_ClosetRowTemplate_RankingInfo",
            "properties": {
                "score": {
                    "description": "The score based on this type, the larger score the higher ranking.",
                    "format": "int64",
                    "type": "string"
                },
                "type": {
                    "description": "The type used for matching ranking_type.",
                    "enum": [
                        "UNKNOWN_RANKING_TYPE",
                        "ALPHABETICAL",
                        "OTHER",
                        "USER_MODEL_SCORE",
                        "LATEST_MODIFIED_TIMESTAMP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Other type would be used for question ranking, as we may pass down some\nserver-defined ranking for questions.",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_CommuteSummaryTransitDetails_Alert": {
            "description": "Referenced inside TransitStationEntry",
            "id": "Sidekick_CommuteSummaryTransitDetails_Alert",
            "properties": {
                "activePeriod": {
                    "items": {
                        "$ref": "Sidekick__TimeRange"
                    },
                    "type": "array"
                },
                "endTimeSeconds": {
                    "description": "The time when the alert ends. In seconds since epoch.\nDeprecated 09/2014. Use TimeRange instead",
                    "format": "int64",
                    "type": "string"
                },
                "lineName": {
                    "description": "The name of the line affected by the alert. This could be different\nfrom transit_line_name above.",
                    "type": "string"
                },
                "startTimeSeconds": {
                    "description": "The time when the alert starts. In seconds since epoch.\nDeprecated 09/2014. Use TimeRange instead",
                    "format": "int64",
                    "type": "string"
                },
                "stationLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "The station affected by the alert. This could be different from\nstation_location above. Not filled in TransitStationEntry alerts."
                },
                "transitLineBackgroundColor": {
                    "description": "ARGB background color of the transit line headsign.",
                    "format": "uint32",
                    "type": "integer"
                },
                "type": {
                    "description": "The type of transit service alert.",
                    "enum": [
                        "STATION_CLOSURE",
                        "LINE_CLOSURE",
                        "LINE_LIMITED_SERVICE",
                        "SIGNIFICANT_DELAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_CommuteSummaryTransitDetails_Line": {
            "description": "The fields in a Line are the same with the fields in TransitDetails.\nThe fields in TransitDetails are for the first line in the first step.\nWe keep the fields in TransitDetails for backward compatibility.\nNext available: 12",
            "id": "Sidekick_CommuteSummaryTransitDetails_Line",
            "properties": {
                "backgroundColor": {
                    "format": "uint32",
                    "type": "integer"
                },
                "colorboxColor": {
                    "description": "The color of the colorbox which is shown at the next to the line icon.",
                    "format": "uint32",
                    "type": "integer"
                },
                "colorizeName": {
                    "description": "Whether we need to color the text (foreground and background).\nFor old clients (<= 4.0), we need to fill\nbackground/foreground_color fields instead of colorbox_color.\nIf this flag is set false, then the text color is just set for backward\ncompatibility and we should ignore it in the client.",
                    "type": "boolean"
                },
                "foregroundColor": {
                    "description": "ARGB colors of the transit line headsign.",
                    "format": "uint32",
                    "type": "integer"
                },
                "headsign": {
                    "description": "The headsign where this line is going towards.",
                    "type": "string"
                },
                "iconUrl": {
                    "description": "URL for an icon image to show.",
                    "type": "string"
                },
                "lineIconUrl": {
                    "description": "URL for an icon representing the route. DEPRECATED.\nDo not use this anymore.\nFor the clients <= 4.0, if this url is not empty, then the client\nwas suppressing the line name in UI.",
                    "type": "string"
                },
                "methodIconUrl": {
                    "description": "URL for an icon representing the travel mode: an agency or a vehicle\ntype. DEPRECATED. Do not use this anymore.",
                    "type": "string"
                },
                "name": {
                    "description": "A name of the transit line to show.",
                    "type": "string"
                },
                "showName": {
                    "description": "Whether we need to show the line name to identify the line.",
                    "type": "boolean"
                },
                "vehicleType": {
                    "description": "Vehicle type of the line.",
                    "enum": [
                        "VEHICLE_TYPE_RAIL",
                        "VEHICLE_TYPE_BUS",
                        "VEHICLE_TYPE_FERRY",
                        "VEHICLE_TYPE_CABLE_CAR",
                        "VEHICLE_TYPE_OTHER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_CommuteSummaryTransitDetails_Step": {
            "description": "Next available tag: 13.",
            "id": "Sidekick_CommuteSummaryTransitDetails_Step",
            "properties": {
                "arrivalStop": {
                    "$ref": "Sidekick__Location",
                    "description": "Arrival stop of this step."
                },
                "arrivalStopIndexInWaypoints": {
                    "description": "The locations of the arrival stations.",
                    "format": "int32",
                    "type": "integer"
                },
                "arrivalTimeSeconds": {
                    "description": "A list of the next scheduled arrival times.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "departurePlatform": {
                    "description": "Departure platform of this step.",
                    "type": "string"
                },
                "departureStop": {
                    "$ref": "Sidekick__Location",
                    "description": "Departure stop of this step."
                },
                "departureStopIndexInWaypoints": {
                    "description": "The locations of the departure stations.\nRepresented as indexes in CommuteSummary.waypoints.",
                    "format": "int32",
                    "type": "integer"
                },
                "departureTimeSeconds": {
                    "description": "A list of the next scheduled departure times.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "disembarkNotification": {
                    "$ref": "Sidekick__Notification",
                    "description": "The disembark notification for this step.\nWe do not set this in entry.notification because we do not fire it when\nclient receive it. Instead, client will copy this and fire it at the\nright time after user interacts with the disembark alarm button."
                },
                "line": {
                    "description": "Possible transit lines for this step.",
                    "items": {
                        "$ref": "Sidekick_CommuteSummaryTransitDetails_Line"
                    },
                    "type": "array"
                },
                "realtimeDelaySeconds": {
                    "description": "A list of realtime delays corresponding to the departures.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "state": {
                    "description": "Indicates the state of this step.",
                    "enum": [
                        "NOT_STARTED",
                        "IN_PROGRESS",
                        "COMPLETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "walkingTimeMinutes": {
                    "description": "Walking time to the departure station.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_CommuteSummary_TrafficOneLiner": {
            "description": "Traffic report for this CommuteSummary. Gives a concise summary of the\ntraffic conditions, including incidents, along this route. When present the\nclient should not display any traffic_incidents in the card as this field\nwill summarize the most relevant data in an accurate way for this\nCommuteSummary.\n\nIn the case of multiple repeated CommuteSummary then this field refers to\nthe traffic report for this specific route.",
            "id": "Sidekick_CommuteSummary_TrafficOneLiner",
            "properties": {
                "title": {
                    "description": "The title for this report.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_CommuteSummary_TransitDetails": {
            "description": "Next available tag: 21.",
            "id": "Sidekick_CommuteSummary_TransitDetails",
            "properties": {
                "alert": {
                    "description": "Alerts firing for this transit trip.",
                    "items": {
                        "$ref": "Sidekick_CommuteSummaryTransitDetails_Alert"
                    },
                    "type": "array"
                },
                "arrivalTimeSeconds": {
                    "description": "The time you will arrive the destination.",
                    "format": "int64",
                    "type": "string"
                },
                "departureTimeSeconds": {
                    "description": "Departure time of the train/bus. In seconds since epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "fare": {
                    "description": "The fare information of the route, e.g. $10.\nThere may be multiple currencies stored so we need a repeated field.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "firstInVehicleLeg": {
                    "description": "The first riding vehicle's path.\nThis is for rendering the map in the card, so it may be incomplete.\nIf there is no station, empty list.\nIf the user is already on the vehicle (enroute mode), this entry\nwill be the empty list.",
                    "items": {
                        "$ref": "Sidekick__Location"
                    },
                    "type": "array"
                },
                "isSelected": {
                    "description": "Whether user has selected this route.\nUser can manually select a route that he is going to use. We set this bit\naccording to user action log so the client can highlight this route.",
                    "type": "boolean"
                },
                "periodicitySeconds": {
                    "description": "The interval period of the route, provided by guidebook results.",
                    "format": "int32",
                    "type": "integer"
                },
                "personalizedRouteToken": {
                    "description": "The token to trigger the same route pattern in GMM when the route is\nclicked. It is a base64 encoded string of the station locations, such\nas \"BCgwKCg3QykUVFcghRVM=\".",
                    "type": "string"
                },
                "stationLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "Location of the first transit station."
                },
                "step": {
                    "description": "The transit steps for this trip.",
                    "items": {
                        "$ref": "Sidekick_CommuteSummaryTransitDetails_Step"
                    },
                    "type": "array"
                },
                "talkBack": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The talkback string is read by a screen reader representing the contents\nof the transit route for accessability.  This is not logged since the\ndetails of the route are found in the Entry and this is really a\nstring version of those details."
                },
                "transitLineBackgroundColor": {
                    "format": "uint32",
                    "type": "integer"
                },
                "transitLineForegroundColor": {
                    "description": "ARGB colors of the transit line headsign.",
                    "format": "uint32",
                    "type": "integer"
                },
                "transitLineIconUrl": {
                    "description": "URL for an icon representing the route.",
                    "type": "string"
                },
                "transitLineName": {
                    "description": "A short name of the transit line.",
                    "type": "string"
                },
                "transitMethodIconUrl": {
                    "description": "URL for an icon representing the travel mode: an agency or a vehicle\ntype.",
                    "type": "string"
                },
                "vehicleType": {
                    "description": "Vehicle type of the first transit station.",
                    "enum": [
                        "VEHICLE_TYPE_RAIL",
                        "VEHICLE_TYPE_BUS",
                        "VEHICLE_TYPE_FERRY",
                        "VEHICLE_TYPE_CABLE_CAR",
                        "VEHICLE_TYPE_OTHER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "walkingPath": {
                    "description": "The walking path to the first station.\nIf there is no station, this is the walking path to the destination.",
                    "items": {
                        "$ref": "Sidekick__Location"
                    },
                    "type": "array"
                },
                "walkingTimeMinutes": {
                    "description": "Walking time to station.",
                    "format": "int32",
                    "type": "integer"
                },
                "walkingTimeToDestMinutes": {
                    "description": "Walking time from the last station to the destination.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_DiscUnion_RadiusGroup": {
            "id": "Sidekick_DiscUnion_RadiusGroup",
            "properties": {
                "centersLatLngE7": {
                    "description": "The centers are packed in an array to avoid creating one object\nper center on the client, which is sensitive to object load.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "radiusMeters": {
                    "description": "The common radius for this group of discs.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_Entry_ElementEntry": {
            "id": "Sidekick_Entry_ElementEntry",
            "properties": {
                "elementOutput": {
                    "description": "Serialized byte array of a\ngoogle.internal.mothership.searchcard.v1.ElementsOutput, this is a\nunified output format in Search for YouTube Elements. Client should pass\nthe data to Elements runtime to render it.\nFor more information:\nhttps://docs.google.com/document/d/1qD6iUCJVXekYWKw9PxSNDrtYqqOY_ZoTYnHugta5I4w",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_Entry_FacetsEntry": {
            "description": "Entry used for facet chips (go/complex-facets)",
            "id": "Sidekick_Entry_FacetsEntry",
            "properties": {
                "facets": {
                    "items": {
                        "$ref": "Sidekick__ClientAction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick_Entry_PietEntry": {
            "id": "Sidekick_Entry_PietEntry",
            "properties": {
                "pietFrame": {
                    "$ref": "SearchNowUiPiet__Frame",
                    "description": "Piet representation of the content of this Entry."
                },
                "pietSharedStateIds": {
                    "description": "Content Ids of Piet Shared States which should be provided to Piet in\norder to show its content.",
                    "items": {
                        "$ref": "Sidekick__ContentId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick_FlightStatusEntry_Airport": {
            "id": "Sidekick_FlightStatusEntry_Airport",
            "properties": {
                "cityName": {
                    "description": "The city of airport",
                    "type": "string"
                },
                "code": {
                    "description": "Example: SFO\nThis field in conjunction with user_at_airport exposes sensitive location\ninformation.",
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The lat,lng gives the location of the airport. The name gives the\nairport name: e.g. San Francisco International"
                },
                "route": {
                    "description": "The routes the user will take to travel to this airport from his current\nlocation.\nThis is only populated if the airport is within commuting distance.\n\nIMPORTANT: this field was optional until Apr. 2014 and it was changed to\nrepeated. Make sure to do the client version check before putting\nmultiple routes into this field, otherwise it will break the old client.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                },
                "userAtAirport": {
                    "description": "Whether the user is at the airport. This is used to determine whether to\nshow gate information for the airport.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick_FlightStatusEntry_Flight": {
            "id": "Sidekick_FlightStatusEntry_Flight",
            "properties": {
                "airlineCode": {
                    "description": "Airline",
                    "type": "string"
                },
                "airlineLogo": {
                    "$ref": "Sidekick__Photo",
                    "description": "The airline's logo."
                },
                "airlineName": {
                    "type": "string"
                },
                "alternativeFlightsUrl": {
                    "description": "URL to find alternative flights when flight is delayed or canceled.",
                    "type": "string"
                },
                "arrivalAirport": {
                    "$ref": "Sidekick_FlightStatusEntry_Airport",
                    "description": "Arrival\nNote Airport names/IDs/locations are not logged"
                },
                "arrivalGate": {
                    "type": "string"
                },
                "arrivalTerminal": {
                    "type": "string"
                },
                "arrivalTime": {
                    "$ref": "Sidekick_FlightStatusEntry_Time"
                },
                "boardingTimeSecondsSinceEpoch": {
                    "description": "Boarding time",
                    "format": "int64",
                    "type": "string"
                },
                "checkinUrl": {
                    "description": "For Moonshine sourced flights, the url to check-in.",
                    "type": "string"
                },
                "confirmationNumber": {
                    "description": "Confirmation number",
                    "type": "string"
                },
                "departureAirport": {
                    "$ref": "Sidekick_FlightStatusEntry_Airport",
                    "description": "Departure\nNote Airport names/IDs/locations are not logged"
                },
                "departureGate": {
                    "type": "string"
                },
                "departureTerminal": {
                    "type": "string"
                },
                "departureTime": {
                    "$ref": "Sidekick_FlightStatusEntry_Time"
                },
                "detailsUrl": {
                    "description": "UTL to get more detail.",
                    "type": "string"
                },
                "diversionAirport": {
                    "$ref": "Sidekick_FlightStatusEntry_Airport",
                    "description": "Diversion\nNote Airport names/IDs/locations are not logged"
                },
                "diversionGate": {
                    "type": "string"
                },
                "diversionTerminal": {
                    "type": "string"
                },
                "extended": {
                    "$ref": "TravelFlightsProtoFlightStatus__FlightStatusExtended",
                    "description": "Additional information and metadata about this flight, including\ndelay insights, data quality annotations, and information necessary\nto decide when to notify users."
                },
                "flightNumber": {
                    "type": "string"
                },
                "gmailReference": {
                    "description": "For Moonshine sourced flights, the email references.",
                    "items": {
                        "$ref": "Sidekick__GmailReference"
                    },
                    "type": "array"
                },
                "lastUpdatedSecondsSinceEpoch": {
                    "description": "An indication of how fresh the data is.",
                    "format": "int64",
                    "type": "string"
                },
                "modifyUrl": {
                    "description": "For Moonshine sourced flights, the url to modify the reservation.",
                    "type": "string"
                },
                "notificationDetails": {
                    "$ref": "Sidekick_FlightStatusEntry_NotificationDetails",
                    "description": "If set the enclosing entry's notification refers to this flight.\nThis is also used to help construct the notification message."
                },
                "operatingAirlineCode": {
                    "description": "The actual operating airline code.",
                    "type": "string"
                },
                "operatingAirlineName": {
                    "description": "The actual operating airline name.",
                    "type": "string"
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "passenger": {
                    "description": "Passengers",
                    "items": {
                        "$ref": "Sidekick_FlightStatusEntry_Passenger"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "A localized string representing the current flight status (e.g. Delayed).\nDeprecated. Clients should localize based off status_code.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "LINT.ThenChange(//depot/google3/search/now/proto/analysis/flight_status_enums.proto)",
                    "enum": [
                        "UNKNOWN",
                        "SCHEDULED",
                        "ON_TIME",
                        "LANDED",
                        "DELAYED",
                        "CANCELLED",
                        "DIVERTED",
                        "REDIRECTED",
                        "NOT_OPERATIONAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Next flight (departure or landing) is expected on time.",
                        "",
                        "Next flight (departure or landing) is expected to be late.",
                        "",
                        "Flight has landed at an unscheduled airport.",
                        "Flight is in the air and has changed its destination.",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_FlightStatusEntry_NotificationDetails": {
            "description": "Holds extra information relevant to a notification for a flight.",
            "id": "Sidekick_FlightStatusEntry_NotificationDetails",
            "properties": {
                "arriveMinutesBefore": {
                    "description": "The number of minutes the user specified to arrive prior to departure\nof this flight.",
                    "format": "int32",
                    "type": "integer"
                },
                "leaveByTimeSecondsSinceEpoch": {
                    "description": "Time the user should leave by to arrive at the airport with a buffer of\n\"arrive_minutes_before\" before departure.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_FlightStatusEntry_Passenger": {
            "id": "Sidekick_FlightStatusEntry_Passenger",
            "properties": {
                "boardingGroup": {
                    "description": "E.g. 3",
                    "type": "string"
                },
                "passengerName": {
                    "description": "Name of passenger",
                    "type": "string"
                },
                "seatClass": {
                    "description": "E.g. Economy",
                    "type": "string"
                },
                "seatNumber": {
                    "description": "E.g. 12C.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_FlightStatusEntry_Time": {
            "id": "Sidekick_FlightStatusEntry_Time",
            "properties": {
                "actualTimeSecondsSinceEpoch": {
                    "description": "The expected time of the flight.",
                    "format": "int64",
                    "type": "string"
                },
                "scheduledTimeSecondsSinceEpoch": {
                    "description": "The scheduled time of the flight.",
                    "format": "int64",
                    "type": "string"
                },
                "timeZoneId": {
                    "description": "The id of the time zone as accepted by java.util.TimeZone.",
                    "type": "string"
                },
                "timeZoneOffsetSeconds": {
                    "description": "The time zone for the above as an offset from UTC. Note: It is possible\nthat a DST transition occurred between the two. However, we do not get\nseparate timezones from flight status onebox for these.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_GenericCardEntry_BackOfCardQuestion": {
            "description": "If BackOfCardQuestionType.CUSTOM is set, back_of_card_question must also\nbe set.\nNOTE: This must be kept in sync with\nsidekick_internal_client_api.Card.BackOfCardQuestion",
            "id": "Sidekick_GenericCardEntry_BackOfCardQuestion",
            "properties": {
                "negativeAnswer": {
                    "description": "If the user chooses this option, a NEGATIVE action is sent to the server\nfor this card.",
                    "type": "string"
                },
                "positiveAnswer": {
                    "description": "If the user chooses this option, a POSITIVE action is sent to the server\nfor this card.",
                    "type": "string"
                },
                "question": {
                    "description": "The question must not contain any PII and answers to the question must\nalso not imply any PII.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_GenericTableEntry_Row": {
            "description": "A row in the table.",
            "id": "Sidekick_GenericTableEntry_Row",
            "properties": {
                "rowLabel": {
                    "$ref": "Sidekick__TextOrIcon",
                    "description": "Label for a row in a table."
                },
                "talkBack": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Talkback string for the info displayed in this row to be read by the\nscreen reader.  Not logged since this really just a string representation\nof the data already logged for this row."
                },
                "value": {
                    "description": "Display value for each cell in row.",
                    "items": {
                        "$ref": "Sidekick__TextOrIcon"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick_GridCell_GridPhoto": {
            "description": "A message adding display related properties to control\nhow we display the image within a GridCell.",
            "id": "Sidekick_GridCell_GridPhoto",
            "properties": {
                "backgroundColor": {
                    "description": "Background color for the image when no image is displayed.\nThe background color is only applied to the ImageView and\ndoesn't include the padding on the GridCell.\nFormat: 0xaarrggbb.",
                    "format": "int32",
                    "type": "integer"
                },
                "backgroundColorString": {
                    "description": "String Hex presentation of the background_color. For example: FF0000 for\nred (no alpha values).\n\nNOTE: This is a helper field for HTML rendering of GridModule. This field\n  is programmatically filled, and is not expected to be available by the\n  writer of this proto.",
                    "type": "string"
                },
                "gravityHorizontal": {
                    "enum": [
                        "GRAVITY_START",
                        "GRAVITY_END",
                        "GRAVITY_CENTER"
                    ],
                    "enumDescriptions": [
                        "Default, therefore using value 0.",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "heightInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "photo": {
                    "$ref": "Sidekick__Photo",
                    "description": "Standard sidekick photo"
                },
                "photoWithAttribution": {
                    "$ref": "Sidekick__PhotoWithAttribution",
                    "description": "Photo supporting attribution"
                },
                "widthInDp": {
                    "description": "width and height in dp",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_GridCell_MetadataLines": {
            "description": "Container for a repeated MetadataLine so it can appear in a oneof",
            "id": "Sidekick_GridCell_MetadataLines",
            "properties": {
                "text": {
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick_GridRow_BorderAndLocation": {
            "description": "Spec of a border, and the location it should appear in. This is used in\nHTML rendering, for presenting vertical borders in a row. Vertical borders\nin rows need to be implemented as separate DOM element because a vertical\nborder should span vertically over all the row, and the cells themselves\nare not guaranteed to do so.\n\nNOTE: This is a helper message for HTML rendering of GridModule.",
            "id": "Sidekick_GridRow_BorderAndLocation",
            "properties": {
                "endLocation": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "Sidekick__GridBorder",
                    "description": "The spec of the border."
                },
                "startLocation": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_Interest_Filter": {
            "description": "The filter to use for a FILTERED_LIST target. For instance to\nrequest TvNowEntries this would be the contentid.",
            "id": "Sidekick_Interest_Filter",
            "properties": {
                "agendaQuery": {
                    "description": "Query for agenda results (e.g. only items with this title or year).\nIf unset the same query used for MAIN_VIEW will be used.",
                    "type": "string"
                },
                "reminderTaskId": {
                    "description": "The task ID for a reminder.",
                    "type": "string"
                },
                "tvContentId": {
                    "description": "The content id for a tv program the user might be watching.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_Interest_TimeSpaceRegion": {
            "id": "Sidekick_Interest_TimeSpaceRegion",
            "properties": {
                "endSeconds": {
                    "format": "int64",
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "Fields are related by an \"AND\" operator if specified, and ignored\notherwise. Half open times are fine; unspecified means infinity as\nappropriate."
                },
                "startSeconds": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_MallDirectoryEntry_Store": {
            "description": "A single store inside the mall.",
            "id": "Sidekick_MallDirectoryEntry_Store",
            "properties": {
                "action": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Action to perform when the store entry is clicked."
                },
                "businessData": {
                    "$ref": "Sidekick__BusinessData",
                    "description": "Business related data for the store."
                },
                "normalizedCategory": {
                    "description": "Normalized versions of the store's categories for search purposes and\nwill not be displayed.\nCategories are localized in the user's locale before normalization.\nNormalized with Normalization Form D (NFD) with diacritics removed and\nconverted to lowercase using the user's locale.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "normalizedName": {
                    "description": "Normalized version of the store's name for search purposes and will not\nbe displayed.\nNormalized with Normalization Form D (NFD) with diacritics removed and\nconverted to lowercase using the user's locale.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ModuleEntry_ModuleUpdateState": {
            "description": "A State bag which can be posted back to the server when the\ncard is updated",
            "id": "Sidekick_ModuleEntry_ModuleUpdateState",
            "properties": {
                "dateTimeMs": {
                    "description": "A date/time in ms",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the state.  This should be unique across all the\nmodules which make up a Card.",
                    "type": "string"
                },
                "stringValue": {
                    "description": "A String value",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "STRING",
                        "DATE_TIME"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_MultiStateIcon_StateData": {
            "description": "Information pertaining to how each state should be displayed and handled.",
            "id": "Sidekick_MultiStateIcon_StateData",
            "properties": {
                "action": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Client action that is to be performed when the icon is clicked."
                },
                "nextState": {
                    "description": "The state the reaction should be in after the icon is clicked. If the\nstate of the icon needs to be dependent on the outcome of the\nClientAction, set the \"next_state\" field to be the same state as the\n\"state\" field and explicitly switch it from within the client code.",
                    "enum": [
                        "DEFAULT",
                        "SET"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "state": {
                    "description": "The state that this data pertains to.",
                    "enum": [
                        "DEFAULT",
                        "SET"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_NotificationNotificationFeedPrompt_PromptOption": {
            "id": "Sidekick_NotificationNotificationFeedPrompt_PromptOption",
            "properties": {
                "action": {
                    "$ref": "Sidekick__Action",
                    "description": "Value to be captured if the user chooses the option."
                },
                "optionDisplayText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "display text for opt option, e.g. \"No thanks\" or \"Yes\""
                }
            },
            "type": "object"
        },
        "Sidekick_NotificationNotificationFeedback_FeedbackOption": {
            "id": "Sidekick_NotificationNotificationFeedback_FeedbackOption",
            "properties": {
                "action": {
                    "$ref": "Sidekick__Action",
                    "description": "Value to be captured if the user chooses the button."
                },
                "displayText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Display text for the button"
                }
            },
            "type": "object"
        },
        "Sidekick_Notification_NotificationAction": {
            "description": "This field is platform specific and may or may not be supported by all\nplatforms e.g. Android and iOS(8) allow applications to define custom\nactions which can be performed on a notification.",
            "id": "Sidekick_Notification_NotificationAction",
            "properties": {
                "clientAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "The action which should be performed when the user taps this notification\naction."
                },
                "label": {
                    "description": "The text displayed as part of the tap target for an auxiliary action\nwhich can be performed on a notification. The notification action may\nalso have an icon as part of the tap target, which will be determined by\nthe gutter_icon in the ClientAction. The amount of text displayed by the\nuser interface is usually quite limited, so this should be kept as short\nas possible.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_Notification_NotificationFeedPrompt": {
            "description": "In-app prompt after user clicks on the notification",
            "id": "Sidekick_Notification_NotificationFeedPrompt",
            "properties": {
                "confirmationToast": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "the confirmation after notification preference has been changed,\nrecommend max 50 characters\ne.g. \"Notification for top stories turned off\""
                },
                "promptIcon": {
                    "description": "Icon that will be displayed in the prompt",
                    "enum": [
                        "DEFAULT_ICON",
                        "STOCK_UP",
                        "STOCK_DOWN",
                        "NEWS",
                        "MEETING",
                        "NEARBY",
                        "CALENDAR",
                        "TIME_TO_LEAVE",
                        "REMINDER_TIME",
                        "BARCODE",
                        "FLIGHT_DEPART",
                        "PUBLIC_ALERT",
                        "REMINDER",
                        "BASEBALL",
                        "BASKETBALL",
                        "CRICKET",
                        "FOOTBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL",
                        "TRAFFIC_DESRUPTION_ROAD_CLOSURE",
                        "TRAFFIC_DESRUPTION_ACCIDENT",
                        "TRAFFIC_DESRUPTION_CONTRUCTION",
                        "TRAFFIC_DESRUPTION_JAMCIDENT",
                        "TRAFFIC_DESRUPTION_OTHER_TRIANGLE",
                        "PUBLIC_TRANSIT",
                        "BIKE",
                        "WALK",
                        "TRAFFIC_LIGHT",
                        "TRAFFIC_NORMAL",
                        "TRAFFIC_HEAVY",
                        "TRAFFIC",
                        "WEATHER",
                        "PLAY_ARROW_WHITE",
                        "STOCK_TRENDING_UP",
                        "STOCK_TRENDING_DOWN",
                        "STOCK_TRENDING_FLAT",
                        "MOVIE",
                        "TV",
                        "MUSIC",
                        "MUSIC_VIDEO",
                        "LOCAL_ACTIVITY",
                        "BOOK",
                        "VIDEO",
                        "EMAIL",
                        "SEARCH",
                        "GLOBE",
                        "PACKAGE_TRACKING",
                        "BILL_PAY",
                        "ELECTIONS_BALLOT_BOX",
                        "ELECTIONS_DEMOCRATIC",
                        "ELECTIONS_REPUBLICAN",
                        "MEDAL",
                        "OLYMPICS_RIO_SHAPE",
                        "OLYMPICS_RIO_WORD",
                        "PRICE_TAG",
                        "TRANSLATE",
                        "AT_A_PLACE_CROSSHAIR",
                        "AT_A_PLACE_BULLSEYE",
                        "INFERRED_REMINDER",
                        "AMUSEMENT_PARK",
                        "HOTEL",
                        "LANDMARK",
                        "MALL",
                        "MUSEUM",
                        "RESTAURANT",
                        "STORE",
                        "SHOPPING_CART",
                        "SHOPPING_BASKET",
                        "POLLEN_COUNT",
                        "ASSISTANT",
                        "GRAY_BELL",
                        "WORD_COACH"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Asset name on Android: quantum_ic_news_white_24",
                        "",
                        "",
                        "Current Android Usage\nCalendar - Low\nAsset name on Android: stat_notify_calendar",
                        "Current Android Usage\nCalendar - active, passive\nFlightTimeToLeave\nTimeToLeave\nAsset name on Android: ic_stat_time_to_leave",
                        "Current Android Usage\nCarRental\nLastTrainHome\nLastTrainHome\nAsset name on Android: stat_notify_reminder_time",
                        "Current Android Usage\nFlightBoardingPass\nMoonshineEventTicket\nMovieTicket\nAsset name on Android: ic_bp_notification",
                        "Current Android Usage\nFlightStatusi\nAsset name on Android: stat_notify_flight_depart",
                        "Current Android Usage\nPublicAlert\nAsset name on Android: stat_notify_public_alert",
                        "Current Android Usage\nReminder\nAsset name on Android: ic_reminder",
                        "Current Android Usage\nSports\nAsset name on Android: ic_baseball",
                        "Asset name on Android: ic_basketball",
                        "Asset name on Android: ic_cricket",
                        "Asset name on Android: ic_football",
                        "Asset name on Android: ic_hockey",
                        "Asset name on Android: ic_soccer",
                        "Asset name on Android: ic_rugby",
                        "Asset name on Android: ic_sports_tennis_white_24",
                        "Asset name on Android: ic_australian_football",
                        "Current Android Usage\nTrafficIncidents\nAsset name on Android: stat_notify_road_closure",
                        "Asset name on Android: stat_notify_accident",
                        "Asset name on Android: stat_notify_construction",
                        "Asset name on Android: ic_jamcident",
                        "Asset name on Android: stat_notify_traffic_desruption_other_triangle",
                        "Current Android Usage\nTrafficIncident\nAsset name on Android: stat_notify_public_transit",
                        "Asset name on Android: stat_notify_bike",
                        "Asset name on Android: stat_notify_walk",
                        "Asset name on Android: stat_notify_traffic_light",
                        "Asset name on Android: stat_notify_traffic_normal",
                        "Asset name on Android: stat_notify_traffic_heavy",
                        "Asset name on Android: stat_notify_traffic",
                        "Current Android Usage\nWeather\nAsset name on Android: stat_notify_weather",
                        "Asset name on Android: quantum_ic_play_arrow_white_24",
                        "Icon used to indicate a particular stock has trended up.\nAsset name on Android: ic_trending_up_white_24.",
                        "Icon used to indicate a particular stock has trended down.\nAsset name on Android: ic_trending_down_white_24.",
                        "Icon used to indicate a particular stock has trended flat.\nAsset name on Android: ic_trending_flat_white_24.",
                        "Current Android Usage\nKE-Now InterestUpdate\nAsset name on Android: quantum_ic_movie_white_24",
                        "Asset name on Android: quantum_ic_tv_white_24",
                        "Asset name on Android: quantum_ic_music_note_white_24",
                        "Asset name on Android: quantum_ic_music_video_white_24",
                        "Asset name on Android: quantum_ic_local_activity_white_24",
                        "Asset name on Android: quantum_ic_book_white_24",
                        "Current Android Usage\nVideo Highlights\nAsset name on Android: quantum_ic_play_circle_filled_white_24",
                        "Asset name on Android: ic_email",
                        "Current Android Usage\nPertinent Questions\nAsset name on Android: quantum_ic_search_white_24",
                        "Asset name on Android: ic_globe",
                        "Current Android Usage\nPackage tracking\nAsset name on Android: ic_local_shipping",
                        "Current Android Usage\nBill Pay\nAsset name on Android: ic_action_paynow_normal",
                        "Current Android Usage\nElections Voting Reminders, Election Results\nAsset name: ic_elections_ballotbox",
                        "Asset name: ic_elections_democratic",
                        "Asset name: ic_elections_republican",
                        "Notifications for olympics now experience (go/o16-notifications)\nAvailable from AGSA version 5.14 onwards.\nAsset name: ic_medal",
                        "Asset name: ic_rio_shape\nRemoved AGSA version 9.0.",
                        "Asset name: ic_rio_word\nRemoved AGSA version 9.0.",
                        "Current Android Usage\nPrice Drop\nAsset name on Android: ic_tag",
                        "Available from AGSA version 6.3 onwards.\nAsset name on Android: quantum_ic_g_translate_white_24",
                        "Available from AGSA version 6.5 onwards.\nAsset name on Android: quantum_ic_my_location_white",
                        "Available from AGSA version 6.5 onwards.\nAsset name on Android: stat_my_location_bullseye",
                        "Asset name on Android: quantum_ic_assignment_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_local_play_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_hotel_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_account_balance_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_local_mall_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_account_balance_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_restaurant_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_store_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_shopping_cart_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_shopping_basket_white_24",
                        "Available from AGSA version 7.0 onwards.\nAsset name on Android: ic_pollen_count",
                        "Available from AGSA version 7.2 onwards.\nAsset name on Android: ic_assistant_light",
                        "TODO (hhuo): add available AGSA version\nIcon that will be displayed in the notification prompt\nAsset name on Android: now_feed_prompt_bell_circle",
                        "Current Android Usage\nWordCoach\nAsset name on Android: stat_notify_word_coach"
                    ],
                    "type": "string"
                },
                "promptLocation": {
                    "enum": [
                        "UNKNOWN",
                        "DEFAULT_BOTTOM_SHEET"
                    ],
                    "enumDescriptions": [
                        "unknown location",
                        "Snackbar style, prompt is located at the bottom of the screen"
                    ],
                    "type": "string"
                },
                "promptOption": {
                    "description": "CTA elements, the options in the prompt, e.g. opt out of a notification\nonly support two options",
                    "items": {
                        "$ref": "Sidekick_NotificationNotificationFeedPrompt_PromptOption"
                    },
                    "type": "array"
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "title on the prompt, e.g. \u201cKeep receiving notifications for top news\nstories?\u201d"
                },
                "undoConfirmationToast": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "the confirmation after clicking on Undo\nrecommend max 50 characters\ne.g. \"Notification for top stories turned on\""
                }
            },
            "type": "object"
        },
        "Sidekick_Notification_NotificationFeedback": {
            "id": "Sidekick_Notification_NotificationFeedback",
            "properties": {
                "cancelFeedbackButtonText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text for \u201cCancel\u201d (e.g. \"Cancel\")."
                },
                "feedbackOptions": {
                    "description": "The same list of feedback options will be shown to all users.",
                    "items": {
                        "$ref": "Sidekick_NotificationNotificationFeedback_FeedbackOption"
                    },
                    "type": "array"
                },
                "footer": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text displayed after the set of feedback options."
                },
                "iosPromptText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "For IOS ONLY, Text added to notification body to prompt user to rate.\nAndroid code uses actions to determine text, icon, and action type for\nnotification click and secondary actions."
                },
                "notificationFeedbackClientFlow": {
                    "enum": [
                        "DEFAULT",
                        "INLINE_RATING",
                        "INLINE_RATING_WITH_DIALOG"
                    ],
                    "enumDescriptions": [
                        "An \"Rate this\" action is added on the notification and a dialog with\nmultiple options is shown to the user. The user can submit feedback by\nchoosing one of the options and hitting submit.\nScreenshot: https://screenshot.googleplex.com/SY9RDZnjWCo",
                        "Two actions(Ex: \"helpful\" and \"not helpful\") are added to notification.\nClicking on either of the actions submits the feedback.\nScreenshot: https://screenshot.googleplex.com/uvdNxDf8KdZ",
                        "Two actions(Ex: \"helpful\" and \"not helpful\") are added to notification.\nClicking on the \"helpful\" action submits the feedback and displays the\ntoast. Clicking on the \"not helpful\" action records the feedback and\ntakes the user to a dialog which asks for more feedback.\nScreenshot: https://screenshot.googleplex.com/aV7Hxz5N87k"
                    ],
                    "type": "string"
                },
                "questionText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text displayed before the set of feedback options."
                },
                "submitFeedbackButtonText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text for \u201cSubmit\u201d (e.g. \"OK\")."
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Title of the feedback popup."
                },
                "toast": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text that will be displayed once the user submits the feedback."
                }
            },
            "type": "object"
        },
        "Sidekick_PlayVideoAction_Preview": {
            "description": "Necessary information for preview videos.",
            "id": "Sidekick_PlayVideoAction_Preview",
            "properties": {
                "previewLabelText": {
                    "description": "Text label to indicate this video is a preview.",
                    "type": "string"
                },
                "videoUrl": {
                    "description": "The preview video stream url.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_PlayVideoAction_Subtitle": {
            "description": "Subtitle track.",
            "id": "Sidekick_PlayVideoAction_Subtitle",
            "properties": {
                "format": {
                    "description": "The subtitle format.",
                    "enum": [
                        "NONE",
                        "VTT",
                        "SUBRIP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Next available ID: 3"
                    ],
                    "type": "string"
                },
                "language": {
                    "description": "IETF BCP 47 conformant tag (go/bcp47). e.g. \"en\", \"en-US\", \"zh-Hans\".\nOptional as subtitle will work without this, but this is for user to\ndifferentiate between multi-language subtitle tracks.",
                    "type": "string"
                },
                "url": {
                    "description": "The external subtitle URL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_PlayVideoAction_ThirdPartyVideo": {
            "description": "Necessary information for third party videos.",
            "id": "Sidekick_PlayVideoAction_ThirdPartyVideo",
            "properties": {
                "autoplayDurationLimitInSecs": {
                    "description": "The duration of autoplay in seconds.",
                    "format": "int32",
                    "type": "integer"
                },
                "endMessageOverlay": {
                    "description": "Text that shows on top of the video after autoplay finishes.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "googleAnalyticsId": {
                    "description": "Google Analytics id for the publisher account\nwhere we are logging metrics.",
                    "type": "string"
                },
                "publisherId": {
                    "description": "The publisher that owns the third party video content.",
                    "enum": [
                        "UNKNOWN",
                        "CNN",
                        "NDTV",
                        "GOOGLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "subtitles": {
                    "description": "Subtitle tracks if any.",
                    "items": {
                        "$ref": "Sidekick_PlayVideoAction_Subtitle"
                    },
                    "type": "array"
                },
                "vastTag": {
                    "description": "A parameterized URL which contains related information\nto the ads publisher campaigns.",
                    "type": "string"
                },
                "videoUrl": {
                    "description": "URL of the video for playing. Note that it would expire\nafter a few hours by design.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_PlayVideoAction_YoutubeVideo": {
            "description": "Necessary information for videos on YouTube.",
            "id": "Sidekick_PlayVideoAction_YoutubeVideo",
            "properties": {
                "videoId": {
                    "description": "ID of the video for Youtube Player.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_QuestionEntity_TopicEntity": {
            "description": "General topic for returning user interest responses. This bucket will be\nused when the interest does not fit into another category.",
            "id": "Sidekick_QuestionEntity_TopicEntity",
            "properties": {
                "mid": {
                    "description": "The freebase/kg mid of the topic.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_QuestionEntity_TvEntity": {
            "description": "Information about a television program, series, or provider.",
            "id": "Sidekick_QuestionEntity_TvEntity",
            "properties": {
                "freebaseMid": {
                    "description": "The Freebase MID of this program, if available.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the program or series in PrimeTime.",
                    "type": "string"
                },
                "interestMid": {
                    "description": "The MID of the interest that caused the recommendation\nof this program, if available.",
                    "type": "string"
                },
                "programProviderId": {
                    "description": "The ID of the provider of the program.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_QuestionTemplate_ClientActionWithIcon": {
            "id": "Sidekick_QuestionTemplate_ClientActionWithIcon",
            "properties": {
                "clientAction": {
                    "description": "Client action to execute if selected.",
                    "enum": [
                        "INVALID",
                        "DISMISS_CARD",
                        "ADD_A_TEAM",
                        "ADD_A_STOCK",
                        "REFRESH_CARD_LIST",
                        "EDIT_PLACES",
                        "MANAGE_LOCATION_SHARING",
                        "RENAME_PLACE",
                        "FORGET_PLACE",
                        "SHOW_LINKED_CARD",
                        "REFRESH_CARD",
                        "REFRESH_IMMEDIATELY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "For questions that require special client handling.\nClient provides an auto-complete list for teams.",
                        "Client provides an auto-complete list for stocks.",
                        "",
                        "Client redirects user to Places in the Closet.",
                        "Client redirects user to relevant settings.",
                        "Client provides a dialog to rename a place.",
                        "Client provides a dialog to remove a place.",
                        "For icebreaker questions, instructs the client to show the card\nassociated with the question.",
                        "Refresh the corresponding card in-place.\nOnly supported in Android client versions 3.2+. No-op for older clients.",
                        "Refresh the current context (whether card list or closet) immediately."
                    ],
                    "type": "string"
                },
                "displayStringKey": {
                    "description": "Key to retrieve a localized display string from a string dictionary.",
                    "type": "string"
                },
                "icon": {
                    "description": "Icon to use with the ClientAction.",
                    "enum": [
                        "NO_ICON",
                        "WALKING",
                        "BIKING",
                        "DRIVING",
                        "PUBLIC_TRANSIT",
                        "CANCEL",
                        "THERMOSTAT",
                        "ADD",
                        "EDIT",
                        "REMOVE",
                        "SHARE_GPLUS",
                        "HIDE_CONTENT",
                        "SHOW_CONTENT",
                        "SETTINGS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Transportation modes.",
                        "",
                        "",
                        "",
                        "Actions.",
                        "Temperature units.",
                        "E.g. add a team, add a stock.",
                        "E.g. edit/remove a place.",
                        "",
                        "E.g. share commute.",
                        "Game spoilers.",
                        "",
                        "E.g. manage location sharing settings."
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "Stable id value for this option. This value must never change.\nThis allows the order of the options to change while maintaining the\nintegrity of existing answers.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_QuestionTemplate_YesNoQuestionClientAction": {
            "id": "Sidekick_QuestionTemplate_YesNoQuestionClientAction",
            "properties": {
                "noAction": {
                    "enum": [
                        "INVALID",
                        "DISMISS_CARD",
                        "ADD_A_TEAM",
                        "ADD_A_STOCK",
                        "REFRESH_CARD_LIST",
                        "EDIT_PLACES",
                        "MANAGE_LOCATION_SHARING",
                        "RENAME_PLACE",
                        "FORGET_PLACE",
                        "SHOW_LINKED_CARD",
                        "REFRESH_CARD",
                        "REFRESH_IMMEDIATELY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "For questions that require special client handling.\nClient provides an auto-complete list for teams.",
                        "Client provides an auto-complete list for stocks.",
                        "",
                        "Client redirects user to Places in the Closet.",
                        "Client redirects user to relevant settings.",
                        "Client provides a dialog to rename a place.",
                        "Client provides a dialog to remove a place.",
                        "For icebreaker questions, instructs the client to show the card\nassociated with the question.",
                        "Refresh the corresponding card in-place.\nOnly supported in Android client versions 3.2+. No-op for older clients.",
                        "Refresh the current context (whether card list or closet) immediately."
                    ],
                    "type": "string"
                },
                "yesAction": {
                    "enum": [
                        "INVALID",
                        "DISMISS_CARD",
                        "ADD_A_TEAM",
                        "ADD_A_STOCK",
                        "REFRESH_CARD_LIST",
                        "EDIT_PLACES",
                        "MANAGE_LOCATION_SHARING",
                        "RENAME_PLACE",
                        "FORGET_PLACE",
                        "SHOW_LINKED_CARD",
                        "REFRESH_CARD",
                        "REFRESH_IMMEDIATELY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "For questions that require special client handling.\nClient provides an auto-complete list for teams.",
                        "Client provides an auto-complete list for stocks.",
                        "",
                        "Client redirects user to Places in the Closet.",
                        "Client redirects user to relevant settings.",
                        "Client provides a dialog to rename a place.",
                        "Client provides a dialog to remove a place.",
                        "For icebreaker questions, instructs the client to show the card\nassociated with the question.",
                        "Refresh the corresponding card in-place.\nOnly supported in Android client versions 3.2+. No-op for older clients.",
                        "Refresh the current context (whether card list or closet) immediately."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_Question_Answer": {
            "description": "Set by the client when the user answers the question.\nOnly one of the contained fields should be present.",
            "id": "Sidekick_Question_Answer",
            "properties": {
                "dynamicMultipleChoiceAnswer": {
                    "$ref": "Sidekick_Question_Entity",
                    "description": "Answer for a dynamic multiple choice question."
                },
                "dynamicMultipleChoiceClientAction": {
                    "description": "Client action for a dynamic multiple choice question.",
                    "enum": [
                        "INVALID",
                        "DISMISS_CARD",
                        "ADD_A_TEAM",
                        "ADD_A_STOCK",
                        "REFRESH_CARD_LIST",
                        "EDIT_PLACES",
                        "MANAGE_LOCATION_SHARING",
                        "RENAME_PLACE",
                        "FORGET_PLACE",
                        "SHOW_LINKED_CARD",
                        "REFRESH_CARD",
                        "REFRESH_IMMEDIATELY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "For questions that require special client handling.\nClient provides an auto-complete list for teams.",
                        "Client provides an auto-complete list for stocks.",
                        "",
                        "Client redirects user to Places in the Closet.",
                        "Client redirects user to relevant settings.",
                        "Client provides a dialog to rename a place.",
                        "Client provides a dialog to remove a place.",
                        "For icebreaker questions, instructs the client to show the card\nassociated with the question.",
                        "Refresh the corresponding card in-place.\nOnly supported in Android client versions 3.2+. No-op for older clients.",
                        "Refresh the current context (whether card list or closet) immediately."
                    ],
                    "type": "string"
                },
                "multipleChoiceAnswer": {
                    "description": "Index in the provided multiple choice list.",
                    "format": "int32",
                    "type": "integer"
                },
                "multipleSelectAnswer": {
                    "description": "The values of the selected options for a multiple select question.\nAn empty array indicates that the user answered by selecting none\nof the options.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "openChoiceAnswer": {
                    "$ref": "Sidekick_Question_Entity",
                    "description": "Answer for an open choice question."
                },
                "yesNoAnswer": {
                    "description": "Yes answer = true, no answer = false.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick_Question_Condition": {
            "description": "The condition to show or enable the question.\n1. suppose there is 0 entity_state_condition and 0 question_condition,\n   the overall condition is satisfied by default;\n2. suppose there is 0 entity_state_condition and 1 question_condition,\n   if the question_condition is satisfied, the overall condition is\n   satisfied;\n3. suppose there is 0 entity_state_condition and N question_condition,\n   if either question_condition is satisfied, the overall condition is\n   satisfied;\n4. suppose there is 1 entity_state_condition and 0 question_condition,\n   if entity_state_condition is satisfied, the overall condition is\n   satisfied;\n5. suppose there is 1 entity_state_condition and 1 question_condition,\n   the overall condition is satisfied only if both sub conditions are\n   satisfied;\n6. suppose there is 1 entity_state_condition and N question_condition,\n   if the entity_state_condition is satisfied and at least one\n   question_condition is satisfied, the overall condition is satisfied.\n7. suppose there is N entity_state_condition and 0 question_condition,\n   if either entity_state_condition is satisfied, the overall condition is\n   satisfied;\n8. suppose there is N entity_state_condition and 1 question_condition,\n   if the question_condition is satisfied and at least one\n   entity_state_condition is satisfied, the overall condition is satisfied.\n9. suppose there is N entity_state_condition and N question_condition,\n   if at least one entity_state_condition is satisfied and at least one\n   question_condition is satisfied, the overall condition is satisfied.",
            "id": "Sidekick_Question_Condition",
            "properties": {
                "entityStateCondition": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_ENTITY_STATE",
                            "INTERESTED",
                            "NOT_INTERESTED",
                            "INFERRED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "questionCondition": {
                    "items": {
                        "$ref": "Sidekick_Question_QuestionCondition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick_Question_Entity": {
            "description": "QuestionTemplate uses parameterized strings such as those referred to by\nquestion_string_key and justification_string_key. Entity replaces such a\nplaceholder.",
            "id": "Sidekick_Question_Entity",
            "properties": {
                "calendarAccountHash": {
                    "description": "Copied from client_user_data.calendar_data.account_hash in EntryQuery.\nComputed by the client to uniquely identify a calendar account without\nrevealing the real identity. Used in computing the Question fingerprint.\nIf this field is not set, the server should not serve a\ncalendar-specific question.",
                    "type": "string"
                },
                "frequentPlaceId": {
                    "description": "Used in frequent place card. This is the ID for a place such as \"home\"\nor \"work\".",
                    "type": "string"
                },
                "internalApiClientId": {
                    "description": "Used in internal API cards. This corresponds to the\nsidekick_internal_client_api.proto.RegisteredClients enum values.",
                    "format": "int32",
                    "type": "integer"
                },
                "notificationCategory": {
                    "description": "Used for NOTIFICATION_CATEGORY_Q to track which category the question\nis about.",
                    "enum": [
                        "UNKNOWN",
                        "SPORTS",
                        "WEATHER",
                        "AT_A_PLACE",
                        "STORIES",
                        "STOCKS",
                        "COMMUTE",
                        "BILLS",
                        "ELECTIONS",
                        "MOVIES_TV_SHOWS",
                        "PRICE_DROP",
                        "FEATURE_UPDATES",
                        "CODELAB",
                        "INFERRED_REMINDERS",
                        "DOODLES",
                        "FLIGHT",
                        "MERCHANT",
                        "TOP_STORIES",
                        "EXAMS",
                        "UGC",
                        "JANATA",
                        "MINDSEARCH_ANSWERS",
                        "WORD_COACH",
                        "BREAKING_NEWS",
                        "SEARCH_EMPLOY",
                        "TRAVEL",
                        "AT_A_PLACE_CHANNEL",
                        "BILLS_CHANNEL",
                        "COMMUTE_ALERTS_CHANNEL",
                        "CURRENT_WEATHER_CHANNEL",
                        "ELECTIONS_CHANNEL",
                        "FEATURE_UPDATES_CHANNEL",
                        "GAME_REMINDERS_CHANNEL",
                        "INFERRED_COMMUTE_UPDATES_CHANNEL",
                        "INFERRED_REMINDERS_CHANNEL",
                        "MISC_CHANNEL",
                        "MOVIES_TV_SHOWS_CHANNEL",
                        "PRICE_DROP_CHANNEL",
                        "SPORTS_SCORES_CHANNEL",
                        "STOCKS_CHANNEL",
                        "STORIES_CHANNEL",
                        "TIME_TO_TRAVEL_REMINDERS_CHANNEL",
                        "WEATHER_ALERTS_CHANNEL",
                        "WEATHER_FORECASTS_CHANNEL",
                        "REMINDERS_CHANNEL",
                        "MERCHANT_CHANNEL",
                        "TOP_STORIES_CHANNEL",
                        "EDUCATION_CHANNEL",
                        "UGC_CHANNEL",
                        "JANATA_CHANNEL",
                        "MINDSEARCH_ANSWERS_CHANNEL",
                        "WORD_COACH_CHANNEL",
                        "SEARCH_EMPLOY_CHANNEL",
                        "TRAVEL_CHANNEL",
                        "GOOGLE_GO_BREAKING_NEWS_CHANNEL",
                        "DEPRECATED_OLYMPICS"
                    ],
                    "enumDescriptions": [
                        "LINT.IfChange",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "go/now-notifications-codelab",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Notification channels for Android O and above.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Notification channels for Google Go (SearchLite).",
                        ""
                    ],
                    "type": "string"
                },
                "programProviderId": {
                    "description": "Used in the \"Things to watch\" card. This is the ID for the program\nprovider. Replaced by tv_entity. Will be deprecated after 3.2.",
                    "type": "string"
                },
                "reminderSubscriptionId": {
                    "description": "Docstring of a reminder subscription.",
                    "type": "string"
                },
                "source": {
                    "enum": [
                        "SERVER",
                        "CLIENT_USER_INPUT"
                    ],
                    "enumDescriptions": [
                        "Entity is provided by the server at question serving time.",
                        "Entity is provided from user input on the client, e.g. user selects\na sports team or stock ticker from an autocomplete list."
                    ],
                    "type": "string"
                },
                "sportTeamPlayer": {
                    "$ref": "Sidekick_SidekickConfigurationSports_SportTeamPlayer",
                    "description": "Used in the sports card."
                },
                "stockData": {
                    "$ref": "Sidekick_SidekickConfigurationStockQuotes_StockData",
                    "description": "Used in the stock card."
                },
                "thirdPartyPartnerId": {
                    "description": "Used in third party cards to track the partner's internal ID.",
                    "type": "string"
                },
                "topicEntity": {
                    "$ref": "Sidekick_QuestionEntity_TopicEntity",
                    "description": "Used in training closet to track explicit user interest responses."
                },
                "tournament": {
                    "$ref": "Sidekick_SidekickConfigurationSports_Tournament",
                    "description": "Used in the sports card."
                },
                "transitPattern": {
                    "description": "Used in transit traffic card. The transit pattern token to identify a\ntransit route.",
                    "type": "string"
                },
                "tvEntity": {
                    "$ref": "Sidekick_QuestionEntity_TvEntity",
                    "description": "Used in the \"Things to Watch\" card. This is the tv show, series,\nor provider on the card."
                },
                "tvLineup": {
                    "$ref": "Sidekick_SidekickConfiguration_TvLineup",
                    "description": "Used in the \"Things to Watch\" card. Used to store user's tv lineup."
                },
                "tvProgramId": {
                    "description": "Used in the \"Things to Watch\" card. This is the ID for the tv show\nor movie on the card (tv.house.program_resource.Program.id). Replaced\nby tv_entity. Will be deprecated after 3.2.",
                    "type": "string"
                },
                "userHideScoresInterest": {
                    "$ref": "Sidekick_SidekickConfigurationSports_UserHideScoresInterest"
                },
                "value": {
                    "description": "Localized string value, such as \"San Francisco Giants\" or \"GOOG\".",
                    "type": "string"
                },
                "websiteInterest": {
                    "$ref": "Sidekick_SidekickConfigurationWebsiteUpdate_WebsiteInterest",
                    "description": "Used for the WebsiteUpdate card: interest in a single website."
                }
            },
            "type": "object"
        },
        "Sidekick_Question_MultipleChoiceOption": {
            "description": "Display string and icon for multiple choice options.",
            "id": "Sidekick_Question_MultipleChoiceOption",
            "properties": {
                "displayString": {
                    "description": "A localized display string for the multiple choice option.",
                    "type": "string"
                },
                "icon": {
                    "$ref": "Sidekick__ModuleIcon",
                    "description": "The icon for the multiple choice option."
                }
            },
            "type": "object"
        },
        "Sidekick_Question_QuestionCondition": {
            "id": "Sidekick_Question_QuestionCondition",
            "properties": {
                "expectedAnswer": {
                    "description": "Either one expected_answer matches the answer of the question of\nquestion_fingerprint, the QuestionCondition is satisfied.",
                    "items": {
                        "$ref": "Sidekick_Question_Answer"
                    },
                    "type": "array"
                },
                "questionFingerprint": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_Question_QuestionDisplay": {
            "description": "A wrapper that contains invariants of one question. The title is localized\nby server side already.",
            "id": "Sidekick_Question_QuestionDisplay",
            "properties": {
                "multipleChoiceOption": {
                    "description": "Only a multiple choice question template comes with provided answers.\nApplicable to the MULTIPLE_CHOICE question type only.",
                    "items": {
                        "$ref": "Sidekick_Question_MultipleChoiceOption"
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "YES_NO",
                        "MULTIPLE_CHOICE",
                        "OPEN_CHOICE",
                        "ACTION_BUTTON"
                    ],
                    "enumDescriptions": [
                        "Asks a boolean question and interested in the yes/no answer.",
                        "Asks a multiple-choice question and interested in the user's choice.\nChoices are statically defined in the template and cannot be customized.",
                        "Asks a open-choice question to allow user to input,\ne.g. for for adding a place, etc.",
                        "A button as a question, client would update the answer once user clicks\nthe button;"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ReminderData_SmartActionData": {
            "description": "Data associated with a smart action.",
            "id": "Sidekick_ReminderData_SmartActionData",
            "properties": {
                "businessData": {
                    "$ref": "Sidekick__BusinessData",
                    "description": "This can be either a local business or an organization\nsuch as \"comcast\". Organizations will contain a phone number\nand opening hours if available. Local businesses will have\nthe address data populated."
                },
                "calendarEntry": {
                    "$ref": "Sidekick__CalendarEntry",
                    "description": "A suggested calendar entry for the user. The calendar entry\nwill contain a name and a title. It may contain a start/end time\nif the user specified one."
                },
                "clickAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "The click action to take for this smart action."
                },
                "query": {
                    "description": "Query to execute to perform this smart action.",
                    "type": "string"
                },
                "stockQuote": {
                    "$ref": "Sidekick__StockQuote",
                    "description": "Stock information related to the reminder."
                },
                "type": {
                    "description": "The type of action with which this data is associated.",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "weatherEntry": {
                    "$ref": "Sidekick__WeatherEntry",
                    "description": "A weather entry that shows related weather for the\nreminder."
                }
            },
            "type": "object"
        },
        "Sidekick_ReminderEntryRecurrenceInfo_DailyPattern": {
            "description": "Pattern for when in the day the repeating task should trigger. Applies\nto all frequencies DAILY or coarser. Either hour, minute, and second will\nbe populated or day_part, never both.",
            "id": "Sidekick_ReminderEntryRecurrenceInfo_DailyPattern",
            "properties": {
                "dayPart": {
                    "enum": [
                        "MORNING",
                        "AFTERNOON",
                        "EVENING",
                        "NIGHT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "hour": {
                    "format": "int32",
                    "type": "integer"
                },
                "minute": {
                    "format": "int32",
                    "type": "integer"
                },
                "second": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_ReminderEntryRecurrenceInfo_MonthlyPattern": {
            "description": "Pattern for a MONTHLY recurrence. A MONTHLY recurrence may be specified\nin three different ways. These fields should be set in a mutually\nexclusive way, i.e. ((month_day OR last_day) XOR\n(week_day AND week_day_number)).\n1. Absolute days of the month, e.g. the 1st and 15th. Set month_day.\n2. Relative last day of the month. Represented as a boolean since the\n   last absolute day number is dependent on the month. Set last_day=true.\n3. The nth specific weekday of the month.",
            "id": "Sidekick_ReminderEntryRecurrenceInfo_MonthlyPattern",
            "properties": {
                "lastDay": {
                    "description": "Special flag to indicate the last day of the month.",
                    "type": "boolean"
                },
                "lastWeek": {
                    "description": "Special flag to indicate a week_day in the last week of the month, as\nthis cannot be captured by week_day_number.",
                    "type": "boolean"
                },
                "monthDay": {
                    "description": "Absolute day of the month, index starting at 1.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "weekDay": {
                    "description": "For capturing the nth weekday of the month. Use together with\nweek_day_number.",
                    "enum": [
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY",
                        "SUNDAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "weekDayNumber": {
                    "description": "The nth occurrence of the week_day to match.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_ReminderEntryRecurrenceInfo_WeeklyPattern": {
            "description": "Pattern for a WEEKLY recurrence. Must have at least one week day.",
            "id": "Sidekick_ReminderEntryRecurrenceInfo_WeeklyPattern",
            "properties": {
                "weekDay": {
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick_ReminderEntryRecurrenceInfo_YearlyPattern": {
            "description": "Pattern for a YEARLY recurrence. A YEARLY recurrence is specified using a\nmonthly pattern and a set of months the pattern applies to.\nExample: Every January 16:\n  monthly_pattern {\n    month_day: 16;\n  }\n year_month: JANUARY;",
            "id": "Sidekick_ReminderEntryRecurrenceInfo_YearlyPattern",
            "properties": {
                "monthlyPattern": {
                    "$ref": "Sidekick_ReminderEntryRecurrenceInfo_MonthlyPattern",
                    "description": "The monthly pattern to recur"
                },
                "yearMonth": {
                    "description": "The months of the year to apply the pattern.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "JANUARY",
                            "FEBRUARY",
                            "MARCH",
                            "APRIL",
                            "MAY",
                            "JUNE",
                            "JULY",
                            "AUGUST",
                            "SEPTEMBER",
                            "OCTOBER",
                            "NOVEMBER",
                            "DECEMBER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick_ReminderEntry_RecurrenceInfo": {
            "description": "Extra parameters describing the details for a recurring reminder.\nVery closely reflects caribou.tasks.Recurrence.",
            "id": "Sidekick_ReminderEntry_RecurrenceInfo",
            "properties": {
                "dailyPattern": {
                    "$ref": "Sidekick_ReminderEntryRecurrenceInfo_DailyPattern",
                    "description": "Specifies when in the day the task should occur. Applies to all\nfrequencies DAILY and coarser. If absent, the repeating tasks are\nconsidered \"all day\"."
                },
                "endMillis": {
                    "description": "The end time of the recurrence, inclusive. Set to the user's time zone at\ncreation time. Exactly one of end_millis and num_occurrences will be set.",
                    "format": "int64",
                    "type": "string"
                },
                "every": {
                    "description": "Multiplier on the frequency of the recurrence. Use this to specify\npatterns that recur every X days, months, years, etc.\nExample: [remind me to call mom every 2nd week].",
                    "format": "int32",
                    "type": "integer"
                },
                "frequency": {
                    "description": "The high-level frequency of the recurrence. Should always be populated.",
                    "enum": [
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "YEARLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "monthlyPattern": {
                    "$ref": "Sidekick_ReminderEntryRecurrenceInfo_MonthlyPattern",
                    "description": "Specify a monthly recurrence. Valid and required for MONTHLY frequencies\nonly."
                },
                "numOccurrences": {
                    "description": "The number of times to repeat this reminder. Exactly one of end_millis\nand num_occurrences will be set.",
                    "format": "int32",
                    "type": "integer"
                },
                "recurrenceId": {
                    "description": "ID for the recurrence - currently the microsecond timestamp of when the\nrecurrence was created, but this may change in the future.",
                    "type": "string"
                },
                "startMillis": {
                    "description": "The start time of the recurrence. Only the year/month/day portion are\nused to find the start date, use DailyPattern to specify the time or\nperiod. Set to the user's time zone at creation time. Should always be\npopulated.",
                    "format": "int64",
                    "type": "string"
                },
                "weeklyPattern": {
                    "$ref": "Sidekick_ReminderEntryRecurrenceInfo_WeeklyPattern",
                    "description": "Specify a weekly recurrence. Valid and required for WEEKLY frequencies\nonly."
                },
                "yearlyPattern": {
                    "$ref": "Sidekick_ReminderEntryRecurrenceInfo_YearlyPattern",
                    "description": "Specify a yearly recurrence. Valid only for YEARLY frequencies."
                }
            },
            "type": "object"
        },
        "Sidekick_SaveAction_WebPage": {
            "description": "Web page to be saved. This web page should be of actual content. This\nshould NOT be special links, such as URLs with a custom scheme that opens\nup another app.",
            "id": "Sidekick_SaveAction_WebPage",
            "properties": {
                "title": {
                    "description": "Title of the saving information. It is shown to the user in a toast\nmessage when a web page is saved successfully.",
                    "type": "string"
                },
                "url": {
                    "description": "The full URL of the web page. This should be the URL of the end content\n(e.g. https://www.reddit.com/r/Eyebleach/comments/7jxpv4/sealpup/), and\nshould NOT be a URL of the AMP version nor a shortened version\n(e.g. https://goo.gl/9pPEYo).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SearchAction_Results": {
            "description": "Pre-generated search results for this SearchAction.\nIf supported, the client may render these results in lieu of issuing the\nquery to GWS.",
            "id": "Sidekick_SearchAction_Results",
            "properties": {},
            "type": "object"
        },
        "Sidekick_SelectionOptions_SelectOption": {
            "description": "A selection option.",
            "id": "Sidekick_SelectionOptions_SelectOption",
            "properties": {
                "label": {
                    "description": "The label displayed to represent the item, this\nvalue is translated.",
                    "type": "string"
                },
                "value": {
                    "description": "The value that will be associated with the selector\nwhen this option is selected.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ShareAction_AnalyticsInfo": {
            "description": "Tracking parameters supported by DDL.",
            "id": "Sidekick_ShareAction_AnalyticsInfo",
            "properties": {
                "googlePlayAnalytics": {
                    "$ref": "Sidekick_ShareAction_GooglePlayAnalytics",
                    "description": "Google Play Campaign Measurements."
                },
                "itunesConnectAnalytics": {
                    "$ref": "Sidekick_ShareAction_ITunesConnectAnalytics",
                    "description": "iTunes Connect App Analytics."
                }
            },
            "type": "object"
        },
        "Sidekick_ShareAction_BodySegment": {
            "description": "Sharing body, can be server created text or url.",
            "id": "Sidekick_ShareAction_BodySegment",
            "properties": {
                "rawText": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ShareAction_GooglePlayAnalytics": {
            "description": "Parameters for Google Play Campaign Measurements.\nSee\nhttps://developers.google.com/analytics/devguides/collection/android/v4/campaigns#campaign-params",
            "id": "Sidekick_ShareAction_GooglePlayAnalytics",
            "properties": {
                "gclid": {
                    "description": "\"gclib\" parameter of a long DDL.",
                    "type": "string"
                },
                "utmCampaign": {
                    "description": "\"utm_campaign\" parameter of a long DDL.",
                    "type": "string"
                },
                "utmContent": {
                    "description": "\"utm_content\" parameter of a long DDL.",
                    "type": "string"
                },
                "utmMedium": {
                    "description": "\"utm_medium\" parameter of a long DDL.",
                    "type": "string"
                },
                "utmSource": {
                    "description": "\"utm_source\" parameter of a long DDL.",
                    "type": "string"
                },
                "utmTerm": {
                    "description": "\"utm_term\" parameter of a long DDL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ShareAction_ITunesConnectAnalytics": {
            "description": "Parameters for iTunes Connect App Analytics.\nSee\nhttps://itunesconnect.apple.com/downloads/Documentation/iTunes_Connect_App_Analytics_Guide_v1.pdf",
            "id": "Sidekick_ShareAction_ITunesConnectAnalytics",
            "properties": {
                "at": {
                    "description": "\"at\" parameter of a long DDL",
                    "type": "string"
                },
                "ct": {
                    "description": "\"ct\" parameter of a long DDL",
                    "type": "string"
                },
                "mt": {
                    "description": "\"mt\" parameter of a long DDL",
                    "type": "string"
                },
                "pt": {
                    "description": "\"pt\" parameter of a long DDL",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_ShareAction_SocialMetaTagInfo": {
            "description": "Social meta tag params.\nUsed to set meta tag data for link previews on social sites.",
            "id": "Sidekick_ShareAction_SocialMetaTagInfo",
            "properties": {
                "socialDescription": {
                    "description": "A short description of the link. Optional.",
                    "type": "string"
                },
                "socialImageLink": {
                    "description": "An image url string. Optional.",
                    "type": "string"
                },
                "socialTitle": {
                    "description": "Title to be displayed. Optional.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SidekickConfigurationSports_SportTeamPlayer": {
            "description": "These are tuples we've noticed for the user. The user may leave them\nshowing or choose to hide them, as reflected by the hide property.\nThis is to express a generic sport interest - so in addition to just a\nteam, this may also represent a player, tournament, league, etc. Use\nthe type field to differentiate the nature of the interest.",
            "id": "Sidekick_SidekickConfigurationSports_SportTeamPlayer",
            "properties": {
                "city": {
                    "type": "string"
                },
                "freebaseId": {
                    "type": "string"
                },
                "hide": {
                    "type": "boolean"
                },
                "hideScores": {
                    "description": "Whether to hide the scores of games where this team is an identified\nuser interest.",
                    "type": "boolean"
                },
                "player": {
                    "type": "string"
                },
                "sport": {
                    "enum": [
                        "BASKETBALL",
                        "FOOTBALL",
                        "BASEBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "CRICKET",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "team": {
                    "description": "This could potentially be PII, so don't log to permanent logs.\nThis field should be used as the name for all sports interests, such as\n\"Chicago Bears\" or \"FIFA World Cup\".",
                    "type": "string"
                },
                "type": {
                    "description": "The type of sport interest such as team or tournament.",
                    "enum": [
                        "TEAM",
                        "PLAYER",
                        "TOURNAMENT"
                    ],
                    "enumDescriptions": [
                        "Represents a team such as \"Chicago Bears\".",
                        "Represents an individual player, such as \"Roger Federer\".",
                        "Represents a tournament such as \"FIFA World Cup\".\nNext id to use: 4"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SidekickConfigurationSports_Tournament": {
            "description": "A message representing a user's interest in a sports tournament.\nDEPRECATED: do not use, use SportTeamPlayer instead.",
            "id": "Sidekick_SidekickConfigurationSports_Tournament",
            "properties": {
                "freebaseId": {
                    "description": "Freebase MID of the tournament",
                    "type": "string"
                },
                "hide": {
                    "description": "Whether to hide all display of games in this tournament",
                    "type": "boolean"
                },
                "hideScores": {
                    "description": "Whether to hide the scores of games in this tournament",
                    "type": "boolean"
                },
                "name": {
                    "description": "Localized name of the tournament",
                    "type": "string"
                },
                "sport": {
                    "description": "Which sport the tournament is in",
                    "enum": [
                        "BASKETBALL",
                        "FOOTBALL",
                        "BASEBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "CRICKET",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SidekickConfigurationSports_UserHideScoresInterest": {
            "description": "A message representing a users's configuration to hide scores\nof a sport interest which can be a player, a team or a tournament.",
            "id": "Sidekick_SidekickConfigurationSports_UserHideScoresInterest",
            "properties": {
                "freebaseId": {
                    "description": "Freebase MID of the interest.",
                    "type": "string"
                },
                "hideScores": {
                    "description": "Whether to hide the scores of this interest.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Localized name of the interest.",
                    "type": "string"
                },
                "sport": {
                    "description": "The kind of sport this interest belongs to.",
                    "enum": [
                        "BASKETBALL",
                        "FOOTBALL",
                        "BASEBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "CRICKET",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "TEAM",
                        "PLAYER",
                        "TOURNAMENT"
                    ],
                    "enumDescriptions": [
                        "Represents a team such as \"Chicago Bears\".",
                        "Represents an individual player, such as \"Roger Federer\".",
                        "Represents a tournament such as \"FIFA World Cup\".\nNext id to use: 4"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SidekickConfigurationStockQuotes_StockData": {
            "description": "Data about a stock that the user might be interested in.",
            "id": "Sidekick_SidekickConfigurationStockQuotes_StockData",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "exchange": {
                    "description": "This could potentially be PII, so don't log to permanent logs.",
                    "type": "string"
                },
                "gin": {
                    "description": "Finance-specific unique identifier of the stock.",
                    "format": "uint64",
                    "type": "string"
                },
                "mid": {
                    "description": "KG unique identifier of the stock - not logged since it is not part of\nthe client request.",
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SidekickConfigurationWebsiteUpdate_WebsiteInterest": {
            "description": "A user's interest in a single website.",
            "id": "Sidekick_SidekickConfigurationWebsiteUpdate_WebsiteInterest",
            "properties": {
                "url": {
                    "description": "The canonical URL of the site homepage, e.g. \"http://foo.bar.com/\".",
                    "type": "string"
                },
                "wantsUpdates": {
                    "description": "Whether the user wants to see updates for this site.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick_SidekickConfiguration_TvLineup": {
            "description": "Information about a user's lineup preference.",
            "id": "Sidekick_SidekickConfiguration_TvLineup",
            "properties": {
                "displayString": {
                    "description": "The display string for a lineup.",
                    "type": "string"
                },
                "lineupId": {
                    "description": "The lineup id provided from House API.",
                    "type": "string"
                },
                "zipcode": {
                    "description": "The zipcode associated with the lineup. Currently\nthe client only supports zipcode. Will use postal code\nwhen we launch internationally.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SportScoreEntryTeamStats_Record": {
            "description": "Team record including wins/losses/ties.",
            "id": "Sidekick_SportScoreEntryTeamStats_Record",
            "properties": {
                "losses": {
                    "format": "int32",
                    "type": "integer"
                },
                "overtimeLosses": {
                    "format": "int32",
                    "type": "integer"
                },
                "position": {
                    "format": "int32",
                    "type": "integer"
                },
                "ties": {
                    "format": "int32",
                    "type": "integer"
                },
                "wins": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_SportScoreEntry_BaseballScore": {
            "description": "Scores specific to baseball.",
            "id": "Sidekick_SportScoreEntry_BaseballScore",
            "properties": {
                "errors": {
                    "format": "int32",
                    "type": "integer"
                },
                "hits": {
                    "format": "int32",
                    "type": "integer"
                },
                "runs": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_SportScoreEntry_CricketDetails": {
            "id": "Sidekick_SportScoreEntry_CricketDetails",
            "properties": {
                "gameResult": {
                    "type": "string"
                },
                "metadata": {
                    "description": "String to indicate metadata about the game such as break information\ne.g. Lunch.",
                    "type": "string"
                },
                "playType": {
                    "enum": [
                        "ODI",
                        "TEST",
                        "T20",
                        "FIRST_CLASS",
                        "WARM_UP_ODI",
                        "WARM_UP_T20",
                        "LIST_A"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "playTypeString": {
                    "description": "play_type represented as a string",
                    "type": "string"
                },
                "result": {
                    "description": "DEPRECATED - use play_type_string and match_result instead\nString to indicate the result of the match\ne.g. \"India won by 54 runs\".",
                    "type": "string"
                },
                "tossInformation": {
                    "description": "String to indicate toss related information about a game\ne.g. India won the toss and chose to bat.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_SportScoreEntry_Period": {
            "description": "A period in the game. For example a Quarter in basketball or a Set in\ntennis.",
            "id": "Sidekick_SportScoreEntry_Period",
            "properties": {
                "number": {
                    "description": "The period's order in the progress of the match.",
                    "format": "int32",
                    "type": "integer"
                },
                "periodType": {
                    "description": "REGULAR, OVERTIME, ...",
                    "enum": [
                        "REGULAR",
                        "OVERTIME",
                        "SHOOTOUTS",
                        "NEXT_SCORE_WINS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "DEPRECATED"
                    ],
                    "type": "string"
                },
                "score": {
                    "description": "One score for each sport_entity.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timeSeconds": {
                    "description": "This can be elapsed or remaining time, depending on the sport.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_SportScoreEntry_SportEntity": {
            "id": "Sidekick_SportScoreEntry_SportEntity",
            "properties": {
                "abbreviation": {
                    "description": "Localized abbreviation for the team (e.g. \"Cle\" for Cleveland Cavaliers).",
                    "type": "string"
                },
                "affiliationName": {
                    "description": "Localized affiliation of a team, used in conjunction with given_name.\ne.g. \"Chicago\" for Chicago Bears.",
                    "type": "string"
                },
                "backgroundColor": {
                    "description": "The ARGB background color for this team.",
                    "format": "uint32",
                    "type": "integer"
                },
                "baseballScore": {
                    "$ref": "Sidekick_SportScoreEntry_BaseballScore"
                },
                "fullName": {
                    "description": "Localized full name of the team/player.",
                    "type": "string"
                },
                "givenName": {
                    "description": "Localized given name, used in conjunction with affiliation_name.\ne.g. \"Bears\" for Chicago Bears.",
                    "type": "string"
                },
                "isUserInterest": {
                    "description": "Whether this is an entity a user is interested in.",
                    "type": "boolean"
                },
                "isWinner": {
                    "description": "Only valid if StatusCode == DONE. In case of tie, is_winner is false for\nall entities.",
                    "type": "boolean"
                },
                "logoUrl": {
                    "description": "If logo_url is set, it is used directly to fetch the team's\nlogo.  Otherwise, the logo can be specified as offsets into\nsprite_url.",
                    "type": "string"
                },
                "mid": {
                    "description": "SportEntity mid (team, player, etc.) is used for logging and\ntracking implicit user feedback on per mid level.",
                    "type": "string"
                },
                "name": {
                    "description": "Localized name of the team/player.",
                    "type": "string"
                },
                "primaryKey": {
                    "description": "The opaque primary key that would be used for this team in the user's\nsettings.",
                    "type": "string"
                },
                "score": {
                    "description": "The current score for in-progress matches. Final score for completed\nmatches.",
                    "type": "string"
                },
                "teamStats": {
                    "$ref": "Sidekick_SportScoreEntry_TeamStats",
                    "description": "Stats for the team, such as overall record, last 10 games, etc."
                }
            },
            "type": "object"
        },
        "Sidekick_SportScoreEntry_TeamStats": {
            "description": "Stats for a team such as overall record, team points, etc.",
            "id": "Sidekick_SportScoreEntry_TeamStats",
            "properties": {
                "conferenceRecord": {
                    "$ref": "Sidekick_SportScoreEntryTeamStats_Record",
                    "description": "Record within the conference."
                },
                "divisionRecord": {
                    "$ref": "Sidekick_SportScoreEntryTeamStats_Record",
                    "description": "Record within the division."
                },
                "gamesBack": {
                    "description": "Number of games back from the division leader.",
                    "format": "double",
                    "type": "number"
                },
                "gamesPlayed": {
                    "description": "Number of games played.",
                    "format": "int32",
                    "type": "integer"
                },
                "lastTenRecord": {
                    "description": "Formatted string of last 10 games.\n  - soccer shows form, e.g. \"WWDLW\".\n  - hockey shows W-L-D, e.g. \"8-2-0\".",
                    "type": "string"
                },
                "loseStreak": {
                    "description": "Number of consecutive games lost, not set if not on a losing streak.",
                    "format": "int32",
                    "type": "integer"
                },
                "overallRecord": {
                    "$ref": "Sidekick_SportScoreEntryTeamStats_Record",
                    "description": "Record overall."
                },
                "points": {
                    "description": "Number of league points.",
                    "format": "int32",
                    "type": "integer"
                },
                "pointsAgainst": {
                    "description": "Total points scored against this team.",
                    "format": "int32",
                    "type": "integer"
                },
                "pointsDifference": {
                    "description": "The difference in the number of points scored for and against the team.",
                    "format": "int32",
                    "type": "integer"
                },
                "pointsFor": {
                    "description": "Total points scored by this team.",
                    "format": "int32",
                    "type": "integer"
                },
                "streak": {
                    "description": "Win/loss streak, e.g. \"W2\", \"L1\". Deprecated: use win_streak or\nlose_streak.",
                    "type": "string"
                },
                "teamPoints": {
                    "description": "Team points calculated from wins, losses, ties, etc.",
                    "format": "int32",
                    "type": "integer"
                },
                "winFraction": {
                    "description": "Fraction of games won, in the range [0, 1].",
                    "format": "double",
                    "type": "number"
                },
                "winStreak": {
                    "description": "Number of consecutive games won, not set if not on a winning streak.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_SportScoreEntry_UpcomingMatch": {
            "description": "Summary information about an upcoming sports match.",
            "id": "Sidekick_SportScoreEntry_UpcomingMatch",
            "properties": {
                "matchDescription": {
                    "description": "The two teams (or players) competing in the match.  This will vary\nby locale, but typically be something like \"Team A vs Team B\",\nor \"Team C @ Team D\".",
                    "type": "string"
                },
                "startTimeSeconds": {
                    "description": "The start time of the match.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_TabularModuleTableRow_RowBorder": {
            "description": "Border of a row parameters.",
            "id": "Sidekick_TabularModuleTableRow_RowBorder",
            "properties": {
                "color": {
                    "description": "The color that the border will appear in. It's actually the background\ncolor set on the element. The color is in hex. In case it is not given,\nthe color will be transparent.",
                    "format": "int32",
                    "type": "integer"
                },
                "heightInDp": {
                    "description": "The height, in dp, of the vertical padding.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick_TabularModule_ColumnDescription": {
            "description": "Column information for a table, This includes styling properties that apply\nto all cells in the column.",
            "id": "Sidekick_TabularModule_ColumnDescription",
            "properties": {
                "centerAlignPhoto": {
                    "description": "In case this column includes a photo, center align it (horizontally).\nNOTE:\n * In case photo_as_avatar==true, this is ignored.",
                    "type": "boolean"
                },
                "endPadInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "photoHeightInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "photoWidthInDp": {
                    "description": "In case this column includes a photo, scale it to fit these dimensions.\nNOTE:\n * In case photo_as_avatar==true, this is ignored.\n * Both width and height have to be given.",
                    "format": "int32",
                    "type": "integer"
                },
                "shouldStretch": {
                    "description": "Indicates if the column should catch as much horizontal space as\npossible.\nNOTE:\n * This is ignored in case any column has weight field.\n * In case this is given, the column will strech as much as possible,\n   while other columns will shrink to fit content.",
                    "type": "boolean"
                },
                "startPadInDp": {
                    "description": "Cell padding for the column. Start and End correspond to Left and Right\nwhen presenting LTR languages and the other way around when presenting\nRTL languages.",
                    "format": "int32",
                    "type": "integer"
                },
                "weight": {
                    "description": "layout_weights applied to the cells, these are percentages of the\nhorizontal space the cell of the column should contain.\nNOTE:\n * In case weights are given, they should be given to all columns in the\n   table.\n * Default left/right padding for columns with weights are zero.\n * In case weight is given to any column, should_strech is ignored.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sidekick_TabularModule_TableCell": {
            "id": "Sidekick_TabularModule_TableCell",
            "properties": {
                "cellSpan": {
                    "description": "Number of cells worth of space this cell should occupy in the table",
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "description": "Content text for this cell",
                    "items": {
                        "$ref": "Sidekick__TemplatedString"
                    },
                    "type": "array"
                },
                "dataLines": {
                    "description": "Content in this cell. Use this field for content instead of the\ndeprecated data field.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "header": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Header text for this cell"
                },
                "headerLines": {
                    "description": "Header in this cell.  Use this field for the header instead of\nthe deprecated header field.\nWARNING: On Android, the header only supports a single line",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "photo": {
                    "$ref": "Sidekick__Photo",
                    "description": "Define a photo which is displayed in a cell.  If the photo\nis defined, it will override both data and data_lines."
                },
                "photoAsAvatar": {
                    "description": "Treat the photo as an avatar photo.  When the photo is defined\nif this is true, the photo will be styled as an Avatar",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick_TabularModule_TableRow": {
            "description": "A row in the table",
            "id": "Sidekick_TabularModule_TableRow",
            "properties": {
                "backgroundColor": {
                    "description": "Background color for this row. The color is in hex. In case it is not\ngiven, the background color will be transparent.",
                    "format": "int32",
                    "type": "integer"
                },
                "bottomBorder": {
                    "$ref": "Sidekick_TabularModuleTableRow_RowBorder"
                },
                "bottomPaddingInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "cells": {
                    "description": "The list of cells in this row",
                    "items": {
                        "$ref": "Sidekick_TabularModule_TableCell"
                    },
                    "type": "array"
                },
                "suppressHeader": {
                    "description": "If true, do not display any rows for the header or header_lines of the\nTableCells in this row.",
                    "type": "boolean"
                },
                "topBorder": {
                    "$ref": "Sidekick_TabularModuleTableRow_RowBorder"
                },
                "topPaddingInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "verticalCenterAlign": {
                    "description": "Vertically center align data in the cells of this row.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick_TemplatedString_Parameter": {
            "description": "A parameter to be substituted in the string. Every type of parameter\nmust depend on some information only available on the client at rendering\ntime, and not on the server at card and string creation time.\nIn particular, this is NOT a mechanism for naming parts of the string:\nif the value can be determined on the server, it should be inlined in\nthe string.",
            "id": "Sidekick_TemplatedString_Parameter",
            "properties": {
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "A location for use with Type.DISTANCE."
                },
                "timestampSeconds": {
                    "description": "An absolute timestamp in seconds for use with Type.ELAPSED_TIME.",
                    "format": "int64",
                    "type": "string"
                },
                "type": {
                    "description": "The type of this parameter.",
                    "enum": [
                        "ELAPSED_TIME",
                        "DISTANCE",
                        "QUERY"
                    ],
                    "enumDescriptions": [
                        "Displays elapsed time string, e.g. \"hours ago\", \"tomorrow\".\nRequires: timestamp_seconds",
                        "Displays the user's current distance from a location, e.g. \"400ft\".\nRequires: location.\nNOTE: As of 2014 Nov., this is not implemented yet.",
                        "A runtime given search query string."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_TransitStationEntryLineDepartureGroup_Departure": {
            "description": "A 'departure' may have an arrival or depature time (both relative\nto response_epoch_seconds). Departure groups without a departure time\nwill not be returned. Lines without a Departure group will not be\nreturned.",
            "id": "Sidekick_TransitStationEntryLineDepartureGroup_Departure",
            "properties": {
                "departureDelaySeconds": {
                    "description": "The anticipated time of departure utilizing real time data.\nRelative to scheduled_departure_time_seconds.\nIf set, real time data was used.\nPositive -> delay, negative -> ahead of schedule",
                    "format": "int32",
                    "type": "integer"
                },
                "expressClass": {
                    "description": "Localized name of the express class e.g., \"Local\", \"Rapid\"",
                    "type": "string"
                },
                "relativeArrivalTimeSeconds": {
                    "description": "The scheduled time of arrival.\nThis value is relative to response_epoch_seconds, but as of\nDec 2013, response_epoch_seconds is 0.\nAs of Dec 2013, this field is not populated.",
                    "format": "int32",
                    "type": "integer"
                },
                "relativeDepartureTimeSeconds": {
                    "description": "The scheduled time of departure.\nThis value is relative to response_epoch_seconds.\nThis field is deprecated and may be no longer populated.\nUse scheduled_departure_time_seconds instead.",
                    "format": "int32",
                    "type": "integer"
                },
                "scheduledDepartureTimeSeconds": {
                    "description": "The schedule time of departure relative to unix epoch.\nMay be used as a key for this Departure within the\nDepartureGroup.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_TransitStationEntryLine_DepartureGroup": {
            "id": "Sidekick_TransitStationEntryLine_DepartureGroup",
            "properties": {
                "departure": {
                    "items": {
                        "$ref": "Sidekick_TransitStationEntryLineDepartureGroup_Departure"
                    },
                    "type": "array"
                },
                "headsign": {
                    "description": "\"JUMP Lafayette pnR via Sir Galahad\"\nThis string will be unique for a DepartureGroup in a Line.",
                    "type": "string"
                },
                "lineLongName": {
                    "description": "This field is no longer filled.\nIt was used as a fallback when line name (above) is not provided, but\nnow we do this fallback in the server side.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_TransitStationEntry_Line": {
            "id": "Sidekick_TransitStationEntry_Line",
            "properties": {
                "backgroundColor": {
                    "description": "ARGB background color of the line name",
                    "format": "int32",
                    "type": "integer"
                },
                "color": {
                    "description": "Same as colorbox_color, only used by old clients",
                    "format": "int32",
                    "type": "integer"
                },
                "colorboxColor": {
                    "description": "ARGB color of the colorbox which is shown at the next to the line icon",
                    "format": "int32",
                    "type": "integer"
                },
                "colorizeName": {
                    "description": "Whether we need to color the text (foreground and background).\nIf this is false, background_color and text_color must be ignored.\nIntroduced for backward compatibility.",
                    "type": "boolean"
                },
                "departureGroup": {
                    "items": {
                        "$ref": "Sidekick_TransitStationEntryLine_DepartureGroup"
                    },
                    "type": "array"
                },
                "lineAlertIndex": {
                    "description": "Indices of this line's alerts in TransitStationEntry's alert pool",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "lineIconUrl": {
                    "description": "URL for an icon representing the transit line.",
                    "type": "string"
                },
                "name": {
                    "description": "\"JUMP\" The JUMP bus line",
                    "type": "string"
                },
                "textColor": {
                    "description": "ARGB color of the line name text",
                    "format": "int32",
                    "type": "integer"
                },
                "vehicleType": {
                    "description": "The vehicle type of the line",
                    "enum": [
                        "VEHICLE_TYPE_RAIL",
                        "VEHICLE_TYPE_BUS",
                        "VEHICLE_TYPE_FERRY",
                        "VEHICLE_TYPE_CABLE_CAR",
                        "VEHICLE_TYPE_OTHER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_WeatherEntry_WeatherPoint": {
            "description": "Represents weather conditions for a period of time where the period of\ntime is described by the \"label\" field.\nWhen the message appears in the \"near_future_points\" field only the\n\"label\" and \"description\" fields are filled in.",
            "id": "Sidekick_WeatherEntry_WeatherPoint",
            "properties": {
                "chanceOfPrecipitation": {
                    "description": "Chance of precipitation as a percentage.",
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "description": "e.g. \"Partly Cloudy\"",
                    "type": "string"
                },
                "highTemperature": {
                    "format": "int32",
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "label": {
                    "description": "A label for the time (period) this weather condition covers in the\nrequest language and locale.  e.g. \"Today\", \"Thursday\"",
                    "type": "string"
                },
                "lowTemperature": {
                    "format": "int32",
                    "type": "integer"
                },
                "precipitationType": {
                    "enum": [
                        "UNKNOWN",
                        "SNOW",
                        "RAIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "temperatureUnit": {
                    "enum": [
                        "CELSIUS",
                        "FAHRENHEIT"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "wind": {
                    "description": "e.g. \"NW at 14 mph\"",
                    "type": "string"
                },
                "windSpeed": {
                    "format": "int32",
                    "type": "integer"
                },
                "windUnit": {
                    "enum": [
                        "MPH",
                        "KMPH",
                        "MPS"
                    ],
                    "enumDescriptions": [
                        "Miles per hour",
                        "Kilometers per hour",
                        "Meters per second"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick_WhyThisAdAction_TargetingReason": {
            "description": "Targeting reasons list. Contains a string describing why the ad was placed\non the page, and an optional link pointing to an external help center page\ngiving more information about the reason.",
            "id": "Sidekick_WhyThisAdAction_TargetingReason",
            "properties": {
                "learnMoreOpenUrlAction": {
                    "$ref": "Sidekick__OpenUrlAction"
                },
                "learnMoreSearchAction": {
                    "$ref": "Sidekick__SearchAction"
                },
                "learnMoreUrl": {
                    "type": "string"
                },
                "learnMoreWebviewAction": {
                    "$ref": "Sidekick__WebViewAction"
                },
                "reason": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__AccessibilityMetadata": {
            "description": "Accessibility metadata for screen readers which controls how the view is\ndescribed. We eventually want to move the talkbackString into this but that\nwould require a large server reworking.",
            "id": "Sidekick__AccessibilityMetadata",
            "properties": {
                "accessibilityRoles": {
                    "$ref": "Sidekick__AccessibilityRoles"
                }
            },
            "type": "object"
        },
        "Sidekick__AccessibilityRoles": {
            "description": "Accessibility roles used by screen readers to control the manner in which the\nview is labeled.",
            "id": "Sidekick__AccessibilityRoles",
            "properties": {
                "headerLevel": {
                    "enum": [
                        "HEADER_LEVEL_UNSPECIFIED",
                        "H2",
                        "H3"
                    ],
                    "enumDescriptions": [
                        "No special role.",
                        "The following headers mimic headings available on the web. iOS and Android\ntreat H2 as a header for screen readers, and H3 standard as\nstandard (non-header) elements.\nThe element is a H2 header, such as the title of a hero card.",
                        "The element is a H3 header, such as the title of a tray card."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Action": {
            "description": "This is an action associated with an entry. It is not necessarily tied to\neither the main list or the details page; it is up to the phone to determine\nwhen an action has taken place, and how to present the choice to the user to\ntake the action. For example, the user could click on the main entry body in\nthe main list, or they could select from a list of icons like \"dismiss\",\n\"thumbs up\", \"navigate\", etc. The user could also click on buttons on the\ndetails page.",
            "id": "Sidekick__Action",
            "properties": {
                "actionTakenMessage": {
                    "description": "Message displayed to the user after the action is taken, e.g. in a toast.\nCurrently not necessary to log this because the messages are hardcoded on\nthe server based on entry type and there's no need to dremel them.",
                    "type": "string"
                },
                "displayMessage": {
                    "description": "String to display to the user if the actions are in a text menu.",
                    "type": "string"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains an Action proto that has only the\nextensions set.",
                    "format": "byte",
                    "type": "string"
                },
                "entryLogType": {
                    "description": "Corresponds to the nature of the action being logged. This is by default\nan action for a single Entry, but some actions (like reactions) correspond\nto an entire group of entries.",
                    "enum": [
                        "UNKNOWN",
                        "SINGLE_ENTRY",
                        "GROUP"
                    ],
                    "enumDescriptions": [
                        "Unknown is an error state that should never happen.",
                        "Single entry is used for actions done on a single entry",
                        "Group is used for actions done on an entire carousel or list card"
                    ],
                    "type": "string"
                },
                "interest": {
                    "$ref": "Sidekick__Interest",
                    "description": "For a \"MORE\" action, this is the interest to be sent to the server\nas argument to an EntryQuery."
                },
                "precacheContent": {
                    "description": "Allow this action to be taken when the device is offline, by preloading all\ncontent needed to complete the action. E.g. when the action contains an\nInterest, fetch the cards corresponding to that Interest, and all the\nimages they reference.",
                    "type": "boolean"
                },
                "presentationType": {
                    "description": "For FOREGROUND_START, this identifies the type of presentation.",
                    "enum": [
                        "STANDARD",
                        "SEARCH_SUGGEST",
                        "ASSIST",
                        "INTEREST_PICKER"
                    ],
                    "enumDescriptions": [
                        "Presentation where Google Now is the main focus.",
                        "Presentation with Now content, but the focus is on search suggest.",
                        "Presentation of Screen Assist content in the assist layer. May also\ncontain a subset of Now content.",
                        "Presentation of Full Page Interest Picker."
                    ],
                    "type": "string"
                },
                "recordActionIfTaken": {
                    "description": "If true, the action is recorded and relayed to the sidekick servers. Since\nthe protocol is chatty, sending back entire entries with each action, this\nsaves on bandwidth for actions the server deems not worthy of logging.",
                    "type": "boolean"
                },
                "refreshAllCards": {
                    "description": "Requests that the client refresh all cards after this action is taken.",
                    "type": "boolean"
                },
                "shouldDismiss": {
                    "description": "Should this action cause a dismiss of data it is representing on the client\nscreen",
                    "type": "boolean"
                },
                "showRefreshInvitation": {
                    "description": "If true, the client may offer to refresh the cards after the action.",
                    "type": "boolean"
                },
                "type": {
                    "description": "LINT.ThenChange(\n   //depot/google3/geo/sidekick/proto/analysis_action_map.txt,\n   //depot/google3/java/com/google/search/now/common/data/action/ActionUtil.java,\n   //depot/google3/javatests/com/google/geo/sidekick/frontend/collections/EntryTypeToSourceMapperTest.java\n)",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "uploadPriority": {
                    "description": "Upload priority set by server to enable fast uploading of EUAs",
                    "enum": [
                        "UNKNOWN_UPLOAD_PRIORITY",
                        "NORMAL_UPLOAD_PRIORITY",
                        "LOW_UPLOAD_PRIORITY"
                    ],
                    "enumDescriptions": [
                        "Unknown is an error state that should never happen.",
                        "Normal priority action. May be uploaded quicker in EUA upload task.",
                        "Low priority action. Action ineligible for fast EUA upload."
                    ],
                    "type": "string"
                },
                "veInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for corresponding UI element and information for\nclient on how to log it."
                }
            },
            "type": "object"
        },
        "Sidekick__ActionOption": {
            "description": "A single option in a MultiOptionAction.",
            "id": "Sidekick__ActionOption",
            "properties": {
                "clickAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Click action to take when this option is selected."
                },
                "text": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text of the action option"
                }
            },
            "type": "object"
        },
        "Sidekick__AdaptiveImageHeader": {
            "description": "Configurable header module that may include photos in various configurations",
            "id": "Sidekick__AdaptiveImageHeader",
            "properties": {
                "imageCaption": {
                    "description": "Text to show over the image on the lower right corner.",
                    "type": "string"
                },
                "imageSize": {
                    "description": "The size to display the header image at.",
                    "enum": [
                        "NORMAL",
                        "SMALL"
                    ],
                    "enumDescriptions": [
                        "192dp height",
                        "112dp height"
                    ],
                    "type": "string"
                },
                "imageTalkback": {
                    "description": "Talkback for the image in the header.",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "URL of an image to include in the header.",
                    "type": "string"
                },
                "justification": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Small accompanying text, e.g. \"Because you searched for...\""
                },
                "photo": {
                    "$ref": "Sidekick__Photo",
                    "description": "Image to display at the end (typically right) edge.\nCurrently supported only for landscape image header with image_url."
                },
                "photoSize": {
                    "description": "Size of the photo.",
                    "enum": [
                        "UNKNOWN_ICON_SIZE",
                        "THIRD_PARTY_LOGO",
                        "ICON_H1",
                        "ICON_H2",
                        "ICON_H3",
                        "ICON_H4",
                        "ICON_H5",
                        "ATTRIBUTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "3rd party logo at the end (right for LTR layouts) of the card header.",
                        "text-line image sizes, these will map into device independent\nsizes on the client.",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "showFullImage": {
                    "description": "Whether to show full image or perform a center crop to fit the placeholder.\nCaveats:\n  1. This only works when setting the image with image_url.\n  2. The image will be scaled down and padded with whitespace so only use\n     with white background images.\n  3. Small images are NOT scaled up.\n  5. Supported in GSA version 4.7+.",
                    "type": "boolean"
                },
                "showVideoPlayIcon": {
                    "description": "Display a (video) play icon over the image.",
                    "type": "boolean"
                },
                "subtitle": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Smaller text/content beneath the title"
                },
                "subtitleStyleOverrides": {
                    "$ref": "Sidekick__TextStyleOverrides",
                    "description": "Style overrides for subtitle."
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Main title text in the header"
                },
                "titleStyleOverrides": {
                    "$ref": "Sidekick__TextStyleOverrides",
                    "description": "Style overrides for title."
                }
            },
            "type": "object"
        },
        "Sidekick__AddCalendarEventAction": {
            "description": "Describes an action to add a new event in Calendar.",
            "id": "Sidekick__AddCalendarEventAction",
            "properties": {
                "attendees": {
                    "description": "Comma separated list of email addresses of attendees.",
                    "type": "string"
                },
                "calendarId": {
                    "description": "Id of calendar which the event will be added to.",
                    "format": "int64",
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location"
                },
                "startTime": {
                    "description": "Start/end time in RFC 3339 format.",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__AgendaEntry": {
            "description": "List header entry for an agenda card that shows a list of agenda items.",
            "id": "Sidekick__AgendaEntry",
            "properties": {
                "hasShareButton": {
                    "description": "Indicates whether trip itinerary would have share button.",
                    "type": "boolean"
                },
                "justification": {
                    "description": "Justification text for the agenda card containing personal-branding\nattribution info. e.g. \"Only you can see this\".",
                    "type": "string"
                },
                "numEntriesToShow": {
                    "description": "Number of entries to show before displaying the \"show more\" button.",
                    "format": "int32",
                    "type": "integer"
                },
                "secondaryPageHeader": {
                    "$ref": "Sidekick__SecondaryPageHeaderDescriptor",
                    "description": "Header info for the secondary page if \"show more\" button is clicked."
                },
                "secondaryPageParameters": {
                    "$ref": "Sidekick_AgendaEntry_SecondaryPageParameters"
                },
                "sharePayloadPlainText": {
                    "description": "The text payload string for share button. Cannot log this field\nas it contains user's detailed trip itinerary info.",
                    "type": "string"
                },
                "sharePayloadRichText": {
                    "description": "The rich text supplemental payload string for share button. Cannot\nlog this field as it contains user's detailed trip itinerary info.",
                    "type": "string"
                },
                "shareSubjectText": {
                    "description": "The subject string for share button.",
                    "type": "string"
                },
                "shareTitle": {
                    "description": "The title of the share action, e.g. \"Share your itinerary\".",
                    "type": "string"
                },
                "showInAssistantHqStyle": {
                    "description": "Indicates whether to show cards in Assistant HQ style.",
                    "type": "boolean"
                },
                "subtitle": {
                    "description": "Subtitle of the agenda card, e.g. \"Friday, May 2\".",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the agenda card, e.g. \"Today's agenda\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__AppLauncherModule": {
            "id": "Sidekick__AppLauncherModule",
            "properties": {
                "content": {
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "displayName": {
                    "description": "This is an optional display name.  This is used\nwhen we don't have a package name or the package\nisn't available on the device",
                    "type": "string"
                },
                "iconUrl": {
                    "description": "This is an optional icon URL.  This is used\nwhen we don't have a package name or the\npackage isn't available on the device.",
                    "type": "string"
                },
                "packageName": {
                    "description": "The name of the package.  If the package is specified\nwe will lookup the name and icon from the\nPackageManager on Android",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__AppSuggestionEntry": {
            "id": "Sidekick__AppSuggestionEntry",
            "properties": {
                "appIcon": {
                    "$ref": "Sidekick__Photo",
                    "description": "Photo containing the url of the package's icon."
                },
                "contextTypes": {
                    "description": "The type for the context where the app suggestions are made.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "NO_CONTEXT",
                            "LOCATION_HOME",
                            "LOCATION_WORK",
                            "LOCATION_OTHER",
                            "WEEKLY_TIME_SLICE",
                            "ACTIVITY_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "displayName": {
                    "description": "Display name of the suggested app.",
                    "type": "string"
                },
                "packageName": {
                    "description": "Android package name of the suggested app",
                    "type": "string"
                },
                "score": {
                    "description": "Score of the context which caused this app to be suggested.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sidekick__AssistReissueAction": {
            "description": "This is a Now-on-Tap specific action. The action type indicates the assist\nmode type that the reissued request will trigger.",
            "id": "Sidekick__AssistReissueAction",
            "properties": {
                "payload": {
                    "description": "Reissue payload.",
                    "format": "byte",
                    "type": "string"
                },
                "type": {
                    "description": "The assist mode type of reissue request.",
                    "enum": [
                        "CONTEXTUAL_CARDS",
                        "RETURN_EARLY",
                        "TRANSLATE",
                        "EXTRA",
                        "RETURN_MOCK_CARD",
                        "OCR",
                        "SCREENSHOT",
                        "FULL_IMAGE",
                        "POST_SELECTION",
                        "IMAGE_TEXT",
                        "NO_OVERRIDE_MODE"
                    ],
                    "enumDescriptions": [
                        "The default mode, returns contextual cards.",
                        "Return a single card as fast as possible.",
                        "Generate only the translate card and skip other cards.\nRequires a valid screenshot or OCR from the client.",
                        "Generate extra cards.",
                        "Return a single demo card. This is useful for clients to\noptimize and debug.",
                        "The client is sending a screenshot and wants to receive the OCR'd strings\nback. The server does not produce any cards in this mode.",
                        "The client is sending a screenshot and wants to receive cards related to\nimages in the screenshot. This mode can also trigger the translate card and\nsends down the OCR output.",
                        "The client is sending an image and wants to receive annotations related to\nthe image.  This mode can also trigger translate card and annotations\nderived from OCR text.  This is currently used by Gobot.",
                        "The server attemps to match bounding boxes to each entity that is found.\nIt returns this information along with the cards to the client.",
                        "The server runs OCR and returns the information related to the\ntext on the screen.",
                        "Constant signifying the mode should not be overridden.\nTODO(cdneale) deprecate b/31112286"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Attraction": {
            "description": "A place which is an attraction and the user might want to visit when\ntraveling.",
            "id": "Sidekick__Attraction",
            "properties": {
                "businessData": {
                    "$ref": "Sidekick__BusinessData"
                },
                "clickAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "The action to be performed when the attraction is clicked.\nThis is set starting with the 4.4.5 release."
                },
                "route": {
                    "description": "The routes to the attraction.\n\nIMPORTANT: this field was optional until Apr. 2014 and it was changed to\nrepeated. Make sure to do the client version check before putting multiple\nroutes into this field, otherwise it will break the old client.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__AttractionEntry": {
            "description": "An individual attraction within the AttractionListEntry.  This is exposed\nfor new clients using the group_entry/subtree representation of lists.",
            "id": "Sidekick__AttractionEntry",
            "properties": {
                "attraction": {
                    "$ref": "Sidekick__Attraction",
                    "description": "The attraction."
                }
            },
            "type": "object"
        },
        "Sidekick__AttractionListEntry": {
            "description": "A list of attractions nearby. Shown when the user is traveling.",
            "id": "Sidekick__AttractionListEntry",
            "properties": {
                "attraction": {
                    "description": "This should only be set on legacy clients (e.g. Android client < 3.7).\nNew clients use the group_entry/subtree representation of lists with\nAttractionEntry attractions.",
                    "items": {
                        "$ref": "Sidekick__Attraction"
                    },
                    "type": "array"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The attractions are in this location."
                }
            },
            "type": "object"
        },
        "Sidekick__Attribution": {
            "description": "For cases where attribution should get displayed on the client, attach an\nAttribution message to the associated card data.",
            "id": "Sidekick__Attribution",
            "properties": {
                "title": {
                    "description": "A short, human-readable, attribution title for display in the client; e.g.\n\"Associated Press\" or \"ZVents\".",
                    "type": "string"
                },
                "url": {
                    "description": "A URL for the attributed source. This is not always present. This URL may\nlink directly to the item in question (e.g. the event URL on zvents.com)\nor may link to the general site (e.g. http://www.zvents.com).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__AuxiliaryMessage": {
            "description": "A message that we are purposefully not returning as structured information.\nThis may be because most of our clients don't need to parse this\ninformation, for example.\n\nThis message should not be logged to sawmill as it's just a generic\nkey/value pair doesn't have semantic meaning.",
            "id": "Sidekick__AuxiliaryMessage",
            "properties": {
                "payload": {
                    "description": "The raw bytes of the proto, that should be parsed into the above type.",
                    "format": "byte",
                    "type": "string"
                },
                "type": {
                    "description": "The fully qualified type of this proto.\nFor example this proto would by type \"sidekick.AuxiliaryMessage\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__BackOfCardHeader": {
            "description": "Header for the back of card",
            "id": "Sidekick__BackOfCardHeader",
            "properties": {
                "headerImage": {
                    "$ref": "Sidekick__ModuleIcon"
                },
                "headerMid": {
                    "description": "MID associated with this BackOfCardHeader. This is used by the client to\nsynchronize \"follow\" actions across different cards.",
                    "type": "string"
                },
                "originalCardAction": {
                    "$ref": "Sidekick__CardAction",
                    "description": "Card action that is default. Ex: \"+ Follow\""
                },
                "title": {
                    "description": "A label for the context in the header, Ex: \"Chicago Fire\".",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "titleTalkBack": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Talkback string for the title. Not logged since this is really just a more\nverbose version of the title field."
                },
                "undoCardAction": {
                    "$ref": "Sidekick__CardAction",
                    "description": "Card action associated with undo. Ex: <checkmark icon>"
                }
            },
            "type": "object"
        },
        "Sidekick__BackgroundFlare": {
            "description": "The flare associated with the card collection. This is the colored splash on\nthe background of the collection.",
            "id": "Sidekick__BackgroundFlare",
            "properties": {
                "color": {
                    "description": "The color of the flare",
                    "format": "uint32",
                    "type": "integer"
                },
                "position": {
                    "description": "The position of the flare",
                    "enum": [
                        "NONE",
                        "BOTTOM_LEFT",
                        "BOTTOM_RIGHT",
                        "BOTTOM_CENTER",
                        "BOTTOM_START_LEADING",
                        "BOTTOM_END_TRAILING"
                    ],
                    "enumDescriptions": [
                        "Show no flares.",
                        "The flare will be positioned 20% from bottom left corner of the card on\niOS and 10% from the bottom left corner on Android.",
                        "The flare will be positioned 20% from the bottom right corner of the\ncard on iOS and 10% from the bottom right corner on Android.",
                        "The flare will be positioned bottom-center of the  card.",
                        "Same as BOTTOM_LEFT for LTR and BOTTOM_RIGHT for RTL languages.",
                        "Same as BOTTOM_RIGHT for LTR and BOTTOM_LEFT for RTL languages."
                    ],
                    "type": "string"
                },
                "radius": {
                    "description": "Radius in dp for the flare",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__BarcodeEntry": {
            "id": "Sidekick__BarcodeEntry",
            "properties": {
                "actionUrl": {
                    "type": "string"
                },
                "barcode": {
                    "$ref": "Sidekick__Photo",
                    "description": "Essential fields regardless of barcode type or origin."
                },
                "flightBoardingPass": {
                    "$ref": "Sidekick_BarcodeEntry_FlightBoardingPass"
                }
            },
            "type": "object"
        },
        "Sidekick__BarcodeModule": {
            "description": "Module for displaying a large barcode or QR code",
            "id": "Sidekick__BarcodeModule",
            "properties": {
                "barcodeImageUrl": {
                    "description": "URL of the barcode image",
                    "type": "string"
                },
                "boardingPrivilege": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text of boarding privilege for boarding pass card only."
                },
                "providerLogoUrl": {
                    "description": "Logo URL for the provider of the barcode, e.g. the store's logo if this\nis a loyalty card",
                    "type": "string"
                },
                "securityProgram": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text of security program for boarding pass card only."
                },
                "ticketNumber": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text to place beneath the barcode, e.g. the ticket number"
                }
            },
            "type": "object"
        },
        "Sidekick__BillEntry": {
            "description": "Shows information about a bill user might be interested in.",
            "id": "Sidekick__BillEntry",
            "properties": {
                "accountNumber": {
                    "description": "Account number for the bill.",
                    "type": "string"
                },
                "amountDue": {
                    "$ref": "Sidekick__Money",
                    "description": "Amount due."
                },
                "businessData": {
                    "$ref": "Sidekick__BusinessData",
                    "description": "Data about the business e.g. Verizon, PG&E"
                },
                "category": {
                    "description": "Type of the bill.",
                    "enum": [
                        "UNKNOWN",
                        "TELECOM",
                        "BANK",
                        "UTILITY",
                        "INSURANCE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "dueDate": {
                    "$ref": "Sidekick__TimeWithZone",
                    "description": "The due date/time."
                },
                "gmailReference": {
                    "description": "The email reference.",
                    "items": {
                        "$ref": "Sidekick__GmailReference"
                    },
                    "type": "array"
                },
                "juicerTemplateFp": {
                    "description": "If the entry was generated from a Juicer template, then this will contain\nthe fingerprint of that template for quality assessment in the logs.",
                    "format": "uint64",
                    "type": "string"
                },
                "lastAmountDue": {
                    "$ref": "Sidekick__Money",
                    "description": "Due amount for the previous bill if available."
                },
                "minimumAmountDue": {
                    "$ref": "Sidekick__Money",
                    "description": "Minimum amount due."
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "payUrl": {
                    "description": "Url where the bill can be paid if it is known.",
                    "type": "string"
                },
                "state": {
                    "description": "State of the bill.",
                    "enum": [
                        "UNPAID",
                        "PAID",
                        "AUTOPAY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__BillListEntry": {
            "description": "Shows information about a list of bills user might be interested in.",
            "id": "Sidekick__BillListEntry",
            "properties": {
                "title": {
                    "description": "The title of the card, e.g. \"Upcoming bills\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__BusinessData": {
            "description": "Business related data\nNext available ID: 26",
            "id": "Sidekick__BusinessData",
            "properties": {
                "category": {
                    "description": "The list of categories of the place. (E.g. Clothing store, shoes).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "chainName": {
                    "description": "The chain name of the business.",
                    "type": "string"
                },
                "cid": {
                    "description": "The CID that identifies this place",
                    "format": "uint64",
                    "type": "string"
                },
                "coverPhoto": {
                    "$ref": "Sidekick__Photo",
                    "description": "A cover photo for the business."
                },
                "editorialSummaryHeadline": {
                    "description": "A 40-character summary of the place, generated from reviews.",
                    "type": "string"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains a BusinessData proto that has only\nthe extensions set.\nLogging: this is strictly a client communication artifact, and the contents\nhere get replaced with actual extensions server-side before getting logged.",
                    "format": "byte",
                    "type": "string"
                },
                "featureId": {
                    "$ref": "Sidekick__GeostoreFeatureId"
                },
                "knownForTerm": {
                    "description": "Known for terms for the place\nDeprecated: we no longer get this from the backend.  Use\neditorial_summary_headline instead.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The location of the business."
                },
                "name": {
                    "description": "The name of the business.",
                    "type": "string"
                },
                "numRatingStarsE3": {
                    "description": "The overall star rating as shown on Maps place page, scale 1-5 (* 1000).",
                    "format": "int32",
                    "type": "integer"
                },
                "numReviews": {
                    "format": "int32",
                    "type": "integer"
                },
                "openUntil": {
                    "description": "If the business is currently open, may be set to a human readable\nmessage of when the business will be open until.\ne.g. \"Open until 3:00 pm\"\nNot set if the closing time is more than a day from now.",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "An internationalized phone number for the place.",
                    "type": "string"
                },
                "photo": {
                    "description": "High quality photos to be displayed in the AtAPlace Photo Carousel Card.",
                    "items": {
                        "$ref": "Sidekick__Photo"
                    },
                    "type": "array"
                },
                "reviewScores": {
                    "description": "The review scores.",
                    "items": {
                        "$ref": "Sidekick__ReviewScore"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__CalendarEntry": {
            "description": "This message is used for Android, Web, and iOS clients. For Web and\niOS clients, the calendar data comes from moonshine.\n\nFor Android the client never sends calendar details to the server, and\nthis message is only sent from the server to the client.\nDue to privacy restrictions the client does not send full calendar events\nto the server. Instead it only sends necessary data (see UploadCalendarData)\nfor the server to make decisions on what calendar entries to show and/or\nwhen to fire notifications.",
            "id": "Sidekick__CalendarEntry",
            "properties": {
                "attendee": {
                    "description": "The list of attendees, either display names or emails.  This can be empty\nif there are too many attendees.  If it's present it will always be the\nfull list of attendees.  Attendees are PII so they are not logged.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "endTimeSeconds": {
                    "description": "Event end time.\n\nPopulated for non-Android clients only.",
                    "format": "int64",
                    "type": "string"
                },
                "endTimeZone": {
                    "description": "Timezone ID which can be read by java.util.TimeZone (e.g. \"Europe/Paris\")\n\nPopulated for non-Android clients only.",
                    "type": "string"
                },
                "endTimeZoneOffsetSeconds": {
                    "description": "Time zone offset of end time from UTC. Will not be present if\nend_time_zone is set (since the zone id deals with daylight savings).\n\nPopulated for non-Android clients only.",
                    "format": "int32",
                    "type": "integer"
                },
                "eventUrl": {
                    "description": "URL to calendar event (e.g. https://www.google.com/calendar/event?eid=BLAH)\n\nPopulated for non-Android clients only.\n\nThere is PII in the URL (email address can be decoded from the URL).",
                    "type": "string"
                },
                "hash": {
                    "description": "Hash to uniquely identify a calendar entry.\n\nFor Android this is a one-way hash generated by the Android client and\nincluded in its request; the server is expected to copy it to its response\nso the client will be able to link a CalendarEntry to its local calendar\ndata. For Android clients, this field is not set for calendar events that\nonly come from the server (events not sourced from UploadCalendarData). The\niOS notification server depends on this field to avoid sending duplicate\nnotifications for a single calendar entry.\n\nFor non-Android clients, this is the Calendar event identifier.\n\nPopulated for Android and non-Android clients.",
                    "type": "string"
                },
                "isClientEvent": {
                    "description": "Whether or not this event was sourced from UploadCalendarData.\n\nPopulated for Android clients.",
                    "type": "boolean"
                },
                "justification": {
                    "description": "Justification text to indicate the source of the calendar event if from a\nshared calendar or as personal-branding attribution.\nNever logged because it could be PII or sensitive.",
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The location of the event. It may contain a name (e.g. \"Squaw Valley\").\nIf it was successfully geocoded it contains lat, lng of the geocoded\nlocation. Note that the client might not request geocoding if it decides\nan event has nothing to geocode or has already been geocoded.\n\nPopulated for Android and non-Android clients."
                },
                "participationResponse": {
                    "enum": [
                        "NEEDS_ACTION",
                        "DECLINED",
                        "TENTATIVE",
                        "ACCEPTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "personalItemInfo": {
                    "$ref": "Sidekick__PersonalItemInfo",
                    "description": "Metadata containing title and subtitle strings for rendering this entry as\na list item."
                },
                "route": {
                    "description": "Routes to display in the client when showing details about the calendar\nevent. This field is valid only if the event is geocodable, either now\n(the location field in this message is populated) or previously (the\nclient has indicated the event location in its request).\n\nPopulated for Android and non-Android clients.\n\nIMPORTANT: this field was optional until Apr. 2014 and it was changed to\nrepeated. Make sure to do the client version check before putting multiple\nroutes into this field, otherwise it will break the old client.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                },
                "startTimeSeconds": {
                    "description": "Event start time.\n\nPopulated for non-Android clients only.",
                    "format": "int64",
                    "type": "string"
                },
                "startTimeZone": {
                    "description": "Timezone ID which can be read by java.util.TimeZone (e.g. \"Europe/Paris\")\n\nPopulated for non-Android clients only.",
                    "type": "string"
                },
                "startTimeZoneOffsetSeconds": {
                    "description": "Time zone offset of start time from UTC. Will not be present if\nstart_time_zone is set (since the zone id deals with daylight savings).\n\nPopulated for non-Android clients only.",
                    "format": "int32",
                    "type": "integer"
                },
                "title": {
                    "description": "Event title (e.g \"Lunch with Bob\").\n\nPopulated for non-Android clients only.\n\nNever logged because it could be PII or sensitive (\"Meet Dr. No\")",
                    "type": "string"
                },
                "travelTimeSeconds": {
                    "description": "Travel time from the user location to the calendar event location. This\nfield is valid only if the event is geocodable, see above.\n\nPopulated for Android and non-Android clients.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__CarRentalEntry": {
            "description": "A message that contains all the information needed for a car rental card.",
            "id": "Sidekick__CarRentalEntry",
            "properties": {
                "carClass": {
                    "description": "The class of the rental car e.g. economy 2-door sedan",
                    "type": "string"
                },
                "confirmationNumber": {
                    "description": "The confirmation # for the booking.",
                    "type": "string"
                },
                "departureTimeMs": {
                    "description": "Departure time for getting to the pickup/dropoff on time.",
                    "format": "int64",
                    "type": "string"
                },
                "gmailReference": {
                    "$ref": "Sidekick__GmailReference",
                    "description": "The email reference for the car rental card."
                },
                "manageReservationUrl": {
                    "description": "Not logging as this is considered sensitive\nUrl to manage reservation.",
                    "type": "string"
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "personalItemInfo": {
                    "$ref": "Sidekick__PersonalItemInfo",
                    "description": "Metadata containing title and subtitle strings for rendering this entry as\na list item."
                },
                "pickupLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "Location of the place where the car rental counter is located from\nwhere the car is to be picked up."
                },
                "pickupPhone": {
                    "type": "string"
                },
                "pickupTime": {
                    "$ref": "Sidekick__TimeWithZone",
                    "description": "The pickup time."
                },
                "providerLogo": {
                    "$ref": "Sidekick__Photo",
                    "description": "The provider's logo."
                },
                "providerName": {
                    "description": "The rental company e.g. Hertz",
                    "type": "string"
                },
                "renterName": {
                    "description": "The name of the renter.",
                    "type": "string"
                },
                "returnLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "Location of the place where the car rental counter is located\nwhere the car is to be returned."
                },
                "returnPhone": {
                    "type": "string"
                },
                "returnTime": {
                    "$ref": "Sidekick__TimeWithZone",
                    "description": "Return time for the car."
                },
                "route": {
                    "description": "The navigation information to the pickup/dropoff location.\n\nIMPORTANT: this field was optional until Apr. 2014 and it was changed to\nrepeated. Make sure to do the client version check before putting multiple\nroutes into this field, otherwise it will break the old client.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "description": "DEPRECATED - use provider_name and car_class\nClass of car (ex. Compact - Ford Focus)",
                    "type": "string"
                },
                "title": {
                    "description": "Title for the card such as Hertz Car Rental Reservation",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "PICKUP",
                        "DROPFF",
                        "FULL_DETAIL"
                    ],
                    "enumDescriptions": [
                        "This is for picking up a car rental.",
                        "This is for dropping off a car rental.",
                        "Give all details of the car rental, for example when shown in the\ncontext of a future trip."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__CardAction": {
            "description": "A card action is an action that can be taken on a card in a Google Now client\napplication. Possible actions include answering a training question,\nremoving a card from the UI, customizing user settings, etc.\nSee go/lotic-card-actions",
            "id": "Sidekick__CardAction",
            "properties": {
                "action": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Action to perform after the user has clicked on it."
                },
                "actionTakenMessage": {
                    "description": "Message displayed to the user after the action is taken, e.g. in a toast.\nNote: Changing the string will not change what the UNDO button does. It\nwill bring back any dismissed cards and revert this card action. This will\noverride any action_taken_message in Action proto.",
                    "type": "string"
                },
                "answerToRecord": {
                    "$ref": "Sidekick__Question",
                    "description": "Question and answer combination the user is selecting by clicking this\naction. The Question#answer must be pre-filled."
                },
                "icon": {
                    "$ref": "Sidekick__ModuleIcon",
                    "description": "The icon to show with the card action."
                },
                "label": {
                    "description": "Display label for the action.",
                    "type": "string"
                },
                "shouldDismiss": {
                    "description": "Whether the card/row/list should be dismissed when this action is clicked.",
                    "type": "boolean"
                },
                "shouldDismissCollection": {
                    "description": "Whether the collection card should be dismissed when this action is\nclicked.",
                    "type": "boolean"
                },
                "talkback": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The talkback string for the card action text."
                },
                "veInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for corresponding UI element and information for\nclient on how to log it.\nA CardAction may have a ClientAction set in action field. If so, and that\nClientAction has ve_info set, use that value for interaction logging to be\nconsistent with choosing the lowest-level ve_info for interaction logging.\nHowever, we don't expect to set ve_info in ClientActions embedded in\nCardActions. So interaction logging for back-of-card menu items from\nCardActions will likely rely on the VE info set here."
                }
            },
            "type": "object"
        },
        "Sidekick__CardCap": {
            "description": "A message which contains the information necessary to\npopulate the Cap for a card.  Entries which result in\na card, will populate the Cap for post Lotic clients.",
            "id": "Sidekick__CardCap",
            "properties": {
                "awareTipId": {
                    "description": "Defines the tooltipId that is to be attached to the snowman on the card cap\nwhich opens the card menu.",
                    "format": "int32",
                    "type": "integer"
                },
                "backgroundColor": {
                    "description": "The background color of the card cap. Experimental.\nFormat: 0xaarrggbb.",
                    "format": "uint32",
                    "type": "integer"
                },
                "capAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Action to perform after the user has clicked on it."
                },
                "content": {
                    "description": "MetadataLine for the title of the Cap.  The Cap\nonly supports a single line so we only allow a single\ncap line.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "forceDivider": {
                    "description": "True if the card cap should have a divider after it. Experimental.",
                    "type": "boolean"
                },
                "icon": {
                    "$ref": "Sidekick__ModuleIcon",
                    "description": "Represents the Icon displayed in the Cap."
                },
                "removeDividerInList": {
                    "description": "True if the card cap should not have a divider after it if it is in a list.\nExperimental.",
                    "type": "boolean"
                },
                "snowmanTooltip": {
                    "$ref": "Sidekick__Tooltip",
                    "description": "Defines the tooltip that is to be attached to the snowman on the card cap\nwhich opens the back of card actions. Deprecated"
                },
                "subContent": {
                    "description": "MetadataLine for the subtitle of the Cap. Not Clickable.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "tappableArea": {
                    "description": "Defines which areas of the card cap are tappable.",
                    "enum": [
                        "TAPPABLE_AREA_UNSPECIFIED",
                        "TEXT_AND_ICON_ONLY",
                        "ENTIRE_CARD_CAP"
                    ],
                    "enumDescriptions": [
                        "The client should ignore cap_action if TappableArea unspecified.",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Represents any style overrides the card cap needs.",
                    "enum": [
                        "DEFAULT_CAP",
                        "TWOLINE_CAP",
                        "FEED_V2_CAP",
                        "GESTALT_CAP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__CardModule": {
            "description": "Representation of an individual module, a piece of a larger card.\nThese protos bear a lot of similarity to the client-side module protos at\nj/c/g/android/apps/gsa/shared/sidekick/now_card_modules.proto\nbut it's not necessary to synchronize the two; the client will independently\nconvert this representation to something the client knows how to display.\n\nLogs note: we use these for third party cards, so the strings and urls\npresent all through these modules are not under our exclusive control. This\nmeans that they *may* contain PII or location-centric data (e.g. a card with\nthe text \"Welcome to San Jose, John!\").\nThus, almost all of the fields in this file are annotated for temp logs\nonly.",
            "id": "Sidekick__CardModule",
            "properties": {
                "action": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "The action to run when clicking on this module"
                },
                "actionLabel": {
                    "description": "This is the optional label which will be displayed\nwhen the action is used in the PrimaryAction or Suggestion Chips",
                    "type": "string"
                },
                "adaptiveImageHeader": {
                    "$ref": "Sidekick__AdaptiveImageHeader",
                    "description": "Deprecated. Replaced by ImageHeader plus Header."
                },
                "appLauncherModule": {
                    "$ref": "Sidekick__AppLauncherModule"
                },
                "appLinkId": {
                    "description": "App link ID from CoCa for joining client action logs.",
                    "format": "int32",
                    "type": "integer"
                },
                "backgroundColor": {
                    "description": "Background color for the module.",
                    "format": "int32",
                    "type": "integer"
                },
                "backgroundColorString": {
                    "description": "String Hex presentation of the background_color. For example: FF0000 for\nred (no alpha values).\n\nNOTE: This is a helper field for HTML rendering of GridModule. This field\n  is programmatically filled, and is not expected to be available by the\n  writer of this proto.",
                    "type": "string"
                },
                "barcodeModule": {
                    "$ref": "Sidekick__BarcodeModule"
                },
                "cardSelector": {
                    "$ref": "Sidekick__CardSelector",
                    "description": "For Server Module interactivity, we use a CardSelector created\nby the server to refresh the Card.  This CardSelector is generated\nby the server and is used to refresh the card when the changes are\ncommitted by the user.  This does not need to be logged, nothing\ninside the CardSelector is logged."
                },
                "contentUpdateRow": {
                    "$ref": "Sidekick__ContentUpdateRow"
                },
                "embeddedModule": {
                    "$ref": "Sidekick__EmbeddedModule"
                },
                "encodedStaticMapPayload": {
                    "description": "Stores the static map payload whose URL is in CardModule.ImageHeader.\nThis is only used on Android Wear. It is unrelated to the cards\nshown on aGSA and iGSA.",
                    "format": "byte",
                    "type": "string"
                },
                "footprintsExplanationText": {
                    "description": "Value to be stored in\nsidekick.EntryExtensions.footprints_explanation_text",
                    "type": "string"
                },
                "gridModule": {
                    "$ref": "Sidekick__GridModule"
                },
                "gutterType": {
                    "description": "This is really presentation, we don't need to log it.",
                    "enum": [
                        "DEFAULT_GUTTER",
                        "GUTTERLESS",
                        "FORCED_GUTTER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "header": {
                    "$ref": "Sidekick__Header"
                },
                "iconActionModule": {
                    "$ref": "Sidekick__IconActionModule"
                },
                "imageHeader": {
                    "$ref": "Sidekick__ImageHeader"
                },
                "lightTheme": {
                    "description": "If a background color is stated, should the UI appear in a light theme,\n(dark color text, assume light color background). Otherwise, the UI assumes\nthat the background is dark and switches the text to light coloring.",
                    "type": "boolean"
                },
                "moduleType": {
                    "description": "Represents the style override of rendering a server module.",
                    "enum": [
                        "DEFAULT_MODULE",
                        "FEED_V2_MODULE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "multiActionWithIcon": {
                    "$ref": "Sidekick__MultiActionWithIcon"
                },
                "multiOptionAction": {
                    "$ref": "Sidekick__MultiOptionAction"
                },
                "newsInformationId": {
                    "description": "News information ID from CoCa for joining client action logs.",
                    "format": "int32",
                    "type": "integer"
                },
                "photoGrid": {
                    "$ref": "Sidekick__PhotoGrid"
                },
                "pietModule": {
                    "$ref": "Sidekick__PietModule"
                },
                "primaryAction": {
                    "$ref": "Sidekick__PrimaryAction"
                },
                "queryBox": {
                    "$ref": "Sidekick__QueryBox"
                },
                "quickAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "An optional secondary \"quick action\" normally displayed as a button on the\nright-hand side of the module.\n\niOS support deprecated in Nightwing (v66)"
                },
                "quickActionLabel": {
                    "description": "This is the optional label which will be displayed\nwhen the quick_action is used in the PrimaryAction or Suggestion Chips",
                    "type": "string"
                },
                "secondaryAction": {
                    "$ref": "Sidekick__SecondaryAction"
                },
                "selectorModule": {
                    "$ref": "Sidekick__SelectorModule"
                },
                "smallContentModule": {
                    "$ref": "Sidekick__SmallContentModule"
                },
                "spinnerModule": {
                    "$ref": "Sidekick__SpinnerModule",
                    "description": "Used in the screen assist stub denoting waiting for a server response,\ndoesn't need to be logged."
                },
                "staticMap": {
                    "$ref": "Sidekick__StaticMap"
                },
                "suggestionChipActions": {
                    "description": "Optional suggestion chips.  Suggestion chips can be displayed in a Module\nto bind actions to each chip.  The Module may also have an Action defined.",
                    "items": {
                        "$ref": "Sidekick__SuggestionChipAction"
                    },
                    "type": "array"
                },
                "suppressDivider": {
                    "description": "Suppress the divider following this module",
                    "type": "boolean"
                },
                "tabularModule": {
                    "$ref": "Sidekick__TabularModule"
                },
                "toggleAction": {
                    "$ref": "Sidekick__ToggleAction"
                },
                "toggleStateAction": {
                    "$ref": "Sidekick__ToggleStateAction"
                },
                "videoModule": {
                    "$ref": "Sidekick__VideoModule"
                }
            },
            "type": "object"
        },
        "Sidekick__CardSelector": {
            "description": "CardSelector is a directive to run a particular entry source to produce a\ncategory of card given input data specific to the entry source. It is\ntypically used to drive an entry source based on an inferred need, request\nschedule, or push tickle. As such, it is the unifying concept between\nneed inference, polling, and push. From an evolutionary standpoint,\nCardSelector is the replacement for entry_type_restrict in Interest.",
            "id": "Sidekick__CardSelector",
            "properties": {
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields. Use this field to round trip\nfields of interest to the server.",
                    "format": "byte",
                    "type": "string"
                },
                "id": {
                    "description": "A globally unique id for this card selector. This ID is required by the\nclients to efficiently dedupe card selectors.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__CarouselControl": {
            "description": "A message which contains information which controls the\nway the Carousel renders.",
            "id": "Sidekick__CarouselControl",
            "properties": {
                "backgroundColor": {
                    "description": "Sets the background color of the carousel.  This will only show up in the\nspace between the carousel items.",
                    "format": "int32",
                    "type": "integer"
                },
                "bottomMarginInDp": {
                    "description": "Margin to offset the contents of the carousel, from the bottom.\nThis is not for the individual entries.",
                    "format": "int32",
                    "type": "integer"
                },
                "cardHeightInDp": {
                    "description": "Sets the height of the cards in the carousel.",
                    "format": "int32",
                    "type": "integer"
                },
                "cardWidthInDp": {
                    "description": "Sets the width of the cards in the carousel.",
                    "format": "int32",
                    "type": "integer"
                },
                "elevationInDp": {
                    "description": "Sets the elevation of the cards in the carousel.\nThis is not for the individual entries.",
                    "format": "int32",
                    "type": "integer"
                },
                "enableCarouselSnap": {
                    "description": "Sets the carousel to snap to each item (centered horizontally). The swiping\nbehavior will be similar to a ViewPager.",
                    "type": "boolean"
                },
                "endMarginInDp": {
                    "description": "Margin to offset the contents of the carousel, from the end.\nThis is not for the individual entries.",
                    "format": "int32",
                    "type": "integer"
                },
                "forceDividers": {
                    "description": "Force dividers",
                    "type": "boolean"
                },
                "imageHeightInDp": {
                    "description": "Specify the height of the image. This value overrides the\ndefault.",
                    "format": "int32",
                    "type": "integer"
                },
                "imageWidthInDp": {
                    "description": "Specify the width of the image (and the card)\nwithin the Carousel. This value overrides the\ndefault.\n\nNOTE: if total width of all carousel cards is\nless than the total width of the card, the image\nis scaled up such that the one or more cards will\nfit into the card width. The aspect ratio is\nmaintained.\n\nDEPRECATED: Use card_with_in_dp instead.",
                    "format": "int32",
                    "type": "integer"
                },
                "inlineInjectedCollectionComponent": {
                    "description": "Indicates whether the carousel should be inline injected, when the carousel\nis a component of a Collection (CarouselControls defined in\nFeedCollectionEntry). The carousel will not be rendered until an\ninline injection action takes place.",
                    "type": "boolean"
                },
                "isFullBleed": {
                    "description": "Sets the carousel to be full bleed\nThis is not for the individual entries.",
                    "type": "boolean"
                },
                "itemSpacingInDp": {
                    "description": "Spacing between items in the carousel in dp. The default is\nqp_small_carousel_item_extra_padding (2dp)\nNo need to log this",
                    "format": "int32",
                    "type": "integer"
                },
                "position": {
                    "description": "Sets the position of the card module container of the carousel. This will\nonly be used post gestalt.",
                    "enum": [
                        "NONE",
                        "TOP",
                        "MIDDLE",
                        "BOTTOM",
                        "SECTION",
                        "SINGLE",
                        "BOTTOM_NO_MARGIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "This is a module with no border.",
                        "This is a module with a TOP and BOTTOM border",
                        ""
                    ],
                    "type": "string"
                },
                "showFullWidthCards": {
                    "description": "Sets the carousel items to be same width of the card its in. When set to\ntrue, the value stored in card_width_in_dp will be ignored.",
                    "type": "boolean"
                },
                "showPaginationIndicator": {
                    "description": "Sets the carousel to show the pagination indicator.\nhttps://screenshot.googleplex.com/pSUAxgsiVdP.png",
                    "type": "boolean"
                },
                "startMarginInDp": {
                    "description": "Margin to offset the contents of the carousel, from the start.\nThis is not for the individual entries.",
                    "format": "int32",
                    "type": "integer"
                },
                "topMarginInDp": {
                    "description": "Margin to offset the contents of the carousel, from the top.\nThis is not for the individual entries.",
                    "format": "int32",
                    "type": "integer"
                },
                "veInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for corresponding UI element and information for\nclient on how to log it. This one will map to the VE representing the\ncarousel container."
                }
            },
            "type": "object"
        },
        "Sidekick__Chain": {
            "description": "Data for a chain.",
            "id": "Sidekick__Chain",
            "properties": {
                "chainId": {
                    "$ref": "Sidekick__ChainId",
                    "description": "Unique id"
                },
                "displayName": {
                    "description": "The chain name to use for rendering in the client.\nIt is assumed to be in the user's locale.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ChainId": {
            "description": "Id for a chain (e.g Ikea).",
            "id": "Sidekick__ChainId",
            "properties": {
                "featureId": {
                    "$ref": "Sidekick__GeostoreFeatureId",
                    "description": "The chain's feature_id."
                }
            },
            "type": "object"
        },
        "Sidekick__ClickAction": {
            "description": "Encapsulates a click action on an entry, normally rendered as a button on\na card representing the entry.",
            "id": "Sidekick__ClickAction",
            "properties": {
                "action": {
                    "description": "The action to take when the button is clicked.\nThis is only used if the URI is unset.",
                    "type": "string"
                },
                "actionType": {
                    "description": "The type for the action corresponding to this click action. If set,\nclients should use the corresponding Action from Entry.entry_action\nfor this click action.",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "badge": {
                    "description": "An optional secondary label. This should be rendered inside the button in\na style with less emphasis than the main label. Useful for adding\nadditional context to the Action. For example, a video on demand\nrecommendation has a Play button, which can use the badge to inform the\nuser that this particular video on demand provider supports Google Cast. In\nthis case the button is rendered with the label (f.ex. \"Netflix\")\nleft-justified, and the badge text (\"Google Cast Ready\") in grey text,\nright-justified.",
                    "type": "string"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains an encoded ClickAction proto that\nhas only the extensions set.",
                    "format": "byte",
                    "type": "string"
                },
                "extra": {
                    "description": "Not logged since arbitrary key-value pairs are disallowed.",
                    "items": {
                        "$ref": "Sidekick_ClickAction_Extra"
                    },
                    "type": "array"
                },
                "iconType": {
                    "enum": [
                        "VIEW_WEB",
                        "VIEW_EMAIL",
                        "NAVIGATE",
                        "CALL",
                        "GET_DIRECTIONS",
                        "REMINDER",
                        "YOUTUBE",
                        "GOOGLE_PLAY",
                        "SEARCH",
                        "MAP",
                        "SETTING",
                        "NOTIFICATIONS_OFF",
                        "WATCH_VIDEO",
                        "FEEDBACK",
                        "THUMB_UP",
                        "THUMB_DOWN"
                    ],
                    "enumDescriptions": [
                        "Click to get the additional information online.",
                        "View the reference emails.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "immersiveBasePage": {
                    "description": "String indicating what Immersive to open, including optional state.\nSee go/ibp.",
                    "type": "string"
                },
                "label": {
                    "description": "The label of the button.",
                    "type": "string"
                },
                "latitudeOptInAction": {
                    "description": "A special magic action that, if clicked, will start the process to\nsend the intent to GMM to opt in to latitude and enable location\nreporting on this device. If flag is set to true, the uri, action,\nand extra fields are ignored.",
                    "type": "boolean"
                },
                "preferredApp": {
                    "description": "The package name for the preferred app to open the\nuri when the button is clicked. If the user already have\na preference setting for the uri, a dialog will be popped\nup to ask users to choose which one they want to use to open the uri.",
                    "type": "string"
                },
                "searchQuery": {
                    "description": "The query to search for when the button is clicked.\nThis is only used if uri and action are unset.",
                    "type": "string"
                },
                "stickUrlParameter": {
                    "description": "The signed and url-encoded StickinessSignals which should be passed to\nthe GWS query as a 'stick' URL parameter.  This parameter reliably\ntriggers certain GWS behavior, such as a knowledge panel.  The parameter\nand the query fingerprint are signed, so this parameter will only work\nwith the specific search_query.",
                    "type": "string"
                },
                "uri": {
                    "description": "The uri to view when the button is clicked.",
                    "type": "string"
                },
                "webAppStateFragment": {
                    "description": "The fragment section of the URL parameter passed to the immersives to\nset web-app state.\nFor example, for Sports Immersive, this could be the MID of the sports\nevent it should display, and which format should be used to display it.\nThe parameter is composed of values from\nhttps://cs/google3/googledata/html/templates/gws/head/xjs\\\n/plugins/live_result/sports/immersive/app_state.js\nNot logged since the information it delivers is redundant with other\ninformation from the card.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ClientAction": {
            "description": "Specification of an action to be taken, e.g. when a module is clicked, plus\nadditional metadata such as the icon that should be used to represent that\naction.",
            "id": "Sidekick__ClientAction",
            "properties": {
                "actionText": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The text which will be displayed for the action.\nIf this entry and gutter_icon entry are both set then the text is displayed\nnext to the icon."
                },
                "actionType": {
                    "description": "Action type to associate with this action, for action logging",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "addCalendarEventAction": {
                    "$ref": "Sidekick__AddCalendarEventAction"
                },
                "assistReissueAction": {
                    "$ref": "Sidekick__AssistReissueAction"
                },
                "awareTipId": {
                    "description": "Defines the tooltipId that is to be attached to the corresponding view for\nthis client action.",
                    "format": "int32",
                    "type": "integer"
                },
                "closetAction": {
                    "$ref": "Sidekick__ClosetAction"
                },
                "customActionUri": {
                    "description": "Represents a custom action handled by special logic in the client, for\nexample launching opt-in or changing a setting. This URI contains any\ninformation needed to perform a custom action. The scheme should be a\nunique identifier for the action. The rest of the URI is arbitrary and\nparsed by an action handler. For example, a URI for opt-in may be:\nnow-opt-in:?mode=5&settings=1,2,3&refresh=true",
                    "type": "string"
                },
                "entryLogType": {
                    "description": "Corresponds to the nature of the action being logged. This is by default\nan action for a single Entry, but some actions (like reactions) correspond\nto an entire group of entries.\nThis field has been deprecated. Use the entry_log_type on the Action.",
                    "enum": [
                        "DEFAULT",
                        "GROUP"
                    ],
                    "enumDescriptions": [
                        "Default is used for actions done on a single entry",
                        "Group is used for actions done on an entire carousel or list card"
                    ],
                    "type": "string"
                },
                "gutterIcon": {
                    "$ref": "Sidekick__ModuleIcon",
                    "description": "The icon which will be displayed for the module."
                },
                "icon": {
                    "description": "Icon to associate with this action.\nThis is deprecated; please use gutter_icon.",
                    "enum": [
                        "UNKNOWN_ACTION_ICON",
                        "CALL",
                        "SMS",
                        "EMAIL",
                        "PLAY",
                        "START_NAVIGATION",
                        "MAP_LOCATION",
                        "DIRECTIONS",
                        "VIEW_MORE",
                        "CONFIRM",
                        "VIEW_ALARMS",
                        "EDIT",
                        "VIEW_EVENT",
                        "BUY",
                        "KEEP",
                        "ICON_ADD",
                        "LOCAL_TAXI",
                        "ADD_ALERT",
                        "AUTO_FIX",
                        "ICON_BILL",
                        "BLOCK",
                        "ICON_BOOK",
                        "CAR",
                        "CARD_TRAVEL",
                        "CURRENCY_CONVERTER",
                        "DIALER",
                        "DRIVE_TEXT",
                        "DIRECTIONS_BIKE",
                        "DIRECTIONS_TRANSIT",
                        "DIRECTIONS_WALK",
                        "FEEDBACK",
                        "GOOGLE",
                        "HISTORY",
                        "HOTEL",
                        "LOCAL_SHIPPING",
                        "MUSIC_ALBUM",
                        "ICON_NEWS",
                        "PERSON",
                        "PLANE",
                        "PLAY_ARROW",
                        "QUANTUM_GENERIC_BUSINESS",
                        "QUANTUM_GENERIC_ICON",
                        "QUANTUM_MOVIE",
                        "QUANTUM_MOVIE_IN_THEATER",
                        "QUANTUM_PHONE_NUMBER",
                        "QUANTUM_PLACE_ADDRESS",
                        "QUANTUM_RESTAURANT",
                        "ICON_REMINDER",
                        "ICON_REMOVE",
                        "REPORT",
                        "RESERVATION",
                        "RESTAURANT",
                        "SHOPPING_BASKET",
                        "SHOPPING_CART",
                        "SPORTS_BASEBALL",
                        "SPORTS_BASKETBALL",
                        "SPORTS_CRICKET",
                        "SPORTS_FOOTBALL",
                        "SPORTS_HOCKEY",
                        "SPORTS_RUGBY",
                        "SPORTS_SOCCER",
                        "STAR",
                        "STOCK",
                        "STOCK_DASH",
                        "STOCK_DOWN",
                        "STOCK_UP",
                        "STORE",
                        "TAG",
                        "TEMPERATURE",
                        "THUMB_DOWN",
                        "TIME_AT_HOME",
                        "TRENDING_UP",
                        "VISIBILITY",
                        "VISIBILITY_OFF",
                        "GOOGLE_PROVIDED_CONTENT",
                        "MAPS_LOGO",
                        "YOU_TUBE_LOGO",
                        "YOU_TUBE_LOGO_WHITE",
                        "GMAIL_LOGO",
                        "CALENDAR_LOGO",
                        "GOOGLE_PLUS_LOGO",
                        "TRANSLATE_LOGO",
                        "TRAVEL_FLIGHTS_LOGO",
                        "TRAVEL_HOTELS_LOGO",
                        "SHOPPING_LOGO",
                        "MUSIC_NOTE",
                        "ARTIST",
                        "DIRECTIONS_CAR",
                        "LIBRARY_BOOKS",
                        "LOCAL_OFFER",
                        "LOCAL_PHARMACY",
                        "SCHOOL",
                        "PALETTE",
                        "WEB",
                        "SEARCH",
                        "HANGOUT",
                        "WB_SUNNY",
                        "DRIVE_ETA",
                        "HOME",
                        "WORK",
                        "MIC",
                        "ICON_TRANSLATE",
                        "UPDATE",
                        "AMP_ICON_12",
                        "AMP_ICON_16",
                        "AMP_SEARCH_ICON_12",
                        "CHEVRON_RIGHT",
                        "CHEVRON_LEFT",
                        "CLOSE",
                        "ARROW_RIGHT",
                        "ARROW_LEFT",
                        "ADD_CIRCLE",
                        "SHARE",
                        "SHARE_18",
                        "TRIANGLE_LEFT",
                        "TRIANGLE_RIGHT",
                        "ADD_CIRCLE_OUTLINE",
                        "CHECK_CIRCLE",
                        "ADD_BOLD",
                        "CHECK_BOLD",
                        "LIVE_TV",
                        "PEOPLE",
                        "SHOW_CHART",
                        "LOCAL_DINING",
                        "PUBLIC",
                        "BRUSH",
                        "ARROW_UPWARD",
                        "ARROW_DOWNWARD",
                        "SAVE_FOR_LATER",
                        "SAVED_FOR_LATER",
                        "FEED_STORY_MORE",
                        "FEED_STORY_LESS",
                        "INFO",
                        "AD_BADGE",
                        "AD_BADGE_TEXT",
                        "FEED_STORY_NEUTRAL",
                        "FILLED_BOLT_AMP_ICON",
                        "DARK_FEED_STORY_NEUTRAL",
                        "DARK_FEED_STORY_MORE",
                        "INTEREST_MARK",
                        "TUNE",
                        "STAMP_ICON",
                        "PLAYSTORE_LOGO_ICON",
                        "MORE_VERT",
                        "VIDEO_SETTINGS",
                        "FAVORITE",
                        "FAVORITE_BORDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "See\nhttps://developers.google.com/now/api/using-templates#google_logos_and_icons",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Plus icon with not bolded lines",
                        "",
                        "Internal use only.\nhttps://icons.googleplex.com/#icon=ic_add_alert",
                        "https://icons.googleplex.com/#icon=ic_auto_fix",
                        "",
                        "https://icons.googleplex.com/#icon=ic_block",
                        "https://icons.googleplex.com/#icon=ic_book",
                        "",
                        "# ic_card_travel_white_24\n",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_drive_text",
                        "https://icons.googleplex.com/#icon=ic_directions_bike",
                        "https://icons.googleplex.com/#icon=ic_directions_transit",
                        "https://icons.googleplex.com/#icon=ic_directions_walk",
                        "https://icons.googleplex.com/#icon=ic_feedback",
                        "# ic_google_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_history",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_album",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_play_arrow",
                        "The standard quantum generic business icon",
                        "The standard quantum generic, fallback icon",
                        "The standard quantum movie icon",
                        "The standard quantum movie in theaters icon",
                        "The standard quantum phone number icon",
                        "The standard quantum place address icon",
                        "The standard quantum restaurant icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_highlight_off",
                        "https://icons.googleplex.com/#icon=ic_report",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_shopping_basket",
                        "https://icons.googleplex.com/#icon=ic_shopping_cart",
                        "Sports",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_star",
                        "Generic stock icon",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_store",
                        "Price tag icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_thumb_down",
                        "",
                        "# ic_trending_up_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_visibility",
                        "https://icons.googleplex.com/#icon=ic_visibility_off",
                        "Color icon for generic Google provided content.\nSome Card Caps will use specific logos, such as GMAIL\nwhent he source of the card is more specific.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "ic_music_note_white_24",
                        "ic_artist_white_24",
                        "ic_directions_car_white_24",
                        "ic_library_books_white_24",
                        "ic_local_offer_white_24",
                        "ic_local_pharmacy_white_24",
                        "ic_school_white_24",
                        "ic_palette_white_24",
                        "ic_web_white_24",
                        "ic_search_white_24",
                        "ic_hangout_white_24",
                        "https://icons.googleplex.com/#icon=ic_wb_sunny",
                        "https://icons.googleplex.com/#icon=ic_drive_eta",
                        "https://icons.googleplex.com/#icon=ic_home",
                        "https://icons.googleplex.com/#icon=ic_work",
                        "https://icons.googleplex.com/#icon=ic_mic",
                        "https://icons.googleplex.com/#icon=ic_translate",
                        "",
                        "12pt AMP Icon",
                        "16pt AMP Icon",
                        "Search AMP Icon",
                        "Chevron Right icon https://icons.googleplex.com/#icon=ic_chevron_right\nAvailable in AGSA 6.6+.",
                        "Chevron Left icon https://icons.googleplex.com/#icon=ic_chevron_left\nAvailable in AGSA 6.6+.",
                        "Close or (X) icon https://icons.googleplex.com/#icon=ic_close&search=close\nAvailable in AGSA 6.6+.",
                        "Arrow Right icon https://icons.googleplex.com/#icon=ic_arrow_forward\nAvailable in AGSA 6.6+.",
                        "Arrow Left icon https://icons.googleplex.com/#icon=ic_arrow_back\nAvailable in AGSA 6.6+.",
                        "Plus icon inside a circle https://icons.googleplex.com/#icon=ic_add_circle\nAvailable in AGSA 6.9+.",
                        "https://icons.googleplex.com/#icon=ic_share\nAvailable in AGSA 6.12+",
                        "https://icons.googleplex.com/#icon=ic_share 18 dp asset\nAvailable in AGSA 8.01+",
                        "https://icons.googleplex.com/#icon=ic_arrow_left\nAvailable in AGSA 6.17+",
                        "https://icons.googleplex.com/#icon=ic_arrow_right\nAvailable in AGSA 6.17+",
                        "Plus icon inside a outline circle.\nhttps://icons.googleplex.com/#icon=ic_add_circle_outline\nAvailable in iGSA 28.0+.",
                        "Check icon inside a circle.\nhttps://icons.googleplex.com/#icon=ic_check_circle\nAvailable in iGSA 28.0+.",
                        "Plus icon with bolded lines.\nAvailable in AGSA 7.3+",
                        "Check icon.\nAvailable in AGSA 7.3+",
                        "Live TV icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_live_tv",
                        "People icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_people",
                        "Show Chart icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_show_chart",
                        "Local Dining icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_local_dining",
                        "Public icon (looks like an earth)\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_public",
                        "Brush icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_brush",
                        "Upward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_upward",
                        "Downward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_downward",
                        "Bookmark icon-border",
                        "Bookmark icon-filled in",
                        "More icon",
                        "Less icon",
                        "Info icon\nAvailble in AGSA 7.17+\nhttps://icons.googleplex.com/#icon=ic_info",
                        "AdBadge icon (deprecated and will be deleted after b/130308386)\nAvailable in AGSA 7.18+, iGSA 46.0+",
                        "Available in AGSA 9.66+, this supports all languages, AD_BADGE does not.",
                        "Neutral icon for reactions\nAvailble in AGSA 7.20+",
                        "A custom made AMP icon that has a filled bolt instead of a transparent one.\nThis is intended to be used as an overlay shown over an image, where the\ncolor of the image is not known, but other uses may be beneficial as well.\nAvailable in AGSA 8.6+\nAvailable in iGSA 52+ (Zero Wing)",
                        "Custom android dark theme version of the Neutral icon for reactions",
                        "Custom android dark theme version of the More icon for reactions",
                        "Interest spark for gestalt brand.\ngoogledata/html/external_content/gstatic/android/now/images/default/xxhdpi/interest-mark.png",
                        "\"Manage interests\" icon used with the interest management UI. See\ngo/web-interest-management-design.\nhttps://icons.googleplex.com/#icon=ic_tune",
                        "Icon displayed on top of STAMP documents go/stampinfeed\nAvailable in AGSA 8.24+\nAvailable in iGSA 64.0+",
                        "Playstore logo icon\nAvailable in AGSA 8.50+",
                        "Snowman button\nhttps://www.gstatic.com/images/icons/material/system/1x/more_vert_black_24dp.png",
                        "Video settings icon.",
                        "Heart icon-filled in",
                        "Heart icon-border"
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "description": "Alternatively, URL where the associated icon can be found\nThis is deprecated; please use gutter_icon.",
                    "type": "string"
                },
                "igsaSportsUrlAction": {
                    "$ref": "Sidekick__OpenUrlAction",
                    "description": "App link to the native iGSA Sports mini-app. Should be used instead of\naction oneof (above) if the client is eligible to the native mini-app\naccording to the client-side experiment diversion, which is controlled by\nHeterodyne."
                },
                "inlineInjectionModifier": {
                    "$ref": "Sidekick__InlineInjectionModifier",
                    "description": "Action modifier that injects content into the feed. Note that this behavior\ncan be combined with another action (such as OpenUrlAction), so it is not\npart of the 'oneof action' above."
                },
                "interestPickerAction": {
                    "$ref": "Sidekick__InterestPickerAction"
                },
                "manageNotificationsAction": {
                    "$ref": "Sidekick__ManageNotificationsAction"
                },
                "openGmailAction": {
                    "$ref": "Sidekick__OpenGmailAction"
                },
                "openOctarineAction": {
                    "$ref": "Sidekick__OpenOctarineAction"
                },
                "openUrlAction": {
                    "$ref": "Sidekick__OpenUrlAction"
                },
                "playVideoAction": {
                    "$ref": "Sidekick__PlayVideoAction",
                    "description": "Available in AGSA 7.18+.\nAvailable in iGSA 42.0+."
                },
                "reactAction": {
                    "$ref": "Sidekick__ReactAction"
                },
                "saveAction": {
                    "$ref": "Sidekick__SaveAction"
                },
                "searchAction": {
                    "$ref": "Sidekick__SearchAction"
                },
                "secondScreenAction": {
                    "$ref": "Sidekick__SecondScreenAction"
                },
                "shareAction": {
                    "$ref": "Sidekick__ShareAction",
                    "description": "Actions used in reactions, which are actionable icons shown at the bottom\nof a card. Share allows a user to share a link to the\narticle. ReactAction is information for showing a More/Less popup toggle.\nSee go/feed-react."
                },
                "talkback": {
                    "$ref": "Sidekick__TemplatedString"
                },
                "tooltip": {
                    "$ref": "Sidekick__Tooltip",
                    "description": "Tooltip that corresponds to the view for this clientAction. Deprecated."
                },
                "veInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for corresponding UI element and information for\nclient on how to log it."
                },
                "weatherAction": {
                    "$ref": "Sidekick__WeatherAction"
                },
                "webViewAction": {
                    "$ref": "Sidekick__WebViewAction"
                },
                "whyThisAdAction": {
                    "$ref": "Sidekick__WhyThisAdAction"
                }
            },
            "type": "object"
        },
        "Sidekick__ClockEntry": {
            "description": "A card to show the time in a different time zone.",
            "id": "Sidekick__ClockEntry",
            "properties": {
                "timeZone": {
                    "description": "The timezone is not logged with Gaia since location may be sensitive.",
                    "items": {
                        "$ref": "Sidekick_ClockEntry_TimeZone"
                    },
                    "type": "array"
                },
                "title": {
                    "description": "Text to show on the card, e.g. \"time at home\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ClosetAction": {
            "description": "An action not only gets sent back to server but also changes some entity's\nstate on the client side.\nThis action is used in closet redesign for AGSA 6.6: go/now-closet-proto",
            "id": "Sidekick__ClosetAction",
            "properties": {
                "postActionState": {
                    "description": "The new state for the entity after the action is done. The new state would\nbe assigned to closet_interest_entry group_info's state.",
                    "enum": [
                        "UNKNOWN_ENTITY_STATE",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "INFERRED",
                        "SUGGESTED",
                        "QUESTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "The entity was inferred from the user's activity across Google.",
                        "The entity is suggested based on aggregate interests of similar users.",
                        "Special state for questions only. The state in all ClosetQuestionEntry\nshould be assigned to this value. This value is not allowed for\nClosetGroupFilter values contained in the group_info field of\nClosetInterestEntry protos. See go/now-closet-proto for more info."
                    ],
                    "type": "string"
                },
                "postUndoActionRowLabel": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The string replacing the current row content once the undo action is done."
                },
                "undoActionText": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The string for undo action, showing at the rightmost."
                },
                "undoActionType": {
                    "description": "The undo action type for this closet action.",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "undoPostActionState": {
                    "description": "The new state for the entity after the undo action is done.",
                    "enum": [
                        "UNKNOWN_ENTITY_STATE",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "INFERRED",
                        "SUGGESTED",
                        "QUESTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "The entity was inferred from the user's activity across Google.",
                        "The entity is suggested based on aggregate interests of similar users.",
                        "Special state for questions only. The state in all ClosetQuestionEntry\nshould be assigned to this value. This value is not allowed for\nClosetGroupFilter values contained in the group_info field of\nClosetInterestEntry protos. See go/now-closet-proto for more info."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ClosetGroupFilter": {
            "description": "The wrapper for all group info used for filtering, used for closet redesign\nfor AGSA 6.6. See go/now-closet-proto.\nThis ClosetGroupFilter will be used in the following protos:\n    google3/java/com/google/geo/sidekick/proto/closet_interest_entry.proto\n    google3/java/com/google/geo/sidekick/proto/closet_question_entry.proto\n    google3/java/com/google/geo/sidekick/proto/closet_row_template.proto\nWhen GSA client layouts the UI, it reads ClosetRowTemplate's\nClosetGroupFilter field, and find the matching entries from\nClosetInterestEntry and ClosetQuestionEntry.",
            "id": "Sidekick__ClosetGroupFilter",
            "properties": {
                "closetCollection": {
                    "description": "The KG collection of the interest entity.\nEach closet interest and question entry should have at least 1 collection.\n\nFor ClosetGroupFilter values contained in the group_info field of\nClosetRowTemplate protos, multiple closet_collection fields are combined as\nan AND.\nIf the closet_collection fields is empty/null, then we ignore the\ncloset_collection fields for filtering purposes.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "state": {
                    "description": "The EntityState of the interest/question entity.\n\nFor ClosetGroupFilter values contained in the group_info field of\nClosetInterestEntry protos, the state field must contain a single value,\nwhich cannot be QUESTION.\n\nFor ClosetGroupFilter values contained in the group_info field of\nClosetQuestionEntry protos, the state field must contain a single value,\nwhich must be QUESTION.\n\nFor ClosetGroupFilter values contained in the group_info field of\nClosetRowTemplate protos, multiple state fields are combined as an OR.\nIf the state field is empty/null, then we ignore the state field for\nfiltering purposes.\n\nFor ClosetGroupFilter values contained in the group_info field of\nClosetRowTemplate protos, multiple closet_collection fields are combined as\nan AND.\nIf the closet_collection fields is empty/null, then we ignore the\ncloset_collection fields for filtering purposes.\n\nExample of entity case:\n49ers: state: [INTERESTED],\n    closet_collection: [\"/collection/sports\", \"/collection/nfl\"].\nIt will be shown for the following filters:\n  Filter 1: state: [INTERESTED, NOT_INTERESTED],\n      closet_collection: [\"/collection/sports\"]\n  Filter 2: state: [INTERESTED], closet_collection: [\"/collection/nfl\"]\n  Filter 3: state: [INTERESTED],\n      closet_collection: [\"/collection/nfl\", \"/collection/music\",\n                          \"/collection/other\"]\n  Filter 4: state: [INTERESTED], closet_collection: []\n  Filter 5: state: [], closet_collection: [\"/collection/nfl\"]\n  Filter 6: state: [], closet_collection: []\nit will NOT be shown for the following filters:\n  Filter 7: state: [INTERESTED], closet_collection: [\"/collection/music\"]\n  Filter 8: state: [NOT_INTERESTED],\n      closet_collection: [\"/collection/sports\", \"/collection/nfl\"]\n\nExample of question case:\ncommute_question: state: [QUESTION],\n    closet_collection: [\"/collection/commute_q\"]\nIt will be shown for the following filters:\n  Filter 9: state: [QUESTION],\n      closet_collection: [\"/collection/commute_q\"]\n  Filter a: state: [QUESTION], closet_collection: []\n  Filter b: state: [], closet_collection: [\"/collection/commute_q\"]\n  Filter c: state: [], closet_collection: []\nit will NOT be shown for the following filters:\n  Filter d: state: [INTERESTED],\n      closet_collection: [\"/collection/commute_q\"]\n  Filter e: state: [], closet_collection: [\"/collection/commute\"]",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "The entity was inferred from the user's activity across Google.",
                        "The entity is suggested based on aggregate interests of similar users.",
                        "Special state for questions only. The state in all ClosetQuestionEntry\nshould be assigned to this value. This value is not allowed for\nClosetGroupFilter values contained in the group_info field of\nClosetInterestEntry protos. See go/now-closet-proto for more info."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_ENTITY_STATE",
                            "INTERESTED",
                            "NOT_INTERESTED",
                            "INFERRED",
                            "SUGGESTED",
                            "QUESTION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ClosetInterestEntry": {
            "description": "The interest entry for closet redesign for AGSA 6.6. See go/now-closet-proto.",
            "id": "Sidekick__ClosetInterestEntry",
            "properties": {
                "entity": {
                    "$ref": "Sidekick_ClosetInterestEntry_Entity",
                    "description": "The entity info."
                },
                "groupInfo": {
                    "$ref": "Sidekick__ClosetGroupFilter",
                    "description": "The group info indicates which groups in closet would include this entity."
                },
                "rankingInfo": {
                    "description": "The ranking info for the entity. There would usually be more than one\nranking_info for an entity, e.g. user model score and latest modified\ntimestamp. The GSA would use the score according to the defined type\n(ranking_type in ClosetRowTemplate.proto) for ranking.",
                    "items": {
                        "$ref": "Sidekick_ClosetRowTemplate_RankingInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ClosetQuestionEntry": {
            "description": "The question entry for closet redesign for AGSA 6.6. See go/now-closet-proto.\nThis proto is understood by Android clients 6.6+.",
            "id": "Sidekick__ClosetQuestionEntry",
            "properties": {
                "conditionToEnable": {
                    "description": "The conditions to enable this question entry, combined as an AND.\nThis question entry would be shown as grey out, and cannot be switched by\nusers if any one of these conditions are not satisfied.",
                    "items": {
                        "$ref": "Sidekick_ClosetQuestionEntry_Condition"
                    },
                    "type": "array"
                },
                "dialog": {
                    "description": "Multiple dialogs associated with this question entry. The first dialog with\nall conditions satisfied would be triggered. If no dialog matches, then\ndon't pop up any dialog.",
                    "items": {
                        "$ref": "Sidekick_ClosetQuestionEntry_Dialog"
                    },
                    "type": "array"
                },
                "displayType": {
                    "enum": [
                        "UNKNOWN_DISPLAY_TYPE",
                        "DEFAULT",
                        "YES_NO_TOGGLE",
                        "YES_NO_CHECKED",
                        "ADDRESS",
                        "TEXT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "groupInfo": {
                    "$ref": "Sidekick__ClosetGroupFilter",
                    "description": "The info indicates which groups in closet would include this question."
                },
                "gutterIcon": {
                    "$ref": "Sidekick__ModuleIcon",
                    "description": "Icon displayed for the question"
                },
                "question": {
                    "$ref": "Sidekick__Question",
                    "description": "The question info."
                },
                "rankingInfo": {
                    "description": "The ranking info for the question. The GSA would use the score according to\nthe defined type (ranking_type in ClosetRowTemplate.proto) for ranking.",
                    "items": {
                        "$ref": "Sidekick_ClosetRowTemplate_RankingInfo"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "Localized metadata line for question subtitle string."
                },
                "title": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "Localized metadata line for question title string."
                }
            },
            "type": "object"
        },
        "Sidekick__ClosetRowTemplate": {
            "description": "The template row for closet redesign for AGSA 6.6. See go/now-closet-proto.",
            "id": "Sidekick__ClosetRowTemplate",
            "properties": {
                "groupFilter": {
                    "$ref": "Sidekick__ClosetGroupFilter",
                    "description": "The filter used to get matching data for closet rendering.\nRepeated filters combined as an OR."
                },
                "maxToShow": {
                    "description": "Number of rows to show in closet. If it is not set, then there is no max to\nshow, and the client will show all entities that match the group filter.",
                    "format": "int32",
                    "type": "integer"
                },
                "module": {
                    "$ref": "Sidekick__CardModule",
                    "description": "The template server module for rendering each row."
                },
                "rankingType": {
                    "description": "The GSA client would match the type (the type of RankingInfo in\nClosetInterestEntry.proto or ClosetQuestionEntry.proto) to see which\nRankingInfo should be used for ranking.\nIf absent, rank by title alphabetically.",
                    "enum": [
                        "UNKNOWN_RANKING_TYPE",
                        "ALPHABETICAL",
                        "OTHER",
                        "USER_MODEL_SCORE",
                        "LATEST_MODIFIED_TIMESTAMP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Other type would be used for question ranking, as we may pass down some\nserver-defined ranking for questions.",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "title": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "The title for the given group."
                }
            },
            "type": "object"
        },
        "Sidekick__ClusterMetadata": {
            "description": "Contains any metadata necessary for rendering/logging a Lotic cluster (see\ngo/lotic).",
            "id": "Sidekick__ClusterMetadata",
            "properties": {
                "backgroundColor": {
                    "description": "Color (argb) of background displayed in the cluster header.",
                    "format": "uint32",
                    "type": "integer"
                },
                "bottomMarginAllCardsInDp": {
                    "description": "This used to override bottom margin for all cards in the given cluster in\ndp. It is now deprecated and should not be used in any version using Monet.\n(Do not use after AGSA v7.13)",
                    "format": "int32",
                    "type": "integer"
                },
                "bottomMarginInDp": {
                    "description": "Override bottom margin for the given cluster in dp.\nOnly specifiable for Android v6.0+.",
                    "format": "int32",
                    "type": "integer"
                },
                "cardElevationInDp": {
                    "description": "This used to override elevation for all cards in the given cluster in dp.\nIt is now deprecated and should not be used in any version using Monet.\n(Do not use after AGSA v7.13)",
                    "format": "int32",
                    "type": "integer"
                },
                "clientAction": {
                    "description": "This was added to support a drop down menu of actions.  This is no longer\nused.",
                    "items": {
                        "$ref": "Sidekick__ClientAction"
                    },
                    "type": "array"
                },
                "clusterType": {
                    "description": "Type of the cluster.",
                    "enum": [
                        "OTHER",
                        "AROUND_YOU",
                        "UPCOMING",
                        "UPDATES",
                        "STORIES",
                        "TRIP",
                        "MORE_CARDS",
                        "WEBKICK_STORIES",
                        "INTEREST_UPDATE",
                        "ENTITY_BASED",
                        "RECOMMENDATION",
                        "EXPERIMENTAL",
                        "ELECTION",
                        "ONBOARDING",
                        "THIRD_PARTY_APPS_AND_SITES",
                        "NOW_ON_TAP_STREAM",
                        "TOP_STORIES_GENERAL",
                        "AT_A_CONTEXT",
                        "TOP_STORIES_FOR_YOU",
                        "DEEP_NOW_SUGGESTED",
                        "ELECTION_STORIES",
                        "BEFORE_PLACE",
                        "IN_VEHICLE",
                        "DEEP_NOW_WHOLE_CLUSTER",
                        "OLYMPICS",
                        "INTERESTS",
                        "LIGHTYEAR_WEATHER",
                        "HATS_FEEDBACK",
                        "WARM_WELCOME",
                        "ASSISTANT_HQ_HIGHLIGHTS",
                        "ASSISTANT_HQ_AGENDA",
                        "ASSISTANT_HQ_TRAVEL",
                        "ASSISTANT_HQ_REMINDERS",
                        "ASSISTANT_HQ_ORDERS",
                        "ASSISTANT_HQ_SHOPPING_LIST",
                        "ASSISTANT_HQ_PROMO_BANNER",
                        "ASSISTANT_HQ_SHORTCUT",
                        "ASSISTANT_HQ_TRIPS",
                        "NEW_TO_YOU",
                        "FEED_ADS"
                    ],
                    "enumDescriptions": [
                        "All clusters not from types below. This type should be used only for\ndebugging or as a temporary solution.",
                        "Lotic cluster IDs.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Cluster at the bottom of the stream for experimental cards. New cards\nshould start out as experimental, and after approval may move to the\n\"dogfood\" stage to show up in other clusters.",
                        "",
                        "",
                        "",
                        "The cluster is to be shown in the Now on Tap stream.\nSee go/peek-at-now as an example feature.",
                        "",
                        "",
                        "",
                        "DeepNow is the framework for serving TensorFlow learned models\nto help in ranking/scoring Now cards. These models are learned\nusing Now logs and intended to be displayed in a separate cluster\nfor the initial live experiments.\nFor more details, deep-now@ and/or jameskunz@.",
                        "Cluster containing standalone election stories carousel, when there are\nno civic election cards present.",
                        "Cluster containing information about the user's next destination.",
                        "Cluster containing information that a user might need while in a vehicle.",
                        "Similar to DEEP_NOW_SUGGESTED, but for when a whole cluster is moved.",
                        "Cluster containing information about the olympics.",
                        "Keep me updated (KMU) interest clusters.",
                        "Weather cluster in Lightyear to be ranked at 1.",
                        "Cluster containing a HaTS survey card.",
                        "Single view tutorial card position to be ranked at 1 and shown rarely.",
                        "Clusters for the Assistant HQ.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clusters for the new-to-you content.",
                        "Ads clusters."
                    ],
                    "type": "string"
                },
                "dividerColor": {
                    "description": "Color (argb) used for the divider line between clusters.",
                    "format": "uint32",
                    "type": "integer"
                },
                "emptyClusterCardEntryUpdateId": {
                    "description": "This is the entry_update_id of the Entry which is considered the empty card\nfor the Cluster, the Card shown if there is no other content.\nThe card will be hidden if other cards are visible in the cluster.  It\nmust be in the top level of the children in the cluster.",
                    "format": "int64",
                    "type": "string"
                },
                "fontColor": {
                    "description": "Color (argb) of font displayed in the cluster header.",
                    "format": "uint32",
                    "type": "integer"
                },
                "headerImageUrl": {
                    "description": "URL of image displayed behind the cluster header.",
                    "type": "string"
                },
                "isChild": {
                    "description": "True if the card is inside a cluster. This field is populated only in\njoined/flattened logs by the joining script.",
                    "type": "boolean"
                },
                "isDividerVisible": {
                    "description": "Whether to show the divider",
                    "type": "boolean"
                },
                "isFullBleed": {
                    "description": "Whether all contents of the cluster should extend to the container edge.",
                    "type": "boolean"
                },
                "justification": {
                    "description": "Justification for why the cluster is being shown.",
                    "type": "string"
                },
                "needBundleType": {
                    "description": "The type of the NeedBundle that triggers the cluster.",
                    "enum": [
                        "UNKNOWN",
                        "CURRENT_LOCATION",
                        "AT_A_CONTEXT",
                        "UPCOMING",
                        "TRIP",
                        "CURRENT_TRIP",
                        "UPDATE",
                        "CONTENT",
                        "RECOMMENDATION",
                        "NON_PERSONALIZED",
                        "ELECTION",
                        "ELECTION_STORIES",
                        "ONBOARDING",
                        "ONBOARDING_MOVIES",
                        "ONBOARDING_MUSIC",
                        "ONBOARDING_SPORTS",
                        "ONBOARDING_STOCKS",
                        "FULL_PAGE_INTEREST_PICKER_LURE",
                        "MISC",
                        "THIRD_PARTY",
                        "THIRD_PARTY_APPS_AND_SITES",
                        "CUSTOMIZE",
                        "INTERNAL",
                        "INTERNAL_TOP_OF_STREAM",
                        "INTERNAL_BOTTOM_OF_STREAM",
                        "INTERNAL_PROMO",
                        "NOTIFICATION",
                        "EXPERIMENTAL",
                        "IOS_PROMO",
                        "LOBBY",
                        "IN_VEHICLE",
                        "OLYMPICS",
                        "LIGHTYEAR_WEATHER",
                        "HATS_FEEDBACK",
                        "WARM_WELCOME",
                        "TOP_STORIES_GENERAL",
                        "TOP_STORIES_FOR_YOU",
                        "DEEP_NOW_SUGGESTED",
                        "BEFORE_PLACE",
                        "KMU_MOVIE_WITH_RELEASE_DATE",
                        "KMU_ACTOR_TO_MOVIE_WITH_RELEASE_DATE",
                        "KMU_DIRECTOR_TO_MOVIE_WITH_RELEASE_DATE",
                        "FEED_V2_MOVIE_STREAMING_WITH_RELEASE_DATE",
                        "FEED_V2_MOVIE_WITH_RELEASE_DATE",
                        "FEED_V2_YOUTUBE_MUSIC_VIDEOS",
                        "FEED_V2_YOUTUBE_LIVE_STREAMS",
                        "FEED_V2_BOLLYWOOD_TO_BOLLYWOOD_UPDATE",
                        "FEED_ACTOR_TO_MOVIE_TRAILER_WITH_UPLOAD_DATE",
                        "FEED_ARTIST_TO_ALBUM_WITH_RELEASE_DATE",
                        "FEED_ARTIST_TO_YT_MUSIC_VIDEO",
                        "FEED_ATHLETE_TO_TEAM_WITH_JOIN_DATE",
                        "FEED_BOLLYWOOD_TO_BOLLYWOOD_UPDATE",
                        "FEED_COACH_TO_TEAM_WITH_JOIN_DATE",
                        "FEED_DIRECTOR_TO_MOVIE_TRAILER_WITH_UPLOAD_DATE",
                        "FEED_LOCATION_TO_BOLLYWOOD_UPDATE",
                        "FEED_MOVIE_SHOWTIMES",
                        "FEED_MOVIE_TO_MOVIE_SEQUEL_WITH_RELEASE_DATE",
                        "FEED_MOVIE_TRAILER_WITH_UPLOAD_DATE",
                        "FEED_SPORTS_ATHLETE_COLLECTION",
                        "FEED_SPORTS_LEAGUE_STANDING",
                        "FEED_SPORTS_PRE_GAME_COLLECTION",
                        "FEED_SPORTS_POST_GAME_COLLECTION",
                        "FEED_SPORTS_ONGOING_GAME_COLLECTION",
                        "FEED_SPORTS_PRIMARY_LEAGUE_COLLECTION",
                        "FEED_SPORTS_SECONDARY_LEAGUE_COLLECTION",
                        "FEED_SPORTS_TEAM_TO_JOIN_DATE",
                        "FEED_SUGGESTED_ACTOR_TO_MOVIE_WITH_RELEASE_DATE",
                        "FEED_SUGGESTED_ARTIST_TO_ALBUM_WITH_RELEASE_DATE",
                        "FEED_SUGGESTED_DIRECTOR_TO_MOVIE_WITH_RELEASE_DATE",
                        "FEED_SUGGESTED_MOVIE_WITH_RELEASE_DATE",
                        "FEED_TV_SERIES_TO_NEW_AIRING_EPISODE",
                        "FEED_VIEDOGAME_TO_VIDEOGAME_SERIES_WITH_RELEASE_DATE",
                        "FEED_VIDEOGAME_WITH_RELEASE_DATE",
                        "FEED_VOTING_REMINDER",
                        "FEED_ONBOARDING_INTEREST_PICKER",
                        "FEED_GESTALT_WELCOME_CARD",
                        "FEED_WEATHER",
                        "DASHBOARD_STOCK_TICKER_LIST",
                        "KMU_TRENDING_STORY",
                        "SEARCH_AWARENESS",
                        "SPORTS_AWARENESS",
                        "TV_EPISODE_AWARENESS",
                        "KMU_HOT_KP",
                        "KMU_FINANCE",
                        "KMU_SPORTS_GAME",
                        "ENHANCED_PERSONAL_DASHBOARD_MY_DAY",
                        "ENHANCED_PERSONAL_DASHBOARD_AROUND_ME",
                        "ENHANCED_PERSONAL_DASHBOARD_UPDATES",
                        "KMU_SMEARED_MOVIE_WITH_RELEASE_DATE",
                        "ASSISTANT_HQ_HIGHLIGHTS",
                        "ASSISTANT_HQ_AGENDA",
                        "ASSISTANT_HQ_TRAVEL",
                        "ASSISTANT_HQ_REMINDERS",
                        "ASSISTANT_HQ_ORDERS",
                        "ASSISTANT_HQ_SHOPPING_LIST",
                        "ASSISTANT_HQ_SHORTCUT",
                        "ASSISTANT_HQ_TRIPS",
                        "ASSISTANT_HQ_HIGHLIGHTS_EVAL",
                        "ASSISTANT_HQ_AGENDA_EVAL",
                        "ASSISTANT_HQ_TRAVEL_EVAL",
                        "ASSISTANT_HQ_REMINDERS_EVAL",
                        "ASSISTANT_HQ_ORDERS_EVAL",
                        "ASSISTANT_HQ_SHOPPING_LIST_EVAL",
                        "ASSISTANT_HQ_PROMO_BANNER",
                        "TUTORIAL_PROMO_FEED",
                        "TUTORIAL_PROMO_DASHBOARD",
                        "FEED_TODAY_IN_HISTORY_BIRTHDAY",
                        "FEED_TODAY_IN_HISTORY_DEATH_ANNIVERSARY",
                        "FEED_TODAY_IN_HISTORY_GEO_ESTABLISHED",
                        "FEED_TODAY_IN_HISTORY_HISTORICAL_EVENT",
                        "FEED_TODAY_IN_HISTORY_LAW_IN_EFFECT",
                        "FEED_TODAY_IN_HISTORY_LAW_RATIFIED",
                        "FEED_TODAY_IN_HISTORY_LEGAL_CASE_DECIDED",
                        "FEED_TODAY_IN_HISTORY_EVENTS_LOCALIZED",
                        "FEED_TODAY_IN_HISTORY_BIRTHDAY_LOCALIZED",
                        "FEED_TODAY_IN_HISTORY_DEATH_ANNIVERSARY_LOCALIZED",
                        "NEW_TO_YOU",
                        "NEW_TO_YOU_MOVIE",
                        "NEW_TO_YOU_VIDEO_PURCHASE",
                        "NEW_TO_YOU_TRIP",
                        "NEW_TO_YOU_HOBBY_TRIP",
                        "NEW_TO_YOU_LANDMARK",
                        "NEW_TO_YOU_MOVIE_CAST",
                        "NEW_TO_YOU_REMINDER",
                        "NEW_TO_YOU_WHILE_TRAVELING",
                        "NEW_TO_YOU_VASCO_TASK",
                        "NEW_TO_YOU_VASCO_FRESH_TASK",
                        "NEW_TO_YOU_VASCO_VIDEO_TASK",
                        "NEW_TO_YOU_FRESH_INTEREST",
                        "NEW_TO_YOU_BOOK_PURCHASE",
                        "NEW_TO_YOU_VIDEO_GAME_PURCHASE",
                        "NEW_TO_YOU_SOFTWARE_PURCHASE",
                        "NEW_TO_YOU_LIVE_VIDEO",
                        "NEW_TO_YOU_TODAY_IN_HISTORY",
                        "NEW_TO_YOU_EVENT",
                        "NEW_TO_YOU_LONG_TERM_INTEREST",
                        "NEW_TO_YOU_PARENTING",
                        "NEW_TO_YOU_AFTER_A_PLACE",
                        "LONG_TERM_INTEREST",
                        "URL_TO_URL_RECOMMENDATION",
                        "STOCK_END_OF_DAY_NOTIFICATION",
                        "STOCK_IPO_DAY_OF_NOTIFICATION",
                        "FEED_AWARDS_TO_AWARDS_CEREMONY_REMINDER",
                        "FEED_AWARDS_TO_AWARDS_CEREMONY_SUMMARY",
                        "FEED_AWARDS_NOMINEE_TO_AWARDS_CEREMONY_REMINDER",
                        "FEED_FILM_FESTIVAL_TO_ONGOING_FILM_FESTIVAL",
                        "FEED_ARTIST_TO_ONGOING_MUSIC_FESTIVAL",
                        "FEED_MUSIC_FESTIVAL_TO_ONGOING_MUSIC_FESTIVAL",
                        "FEED_EPHEMERAL_EVENT_LIVESTREAM",
                        "FEED_MULTISPORT_EVENT_OPENING_CEREMONY_REMINDER",
                        "FEED_MULTISPORT_EVENT_GENERAL_INFORMATION",
                        "FEED_MULTISPORT_EVENT_GAME_WINNER",
                        "FEED_MULTISPORT_EVENT_END_OF_GAMES",
                        "FEED_PBX_MOVIE",
                        "FEED_PBX_TV",
                        "FEED_AUTHOR_TO_BOOK_WITH_PUBLICATION_DATE",
                        "FEED_BOOK_TO_BOOK_WITH_PUBLICATION_DATE",
                        "FEED_BOOK_SERIES_TO_BOOK_WITH_PUBLICATION_DATE",
                        "FEED_AUTHOR_TO_BOOK_WITH_PUBLICATION_DATE_NOTIFICATION",
                        "FEED_BOOK_TO_BOOK_WITH_PUBLICATION_DATE_NOTIFICATION",
                        "FEED_BOOK_SERIES_TO_BOOK_WITH_PUBLICATION_DATE_NOTIFICATION",
                        "RECENTLY_FOLLOWED",
                        "RECENTLY_FOLLOWED_N2Y",
                        "FEED_HEALTH",
                        "FEED_STORIES_COLLECTION",
                        "SEARCH_ENGAGEMENT_HIGHLIGHT",
                        "SEARCH_ENGAGEMENT_ASKJOE",
                        "VIDYA_ONBOARDING",
                        "FEED_ADS",
                        "FEED_ADS_HERO_IMAGE",
                        "FEED_ADS_CLICK_TO_DOWNLOAD",
                        "FEED_ADS_MULTI_PHOTO",
                        "FEED_ADS_SHOPPING_SHOWCASE",
                        "FEED_ADS_ONO_HERO_IMAGE",
                        "FEED_HEADLINE_NEWS",
                        "FEED_NATION_NEWS",
                        "FEED_WORLD_NEWS",
                        "FEED_ENTERTAINMENT_NEWS",
                        "FEED_SPORTS_NEWS",
                        "FEED_BUSINESS_NEWS",
                        "FEED_SCITECH_NEWS",
                        "CONTEXTUAL_NOTIFICATION",
                        "LOTTERY_RESULT_NOTIFICATION",
                        "WEBSITE_UPDATE",
                        "INTENT_ANNOTATION_DEMO",
                        "FEED_VIDEO",
                        "DEEP_TRENDS",
                        "HIDE_INFERRED_LANGUAGE",
                        "NOW_PERSISTENT_PUSH",
                        "YOUTUBE_TENNIS_HIGHLIGHTS",
                        "WEBKICK_TRENDING_STORIES",
                        "STAMP",
                        "LOCALLY_TRENDING_STORIES",
                        "WEBKICK_LOCAL_STORIES",
                        "EXHIBITIONS",
                        "ISSUE_SEARCH_QUERY",
                        "KMU_TRENDING_POLITICS_STORY",
                        "CARDMAKER",
                        "SPORTS_TEAM_GAME",
                        "SPORTS_ATHLETE_GAME",
                        "SPORTS_LEAGUE_GAME",
                        "SPORTS_MULTI_PARTICIPANT_GAME",
                        "PUBLIC_ALERT",
                        "URGENT_PUBLIC_ALERT",
                        "UPCOMING_TURNDOWN_PROMO",
                        "GOOGLE_STORIES",
                        "BROAD_INTEREST_STORIES",
                        "BROAD_INTEREST_STORIES_RECENTLY_FOLLOWED",
                        "BROAD_INTEREST_ECS_STORIES",
                        "GEO_TARGETING_STORIES",
                        "EPHEMERAL_EVENT_STORIES",
                        "FRESH_VIDEOS",
                        "TICKET_AVAILABILITY_NOTIFICATION",
                        "TOPIC_FEED_ENTRY_POINTS",
                        "IMAGE",
                        "PANOPTIC_ARTICLE",
                        "LOCAL_RECOMMENDATION",
                        "INTEREST_EXPLORATION",
                        "DISCOVER_VIDEO_GAME_VIDEOS",
                        "TWITTER_STORIES",
                        "PODCAST",
                        "CRISIS_RESPONSE_ALERT",
                        "URGENT_CRISIS_RESPONSE_ALERT",
                        "COOKING_VIDEOS",
                        "FASHION_BEAUTY_VIDEOS",
                        "ONEOFF_NOTIFICATION",
                        "NEW_TO_YOU_GROUPING",
                        "VISTAAR_ARTICLES",
                        "CLASSIC_CORE_INTEREST_RESULT",
                        "DEEP_TRENDS_FABLE",
                        "FEED_VIDEO_DEEP_REC",
                        "LIVEWEB_STORY",
                        "FEED_ONBOARDING_INTEREST_PICKER_SPORTS_TEAMS",
                        "FEED_ONBOARDING_INTEREST_PICKER_BROAD_TOPICS",
                        "GOG_POSTS",
                        "GOG_CAMEOS",
                        "MOONSTONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Information about the current location.",
                        "Specific information for this context.",
                        "Upcoming events and reminders.",
                        "Trip information.",
                        "Ongoing trip information.",
                        "Updates for the user.",
                        "Content recommendations.",
                        "Other recommendations.",
                        "For cards in non personalized stream.",
                        "Election information.",
                        "",
                        "Onboarding.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Everything else.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "For Shadie demo.",
                        "",
                        "",
                        "",
                        "Cards that might be needed while in a vehicle.",
                        "",
                        "",
                        "Bundle for feedback requested from user.",
                        "",
                        "NeedBundleTypes used in the intent system should appear after this line.\nSee commentary at the start of the enumeration.",
                        "",
                        "",
                        "Information about the user's next destination.",
                        "Types with KMU/FEED prefix refer to Interest feed.\nBundles for movie release related KMU intents.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Bundle for stock ticker list card in dashboard.",
                        "Bundle for trending story.",
                        "Bundle for search awareness features.",
                        "Bundle for sports awareness features.",
                        "Bundle for TV Episodes awareness tips.",
                        "Bundle for HOT_KP.",
                        "Bundle for KMU finance intents.",
                        "Sports game cluster.",
                        "Personal Dashboard Enhancement.\nVisit go/personal-dashboard-v1.1 for more details.",
                        "",
                        "",
                        "Experimental bundle for smeared movie clusters.",
                        "Bundles for Assistant HQ (go/hq-now-integration).",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Bundles for Assistant HQ Eval (go/hq-now-integration).",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Bundles for welcome cards.",
                        "",
                        "Today in history cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Bundles of new-to-you cards. More bundles are added to handle\ndismisses properly as V2 dismiss action is on the collection\ncard and collections are identified with the bundles.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Bundles of long term ineterest cards.",
                        "Bundles of url-to-url cards.",
                        "Bundles for end-of-day stock notification cards.",
                        "",
                        "Bundles for awards ceremony cards.",
                        "",
                        "",
                        "Bundles for film festival cards.",
                        "Bundles for music festival cards.",
                        "",
                        "Bundles for ephemeral event livestream cards.",
                        "Bundles for multi-sport event (e.g. Asian games) cards.",
                        "",
                        "",
                        "",
                        "Bundles for popularity based experience",
                        "",
                        "Bundles for books cards and notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Bundles for recently followed entities.",
                        "",
                        "Bundles for health cards and notifications.",
                        "",
                        "Bundles of Highlight cards.",
                        "Bundles of AskJoe cards.",
                        "Bundles for Vidya language onboarding features.",
                        "Bundles for Ads -- go/feed-ads-frontend",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Hard news content types -- go/feed-news",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Bundle for Contextual notifications.",
                        "Lottery related.",
                        "Bundle for website update cards.",
                        "Bundle for intent annotation offline demo and eval.",
                        "Video cards.",
                        "Bundle for DeepTrends stories.",
                        "Bundle for Language Picker which will allow user to opt out from\nBilingual feed.",
                        "Bundle for notifications that were originally sent via push that need to\nbe re-served during feed refresh.",
                        "Bundle for tennis highlights.",
                        "Bundle for webkick trending stories",
                        "Bundle for STAMPs (go/stamp-feed-design).",
                        "Locally trending stories are part of zero state content.",
                        "Bundle for webkick local stories",
                        "Bundle for museum exhibitions (add go link)",
                        "User wants to issue a query. Parameterized by the query, itself, as a\nstring.",
                        "Bundle for politics trending story.",
                        "Bundle for cardmaker cards.",
                        "Sports on the intent sytem.\nTeam game bundle.",
                        "Athlete game bundle.",
                        "League game bundle.",
                        "Multi participant game bundle.",
                        "Bundles for Public Alerts cards.",
                        "",
                        "Bundle for upcoming turndown promo cards.",
                        "Bundles for Google Stories Card.",
                        "Broad interest stories (go/broad-interest-modeling-design).",
                        "",
                        "",
                        "Stories targeted based on the user's city location.",
                        "Stories based on date/time dependent events such as festivals.\nSee go/festive-feed for festivals design.",
                        "Videos from panoptic",
                        "Start of ticket sales notification",
                        "Topic feed entry points that lead to Topic Feed on a particular topic.",
                        "Images cluster.\nFor now used for images experience prototyping in Discover.\nSee go/images-in-discover-notes for project notes.",
                        "Need bundle type corresponding to all Panoptic based fulfillers.",
                        "Personalized local recommendation by go/local-stream-prd.",
                        "",
                        "Bundle for video games for core interests (fulfilled by videoroot).",
                        "Bundle for Twitter in Discover card.",
                        "Bundle for Podcast recommendations.",
                        "Bundles for Crisis Response Alerts cards (SOS Alerts, Public Alerts)",
                        "",
                        "Bundle for cooking for core interests (fulfilled by videoroot).",
                        "Bundle for fashion and beauty for core interests (fulfilled by\nvideoroot).",
                        "Bundle for One-off Notifications.",
                        "N2Y content grouped around an interest or attribute\n(go/n2y-groupings-prd).",
                        "Indic Articles from Vistaar.",
                        "Core Interest fulfiled by ECS contents\nDesign doc: (go/ci-content-ecs)",
                        "Bundle for DeepTrends FaBLE stories.\nDesign doc: (go/deep-trends-fable).",
                        "Bundle for deep videos retrieval (fulfilled by videoroot).",
                        "Bundle for liveweb stories.",
                        "Interest picker",
                        "",
                        "Bundles for different Get-On-Google contents (go/gog)\nBundles for Get-On-Google posts.",
                        "Bundle for Get-On-Google cameos.",
                        "Bundle for Moonstone quasi-personalized content."
                    ],
                    "type": "string"
                },
                "secondaryAccessibilityLabelOnEmptyCluster": {
                    "description": "The string that should be used by screen readers for\nsecondary_label_on_empty_cluster. If not set, the platform default for the\nlabel element should be used.",
                    "type": "string"
                },
                "secondaryClickAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "A secondary action attached to this Cluster header.  If this is defined\nalong with the secondary_label, a button like link will be added to the\ncluster header."
                },
                "secondaryClickActionOnEmptyCluster": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "A secondary action attached to this Cluster header.  If this is defined\nalong with the secondary_label_on_empty_cluster, a button like link will\nbe added to the cluster header when the empty card is displayed."
                },
                "secondaryLabel": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text assocated with a secondary action button that can be placed in\nthe Cluster Header.  We will show the secondary action button only if both\nthe secondary_label and secondary_click_action are defined."
                },
                "secondaryLabelOnEmptyCluster": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Text assocated with a secondary action button that can be placed in\nthe Cluster Header.  We will show the secondary action button only if both\nthe secondary_label_on_empty_cluster and\nsecondary_click_action_on_empty_cluster are defined and the empty card is\ndisplayed."
                },
                "suppressClusterPadding": {
                    "description": "If false, clients should not group together content from more than one\ncluster. Cluster Packer packs each individual card inside its own cluster,\nand this field determines whether a cluster's contents should be grouped\ntogether with the previous cluster irrespective of their\nentry_update_id, controlling the multi-column layout.",
                    "type": "boolean"
                },
                "suppressSecondaryActionOnEmptyCluster": {
                    "description": "If the cluster supports both an empty card and a secondary action,\nsuppress the secondary action when the empty card is displayed.",
                    "type": "boolean"
                },
                "title": {
                    "description": "Title displayed for the cluster.",
                    "type": "string"
                },
                "topMarginInDp": {
                    "description": "Top margin for the cluster, in DP\nOnly specifiable for android v6.0+.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__CommuteSummary": {
            "id": "Sidekick__CommuteSummary",
            "properties": {
                "distanceInMeters": {
                    "format": "int32",
                    "type": "integer"
                },
                "encodedCacheToken": {
                    "description": "A base64 encoded version of the cache token that can be used to look up\nthe directions_response corresponding to this commute. Since the exact\ncommute can be looked up for a short period of time, this should be\nconsidered PII. Also, the key is fairly short lived anyway.",
                    "type": "string"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains an encoded FrequentPlace proto that\nhas only the extensions set.",
                    "format": "byte",
                    "type": "string"
                },
                "gmmOptionsBase64": {
                    "description": "A \"&gmm=\" url parameter value to launch GMM for this commute route.\nShould be the urlsafe-base64-encoded string of gmm.IntentExtension proto.\nSee go/gmmoptions for details. Currently this parameter is including only\nthe departure/arrival time anchoring. We do not need to log this field\nbecause basically this value is represented by other existing fields in\nthis proto, and the log policy of those fields may not be consistent with\nthis one.",
                    "type": "string"
                },
                "historicalTrafficDelayInMinutes": {
                    "description": "Left unset if historical traffic conditions are unknown.",
                    "format": "int32",
                    "type": "integer"
                },
                "multipleTrafficIncidents": {
                    "description": "Not logging intentionally as constant. Although could help with knowing\nwhen multiple incidents present.\nText to indicate that multiple incidents were reported along the route.\nNot used when traffic_report_oneliner is present.",
                    "type": "string"
                },
                "pathfinderWaypoint": {
                    "description": "The pathfinder waypoints needed to regenerate the route. This does not\ninclude the source and destination points. These can be used as altvia\npoints for navigation.",
                    "items": {
                        "$ref": "Sidekick__Location"
                    },
                    "type": "array"
                },
                "requeryToken": {
                    "description": "When a cache token is unavailable, the Trip requery_token can be used to\nrebuild the route. Since this can be used to rebuild a user's route, this\nis definitely PII.",
                    "format": "byte",
                    "type": "string"
                },
                "routeSummary": {
                    "description": "Short description of the route (e.g. \"101N and 880N\").",
                    "type": "string"
                },
                "showNavigation": {
                    "description": "Whether the \"Navigate\" button should be shown for this route.\nNOTE: It appears as if this flag is unused by the client, which instead\nhard codes a value based on the kind of entry being shown. The client also\ninterprets the hard-coded value as \"whether Navigation mode should be shown\nwhen opening this route in GMM.\"",
                    "type": "boolean"
                },
                "trafficDelayInMinutes": {
                    "description": "Left unset if traffic conditions are unknown.",
                    "format": "int32",
                    "type": "integer"
                },
                "trafficIncident": {
                    "description": "Related traffic incidents. Do not display if a traffic_report_oneliner is\npresent.",
                    "items": {
                        "$ref": "Sidekick__TrafficIncident"
                    },
                    "type": "array"
                },
                "trafficReportOneliner": {
                    "$ref": "Sidekick_CommuteSummary_TrafficOneLiner"
                },
                "trafficStatus": {
                    "description": "This is only set for driving commutes",
                    "enum": [
                        "TRAFFIC_LIGHT",
                        "TRAFFIC_MEDIUM",
                        "TRAFFIC_HEAVY",
                        "TRAFFIC_UNKNOWN"
                    ],
                    "enumDescriptions": [
                        "Traffic is light.",
                        "Traffic is neither light nor heavy.",
                        "Traffic is heavy.",
                        "Traffic conditions are unknown"
                    ],
                    "type": "string"
                },
                "transitDetails": {
                    "$ref": "Sidekick_CommuteSummary_TransitDetails"
                },
                "travelMode": {
                    "enum": [
                        "DRIVE",
                        "TRANSIT",
                        "WALKING",
                        "BIKING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "travelModeSetting": {
                    "description": "The travel mode setting that was primarily used to determine which\ntravel mode was used for this CommuteSummary.",
                    "enum": [
                        "COMMUTE",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "travelTimeWithoutDelayInMinutes": {
                    "description": "The time to destination without traffic.",
                    "format": "int32",
                    "type": "integer"
                },
                "waypoints": {
                    "description": "Logs: this is PII so definitely no permanent logs. They are also pretty\nverbose, so there is a cost storing them even in temp logs. However\nthey have the potential to help debug a significant class of bugs\nrelated to shown routes, as demonstrated by the Sidekick dogfood.",
                    "items": {
                        "$ref": "Sidekick__Location"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ComponentEntry": {
            "description": "A message that contains all the information needed to build a Component\ncard on a client.",
            "id": "Sidekick__ComponentEntry",
            "properties": {
                "cml": {
                    "type": "string"
                },
                "renderedCard": {
                    "description": "This should be a serialized instance of `RenderedCard` (defined in\ngoogle3/google/internal/mothership/searchcard/v1/rendered_card.proto).",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ContactCardEntry": {
            "description": "Entry specific info for a contact card.  This information can be used to\nmatch up a contact from the server to a contact on the client.",
            "id": "Sidekick__ContactCardEntry",
            "properties": {
                "email": {
                    "description": "The email for the contact\nNot logged since it may contain contact information.",
                    "type": "string"
                },
                "name": {
                    "description": "The display name of the contact\nNot logged since it may contain contact information.",
                    "type": "string"
                },
                "phone": {
                    "description": "The phone number of the contact, unformatted\nNot logged since it may contain contact information.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ContactData": {
            "description": "Contact related data",
            "id": "Sidekick__ContactData",
            "properties": {
                "clientEntityId": {
                    "description": "ID used for identifying client-side contacts.",
                    "type": "string"
                },
                "focusId": {
                    "description": "Back reference to the Focus Contact id.\nThis could tie the message to the user's GaiaId, so we don't log this\neven in temporary logs.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "Should be sufficient to correlate this Contact with a contact on the\nphone.",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "Phone numbers for this contact.",
                    "items": {
                        "$ref": "Sidekick__PhoneNumber"
                    },
                    "type": "array"
                },
                "photoUrl": {
                    "description": "URL for an image associated with the contact.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ContentFooter": {
            "description": "Module representing the attribution and MultiStateIcons that appear at the\nbottom of a feed card.\n\ngo/feed-reactions",
            "id": "Sidekick__ContentFooter",
            "properties": {
                "attribution": {
                    "description": "Start-aligned attribution.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "awareTipId": {
                    "description": "Defines the tooltipId that is to be attached to the attribution",
                    "format": "int32",
                    "type": "integer"
                },
                "multiStateIcons": {
                    "description": "End-aligned icons that have multiple states.\nOnly use to fill out repeated ids field.",
                    "items": {
                        "$ref": "Sidekick__MultiStateIcon"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ContentId": {
            "description": "An identifier for a piece of content served by Now or delivered to the Now\nclient(s).\nSee http://go/now-content-ids for the design of this feature.\nContentId comprises a unique key for all content. The client will never have\nmore than one piece of content with the same ContentID.",
            "id": "Sidekick__ContentId",
            "properties": {
                "contentDomain": {
                    "description": "The \"domain\" to which this content belongs.\nThe definition of domain is intentionally vague, so that it is flexible\nover time. A domain specifies the party responsible for generating the\ncontent, and this owner promises to specify IDs (below) that match the\nowner's expectations of uniqueness. In sidekick code, domain generally\ncorresponds to an EntrySource.\nContent domains are sent to the client, so should be brief to keep wire\nsize small, but should maintain a modicum of readability. Since they can\nbe sniffed by clients, they should not expose secret implementation\nor product details.",
                    "type": "string"
                },
                "id": {
                    "description": "The integer ID of this piece of content, generally specified as a\ndeterministic hash of some number of fields or properties that uniquely\nidentify this content. For example, a \"stories to read\" Now card may be\nuniquely identified by a canonical URL for the story.\nPieces of content with the same ID (and domain and type) will exhibit the\nfollowing behavior:\n- The client will never display two versions of the content at once.\n  An update will always replace the prior version of the content.\n- Metrics pipelines will consider this content a single card for purposes\n  of computing \"boolean views\" and similar metrics.\n- Dismisses on one version of the content will be considered to \"match\"\n  against newer versions of the content.\nIt's not necessary that the pieces of content with the same ID are\notherwise identical--they may reflect fresher information about the same\nsemantic event, or even be rendered in a substantially different fashion.\nIt is up to the owner of the content_domain to decide on an ID scheme that\nmatches their desired functionality.\n\nID may be derived from precise location for some content (e.g. at-a-place),\nhowever, it is always the location of a business or landmark and not the\nuser. Developers must NOT use actual precise user location to generate\nthis field. See go/now-pdd#bookmark=id.2ajh7tf2t50q for more info.",
                    "format": "uint64",
                    "type": "string"
                },
                "type": {
                    "description": "The type of content this represents",
                    "enum": [
                        "TYPE_UNDEFINED",
                        "CARD",
                        "NOTIFICATION",
                        "CLUSTER",
                        "FEATURE",
                        "FEED_PROTOCOL",
                        "PIET_SHARED_STATE",
                        "TREE_STRUCTURE",
                        "COLLECTION",
                        "TOKEN"
                    ],
                    "enumDescriptions": [
                        "Undefined type - DO NOT USE",
                        "A Now card, specified by an 'sidekick.EntryTreeNode' proto.",
                        "A notification, specified by a 'sidekick.Notification' proto.",
                        "A cluster, which is a set of cards united by a NeedBundle.",
                        "A feature, which is the indivisible unit of Feed content, e.g., an\ninterest header, a tray/carousel item, etc.",
                        "A ContentId created by the FeedQuery endpoint using the open-source Feed\nprotocol.",
                        "A ContentId identifying a shared state.",
                        "A ContentId used only for identifying nodes in a tree structure.",
                        "A ContentId for a collection.",
                        "A ContentId for a token, e.g. a NextPage token."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ContentUpdateItemEntry": {
            "description": "A content update item.\nDepending on the entry source generating this card,\nthe general-purpose fields of this message could contain PII\nso they should never be logged.",
            "id": "Sidekick__ContentUpdateItemEntry",
            "properties": {
                "attribution": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Any attribution for the item, the source of the content."
                },
                "attributionPhoto": {
                    "$ref": "Sidekick__Photo",
                    "description": "The optional photo to be displayed with the attribution."
                },
                "cardAction": {
                    "description": "Generic actions that may be displayed at the bottom of the card.",
                    "items": {
                        "$ref": "Sidekick__ClickAction"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Any metadata or url to be presented, for example\n\"Google Blog - 8 days ago\"."
                },
                "openInReader": {
                    "description": "True if the entry should be opened in the reader web-view.\nDEPRECATED Jan-2016",
                    "type": "boolean"
                },
                "photo": {
                    "$ref": "Sidekick__Photo",
                    "description": "The photo that may be associated with the content."
                },
                "snippet": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Snippets of the actual content. Note that the snippet is only shown on the\ncard in the case where this is the sole item in a content update list.\nSee http://b/18560099."
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The title string."
                },
                "useGutterlessLayout": {
                    "description": "The client should not use the gutter layout if this option is set to true.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__ContentUpdateListEntry": {
            "description": "A content update list.",
            "id": "Sidekick__ContentUpdateListEntry",
            "properties": {
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The title for the list."
                }
            },
            "type": "object"
        },
        "Sidekick__ContentUpdateRow": {
            "description": "A single row in the multi-row \"content update\" style cards that aggregate\nmultiple items of similar content.",
            "id": "Sidekick__ContentUpdateRow",
            "properties": {
                "attribution": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Attribution string to display with the content, e.g. \"NY times\""
                },
                "gutterIcon": {
                    "$ref": "Sidekick__ModuleIcon"
                },
                "image": {
                    "$ref": "Sidekick__PhotoWithAttribution",
                    "description": "Photo to display with this row"
                },
                "justification": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Small accompanying text, e.g. \"Because you searched for...\""
                },
                "metadata": {
                    "description": "Alternative mechanism for specifying content text or other structured\ncard content.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "showFullImage": {
                    "description": "Whether to show full image or crop it to fit the placeholder.",
                    "type": "boolean"
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Main text content of the row"
                }
            },
            "type": "object"
        },
        "Sidekick__CurrencyExchangeEntry": {
            "id": "Sidekick__CurrencyExchangeEntry",
            "properties": {
                "defaultLocalExchangeAmount": {
                    "description": "The default amount to show in the absence of user input.\nNormally 1, but could be 100 or 1000 in countried with inflated currencies.",
                    "format": "int32",
                    "type": "integer"
                },
                "homeCurrency": {
                    "description": "3-letter currency code, e.g. USD, EUR, etc.",
                    "type": "string"
                },
                "localCurrency": {
                    "description": "3-letter currency code, e.g. USD, EUR, etc.",
                    "type": "string"
                },
                "localToHomeRate": {
                    "format": "float",
                    "type": "number"
                },
                "title": {
                    "description": "Text to show on the card, e.g. \"Today's exchange rate\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__DiscUnion": {
            "description": "A region expressed as set of discs, possibly overlapping and\nnon-contiguous.",
            "id": "Sidekick__DiscUnion",
            "properties": {
                "radiusGroups": {
                    "items": {
                        "$ref": "Sidekick_DiscUnion_RadiusGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__DiscoverSurveyRendering": {
            "description": "Information needed to render and log a survey in the feed.",
            "id": "Sidekick__DiscoverSurveyRendering",
            "properties": {
                "smileScaleSurvey": {
                    "$ref": "Sidekick__SmileScaleSurvey",
                    "description": "The information needed for a 5 smile scale single question survey. If this\nis filled out than the type should be SMILE_SCALE."
                },
                "triggerCondition": {
                    "enum": [
                        "UNDEFINED",
                        "ON_FEED_SHOW"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "UNKNOWN",
                        "SMILE_SCALE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__DisplayProperties": {
            "description": "The properties associated with a card or collection.\nThese properties do not describe functional use or state changing behaviors.\nThey only should be used for displaying or animations. This includes the\nbackground associated with the collection.",
            "id": "Sidekick__DisplayProperties",
            "properties": {
                "alignment": {
                    "description": "Specifies how wide the content should be.\nNote that as of Q2 2019 it is not yet implemented in iOS.\nStream edge examples:\nhttps://hsv.googleplex.com/5073915915272192\nhttps://hsv.googleplex.com/5202608570499072\nCard edge example:\nhttps://hsv.googleplex.com/5093434528366592",
                    "enum": [
                        "UNKNOWN_ALIGNMENT",
                        "ALIGN_TO_CARD_EDGE",
                        "ALIGN_TO_STREAM_EDGE"
                    ],
                    "enumDescriptions": [
                        "Undefined behavior",
                        "If an entry with NO_DECORATIONS (i.e. borderless card) uses\nALIGN_TO_CARD_EDGE, it will have the same amount of horizontal\nmargin/padding outside the content as a regular card. The content\n(excluding any borders) will line up.",
                        "The content becomes as wide as the stream. On a phone in portrait mode,\nthis is typically the edge of the screen. In landscape mode or on a\ntablet, there is a maximum width for content, which this still respects.\nDo not use ALIGN_TO_STREAM_EDGE for cards with borders."
                    ],
                    "type": "string"
                },
                "backgroundDecoration": {
                    "description": "Specifies what kind of decoration (i.e. card borders) should go behind the\nentry. Setting Position will no longer automatically set card borders--they\nwill only be added if the Decoration is set to CARD_BORDERS.\nNO_DECORATIONS is a borderless card--nothing extra is set behind the entry.\nBackground flares are separate, and can still be used if NO_DECORATIONS is\nset.\nNote that as of Q2 2019 Decoration is not yet implemented in iOS.",
                    "enum": [
                        "UNKNOWN",
                        "NO_DECORATION",
                        "CARD_BORDERS"
                    ],
                    "enumDescriptions": [
                        "",
                        "NO_DECORATION is borderless--no decoration behind card.",
                        ""
                    ],
                    "type": "string"
                },
                "backgroundFlare": {
                    "$ref": "Sidekick__BackgroundFlare",
                    "description": "The flare associated with the card collection. This is the colored splash\non the background of the collection."
                },
                "groupDesignation": {
                    "description": "This describes groupings of entries used for visuals/animations.\nThis is not meant to be a functional grouping.\nThis is used per entry\nScreenshot of examples:\nhttps://screenshot.googleplex.com/jt15oKqb7ng.png\nhttps://screenshot.googleplex.com/t38yFu8oSJi.png",
                    "format": "int32",
                    "type": "integer"
                },
                "position": {
                    "description": "Represents the position of this entry within a card (TOP, MIDDLE, BOTTOM,\nor SINGLE; if this entry represents an entire card). If this entry\nrepresents a cluster header, it uses the SINGLE value. These values are\nused to decorate the entry's view appropriately (i.e. draw the right card\nborder for each position). BOTTOM_NO_MARGIN allows for an entry to be drawn\nwith the BOTTOM drawable but without adding additional padding between\nelements.\nSECTION is deprecated. Please use Decoration.NO_DECORATION for borderless\ncards. Note that Decoration is not yet supported in iOS, so both SECTION\nand NO_DECORATION can be specified if necessary.\nScreenshot of examples:\nhttps://screenshot.googleplex.com/jt15oKqb7ng.png\nhttps://screenshot.googleplex.com/t38yFu8oSJi.png",
                    "enum": [
                        "NONE",
                        "TOP",
                        "MIDDLE",
                        "BOTTOM",
                        "SECTION",
                        "SINGLE",
                        "BOTTOM_NO_MARGIN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "This is a module with no border.",
                        "This is a module with a TOP and BOTTOM border",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__DistanceMetadata": {
            "description": "Displays the user's current distance from a location, e.g. \"400ft\".\nRequires: location",
            "id": "Sidekick__DistanceMetadata",
            "properties": {
                "location": {
                    "$ref": "Sidekick__Location"
                }
            },
            "type": "object"
        },
        "Sidekick__EmbeddedModule": {
            "description": "Module that contains another within it.",
            "id": "Sidekick__EmbeddedModule",
            "properties": {
                "details": {
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "embeddedCardModule": {
                    "$ref": "Sidekick__CardModule"
                },
                "icon": {
                    "$ref": "Sidekick__ModuleIcon"
                },
                "style": {
                    "enum": [
                        "CORNER_ICON_DETAILS_BELOW",
                        "CENTERED_OVERLAY"
                    ],
                    "enumDescriptions": [
                        "# Icon is in the upper right above the embedded module\n\n|          ICON|\n|              | <- Module\n|______________|\n# |   DETAILS    |",
                        "# Icon and details are centered as a layer above the embedded module\n\n|              |\n|    ICON      | <- Module\n# |   DETAILS    |"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Entry": {
            "description": "An entry is a union of different types.\nOnly one of the specific entry fields should be present.",
            "id": "Sidekick__Entry",
            "properties": {
                "adExpirationCriteria": {
                    "$ref": "SearchNowAds__AdExpirationCriteria"
                },
                "adMetadata": {
                    "$ref": "SearchNowAds__AdMetadata",
                    "description": "AdMetadata will contains all the information that the client needs to\nknow to perform operations like view reporting for Ads viewed.\nThis should be attached to the GroupEntry."
                },
                "agendaEntry": {
                    "$ref": "Sidekick__AgendaEntry",
                    "description": "The main entry for an agenda list card."
                },
                "appSuggestionEntry": {
                    "$ref": "Sidekick__AppSuggestionEntry",
                    "description": "Entry for suggested applications based on the user's usage and location."
                },
                "appSuggestionListEntry": {
                    "$ref": "Sidekick__GenericListEntry",
                    "description": "Header for the apps suggestions list card."
                },
                "attractionEntry": {
                    "$ref": "Sidekick__AttractionEntry",
                    "description": "An individual attraction found within the attraction list.  This\nis used for clients which support the group_entry form of the\nAttractionListEntry (e.g. Android client > 3.6)."
                },
                "attractionListEntry": {
                    "$ref": "Sidekick__AttractionListEntry",
                    "description": "The list level information for the attraction list.\nFor legacy clients (e.g. Android client < 3.7), the rolled up attractions\nin a single Entry.  For newer clients, use a group_entry for an\nattractions list card."
                },
                "backOfCardHeader": {
                    "$ref": "Sidekick__BackOfCardHeader",
                    "description": "The header associated with the back of the card."
                },
                "barcodeEntry": {
                    "$ref": "Sidekick__BarcodeEntry"
                },
                "billEntry": {
                    "$ref": "Sidekick__BillEntry",
                    "description": "Entry for a personal bill extracted from Gmail."
                },
                "billListEntry": {
                    "$ref": "Sidekick__BillListEntry",
                    "description": "Entry for list of personal bills extracted from Gmail."
                },
                "blacklistedSurfaces": {
                    "description": "An optional list of surfaces that this entry should not be displayed on.\nIf the currently viewed surface is present in this property, then this\nentry will not be shown.\n\nNote: this is an AGSA-only feature.",
                    "enumDescriptions": [
                        "",
                        "SearchNowActivity.",
                        "Google Now Launcher (GEL) -1 screen.",
                        "Pixel Launcher -1 screen (go/acetone-now).",
                        "Now on Tap assist layer.",
                        "Now on Tap selection layer.",
                        "Second Screen Activity.",
                        "CustomizeActivity.",
                        "ImmersiveActionsActivity.",
                        "System notification.",
                        "Actions UI AgendaController.",
                        "MoMO (Monet on Minus One) Implementation of Acetone.",
                        "Monet feed in SearchNowActivity (go/agsa-snarf).",
                        "Lightspeed experiment",
                        "Second screen via MonetActivity (go/smore-stories).",
                        "Lobby-on-Monet.",
                        "Actions UI cards in VelvetActivity.",
                        "Card sync for Android Wear.",
                        "Assistant HQ (go/opahq)."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_SURFACE",
                            "SEARCH_NOW_ACTIVITY",
                            "GOOGLE_NOW_LAUNCHER",
                            "ACETONE_OVERLAY",
                            "ASSIST_LAYER",
                            "ASSIST_SELECTION_LAYER",
                            "SECOND_SCREEN_ACTIVITY",
                            "CUSTOMIZE_ACTIVITY",
                            "IMMERSIVE_ACTIONS",
                            "PLATFORM_NOTIFICATION",
                            "ACTIONS_AGENDA",
                            "ACETONE_OVERLAY_MOMO",
                            "SEARCH_NOW_MONET",
                            "LIGHTSPEED",
                            "SECOND_SCREEN_MONET",
                            "DEPRECATED_LOBBY_ACTIVITY",
                            "DEPRECATED_ACTIONS_UI",
                            "DEPRECATED_WEAR_CARD_SYNC",
                            "DEPRECATED_ASSISTANT_HQ"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "browseModeAuthorStoryEntry": {
                    "$ref": "Sidekick__ResearchPageEntry",
                    "description": "Entry for a single URL recommendation in the author lure."
                },
                "browseModeLureAuthorEntry": {
                    "$ref": "Sidekick__ResearchTopicEntry",
                    "description": "Entry for a launch card for browse mode for an author lure."
                },
                "browseModeLureInterestUpdateEntry": {
                    "$ref": "Sidekick__ResearchPageEntry",
                    "description": "Entry for a launch card for browse mode for an interest update lure."
                },
                "browseModeLureTravelEntry": {
                    "$ref": "Sidekick__ImageLureCardEntry",
                    "description": "Entry for a launch card for browse mode for a travel lure"
                },
                "browseModeWebLinkEntry": {
                    "$ref": "Sidekick__ResearchPageEntry",
                    "description": "Entry for a single URL recommendation in browse mode."
                },
                "calendarEntry": {
                    "$ref": "Sidekick__CalendarEntry",
                    "description": "The specific entry for a calendar card."
                },
                "canIdentifyByContentIdAndSemanticProperties": {
                    "description": "If this Entry can be identified by id and semantic properties.",
                    "type": "boolean"
                },
                "canShowOnWearable": {
                    "description": "If false, this card should be suppressed in the wearables stack.",
                    "type": "boolean"
                },
                "carRentalEntry": {
                    "$ref": "Sidekick__CarRentalEntry",
                    "description": "Card for displaying car rentals."
                },
                "cardAction": {
                    "description": "List of card actions that can be taken on this Entry. CardActions are a\nconcept that applies to Lotic cards. See go/lotic-card-actions",
                    "items": {
                        "$ref": "Sidekick__CardAction"
                    },
                    "type": "array"
                },
                "cardCap": {
                    "$ref": "Sidekick__CardCap",
                    "description": "The card cap is a standard bit of UI that appears on all cards when the\nCardCap is defined. The card cap on group entry would replace the header of\nmodule list entry for list cards."
                },
                "cardMenuVeInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for the card menu UI element and information for\nclient on how to log it. Open card menu button ve_info is attached to the\nentry_action for the MENU_OPEN action. The close card menu VE used to\ncapture dismissing the card menu is attached to the MENU_CLOSE\nentry_action. The ve_info for the card menu itself, used for hide/show\ngrafting and attention logging is attached here."
                },
                "clearcutAppData": {
                    "$ref": "SearchNow__NowClearcutAppData",
                    "description": "Application/content-specific data that needs to be round-tripped in\nVE logged events sent via Clearcut. Consumed in Clearcut server code.\nSee go/now-ve-logging"
                },
                "clockEntry": {
                    "$ref": "Sidekick__ClockEntry"
                },
                "closetInterestEntry": {
                    "$ref": "Sidekick__ClosetInterestEntry",
                    "description": "The Entry which contain data for one interest: go/now-closet-proto."
                },
                "closetQuestionEntry": {
                    "$ref": "Sidekick__ClosetQuestionEntry",
                    "description": "The Entry which contain data for one question: go/now-closet-proto."
                },
                "closetRowTemplate": {
                    "description": "The specific entry for cards & notification settings in closet.",
                    "items": {
                        "$ref": "Sidekick__ClosetRowTemplate"
                    },
                    "type": "array"
                },
                "clusterMetadata": {
                    "$ref": "Sidekick__ClusterMetadata",
                    "description": "Metadata containing details of a lotic cluster (e.g. title, color)."
                },
                "collectionComponent": {
                    "description": "This specifies which component of the collection this entry represents. In\nfeed V2, each component of the collection is represented as a separate\nentry so that we can measure the engagement on each of them separately. For\nmore details, see go/feedv2-entrytree.",
                    "enum": [
                        "UNSPECIFIED_COLLECTION_COMPONENT",
                        "INTEREST_HEADER",
                        "HERO_CARD",
                        "HERO_CAROUSEL_CARD",
                        "TRAY_CARD",
                        "FOOTER",
                        "MULTI_PHOTO_ITEM",
                        "MULTI_PHOTO_HERO"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "componentEntry": {
                    "$ref": "Sidekick__ComponentEntry",
                    "description": "Entry for displaying a card using the Component CML language."
                },
                "contactCardEntry": {
                    "$ref": "Sidekick__ContactCardEntry",
                    "description": "Entry for displaying contact cards"
                },
                "contentDomain": {
                    "description": "The content origin of this Entry, such as \"starbucks.3p.f\". A content\ndomain is a '.' string of ASCII characters that follows DNS domain name\nconventions.\n\nContent domains provide a means for partitioning content into distinct\nnamespaces.  Content operations operate on namespaces so content\ndomains provide a way to update a distinct segment of the content\nstream.\n\nAn important use of content domains is to distinguish between content\nthat is pulled by refresh and content that is pushed (it is also\npossible to have content that is both pushed and pulled).  We want\npush-only content to survive a full refresh so we give it a distinct\ncontent domain from pulled content.  The common convention is to\nuse \".f\" for frontend content (\"stories.f\") and \".p\" for content that\nis pushed (\"weather.p\").\n\nAs a first order procedure it is ok to give one domain to content that is\nalways pulled and another domain to content that is always pushed but\nyou should never assume that this pattern will hold.  Some content will\nmigrate over time from being pulled to being pushed.  Such content should\nbe able to keep its content domain across the migration.  An example\nis \"alerts.pa\" for public alerts.  It started in the frontend but is\nbeing migrated to be push-only.",
                    "type": "string"
                },
                "contentId": {
                    "$ref": "Sidekick__ContentId",
                    "description": "This id uniquely identifies a card based on per-card identifiers."
                },
                "contentUpdateItemEntry": {
                    "$ref": "Sidekick__ContentUpdateItemEntry",
                    "description": "Entry for a content update item (website, news, etc.).\nTODO(kshrum) log after cr/61583878"
                },
                "contentUpdateListEntry": {
                    "$ref": "Sidekick__ContentUpdateListEntry",
                    "description": "Entry for a content update list.\nTODO(kshrum) log after cr/61583878"
                },
                "currencyExchangeEntry": {
                    "$ref": "Sidekick__CurrencyExchangeEntry"
                },
                "defaultDisplay": {
                    "description": "The default display type to render.",
                    "enum": [
                        "UNKNOWN",
                        "SMALL",
                        "FULL_CARD",
                        "NOTIFICATION"
                    ],
                    "enumDescriptions": [
                        "If display type is unspecified, the entry might be dropped or rendered\narbitrarily by the client.",
                        "Render with the small_ui modules.",
                        "Render a full card UI with the specific entry data.",
                        "Only render the notification, not the card.\ngo/agsa-headless-notifications"
                    ],
                    "type": "string"
                },
                "detailsAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "The ClickAction for when the user clicks on this Entry.\nMany older entries either determined the appropriate click response on the\nclient based on the semantic fields, or buried the ClickAction in the\nsemantic proto.  Future development should use this ClickAction."
                },
                "displayProperties": {
                    "$ref": "Sidekick__DisplayProperties",
                    "description": "The visual properties associated with a card or collection."
                },
                "elementEntry": {
                    "$ref": "Sidekick_Entry_ElementEntry"
                },
                "eligibleForImmediateSwap": {
                    "description": "Indicates the entry is eligible to be immediately swapped while the user\nis still in session.  In an effort to display timely updates to the user\nas quickly as possible, some cards (i.e. stocks or weather) will be\nimmediately rendered in-place without a re-deal. For more details, see:\ngo/proactive-for-everyone-design. Supported in AGSA client version 6.12+",
                    "type": "boolean"
                },
                "encodedEventId": {
                    "description": "Proto serialized byte array of an EventIdMessage containing the server ip,\nprocess id, and timestamp. NOT WebSafeEncoded as is often used in Search\nto construct URL-safe representations.\nSet by the client on entries that were pushed by cloud to client messaging.\nThis event ID corresponds to the event ID of the most recent frontend\nserver response that was sent to the client. This field will be empty for\nentries that are returned by the frontend. Not logged since it is decoded\ninto the event_id extension for logging.",
                    "format": "byte",
                    "type": "string"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields. Use this field to roundtrip\nfields of interest to the server that were added after the version of the\nclient that the server is currently talking to.",
                    "format": "byte",
                    "type": "string"
                },
                "entryAction": {
                    "description": "The set of actions available for this entry.",
                    "items": {
                        "$ref": "Sidekick__Action"
                    },
                    "type": "array"
                },
                "entryId": {
                    "$ref": "Sidekick__EntryId",
                    "description": "Versioned ID of the entry. This id uniquely identifies a card based on\nuser-visible entities on the card.\n\nNOTE: This field should be considered deprecated in favor of using\nContentId, but should still be populated for backwards compatibility."
                },
                "entryUpdateId": {
                    "description": "Equivalence fingerprint used to identify a single entry (usually\na card). This field is set whenever an entry supports being updated via\ncloud to client messaging or partial refreshes. When the server responds\nto fetches the returned entry will contain an entry_update_id. Later,\nwhen the server describes updates, it sends Entry messages to the client\nand the client matches stored copies with update entries using the id.\nThe id only needs to be unique within a particular EntryType.\n\nNOTE: This field should be considered deprecated in favor of using\nContentId, but should still be populated for backwards compatibility.",
                    "format": "int64",
                    "type": "string"
                },
                "entryUpdateTimestampMillis": {
                    "description": "The time in millis when this entry was generated. The timestamp is used (1)\nso that the client can ignore out-of-sequence partial Entries and (2) to\ngauge card freshness.",
                    "format": "int64",
                    "type": "string"
                },
                "eventEntry": {
                    "$ref": "Sidekick__EventEntry"
                },
                "eventListEntry": {
                    "$ref": "Sidekick__EventListEntry"
                },
                "facetsEntry": {
                    "$ref": "Sidekick_Entry_FacetsEntry"
                },
                "feedCollectionEntry": {
                    "$ref": "Sidekick__FeedCollectionEntry",
                    "description": "The entry which contains metadata for a collection in the interest feed.\nThis should only be used in a group_entry."
                },
                "feedbackData": {
                    "description": "Extra data to add to feedback reports. Not logged since it may contain PII.",
                    "items": {
                        "$ref": "Sidekick__FeedbackData"
                    },
                    "type": "array"
                },
                "flightStatusEntry": {
                    "$ref": "Sidekick__FlightStatusEntry",
                    "description": "The specific entry for a flight status card."
                },
                "frequentPlaceEntry": {
                    "$ref": "Sidekick__FrequentPlaceEntry",
                    "description": "The entry-specific protocol buffers. These are a union."
                },
                "genericCardEntry": {
                    "$ref": "Sidekick__GenericCardEntry"
                },
                "genericTableEntry": {
                    "$ref": "Sidekick__GenericTableEntry",
                    "description": "The title for a list of sport highlights."
                },
                "hotelPlaceEntry": {
                    "$ref": "Sidekick__FrequentPlaceEntry",
                    "description": "Card for displaying hotel reservations."
                },
                "inlineInjectedCollectionComponent": {
                    "description": "Indicates whether this Entry should be inline injected, for Entries that\nrepresents a component of a Collection (collection_component also\nspecified). If true, this Entry will not be rendered until an inline\ninjection action occurs. For injecting an entire carousel, this should be\nspecified using the corresponding CarouselControl of FeedCollectionEntry\ninstead, e.g. tray_carousel_control.inline_injected_collection_component.",
                    "type": "boolean"
                },
                "isEntryOfInterest": {
                    "description": "Whether this is the entry of interest. This is used to indicate to the\nclient that it should scroll to the card represented by this entry.\nThis field is only intended to be used on a second page (requested with\na specific interest).",
                    "type": "boolean"
                },
                "isInternalOnly": {
                    "description": "This field is deprecated. It has been replaced by release_stage (below) and\nwill be removed once clients are updated.",
                    "type": "boolean"
                },
                "isUndismissable": {
                    "description": "Indicates the entry is un-dismissable by design, and it should not be\n'swipeable' on client.",
                    "type": "boolean"
                },
                "lastModifiedByPush": {
                    "description": "If an Entry has been last modified client side by a push update.",
                    "type": "boolean"
                },
                "lastTrainHomeEntry": {
                    "$ref": "Sidekick__FrequentPlaceEntry",
                    "description": "Card for displaying last train."
                },
                "loggedOnDeviceMetadata": {
                    "$ref": "Sidekick__LoggedOnDeviceMetadata",
                    "description": "Additional data about a card that originated from device, which is approved\nfor logging."
                },
                "mallDirectoryEntry": {
                    "$ref": "Sidekick__MallDirectoryEntry",
                    "description": "Entry for a mall directory card."
                },
                "metadata": {
                    "$ref": "Sidekick__EntryMetadata",
                    "description": "Basic information about the entry needed to enable proper logging and\nanalysis see (go/now-eua-improvements-dd). The client will populate the\nmain fields in EntryMetadata and will copy metadata to ExecutedUserAction\nfor cluster and group-level Entries."
                },
                "moduleEntry": {
                    "$ref": "Sidekick__ModuleEntry",
                    "description": "Entry for cards composed of modules constructed server-side"
                },
                "moduleListEntry": {
                    "$ref": "Sidekick__ModuleListEntry",
                    "description": "List entry represented by modules."
                },
                "moonshineEventTicketEntry": {
                    "$ref": "Sidekick__MoonshineEventTicketEntry",
                    "description": "Card for displaying moonshine event tickets."
                },
                "movieTicketEntry": {
                    "$ref": "Sidekick__MovieTicketEntry"
                },
                "multiStateIcons": {
                    "items": {
                        "$ref": "Sidekick__MultiStateIcon"
                    },
                    "type": "array"
                },
                "nearbyPlaceEntry": {
                    "$ref": "Sidekick__FrequentPlaceEntry"
                },
                "newsEntry": {
                    "$ref": "Sidekick__NewsEntry"
                },
                "notification": {
                    "$ref": "Sidekick__Notification",
                    "description": "If this entry also has a notification associated with it, this is the\nrelated information."
                },
                "ocr": {
                    "$ref": "Assist__Ocr",
                    "description": "The OCR output, if performed by the server.\nThis field is only populated if the client uploaded a screenshot and did\nnot upload an OCR output (through AssistData.ocr).\nThis is used to implement selected text suggestions in Now on Tap."
                },
                "offlineStrategy": {
                    "description": "The offline strategy for this particular entry.",
                    "enum": [
                        "DISABLED",
                        "SHOW",
                        "SHOW_AND_PRECACHE_CONTENT"
                    ],
                    "enumDescriptions": [
                        "The card will not be shown when the device is offline.\nNOTE: This feature is not currently implemented/supported.",
                        "The card will be shown when the device is offline, but some artifacts\n(e.g. images) may not be shown unless they were already retrieved\nby the device and in the cache (by default, artifacts are not fetched\nunless they would be seen by the user).",
                        "The card will be shown and its contents should be prefetched and cached\nwhen it is first loaded (e.g., barcode cards), even if not yet seen\nby the user. Use the precache_image_url field to specify what should\nbe prefetched. This also enables the client to prefetch\na secondary screen by adding an entry_action with precache_content\nset to true. Offline content will not be refreshed until the user views\nthe card while back online."
                    ],
                    "type": "string"
                },
                "originatedFromDevice": {
                    "description": "If this entry originated on the client rather than the now frontend.",
                    "type": "boolean"
                },
                "originatedFromPush": {
                    "description": "If this Entry was originally pushed rather than polled.",
                    "type": "boolean"
                },
                "packageTrackingEntry": {
                    "$ref": "Sidekick__PackageTrackingEntry"
                },
                "packageTrackingListEntry": {
                    "$ref": "Sidekick__GenericListEntry",
                    "description": "Package tracking card entries. For legacy clients (Android < 4.0), only\npackage_tracking_entry is used. For other clients,\npackage_tracking_list_entry is used to represent the list of packages and\npackage_tracking_entry is used to represent individual cards."
                },
                "parkable": {
                    "description": "If set, the client may park this entry (i.e., store it unrendered) when the\ntrigger condition (field 79) evalutate to false. The client may\nperiodically reevaluate the trigger conditions and render the entry if the\ntrigger condition becomes true. See http://go/now-parked-entries\nNote: Set this field to true for client versions 4.2 and higher only. Older\nclients ignore the trigger condition from the frontend and would show a\ncard that should be parked.",
                    "type": "boolean"
                },
                "personalizedNewsEntry": {
                    "$ref": "Sidekick__NewsEntry",
                    "description": "Entry with news personalized by the user's interests.\nSince we are reusing the existing NewsEntry and some of the fields\nin it are logged too widely for this new use case, we cut off logging\nat this level to only 5 weeks and not permanent."
                },
                "pietEntry": {
                    "$ref": "Sidekick_Entry_PietEntry"
                },
                "precacheImageUrl": {
                    "description": "Image URLs that should be prefetched and cached for this entry.\nThis field should only be populated if the offline_strategy is\nSHOW_AND_PRECACHE_CONTENT.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "publicAlertEntry": {
                    "$ref": "Sidekick__PublicAlertEntry"
                },
                "rankingScore": {
                    "$ref": "Sidekick__RankingScore",
                    "description": "The score used to rank this entry relative to others.\nAGSA no longer requires this field as of 8.16."
                },
                "reason": {
                    "description": "A user-targeted justification for showing this entry.\nDEPRECATED - please use justification instead.",
                    "type": "string"
                },
                "releaseStage": {
                    "enum": [
                        "EXPERIMENTAL",
                        "DOGFOOD",
                        "PROD"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "reminderData": {
                    "$ref": "Sidekick__ReminderData",
                    "description": "Some Entries (such as EventEntry, MovieEntry, AlbumEntry and more) may be\nformatted as a reminder rather than in their standard format. If so, they\nwill contain a ReminderData field populated with (at the minimum) a\nreminder task id."
                },
                "reminderEntry": {
                    "$ref": "Sidekick__ReminderEntry"
                },
                "reminderListEntry": {
                    "$ref": "Sidekick__GenericListEntry"
                },
                "researchTopicEntry": {
                    "$ref": "Sidekick__ResearchTopicEntry"
                },
                "restaurantPlaceEntry": {
                    "$ref": "Sidekick__FrequentPlaceEntry",
                    "description": "Card for displaying restaurant reservations."
                },
                "screenAssistMetadata": {
                    "$ref": "Sidekick__ScreenAssistEntryMetadata",
                    "description": "Entry metadata that is specific to screen assist. This is not a part of\nrendering the entry content, but can affect handling it as a whole."
                },
                "screenAssistNowFilter": {
                    "$ref": "Assist__ScreenAssistNowStreamFilter",
                    "description": "A filter to selectively replace this entry with another entry from the Now\nstream. This is used by Now on Tap."
                },
                "semanticProperties": {
                    "$ref": "Sidekick__SemanticProperties",
                    "description": "Semantic properties of the entry, used to dedupe it against other entries\nfor dismissal or similar purposes. See http://go/now-content-ids or\nsemantic_properties.proto for more details."
                },
                "smallUi": {
                    "$ref": "Sidekick__ModuleEntry",
                    "description": "Module(s) used to render a more compact version of the card."
                },
                "sportEventEntry": {
                    "$ref": "Sidekick__SportEventEntry",
                    "description": "The title for a list of sport lures."
                },
                "sportScoreEntry": {
                    "$ref": "Sidekick__SportScoreEntry",
                    "description": "The list entry to represent a flight(boarding pass) list card."
                },
                "staleResponse": {
                    "enum": [
                        "NOOP",
                        "REFRESH_TYPE",
                        "REMOVE"
                    ],
                    "enumDescriptions": [
                        "Do nothing.",
                        "Partial refresh of all cards of the given type.",
                        ""
                    ],
                    "type": "string"
                },
                "stockQuoteEntry": {
                    "$ref": "Sidekick__StockQuoteEntry",
                    "description": "An individual stock in the stock quotes list card."
                },
                "stockQuoteListEntry": {
                    "$ref": "Sidekick__StockQuoteListEntry",
                    "description": "For legacy clients (e.g. Android client < 3.3), the rolled up list of\nstocks in a single Entry.\nFor newer clients (e.g. Android client >= 3.3), the group_entry for the\nstock quotes list card. Each stock is represented by a leaf Entry\ncontaining stock_quote_entry."
                },
                "tabType": {
                    "description": "The Tab for the Entry when the Now Stream is being split by the client.",
                    "enum": [
                        "UNKNOWN_TAB",
                        "INTERESTS_TAB",
                        "UPDATES_TAB",
                        "ASSISTANT_HQ_TAB",
                        "RECENTS_TAB",
                        "SEARCH_TAB",
                        "ASSISTANT_TAB",
                        "DRAWER_TAB",
                        "MAX_TAB_VALUE"
                    ],
                    "enumDescriptions": [
                        "No target for the card.  Treatment of cards with this\nwill be defined by behavior on the client.",
                        "The Entry should be on the Interests tab.",
                        "The Entry should be on the Updates tab.",
                        "The Entry should appear in the Assistant HQ.",
                        "The Entry should be on the Recents tab, see go/recently.",
                        "The Entry should be on the Search tab, see go/agsa-bottom-navbar-in-srp.",
                        "The Entry should be on the Assistant tab, see go/opa-jaws-design.",
                        "The Entry should be on the Drawer tab, see\ngo/agsa-roundy-drawer-713-redesign. This is a temporary workaround",
                        "This marks the maximum number of tabs, and is used to\ncreate internal tab data structures in the client.  When\nadding new tabs please update this value.\nNOTE: This is never logged because it's not a valid tab value."
                    ],
                    "type": "string"
                },
                "talkBack": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The talkback string is created by the EntrySource and is read by a screen\nreader representing the contents of the card for Accessability.  This is\nnot logged since the details of the Entry are found in the Entry and this\nis really a string version of those details."
                },
                "timeToLeaveDetails": {
                    "$ref": "Sidekick__TimeToLeaveDetails",
                    "description": "The time to leave details for cards which support events that contain\nCommuteSummary and start time."
                },
                "trafficIncidentEntry": {
                    "$ref": "Sidekick__TrafficIncidentEntry",
                    "description": "Card showing traffic incidents a user is likely to hit."
                },
                "trainingQuestionEntry": {
                    "$ref": "Sidekick__QuestionEntry",
                    "description": "Card for displaying an \"unlinked\" icebreaker question.\nThe question will be displayed as the primary content on\nthe front of a card.\nThis question is not associated with any other entry, and is therefore\nmutually exclusive with the other *_entry fields in this message.\n\nThis should also not be confused\nwith a \"back-of-the-card\" question, which is the training_question_node\nfield below."
                },
                "trainingQuestionNode": {
                    "description": "List of training question trees associated with this Entry that the user\ncan answer to train the Google Now app.\nFor example, for a SPORT_SCORE entry this would start with\n\"Interested in sports?\" and, if the answer is \"Yes\", continue\nwith \"Interested in <team>?\".\nThese are also known as \"back-of-the-card\" questions.\nThis field is stripped out when the Entry is sent back from the client to\nthe server in an ExecutedUserAction.",
                    "items": {
                        "$ref": "Sidekick__QuestionNode"
                    },
                    "type": "array"
                },
                "transitStationEntry": {
                    "$ref": "Sidekick__TransitStationEntry",
                    "description": "The specific entry for a transit station card."
                },
                "transportationEntry": {
                    "$ref": "Sidekick__TransportationEntry",
                    "description": "Card for displaying train and bus transportations."
                },
                "triggerCondition": {
                    "$ref": "Sidekick__TriggerCondition",
                    "description": "Condition under which this entry is relevant. In general, irrelevant\nentries should not be rendered, but may become relevant if, for\nexample, the user's location changes or a push message changes the\ncondition.\nYou also need to specify stale_response if you want to take any action\n(e.g., removing the card) when the Entry has become stale.\nAlso, for a group (list) entry to be removed, this must be added to\nall group items, not just the group_entry itself.\nDEPRECATED: this field is still supported for unmigrated use cases, but no\nnew use cases/ should be built on it. Use RequestSchedule instead."
                },
                "triggersNewContentBadge": {
                    "description": "Indicates that this entry should be considered when determining if there is\nnew content on the device which the client should indicate with a \"badge\"\naffordance.",
                    "type": "boolean"
                },
                "type": {
                    "description": "Content domain should be used in place of entry type.",
                    "enum": [
                        "UNKNOWN",
                        "FREQUENT_PLACE",
                        "UI_NAVIGATION",
                        "WEATHER",
                        "WEATHER_TINY",
                        "WEATHER_LIST",
                        "TRANSIT_STATION",
                        "GENERIC_CARD",
                        "GENERIC_TABLE",
                        "FLIGHT_STATUS",
                        "FLIGHT_LIST",
                        "SPORT_SCORE",
                        "SPORT_LURE_LIST",
                        "SPORT_EVENT",
                        "SPORT_HIGHLIGHT_LIST",
                        "SPORT_HIGHLIGHT",
                        "CALENDAR",
                        "TRANSLATE",
                        "CURRENCY_EXCHANGE",
                        "CLOCK",
                        "NEARBY_PLACE",
                        "PUBLIC_ALERT",
                        "MOVIE_LIST",
                        "STOCK_QUOTE_LIST",
                        "STOCK_QUOTE",
                        "ATTRACTIONS_LIST",
                        "ATTRACTION",
                        "PACKAGE_TRACKING",
                        "PACKAGE_TRACKING_LIST",
                        "NEWS",
                        "BREAKING_NEWS",
                        "HYPERLOCAL_NEWS",
                        "ENTITY_NEWS",
                        "PHOTO_SPOT",
                        "BIRTHDAY_CARD",
                        "EVENT",
                        "MOVIE",
                        "EVENT_LIST",
                        "RESEARCH_TOPIC",
                        "RESEARCH_PAGE",
                        "BARCODE",
                        "GMAIL",
                        "NEARBY_PLACES_LIST",
                        "REAL_ESTATE",
                        "REAL_ESTATE_LIST",
                        "OPEN_HOUSE",
                        "MOVIE_TICKET",
                        "REMINDER",
                        "REMINDER_LIST",
                        "WEBSITE_UPDATE",
                        "WEBSITE_UPDATE_LIST",
                        "GENERIC_TICKET",
                        "BOOK",
                        "ALBUM",
                        "VIDEO_GAME",
                        "TV_EPISODE",
                        "SHARED_TRAFFIC_CARD",
                        "RELEVANT_WEBSITE",
                        "RELEVANT_WEBSITE_LIST",
                        "LAST_TRAIN_HOME",
                        "TV_RECOGNITION",
                        "WALLET_LOYALTY",
                        "HOTEL_PLACE",
                        "RESTAURANT_PLACE",
                        "CAR_RENTAL",
                        "GENERIC_TV_PROGRAM",
                        "CONCERT_TICKET",
                        "TRAINING_QUESTION",
                        "TV_NEWS",
                        "TV_MUSIC",
                        "TV_KNOWLEDGE",
                        "TV_KNOWLEDGE_LIST",
                        "SPORT_EVENT_TICKET",
                        "PROTOTYPE",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE",
                        "BROWSE_MODE_LURE_TRAVEL",
                        "BROWSE_MODE_LURE_AUTHOR",
                        "AT_A_PLACE",
                        "BROWSE_MODE_AUTHOR_STORY",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_ENTITY_LIST",
                        "BROWSE_MODE_ENTITY",
                        "BROWSE_MODE_VIDEO_LIST",
                        "BROWSE_MODE_VIDEO",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_READING_STORY",
                        "THINGS_TO_WATCH",
                        "THINGS_TO_WATCH_TV",
                        "THINGS_TO_WATCH_VOD",
                        "THINGS_TO_WATCH_LURE",
                        "THINGS_TO_WATCH_LIST_LURE",
                        "APP_SUGGESTION",
                        "APP_SUGGESTION_LIST",
                        "PERSONALIZED_NEWS",
                        "CONTACT_SUGGESTION",
                        "CONTACT_SUGGESTION_LIST",
                        "VEHICLE_PARKING_LOCATION",
                        "VEHICLE_PARKING_LOCATION_LIST",
                        "TV_MUSIC_KNOWLEDGE_LIST",
                        "TRANSPORTATION",
                        "TRANSPORTATION_LIST",
                        "TRAFFIC_INCIDENTS",
                        "BILL",
                        "BILL_LIST",
                        "PRODUCT",
                        "PRODUCT_LIST",
                        "IN_STORE",
                        "PRICE_DROP",
                        "TV_RELATED_WEB_SITE_LIST",
                        "TV_RELATED_WEB_SITE",
                        "TV_RELATED_WEB_SITE_KNOWLEDGE",
                        "HOTSEAT_SUGGESTION_LIST",
                        "CONTENT_UPDATE_LIST",
                        "CONTENT_UPDATE_ITEM",
                        "HOTSEAT_APP_SUGGESTION",
                        "HOTSEAT_CONTACT_SUGGESTION",
                        "MALL_DIRECTORY",
                        "FIELD_TRIP",
                        "FRIEND_LOCATION_PHOTOS",
                        "FIELD_TRIP_LURE",
                        "BACKGROUND_TEXT",
                        "SURVEY_LURE",
                        "CHROMECAST_IMAX",
                        "FITNESS",
                        "AGENDA",
                        "WEB_ANSWER",
                        "GAS_STATION_ALONG_ROUTE",
                        "ALONG_ROUTE_LIST",
                        "MODULE",
                        "MODULE_LIST",
                        "PIET",
                        "THINGS_TO_DO_LIST_LURE",
                        "FLIGHT_PRICE_LIST",
                        "FLIGHT_PRICE",
                        "GOOGLE_PLUS_STORY",
                        "THIRD_PARTY_WELCOME",
                        "HOTWORD_PROMO",
                        "TUTORIAL_CARD_CUSTOMIZE",
                        "TUTORIAL_CARD_INTRO",
                        "TUTORIAL_CARD_SWIPE",
                        "TUTORIAL_CARD_SWIPE_FOR_CUSTOMIZE",
                        "TUTORIAL_CARD_PULL_DOWN",
                        "CLUSTER_METADATA",
                        "CAROUSEL_MODULE_LIST",
                        "APP_LAUNCH_LIST",
                        "ULYSSES_LIST",
                        "CONTACT_CARD",
                        "GMAIL_LOCATION_OF_INTEREST",
                        "COMPONENT",
                        "CLOSET_INTERESTS_PAGE",
                        "CLOSET_INTEREST_CATEGORY",
                        "CLOSET_CONTROL_LIST",
                        "CLOSET_CONTROL_CATEGORY",
                        "CLOSET_PROFILE_SINGLE_TYPE",
                        "CLOSET_PROFILE_MULTI_TYPE",
                        "CLOSET_PROFILE_BUTTON",
                        "CLOSET_ENTITY",
                        "CLOSET_CONTROL",
                        "CLOSET_QUESTION",
                        "CLOSET_TEMPLATE_GROUP",
                        "CLOSET_NOW_SETTINGS",
                        "COMMUTE_NOTIFICATION",
                        "LOBBY_CAROUSEL",
                        "GRID_MODULE_LIST",
                        "AREA_TRAFFIC",
                        "TRANSIT_SYSTEM",
                        "NOW_CLIENT_OPT_IN_PROMO",
                        "HEALTH_UPDATE",
                        "FEED_COLLECTION",
                        "CARD_CAP",
                        "SEARCH_AWARENESS",
                        "ELEMENT",
                        "FACETS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Note that MOVIE_LIST should be replaced with a sub-tree of MOVIE\nentries. We should not have entries that are rolled-up entries.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Lure to enter browse mode about an interest.",
                        "Lure to enter browse mode about a trip.",
                        "Lure to read articles from an author.",
                        "Lure to enter browse mode about a place.",
                        "A single entry in the Browse Mode Author lure.",
                        "A single URL recommendation in browse mode.",
                        "A list of entity recommendations in browse mode.",
                        "A single entity recommendation for the list in browse mode.",
                        "A list of video recommendations in browse mode.",
                        "A single video recommendation for the list in browse mode.",
                        "Lure to enter browse mode for things to read.",
                        "A single entry in the Browse Mode Author lure.",
                        "Things to watch card.",
                        "A TV things to watch recommendation.",
                        "A VOD things to watch recommendation.",
                        "",
                        "",
                        "A card showing a single suggested application for the user.",
                        "List card containing multiple app suggestions.",
                        "A card showing personalized news for a user.",
                        "A card showing a single suggested contact (call/sms) for the user.",
                        "List card containing multiple contact suggestions.",
                        "Detected car parking location.",
                        "List of detected car parking location cards.",
                        "List of related music entries.",
                        "Individual transportation cards.",
                        "List of transportation cards.",
                        "Traffic incidents a user is likely to encounter.",
                        "Individual bill card.",
                        "List of bill cards.",
                        "Entry for a product that the user is interested in.",
                        "Entry for list of products that the user is interested in.",
                        "A card for the store the user is in.",
                        "A card for a product with price drop that a user has visited online.",
                        "A card with a list of Web sites relating to the TV program the user is\nwatching.",
                        "A single reference in the TV Web site list card.",
                        "",
                        "Special group entry used to display suggested apps and contacts in the\nhotseat.",
                        "A list of content update items.",
                        "A content update item.",
                        "The app suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "The contact suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "",
                        "A card used to display interesting nearby content from Field Trip.",
                        "A cards containing photos from a friend at a location.",
                        "Lure to enter browse mode of Field Trip.",
                        "Text displayed in the background, between other cards.",
                        "Card which brings the user to a Google Now feedback survey.",
                        "Card for information on whatever is showing in the Chromecast ambient\nstate.  Can be a link to a news story, a G+ photo with a link to the\nalbum, etc.",
                        "Card displaying fitness data.",
                        "Card displaying agenda data.",
                        "Card displaying web result from predictive search",
                        "Card displaying gas stations along a route.",
                        "A List of AlongRouteEntry.",
                        "Module-based card",
                        "Module-based list card",
                        "Piet-based card (go/piet)",
                        "List lure to enter browse mode of Things To Do.",
                        "A list of flights with prices and price changes.",
                        "An individual flight entry from the list above.",
                        "G+ stories card",
                        "Card displaying welcome information to users receiving third party cards.",
                        "Card promoting the hotword.",
                        "Tutorial card for customizing your Google Now experience.",
                        "Tutorial card for how to change card preferences.",
                        "Tutorial card for how to swipe the cards away.",
                        "Tutorial card for swiping to customize.",
                        "Tutorial card for how to pull down the top bar to search.",
                        "Entry containing metadata about a lotic cluster (e.g. title, color).",
                        "Entry type for the Carousel.  The Carousel is a Group entry\nwith entries made up of Modules.  The Modules should be defined\nas SmallContentModules.",
                        "Entry type for the App Launcher.  The App Launcher is a Group entry\nwith the entries made up of modules.",
                        "Ulysses list type entry for displaying various needs at a location.",
                        "Entry type for a contact card which directs user to the contacts app",
                        "Gmail location of interest card.",
                        "Entry type for a card built from a Hallmark Component.",
                        "Closet interests page (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for interests landing page.\nThe client would show its preview of several interests on its parent page,\nand show all intersts children on its own page by different collections:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet interest category (from AGSA 6.5). This type should only be assigned\nto a group_entry. The client would show its preview of several interests on\nits parent page, and show all interests in this collection on its own page\nby interested, suggested, or not intersted:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control list (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for \"More preferences\" case.\nThe client would show a list of control types:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control category (from AGSA 6.5). This type should only be assigned\nto a group_entry. It would be used for \"Weather\", \"Commute\" cases and etc.:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Single type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Multi-type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Button in profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one interest: go/now-closet-proto.",
                        "Cards and notifications controls in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one question: go/now-closet-proto.",
                        "Closet template group which may contain template rows and headers/footers,\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Closet now settings for enabling Now and notifications, also providing an\nentry for clearing all preference.\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Related to happy hour code yellow in 2015 Q4, this is expected to only be\nused as a synthentic type.  A request translator is the only place this\nis put into a request, and this type will never be returned to a client.\nShould be removed as part of the transition to Action Pipelines taking over\ncommute notifications delivery.\n\nMore details at: http://go/now-hh-commute-cy-15q4",
                        "Used to create a background-less card for Lobby, see: go/lobby.",
                        "Module-based list card with modules displayed in a multi-column grid.",
                        "Non-rendering entry type that is used solely for area traffic notifications\nbound for GMM; there is no corresponding EntrySource.",
                        "Non-rendering entry type that is used solely for transit system\nnotifications bound for GMM; there is no corresponding EntrySource.",
                        "Synthetic entry type for client-generated promotional or tutorial\ncards.  These pseudo-cards are created on the client and are not\nused by the server.",
                        "A Health-related card.",
                        "Collection in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Card cap entry in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Search awareness cards (go/search-aware).",
                        "Cards containing Element data, which can be passed to the Element runtime\nto render the contents of the card on the UI. More details at go/elements",
                        "EntryType for facet chips (go/complex-facets)"
                    ],
                    "type": "string"
                },
                "userLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "The location of the user when the entry was generated."
                },
                "userPrompt": {
                    "description": "Card quality feedback question.\nE.g. \"Was this card...   Useful   Not useful\".\nTypically this field is accompanied by one or several actions like\nLIKE_CARD, DISLIKE_CARD.",
                    "type": "string"
                },
                "userPromptVeInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for the quality feedback question UI element and\ninformation for client on how to log it. Only set if user_prompt is set.\nClients should do attention logging of its bounding box and issue a HIDE\ngraft event when the question is removed.\nVE identifiers for the YES/NO buttons are put in the entry_actions for\nAction types LIKE_CARD and DISLIKE_CARD"
                },
                "veInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for corresponding UI element and information for\nclient on how to log it."
                },
                "vehicleParkedLocationEntry": {
                    "$ref": "Sidekick__VehicleParkedLocationEntry",
                    "description": "Entry for previously detected car parking locations."
                },
                "vehicleParkedLocationListEntry": {
                    "$ref": "Sidekick__GenericListEntry",
                    "description": "Group entry for a list of detected car parking locations."
                },
                "voiceOfGooglePrompt": {
                    "description": "Voice of Google question about the card, that is, a question asked by\nGoogle Now to learn user interest. Behaves like user_prompt, but that is\nreserved for quality question.",
                    "type": "string"
                },
                "wasClustered": {
                    "description": "Whether this entry was clustered into a lotic cluster. This is useful to\nknow since things like clockwork can't handle clustered entries yet so we\nwe need to pull out all the original entries from the cluster.",
                    "type": "boolean"
                },
                "weatherEntry": {
                    "$ref": "Sidekick__WeatherEntry"
                },
                "weatherListEntry": {
                    "$ref": "Sidekick__GenericListEntry",
                    "description": "The list entry to represent a weather list card."
                },
                "websiteUpdateEntry": {
                    "$ref": "Sidekick__WebsiteUpdateEntry"
                },
                "websiteUpdateListEntry": {
                    "$ref": "Sidekick__WebsiteUpdateListEntry"
                }
            },
            "type": "object"
        },
        "Sidekick__EntryId": {
            "description": "Versioned ID that uniquely identifies a card based on user-visible entities\non the card.",
            "id": "Sidekick__EntryId",
            "properties": {
                "id": {
                    "description": "IDs of the entry. The semantics of the IDs are as follows:\nAn entry ID is created solely from field values in the Entry proto and acts\nlike a unique hash.  If any ID in this list of IDs match between two\nEntryIds, then the two EntryIds should be considered equivalent. Typically\nthere should only be one id here. One instance where multiple ids are\nneeded is for \"place\" cards, where the lat-lng might drift over time (due\nto updates in map data) and hence there could be multiple ids for the same\nsemantic place corresponding to each lat-lng.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "version": {
                    "description": "Version number of the ID, to allow backwards compatibility when the version\nchanges.\nThe version number should increase monotonically with new versions.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__EntryMetadata": {
            "description": "Message embedded in Entry that represents the minimal set of data needed\nto enable proper, accurate logging of actions for analysis and metrics.\nevent_id and logjoin_id are used to locate the full server-side\nEntry. index and subindex are populated by client to indicate the position\nof the Entry acted upon in the feed at the time of an action.\nThe push_event_id and push_logjoin_id are populated by the push system.\nWe keep the two separate so we can match an Entry in an ExecutedUserAction\nto both the GWS response that most recently produced it (and would have\nlogged ranking and feature signals for it) and to the most recent push\nmessage that updated it (and would not contain those signals).\nFor more info see: go/now-eua-improvements-dd",
            "id": "Sidekick__EntryMetadata",
            "properties": {
                "eventId": {
                    "$ref": "__EventIdMessage",
                    "description": "EventId of the GWS response to a pull request that returned the Entry to\nthe client. Populated by client from SidekickHttpResponse.encoded_event_id.\nThe client will preserve this field across push content operation updates."
                },
                "index": {
                    "description": "0-indexed offset of card containing this Entry or, for cluster_entries,\nthe first card in cluster within the stream at the time of the action.\nPopulated by client.",
                    "format": "int32",
                    "type": "integer"
                },
                "logjoinId": {
                    "description": "Unique Entry identifier (for a given EventId). Populated by GWS via pull.\nThe client will preserve this field across push content operation updates.",
                    "format": "int64",
                    "type": "string"
                },
                "pushEventId": {
                    "$ref": "__EventIdMessage",
                    "description": "event_id and logjoin_id from push-by-value log record corresponding to\nthis Entry. Set by PushWorker when sending an Entry update to be\nproto-merged in to an existing Entry. These fields are separate from the\nother event_id and logjoin_id fields to allow the logs analysis sytem to\njoin ExecutedUserAction.entry with both the original frontend record\n(located by event_id and logjoin_id) as well as the latest push-by-value.\nFor more info see b/35697977."
                },
                "pushLogjoinId": {
                    "format": "int32",
                    "type": "integer"
                },
                "subindex": {
                    "description": "0-indexed offset of item in list or carousel card. Position of Entry in\nEntryTreeNode.entry list.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__EventEntry": {
            "description": "This information might be considered sensitive because it may be based on\nderived or explicit user interests. Also, it may reveal something about\nthe user's location since events are filtered by the user's current\nlocation or home location.",
            "id": "Sidekick__EventEntry",
            "properties": {
                "artistName": {
                    "description": "Optional list of names of artists or performers at this event.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "attribution": {
                    "$ref": "Sidekick__Attribution",
                    "description": "Attribution for the event listing."
                },
                "autoExpand": {
                    "description": "The client should expand inferred events cards without user action.",
                    "type": "boolean"
                },
                "category": {
                    "description": "Human readable categories for this event.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Short description for the event.",
                    "type": "string"
                },
                "endTime": {
                    "description": "The end date/time in ISO8601 format if known.\n(see http://microformats.org/wiki/iso-8601)\nThis allows us to distinguish between events for which we only know the\ndate and for which we know both the date and the time. This supersedes\nthe end_time_seconds field. However, start_time_seconds must still be\nfilled in for the sake of older clients (<= version 2.1).",
                    "type": "string"
                },
                "endTimeSeconds": {
                    "description": "End time of the event if known, in seconds since the epoch. This is often\nmissing and may be of marginal value to the client.\nDeprecated, but must filled in for the sake of older clients\n(<= version 2.1).",
                    "format": "int64",
                    "type": "string"
                },
                "eventName": {
                    "description": "Optional additional name for the event if not the same as the title.",
                    "type": "string"
                },
                "gmailReference": {
                    "$ref": "Sidekick__GmailReference",
                    "description": "Email reference if this event is extracted from Gmail."
                },
                "image": {
                    "$ref": "Sidekick__Photo",
                    "description": "Contains the image for the event and image attribution URLs and other\nimage details."
                },
                "inferredLocation": {
                    "description": "A list of potential locations for the inferred event. This list should be\nsorted by confidence.",
                    "items": {
                        "$ref": "Sidekick__Location"
                    },
                    "type": "array"
                },
                "inferredStartTime": {
                    "description": "A list of potential start date/time in ISO8601 format. This list includes\nstart_time which denotes the highest confidence time not yet passed.\n(see http://microformats.org/wiki/iso-8601)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "Location of the event; the venue name, if present, would be in\nlocation.name."
                },
                "onCardJustification": {
                    "description": "A string showing why we are showing this event that can be shown on the\ncard itself. It is likely to be a somewhat extended version of the back\nof card \"reason\" string. An example might be where the front of card shows\n\"Upcoming concert. You searched for this artist\", but the reason only shows\n\"You searched for this artist\" (Note that the longer form needs to be sent\nas one string for localization reasons; it's not enough to just\nconcatenate the two sentences). If this should be identical to the reason\nstring, the server should set it as such; the client isn't expected to\nimplement logic to choose one over the other.",
                    "type": "string"
                },
                "reasonEntityName": {
                    "description": "If this was a suggestion, this is the name of the entity that was the\nreason for the suggestion (eg, an artist's name).",
                    "type": "string"
                },
                "startTime": {
                    "description": "The start date/time in ISO8601 format.\n(see http://microformats.org/wiki/iso-8601)\nThis allows us to distinguish between events for which we only know the\ndate and for which we know both the date and the time. This supersedes\nthe start_time_seconds field. However, start_time_seconds must still be\nfilled in for the sake of older clients (<= version 2.1).",
                    "type": "string"
                },
                "startTimeSeconds": {
                    "description": "Start time of the event if known, in seconds since the epoch.\nDeprecated, but must filled in for the sake of older clients\n(<= version 2.1).",
                    "format": "int64",
                    "type": "string"
                },
                "title": {
                    "description": "Title to use for the event; ideally the title or headline of the card.",
                    "type": "string"
                },
                "type": {
                    "description": "Specify the type of event if we know. If unset, then we don't know what\nthe event is.",
                    "enum": [
                        "MUSIC",
                        "INFERRED"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "viewAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "When clicking through this event, this is the view action to trigger. The\nclient may or may not show the label in the ViewAction."
                }
            },
            "type": "object"
        },
        "Sidekick__EventListEntry": {
            "id": "Sidekick__EventListEntry",
            "properties": {
                "title": {
                    "description": "The title of the card, e.g. \"View nearby events\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__EventPerformer": {
            "id": "Sidekick__EventPerformer",
            "properties": {
                "imageUrl": {
                    "description": "Image URL of the performer.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the performer.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__EventTicketSeatInfo": {
            "description": "Information about a seat for an event.",
            "id": "Sidekick__EventTicketSeatInfo",
            "properties": {
                "seat": {
                    "type": "string"
                },
                "seatRow": {
                    "type": "string"
                },
                "seatSection": {
                    "description": "Seat information for live events.",
                    "type": "string"
                },
                "seatType": {
                    "type": "string"
                },
                "underName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__FeedCollectionEntry": {
            "description": "A collection in the interest feed. This should only be used in a group_entry.\nNext Tag: 6",
            "id": "Sidekick__FeedCollectionEntry",
            "properties": {
                "addDividers": {
                    "description": "If true divders are added on the card",
                    "type": "boolean"
                },
                "heroCarouselControl": {
                    "$ref": "Sidekick__CarouselControl",
                    "description": "UI control information for the hero carousel."
                },
                "inlineInjectionMetadata": {
                    "$ref": "Sidekick__InlineInjectionMetadata",
                    "description": "Metadata for inline injection actions that may occur on the collection."
                },
                "multiPhotoCarouselControl": {
                    "$ref": "Sidekick__CarouselControl",
                    "description": "UI control information for the multi photo carousel."
                },
                "trayCarouselControl": {
                    "$ref": "Sidekick__CarouselControl",
                    "description": "UI control information for the tray carousel."
                }
            },
            "type": "object"
        },
        "Sidekick__FeedbackData": {
            "description": "Extra data to add to feedback reports.",
            "id": "Sidekick__FeedbackData",
            "properties": {
                "key": {
                    "description": "Key for the feedback data.",
                    "type": "string"
                },
                "value": {
                    "description": "Value for the feedback data.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__FlightStatusEntry": {
            "description": "Shows status of flight a user might be interested in.",
            "id": "Sidekick__FlightStatusEntry",
            "properties": {
                "flight": {
                    "description": "The flights the user may be interested in. e.g. This could be flights the\nuser is taking or flights the user is tracking to pick up someone at the\nairport.",
                    "items": {
                        "$ref": "Sidekick_FlightStatusEntry_Flight"
                    },
                    "type": "array"
                },
                "personalItemInfo": {
                    "$ref": "Sidekick__PersonalItemInfo",
                    "description": "Metadata containing title and subtitle strings for rendering this entry as\na list item."
                }
            },
            "type": "object"
        },
        "Sidekick__FrequentPlace": {
            "id": "Sidekick__FrequentPlace",
            "properties": {
                "alternatePlaceData": {
                    "description": "Alternate possibilities for place_data from which the user can chose to\nmake an explicit association with this FrequentPlace. Currently, this is a\nset of nearby businesses and contacts.",
                    "items": {
                        "$ref": "Sidekick__PlaceData"
                    },
                    "type": "array"
                },
                "checkinUrl": {
                    "description": "For Moonshine sourced place (e.g. restaurant reservation, hotel\nreservation), the reservation check-in url.",
                    "type": "string"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains an encoded FrequentPlace proto that\nhas only the extensions set.",
                    "format": "byte",
                    "type": "string"
                },
                "eventProbability": {
                    "description": "Probability that the email from which this Event was produced is an\nevent, as determined by a classifier.",
                    "format": "float",
                    "type": "number"
                },
                "explicitPlaceData": {
                    "description": "If true, place_data was set explicitly by the user. If false, place_data\nis an automated best guess.",
                    "type": "boolean"
                },
                "gmailReference": {
                    "description": "For Moonshine sourced place (e.g. restaurant reservation), the email\nreferences.",
                    "items": {
                        "$ref": "Sidekick__GmailReference"
                    },
                    "type": "array"
                },
                "hotelType": {
                    "description": "The type of hotel, it is generic or some private hotel type, like Airbnb.\nIt is set if and only if source_type is HOTEL_RESERVATION_FROM_GMAIL.",
                    "enum": [
                        "GENERIC",
                        "AIRBNB"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "isCommuteDestination": {
                    "description": "Tells whether or not we are showing this place because it is during a\ncommute window.",
                    "type": "boolean"
                },
                "juicerExtractorFingerprint": {
                    "description": "If this event is extracted by Juicer, this field stores the fingerprints\nof Juicer templates used to extract the event.",
                    "items": {
                        "format": "uint64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "justification": {
                    "description": "Used for rendering, an explanation for why this place is relevant to the\nuser. Compared to Entry.reason, it contains more PII such as places your\nfriends have reviewed.\nDO NOT LOG THIS.",
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "Best guess for name and lat, long of the place."
                },
                "modifyReservationUrl": {
                    "description": "For Moonshine sourced place (e.g. restaurant reservation, hotel\nreservation), the reservation modify url.",
                    "type": "string"
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "placeData": {
                    "$ref": "Sidekick__PlaceData",
                    "description": "The PlaceData currently associated with this FrequentPlace. The\nassociation may have been an automated best guess or set explicitly by the\nuser, as expressed by explicit_place_data."
                },
                "providerLogo": {
                    "$ref": "Sidekick__Photo",
                    "description": "The logo of the reservation provider."
                },
                "reservationNumber": {
                    "description": "The reservation number used to identify a hotel or restaurant reservation.",
                    "type": "string"
                },
                "sourceType": {
                    "enum": [
                        "SEARCH_HISTORY",
                        "LOCATION_HISTORY_ANALYSIS",
                        "AT_PLACE",
                        "LAST_NIGHT_ANALYSIS",
                        "AIRPORT_ANALYSIS",
                        "RESTAURANT_RESERVATION_FROM_GMAIL",
                        "EVENT_FROM_GMAIL",
                        "HOTEL_RESERVATION_FROM_GMAIL",
                        "FLIGHT_RESERVATION_FROM_GMAIL",
                        "TOP_PLACES",
                        "HIVEMIND"
                    ],
                    "enumDescriptions": [
                        "might come from maps or web search history.",
                        "",
                        "",
                        "analysis for the user's last night location.",
                        "analysis for the airport the user went through.",
                        "analysis of restaurant reservations from Gmail. e.g. reservation for\ndinner at Alexander's Steakhouse.",
                        "analysis of events from Gmail. e.g. tickets for a Cavalia show.",
                        "analysis of hotel reservations from Gmail. e.g. check in at 3pm at\nGrand Wailea resort.",
                        "analysis of flight reservations from Gmail.",
                        "place recommended by the Top Places service. go/top-places",
                        "places from Hivemind."
                    ],
                    "type": "string"
                },
                "strainerExtractorFingerprint": {
                    "description": "If this event is extracted by Strainer, this field stores the fingerprints\nof extractors used to extract the event.",
                    "items": {
                        "format": "uint64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__FrequentPlaceEntry": {
            "id": "Sidekick__FrequentPlaceEntry",
            "properties": {
                "eventEndTimeSeconds": {
                    "description": "The check-out time for private party hotel reservations, like Airbnb.\nFor general hotel reservations, we were using event_time_seconds to\nrepresent check_in time when the event_type is hotel_prior/hotel_checkin,\nand to represent check_out time for hotel_during/hotel_checkout\nBut for private party hotel reservations, like Airbnb, we need both\ncheck_in and check_out time:\nhttps://folio.googleplex.com/assist-ux/predictive-ux/airbnb/#/airbnb-02.png\nIn that case, event_time_seconds should represent check_in time no matter\nthe event_type is.",
                    "format": "int64",
                    "type": "string"
                },
                "eventImage": {
                    "$ref": "Sidekick__Photo",
                    "description": "If set an image that we think is relevant to the event (e.g. based on name)\nNOTE: this Photo must always be of type REGULAR. If we want to use other\ntypes, we must re-check with logs team."
                },
                "eventTimeSeconds": {
                    "format": "int64",
                    "type": "string"
                },
                "eventTimeZone": {
                    "description": "The timezone for the event times. This is an ID which can be read by\njava.util.TimeZone, for example \"America/Los_Angeles\".\nThis timezone assumes both the event_time_seconds and\nevent_end_time_seconds are in the same timezone.",
                    "type": "string"
                },
                "eventType": {
                    "description": "The kind of event associated with this place.",
                    "enum": [
                        "HOTEL_PRIOR",
                        "HOTEL_CHECKIN",
                        "HOTEL_DURING",
                        "HOTEL_CHECKOUT",
                        "RESTAURANT_RESERVATION",
                        "EVENT_RESERVATION",
                        "RESTAURANT_RESERVATION_PLACE_DETAILS"
                    ],
                    "enumDescriptions": [
                        "e.g. reservation at Grand Wailea resort\nlong before checkin time",
                        "checkin soon",
                        "during stay at hotel",
                        "checkout soon",
                        "e.g. reservation for dinner at Alexander's Steakhouse",
                        "e.g. tickets for a Cavalia show",
                        "show place details of restaurant. e.g. user is at the restaurant\naround the time of the reservation"
                    ],
                    "type": "string"
                },
                "frequentPlace": {
                    "$ref": "Sidekick__FrequentPlace",
                    "description": "The frequent place to show.\nLogs: There are some generic fields (e.g. the place type: from search, or\nfrom location history) that we do want to preserve for long-term stats."
                },
                "metersFromNearestRequestLocation": {
                    "format": "int32",
                    "type": "integer"
                },
                "metersFromUser": {
                    "description": "Distance, along the Earth's surface, from the user's location\nto this place.",
                    "format": "int32",
                    "type": "integer"
                },
                "nearestRequestLocationName": {
                    "description": "If this place is returned due to its proximity to a request location,\nas in the nearby place's use case, then its name may be sent to the client",
                    "type": "string"
                },
                "personalItemInfo": {
                    "$ref": "Sidekick__PersonalItemInfo",
                    "description": "Metadata containing title and subtitle strings for rendering this entry as\na list item."
                },
                "route": {
                    "description": "The traffic from the current location to the frequent_place, along\nseveral possible routes. The first one is the most likely route the user\ntakes to this place during a regular commute (or just the standard\nroute from Pathfinder when no commute pattern applies).\nAnother route could be the fastest route for the current traffic\nconditions.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                },
                "timeIsDateOnly": {
                    "description": "Is the event_time_seconds only a date, meaning it doesn't contain\na valid time, so the time is midnight.  If this field isn't set\nwe assume event_time_seconds fully specifies the date and time.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__GenericCardEntry": {
            "description": "This defines a generic entry that will be rendered in a card, and can\ncontain a title, some text, and an image. If the text and image are\nmissing, the card will still layout in a reasonable way.\nThe card can also contain any number of actions, which will be rendered\nas buttons at the bottom of the card. Clicking a button will fire an\nintent to view the action's uri.\nExample generic card: Public Alerts card (warning users of\ntornadoes, etc), messages from Google (e.g. \"you are recording location\nhistory\", \"Wifi is off; you'll get better data with it on\", etc.)",
            "id": "Sidekick__GenericCardEntry",
            "properties": {
                "backOfCardQuestion": {
                    "$ref": "Sidekick_GenericCardEntry_BackOfCardQuestion",
                    "description": "DEPRECATED. Use custom_question_id instead."
                },
                "backOfCardQuestionType": {
                    "enum": [
                        "NONE",
                        "GENERIC",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "",
                        "Uses a generic \"Was this card useful? Yes|No\" question.\nDefined in\n//depot/google3/java/com/google/android/apps/gsa/velvet/res/values/sidekick_strings.xml#default_back_of_card_question\nThe Yes|No answers correspond to POSITIVE|NEGATIVE actions being sent\nto the server.",
                        "Use a custom question, specified below in back_of_card_question."
                    ],
                    "type": "string"
                },
                "backendCardId": {
                    "description": "Field that internal API clients can use to set an ID for their card.\nThis is useful for easily matching actions (clicks, dismisses, views) to\nthe actual entries the action was taken on. This is logged to temp logs\nonly since we have little knowledge of what clients will set as the ID.\nThis field must not contain any PII.\n\nCan be at most 100B.",
                    "format": "byte",
                    "type": "string"
                },
                "cardType": {
                    "description": "This is used to distinguish types or categories of generic cards. Since\nthis entry is used to represent many sources of cards, this string helps\nto disambiguate between them. The client currently uses this just to log\nuser interaction with the card.",
                    "type": "string"
                },
                "customQuestionId": {
                    "description": "If BackOfCardQuestionType.CUSTOM is set, custom_question_id must also be\nset and must match the ID of a question in QuestionTemplateIds generated\nby j/c/g/geo/sidekick/tools/GenerateQuestionTemplates.java.",
                    "format": "int64",
                    "type": "string"
                },
                "customQuestionParameter": {
                    "description": "Used to parameterize the custom question. Only used if custom_question_id\nis set. If the custom question has string replacements, these will be used\nin order. Otherwise, they are treated as invisible parameters.\nCan be at most 100B.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "detailsClickAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "A ClickAction triggered when the card itself (not one of the buttons) is\nclicked."
                },
                "imageHeight": {
                    "format": "int32",
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "imageWidth": {
                    "description": "If an image is specified, this is its size, so that space can\nbe reserved for it before the image is fetched.",
                    "format": "int32",
                    "type": "integer"
                },
                "photo": {
                    "items": {
                        "$ref": "Sidekick__Photo"
                    },
                    "type": "array"
                },
                "style": {
                    "description": "The style to use to present the card. If unspecified, should be treated\nthe same as STANDARD.",
                    "enum": [
                        "STANDARD",
                        "TUTORIAL",
                        "ROUND_IMAGE"
                    ],
                    "enumDescriptions": [
                        "For standard informational cards.",
                        "For cards that try to teach users about new features or prompt users\nto take some kind of configuration action.",
                        "The image is clipped to a circle.  Only applicable when template is\nIMAGE_ON_LEFT or IMAGE_ON_RIGHT"
                    ],
                    "type": "string"
                },
                "template": {
                    "enum": [
                        "IMAGE_ON_LEFT",
                        "IMAGE_ON_RIGHT",
                        "IMAGE_BELOW",
                        "IMAGE_GRID"
                    ],
                    "enumDescriptions": [
                        "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2510 Title          \u2502\n\u2502\u2502 Img \u2502 Text           \u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2518                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
                        "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Title          \u250c\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502 Text           \u2502 Img \u2502\u2502\n\u2502                \u2514\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
                        "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Title                 \u2502\n\u2502 Text                  \u2502\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502         Img         \u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
                        "\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Title                 \u2502\n\u2502 Text                  \u2502\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502 Img \u2502 \u2502 Img \u2502 \u2502 Img \u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nUp to 4 images."
                    ],
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "viewAction": {
                    "description": "Clickable actions that are rendered as buttons beneath the content of the\ncard.",
                    "items": {
                        "$ref": "Sidekick__ClickAction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__GenericListEntry": {
            "description": "A generic message to represent a list of entries. Can be used for\nany type of list entries that doesn't need to set specific data\nin the group entry. Need to set a specific entry type when using this\nmessage.",
            "id": "Sidekick__GenericListEntry",
            "properties": {
                "attribution": {
                    "$ref": "Sidekick__Attribution",
                    "description": "Attribution for the source of the data displayed in the list."
                },
                "numEntriesToShow": {
                    "description": "Number of entries to show before displaying the \"show more\" button.",
                    "format": "int32",
                    "type": "integer"
                },
                "subTitle": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Subtitle for the list."
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Title for the list."
                }
            },
            "type": "object"
        },
        "Sidekick__GenericTableEntry": {
            "description": "A table of information.",
            "id": "Sidekick__GenericTableEntry",
            "properties": {
                "columnLabel": {
                    "description": "Labels for the column headers.",
                    "items": {
                        "$ref": "Sidekick__TextOrIcon"
                    },
                    "type": "array"
                },
                "row": {
                    "items": {
                        "$ref": "Sidekick_GenericTableEntry_Row"
                    },
                    "type": "array"
                },
                "title": {
                    "description": "Title for the table.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__GeoLocatedPhoto": {
            "description": "A photo with a location attached to it. A GeoLocatedPhoto is shown close to\nthe user's location. Therefore it is tagged as sensitive.",
            "id": "Sidekick__GeoLocatedPhoto",
            "properties": {
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "Location attached to the photo."
                },
                "mediumSizedPhoto": {
                    "$ref": "Sidekick__Photo",
                    "description": "Medium-sized photo.\nPhotos close to the user's location are shown. Therefore we have\nLOGSID_SENSITIVE_LOCATION."
                },
                "name": {
                    "description": "A descriptive name for the photo. E.g. \"Buckingham palace\".",
                    "type": "string"
                },
                "originalPhoto": {
                    "$ref": "Sidekick__Photo",
                    "description": "Original photo."
                },
                "thumbnail": {
                    "$ref": "Sidekick__Photo",
                    "description": "The thumbnail of the photo.\nPhotos close to the user's location are shown. Therefore we have\nLOGSID_SENSITIVE_LOCATION."
                }
            },
            "type": "object"
        },
        "Sidekick__GeostoreFeatureId": {
            "description": "Mapped from required fields in geostore.FeatureIdProto.\nBy defining our own message here we remove the dependency on\ngeostore.FeatureIdProto and make it easier to parse in Android.",
            "id": "Sidekick__GeostoreFeatureId",
            "properties": {
                "cellId": {
                    "format": "uint64",
                    "type": "string"
                },
                "fprint": {
                    "description": "The fprint for some established features is also known as the cluster ID.\nSee http://shortn/_CTfOJ29A0h.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__GmailReference": {
            "description": "gMail reference for Moonshine sourced entries, such as flights.",
            "id": "Sidekick__GmailReference",
            "properties": {
                "emailIdentifier": {
                    "description": "Email message identifier so we can link to the original email.\nGWS will use this as a plid parameter to construct the original gmail. If\nidentifier does not exist, use email_url instead.",
                    "type": "string"
                },
                "emailUrl": {
                    "description": "The email URL of email_reference. This field is not populated if\nemail_identifier is populated.",
                    "type": "string"
                },
                "forwardingDetected": {
                    "description": "True if the email was forwarded.",
                    "type": "boolean"
                },
                "juicerMinhashId": {
                    "description": "Email juicer template minhash ID.",
                    "format": "uint64",
                    "type": "string"
                },
                "language": {
                    "description": "Language code such as \"en\", \"zh\". (see go/iii)",
                    "type": "string"
                },
                "primaryLabelText": {
                    "description": "Primary label text to show on the email button if present. Otherwise, the\nlabel text should be generated on the client based on available fields.",
                    "type": "string"
                },
                "secondaryLabelText": {
                    "description": "Secondary label text on the email button containing personal-branding\nattribution info, e.g. \"Only you can see this\".",
                    "type": "string"
                },
                "senderDisplayName": {
                    "description": "The display name that may be associated with the sender_email_address.\nThe data is never logged because the sender_email_address is captured\nand more accurate.",
                    "type": "string"
                },
                "senderEmailAddress": {
                    "description": "The email address of the sender for email_reference.",
                    "type": "string"
                },
                "source": {
                    "description": "Document source of the moonshine entries.",
                    "enum": [
                        "EMAIL",
                        "HANGOUT",
                        "SMS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "threadId": {
                    "description": "Email/Hangout thread ID.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Grid": {
            "description": "This is the primary Grid container.",
            "id": "Sidekick__Grid",
            "properties": {
                "padding": {
                    "$ref": "Sidekick__MeasurementsInDp"
                },
                "row": {
                    "description": "The row contents of this Grid.",
                    "items": {
                        "$ref": "Sidekick__GridRow"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__GridBorder": {
            "description": "GridCells can have their own Border, specified as a color & width in dp.",
            "id": "Sidekick__GridBorder",
            "properties": {
                "color": {
                    "description": "Border color, as a 32-bit ARGB color, 0xAARRGGBB.",
                    "format": "uint32",
                    "type": "integer"
                },
                "colorString": {
                    "description": "String Hex presentation of the color. For example: FF0000 for red (no alpha\nvalues).\n\nNOTE: This is a helper field for HTML rendering of GridModule. This field\n  is programmatically filled, and is not expected to be available by the\n  writer of this proto.",
                    "type": "string"
                },
                "darkThemeColor": {
                    "description": "Android DarkTheme Border color, as a 32-bit ARGB color, 0xAARRGGBB.",
                    "format": "uint32",
                    "type": "integer"
                },
                "widthInDp": {
                    "description": "Width of this border in display pixels (/density-independent pixels).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__GridCell": {
            "description": "A cell inside a row in a grid. A GridCell can contain exactly one of three\nthings: either a MetadataLine for text, or a Photo for an image, or another\nGrid, for advanced customization. Although infinite recursion is\ntechnically possible (Grid >> GridRow >> GridCell >> Grid...),\nimplementations may not support more than 2 levels of inner Grid.\nIf you specify a complex layout, watch out for warnings or crashes in each\nimplementation to assess what is feasible and performant.",
            "id": "Sidekick__GridCell",
            "properties": {
                "accessibilityLabel": {
                    "description": "A11y information needed to apply the appropriate label to the parent\nGridRow or GridModule.",
                    "type": "string"
                },
                "backgroundColor": {
                    "description": "Background color for the cell, overrides grid background color.\nFormat: 0xaarrggbb.",
                    "format": "int32",
                    "type": "integer"
                },
                "backgroundColorString": {
                    "description": "String Hex presentation of the background_color. For example: FF0000 for\nred (no alpha values).\n\nNOTE: This is a helper field for HTML rendering of GridModule. This field\n  is programmatically filled, and is not expected to be available by the\n  writer of this proto.",
                    "type": "string"
                },
                "borderBottom": {
                    "$ref": "Sidekick__GridBorder"
                },
                "borderEnd": {
                    "$ref": "Sidekick__GridBorder"
                },
                "borderStart": {
                    "$ref": "Sidekick__GridBorder"
                },
                "borderTop": {
                    "$ref": "Sidekick__GridBorder",
                    "description": "Specify the border on the cell"
                },
                "gravityVertical": {
                    "enum": [
                        "GRAVITY_TOP",
                        "GRAVITY_MIDDLE",
                        "GRAVITY_BOTTOM"
                    ],
                    "enumDescriptions": [
                        "Default, therefore using value 0.",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "grid": {
                    "$ref": "Sidekick__Grid",
                    "description": "an embedded grid"
                },
                "lines": {
                    "$ref": "Sidekick_GridCell_MetadataLines",
                    "description": "a set of MetadataLines"
                },
                "padding": {
                    "$ref": "Sidekick__MeasurementsInDp",
                    "description": "Allows control of the padding on the cell"
                },
                "photo": {
                    "$ref": "Sidekick_GridCell_GridPhoto",
                    "description": "a photo"
                },
                "width": {
                    "$ref": "Sidekick__GridCellWidth",
                    "description": "The width of this cell, either fixed width or relative width.\nThe cell width will include the borders."
                }
            },
            "type": "object"
        },
        "Sidekick__GridCellWidth": {
            "description": "GridCellWidth can be specified either in display-pixels (fixed width) or as\nweights (relative widths). When performing layout, the fixed-width cells are\nallocated their requested widths in dp. Then, the remaining available\nwidth is distributed in proportion to the weight values for the remaining\ncells.\nExamples:\n1. [  200dp, 1w ]\n   Two column layout with first column width = 200 dp, second column filling\n   all remaining space.\n2. [ 60dp, 1w, 100dp ]\n   Three column layout with first column width = 60dp, third column width =\n   100dp, and the second column expanding to fill all remaining space.\n3. [ 1w, 1w ]\n   Two column layout, both columns occupying 50% space.\n4. [ 1w, 2w ]\n   Two column layout, first column occupying 33% space, the second column\n   occupying 66% space.\n5. [ 400dp, 1w, 1w, 1w  ]   (row 1)\n   [ 400dp, 1w ]            (row 2)\n   Both rows have first column at a fixed width of 400dp. First row has 2nd,\n   3rd and 4th column occupying equal space (33% of the remaining space).\n   The second row has the 2nd column with a column-span of 3 (width is equal\n   to the width of the three columns in the first row).",
            "id": "Sidekick__GridCellWidth",
            "properties": {
                "dp": {
                    "format": "int32",
                    "type": "integer"
                },
                "weight": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__GridModule": {
            "description": "A customizable module designed for tabular content that allows more\nflexibility & layout options than TabularModule, see: go/gridmodule",
            "id": "Sidekick__GridModule",
            "properties": {
                "grid": {
                    "$ref": "Sidekick__Grid"
                },
                "talkbackString": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "String to use for talkback when a user taps on any part of the grid. Inner\nelements are not available as individual accessibility points because the\nnested structure of GridModule makes it difficult for a client to\nunderstand how to put them together.\n\nNOTE:This field is not respected in the Now on Monet infrastructure,\ninstead use GridRow.talkback_string."
                }
            },
            "type": "object"
        },
        "Sidekick__GridRow": {
            "description": "Each row that is part of a Grid. Note that each row must have complete\nknowledge of whatever it needs to render itself, independent of other rows.\nLayouts cannot be expressed in terms of relationships between rows, to ensure\nwe can finish layout in one pass for performance reasons.",
            "id": "Sidekick__GridRow",
            "properties": {
                "accessibilityMetadata": {
                    "$ref": "Sidekick__AccessibilityMetadata",
                    "description": "Additional a11y metada to give more information to the screen reader."
                },
                "action": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Action which is performed if the user clicks on the row.  GridModule\nsupports actions at two levels, the full Module or at the\nrow level.  If an action is defined on the Module, we will ignore\nactions defined on the rows, Module level actions override row\nlevel actions."
                },
                "cell": {
                    "description": "Contents of this row.",
                    "items": {
                        "$ref": "Sidekick__GridCell"
                    },
                    "type": "array"
                },
                "horizontalBorders": {
                    "description": "All the horizontal borders that should be rendered in this row.\n\nNOTE: This is a helper field for HTML rendering of GridModule. This field\n  is programmatically filled, and is not expected to be available by the\n  writer of this proto.",
                    "items": {
                        "$ref": "Sidekick_GridRow_BorderAndLocation"
                    },
                    "type": "array"
                },
                "minimumHeightInDp": {
                    "description": "Minimum height of the row in the unit of Dp",
                    "format": "int32",
                    "type": "integer"
                },
                "rootRowClusterSize": {
                    "description": "In case this row is a root of a rows-cluster, indicates the cluster size.\nA rows-cluster is a group of adjacent rows (can be of size one) that have\nthe same cell split (i.e. width definition of their cells are the same),\nand the same action. In case the row is not a root of a row-cluster, this\nvalue will be set to 0. For example, in case we have three types of rows:\n[A, B, C], the root_row_cluster_size values for the following list of rows\nwould be:\nA, B, A, A, C, C, C, A\nThis field is used in order to group rows into one HTML table element, in\nJsLayout template.\n\nNOTE: This is a helper field for HTML rendering of GridModule. This field\n  is programmatically filled, and is not expected to be available by the\n  writer of this proto.",
                    "format": "int32",
                    "type": "integer"
                },
                "talkbackFocusable": {
                    "description": "Field to prevent a row from becoming focusable in Now on Monet instracture.\nUse if a field is purely for presentation.\n",
                    "type": "boolean"
                },
                "talkbackString": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "String to use for talkback when a user taps on any part of the grid row.\n\nNOTE: This field is currently used in Now on Monet infrastructure to define\ntalkback for grid items. GridModule.talkback_string is not respected there.\n"
                }
            },
            "type": "object"
        },
        "Sidekick__Header": {
            "description": "Common header module placed at the top of many cards.\n\niOS officially dropped support for this module with Mulder (maintenance\ndropped around Mystique (v65)). Use card_cap on the entry instead.",
            "id": "Sidekick__Header",
            "properties": {
                "avatarPhoto": {
                    "$ref": "Sidekick__Photo",
                    "description": "Profile photo to place in the header"
                },
                "gutterIcon": {
                    "$ref": "Sidekick__ModuleIcon"
                },
                "justification": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Small accompanying text, e.g. \"Because you searched for...\""
                },
                "justificationStyleOverrides": {
                    "$ref": "Sidekick__TextStyleOverrides",
                    "description": "Style overrides for justification."
                },
                "metadata": {
                    "description": "Alternative mechanism for specifying content text or other structured\ncard content.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "photo": {
                    "$ref": "Sidekick__Photo",
                    "description": "Image to display at the end (typically right) edge."
                },
                "photoSize": {
                    "description": "Size of the photo.",
                    "enum": [
                        "UNKNOWN_ICON_SIZE",
                        "THIRD_PARTY_LOGO",
                        "ICON_H1",
                        "ICON_H2",
                        "ICON_H3",
                        "ICON_H4",
                        "ICON_H5",
                        "ATTRIBUTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "3rd party logo at the end (right for LTR layouts) of the card header.",
                        "text-line image sizes, these will map into device independent\nsizes on the client.",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "subtitle": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Smaller text/content beneath the title"
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Main title text in the header"
                },
                "titleStyleOverrides": {
                    "$ref": "Sidekick__TextStyleOverrides",
                    "description": "Style overrides for title."
                }
            },
            "type": "object"
        },
        "Sidekick__IconActionModule": {
            "description": "Module that contains the action only where the icon is displayed",
            "id": "Sidekick__IconActionModule",
            "properties": {
                "title": {
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ImageHeader": {
            "description": "A basic image module placed at the top of cards.\nOnly supported in GSA version 4.8+",
            "id": "Sidekick__ImageHeader",
            "properties": {
                "autoplayVideoUrl": {
                    "description": "If provided, the URL of video will play when this module is visible.\nCurrently only supported in iGSA.",
                    "type": "string"
                },
                "bottomPaddingInDp": {
                    "description": "The padding on below the image",
                    "format": "int32",
                    "type": "integer"
                },
                "endPaddingInDp": {
                    "description": "The padding on the left side of the image",
                    "format": "int32",
                    "type": "integer"
                },
                "imageHeight": {
                    "description": "The height of the image in the stream. If not set then the client will use\na default card image height and perform a center crop/scale the image\ndown to the default image height depending upon the value of\nshow_full_image.",
                    "format": "int32",
                    "type": "integer"
                },
                "imageHeightInDp": {
                    "description": "The image size specified in dp, this will be used instead of image_height\nwhen both are set.",
                    "format": "int32",
                    "type": "integer"
                },
                "photo": {
                    "$ref": "Sidekick__PhotoWithAttribution",
                    "description": "Photo to display in this row."
                },
                "showFullImage": {
                    "description": "Whether to show full image or perform a center crop to fit the\nplaceholder.\nCaveats:\n  1. The image will be scaled down and padded with whitespace so only use\n     with white background images.\n  2. Small images are NOT scaled up.",
                    "type": "boolean"
                },
                "showVideoPlayIcon": {
                    "description": "Display a (video) play icon over the image.",
                    "type": "boolean"
                },
                "startPaddingInDp": {
                    "description": "The padding on the right side of the image",
                    "format": "int32",
                    "type": "integer"
                },
                "talkback": {
                    "description": "String to use for talkback when a user taps on the image.",
                    "type": "string"
                },
                "topPaddingInDp": {
                    "description": "The padding above the image",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__ImageLureCardEntry": {
            "description": "A lure card that displays a title and some text along with a few images.\nClicking on the lure card will bring the user to a second page where they\nwill see additional info.",
            "id": "Sidekick__ImageLureCardEntry",
            "properties": {
                "justification": {
                    "description": "An explanation for why the lure is displayed, e.g. \"You searched for this\ntopic\".",
                    "type": "string"
                },
                "photo": {
                    "description": "A list of photos shown on the card.",
                    "items": {
                        "$ref": "Sidekick__Photo"
                    },
                    "type": "array"
                },
                "secondaryPageHeader": {
                    "$ref": "Sidekick__SecondaryPageHeaderDescriptor",
                    "description": "Settings for setting up browse mode."
                },
                "text": {
                    "description": "Text of the card.",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the card.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__InlineInjectionMetadata": {
            "description": "Collection-level metadata for inline action actions.",
            "id": "Sidekick__InlineInjectionMetadata",
            "properties": {
                "actionType": {
                    "description": "Action to log when inline injection occurs.",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "showGraftVeInfo": {
                    "description": "VEs that will be logged with a SHOW graft when inline injection occurs.\nThis may be a single container VE that is the parent for all injected\ncomponents VEs. The server should have logged these with VISIBILITY_HIDDEN.",
                    "items": {
                        "$ref": "Sidekick__VisualElementInfo"
                    },
                    "type": "array"
                },
                "talkbackAnnounce": {
                    "description": "Talkback string to announce when inline injection occurs.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__InlineInjectionModifier": {
            "description": "Action modifier that injects content into the feed.",
            "id": "Sidekick__InlineInjectionModifier",
            "properties": {
                "injectCollectionComponents": {
                    "description": "Instructs the client to inject all injectable components of the parent\ncollection (e.g. those with Entry.inline_injected_collection_component).",
                    "type": "boolean"
                },
                "minClickTimeSeconds": {
                    "description": "The minimum amount of time in seconds that user must spend away from the\nfeed before the injection occurs. If user returns to the feed before this\ntime is elapsed then no action is taken. This can be used with\nOpenUrlAction, for example, to avoid injecting content if the user spends\nonly a short time on the target web page. If omitted or set to 0 the\ninjection will happen immediately.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__InlineVideo": {
            "description": "A message which contains the information necessary to\npopulate an inline video.",
            "id": "Sidekick__InlineVideo",
            "properties": {
                "attribution": {
                    "description": "MetadataLine for the source of the inline video.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "title": {
                    "description": "MetadataLine for the title of the inline video.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__Interest": {
            "description": "The interest object serves two purposes. It is both a wire format for the\nclient to communicate that it is interested in a restricted\nset of all possible entries, and also for the collections to trim down the\nset of entries that they may return. For example, the\n\"Planning for the weekend\" collection would take an initial interest object,\nand further restrict it by adding a time_space_region for the area the user\nis likely to be this coming weekend and then use it to query the places\nsource.\n\nNOTE: Regular fields added after the client original launch will be dropped\nby the old clients and may not make it back to the server.",
            "id": "Sidekick__Interest",
            "properties": {
                "cardSelector": {
                    "description": "Restrict to evaluating only specific entry sources. Only one of\nentry_type_restrict or card_selector should be set.\nWord of caution:\n  Presence of a card_selector in the push request gets interpreted as a\n  partial refresh and, therefore, bypasses certain steps in the serving\n  infrastructure (intent system/ranking, packing etc) which may lead to\n  abnormalities in the stream. Partial refreshes also processed\n  differently by the client. Please consult with now-infrastructure@\n  if you are considering using card_selector.",
                    "items": {
                        "$ref": "Sidekick__CardSelector"
                    },
                    "type": "array"
                },
                "closetPageId": {
                    "description": "IF for each page in closet, could use collection name like interest picker,\ne.g. \"/collection/tv_actors\". Used with TargetDisplay.CLOSET",
                    "type": "string"
                },
                "constraintLevel": {
                    "description": "An indication of how constrained the results of this query should be.\nIf this is zero or not set, the default constraints should be used; as the\nlevel is higher, each entry source can decide how to relax them to\nreturn more results. Also see include_stricter_constraint_responses below.",
                    "format": "int32",
                    "type": "integer"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains an Interest proto that has only\nthe extensions set.\nLogging: this is strictly a client communication artifact, and the contents\nhere get replaced with actual extensions server-side before getting logged.",
                    "format": "byte",
                    "type": "string"
                },
                "entityInterestCollection": {
                    "description": "An entity interest collection, e.g. \"/collection/tv_actors\".\nUsed with TargetDisplay.INTEREST_PICKER",
                    "type": "string"
                },
                "entryTypeRestrict": {
                    "description": "Restrict to only fetching entries of given types. Only one of\nentry_type_restrict or card_selector should be set.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Note that MOVIE_LIST should be replaced with a sub-tree of MOVIE\nentries. We should not have entries that are rolled-up entries.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Lure to enter browse mode about an interest.",
                        "Lure to enter browse mode about a trip.",
                        "Lure to read articles from an author.",
                        "Lure to enter browse mode about a place.",
                        "A single entry in the Browse Mode Author lure.",
                        "A single URL recommendation in browse mode.",
                        "A list of entity recommendations in browse mode.",
                        "A single entity recommendation for the list in browse mode.",
                        "A list of video recommendations in browse mode.",
                        "A single video recommendation for the list in browse mode.",
                        "Lure to enter browse mode for things to read.",
                        "A single entry in the Browse Mode Author lure.",
                        "Things to watch card.",
                        "A TV things to watch recommendation.",
                        "A VOD things to watch recommendation.",
                        "",
                        "",
                        "A card showing a single suggested application for the user.",
                        "List card containing multiple app suggestions.",
                        "A card showing personalized news for a user.",
                        "A card showing a single suggested contact (call/sms) for the user.",
                        "List card containing multiple contact suggestions.",
                        "Detected car parking location.",
                        "List of detected car parking location cards.",
                        "List of related music entries.",
                        "Individual transportation cards.",
                        "List of transportation cards.",
                        "Traffic incidents a user is likely to encounter.",
                        "Individual bill card.",
                        "List of bill cards.",
                        "Entry for a product that the user is interested in.",
                        "Entry for list of products that the user is interested in.",
                        "A card for the store the user is in.",
                        "A card for a product with price drop that a user has visited online.",
                        "A card with a list of Web sites relating to the TV program the user is\nwatching.",
                        "A single reference in the TV Web site list card.",
                        "",
                        "Special group entry used to display suggested apps and contacts in the\nhotseat.",
                        "A list of content update items.",
                        "A content update item.",
                        "The app suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "The contact suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "",
                        "A card used to display interesting nearby content from Field Trip.",
                        "A cards containing photos from a friend at a location.",
                        "Lure to enter browse mode of Field Trip.",
                        "Text displayed in the background, between other cards.",
                        "Card which brings the user to a Google Now feedback survey.",
                        "Card for information on whatever is showing in the Chromecast ambient\nstate.  Can be a link to a news story, a G+ photo with a link to the\nalbum, etc.",
                        "Card displaying fitness data.",
                        "Card displaying agenda data.",
                        "Card displaying web result from predictive search",
                        "Card displaying gas stations along a route.",
                        "A List of AlongRouteEntry.",
                        "Module-based card",
                        "Module-based list card",
                        "Piet-based card (go/piet)",
                        "List lure to enter browse mode of Things To Do.",
                        "A list of flights with prices and price changes.",
                        "An individual flight entry from the list above.",
                        "G+ stories card",
                        "Card displaying welcome information to users receiving third party cards.",
                        "Card promoting the hotword.",
                        "Tutorial card for customizing your Google Now experience.",
                        "Tutorial card for how to change card preferences.",
                        "Tutorial card for how to swipe the cards away.",
                        "Tutorial card for swiping to customize.",
                        "Tutorial card for how to pull down the top bar to search.",
                        "Entry containing metadata about a lotic cluster (e.g. title, color).",
                        "Entry type for the Carousel.  The Carousel is a Group entry\nwith entries made up of Modules.  The Modules should be defined\nas SmallContentModules.",
                        "Entry type for the App Launcher.  The App Launcher is a Group entry\nwith the entries made up of modules.",
                        "Ulysses list type entry for displaying various needs at a location.",
                        "Entry type for a contact card which directs user to the contacts app",
                        "Gmail location of interest card.",
                        "Entry type for a card built from a Hallmark Component.",
                        "Closet interests page (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for interests landing page.\nThe client would show its preview of several interests on its parent page,\nand show all intersts children on its own page by different collections:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet interest category (from AGSA 6.5). This type should only be assigned\nto a group_entry. The client would show its preview of several interests on\nits parent page, and show all interests in this collection on its own page\nby interested, suggested, or not intersted:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control list (from AGSA 6.5). This type should only be assigned to\na group_entry. It would only be used for \"More preferences\" case.\nThe client would show a list of control types:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Closet control category (from AGSA 6.5). This type should only be assigned\nto a group_entry. It would be used for \"Weather\", \"Commute\" cases and etc.:\nhttps://folio.googleplex.com/gsa-closet/_Dailys/updates_03",
                        "Single type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Multi-type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Button in profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one interest: go/now-closet-proto.",
                        "Cards and notifications controls in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one question: go/now-closet-proto.",
                        "Closet template group which may contain template rows and headers/footers,\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Closet now settings for enabling Now and notifications, also providing an\nentry for clearing all preference.\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Related to happy hour code yellow in 2015 Q4, this is expected to only be\nused as a synthentic type.  A request translator is the only place this\nis put into a request, and this type will never be returned to a client.\nShould be removed as part of the transition to Action Pipelines taking over\ncommute notifications delivery.\n\nMore details at: http://go/now-hh-commute-cy-15q4",
                        "Used to create a background-less card for Lobby, see: go/lobby.",
                        "Module-based list card with modules displayed in a multi-column grid.",
                        "Non-rendering entry type that is used solely for area traffic notifications\nbound for GMM; there is no corresponding EntrySource.",
                        "Non-rendering entry type that is used solely for transit system\nnotifications bound for GMM; there is no corresponding EntrySource.",
                        "Synthetic entry type for client-generated promotional or tutorial\ncards.  These pseudo-cards are created on the client and are not\nused by the server.",
                        "A Health-related card.",
                        "Collection in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Card cap entry in the interest feed.\nFor more details, see go/feedv2-entrytree.",
                        "Search awareness cards (go/search-aware).",
                        "Cards containing Element data, which can be passed to the Element runtime\nto render the contents of the card on the UI. More details at go/elements",
                        "EntryType for facet chips (go/complex-facets)"
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN",
                            "FREQUENT_PLACE",
                            "UI_NAVIGATION",
                            "WEATHER",
                            "WEATHER_TINY",
                            "WEATHER_LIST",
                            "TRANSIT_STATION",
                            "GENERIC_CARD",
                            "GENERIC_TABLE",
                            "FLIGHT_STATUS",
                            "FLIGHT_LIST",
                            "SPORT_SCORE",
                            "SPORT_LURE_LIST",
                            "SPORT_EVENT",
                            "SPORT_HIGHLIGHT_LIST",
                            "SPORT_HIGHLIGHT",
                            "CALENDAR",
                            "TRANSLATE",
                            "CURRENCY_EXCHANGE",
                            "CLOCK",
                            "NEARBY_PLACE",
                            "PUBLIC_ALERT",
                            "MOVIE_LIST",
                            "STOCK_QUOTE_LIST",
                            "STOCK_QUOTE",
                            "ATTRACTIONS_LIST",
                            "ATTRACTION",
                            "PACKAGE_TRACKING",
                            "PACKAGE_TRACKING_LIST",
                            "NEWS",
                            "BREAKING_NEWS",
                            "HYPERLOCAL_NEWS",
                            "ENTITY_NEWS",
                            "PHOTO_SPOT",
                            "BIRTHDAY_CARD",
                            "EVENT",
                            "MOVIE",
                            "EVENT_LIST",
                            "RESEARCH_TOPIC",
                            "RESEARCH_PAGE",
                            "BARCODE",
                            "GMAIL",
                            "NEARBY_PLACES_LIST",
                            "REAL_ESTATE",
                            "REAL_ESTATE_LIST",
                            "OPEN_HOUSE",
                            "MOVIE_TICKET",
                            "REMINDER",
                            "REMINDER_LIST",
                            "WEBSITE_UPDATE",
                            "WEBSITE_UPDATE_LIST",
                            "GENERIC_TICKET",
                            "BOOK",
                            "ALBUM",
                            "VIDEO_GAME",
                            "TV_EPISODE",
                            "SHARED_TRAFFIC_CARD",
                            "RELEVANT_WEBSITE",
                            "RELEVANT_WEBSITE_LIST",
                            "LAST_TRAIN_HOME",
                            "TV_RECOGNITION",
                            "WALLET_LOYALTY",
                            "HOTEL_PLACE",
                            "RESTAURANT_PLACE",
                            "CAR_RENTAL",
                            "GENERIC_TV_PROGRAM",
                            "CONCERT_TICKET",
                            "TRAINING_QUESTION",
                            "TV_NEWS",
                            "TV_MUSIC",
                            "TV_KNOWLEDGE",
                            "TV_KNOWLEDGE_LIST",
                            "SPORT_EVENT_TICKET",
                            "PROTOTYPE",
                            "BROWSE_MODE_LURE_INTEREST_UPDATE",
                            "BROWSE_MODE_LURE_TRAVEL",
                            "BROWSE_MODE_LURE_AUTHOR",
                            "AT_A_PLACE",
                            "BROWSE_MODE_AUTHOR_STORY",
                            "BROWSE_MODE_WEB_LINK",
                            "BROWSE_MODE_ENTITY_LIST",
                            "BROWSE_MODE_ENTITY",
                            "BROWSE_MODE_VIDEO_LIST",
                            "BROWSE_MODE_VIDEO",
                            "BROWSE_MODE_READING_LURE",
                            "BROWSE_MODE_READING_STORY",
                            "THINGS_TO_WATCH",
                            "THINGS_TO_WATCH_TV",
                            "THINGS_TO_WATCH_VOD",
                            "THINGS_TO_WATCH_LURE",
                            "THINGS_TO_WATCH_LIST_LURE",
                            "APP_SUGGESTION",
                            "APP_SUGGESTION_LIST",
                            "PERSONALIZED_NEWS",
                            "CONTACT_SUGGESTION",
                            "CONTACT_SUGGESTION_LIST",
                            "VEHICLE_PARKING_LOCATION",
                            "VEHICLE_PARKING_LOCATION_LIST",
                            "TV_MUSIC_KNOWLEDGE_LIST",
                            "TRANSPORTATION",
                            "TRANSPORTATION_LIST",
                            "TRAFFIC_INCIDENTS",
                            "BILL",
                            "BILL_LIST",
                            "PRODUCT",
                            "PRODUCT_LIST",
                            "IN_STORE",
                            "PRICE_DROP",
                            "TV_RELATED_WEB_SITE_LIST",
                            "TV_RELATED_WEB_SITE",
                            "TV_RELATED_WEB_SITE_KNOWLEDGE",
                            "HOTSEAT_SUGGESTION_LIST",
                            "CONTENT_UPDATE_LIST",
                            "CONTENT_UPDATE_ITEM",
                            "HOTSEAT_APP_SUGGESTION",
                            "HOTSEAT_CONTACT_SUGGESTION",
                            "MALL_DIRECTORY",
                            "FIELD_TRIP",
                            "FRIEND_LOCATION_PHOTOS",
                            "FIELD_TRIP_LURE",
                            "BACKGROUND_TEXT",
                            "SURVEY_LURE",
                            "CHROMECAST_IMAX",
                            "FITNESS",
                            "AGENDA",
                            "WEB_ANSWER",
                            "GAS_STATION_ALONG_ROUTE",
                            "ALONG_ROUTE_LIST",
                            "MODULE",
                            "MODULE_LIST",
                            "PIET",
                            "THINGS_TO_DO_LIST_LURE",
                            "FLIGHT_PRICE_LIST",
                            "FLIGHT_PRICE",
                            "GOOGLE_PLUS_STORY",
                            "THIRD_PARTY_WELCOME",
                            "HOTWORD_PROMO",
                            "TUTORIAL_CARD_CUSTOMIZE",
                            "TUTORIAL_CARD_INTRO",
                            "TUTORIAL_CARD_SWIPE",
                            "TUTORIAL_CARD_SWIPE_FOR_CUSTOMIZE",
                            "TUTORIAL_CARD_PULL_DOWN",
                            "CLUSTER_METADATA",
                            "CAROUSEL_MODULE_LIST",
                            "APP_LAUNCH_LIST",
                            "ULYSSES_LIST",
                            "CONTACT_CARD",
                            "GMAIL_LOCATION_OF_INTEREST",
                            "COMPONENT",
                            "CLOSET_INTERESTS_PAGE",
                            "CLOSET_INTEREST_CATEGORY",
                            "CLOSET_CONTROL_LIST",
                            "CLOSET_CONTROL_CATEGORY",
                            "CLOSET_PROFILE_SINGLE_TYPE",
                            "CLOSET_PROFILE_MULTI_TYPE",
                            "CLOSET_PROFILE_BUTTON",
                            "CLOSET_ENTITY",
                            "CLOSET_CONTROL",
                            "CLOSET_QUESTION",
                            "CLOSET_TEMPLATE_GROUP",
                            "CLOSET_NOW_SETTINGS",
                            "COMMUTE_NOTIFICATION",
                            "LOBBY_CAROUSEL",
                            "GRID_MODULE_LIST",
                            "AREA_TRAFFIC",
                            "TRANSIT_SYSTEM",
                            "NOW_CLIENT_OPT_IN_PROMO",
                            "HEALTH_UPDATE",
                            "FEED_COLLECTION",
                            "CARD_CAP",
                            "SEARCH_AWARENESS",
                            "ELEMENT",
                            "FACETS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "filter": {
                    "$ref": "Sidekick_Interest_Filter"
                },
                "includeStricterConstraintResponses": {
                    "description": "Normally the response to a given constraint level are a DIFF, i.e.\nwould not include entries returned for a stricter (smaller) level.\nIf this field is true, the response will include those entries.",
                    "type": "boolean"
                },
                "interestPickerTreeKey": {
                    "description": "The interest picker tree key is used to differentiate between\ntrees in the interest picker config. That way, different entry\npoints can specify the key for the tree to be used (e.g. main page\ninterest picker vs routine second page interest picker may use\ndifferent trees as the target. We use string to eliminate need\nfor waiting for client changes to be propogated.\nUsed with TargetDisplay.INTEREST_PICKER.\nThe client version supporting this field is AGSA 6.6 and above.",
                    "type": "string"
                },
                "isAssistantHqRequest": {
                    "description": "Whether the request is triggered by Assistant HQ.",
                    "type": "boolean"
                },
                "showDebuggingInfo": {
                    "description": "If true, entry sources that can return debugging information or cards\nshould do so.",
                    "type": "boolean"
                },
                "source": {
                    "description": "The source that the interest comes from.",
                    "enum": [
                        "UNKNOWN",
                        "PUSH_FLIGHTS",
                        "PUSH_SPORTS",
                        "PUSH_FINANCE",
                        "PUSH_AT_A_PLACE_SLF",
                        "PUSH_LOTTERY",
                        "PUSH_AGSA_AT_A_PLACE_SLF_DEPRECATD",
                        "PUSH_STORIES_DEPRECATED",
                        "PUSH_WEATHER_DEPRECATED"
                    ],
                    "enumDescriptions": [
                        "Unknown source. Currently unused.",
                        "Event originated from Flight Status GOOPS feed.",
                        "Event originated from Live Graph Sports Vertical.",
                        "Event originated from RealtimeIntentsEngine to indicate a\nnotification-worthy finance entity.",
                        "Event originated from iOS at-a-place SLF.",
                        "Event originated from Live Graph Lottery Vertical.",
                        "Event originated from AGSA at-a-place SLF.",
                        "",
                        "Next available tag: 9"
                    ],
                    "type": "string"
                },
                "targetDisplay": {
                    "description": "If it is main screen, the target_display may not be set.",
                    "enum": [
                        "MAIN_SCREEN",
                        "WIDGET",
                        "NOTIFICATIONS",
                        "SETTINGS",
                        "SECONDARY_PAGE",
                        "LIST_ALL",
                        "FILTERED_LIST",
                        "SECONDARY_PAGE_BROWSE_TRAVEL",
                        "SECONDARY_PAGE_BROWSE",
                        "SECONDARY_PAGE_THINGS_TO_WATCH",
                        "CLOSET",
                        "SECONDARY_PAGE_SPORT",
                        "SECONDARY_PAGE_FIELD_TRIP",
                        "SECONDARY_PAGE_VEHICLE_PARK_LOCATIONS",
                        "SECONDARY_PAGE_AGENDA",
                        "SECONDARY_PAGE_HQ_AGENDA",
                        "SECONDARY_PAGE_PACKAGE_TRACKING",
                        "SECONDARY_PAGE_PERSONAL",
                        "SECONDARY_PAGE_ULYSSES",
                        "SECONDARY_PAGE_THINGS_TO_DO",
                        "SECONDARY_PAGE_BILL",
                        "SECONDARY_PAGE_TRANSPORTATION",
                        "SECONDARY_PAGE_SHOPPING_TASK",
                        "SCREEN_ASSIST",
                        "CARDMAKER_PREVIEW",
                        "SECONDARY_PAGE_CLUSTERED",
                        "INTEREST_PICKER",
                        "CARD_SYNC",
                        "INTEREST_PICKER_SEARCH",
                        "ASSISTANT_HQ"
                    ],
                    "enumDescriptions": [
                        "The main display.",
                        "The entry tree gets displayed on the widget. The widget may chose to\ndisplay the information differently; e.g. it may omit sub-headings.",
                        "The entries in the tree will get shown as notifications.\nDEPRECATED: this value is still supported for unmigrated use cases, but\nno new use cases/ should be built on it.",
                        "The entries being retrieved will be shown in the app settings, as a way\nfor the user to edit or manage data. Each entry source can interpret\nthis in their own way, based on what entries are editable.",
                        "For displaying a detailed full screen of data for a single card.",
                        "For getting unfiltered lists of entries for the current user.  Typically,\nrestricted to a certain type, e.g., REMINDER to get the full, unfiltered\nlist of reminders.",
                        "For getting a filtered list of entries for the current user.  Typically,\nrestricted to a certain type, e.g., LIVE_TV to get the results for a\ncontent id. This target display needs to have a matching Filter\nfield set.",
                        "The collection to provide travel related entries.",
                        "The collection to provide the browse mode interest page",
                        "The collection to provide the things to watch page.",
                        "The closet view. No entries are displayed here, but this is\nhere for completeness.",
                        "Secondary page for browse sports.",
                        "The collection to provide the field trip page.",
                        "The collection to provide the find my car page.",
                        "The collection to provide the agenda page.",
                        "The collection to provide the HQ agenda page.",
                        "The collection to provide the browse mode interest page",
                        "The collection to provide the personal browse mode page. The personal\nbrowse mode displays personal data (e.g. flights, reservations etc), as\na single expanded list card or separate cards. It's triggered from the\n\"Show more\" button on a lure card from the main view or the search scrim.",
                        "The collection to provide browse mode ulysses page.",
                        "The collection to provide browse mode Things To Do page.",
                        "The collection to provide browse mode Bill page.",
                        "",
                        "The collection to provide the shopping task browse mode page.",
                        "The collection to provide cards relevant to the user's recent activity on\na client device.",
                        "The collection to provide the preview dialog in GSA Cardmaker\n(deprecated).",
                        "Similar to SECONDARY_PAGE TargetDisplay but clusters the rendered cards\nusing the Lotic Packer.\nNote that most clustering is based on needs which are not normally\npresent in second screen requests.",
                        "The standalone interest picker. This type of interest is only used with\nInterestPickerQuery.",
                        "Whether to return the entries in card sync format.",
                        "Search function within the standalone interest picker.",
                        "Assistant HQ request go/opahq"
                    ],
                    "type": "string"
                },
                "testData": {
                    "description": "Get Entries with test data (rather than the user's actual data). This\ncapability is used to generate well known test cards for verifying push\nbehavior. For testing only - no need to log.",
                    "type": "boolean"
                },
                "timeSpaceRegion": {
                    "description": "Specify the time and places that are of interest; for example, San\nFrancisco this weekend. When there are multiple time-space regions\nspecified, then the \"OR\" of each is taken.",
                    "items": {
                        "$ref": "Sidekick_Interest_TimeSpaceRegion"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__InterestPickerAction": {
            "description": "An action to open an interest picker page.",
            "id": "Sidekick__InterestPickerAction",
            "properties": {
                "interest": {
                    "$ref": "Sidekick__Interest"
                }
            },
            "type": "object"
        },
        "Sidekick__Location": {
            "description": "NOTE: Most changes should be synced to\nsidekick_internal_client_api.Location",
            "id": "Sidekick__Location",
            "properties": {
                "address": {
                    "description": "A human-readable address string for the location; generally a one-line\naddress such as \"34 Masonic Ave, San Francisco CA 94117, United States\".",
                    "type": "string"
                },
                "alias": {
                    "description": "Alias for the location if this is a special location type.",
                    "enum": [
                        "NOT_SET",
                        "HOME",
                        "WORK",
                        "NICKNAME"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "aliasProvenance": {
                    "description": "The provenance of Alias if this is a special location type. This is for\ndebugging only. Please contact user-model-team@ before using this field.",
                    "enum": [
                        "UNKNOWN_PROVENANCE",
                        "EXPLICIT",
                        "INFERRED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Explicitly set by the user.",
                        "Inferred from implicit signals (e.g. location history)"
                    ],
                    "type": "string"
                },
                "boundingBox": {
                    "$ref": "Sidekick__LocationBound",
                    "description": "bounding box that represents the potential location of a given user\nthis is populated on the server side when location data is populated\nby a service which may not provide an exact location such as Oolong\nThis field will be used by Push features which are sensitive to changes\nin location accuracy"
                },
                "cellId": {
                    "description": "The cellid of a FeatureId.\nNOTE: May not be populated even if cid is populated.\n///////////////////////////////////////////////////////////////////////",
                    "format": "uint64",
                    "type": "string"
                },
                "chain": {
                    "$ref": "Sidekick__Chain",
                    "description": "If this location is for a chain, this is the chain information."
                },
                "cid": {
                    "description": "The geo Cluster id, aka the fprint of a FeatureId.",
                    "format": "int64",
                    "type": "string"
                },
                "encodedServerPayload": {
                    "description": "Nabo proto doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains an encoded FrequentPlace proto that\nhas only the extensions set.",
                    "format": "byte",
                    "type": "string"
                },
                "featureType": {
                    "description": "The feature type if the info is available from the geocoder result.\nThe number represents enum value of TypeCategory defined in\ngeostore/base/proto/feature.proto.",
                    "format": "int32",
                    "type": "integer"
                },
                "geocodeToken": {
                    "description": "A geocode token that may passed to GMM or Navigation to indicate a\nplace directly (cluster id / feature id) rather than a lat/lng.\nThis is a base64 encoded maps_frontend.CachedGeocodeExternalProto",
                    "type": "string"
                },
                "lat": {
                    "description": "We use double since longitude float precision is ~1-4 meters,\nworst at dateline/equator. Not all uses are actually sensitive locations.\nSee containing field for specific comments on how sensitive each instance\nis.",
                    "format": "double",
                    "type": "number"
                },
                "lng": {
                    "format": "double",
                    "type": "number"
                },
                "name": {
                    "description": "Short descriptive name, e.g. \"Home\", \"Work\", a user-edited place name\n(e.g. \"Gym\"), or a reverse geocoded business name.\nMost of the time this is actually not user input, but a business name.",
                    "type": "string"
                },
                "postalCode": {
                    "description": "The postal code containing the location.",
                    "type": "string"
                },
                "radiusMeters": {
                    "description": "Denotes the size of the place.",
                    "format": "double",
                    "type": "number"
                },
                "s2CellId": {
                    "description": "The ID of an S2 cell containing the user's coarse location. The cell will\nbe, at smallest, at S2 level 12, too large to pinpoint the user's precise\nlocation. This may be populated in cases when privacy concerns prevent the\nuse of the lat/lng fields.",
                    "format": "uint64",
                    "type": "string"
                },
                "skipGeocode": {
                    "description": "Whether geocoding for this location should be skipped. This can happen if\nthe location is just a list of meeting room names (e.g. calendar events).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__LocationBound": {
            "description": "Proto to define a rectangle that bounds a location such as SFO airport, San\nJose etc.\nMirrors majel.LocationBound.",
            "id": "Sidekick__LocationBound",
            "properties": {
                "hiLatE7": {
                    "format": "uint32",
                    "type": "integer"
                },
                "hiLngE7": {
                    "format": "uint32",
                    "type": "integer"
                },
                "loLatE7": {
                    "format": "uint32",
                    "type": "integer"
                },
                "loLngE7": {
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__LocationCategory": {
            "description": "Data for a category.\nAll changes probably should be synced to:\n   quality/majel/api/proto/ecoutez_structured_response.proto#Category\n   caribou/tasks/location.proto#CategoryInfo",
            "id": "Sidekick__LocationCategory",
            "properties": {
                "categoryId": {
                    "description": "Unique id, only used internally to identify the category. Currently, we're\nusing mids to identify categories (unique identifiers from knowledge\ngraph). This is currently set by the sidekick server/superroot when\nsuggesting a category as a candidate location.",
                    "type": "string"
                },
                "displayDescription": {
                    "description": "The optional subtitle or description for rendering on the client, e.g.\n\"All large grocery chains\". It is assumed to be in the user's locale.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The category name to use for rendering on the client, e.g.\n\"Grocery stores\". It is assumed to be in the user's locale.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__LoggedOnDeviceMetadata": {
            "description": "Data about a card generated on-device which has been approved for logging.\nThis data is in a separate message and named \"Logged\" to make it clear that\ndata in this message will end up getting logged even though the card\noriginated on the client device.",
            "id": "Sidekick__LoggedOnDeviceMetadata",
            "properties": {},
            "type": "object"
        },
        "Sidekick__MallDirectoryEntry": {
            "description": "Entry to show a mall directory card.\nE.g. store in a mall or an airport.",
            "id": "Sidekick__MallDirectoryEntry",
            "properties": {
                "details": {
                    "description": "The details of the place. E.g.  \"140 stores and services\".",
                    "type": "string"
                },
                "featureId": {
                    "$ref": "Sidekick__GeostoreFeatureId",
                    "description": "A unique id for the place (e.g. the Mall id)."
                },
                "mallStore": {
                    "description": "The entire list of stores in the mall.",
                    "items": {
                        "$ref": "Sidekick_MallDirectoryEntry_Store"
                    },
                    "type": "array"
                },
                "maxStoresToDisplay": {
                    "description": "Max number of stores to display on the card.",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the place. E.g. \"Stanford Mall\"",
                    "type": "string"
                },
                "store": {
                    "description": "The list of stores that are actually shown on the card.\nThis field is deprecated in favor of the all_stores field below.\nThis field is kept for legacy clients.",
                    "items": {
                        "$ref": "Sidekick__BusinessData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ManageNotificationsAction": {
            "description": "Additional information can be provided here to determine which part of the\nnotification settings the user should be navigated to.",
            "id": "Sidekick__ManageNotificationsAction",
            "properties": {},
            "type": "object"
        },
        "Sidekick__MeasurementsInDp": {
            "description": "Specify a start/end top/bottom measurements in DP.  Used on the grid\nto specify things like padding",
            "id": "Sidekick__MeasurementsInDp",
            "properties": {
                "bottom": {
                    "format": "int32",
                    "type": "integer"
                },
                "end": {
                    "format": "int32",
                    "type": "integer"
                },
                "start": {
                    "format": "int32",
                    "type": "integer"
                },
                "top": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__MetadataChunk": {
            "description": "A single chunk of metadata in a MetadataLine",
            "id": "Sidekick__MetadataChunk",
            "properties": {
                "chunkFormatting": {
                    "format": "int32",
                    "type": "integer"
                },
                "distanceMetadata": {
                    "$ref": "Sidekick__DistanceMetadata"
                },
                "iconImageSize": {
                    "description": "Use inline_icon to specify the icon, rather than using the pair\nof deprecated fields icon_image_url and icon_image_size.",
                    "enum": [
                        "UNKNOWN_ICON_SIZE",
                        "THIRD_PARTY_LOGO",
                        "ICON_H1",
                        "ICON_H2",
                        "ICON_H3",
                        "ICON_H4",
                        "ICON_H5",
                        "ATTRIBUTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "3rd party logo at the end (right for LTR layouts) of the card header.",
                        "text-line image sizes, these will map into device independent\nsizes on the client.",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "iconImageUrl": {
                    "description": "Use inline_icon to specify the icon, rather than using the pair\nof deprecated fields icon_image_url and icon_image_size.",
                    "type": "string"
                },
                "inlineIcon": {
                    "$ref": "Sidekick__ModuleIcon"
                },
                "rating": {
                    "$ref": "Sidekick__Rating"
                },
                "ratingStarsMetadata": {
                    "$ref": "Sidekick__RatingStarsMetadata"
                },
                "statusBadgeMetadata": {
                    "$ref": "Sidekick__StatusBadgeMetadata"
                },
                "stringMetadata": {
                    "$ref": "Sidekick__StringMetadata"
                },
                "talkback": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Talkback string for the metadata chunk."
                },
                "type": {
                    "enum": [
                        "STRING",
                        "RATING",
                        "STATUS_BADGE",
                        "ICON",
                        "DISTANCE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "weight": {
                    "description": "The \"importance\" of the MetadataChunk in terms of how much of the space it\nshould occupy on the screen. MetadataChunks with higher weights will be\nellipsized and lose space on the screen first. For example if you have two\nchunks and you give the first a weight of 1 and the second a weight of 0\nthen you are saying the first chunk is less important (since it has a\nhigher number) and it will truncate and ellipsize first. For\nmore infomation on android view weights:\nhttps://developer.android.com/guide/topics/ui/layout/linear.html",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__MetadataLine": {
            "description": "Line of content data specified in certain cards",
            "id": "Sidekick__MetadataLine",
            "properties": {
                "bottomMarginInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "forceMaxLines": {
                    "description": "Determines whether or not the metadataLine should take up the space of the\nspecified maxLines regardless of the actual number of lines the text fills.",
                    "type": "boolean"
                },
                "forceSeparatorAtBeginning": {
                    "description": "Forces a space separator at the beginning of the first MetadataChunk.",
                    "type": "boolean"
                },
                "gravity": {
                    "enum": [
                        "GRAVITY_DEFAULT",
                        "GRAVITY_END",
                        "GRAVITY_CENTER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "maxLineCount": {
                    "description": "The number of lines which will be displayed.",
                    "format": "int32",
                    "type": "integer"
                },
                "metadataChunk": {
                    "description": "The individual pieces of data that should be placed in this line",
                    "items": {
                        "$ref": "Sidekick__MetadataChunk"
                    },
                    "type": "array"
                },
                "metadataSpaceSeparator": {
                    "description": "The space separator which is shown between metadata chunks.",
                    "type": "string"
                },
                "outline": {
                    "$ref": "Sidekick__Outline"
                },
                "talkback": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Talkback string which will be added to the generated\nline when that line is a text view.  Currently\nthis is only supported for the SmallContentModule"
                },
                "topMarginInDp": {
                    "description": "Adds additional spacing above the MetadataLine, measured in DP. This\nspacing will NOT overlap with any other defined spacing--for example, if\nthere was a MetadataLine above this one with a bottom_margin_in_dp set to\n3 dp and this MetadataLine has a top_margin_in_dp of 4 dp, then the total\nspacing between them will be 7 dp.\nMinimum supported versions:\n  - iGSA: Flash (v58)\n  - AGSA: 8.15",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "The type display type of the line.",
                    "enum": [
                        "UNDEFINED",
                        "TITLE",
                        "SMALL_TITLE",
                        "ATTRIBUTION",
                        "COMPACT_ATTRIBUTION",
                        "TEXTLINE",
                        "TEXTLINE_WITH_IMAGE",
                        "JUSTIFICATION",
                        "LOTIC_JUSTIFICATION",
                        "LOTIC_SMALL_TITLE",
                        "LOTIC_SMALL_TITLE_CENTERED_TEXT",
                        "LOTIC_SMALL_TEXTLINE",
                        "LOTIC_EXTRA_INFO",
                        "TUTORIAL_TITLE",
                        "TUTORIAL_TEXTLINE",
                        "LOTIC_TUTORIAL_TITLE",
                        "LOTIC_TUTORIAL_TEXTLINE",
                        "LOTIC_SMALL_LIST_ITEM_TITLE",
                        "LOTIC_CAP",
                        "LOTIC_SMALL_ARTICLE_TITLE",
                        "LOTIC_SMALL_CAROUSEL_TITLE",
                        "WEAR_LARGE_TITLE",
                        "WEAR_TITLE",
                        "WEAR_SMALL_TITLE",
                        "WEAR_TEXTLINE",
                        "WEAR_SUBTEXT",
                        "WEAR_METADATA",
                        "SCREENIE_TITLE",
                        "SCREENIE_TEXTLINE",
                        "OPTIN_TITLE",
                        "OPTIN_SUBTITLE",
                        "SCREENIE_ARTICLE_TITLE",
                        "SCREENIE_LIST_HEADER_TITLE",
                        "TABULAR_HEADER",
                        "TABULAR_HEADER_NO_TITLE",
                        "TABULAR_TEXTLINE",
                        "CLOSET_TITLE",
                        "H1_DARK",
                        "H2_DARK",
                        "H4_DARK",
                        "H4_MEDIUM",
                        "H4_LIGHT",
                        "H5_DARK",
                        "H5_MEDIUM",
                        "H5_LIGHT",
                        "H6_MEDIUM",
                        "H6_LIGHT",
                        "HQ_HEADLINE_L",
                        "HQ_TOOLBAR_TITLE",
                        "HQ_HEADLINE_M",
                        "HQ_HEADLINE_S",
                        "HQ_BODY",
                        "HQ_BODY_2",
                        "HQ_CARD_TITLE",
                        "HQ_PARTNER_NAME",
                        "HQ_SUBTITLE",
                        "HQ_FOOTER",
                        "HQ_HEADER",
                        "HQ_CAP_TEXTLINE",
                        "FONT_34SP_40DP_L",
                        "FONT_20SP_24DP_R",
                        "FONT_18SP_24DP_R",
                        "FONT_16SP_20DP_M",
                        "FONT_16SP_20DP_R",
                        "FONT_14SP_20DP_M",
                        "FONT_14SP_20DP_R",
                        "FONT_12SP_16DP_R",
                        "FONT_12SP_16DP_M",
                        "FONT_11SP_12DP_M",
                        "GOOGLE_SANS_10SP_12LS_R",
                        "GOOGLE_SANS_10SP_12LS_M",
                        "GOOGLE_SANS_14SP_20LS_R",
                        "GOOGLE_SANS_14SP_18LS_R",
                        "GOOGLE_SANS_14SP_16LS_M",
                        "GOOGLE_SANS_14SP_20LS_M",
                        "GOOGLE_SANS_16SP_20LS_M",
                        "GOOGLE_SANS_16SP_20LS_R",
                        "GOOGLE_SANS_16SP_22LS_R",
                        "GOOGLE_SANS_16SP_24LS_R",
                        "GOOGLE_SANS_18SP_24LS_R",
                        "GOOGLE_SANS_20SP_25LS_R",
                        "GOOGLE_SANS_22SP_30LS_M",
                        "GOOGLE_SANS_36SP_36LS_R",
                        "ROBOTO_10SP_12LS_M",
                        "ROBOTO_10SP_12LS_R",
                        "ROBOTO_11SP_16LS_M",
                        "ROBOTO_11SP_16LS_M_8",
                        "ROBOTO_12SP_16LS_R",
                        "ROBOTO_14SP_20LS_R",
                        "ROBOTO_14SP_20LS_M",
                        "ROBOTO_16SP_20LS_M",
                        "ROBOTO_16SP_20LS_R",
                        "ROBOTO_24SP_32LS_M"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Styles available post lotic can be seen at\nhttps://folio.googleplex.com/now-new-stream/Spec/lotic_5-4#%2Ftypography_02.png\neach of these styles is supported in three basic colors as seen in\nhttps://folio.googleplex.com/now-new-stream/Spec/lotic_5-4#%2Ftypography_03.png\nB1 = DARK, B2 = MEDIUM, B3 = LIGHT. If a dark theme is being used, the\ncorresponding W value is displayed.\n22sp, 28pt leading, tracking 10pt, #000000 alpha 87% or\n# FFFFFF alpha 100%",
                        "18sp, 24pt leading, tracking 5pt, #000000 alpha 87% or #FFFFFF alpha 100%",
                        "16sp, 24pt leading, tracking 10pt, #000000 alpha 87% or\n# FFFFFF alpha 100%",
                        "16sp, 24pt leading, tracking 10pt, #000000 alpha 54% or #FFFFFF alpha 66%",
                        "16sp, 24pt leading, tracking 10pt, #000000 alpha 38% or #FFFFFF alpha 66%",
                        "14sp, 20pt leading, tracking 10pt, #000000 alpha 87% or\n# FFFFFF alpha 100%",
                        "14sp, 20pt leading, tracking 10pt, #000000 alpha 54% or #FFFFFF alpha 66%",
                        "14sp, 20pt leading, tracking 10pt, #000000 alpha 38% or #FFFFFF alpha 66%",
                        "12sp, 16pt leading, tracking 20pt, #000000 alpha 54% or #FFFFFF alpha 66%",
                        "12sp, 16pt leading, tracking 20pt, #000000 alpha 38% or #FFFFFF alpha 66%",
                        "These are the Typographical styles for Assistent HQ",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "These follow the naming convention: size_lineheight_weight, where weight\nis L (Light), R (Regular), or M (Medium). All of these fonts will default\nto black, and have no additional paddings around them. These are made\nprimarily to be used in the interest feed.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "FONT_11SP_12DP_M also has a character spacing of 0.02",
                        "Fonts used in Gestalt",
                        "",
                        "",
                        "",
                        "GOOGLE_SANS_14SP_16LS_M is Deprecated",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "ROBOTO_11SP_16LS_M has character spacing of 0.16",
                        "ROBOTO_11SP_16LS_M_8 has character spacing of 0.08",
                        "",
                        "ROBOTO_14SP_20LS_R has character spacing of 0.02",
                        "ROBOTO_14SP_20LS_R has character spacing of 0.02",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "useWeights": {
                    "description": "Determines whether or not the metadataLine should use the weights in the\nmetadataChunks.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__ModuleEntry": {
            "description": "A card built up server-side out of modules.",
            "id": "Sidekick__ModuleEntry",
            "properties": {
                "modules": {
                    "description": "The modules that should make up the appearance of this Entry.",
                    "items": {
                        "$ref": "Sidekick__CardModule"
                    },
                    "type": "array"
                },
                "removeCardElevation": {
                    "type": "boolean"
                },
                "showDividers": {
                    "description": "Whether or not to show dividers between modules.",
                    "type": "boolean"
                },
                "updatedState": {
                    "items": {
                        "$ref": "Sidekick_ModuleEntry_ModuleUpdateState"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ModuleIcon": {
            "description": "Define an Icon and give control of it.  The icon may be defined through\neither a resource enum or as URL.  We also allow control over the background\ncolor and if the icon is tinted or not.\n\nSome fields are not supported in MetadataChunk.inline_icon. See the comment\nof each field for details. Rendering of MetadataChunk.inline_icon is done in:\n  //java/com/google/android/apps/gsa/extradex/nowcards/servermodules/\n      MetadataLineView.java\n  //java/com/google/android/apps/gsa/extradex/nowcards/servermodules/\n      MetadataLineViewFactory.java\n",
            "id": "Sidekick__ModuleIcon",
            "properties": {
                "backgroundColor": {
                    "description": "The icon background color defined by the standard status colors.\nIn MetadataChunk.inline_icon, setting background_color has the same effect\nas setting primary_color (i.e., it sets the tint color instead of the\nbackground color), and background_color overrides primary_color if both are\ndefined.",
                    "enum": [
                        "NEUTRAL",
                        "GOOD",
                        "CRITICAL",
                        "WARNING",
                        "ICON_BACKGROUND"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "this is the standard color for the background on an icon"
                    ],
                    "type": "string"
                },
                "customBackgroundColor": {
                    "description": "Allow custom background colors.  This will override\nany value defined in background_color, if both are defined.\nNot supported and ignored in MetadataChunk.inline_icon.",
                    "format": "int32",
                    "type": "integer"
                },
                "customPrimaryColor": {
                    "description": "Allow custom tint colors.  This will override\nany value defined in primary_color, if both are defined.",
                    "format": "int32",
                    "type": "integer"
                },
                "darkThemeBackgroundColor": {
                    "description": "Allow custom background color for android dark theme in\nMetadataChunk.inline_icon. This color goes behind the icon.",
                    "format": "int32",
                    "type": "integer"
                },
                "darkThemeCustomPrimaryColor": {
                    "description": "Allow custom tint colors for android dark theme.  This will override\nany value defined in primary_color, if both are defined.",
                    "format": "int32",
                    "type": "integer"
                },
                "darkThemeIcon": {
                    "description": "An icon from a standard resource specified by ActionIcon",
                    "enum": [
                        "UNKNOWN_ACTION_ICON",
                        "CALL",
                        "SMS",
                        "EMAIL",
                        "PLAY",
                        "START_NAVIGATION",
                        "MAP_LOCATION",
                        "DIRECTIONS",
                        "VIEW_MORE",
                        "CONFIRM",
                        "VIEW_ALARMS",
                        "EDIT",
                        "VIEW_EVENT",
                        "BUY",
                        "KEEP",
                        "ICON_ADD",
                        "LOCAL_TAXI",
                        "ADD_ALERT",
                        "AUTO_FIX",
                        "ICON_BILL",
                        "BLOCK",
                        "ICON_BOOK",
                        "CAR",
                        "CARD_TRAVEL",
                        "CURRENCY_CONVERTER",
                        "DIALER",
                        "DRIVE_TEXT",
                        "DIRECTIONS_BIKE",
                        "DIRECTIONS_TRANSIT",
                        "DIRECTIONS_WALK",
                        "FEEDBACK",
                        "GOOGLE",
                        "HISTORY",
                        "HOTEL",
                        "LOCAL_SHIPPING",
                        "MUSIC_ALBUM",
                        "ICON_NEWS",
                        "PERSON",
                        "PLANE",
                        "PLAY_ARROW",
                        "QUANTUM_GENERIC_BUSINESS",
                        "QUANTUM_GENERIC_ICON",
                        "QUANTUM_MOVIE",
                        "QUANTUM_MOVIE_IN_THEATER",
                        "QUANTUM_PHONE_NUMBER",
                        "QUANTUM_PLACE_ADDRESS",
                        "QUANTUM_RESTAURANT",
                        "ICON_REMINDER",
                        "ICON_REMOVE",
                        "REPORT",
                        "RESERVATION",
                        "RESTAURANT",
                        "SHOPPING_BASKET",
                        "SHOPPING_CART",
                        "SPORTS_BASEBALL",
                        "SPORTS_BASKETBALL",
                        "SPORTS_CRICKET",
                        "SPORTS_FOOTBALL",
                        "SPORTS_HOCKEY",
                        "SPORTS_RUGBY",
                        "SPORTS_SOCCER",
                        "STAR",
                        "STOCK",
                        "STOCK_DASH",
                        "STOCK_DOWN",
                        "STOCK_UP",
                        "STORE",
                        "TAG",
                        "TEMPERATURE",
                        "THUMB_DOWN",
                        "TIME_AT_HOME",
                        "TRENDING_UP",
                        "VISIBILITY",
                        "VISIBILITY_OFF",
                        "GOOGLE_PROVIDED_CONTENT",
                        "MAPS_LOGO",
                        "YOU_TUBE_LOGO",
                        "YOU_TUBE_LOGO_WHITE",
                        "GMAIL_LOGO",
                        "CALENDAR_LOGO",
                        "GOOGLE_PLUS_LOGO",
                        "TRANSLATE_LOGO",
                        "TRAVEL_FLIGHTS_LOGO",
                        "TRAVEL_HOTELS_LOGO",
                        "SHOPPING_LOGO",
                        "MUSIC_NOTE",
                        "ARTIST",
                        "DIRECTIONS_CAR",
                        "LIBRARY_BOOKS",
                        "LOCAL_OFFER",
                        "LOCAL_PHARMACY",
                        "SCHOOL",
                        "PALETTE",
                        "WEB",
                        "SEARCH",
                        "HANGOUT",
                        "WB_SUNNY",
                        "DRIVE_ETA",
                        "HOME",
                        "WORK",
                        "MIC",
                        "ICON_TRANSLATE",
                        "UPDATE",
                        "AMP_ICON_12",
                        "AMP_ICON_16",
                        "AMP_SEARCH_ICON_12",
                        "CHEVRON_RIGHT",
                        "CHEVRON_LEFT",
                        "CLOSE",
                        "ARROW_RIGHT",
                        "ARROW_LEFT",
                        "ADD_CIRCLE",
                        "SHARE",
                        "SHARE_18",
                        "TRIANGLE_LEFT",
                        "TRIANGLE_RIGHT",
                        "ADD_CIRCLE_OUTLINE",
                        "CHECK_CIRCLE",
                        "ADD_BOLD",
                        "CHECK_BOLD",
                        "LIVE_TV",
                        "PEOPLE",
                        "SHOW_CHART",
                        "LOCAL_DINING",
                        "PUBLIC",
                        "BRUSH",
                        "ARROW_UPWARD",
                        "ARROW_DOWNWARD",
                        "SAVE_FOR_LATER",
                        "SAVED_FOR_LATER",
                        "FEED_STORY_MORE",
                        "FEED_STORY_LESS",
                        "INFO",
                        "AD_BADGE",
                        "AD_BADGE_TEXT",
                        "FEED_STORY_NEUTRAL",
                        "FILLED_BOLT_AMP_ICON",
                        "DARK_FEED_STORY_NEUTRAL",
                        "DARK_FEED_STORY_MORE",
                        "INTEREST_MARK",
                        "TUNE",
                        "STAMP_ICON",
                        "PLAYSTORE_LOGO_ICON",
                        "MORE_VERT",
                        "VIDEO_SETTINGS",
                        "FAVORITE",
                        "FAVORITE_BORDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "See\nhttps://developers.google.com/now/api/using-templates#google_logos_and_icons",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Plus icon with not bolded lines",
                        "",
                        "Internal use only.\nhttps://icons.googleplex.com/#icon=ic_add_alert",
                        "https://icons.googleplex.com/#icon=ic_auto_fix",
                        "",
                        "https://icons.googleplex.com/#icon=ic_block",
                        "https://icons.googleplex.com/#icon=ic_book",
                        "",
                        "# ic_card_travel_white_24\n",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_drive_text",
                        "https://icons.googleplex.com/#icon=ic_directions_bike",
                        "https://icons.googleplex.com/#icon=ic_directions_transit",
                        "https://icons.googleplex.com/#icon=ic_directions_walk",
                        "https://icons.googleplex.com/#icon=ic_feedback",
                        "# ic_google_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_history",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_album",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_play_arrow",
                        "The standard quantum generic business icon",
                        "The standard quantum generic, fallback icon",
                        "The standard quantum movie icon",
                        "The standard quantum movie in theaters icon",
                        "The standard quantum phone number icon",
                        "The standard quantum place address icon",
                        "The standard quantum restaurant icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_highlight_off",
                        "https://icons.googleplex.com/#icon=ic_report",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_shopping_basket",
                        "https://icons.googleplex.com/#icon=ic_shopping_cart",
                        "Sports",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_star",
                        "Generic stock icon",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_store",
                        "Price tag icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_thumb_down",
                        "",
                        "# ic_trending_up_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_visibility",
                        "https://icons.googleplex.com/#icon=ic_visibility_off",
                        "Color icon for generic Google provided content.\nSome Card Caps will use specific logos, such as GMAIL\nwhent he source of the card is more specific.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "ic_music_note_white_24",
                        "ic_artist_white_24",
                        "ic_directions_car_white_24",
                        "ic_library_books_white_24",
                        "ic_local_offer_white_24",
                        "ic_local_pharmacy_white_24",
                        "ic_school_white_24",
                        "ic_palette_white_24",
                        "ic_web_white_24",
                        "ic_search_white_24",
                        "ic_hangout_white_24",
                        "https://icons.googleplex.com/#icon=ic_wb_sunny",
                        "https://icons.googleplex.com/#icon=ic_drive_eta",
                        "https://icons.googleplex.com/#icon=ic_home",
                        "https://icons.googleplex.com/#icon=ic_work",
                        "https://icons.googleplex.com/#icon=ic_mic",
                        "https://icons.googleplex.com/#icon=ic_translate",
                        "",
                        "12pt AMP Icon",
                        "16pt AMP Icon",
                        "Search AMP Icon",
                        "Chevron Right icon https://icons.googleplex.com/#icon=ic_chevron_right\nAvailable in AGSA 6.6+.",
                        "Chevron Left icon https://icons.googleplex.com/#icon=ic_chevron_left\nAvailable in AGSA 6.6+.",
                        "Close or (X) icon https://icons.googleplex.com/#icon=ic_close&search=close\nAvailable in AGSA 6.6+.",
                        "Arrow Right icon https://icons.googleplex.com/#icon=ic_arrow_forward\nAvailable in AGSA 6.6+.",
                        "Arrow Left icon https://icons.googleplex.com/#icon=ic_arrow_back\nAvailable in AGSA 6.6+.",
                        "Plus icon inside a circle https://icons.googleplex.com/#icon=ic_add_circle\nAvailable in AGSA 6.9+.",
                        "https://icons.googleplex.com/#icon=ic_share\nAvailable in AGSA 6.12+",
                        "https://icons.googleplex.com/#icon=ic_share 18 dp asset\nAvailable in AGSA 8.01+",
                        "https://icons.googleplex.com/#icon=ic_arrow_left\nAvailable in AGSA 6.17+",
                        "https://icons.googleplex.com/#icon=ic_arrow_right\nAvailable in AGSA 6.17+",
                        "Plus icon inside a outline circle.\nhttps://icons.googleplex.com/#icon=ic_add_circle_outline\nAvailable in iGSA 28.0+.",
                        "Check icon inside a circle.\nhttps://icons.googleplex.com/#icon=ic_check_circle\nAvailable in iGSA 28.0+.",
                        "Plus icon with bolded lines.\nAvailable in AGSA 7.3+",
                        "Check icon.\nAvailable in AGSA 7.3+",
                        "Live TV icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_live_tv",
                        "People icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_people",
                        "Show Chart icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_show_chart",
                        "Local Dining icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_local_dining",
                        "Public icon (looks like an earth)\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_public",
                        "Brush icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_brush",
                        "Upward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_upward",
                        "Downward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_downward",
                        "Bookmark icon-border",
                        "Bookmark icon-filled in",
                        "More icon",
                        "Less icon",
                        "Info icon\nAvailble in AGSA 7.17+\nhttps://icons.googleplex.com/#icon=ic_info",
                        "AdBadge icon (deprecated and will be deleted after b/130308386)\nAvailable in AGSA 7.18+, iGSA 46.0+",
                        "Available in AGSA 9.66+, this supports all languages, AD_BADGE does not.",
                        "Neutral icon for reactions\nAvailble in AGSA 7.20+",
                        "A custom made AMP icon that has a filled bolt instead of a transparent one.\nThis is intended to be used as an overlay shown over an image, where the\ncolor of the image is not known, but other uses may be beneficial as well.\nAvailable in AGSA 8.6+\nAvailable in iGSA 52+ (Zero Wing)",
                        "Custom android dark theme version of the Neutral icon for reactions",
                        "Custom android dark theme version of the More icon for reactions",
                        "Interest spark for gestalt brand.\ngoogledata/html/external_content/gstatic/android/now/images/default/xxhdpi/interest-mark.png",
                        "\"Manage interests\" icon used with the interest management UI. See\ngo/web-interest-management-design.\nhttps://icons.googleplex.com/#icon=ic_tune",
                        "Icon displayed on top of STAMP documents go/stampinfeed\nAvailable in AGSA 8.24+\nAvailable in iGSA 64.0+",
                        "Playstore logo icon\nAvailable in AGSA 8.50+",
                        "Snowman button\nhttps://www.gstatic.com/images/icons/material/system/1x/more_vert_black_24dp.png",
                        "Video settings icon.",
                        "Heart icon-filled in",
                        "Heart icon-border"
                    ],
                    "type": "string"
                },
                "darkThemeIconUrl": {
                    "description": "An icon from a web URL.",
                    "type": "string"
                },
                "darkThemeTextIcon": {
                    "$ref": "Sidekick__TextIcon",
                    "description": "A text icon (monogram)."
                },
                "icon": {
                    "description": "An icon from a standard resource specified by ActionIcon",
                    "enum": [
                        "UNKNOWN_ACTION_ICON",
                        "CALL",
                        "SMS",
                        "EMAIL",
                        "PLAY",
                        "START_NAVIGATION",
                        "MAP_LOCATION",
                        "DIRECTIONS",
                        "VIEW_MORE",
                        "CONFIRM",
                        "VIEW_ALARMS",
                        "EDIT",
                        "VIEW_EVENT",
                        "BUY",
                        "KEEP",
                        "ICON_ADD",
                        "LOCAL_TAXI",
                        "ADD_ALERT",
                        "AUTO_FIX",
                        "ICON_BILL",
                        "BLOCK",
                        "ICON_BOOK",
                        "CAR",
                        "CARD_TRAVEL",
                        "CURRENCY_CONVERTER",
                        "DIALER",
                        "DRIVE_TEXT",
                        "DIRECTIONS_BIKE",
                        "DIRECTIONS_TRANSIT",
                        "DIRECTIONS_WALK",
                        "FEEDBACK",
                        "GOOGLE",
                        "HISTORY",
                        "HOTEL",
                        "LOCAL_SHIPPING",
                        "MUSIC_ALBUM",
                        "ICON_NEWS",
                        "PERSON",
                        "PLANE",
                        "PLAY_ARROW",
                        "QUANTUM_GENERIC_BUSINESS",
                        "QUANTUM_GENERIC_ICON",
                        "QUANTUM_MOVIE",
                        "QUANTUM_MOVIE_IN_THEATER",
                        "QUANTUM_PHONE_NUMBER",
                        "QUANTUM_PLACE_ADDRESS",
                        "QUANTUM_RESTAURANT",
                        "ICON_REMINDER",
                        "ICON_REMOVE",
                        "REPORT",
                        "RESERVATION",
                        "RESTAURANT",
                        "SHOPPING_BASKET",
                        "SHOPPING_CART",
                        "SPORTS_BASEBALL",
                        "SPORTS_BASKETBALL",
                        "SPORTS_CRICKET",
                        "SPORTS_FOOTBALL",
                        "SPORTS_HOCKEY",
                        "SPORTS_RUGBY",
                        "SPORTS_SOCCER",
                        "STAR",
                        "STOCK",
                        "STOCK_DASH",
                        "STOCK_DOWN",
                        "STOCK_UP",
                        "STORE",
                        "TAG",
                        "TEMPERATURE",
                        "THUMB_DOWN",
                        "TIME_AT_HOME",
                        "TRENDING_UP",
                        "VISIBILITY",
                        "VISIBILITY_OFF",
                        "GOOGLE_PROVIDED_CONTENT",
                        "MAPS_LOGO",
                        "YOU_TUBE_LOGO",
                        "YOU_TUBE_LOGO_WHITE",
                        "GMAIL_LOGO",
                        "CALENDAR_LOGO",
                        "GOOGLE_PLUS_LOGO",
                        "TRANSLATE_LOGO",
                        "TRAVEL_FLIGHTS_LOGO",
                        "TRAVEL_HOTELS_LOGO",
                        "SHOPPING_LOGO",
                        "MUSIC_NOTE",
                        "ARTIST",
                        "DIRECTIONS_CAR",
                        "LIBRARY_BOOKS",
                        "LOCAL_OFFER",
                        "LOCAL_PHARMACY",
                        "SCHOOL",
                        "PALETTE",
                        "WEB",
                        "SEARCH",
                        "HANGOUT",
                        "WB_SUNNY",
                        "DRIVE_ETA",
                        "HOME",
                        "WORK",
                        "MIC",
                        "ICON_TRANSLATE",
                        "UPDATE",
                        "AMP_ICON_12",
                        "AMP_ICON_16",
                        "AMP_SEARCH_ICON_12",
                        "CHEVRON_RIGHT",
                        "CHEVRON_LEFT",
                        "CLOSE",
                        "ARROW_RIGHT",
                        "ARROW_LEFT",
                        "ADD_CIRCLE",
                        "SHARE",
                        "SHARE_18",
                        "TRIANGLE_LEFT",
                        "TRIANGLE_RIGHT",
                        "ADD_CIRCLE_OUTLINE",
                        "CHECK_CIRCLE",
                        "ADD_BOLD",
                        "CHECK_BOLD",
                        "LIVE_TV",
                        "PEOPLE",
                        "SHOW_CHART",
                        "LOCAL_DINING",
                        "PUBLIC",
                        "BRUSH",
                        "ARROW_UPWARD",
                        "ARROW_DOWNWARD",
                        "SAVE_FOR_LATER",
                        "SAVED_FOR_LATER",
                        "FEED_STORY_MORE",
                        "FEED_STORY_LESS",
                        "INFO",
                        "AD_BADGE",
                        "AD_BADGE_TEXT",
                        "FEED_STORY_NEUTRAL",
                        "FILLED_BOLT_AMP_ICON",
                        "DARK_FEED_STORY_NEUTRAL",
                        "DARK_FEED_STORY_MORE",
                        "INTEREST_MARK",
                        "TUNE",
                        "STAMP_ICON",
                        "PLAYSTORE_LOGO_ICON",
                        "MORE_VERT",
                        "VIDEO_SETTINGS",
                        "FAVORITE",
                        "FAVORITE_BORDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "See\nhttps://developers.google.com/now/api/using-templates#google_logos_and_icons",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Plus icon with not bolded lines",
                        "",
                        "Internal use only.\nhttps://icons.googleplex.com/#icon=ic_add_alert",
                        "https://icons.googleplex.com/#icon=ic_auto_fix",
                        "",
                        "https://icons.googleplex.com/#icon=ic_block",
                        "https://icons.googleplex.com/#icon=ic_book",
                        "",
                        "# ic_card_travel_white_24\n",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_drive_text",
                        "https://icons.googleplex.com/#icon=ic_directions_bike",
                        "https://icons.googleplex.com/#icon=ic_directions_transit",
                        "https://icons.googleplex.com/#icon=ic_directions_walk",
                        "https://icons.googleplex.com/#icon=ic_feedback",
                        "# ic_google_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_history",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_album",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_play_arrow",
                        "The standard quantum generic business icon",
                        "The standard quantum generic, fallback icon",
                        "The standard quantum movie icon",
                        "The standard quantum movie in theaters icon",
                        "The standard quantum phone number icon",
                        "The standard quantum place address icon",
                        "The standard quantum restaurant icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_highlight_off",
                        "https://icons.googleplex.com/#icon=ic_report",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_shopping_basket",
                        "https://icons.googleplex.com/#icon=ic_shopping_cart",
                        "Sports",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_star",
                        "Generic stock icon",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_store",
                        "Price tag icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_thumb_down",
                        "",
                        "# ic_trending_up_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_visibility",
                        "https://icons.googleplex.com/#icon=ic_visibility_off",
                        "Color icon for generic Google provided content.\nSome Card Caps will use specific logos, such as GMAIL\nwhent he source of the card is more specific.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "ic_music_note_white_24",
                        "ic_artist_white_24",
                        "ic_directions_car_white_24",
                        "ic_library_books_white_24",
                        "ic_local_offer_white_24",
                        "ic_local_pharmacy_white_24",
                        "ic_school_white_24",
                        "ic_palette_white_24",
                        "ic_web_white_24",
                        "ic_search_white_24",
                        "ic_hangout_white_24",
                        "https://icons.googleplex.com/#icon=ic_wb_sunny",
                        "https://icons.googleplex.com/#icon=ic_drive_eta",
                        "https://icons.googleplex.com/#icon=ic_home",
                        "https://icons.googleplex.com/#icon=ic_work",
                        "https://icons.googleplex.com/#icon=ic_mic",
                        "https://icons.googleplex.com/#icon=ic_translate",
                        "",
                        "12pt AMP Icon",
                        "16pt AMP Icon",
                        "Search AMP Icon",
                        "Chevron Right icon https://icons.googleplex.com/#icon=ic_chevron_right\nAvailable in AGSA 6.6+.",
                        "Chevron Left icon https://icons.googleplex.com/#icon=ic_chevron_left\nAvailable in AGSA 6.6+.",
                        "Close or (X) icon https://icons.googleplex.com/#icon=ic_close&search=close\nAvailable in AGSA 6.6+.",
                        "Arrow Right icon https://icons.googleplex.com/#icon=ic_arrow_forward\nAvailable in AGSA 6.6+.",
                        "Arrow Left icon https://icons.googleplex.com/#icon=ic_arrow_back\nAvailable in AGSA 6.6+.",
                        "Plus icon inside a circle https://icons.googleplex.com/#icon=ic_add_circle\nAvailable in AGSA 6.9+.",
                        "https://icons.googleplex.com/#icon=ic_share\nAvailable in AGSA 6.12+",
                        "https://icons.googleplex.com/#icon=ic_share 18 dp asset\nAvailable in AGSA 8.01+",
                        "https://icons.googleplex.com/#icon=ic_arrow_left\nAvailable in AGSA 6.17+",
                        "https://icons.googleplex.com/#icon=ic_arrow_right\nAvailable in AGSA 6.17+",
                        "Plus icon inside a outline circle.\nhttps://icons.googleplex.com/#icon=ic_add_circle_outline\nAvailable in iGSA 28.0+.",
                        "Check icon inside a circle.\nhttps://icons.googleplex.com/#icon=ic_check_circle\nAvailable in iGSA 28.0+.",
                        "Plus icon with bolded lines.\nAvailable in AGSA 7.3+",
                        "Check icon.\nAvailable in AGSA 7.3+",
                        "Live TV icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_live_tv",
                        "People icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_people",
                        "Show Chart icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_show_chart",
                        "Local Dining icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_local_dining",
                        "Public icon (looks like an earth)\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_public",
                        "Brush icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_brush",
                        "Upward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_upward",
                        "Downward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_downward",
                        "Bookmark icon-border",
                        "Bookmark icon-filled in",
                        "More icon",
                        "Less icon",
                        "Info icon\nAvailble in AGSA 7.17+\nhttps://icons.googleplex.com/#icon=ic_info",
                        "AdBadge icon (deprecated and will be deleted after b/130308386)\nAvailable in AGSA 7.18+, iGSA 46.0+",
                        "Available in AGSA 9.66+, this supports all languages, AD_BADGE does not.",
                        "Neutral icon for reactions\nAvailble in AGSA 7.20+",
                        "A custom made AMP icon that has a filled bolt instead of a transparent one.\nThis is intended to be used as an overlay shown over an image, where the\ncolor of the image is not known, but other uses may be beneficial as well.\nAvailable in AGSA 8.6+\nAvailable in iGSA 52+ (Zero Wing)",
                        "Custom android dark theme version of the Neutral icon for reactions",
                        "Custom android dark theme version of the More icon for reactions",
                        "Interest spark for gestalt brand.\ngoogledata/html/external_content/gstatic/android/now/images/default/xxhdpi/interest-mark.png",
                        "\"Manage interests\" icon used with the interest management UI. See\ngo/web-interest-management-design.\nhttps://icons.googleplex.com/#icon=ic_tune",
                        "Icon displayed on top of STAMP documents go/stampinfeed\nAvailable in AGSA 8.24+\nAvailable in iGSA 64.0+",
                        "Playstore logo icon\nAvailable in AGSA 8.50+",
                        "Snowman button\nhttps://www.gstatic.com/images/icons/material/system/1x/more_vert_black_24dp.png",
                        "Video settings icon.",
                        "Heart icon-filled in",
                        "Heart icon-border"
                    ],
                    "type": "string"
                },
                "iconImageSize": {
                    "description": "Allow the specification of the size of the icon",
                    "enum": [
                        "UNKNOWN_ICON_SIZE",
                        "THIRD_PARTY_LOGO",
                        "ICON_H1",
                        "ICON_H2",
                        "ICON_H3",
                        "ICON_H4",
                        "ICON_H5",
                        "ATTRIBUTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "3rd party logo at the end (right for LTR layouts) of the card header.",
                        "text-line image sizes, these will map into device independent\nsizes on the client.",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "description": "An icon from a web URL.",
                    "type": "string"
                },
                "primaryColor": {
                    "description": "The icon tint color defined by the standard status colors.",
                    "enum": [
                        "NEUTRAL",
                        "GOOD",
                        "CRITICAL",
                        "WARNING",
                        "ICON_BACKGROUND"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "this is the standard color for the background on an icon"
                    ],
                    "type": "string"
                },
                "shape": {
                    "description": "The shape of the icon.",
                    "enum": [
                        "UNKNOWN_TYPE",
                        "RECTANGULAR",
                        "CIRCULAR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "shouldFlipForRtl": {
                    "description": "Specifies whether to flip an icon in right to left mode.",
                    "type": "boolean"
                },
                "showNonTintIcon": {
                    "description": "For the action icon, do we show it with the normal tint\nor show the full color.  The default is to show with the\ntint.",
                    "type": "boolean"
                },
                "textIcon": {
                    "$ref": "Sidekick__TextIcon",
                    "description": "A text icon (monogram)."
                }
            },
            "type": "object"
        },
        "Sidekick__ModuleListEntry": {
            "description": "Header and footer of a list card built using modules.",
            "id": "Sidekick__ModuleListEntry",
            "properties": {
                "allowCapAndHeader": {
                    "description": "Don't suppress the header if there is a cap on the card.",
                    "type": "boolean"
                },
                "allowCollapse": {
                    "description": "Set to true to allow the list group to collapse",
                    "type": "boolean"
                },
                "allowSingletonCards": {
                    "description": "do we create singleton cards for lists with a single entry",
                    "type": "boolean"
                },
                "backgroundColor": {
                    "description": "The background color for the entire card.",
                    "format": "int32",
                    "type": "integer"
                },
                "carouselControl": {
                    "$ref": "Sidekick__CarouselControl",
                    "description": "Additional control information for a carousel.  This will be\nignored for non-carousel cards."
                },
                "expandSecondaryAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Secondary Action on the expand button"
                },
                "expandSecondaryActionLabel": {
                    "description": "Secondary Action on the expand button",
                    "type": "string"
                },
                "footer": {
                    "description": "Module list shown up below the list items.\nThis may contain footer and others.",
                    "items": {
                        "$ref": "Sidekick__CardModule"
                    },
                    "type": "array"
                },
                "header": {
                    "description": "Module list shown up above the list items.\nThis may contain header, map, image and others.",
                    "items": {
                        "$ref": "Sidekick__CardModule"
                    },
                    "type": "array"
                },
                "headerOverlapDp": {
                    "description": "The number of DPs for the header and the list to overlap.",
                    "format": "int32",
                    "type": "integer"
                },
                "numEntriesToShow": {
                    "description": "Number of entries to show before displaying the \"show more\" button.\nAlso, max number of app links to show in a carousel card.",
                    "format": "int32",
                    "type": "integer"
                },
                "numGridColumns": {
                    "description": "The number of columns to use when listing items in a grid. Default is 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "removeIfNoRows": {
                    "description": "Remove the header and footer cards if there are no rows to show. This is\nused in the BaseClosetListAdapter. The card will still exist, but it will\nhave a height of 0. In the future, it will be necessary to dynamically add\nback in the header and footer in when a row gets added to the list.",
                    "type": "boolean"
                },
                "singletonType": {
                    "enum": [
                        "LIST",
                        "SINGLETON",
                        "HEADER_SINGLETON",
                        "FOOTER_SINGLETON"
                    ],
                    "enumDescriptions": [
                        "Show as a list of one item.",
                        "Show as a singleton without header or footer",
                        "Show as an item with a header",
                        "Show as a item with a footer"
                    ],
                    "type": "string"
                },
                "suppressItemIcons": {
                    "description": "Optionally suppress icons from showing on the items of the list",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__Money": {
            "description": "Since fields of this message are annotated as permanent, it is the\nresponsibility of the field using this message to exclude from permanent\nlogs where appropriate.",
            "id": "Sidekick__Money",
            "properties": {
                "amountMicros": {
                    "description": "The monetary amount, in micros of a unit of currency\n(e.g. 1/1000000ths of a CAD, USD, or EUR).",
                    "format": "int64",
                    "type": "string"
                },
                "currencyCode": {
                    "description": "Currency code for the amount.",
                    "type": "string"
                },
                "displayAmount": {
                    "description": "The raw string in case amount can not be parsed at source\ne.g. the money amount extracted from email could not be parsed\n($xxx00.21) and/or a partial string was extracted.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__MoonshineEventTicketEntry": {
            "description": "A message that contains information of an event ticket entry from Moonshine.\nExample live events are: sport event, concerts,\nBroadway plays, comedy shows or circus performances.",
            "id": "Sidekick__MoonshineEventTicketEntry",
            "properties": {
                "barcode": {
                    "$ref": "Sidekick__Photo",
                    "description": "Ticket barcode."
                },
                "bookingAgent": {
                    "description": "Booking agent. For example: TicketMaster, StubHub.",
                    "type": "string"
                },
                "bookingAgentLogoUrl": {
                    "description": "Booking agent logo URL.",
                    "type": "string"
                },
                "confirmationNumber": {
                    "description": "The confirmation number of this purchase.",
                    "type": "string"
                },
                "departureTimeMs": {
                    "description": "Departure time for getting to the event on time.",
                    "format": "int64",
                    "type": "string"
                },
                "doorOpenTimeMs": {
                    "description": "Doors open time.",
                    "format": "int64",
                    "type": "string"
                },
                "eventProbability": {
                    "description": "Probability that the email from which this Event was produced is an\nevent, as determined by a classifier.",
                    "format": "float",
                    "type": "number"
                },
                "gmailReference": {
                    "$ref": "Sidekick__GmailReference",
                    "description": "The email reference for this sport ticket."
                },
                "manageReservationUrl": {
                    "description": "Url to manage reservation.",
                    "type": "string"
                },
                "numberOfTickets": {
                    "description": "The number of tickets purchased.",
                    "format": "int32",
                    "type": "integer"
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "performers": {
                    "description": "Performers. For group sports it can be team names, for individual sport\ngames, it can be the players. For concerts it can be the singers.\nFor comedy shows it can be the comedians.",
                    "items": {
                        "$ref": "Sidekick__EventPerformer"
                    },
                    "type": "array"
                },
                "personalItemInfo": {
                    "$ref": "Sidekick__PersonalItemInfo",
                    "description": "Metadata containing title and subtitle strings for rendering this entry as\na list item."
                },
                "route": {
                    "description": "The navigation information to the venue.\n\nIMPORTANT: this field was optional until Apr. 2014 and it was changed to\nrepeated. Make sure to do the client version check before putting multiple\nroutes into this field, otherwise it will break the old client.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                },
                "seatInformation": {
                    "description": "Seat information.",
                    "items": {
                        "$ref": "Sidekick__EventTicketSeatInfo"
                    },
                    "type": "array"
                },
                "startTimeMs": {
                    "description": "Start time of the event since the epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "subTitle": {
                    "description": "Subtitle e.g. National Conference Championship Game.",
                    "type": "string"
                },
                "ticketType": {
                    "description": "Ticket type provided by the booking agent.\nFor example: World Perk Rewards Premier Access, Group Discount Ticket.",
                    "type": "string"
                },
                "title": {
                    "description": "Title e.g. Superbowl, KA, US Open, Elton John concert.",
                    "type": "string"
                },
                "venue": {
                    "$ref": "Sidekick__Location",
                    "description": "Location and information about the event venue."
                }
            },
            "type": "object"
        },
        "Sidekick__Movie": {
            "description": "Fields in Movie are based on ShowtimesOneboxResults2 in\n//onebox/showtimes/rpc/showtimes_onebox.proto",
            "id": "Sidekick__Movie",
            "properties": {
                "actor": {
                    "description": "e.g. \"Christian Bale\", \"Anne Hathaway\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "detailsAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "Action to execute when this movie recommendation is tapped. This is more\npowerful than web_url, it's used to direct the client to open an Immersive\nUI with details for the movie inside GSA."
                },
                "image": {
                    "$ref": "Sidekick__Photo",
                    "description": "Contains the image for the movie and image attribution URLs and other\nimage details. Supersedes the now deprecated image_url field."
                },
                "length": {
                    "description": "e.g. \"2hr 44min\".",
                    "type": "string"
                },
                "mpaaRating": {
                    "description": "e.g. \"PG-13\".",
                    "type": "string"
                },
                "onCardJustification": {
                    "description": "A string showing why we are showing this movie that can be shown on the\ncard itself. It is likely to be a somewhat extended version of the back\nof card \"reason\" string. An example might be where the front of card shows\n\"Now in theaters. You searched for this movie\", but the reason only shows\n\"You searched for this movie\" (Note that the longer form needs to be sent\nas one string for localization reasons; it's not enough to just\nconcatenate the two sentences). If this should be identical to the reason\nstring, the server should set it as such; the client isn't expected to\nimplement logic to choose one over the other.",
                    "type": "string"
                },
                "openingDateSecs": {
                    "description": "Contains a timestamp, in seconds since the epoch, representing the\ndate this movie opens in theaters. The date will be noon in the user's\ncurrent timezone.",
                    "format": "int64",
                    "type": "string"
                },
                "rating": {
                    "description": "Contains ratings for this movie.",
                    "items": {
                        "$ref": "Sidekick__Rating"
                    },
                    "type": "array"
                },
                "showtime": {
                    "description": "e.g. \"1:30\", \"7:25\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "title": {
                    "description": "e.g. \"The Dark Knight Rises\".",
                    "type": "string"
                },
                "trailerUrl": {
                    "description": "e.g. \"http://www.google.com/url?q=http://www.youtube.com/\nwatch%3Fv%3DXgH0rrsb2yY&sa=X&oi=movies&ii=6\"",
                    "type": "string"
                },
                "webUrl": {
                    "description": "URL to open in the browser for more details about this movie.\ne.g. \"http://www.google.com/m/movies?q=the+dark+knight+rises&\nnear=37.3915+-122.0804&sort=1\".\nDeprecated: use detailsAction below instead. The client falls back to using\nweb_url if detailsAction is not set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__MovieTicketEntry": {
            "description": "Entry for a movie ticket.",
            "id": "Sidekick__MovieTicketEntry",
            "properties": {
                "barcode": {
                    "$ref": "Sidekick__Photo",
                    "description": "Ticket barcode"
                },
                "confirmationNumber": {
                    "description": "The confirmation number for the purchase.",
                    "type": "string"
                },
                "departureTimeMs": {
                    "description": "The departure time that allows the user to arrive at the\ntheater on time.",
                    "format": "int64",
                    "type": "string"
                },
                "gmailReference": {
                    "$ref": "Sidekick__GmailReference",
                    "description": "For Moonshine sourced tickets, the email reference."
                },
                "holderName": {
                    "description": "The ticket holder's name",
                    "type": "string"
                },
                "movie": {
                    "$ref": "Sidekick__Movie",
                    "description": "Information about the movie"
                },
                "numberOfTickets": {
                    "description": "The number of tickets purchased.",
                    "format": "int32",
                    "type": "integer"
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "route": {
                    "description": "The navigation information to the theater.\n\nIMPORTANT: this field was optional until Apr. 2014 and it was changed to\nrepeated. Make sure to do the client version check before putting multiple\nroutes into this field, otherwise it will break the old client.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                },
                "showtimeSeconds": {
                    "description": "Showtime for the movie, in seconds since the epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "theater": {
                    "$ref": "Sidekick__Location",
                    "description": "Theater info."
                }
            },
            "type": "object"
        },
        "Sidekick__MultiActionWithIcon": {
            "description": "Module that contains multiple actions.\nMainly used in closet redesign category page: go/now-closet-proto.",
            "id": "Sidekick__MultiActionWithIcon",
            "properties": {
                "action": {
                    "description": "Actions get lay out from left to right ending at the rightmost.",
                    "items": {
                        "$ref": "Sidekick__ClientAction"
                    },
                    "type": "array"
                },
                "content": {
                    "description": "Main text content of the row",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "icon": {
                    "$ref": "Sidekick__ModuleIcon",
                    "description": "The image for the row, shown on the left."
                }
            },
            "type": "object"
        },
        "Sidekick__MultiOptionAction": {
            "description": "Action module that presents more than one option to click on. There can be\nno associated action or quick_action at the CardModule level.",
            "id": "Sidekick__MultiOptionAction",
            "properties": {
                "actionOption": {
                    "items": {
                        "$ref": "Sidekick__ActionOption"
                    },
                    "type": "array"
                },
                "defaultOptionTextColor": {
                    "description": "Text color to use for any non-preferred option action.",
                    "format": "int32",
                    "type": "integer"
                },
                "preferredOptionIndex": {
                    "description": "Index in action_option of the preferred or previously selected option if\nthere is one. If there is not one, a -1 should be used.",
                    "format": "int32",
                    "type": "integer"
                },
                "preferredOptionTextColor": {
                    "description": "Text color to use for the preferred option action.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "The type display type of the line.",
                    "enum": [
                        "BUTTONS",
                        "LIST"
                    ],
                    "enumDescriptions": [
                        "",
                        "Next available ID: 3"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__MultiStateIcon": {
            "id": "Sidekick__MultiStateIcon",
            "properties": {
                "multiStateIconId": {
                    "description": "The corresponding Id for this multiStateIcon.",
                    "type": "string"
                },
                "shouldShowBackgroundRipple": {
                    "description": "Whether or not to show background ripple on click.",
                    "type": "boolean"
                },
                "stateData": {
                    "description": "The corresponding data for each state.",
                    "items": {
                        "$ref": "Sidekick_MultiStateIcon_StateData"
                    },
                    "type": "array"
                },
                "stateSelected": {
                    "description": "The state that the icon should be initially rendered.",
                    "enum": [
                        "DEFAULT",
                        "SET"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__NewsEntry": {
            "description": "The referencing fields are marked:\nnews_entry - 5week only (not permanent since some fields below are PII\n                         in that context)\nbreaking_news - 5weeks & permanent. No sensitive triggers.\nhyper-local - 5weeks & permanent. Triggering conditions imply location,\n             and we log to 5 weeks only the fields below that we know\n             cannot reveal it.",
            "id": "Sidekick__NewsEntry",
            "properties": {
                "image": {
                    "$ref": "Sidekick__Photo",
                    "description": "URL for the image to show. It could be from the story itself or from\nanother story in the same news cluster."
                },
                "mainTriggeringQuery": {
                    "description": "This is to be associated with the EXCLUDE_TERM action - the client will\npresent the user with the action to stop using this particular query\nterm to trigger news stories.",
                    "type": "string"
                },
                "snippet": {
                    "description": "A snippet from the news story, e.g. 1-2 sentences of text.",
                    "type": "string"
                },
                "source": {
                    "description": "E.g. \"New York Times\"",
                    "type": "string"
                },
                "storyLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "The precise location that the news story is about (e.g. for\nhyper-local news). The client may use this to draw a map in the card."
                },
                "timestampSeconds": {
                    "description": "Time when the story was published, in seconds since epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the story, i.e. headline.",
                    "type": "string"
                },
                "url": {
                    "description": "Url of the full news story.\n",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Notification": {
            "description": "A notification specification. Depending on the type the notification might\nfire immediately when it is delivered to the client.\nNext available tag: 51",
            "id": "Sidekick__Notification",
            "properties": {
                "action": {
                    "description": "This field is platform specific and may or may not be supported by all\nplatforms e.g. Android and iOS(8) allow applications to define custom\nactions which can be performed on a notification. If total number of\nnotification actions defined by this field exceed the allowed number\nof notification actions as defined by the platform, then all actions\ndefined after the threshold will be dropped.\nThis field is deprecated for Android clients 7.5+. Use notification_action\ninstead.",
                    "items": {
                        "$ref": "Sidekick__ClickAction"
                    },
                    "type": "array"
                },
                "bigText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The text that will be rendered in BigTextStyle so the text can be\ndisplayed in full without truncation when the notification gets\nexpanded. The BigTextStyle may or may not be supported by different\nclient platforms."
                },
                "channelCategory": {
                    "description": "The notification channel this notification belongs to.",
                    "enum": [
                        "UNKNOWN",
                        "SPORTS",
                        "WEATHER",
                        "AT_A_PLACE",
                        "STORIES",
                        "STOCKS",
                        "COMMUTE",
                        "BILLS",
                        "ELECTIONS",
                        "MOVIES_TV_SHOWS",
                        "PRICE_DROP",
                        "FEATURE_UPDATES",
                        "CODELAB",
                        "INFERRED_REMINDERS",
                        "DOODLES",
                        "FLIGHT",
                        "MERCHANT",
                        "TOP_STORIES",
                        "EXAMS",
                        "UGC",
                        "JANATA",
                        "MINDSEARCH_ANSWERS",
                        "WORD_COACH",
                        "BREAKING_NEWS",
                        "SEARCH_EMPLOY",
                        "TRAVEL",
                        "AT_A_PLACE_CHANNEL",
                        "BILLS_CHANNEL",
                        "COMMUTE_ALERTS_CHANNEL",
                        "CURRENT_WEATHER_CHANNEL",
                        "ELECTIONS_CHANNEL",
                        "FEATURE_UPDATES_CHANNEL",
                        "GAME_REMINDERS_CHANNEL",
                        "INFERRED_COMMUTE_UPDATES_CHANNEL",
                        "INFERRED_REMINDERS_CHANNEL",
                        "MISC_CHANNEL",
                        "MOVIES_TV_SHOWS_CHANNEL",
                        "PRICE_DROP_CHANNEL",
                        "SPORTS_SCORES_CHANNEL",
                        "STOCKS_CHANNEL",
                        "STORIES_CHANNEL",
                        "TIME_TO_TRAVEL_REMINDERS_CHANNEL",
                        "WEATHER_ALERTS_CHANNEL",
                        "WEATHER_FORECASTS_CHANNEL",
                        "REMINDERS_CHANNEL",
                        "MERCHANT_CHANNEL",
                        "TOP_STORIES_CHANNEL",
                        "EDUCATION_CHANNEL",
                        "UGC_CHANNEL",
                        "JANATA_CHANNEL",
                        "MINDSEARCH_ANSWERS_CHANNEL",
                        "WORD_COACH_CHANNEL",
                        "SEARCH_EMPLOY_CHANNEL",
                        "TRAVEL_CHANNEL",
                        "GOOGLE_GO_BREAKING_NEWS_CHANNEL",
                        "DEPRECATED_OLYMPICS"
                    ],
                    "enumDescriptions": [
                        "LINT.IfChange",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "go/now-notifications-codelab",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Notification channels for Android O and above.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Notification channels for Google Go (SearchLite).",
                        ""
                    ],
                    "type": "string"
                },
                "clearcutAppData": {
                    "$ref": "SearchNow__NowClearcutAppData",
                    "description": "Application/content-specific data that needs to be round-tripped in\nVE logged events sent via Clearcut. Consumed in Clearcut server code.\nSee go/now-ve-logging"
                },
                "compressedText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Shorter version of notification. Existing usages: used by notification\nwith TYPE=TOPDECK and displayed in one line on widgets with smaller height.\nThis field is only supported by AGSA version 5.5+."
                },
                "contentAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "When the user clicks on this notification, the client will execute the\nfollowing action if it is present. Otherwise, it will simply scroll to the\nNow card in the stream. As of 5.3, only OpenUrlAction is supported. The\nserver is responsible for populating fallback_web_url for deep-linking use\ncases."
                },
                "contentId": {
                    "$ref": "Sidekick__ContentId",
                    "description": "This id uniquely identifies a notification based on per-notification\nidentifiers."
                },
                "discoverSurvey": {
                    "$ref": "Sidekick__DiscoverSurveyRendering",
                    "description": "Information needed to render a survey in the feed after clicking on the\nnotification."
                },
                "dismissAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "A custom action to be executed when the notification is swiped away or\notherwise dismissed by the user."
                },
                "doNotSuppress": {
                    "description": "Signals to the client that this instance should not be suppressed (e.g.\nbased on any dismiss or delivery state tracked on the\nclient). However, state about this notification should still be\nrecorded as it normally would (e.g. delivery). This can be set in both\nregular server responses or push messages when the server side tracks\nenough state to decide if a notification should be shown without\nexception.",
                    "type": "boolean"
                },
                "eventTimestampSeconds": {
                    "description": "This is the timestamp used for the \"when\" value in the notification\nexpressed as seconds since the unix epoch. This is useful for the server to\ncontrol how the timestamp on the notification is displayed to the user. The\nserver can provide a very accurate timestamp of the event in question (ie,\nthe time that a traffic accident was reported). If it is unset, the last\ntime that the notification was presented or updated will be used. If no\ntimestamp is desired, this should be explicitly set to zero.",
                    "format": "int64",
                    "type": "string"
                },
                "expirationTimestampSeconds": {
                    "description": "Timestamp, in seconds, of when this notification should expire. If this\nfield is set, then the client, if possible should stop showing this\nnotification by the time specified here.  This is the Unix timestamp\nseconds. Unix timestamps are UTC.",
                    "format": "int64",
                    "type": "string"
                },
                "icon": {
                    "description": "This field is platform specific and may or may not be supported by all\nplatforms. e.g. Android gives control to the app to provide icon for the\nnotification but iOS uses a default app icon. Note that this is a required\nfield for Android. Only one of this and icon_url field should be set,\nnever both.",
                    "enum": [
                        "DEFAULT_ICON",
                        "STOCK_UP",
                        "STOCK_DOWN",
                        "NEWS",
                        "MEETING",
                        "NEARBY",
                        "CALENDAR",
                        "TIME_TO_LEAVE",
                        "REMINDER_TIME",
                        "BARCODE",
                        "FLIGHT_DEPART",
                        "PUBLIC_ALERT",
                        "REMINDER",
                        "BASEBALL",
                        "BASKETBALL",
                        "CRICKET",
                        "FOOTBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL",
                        "TRAFFIC_DESRUPTION_ROAD_CLOSURE",
                        "TRAFFIC_DESRUPTION_ACCIDENT",
                        "TRAFFIC_DESRUPTION_CONTRUCTION",
                        "TRAFFIC_DESRUPTION_JAMCIDENT",
                        "TRAFFIC_DESRUPTION_OTHER_TRIANGLE",
                        "PUBLIC_TRANSIT",
                        "BIKE",
                        "WALK",
                        "TRAFFIC_LIGHT",
                        "TRAFFIC_NORMAL",
                        "TRAFFIC_HEAVY",
                        "TRAFFIC",
                        "WEATHER",
                        "PLAY_ARROW_WHITE",
                        "STOCK_TRENDING_UP",
                        "STOCK_TRENDING_DOWN",
                        "STOCK_TRENDING_FLAT",
                        "MOVIE",
                        "TV",
                        "MUSIC",
                        "MUSIC_VIDEO",
                        "LOCAL_ACTIVITY",
                        "BOOK",
                        "VIDEO",
                        "EMAIL",
                        "SEARCH",
                        "GLOBE",
                        "PACKAGE_TRACKING",
                        "BILL_PAY",
                        "ELECTIONS_BALLOT_BOX",
                        "ELECTIONS_DEMOCRATIC",
                        "ELECTIONS_REPUBLICAN",
                        "MEDAL",
                        "OLYMPICS_RIO_SHAPE",
                        "OLYMPICS_RIO_WORD",
                        "PRICE_TAG",
                        "TRANSLATE",
                        "AT_A_PLACE_CROSSHAIR",
                        "AT_A_PLACE_BULLSEYE",
                        "INFERRED_REMINDER",
                        "AMUSEMENT_PARK",
                        "HOTEL",
                        "LANDMARK",
                        "MALL",
                        "MUSEUM",
                        "RESTAURANT",
                        "STORE",
                        "SHOPPING_CART",
                        "SHOPPING_BASKET",
                        "POLLEN_COUNT",
                        "ASSISTANT",
                        "GRAY_BELL",
                        "WORD_COACH"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Asset name on Android: quantum_ic_news_white_24",
                        "",
                        "",
                        "Current Android Usage\nCalendar - Low\nAsset name on Android: stat_notify_calendar",
                        "Current Android Usage\nCalendar - active, passive\nFlightTimeToLeave\nTimeToLeave\nAsset name on Android: ic_stat_time_to_leave",
                        "Current Android Usage\nCarRental\nLastTrainHome\nLastTrainHome\nAsset name on Android: stat_notify_reminder_time",
                        "Current Android Usage\nFlightBoardingPass\nMoonshineEventTicket\nMovieTicket\nAsset name on Android: ic_bp_notification",
                        "Current Android Usage\nFlightStatusi\nAsset name on Android: stat_notify_flight_depart",
                        "Current Android Usage\nPublicAlert\nAsset name on Android: stat_notify_public_alert",
                        "Current Android Usage\nReminder\nAsset name on Android: ic_reminder",
                        "Current Android Usage\nSports\nAsset name on Android: ic_baseball",
                        "Asset name on Android: ic_basketball",
                        "Asset name on Android: ic_cricket",
                        "Asset name on Android: ic_football",
                        "Asset name on Android: ic_hockey",
                        "Asset name on Android: ic_soccer",
                        "Asset name on Android: ic_rugby",
                        "Asset name on Android: ic_sports_tennis_white_24",
                        "Asset name on Android: ic_australian_football",
                        "Current Android Usage\nTrafficIncidents\nAsset name on Android: stat_notify_road_closure",
                        "Asset name on Android: stat_notify_accident",
                        "Asset name on Android: stat_notify_construction",
                        "Asset name on Android: ic_jamcident",
                        "Asset name on Android: stat_notify_traffic_desruption_other_triangle",
                        "Current Android Usage\nTrafficIncident\nAsset name on Android: stat_notify_public_transit",
                        "Asset name on Android: stat_notify_bike",
                        "Asset name on Android: stat_notify_walk",
                        "Asset name on Android: stat_notify_traffic_light",
                        "Asset name on Android: stat_notify_traffic_normal",
                        "Asset name on Android: stat_notify_traffic_heavy",
                        "Asset name on Android: stat_notify_traffic",
                        "Current Android Usage\nWeather\nAsset name on Android: stat_notify_weather",
                        "Asset name on Android: quantum_ic_play_arrow_white_24",
                        "Icon used to indicate a particular stock has trended up.\nAsset name on Android: ic_trending_up_white_24.",
                        "Icon used to indicate a particular stock has trended down.\nAsset name on Android: ic_trending_down_white_24.",
                        "Icon used to indicate a particular stock has trended flat.\nAsset name on Android: ic_trending_flat_white_24.",
                        "Current Android Usage\nKE-Now InterestUpdate\nAsset name on Android: quantum_ic_movie_white_24",
                        "Asset name on Android: quantum_ic_tv_white_24",
                        "Asset name on Android: quantum_ic_music_note_white_24",
                        "Asset name on Android: quantum_ic_music_video_white_24",
                        "Asset name on Android: quantum_ic_local_activity_white_24",
                        "Asset name on Android: quantum_ic_book_white_24",
                        "Current Android Usage\nVideo Highlights\nAsset name on Android: quantum_ic_play_circle_filled_white_24",
                        "Asset name on Android: ic_email",
                        "Current Android Usage\nPertinent Questions\nAsset name on Android: quantum_ic_search_white_24",
                        "Asset name on Android: ic_globe",
                        "Current Android Usage\nPackage tracking\nAsset name on Android: ic_local_shipping",
                        "Current Android Usage\nBill Pay\nAsset name on Android: ic_action_paynow_normal",
                        "Current Android Usage\nElections Voting Reminders, Election Results\nAsset name: ic_elections_ballotbox",
                        "Asset name: ic_elections_democratic",
                        "Asset name: ic_elections_republican",
                        "Notifications for olympics now experience (go/o16-notifications)\nAvailable from AGSA version 5.14 onwards.\nAsset name: ic_medal",
                        "Asset name: ic_rio_shape\nRemoved AGSA version 9.0.",
                        "Asset name: ic_rio_word\nRemoved AGSA version 9.0.",
                        "Current Android Usage\nPrice Drop\nAsset name on Android: ic_tag",
                        "Available from AGSA version 6.3 onwards.\nAsset name on Android: quantum_ic_g_translate_white_24",
                        "Available from AGSA version 6.5 onwards.\nAsset name on Android: quantum_ic_my_location_white",
                        "Available from AGSA version 6.5 onwards.\nAsset name on Android: stat_my_location_bullseye",
                        "Asset name on Android: quantum_ic_assignment_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_local_play_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_hotel_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_account_balance_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_local_mall_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_account_balance_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_restaurant_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_store_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_shopping_cart_white_24",
                        "Available from AGSA version 6.11 onwards.\nAsset name on Android: quantum_ic_shopping_basket_white_24",
                        "Available from AGSA version 7.0 onwards.\nAsset name on Android: ic_pollen_count",
                        "Available from AGSA version 7.2 onwards.\nAsset name on Android: ic_assistant_light",
                        "TODO (hhuo): add available AGSA version\nIcon that will be displayed in the notification prompt\nAsset name on Android: now_feed_prompt_bell_circle",
                        "Current Android Usage\nWordCoach\nAsset name on Android: stat_notify_word_coach"
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "description": "The url for the Large Icon on an AGSA notification. The Large Icon is\ndisplayed at the end or beginning (horizontally) of the notification,\ndepending on the version of Android on the device.\nIt is shown on the right of the notification for Android OS 7.0+, and on\nthe left for Android OS 4.4+.\nSee https://screenshot.googleplex.com/StUhW3XdPWD.png\nSupported on AGSA 5.11+",
                    "type": "string"
                },
                "justificationText": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The text to be used as justification text, separate on the UI from\nother text fields. This field is platform dependent and may or may\nnot be used depending upon the platform. For Android, this field\nis used in conjunction with BigTextStyle or InboxStyle notifications."
                },
                "light": {
                    "description": "Specifies whether the notification should trigger the LED of the phone.\nOnly used for notifications of type CUSTOM.\nCurrently supported on AGSA >= 5.5.",
                    "type": "boolean"
                },
                "multilineText": {
                    "description": "The text is to be used as the main notification content but instead of\nbeing a text blob, the text would be displayed as a list on the client.\nThis feature may or may not be supported by different client platforms.\nThis text will display only if the user expands the notification similar\nto an inbox style notification.  When the user expands the notifications\nthe \"multiline_text\" will replace the \"text\".\n\nNOTE: We cannot expand the iOS notifications. (as of May 2015)\nThis is not used in iOS.\n ____________________________________________\n|  _______ NOTIFICATION TITLE                |\n| |      | NOTIFICATION LINE 1               |\n| | ICON | NOTIFICATION LINE 2               |\n| |______| NOTIFICATION LINE 2               |\n|____________________________________________|",
                    "items": {
                        "$ref": "Sidekick__TemplatedString"
                    },
                    "type": "array"
                },
                "notificationAction": {
                    "description": "This field replaces the ClickAction version for Android clients 7.5+. If\ntotal number of notification actions defined by this field exceed the\nallowed number of notification actions as defined by the platform, then all\nactions defined after the threshold will be dropped.",
                    "items": {
                        "$ref": "Sidekick_Notification_NotificationAction"
                    },
                    "type": "array"
                },
                "notificationBarText": {
                    "type": "string"
                },
                "notificationBigPicture": {
                    "$ref": "Sidekick__NotificationBigPicture",
                    "description": "Data used by the client to render BigPictureStyle notifications.\nNote that these are only supported on Android Jelly Bean and above (API 16)\nand only on AGSA 9.91+."
                },
                "notificationFeedOptPrompt": {
                    "$ref": "Sidekick_Notification_NotificationFeedPrompt"
                },
                "notificationFeedback": {
                    "$ref": "Sidekick_Notification_NotificationFeedback",
                    "description": "Feedback for a notification.\nDesign doc: http://go/now-notification-feedback\nWill be supported for AGSA >= 5.14"
                },
                "notificationGroup": {
                    "$ref": "Sidekick__NotificationGroup",
                    "description": "Optional Group, which allows grouping notifications on Android.  This is\nonly supported on Android. This is only set on Android devices API level\n24 and above."
                },
                "notificationUpdateKey": {
                    "description": "This field is to indicate any other existing notification that the current\nnotification is replacing with. Note the key is global per device per app,\nso proper prefix is necessary to avoid conflict.\nThis is currently only used for iOS: for AGSA previous notifications will\nbe automatically removed if the new response doesn't contain the\nnotifications.",
                    "type": "string"
                },
                "overrideClientRendering": {
                    "description": "Whether to override client side adapter for notification rendering. This\nfield only works for frequent place notifications and migration of other\nnotifications is in progress.\nSupported for AGSA >= 6.9",
                    "type": "boolean"
                },
                "priority": {
                    "description": "Only used for notifications of type CUSTOM.\nCurrently supported on AGSA >= 5.5.",
                    "enum": [
                        "MIN",
                        "LOW",
                        "DEFAULT",
                        "HIGH",
                        "MAX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "pruneAfterDays": {
                    "description": "A hint to the client about how long to cache the notification so that\nsimilar notifications can be suppressed.",
                    "format": "int32",
                    "type": "integer"
                },
                "semanticProperties": {
                    "$ref": "Sidekick__SemanticProperties",
                    "description": "Semantic properties of the notification, used to dedupe it against\nother notifications for dismissal or throttling.\nSee http://go/now-content-ids or semantic_properties.proto for more\ndetails."
                },
                "sound": {
                    "description": "Specifies whether the notification should make the phone sound.\nOnly used for notifications of type CUSTOM.\nCurrently supported on AGSA >= 5.5.",
                    "type": "boolean"
                },
                "staticMap": {
                    "$ref": "Sidekick__StaticMapPayload",
                    "description": "The static map that will be shown with the notification.\nOnly supported on iGSA >= 20.0"
                },
                "sticky": {
                    "description": "If true, the notification is not removed from the notification shade when\na user clicks on it. Notification would be removed if the user dismisses\nit.\nThis field is respected only if expiration_timestamp_seconds is set.\nCurrently supported for AGSA >= 7.26",
                    "type": "boolean"
                },
                "suppressCardCount": {
                    "description": "If true, suppresses the card count displayed next to the low priority\nnotifications.\nSupported on AGSA [5.9, 8.9]",
                    "type": "boolean"
                },
                "text": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The text to be used as the main notification content. This text will show\nwhether the user expands the notification or not.\n ____________________________________________\n|  _______ NOTIFICATION TITLE                |\n| |      |                                   |\n| | ICON | NOTIFICATION TEXT                 |\n| |______|                                   |\n|____________________________________________|\n\nNOTE: In iOS, we cannot evaluate TemplatedString in the client, thus,\nthe notification text should be determined by the server. When this is\nused for iOS notifications, only display_string must be used."
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The text to be used as notification title. This field is platform dependent\nand may or may not be used depending upon the platform. e.g. Android\nnotifications require a notification title but iOS has no such requirement.\nThis is not used in iOS."
                },
                "triggerCondition": {
                    "$ref": "Sidekick__TriggerCondition",
                    "description": "The triggering condition that determines when a notification should be\nshown. For instance this is useful to send a list of notifications for\nreminders within a geo fence. Note that (other than some legacy\nnotifications) this does not require the type to be (the now-deprecated)\nON_TRIGGER; setting the type to ACTIVE, PASSIVE or LOW_PRIORITY along with\nsetting this field is the preferred way to make a notification trigger at a\nlater date.\nDEPRECATED: this field is still supported for unmigrated use cases, but no\nnew use cases/ should be built on it."
                },
                "type": {
                    "enum": [
                        "NO_NOTIFICATION",
                        "PASSIVE",
                        "ACTIVE",
                        "ON_TRIGGER",
                        "LOW_PRIORITY",
                        "TOPDECK",
                        "CUSTOM"
                    ],
                    "enumDescriptions": [
                        "This value is used to indicate that an entry had no notifications\nassociated with it.  This type should never be associated with any\nNotification and is included here only to facilitate tracking of entries\nwithout notifications.",
                        "This is a passive notification that shows up in the notification bar but\ndoes not cause buzzing. This notification fires immediately when it is\ndelivered to the client, or on a trigger condition if the\n\"trigger_condition\" field below is set.",
                        "This is an active notification that causes the phone to buzz. This\nnotification fires immediately when it is delivered to the client, or on\na trigger condition if the \"trigger_condition\" field below is set.",
                        "This is a notification that should be triggered when the triggering\ncondition below happens. For instance this is useful to send a list\nof notifications for reminders within a geo fence.\nDEPRECATED: this value is still supported for unmigrated use cases, but\nno new use cases/ should be built on it.",
                        "A notification that neither shows up in the notification bar nor\ncauses buzzing/light.",
                        "Will expose the notification content in go/topdeck.",
                        "This is a custom notification, its behavior is specified by the\nfields \"priority\", \"light\", \"sound\", and \"vibrate\".\nNote: ONLY use if no other defined type suits your needs and consult\nwith notifications team first. Supported on AGSA >= 5.5."
                    ],
                    "type": "string"
                },
                "useAssistantBranding": {
                    "description": "Whether this notification should display the assistant branding.",
                    "type": "boolean"
                },
                "veInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "VisualElement identifier for corresponding UI element and information for\nclient on how to log it."
                },
                "vibrate": {
                    "description": "Specifies whether the notification should make the phone vibrate.\nOnly used for notifications of type CUSTOM.\nCurrently supported on AGSA >= 5.5.",
                    "type": "boolean"
                },
                "visibility": {
                    "enum": [
                        "PUBLIC",
                        "PRIVATE",
                        "SECRET"
                    ],
                    "enumDescriptions": [
                        "This setting shows the full content of the notification.",
                        "On the lock screen, shows basic information about the existence of this\nnotification, including its icon and the name of the app that posted it.\nThe rest of the notification's details are not displayed.",
                        "Shows only the most minimal information, excluding even the\nnotification's icon."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__NotificationBigPicture": {
            "description": "Data used by the client to render BigPictureStyle notifications.\nNote that these are only supported on Android Jelly Bean and above (API 16+)\nand only on AGSA 9.91+.",
            "id": "Sidekick__NotificationBigPicture",
            "properties": {
                "bigPictureUrl": {
                    "description": "The url for the big picture to be displayed in Android's BigPictureStyle\nnotification style.",
                    "type": "string"
                },
                "showLargeIconOnExpand": {
                    "description": "This field tells Android clients to hide the large icon image when the\nnotification is expanded. It defaults to false, because that is the\nrecommended behavior in the Material Design guidelines.\nnext available id: 3",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__NotificationGroup": {
            "description": "This is used to add a NotificationGroup to a Notification.  This definition\nallows for extending the NotificationGroup to define a more complex version\nwhich would allow a NotificationGroup to define a GroupSummary, and specify\nthings like icons, etc.  The current implementation supports only a\nstring group_key and uses standard Android behaviors for creating groups.",
            "id": "Sidekick__NotificationGroup",
            "properties": {
                "groupKey": {
                    "description": "Refers to a NotificationGroupDefinition defined by the group_key.  These\nare defined in the SidekickConfiguration.NotificationConfiguration.\nSupported in Phase 1",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__OpenGmailAction": {
            "description": "An action to open Gmail.",
            "id": "Sidekick__OpenGmailAction",
            "properties": {
                "gmailReference": {
                    "$ref": "Sidekick__GmailReference"
                }
            },
            "type": "object"
        },
        "Sidekick__OpenOctarineAction": {
            "description": "Open a URL in an Octarine webview.",
            "id": "Sidekick__OpenOctarineAction",
            "properties": {
                "obfuscatedGaiaId": {
                    "description": "Obfuscated Gaia ID to use for the SSOCredentials when opening the URL.",
                    "type": "string"
                },
                "url": {
                    "description": "URL to be opened by this action",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__OpenUrlAction": {
            "description": "Action specification for opening a URL (web, or android intent)",
            "id": "Sidekick__OpenUrlAction",
            "properties": {
                "fallbackWebUrl": {
                    "description": "Web URL to use as a fallback if the named package is not installed, so\nthe android deep link will not work",
                    "type": "string"
                },
                "isAd": {
                    "description": "True if this url points towards an advertisement",
                    "type": "boolean"
                },
                "openOnlyBrowsableLink": {
                    "description": "Browsable links are those that can be launched by clicking links and are\nmeant to be safe.\nhttp://developer.android.com/reference/android/content/Intent.html#CATEGORY_BROWSABLE",
                    "type": "boolean"
                },
                "packageName": {
                    "description": "Android package name if this is an android deep link",
                    "type": "string"
                },
                "returnToDiscoverFeed": {
                    "description": "True if user should return to feed when back button pressed",
                    "type": "boolean"
                },
                "type": {
                    "enum": [
                        "VIEW",
                        "BROADCAST",
                        "INLINE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Enable inline video play for this action, supported after AGSA 6.4.\nThe url or fallback_web_url must be in the format of\n\"https://youtube.com/watch?v=videoID\" or\n\"http://youtube.com/watch?v=videoID\". If not, client will serve\nit as Type.VIEW."
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "URL to be opened by this action",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Outline": {
            "description": "Details describing how the outline around the metadataLineView should look.\n\nThe outline is drawn inside the metadata line. Given a text box of size 20,\npadding_top_bottom_in_dp of 6, and an outline_width_in_dp of 1, the total\nheight of the view should be 20 + 6*2 = 32. Phrased differently,\noutline_width_in_dp will not affect the size of the text box.",
            "id": "Sidekick__Outline",
            "properties": {
                "backgroundColor": {
                    "description": "Background fill color of the area inside the outline.",
                    "format": "int32",
                    "type": "integer"
                },
                "darkThemeBackgroundColor": {
                    "description": "Background fill color of the area inside the outline for the android dark\ntheme.",
                    "format": "int32",
                    "type": "integer"
                },
                "darkThemeOutlineColor": {
                    "description": "Color of the outline for the android dark theme.",
                    "format": "int32",
                    "type": "integer"
                },
                "outlineColor": {
                    "description": "Color of the outline.",
                    "format": "int32",
                    "type": "integer"
                },
                "outlineRadiusInDp": {
                    "description": "Maximum radius is half the height of the MetadataLineView. Overrides the\ndefault radius set by outline_type.",
                    "format": "int32",
                    "type": "integer"
                },
                "outlineType": {
                    "description": "The style of outline.",
                    "enum": [
                        "DEFAULT",
                        "ROUNDED_RECTANGLE",
                        "ROUNDED_PILL"
                    ],
                    "enumDescriptions": [
                        "",
                        "Outline radius defaults to zero.",
                        "Outline radius defaults to half the height."
                    ],
                    "type": "string"
                },
                "outlineWidthInDp": {
                    "description": "Width of the outline. Defaults to 0. This outline will be drawn inside the\nthe metadata_line.",
                    "format": "int32",
                    "type": "integer"
                },
                "paddingStartEndInDp": {
                    "description": "Extra padding on the left and right of the metadata line.",
                    "format": "int32",
                    "type": "integer"
                },
                "paddingTopBottomInDp": {
                    "description": "Extra padding on the top and bottom of the metadata line.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__PackageItem": {
            "id": "Sidekick__PackageItem",
            "properties": {
                "landingPageUrl": {
                    "description": "The landing page of the item.",
                    "type": "string"
                },
                "name": {
                    "description": "The item name.",
                    "type": "string"
                },
                "photo": {
                    "$ref": "Sidekick__Photo",
                    "description": "The item photo;"
                },
                "quantity": {
                    "description": "The quantity of the item in the order.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__PackageTrackingEntry": {
            "id": "Sidekick__PackageTrackingEntry",
            "properties": {
                "currentLocation": {
                    "description": "The current location of the package (e.g, \"Chicago, IL\"), if known.",
                    "type": "string"
                },
                "emailTitle": {
                    "description": "The title of the link to the original email (e.g., \"Email from BestBuy\").\nNot logged. We are already logging the sender name in from_address.",
                    "type": "string"
                },
                "estimatedDeliverySecs": {
                    "description": "The estimated time of delivery for a package as started\nby a shipment notification.",
                    "format": "int64",
                    "type": "string"
                },
                "fromAddress": {
                    "description": "The sender's localized address (or name).",
                    "type": "string"
                },
                "gmailReference": {
                    "description": "For Moonshine package tracking cards, the email reference.",
                    "items": {
                        "$ref": "Sidekick__GmailReference"
                    },
                    "type": "array"
                },
                "isPackageOfInterest": {
                    "description": "Set to true if this is the package tracking entry that was specified in\nthe interest in a request for the secondary page.\nDEPRECATED. Use Entry.is_entry_of_interest.",
                    "type": "boolean"
                },
                "items": {
                    "description": "A list of items for the entry.",
                    "items": {
                        "$ref": "Sidekick__PackageItem"
                    },
                    "type": "array"
                },
                "lastUpdateTimeSecs": {
                    "description": "The time of the last status update.",
                    "format": "int64",
                    "type": "string"
                },
                "manageDeliveryTitle": {
                    "description": "Title of action button for managing the delivery of this package.",
                    "type": "string"
                },
                "manageDeliveryUrl": {
                    "description": "URL for managing the delivery of this package.",
                    "type": "string"
                },
                "moreItemsString": {
                    "description": "A string describing if there are additional items in the order besides the\none in package_title. For example: \"+ 2 more items\".\nNot logged. We are already logging the individual items.",
                    "type": "string"
                },
                "orderId": {
                    "description": "The internal order id that this package belongs to.",
                    "type": "string"
                },
                "packageStatusUpdatesEnabled": {
                    "description": "To indicate whether the user has enabled package status updates.",
                    "type": "boolean"
                },
                "packageTitle": {
                    "description": "The title of the package tracking card (either the name of an item or a\ngeneral description of the package).\nNot logged. We are already logging the individual items.",
                    "type": "string"
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "pickupLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "Location for pick up. Such as walmart store location."
                },
                "pickupLocationAdditionalInformation": {
                    "description": "Extra description about pick up location, such as lock box number, with\nmessage localized in target language ready for display.",
                    "type": "string"
                },
                "pickupLocationDetails": {
                    "$ref": "Sidekick__PickupLocationDetails",
                    "description": "Additional information about the pickup location."
                },
                "secondaryPageUrl": {
                    "description": "The url to the secondary page that shows the shipment details.",
                    "type": "string"
                },
                "secondaryPageUrlTitle": {
                    "description": "The string title to use for the secondary page url.\nFor instance (\"Track all packages\").",
                    "type": "string"
                },
                "shippingCompanyDomain": {
                    "description": "The domain of the shipping company (e.g., \"fedex.com\"), if known.",
                    "type": "string"
                },
                "shippingCompanyLogoUrl": {
                    "description": "The URL of the shipping company's logo.",
                    "type": "string"
                },
                "shippingCompanyName": {
                    "description": "The name of the shipping company (\"UPS\", \"Fedex\")",
                    "type": "string"
                },
                "shippingService": {
                    "description": "The type of shipping service (\"Standard delivery\")",
                    "type": "string"
                },
                "status": {
                    "description": "Localized status string (\"Delivered\", \"In transit\", etc).",
                    "type": "string"
                },
                "statusCode": {
                    "description": "LINT.ThenChange(//depot/google3/search/now/proto/analysis/package_tracking_enums.proto)",
                    "enum": [
                        "IN_TRANSIT",
                        "DELIVERED",
                        "ATTEMPTED_DELIVERY",
                        "UNKNOWN",
                        "SHIPPED",
                        "OUT_FOR_DELIVERY",
                        "SHIPPING_ERROR",
                        "AVAILABLE_FOR_PICKUP"
                    ],
                    "enumDescriptions": [
                        "The package is in transit.",
                        "The package has been delivered.",
                        "A delivery was attempted.",
                        "The status is unknown.",
                        "The package has been shipped.",
                        "The package will be delivered soon.",
                        "Indicates there was an error when shipping the items.",
                        "Ready for pick up at a store location as opposed to being delivered."
                    ],
                    "type": "string"
                },
                "toAddress": {
                    "description": "The recipient's localized address.",
                    "type": "string"
                },
                "trackingNumber": {
                    "description": "The tracking number of the package.",
                    "type": "string"
                },
                "trackingUrl": {
                    "description": "The url to see current tracking information.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__PersonalItemInfo": {
            "description": "Metadata containing title and subtitle strings for rendering a personal\nentry as a list item.",
            "id": "Sidekick__PersonalItemInfo",
            "properties": {
                "statusCode": {
                    "enum": [
                        "NEUTRAL",
                        "WARNING",
                        "CRITICAL",
                        "GOOD"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "statusMessage": {
                    "description": "The status indicator that indicates the status of a flight or order\n(e.g. \"On time\" or \"Delivered\"), or the fact that an event has been\nmodified (e.g. \"Modified\").",
                    "type": "string"
                },
                "subtitleInfo": {
                    "description": "Additional information to show in the subtitle. (PII, not logged.)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timeLabel": {
                    "description": "The time portion of the subtitle. (PII, not logged.)",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the item. (PII, not logged.)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__PhoneNumber": {
            "description": "A phone number that specifies both the actual number and the type of number.",
            "id": "Sidekick__PhoneNumber",
            "properties": {
                "value": {
                    "description": "The phone number, such as \"867-5309\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Photo": {
            "description": "A photo used for a place card or similar.\nNOTE: Changes to this proto may need to be mirrored to\nsidekick_internal_client_api.Photo",
            "id": "Sidekick__Photo",
            "properties": {
                "aspectRatio": {
                    "description": "The aspect ratio the image should have. The aspect ratio is the\nratio of pixels wide to pixels tall in decimal format (height/width).\nAGSA client support: 7.2\niGSA client support: 40.0",
                    "format": "float",
                    "type": "number"
                },
                "clickAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "Click action for the photo. Only used if info_url isn't set."
                },
                "darkThemeUrl": {
                    "description": "android dark theme version of url",
                    "type": "string"
                },
                "darkThemeUrlRtl": {
                    "description": "android dark theme version of url_rtl",
                    "type": "string"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "heightInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "imageKeyId": {
                    "description": "The id of geo_photo_service.ImageKey of the photo which is used for forcing\nthe viewer to scroll to this image when tapped. This is for Local Universal\nUI.",
                    "type": "string"
                },
                "infoUrl": {
                    "description": "URL for more info about the photo. (e.g. its Panoramio web page)",
                    "type": "string"
                },
                "marginBottomInDp": {
                    "description": "Adding a bottom margin to the photo.",
                    "format": "int32",
                    "type": "integer"
                },
                "marginEndInDp": {
                    "description": "Adding a end margin to the photo.",
                    "format": "int32",
                    "type": "integer"
                },
                "marginStartInDp": {
                    "description": "Adding a start margin to the photo.",
                    "format": "int32",
                    "type": "integer"
                },
                "marginTopInDp": {
                    "description": "Adding a top margin to the photo.",
                    "format": "int32",
                    "type": "integer"
                },
                "photoAttribution": {
                    "description": "Attribution for this photo (photographer's name and optional link to\nher website).",
                    "items": {
                        "$ref": "Sidekick__Attribution"
                    },
                    "type": "array"
                },
                "talkback": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The talkback string for the photo."
                },
                "url": {
                    "description": "The URL where the photo is located.",
                    "type": "string"
                },
                "urlRtl": {
                    "description": "The URL for an RTL version of the same image as above.  This is used\nwhen the client is in RTL mode.  If this is not present, the above url\nwill be used in RTL and LTR mode.\nAGSA client support: 6.10",
                    "type": "string"
                },
                "urlType": {
                    "enum": [
                        "REGULAR",
                        "FIFE_CONTENT",
                        "FIFE_IMAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "A FIFE Content URL is special in that it can take parameters at the end.\nFor example, http://.....s=100.",
                        "A FIFE Image URL is a special url that can take parameters like the\nContent URL, except that the parameters go in the directory name before\nthe file name. For example:\n\n  http://....../s=100-fenhance=1/IMG_00_93_23.JPG\n\nThese URL's come from G+, Picasa, and sources where a Gaia ID is in the\ntitle."
                    ],
                    "type": "string"
                },
                "width": {
                    "description": "The width and height of the returned thumbnail.",
                    "format": "int32",
                    "type": "integer"
                },
                "widthInDp": {
                    "description": "The width and height of the image in dp\nThis takes precedence over the width and height fields above on the client\nAGSA client support: 6.17",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__PhotoGrid": {
            "description": "A module with a row of photos",
            "id": "Sidekick__PhotoGrid",
            "properties": {
                "deprecated1": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "forceSquareCropping": {
                    "description": "If true, forces photos to be square cropped. Note square formatting is\ncurrently only supported for grids of 1, 2, 4, and 8 photos.  Any other\nset of photos will be truncated to fit in the largest grid size that\nit can fill.",
                    "type": "boolean"
                },
                "photos": {
                    "description": "Individual photos in the row",
                    "items": {
                        "$ref": "Sidekick__PhotoWithAction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__PhotoWithAction": {
            "description": "A Photo with a ClientAction to apply when the photo is clicked.",
            "id": "Sidekick__PhotoWithAction",
            "properties": {
                "clickAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Action to take when the photo is clicked"
                },
                "photo": {
                    "$ref": "Sidekick__GeoLocatedPhoto"
                }
            },
            "type": "object"
        },
        "Sidekick__PhotoWithAttribution": {
            "description": "A photo with optional attribution information (source of the photo).",
            "id": "Sidekick__PhotoWithAttribution",
            "properties": {
                "attribution": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Attribution string for the image, e.g. \"NY times\""
                },
                "clickAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "Action to take when the photo is clicked"
                },
                "darkThemeUrl": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__PickupLocationDetails": {
            "id": "Sidekick__PickupLocationDetails",
            "properties": {
                "key": {
                    "description": "The type of additional information provided (e.g., \"unlock code\").",
                    "type": "string"
                },
                "value": {
                    "description": "The value of the additional information provided (e.g., \"12345\").",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__PietModule": {
            "description": "A module for rendering Piet content mixed with other server modules.",
            "id": "Sidekick__PietModule",
            "properties": {
                "pietFrame": {
                    "$ref": "SearchNowUiPiet__Frame"
                },
                "pietSharedStateIds": {
                    "items": {
                        "$ref": "Sidekick__ContentId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__PlaceData": {
            "description": "Abstraction of the concrete data, such as Contact or Business data,\nassociated with a FrequentPlace. At most one of the concrete data fields will\nbe populated.",
            "id": "Sidekick__PlaceData",
            "properties": {
                "businessData": {
                    "$ref": "Sidekick__BusinessData",
                    "description": "If set, this field references the business search result from which this\nPlaceData originated."
                },
                "contactData": {
                    "$ref": "Sidekick__ContactData",
                    "description": "If set, this field references the Focus Contact from which this PlaceData\noriginated."
                },
                "displayName": {
                    "description": "Name that would sufficient input for the user to chose to associate this\nPlaceData with a FrequentPlace.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__PlayVideoAction": {
            "description": "A client action that plays video. It supports three mods:\n*) 0-tap: Autoplay when video on screen silently when embedded playable.\n*) 1-tap: Play with sound in full screen when user taps on videos.\n*) 2-tap: Lead user to source when tap on non-video part on 1-tap screen.",
            "id": "Sidekick__PlayVideoAction",
            "properties": {
                "aspectRatio": {
                    "description": "The aspect ratio for the video, and is defined as pixels wide\nto pixels tall in decimal format.\nIMPORTANT: aspect_ratio = width / height",
                    "format": "float",
                    "type": "number"
                },
                "attributions": {
                    "description": "Attribution strings that shows above the video.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "enableLightbox": {
                    "description": "If true, play video in lightbox on 1-tap. Otherwise, open source instead.",
                    "type": "boolean"
                },
                "errorMessage": {
                    "description": "The error message to show when the video player fails to play.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "preview": {
                    "$ref": "Sidekick_PlayVideoAction_Preview"
                },
                "productLoggingCategory": {
                    "description": "Product category for logging product-specific data in VideoWatchData.",
                    "enum": [
                        "UNSPECIFIED",
                        "ASKJOE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "productLoggingData": {
                    "description": "Optional product-specific data to attach to VideoWatchData when logging\nvideo watch.",
                    "type": "string"
                },
                "sourceUrl": {
                    "description": "URL for full content.",
                    "type": "string"
                },
                "thirdPartyVideo": {
                    "$ref": "Sidekick_PlayVideoAction_ThirdPartyVideo"
                },
                "titles": {
                    "description": "Title strings that shows below the video.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "youtubeVideo": {
                    "$ref": "Sidekick_PlayVideoAction_YoutubeVideo"
                }
            },
            "type": "object"
        },
        "Sidekick__PrimaryAction": {
            "description": "Clickable action module at the bottom of a card. The associated action\nis actually specified at the CardModule level.",
            "id": "Sidekick__PrimaryAction",
            "properties": {
                "metadataText": {
                    "description": "Main text of the action button, replaces title and secondary_label\nAlso overrides those two if this is defined.\n\niOS does not support this field.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "secondaryClickAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "A second action attached to this module--this is the smaller action button\non the right-hand-side of the module, e.g. a \"phone\" icon to call the\nbusiness.\n\nThis was deprecated on iOS in Nightwing (v66)"
                },
                "secondaryLabel": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Extra text associated with the action button"
                },
                "showAsSuggestionChip": {
                    "description": "If true, the primary action would be shown as a suggestion chip.",
                    "type": "boolean"
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Main text of the action button"
                }
            },
            "type": "object"
        },
        "Sidekick__PublicAlertEntry": {
            "description": "NextId 14",
            "id": "Sidekick__PublicAlertEntry",
            "properties": {
                "alertUrl": {
                    "description": "A URL to follow for more information about the alert.",
                    "type": "string"
                },
                "alertUrlLabel": {
                    "description": "Text to display for the alert URL.",
                    "type": "string"
                },
                "image": {
                    "$ref": "Sidekick__Photo",
                    "description": "An image to show on the card, such as a map of the affected area.\nMay contain precise user location (shows \"you are here\" dot)."
                },
                "issuedTimeSec": {
                    "description": "The issued time as second since epoch.",
                    "format": "uint64",
                    "type": "string"
                },
                "language": {
                    "description": "Language of the alert. If present Push will use it to filter the entries\nagainst the language in device registrations. Ignored by the device itself.\nSee\nhttp://google3/knowledge/verticals/publicalerts/proto/publicalerts.proto?l=498&rcl=133684785\nfor matching field in PublicAlertsResult proto.",
                    "type": "string"
                },
                "level": {
                    "description": "Level (from the PA backend) indicates the importance of the alert to this\nimpression. This may influence alert positioning and rendering.",
                    "enum": [
                        "UNKNOWN_LEVEL",
                        "URGENT",
                        "SEVERE",
                        "MODERATE",
                        "LOW"
                    ],
                    "enumDescriptions": [
                        "See go/protodosdonts",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The location at which the alert is based. Only name is set."
                },
                "publisher": {
                    "description": "The publisher for this alert.\nSee comment in time_publisher describing when this field is\npopulated and logged.",
                    "type": "string"
                },
                "publisherKey": {
                    "type": "string"
                },
                "score": {
                    "description": "The ranking score (from the PA backend) for this Public Alert as a measure\nof the importance (severity, recency, etc.). Score is more granular than\nlevel and provides absolute ordering, but also harder to understand than\nlevel.",
                    "format": "double",
                    "type": "number"
                },
                "text": {
                    "description": "The body text of the alert, usually containing formatted HTML.",
                    "type": "string"
                },
                "timePublisher": {
                    "description": "The time and publisher related information for this alert,\ne.g \"15 mins ago - National Weather Service\"\nPost 2.7.2 this field will not be populated, instead the publisher\nand issued_time_sec fields are populated. We will only log\nthis or the other two, never all three.",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the alert.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__QueryBox": {
            "description": "An input box and search icon.\nPerforms open url action defined by the query url template.",
            "id": "Sidekick__QueryBox",
            "properties": {
                "defaultText": {
                    "description": "A default text shown in the search box.",
                    "type": "string"
                },
                "inputBoxType": {
                    "description": "A restriction for the search textbox.",
                    "enum": [
                        "DEFAULT",
                        "DIGITS"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "queryUrlTemplate": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "A URL to open when the user hit enter button (or something like that).\nVery roughly speaking, something like this:\n\"https://www.google.com/search?q=%s\" The user is presented an input box,\nand the string they enter in that box is inserted in place of the %s ."
                }
            },
            "type": "object"
        },
        "Sidekick__Question": {
            "description": "Question is used in both ways between the server and the client. A question\nshould always originate from the server.\n1) The server may send one or more Questions to the client with each card;\n   these are treated as \"back-of-the-card\" questions. The server may also\n   send stand-alone Questions to the client which are treated as cards or\n   questions in the \"Closet\".\n2) The client may send back a Question in an ExecutedUserAction to indicate\n   the user has answered the question.",
            "id": "Sidekick__Question",
            "properties": {
                "action": {
                    "description": "For questions of type ACTION, the following actions will be sent to the\nfrontend when the user clicks the associated UI elements from the question\ntemplate. Note that the quantity and ordering of the actions here should be\nthe same as the associated ActionAnswer data in the template.",
                    "items": {
                        "$ref": "Sidekick__Action"
                    },
                    "type": "array"
                },
                "answer": {
                    "$ref": "Sidekick_Question_Answer"
                },
                "answerExpireDeltaMillis": {
                    "description": "Time delta in milliseconds after the answer timestamp after which\nthe answer expires. That is, this answer should be considered invalid\nafter answer_timestamp_millis + answer_expire_delta_millis.\nIf this field is absent, the answer never expires.",
                    "format": "int64",
                    "type": "string"
                },
                "answerTimestampMillis": {
                    "description": "Timestamp since the epoch when the answer was recorded on the server.\nSet by the server before an answered question is written to Kansas.",
                    "format": "int64",
                    "type": "string"
                },
                "answerToUpdateByButton": {
                    "$ref": "Sidekick_Question_Answer",
                    "description": "The answer to be updated once the user clicks the action button, or the\nuser clicks the entity in adding interaction dialog.\nThis field is only used if the type is ACTION_BUTTON."
                },
                "conditionToEnable": {
                    "description": "Conditions to have the question enabled (not enabled means the question is\nstill shown but grey out).\nIf it is not set, then the question is always enabled.",
                    "items": {
                        "$ref": "Sidekick_Question_Condition"
                    },
                    "type": "array"
                },
                "conditionToShow": {
                    "description": "Conditions to show the question.\nIf it is not set, then the question is always shown.",
                    "items": {
                        "$ref": "Sidekick_Question_Condition"
                    },
                    "type": "array"
                },
                "dynamicMultipleChoice": {
                    "description": "Only used for dynamic multiple choice question to hold choice options.\nEach choice option is one Entity and each Entity represents the answer in\nits entirety.",
                    "items": {
                        "$ref": "Sidekick_Question_Entity"
                    },
                    "type": "array"
                },
                "dynamicMultipleChoiceClientAction": {
                    "description": "Used for dynamic multiple choice questions to hold client actions\nper answer.  To attach actions to answers, create a list of\nactions parallel to dynamic_multiple_choice above.",
                    "enumDescriptions": [
                        "",
                        "",
                        "For questions that require special client handling.\nClient provides an auto-complete list for teams.",
                        "Client provides an auto-complete list for stocks.",
                        "",
                        "Client redirects user to Places in the Closet.",
                        "Client redirects user to relevant settings.",
                        "Client provides a dialog to rename a place.",
                        "Client provides a dialog to remove a place.",
                        "For icebreaker questions, instructs the client to show the card\nassociated with the question.",
                        "Refresh the corresponding card in-place.\nOnly supported in Android client versions 3.2+. No-op for older clients.",
                        "Refresh the current context (whether card list or closet) immediately."
                    ],
                    "items": {
                        "enum": [
                            "INVALID",
                            "DISMISS_CARD",
                            "ADD_A_TEAM",
                            "ADD_A_STOCK",
                            "REFRESH_CARD_LIST",
                            "EDIT_PLACES",
                            "MANAGE_LOCATION_SHARING",
                            "RENAME_PLACE",
                            "FORGET_PLACE",
                            "SHOW_LINKED_CARD",
                            "REFRESH_CARD",
                            "REFRESH_IMMEDIATELY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "encodedServerPayload": {
                    "description": "Proto lite doesn't support unknown fields such as extensions that the\nclient doesn't know about. Use this field to roundtrip server extensions\nthrough the client. The field contains an encoded Question proto that\nhas only the extensions set.",
                    "format": "byte",
                    "type": "string"
                },
                "fingerprint": {
                    "description": "Unique fingerprint for the question, including its entity parameters,\nif any. This fingerprint is calculated over the invariants of the question\nand its parameters, i.e., the template id and a unique key for each\nparameter Entity. It does not consider variants such as the answer,\nany localized strings, etc., in its calculation.\nThis fingerprint should be used for matching question instances,\nhashing, etc.",
                    "format": "byte",
                    "type": "string"
                },
                "initialZipcode": {
                    "description": "Only used for tv lineup training questions. Used in the\ntv lineup selection dialog to generate suggested tv lineups\nwhen the question is not answered.",
                    "type": "string"
                },
                "justificationParameter": {
                    "description": "Only used for parameterized justification strings. Parameters should\nreplace the placeholders in the justification string in order; note that\nplaceholders are 1-based.",
                    "items": {
                        "$ref": "Sidekick_Question_Entity"
                    },
                    "type": "array"
                },
                "parameter": {
                    "description": "Only used for parameterized questions. Parameters should replace the\nplaceholders in the question string in order; note that placeholders\nare 1-based.",
                    "items": {
                        "$ref": "Sidekick_Question_Entity"
                    },
                    "type": "array"
                },
                "questionDisplay": {
                    "$ref": "Sidekick_Question_QuestionDisplay",
                    "description": "A wrapper that contains invariants of one question."
                },
                "templateId": {
                    "description": "Template ID from which this question is created.",
                    "format": "int64",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp (usec). Since Kansas keeps track of timestamps, this field\nis optional and should only be used for in-memory representations\nwhen reading the data through UserDataProto\n//kansas/datatype/userdata.proto. Don't populate this field at any other\ntimes.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__QuestionEntry": {
            "id": "Sidekick__QuestionEntry",
            "properties": {
                "question": {
                    "$ref": "Sidekick__Question",
                    "description": "DEPRECATED: Do not use. Unused after 10/25/2013."
                },
                "questionNode": {
                    "$ref": "Sidekick__QuestionNode"
                }
            },
            "type": "object"
        },
        "Sidekick__QuestionNode": {
            "description": "Contains a question and expected answers for a tree of dependent\nquestions. The dependency is expressed in the child node.\n\nUsage Overview:\nquestion_queue.push(root_question_node)\nprocess(question_queue):\n  while !question_queue.empty():\n    question_node <- question_queue.remove_head()\n    answer <- get_answer_for_question(question_node.question)\n    foreach child in question_node.child_list:\n      if answer matches any of\n          child.parent_question_match:\n        question_queue.add(child)",
            "id": "Sidekick__QuestionNode",
            "properties": {
                "child": {
                    "description": "Child questions that are dependent on a particular answer of this\nquestion. The dependency is expressed in the child's\nparent_question_answer_match repeated field.\n\nThe actual answer is to be retrieved from user input or from a\nuser profile or configuration.",
                    "items": {
                        "$ref": "Sidekick__QuestionNode"
                    },
                    "type": "array"
                },
                "parentQuestionAnswerMatch": {
                    "description": "Set of acceptable answers from this question's parent that\ngate whether to proceed with this question. If any one of these\nanswers match, the question in this node is considered valid\nand askable. If none match, the question in this node and its\nsubtree should be discarded.\nIf this field is empty, the question in this node is considered\nvalid.",
                    "items": {
                        "$ref": "Sidekick_Question_Answer"
                    },
                    "type": "array"
                },
                "question": {
                    "$ref": "Sidekick__Question",
                    "description": "The root question for this subtree."
                }
            },
            "type": "object"
        },
        "Sidekick__QuestionTemplate": {
            "description": "Template from which questions can be generated.\nQuestion templates are language/country independent and must be used\ntogether with a string dictionary to resolve to localized versions. Several\nfields refer to the dictionary by keys, such as question_string_key.\nThe server should maintain these templates and update the client if there\nare any changes.",
            "id": "Sidekick__QuestionTemplate",
            "properties": {
                "actionCompanion": {
                    "description": "List of client actions that the client should present to the user.\nOne-to-one mapped to the action field in the Question proto. The\ndisplay_string_key field is ignored in favor of Action.display_message.\nIf selected, the client action defined here is performed and the\ncorresponding Action in the Question is sent back to the server.\nApplicable to the ACTION question type only.",
                    "items": {
                        "$ref": "Sidekick_QuestionTemplate_ClientActionWithIcon"
                    },
                    "type": "array"
                },
                "alwaysShowQuestion": {
                    "description": "For Closet V3, whether to always show the question, potentially with a\ndefault value if the user has not previously answered it.",
                    "type": "boolean"
                },
                "attribute": {
                    "description": "Attributes that the template writer thinks this template should have.\nMultiple dimensions can be mixed, e.g. \"SPORTS\" and \"INTERESTED_IN\".\nAttributes may be used to group questions.",
                    "enumDescriptions": [
                        "The subject of the question.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The form of the question.",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "SPORTS",
                            "STOCKS",
                            "PLACES",
                            "TV_VIDEO",
                            "THIRD_PARTY",
                            "OTHER_ENTITY_INTEREST",
                            "BILLS",
                            "PEOPLE",
                            "WEATHER",
                            "NEWS",
                            "CALENDAR",
                            "TRAVEL",
                            "EVENTS",
                            "TRANSPORTATION",
                            "MUSIC",
                            "OLYMPICS",
                            "ROUTINES_COOKING",
                            "INTERESTED_IN",
                            "NOT_INTERESTED_IN"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "clientOnlyAction": {
                    "description": "List of client actions that the client should present to the user.\nIf selected the client action defined here is performed and no Actions\nare sent back to the server.\nApplicable to the MULTIPLE_CLIENT_ACTION question type only.",
                    "items": {
                        "$ref": "Sidekick_QuestionTemplate_ClientActionWithIcon"
                    },
                    "type": "array"
                },
                "collection": {
                    "description": "For Closet V3, these are the closet collections that this question\nshould appear in. If this is absent, then the question will be displayed\nin the \"everything else\" section of the closet.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fulfillAction": {
                    "description": "Client action after the user clicks on the question and one of the\nparameters needs to be filled out by the client. E.g. show custom UI for\nadding a team or stock.",
                    "enum": [
                        "INVALID",
                        "DISMISS_CARD",
                        "ADD_A_TEAM",
                        "ADD_A_STOCK",
                        "REFRESH_CARD_LIST",
                        "EDIT_PLACES",
                        "MANAGE_LOCATION_SHARING",
                        "RENAME_PLACE",
                        "FORGET_PLACE",
                        "SHOW_LINKED_CARD",
                        "REFRESH_CARD",
                        "REFRESH_IMMEDIATELY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "For questions that require special client handling.\nClient provides an auto-complete list for teams.",
                        "Client provides an auto-complete list for stocks.",
                        "",
                        "Client redirects user to Places in the Closet.",
                        "Client redirects user to relevant settings.",
                        "Client provides a dialog to rename a place.",
                        "Client provides a dialog to remove a place.",
                        "For icebreaker questions, instructs the client to show the card\nassociated with the question.",
                        "Refresh the corresponding card in-place.\nOnly supported in Android client versions 3.2+. No-op for older clients.",
                        "Refresh the current context (whether card list or closet) immediately."
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Unique and stable once a template is written.",
                    "format": "int64",
                    "type": "string"
                },
                "isDeprecatedQuestion": {
                    "description": "Deprecated question indication. If set to true, will prevent the\nquestion from being returned to the client to be displayed in\nthe closet, even if the question had been previously answered.",
                    "type": "boolean"
                },
                "justificationStringKey": {
                    "description": "Key to retrieve a localized string from a string dictionary on why the\nquestion is being asked. Similar to question_string_key, this can also be\nparameterized.",
                    "type": "string"
                },
                "locale": {
                    "description": "Locale for questions we want to show different versions of in different\nregions (ex: Video on Demand providers)",
                    "type": "string"
                },
                "multipleChoiceAnswer": {
                    "description": "Only a multiple choice question template comes with provided answers.\nApplicable to the MULTIPLE_CHOICE question type only.",
                    "items": {
                        "$ref": "Sidekick_QuestionTemplate_ClientActionWithIcon"
                    },
                    "type": "array"
                },
                "multipleSelectOption": {
                    "description": "The list of selectable options for a MULTIPLE_SELECT question.",
                    "items": {
                        "$ref": "Sidekick_QuestionTemplate_ClientActionWithIcon"
                    },
                    "type": "array"
                },
                "questionStringKey": {
                    "description": "Key to retrieve a localized question string from a string dictionary.\nQuestions may be parameterized or non-parameterized.\nParameter placeholders are specified as %1, %2, so on.\nExample: \"Interested in cooking?\" - non-parameterized.\nExample: \"Interested in %1?\" - parameterized.",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "YES_NO",
                        "MULTIPLE_CHOICE",
                        "OPEN_CHOICE",
                        "ACTION",
                        "MULTIPLE_CLIENT_ACTION",
                        "MULTIPLE_SELECT",
                        "TV_PROVIDER",
                        "DYNAMIC_MULTIPLE_CHOICE",
                        "ADD_TEAM",
                        "ADD_STOCK"
                    ],
                    "enumDescriptions": [
                        "Asks a boolean question and interested in the yes/no answer.",
                        "Asks a multiple-choice question and interested in the user's choice.\nChoices are statically defined in the template and cannot be customized.",
                        "OPEN_CHOICE hasn't been implemented as of August 2013, but some dogfood\nclient builds have gone out so we keep it here. We may use it in the\nfuture for adding a place, etc.",
                        "This template asks if the user wants to perform an Action; the client\nshould send back what action the user has executed.\nThis is not related to the ClientAction proto below.",
                        "Similar to MULTIPLE_CHOICE, but instead of providing a list of answer\nchoices to the question, it provides a list of possibly-unrelated\nClientActions from which the client can choose to perform. The client\nmay perform one or more ClientActions.",
                        "A question that allows the user to select multiple (zero or more)\noptions from a menu of options.",
                        "A question that asks the user to select their TV provider and\nreceives an open choice answer. This question requires a custom UI\nto select the TV provider, so we give it its own type.",
                        "Similar to MULTIPLE_CHOICE, but instead of statically defined choices,\nit provides a list of choices dynamically filled at question serving\ntime.",
                        "A yes/no question that requires the user to specify a team. Used only on\nthe client.",
                        "A yes/no question that requires the user to specify a stock. Used only on\nthe client."
                    ],
                    "type": "string"
                },
                "unansweredStringKey": {
                    "description": "Key to retrieve a localized string to display when a question has not been\nanswered yet. This is typically shown in the Closet when we want to lead\nthe user to fill in a missing answer. For example, for the question string\n\"TV Provider\", we could display \"Choose a provider\" if no answer has been\nselected yet.\nThis should currently only be populated for the TV/VOD Provider questions.",
                    "type": "string"
                },
                "variant": {
                    "description": "The third part of the primary key of this question template.\nOnly needed if multiple questions share the question_string_key\nand justification_string_key but differ in something else like\nyes_no_question_client_action.\nExample: SPORT_TEAM_Q_SPORT_TEAM_FROM_SEARCH_J_IN_TOURNAMENT is\nexactly like SPORT_TEAM_Q_SPORT_TEAM_FROM_SEARCH_J except it\nlacks a DISMISS_CARD no_action; in the tournament case there are\nstill questions to be answered about other teams.",
                    "type": "string"
                },
                "yesNoQuestionClientAction": {
                    "$ref": "Sidekick_QuestionTemplate_YesNoQuestionClientAction",
                    "description": "Client actions after the user answers a Yes/No question."
                }
            },
            "type": "object"
        },
        "Sidekick__QuestionTemplates": {
            "description": "List of question templates. The server should maintain these templates and\nupdate the client if there are any changes.",
            "id": "Sidekick__QuestionTemplates",
            "properties": {
                "metadata": {
                    "$ref": "Sidekick__QuestionTemplatesMetadata"
                },
                "template": {
                    "items": {
                        "$ref": "Sidekick__QuestionTemplate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__QuestionTemplatesMetadata": {
            "description": "Metadata for QuestionTemplates. We made it a top-level message so the client\ncan use it to communicate with the server without sending the bulk of\nquestion templates.",
            "id": "Sidekick__QuestionTemplatesMetadata",
            "properties": {
                "hash": {
                    "description": "Hash is computed over all templates in the QuestionTemplates.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__RankingScore": {
            "id": "Sidekick__RankingScore",
            "properties": {
                "baseScore": {
                    "description": "The initial score given to an entry when it is generated, e.g., from the\nfrontend.",
                    "format": "int32",
                    "type": "integer"
                },
                "delta": {
                    "description": "A change to an entry's final score, e.g., when a flight status changes from\non-time to delayed. The client is responsible for recomputing the final\nscore when receiving a delta.",
                    "format": "int32",
                    "type": "integer"
                },
                "priority": {
                    "enum": [
                        "UNSPECIFIED",
                        "MAX",
                        "HIGH",
                        "LOW",
                        "MIN"
                    ],
                    "enumDescriptions": [
                        "Most cards should be at default priority. These appear in the regular\nstream on phone/tablet (AGSA and iOS), Android Wear, and Apple Watch.",
                        "Cards with MAX priority are worthy enough of notifying the user in a\nplatform-specific way: on phone/tablet, they may show a notification,\nwatches may buzz the user's wrist, and these are a good candidate for\nsingle-card-slot surfaces like TopDeck.",
                        "These cards are promoted slightly, and may appear in overview surfaces\nin clients, e.g. Cover Card in Android Wear, as a Glance on Apple Watch,\netc. Clients that do not have a special place for such cards should treat\nthem the same as DEFAULT.",
                        "Cards that are slightly demoted, and may be skipped by certain clients.\nE.g. browse mode cards are not a good candidate for watches, and setting\ntheir priority to LOW will cause them to not be shown on watches.\n(Ideally, such cards should not be sent to the client, but if the watch\nis piggy-backing on an Entry tree sent originally to the tethered phone,\nthis priority level can be useful.)",
                        "The lowermost priority that a card can be at. Experimental cards may be\nassigned to this bucket, and skipped by all clients unless explicitly\nexpecting them."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Rating": {
            "description": "A generic rating which can be associated with an entity, for example, a movie\nrating.",
            "id": "Sidekick__Rating",
            "properties": {
                "actionType": {
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "freshness": {
                    "enum": [
                        "NONE",
                        "FRESH",
                        "ROTTEN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "numRatingStarsE3": {
                    "description": "The overall star rating, scale 0-5 (* 1000).",
                    "format": "int32",
                    "type": "integer"
                },
                "numReviews": {
                    "description": "Number of reviews for the rating.",
                    "format": "int32",
                    "type": "integer"
                },
                "rating": {
                    "description": "The rating to display, e.g., \"8.7/10\" or \"67%\"",
                    "type": "string"
                },
                "source": {
                    "enum": [
                        "ROTTEN_TOMATOES",
                        "GOOGLE_REVIEWS",
                        "IMDB"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "A URL back to the source for the rating.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__RatingStarsMetadata": {
            "description": "A \"ratings stars\" metadata item showing N/5 stars.",
            "id": "Sidekick__RatingStarsMetadata",
            "properties": {
                "ratingE3": {
                    "description": "The rating times 1000. The min is 0 and max is 5000.",
                    "format": "int32",
                    "type": "integer"
                },
                "suppressNumberDisplay": {
                    "description": "Suppress the display of the number next to the stars",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__ReactAction": {
            "description": "An encapsulated message pertaining to additional information that should be\nsent for a more/less reaction. See go/feed-react.",
            "id": "Sidekick__ReactAction",
            "properties": {
                "isAd": {
                    "description": "True if the reaction is part of an ad module.",
                    "type": "boolean"
                },
                "pillSize": {
                    "description": "Enum used for determining the default size of the reaction pill based on\nlanguage.",
                    "enum": [
                        "UNKNOWN",
                        "SMALL",
                        "MEDIUM",
                        "LARGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "questionInterestsForLessAction": {
                    "description": "Server-generated questions used to indicate disinterest in entities.",
                    "items": {
                        "$ref": "Sidekick__Question"
                    },
                    "type": "array"
                },
                "questionsForLessAction": {
                    "$ref": "Sidekick__QuestionTemplates",
                    "description": "Deprecated. use question_interests_for_less_action instead."
                },
                "showDetailsText": {
                    "description": "Whether the More/Less popup should include text or not.",
                    "type": "boolean"
                },
                "veLessButton": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "Id used for VE logging on the More/Less Popup's less button."
                },
                "veMoreButton": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "Id used for VE logging on the More/Less Popup's more button."
                },
                "veReactContainer": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "Id used for VE logging on the More/Less Popup's container."
                },
                "xPosition": {
                    "description": "*\nThe x-value (in absolute screen coordinate) of the center of the reaction\nicon that triggered this event. This is populated by the client.",
                    "format": "int32",
                    "type": "integer"
                },
                "yPosition": {
                    "description": "*\nThe y-value (in absolute screen coordinate) of the center of the reaction\nicon that triggered this event. This is populated by the client.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__ReminderData": {
            "description": "Media cards (tv, movie, event, album), and possibly in the\nfuture, other Entry types, can display either in predictive form or as a\nreminder (see comparisons of the two versions at\nhttps://folio.googleplex.com/now-ux/2.6/event-reminders/latest/). If they\nshould display as reminders, they will contain this reminder information.",
            "id": "Sidekick__ReminderData",
            "properties": {
                "assistanceMessage": {
                    "description": "Assistance information for this reminder that isn't associated with\nan action. For example, this could contain open/close times for\nbusiness hours or the number of days left until a deadline.",
                    "type": "string"
                },
                "formattedEventDate": {
                    "description": "The formatted event date for the reminder.  This is used for to show the\nactual date associated with an entity (as opposed to the reminder trigger\ndate). For example, it may contain \"Release date Jun 14, 2013\" or simply\n\"Jun 14, 2013\"\nNote that this is equivalent to the field named \"subtitle\" in\nReminderEntry.",
                    "type": "string"
                },
                "reminderListType": {
                    "enum": [
                        "UNKNOWN",
                        "OCCASIONALLY",
                        "ALERTLESS",
                        "GROCERY",
                        "SHOPPING_CATEGORY"
                    ],
                    "enumDescriptions": [
                        "",
                        "For triggerless reminders that show occasionally.\nThese are the same as someday reminders in inbox.",
                        "These are reminders without explicit triggers and do not trigger\nnotifications. They are the same as inbox reminders in Inbox.",
                        "For a list card containing grocery items. These are separated from below\nbecause their usage is significantly higher/separate.",
                        "These are other categories besides groceries (i.e. hardware stores,\nelectronic stores, etc.)."
                    ],
                    "type": "string"
                },
                "reminderMessage": {
                    "description": "The main message of the reminder to show to the user (e.g. \"feed the dog\"\nor \"Hangover Part III\"). May potentially contain PII and/or location, so\nlogged to temp logs only.",
                    "type": "string"
                },
                "smartActionData": {
                    "items": {
                        "$ref": "Sidekick_ReminderData_SmartActionData"
                    },
                    "type": "array"
                },
                "snoozeMessage": {
                    "description": "Localized message to display for the snooze action (e.g. \"Remind me in 1\nhour\").  This can never include location or time zone information since it\nwill be stored in 5-week logs.",
                    "type": "string"
                },
                "taskId": {
                    "description": "The task id of the reminder correlates to the id in the TaskList.\nConsidered Personal Data because it can be mapped to a GAIA ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ReminderEntry": {
            "description": "An entry to hold a time and/or location based reminder.",
            "id": "Sidekick__ReminderEntry",
            "properties": {
                "contactData": {
                    "$ref": "Sidekick__ContactData",
                    "description": "The contact data for triggering co-presence reminders."
                },
                "creationTimeMs": {
                    "description": "The creation time of the reminder in milliseconds since epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "dayPart": {
                    "description": "Direct the client to show the trigger time as an inexact string.",
                    "enum": [
                        "MORNING",
                        "AFTERNOON",
                        "EVENING",
                        "NIGHT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "externalAppUri": {
                    "description": "A link to the reminder that can be used to open it in the\napplication that created it.",
                    "type": "string"
                },
                "image": {
                    "$ref": "Sidekick__Photo",
                    "description": "Image to display as part of the reminder, if it comes from a rich reminder\nsource (e.g. a movie reminder)"
                },
                "isAlertlessReminder": {
                    "description": "Optional specification if this is an alertless reminder (no explicit\ntriggers), or is a reminder that should be grouped with alertless.",
                    "type": "boolean"
                },
                "isSomedayReminder": {
                    "description": "Optional specification if this is a someday reminder.",
                    "type": "boolean"
                },
                "justification": {
                    "description": "Justification text for the reminder entry containing personal-branding\nattribution info. e.g. \"Only you can see this\".",
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The location where the reminder will fire if set.  Primarily used for UX."
                },
                "locationCategory": {
                    "$ref": "Sidekick__LocationCategory",
                    "description": "Set if this reminder should trigger at a category location. Contains\ninformation about the category at which it should trigger. If this is set,\nno other location/time triggering should be set."
                },
                "origin": {
                    "description": "Optional specification of which app created this reminder.",
                    "enum": [
                        "UNKNOWN_ORIGIN",
                        "INBOX",
                        "KEEP",
                        "NOW"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "personalItemInfo": {
                    "$ref": "Sidekick__PersonalItemInfo",
                    "description": "Metadata containing title and subtitle strings for rendering this entry as\na list item."
                },
                "recurrenceInfo": {
                    "$ref": "Sidekick_ReminderEntry_RecurrenceInfo",
                    "description": "Optional specification if this is a repeated reminder."
                },
                "reminderMessage": {
                    "description": "The main reminder message to show the user, e.g., \"feed the dog\", or\n\"call Jen\".",
                    "type": "string"
                },
                "resolution": {
                    "description": "Resolution for the reminder.  Used to control the generate the trigger\nmessage.  For EXACT_TIME, the client simply shows the time.  For inexact\ntimes, the client uses the DayPart to generate an appropriate message.",
                    "enum": [
                        "EXACT_TIME",
                        "DAY_PART",
                        "DAY",
                        "WEEKEND"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "UPCOMING",
                        "ARCHIVED",
                        "ONGOING_SUBSCRIPTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "subtitle": {
                    "description": "The optional reminder subtitle to show the user.  This is used for entity\nreminders, for example, to show the actual date associated with an\nentity vs. the reminder trigger date, e.g., \"Release date Jun 14, 2013\".",
                    "type": "string"
                },
                "taskId": {
                    "description": "The task id of the reminder correlates to the id in the TaskList.\nConsidered Personal Data because it can be mapped to a GAIA ID.",
                    "type": "string"
                },
                "triggerTimeSeconds": {
                    "description": "This is used in conjunction with the resolution to generate the trigger\ntime string.  See also DayPart.",
                    "format": "int64",
                    "type": "string"
                },
                "triggeringMessage": {
                    "description": "Message to show the trigger condition as text, e.g., \"When I arrive home\",\nor \"This weekend\".  If this message is present, it will be shown.\nOtherwise, the trigger message is generated based on the trigger time and\nresolution.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ResearchPageEntry": {
            "description": "Individual page entry in the Research Topic card or individual card in Browse\nMode.",
            "id": "Sidekick__ResearchPageEntry",
            "properties": {
                "appLaunchUrl": {
                    "description": "App deeplink and corresponding package id.",
                    "type": "string"
                },
                "appPackageId": {
                    "type": "string"
                },
                "author": {
                    "description": "Published author of the webpage. Only populated with public names.",
                    "type": "string"
                },
                "category": {
                    "description": "Display category of the page, e.g. \"From the archives\" or \"Guides\".",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the webpage.",
                    "type": "string"
                },
                "image": {
                    "$ref": "Sidekick__Photo",
                    "description": "Image representing this page link. Can be an image from the landing page,\nor a page preview."
                },
                "justification": {
                    "description": "An explanation for why the page is recommended, e.g. \"You searched for this\ntopic\".",
                    "type": "string"
                },
                "landingPageDomain": {
                    "description": "The domain of the destination URL above. This can be used to easily tell\nthe domain of the landing page even if the url above is a redirect url.",
                    "type": "string"
                },
                "landingSiteDisplayName": {
                    "description": "The display name for the site, e.g. \"New York Times\" for nytimes.com.",
                    "type": "string"
                },
                "newsClusterId": {
                    "description": "The news cluster id associated with this content.",
                    "format": "int64",
                    "type": "string"
                },
                "openInReader": {
                    "description": "True if the entry should be opened in a web-view.\nDEPRECATED Jan-2016",
                    "type": "boolean"
                },
                "pageId": {
                    "description": "The page_id from TABA associated with this research entry.",
                    "format": "uint64",
                    "type": "string"
                },
                "publishTimestampSeconds": {
                    "description": "Publish date of the webpage, in seconds since the epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "secondaryPageHeader": {
                    "$ref": "Sidekick__SecondaryPageHeaderDescriptor",
                    "description": "Settings for setting up browse mode."
                },
                "title": {
                    "description": "Title of the webpage.",
                    "type": "string"
                },
                "url": {
                    "description": "URL of the webpage. This URL isn't wrapped in redirects.",
                    "type": "string"
                },
                "useGutterlessLayout": {
                    "description": "The client should not use the gutter layout if this option is set to true.",
                    "type": "boolean"
                },
                "viewTimestampSeconds": {
                    "description": "Last time the user read the webpage, in seconds since the epoch.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ResearchTopicEntry": {
            "id": "Sidekick__ResearchTopicEntry",
            "properties": {
                "actionHeader": {
                    "description": "Localized action string that goes with the topic.\ne.g. \"Continue researching\"",
                    "type": "string"
                },
                "clickAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "Action to perform when clicking on the entry."
                },
                "collapsed": {
                    "type": "boolean"
                },
                "image": {
                    "description": "Images that are relevant to the topic. May be a collage of images from\nresearch pages.\nThe first image is deemed most representative of the topic by the backend.",
                    "items": {
                        "$ref": "Sidekick__Photo"
                    },
                    "type": "array"
                },
                "justification": {
                    "description": "Explanation of why this research topic is being displayed.",
                    "type": "string"
                },
                "secondaryPageHeader": {
                    "$ref": "Sidekick__SecondaryPageHeaderDescriptor",
                    "description": "Settings for setting up browse mode."
                },
                "topic": {
                    "description": "Name of the topic. e.g. \"Trip to Versailles\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ReviewScore": {
            "description": "Some review scores.",
            "id": "Sidekick__ReviewScore",
            "properties": {
                "score": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "ZAGAT_FOOD",
                        "ZAGAT_DECOR",
                        "ZAGAT_SERVICE"
                    ],
                    "enumDescriptions": [
                        "Review scores retrieved from Zagat, and the rating scale is 30.",
                        "Decoration",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__SaveAction": {
            "description": "Action to save/unsave content from the feed.",
            "id": "Sidekick__SaveAction",
            "properties": {
                "webPage": {
                    "$ref": "Sidekick_SaveAction_WebPage"
                }
            },
            "type": "object"
        },
        "Sidekick__ScreenAssistEntryMetadata": {
            "description": "The container for meta information that does not - and shouldn't be used to\n- affect the presentation of the node itself, but that can alter the\ntreatment the node gets from the client.",
            "id": "Sidekick__ScreenAssistEntryMetadata",
            "properties": {
                "appLinkId": {
                    "description": "App link id from Coca for logging actions on this entry.",
                    "format": "int32",
                    "type": "integer"
                },
                "cardId": {
                    "description": "Card id from Coca for logging actions on this entry.",
                    "format": "int32",
                    "type": "integer"
                },
                "cardType": {
                    "enum": [
                        "REGULAR",
                        "ERROR",
                        "TUTORIAL",
                        "HOMESCREEN_CLUSTER",
                        "TAIL_CLUSTER",
                        "NOTHING_ON_TAP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "mergeType": {
                    "enum": [
                        "DEFAULT",
                        "ALWAYS_ADD",
                        "NEVER_ADD"
                    ],
                    "enumDescriptions": [
                        "Apply the default client behavior, which is to de-dupe based on mid, and\nappend all cards which don't have a duplicate mid.",
                        "Always add this node, even it has a duplicate mid.",
                        "Never add this node. This implies that it will only be displayed if it\nis included in the first response."
                    ],
                    "type": "string"
                },
                "mid": {
                    "description": "The mid of the entry for de-duplication. Clients rendering multi-part\nresponses of some sort should strip cards with the same mids from\nsubsequent responses.",
                    "type": "string"
                },
                "newsInformationId": {
                    "description": "News information id from Coca for logging actions on this entry.",
                    "format": "int32",
                    "type": "integer"
                },
                "visualElementId": {
                    "description": "Visual element ID for the native visual element logging of the View\ngenerated for this entry.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__SearchAction": {
            "description": "Describes an action to enter GSA and perform a search.",
            "id": "Sidekick__SearchAction",
            "properties": {
                "corpusId": {
                    "description": "An optional corpus identifier to trigger searches with a specific corpus,\ne.g. news or images.",
                    "type": "string"
                },
                "headerUiState": {
                    "description": "Enum to control the header UI state prior to committing the query.",
                    "enum": [
                        "UNKNOWN",
                        "FULL_HEADER",
                        "SEARCH_PLATE_ONLY",
                        "HIDE_HEADER"
                    ],
                    "enumDescriptions": [
                        "State isn\u2019t known or unsupported (State will be ignored).",
                        "Header is completely shown. (Default behaviour).",
                        "Only displays the search plate and the progress bar.",
                        "Header is completely hidden."
                    ],
                    "type": "string"
                },
                "immersiveBasePage": {
                    "description": "String indicating what Immersive to open, including optional state.\nSee go/ibp.",
                    "type": "string"
                },
                "launchInOpa": {
                    "description": "This will trigger the search in the Opa chat UI. See go/hq-nowoverlay-dd.",
                    "type": "boolean"
                },
                "locationOverride": {
                    "$ref": "Sidekick__Location",
                    "description": "An optional location override. This will get sent with the query as a\nheader."
                },
                "ludocid": {
                    "description": "An optional local universal document id.",
                    "type": "string"
                },
                "miniappLandingPage": {
                    "description": "String indicating that a miniapp landing page should be triggered.\nSee go/mlp-param.",
                    "type": "string"
                },
                "nonSearchUrl": {
                    "description": "String indicating the non-search/ url to open. If it is true,\nimmersive_pane must be true. Please check go/gsasilkuserguide for valid\nnon-search url format.",
                    "type": "string"
                },
                "openInImmersivePane": {
                    "description": "Determine whether or not to open this in an immersive pane. If it is true,\nheader_ui_state will be ignored and the setNativeUiState api is disabled.\nSee go/agsa-cwt. This will trigger Silk in iGSA. See go/gsasilk.",
                    "type": "boolean"
                },
                "query": {
                    "description": "The actual query string.",
                    "type": "string"
                },
                "results": {
                    "$ref": "Sidekick_SearchAction_Results"
                },
                "richCardImmersiveVertical": {
                    "description": "The VE type id of the shortcut for Visual Elements logging.\nThis field is required.",
                    "type": "string"
                },
                "sourceSuffix": {
                    "description": "Suffix of Now related source values and answers how the user entered GSA\nthrough Now feature. Available in AGSA 6.3+.\nSee go/agsa-sources \"Google Now\" section.",
                    "type": "string"
                },
                "stickUrlParameter": {
                    "description": "The signed and url-encoded StickinessSignals which should be passed to\nthe GWS query as a 'stick' URL parameter.  This parameter reliably\ntriggers certain GWS behavior, such as a knowledge panel.  The parameter\nand the query fingerprint are signed, so this parameter will only work\nwith the specific search_query.",
                    "type": "string"
                },
                "ved": {
                    "description": "Associated Visual Element Data. It'll be used to identify the Visual\nElement that triggers query creation. Note that this ved is used for\nsearch action logging only and it's needed because Now cards don't\nhave native visual element logging at that time.",
                    "type": "string"
                },
                "webAppStateFragment": {
                    "description": "An optional fragment section in the URL. Serves as a way to transfer\nadditional information that would become available to the client-side\nJavaScript that would get triggered on the search page.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__SecondScreenAction": {
            "id": "Sidekick__SecondScreenAction",
            "properties": {
                "headerImages": {
                    "description": "Images to display in the secondary page header.",
                    "items": {
                        "$ref": "Sidekick__Photo"
                    },
                    "type": "array"
                },
                "interest": {
                    "$ref": "Sidekick__Interest",
                    "description": "Interest to request when launching the secondary page."
                },
                "secondaryPageHeader": {
                    "$ref": "Sidekick__SecondaryPageHeaderDescriptor",
                    "description": "Header descriptor for setting the title, image, etc. when launching\nthe secondary screen."
                },
                "subtitle": {
                    "description": "Subtitle to be shown in the secondary page.",
                    "type": "string"
                },
                "subtitleTalkback": {
                    "$ref": "Sidekick__TemplatedString"
                },
                "templatedSubtitle": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "A templated version of the subtitle.  subtitle is deprecated."
                },
                "templatedTitle": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "A templated version of the title.  Title is deprecated."
                },
                "title": {
                    "description": "Title for the secondary page, used in favor of the optional title in\nsecondary_page_header. Deprecated, use templated_title.",
                    "type": "string"
                },
                "titleTalkback": {
                    "$ref": "Sidekick__TemplatedString"
                }
            },
            "type": "object"
        },
        "Sidekick__SecondaryAction": {
            "description": "Clickable action module at the bottom of a card. The associated action\nis actually specified at the CardModule level.",
            "id": "Sidekick__SecondaryAction",
            "properties": {
                "secondaryClickAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "A second action attached to this module--this is the smaller action button\non the right-hand-side of the module, e.g. a \"phone\" icon to call the\nbusiness.\n\niOS support deprecated in Nightwing (v66)"
                },
                "subtitle": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Extra text associated with the action button"
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Main text of the action button"
                }
            },
            "type": "object"
        },
        "Sidekick__SecondaryPageHeaderDescriptor": {
            "id": "Sidekick__SecondaryPageHeaderDescriptor",
            "properties": {
                "contextHeaderImage": {
                    "$ref": "Sidekick__Photo"
                },
                "subtitle": {
                    "description": "A smaller label for the context in the secondary page,\ne.g. \"2014 FIFA World Cup\".",
                    "type": "string"
                },
                "subtitleTalkBack": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Talkback string for the subtitle. Not logged since this is really just a\nmore verbose version of the subtitle field."
                },
                "title": {
                    "description": "A label for the context in the secondary page, e.g. \"Trip to Versailles\".",
                    "type": "string"
                },
                "titleTalkBack": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Talkback string for the title. Not logged since this is really just a more\nverbose version of the title field."
                }
            },
            "type": "object"
        },
        "Sidekick__SelectionOptions": {
            "description": "Selection options represent a set of options displayed as\ndrop down by the SelectorModule. Styling is controlled\nby the drop down control.",
            "id": "Sidekick__SelectionOptions",
            "properties": {
                "options": {
                    "description": "All of the options displayed in the drop down.",
                    "items": {
                        "$ref": "Sidekick_SelectionOptions_SelectOption"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__SelectorModule": {
            "description": "A module with shows a drop down selector with a set of\noptions.  The Module contains a content (title) above\na drop down of options defined by as SelectOption\nobjects.\n\nIn the initial implementation, when the user selects\nan option, the selected_value will be updated and\na partial refresh will be triggered.",
            "id": "Sidekick__SelectorModule",
            "properties": {
                "bottomPaddingInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "content": {
                    "description": "The Title content for the Module",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "dateSelector": {
                    "type": "boolean"
                },
                "dateTimeMs": {
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "The key for the selector",
                    "type": "string"
                },
                "partialRefresh": {
                    "description": "The module will do a partial refresh of the Entry\nafter updating the selected_value.",
                    "type": "boolean"
                },
                "selectedValue": {
                    "description": "The selected value on post back.  This will be set\nif the user selects a option.  The value is equal\nto the SelectOption.value for the selected option.\nThis value should be set to the current default value.\nIf this is not set, the first option will be displayed\nto the user.",
                    "type": "string"
                },
                "selectionOptions": {
                    "$ref": "Sidekick__SelectionOptions"
                },
                "timeSelector": {
                    "type": "boolean"
                },
                "topPaddingInDp": {
                    "description": "Overrides the padding on the top and bottom of the card.\nCurrently the padding is defined at 4dp.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__SemanticProperties": {
            "description": "See http://go/now-content-ids for the design of SemanticProperties.\nSemanticProperties holds semantic information that we want to attach to\npieces of content (cards, notifications) for doing subsequent comparison\nbetween content--such as making a dismiss of one card result in the removal\nof a different card that is deemed \"too similar\" to the original card.\nFor example, a card might list an associated location, and business logic\nmay choose to interpret that dismiss as dismissing any card within N meters\nof that location.\n\nAlthough fields may be reused across multiple features (e.g. multiple card\ntypes might find a \"mid\" or \"location\" field to be useful and reusable),\nfields shouldn't be so general that it's difficult to identify the privacy\nimplications of logging the field. (So, for example, a field called\n\"string_data\" would be a bad idea.) Fields may be logged, and the logs proto\nshould contain suitable datapol annotations for the fields to be scrubbed\nfrom the appropriate logs when necessary.\n\nFields of message type with a large dependency footprint may want to be\nadded as extensions so that they do not have to be interpreted on the client.\nNext ID: 10",
            "id": "Sidekick__SemanticProperties",
            "properties": {
                "broadTopicMid": {
                    "description": "Webref HITS category entities from the source document.\nSee go/sortingcat.",
                    "items": {
                        "format": "uint64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "cardCategory": {
                    "enum": [
                        "UNKNOWN_CARD_CATEGORY",
                        "UI_NAVIGATION",
                        "AD_CLICK_TO_DOWNLOAD",
                        "AD_HERO",
                        "AD_MULTI_PHOTO",
                        "AD_SHOPPING_SHOWCASE",
                        "WEATHER",
                        "WEATHER_TINY",
                        "WEATHER_LIST",
                        "TRANSIT_STATION",
                        "FLIGHT_LIST",
                        "SPORT_SCORE",
                        "SPORT_LURE_LIST",
                        "SPORT_EVENT",
                        "SPORT_HIGHLIGHT_LIST",
                        "SPORT_HIGHLIGHT",
                        "CALENDAR",
                        "ANDROID_CALENDAR",
                        "SERVER_CALENDAR",
                        "TRANSLATE",
                        "CURRENCY_EXCHANGE",
                        "CLOCK",
                        "NEARBY_PLACE",
                        "PUBLIC_ALERT",
                        "MOVIE_LIST",
                        "STOCK_QUOTE_LIST",
                        "STOCK_QUOTE",
                        "ATTRACTIONS_LIST",
                        "ATTRACTION",
                        "PACKAGE_TRACKING",
                        "PACKAGE_TRACKING_LIST",
                        "NEWS",
                        "BREAKING_NEWS",
                        "HYPERLOCAL_NEWS",
                        "ENTITY_NEWS",
                        "LOCATION_HISTORY_REMINDER",
                        "PHOTO_SPOT",
                        "BIRTHDAY_CARD",
                        "RESEARCH_TOPIC",
                        "RESEARCH_PAGE",
                        "BARCODE",
                        "GMAIL",
                        "NEARBY_PLACES_LIST",
                        "REAL_ESTATE",
                        "REAL_ESTATE_LIST",
                        "OPEN_HOUSE",
                        "MOVIE_TICKET",
                        "REMINDER",
                        "REMINDER_LIST",
                        "WEBSITE_UPDATE",
                        "WEBSITE_UPDATE_LIST",
                        "GENERIC_TICKET",
                        "SHARED_TRAFFIC_CARD",
                        "RELEVANT_WEBSITE",
                        "RELEVANT_WEBSITE_LIST",
                        "LAST_TRAIN_HOME",
                        "TV_RECOGNITION",
                        "WALLET_LOYALTY",
                        "HOTEL_PLACE",
                        "RESTAURANT_PLACE",
                        "CAR_RENTAL",
                        "GENERIC_TV_PROGRAM",
                        "CONCERT_TICKET",
                        "INTERESTS_TRAINING_QUESTION",
                        "TRAINING_QUESTION",
                        "TV_NEWS",
                        "TV_MUSIC",
                        "TV_KNOWLEDGE",
                        "TV_KNOWLEDGE_LIST",
                        "SPORT_EVENT_TICKET",
                        "PROTOTYPE",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE",
                        "BROWSE_MODE_LURE_TRAVEL",
                        "BROWSE_MODE_LURE_AUTHOR",
                        "BROWSE_MODE_AUTHOR_STORY",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_ENTITY_LIST",
                        "BROWSE_MODE_ENTITY",
                        "BROWSE_MODE_VIDEO_LIST",
                        "BROWSE_MODE_VIDEO",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_READING_STORY",
                        "THINGS_TO_WATCH",
                        "THINGS_TO_WATCH_LURE",
                        "THINGS_TO_WATCH_LIST_LURE",
                        "THINGS_TO_WATCH_TV",
                        "THINGS_TO_WATCH_VOD",
                        "APP_SUGGESTION",
                        "APP_SUGGESTION_LIST",
                        "PERSONALIZED_NEWS",
                        "CONTACT_SUGGESTION",
                        "CONTACT_SUGGESTION_LIST",
                        "VEHICLE_PARKING_LOCATION",
                        "VEHICLE_PARKING_LOCATION_LIST",
                        "TV_MUSIC_KNOWLEDGE_LIST",
                        "TRANSPORTATION",
                        "TRANSPORTATION_LIST",
                        "TRAFFIC_INCIDENTS",
                        "BILL",
                        "BILL_LIST",
                        "PRODUCT",
                        "PRODUCT_LIST",
                        "IN_STORE",
                        "INDOOR_MAP",
                        "PRICE_DROP",
                        "TV_RELATED_WEB_SITE_LIST",
                        "TV_RELATED_WEB_SITE",
                        "TV_RELATED_WEB_SITE_KNOWLEDGE",
                        "HOTSEAT_SUGGESTION_LIST",
                        "HOTSEAT_APP_SUGGESTION",
                        "HOTSEAT_CONTACT_SUGGESTION",
                        "MALL_DIRECTORY",
                        "FIELD_TRIP_LIST",
                        "FIELD_TRIP",
                        "FRIEND_LOCATION_PHOTOS",
                        "FIELD_TRIP_LURE",
                        "BACKGROUND_TEXT",
                        "SURVEY_LURE",
                        "CHROMECAST_IMAX",
                        "BATTERY",
                        "FITNESS",
                        "AGENDA",
                        "GAS_STATION_ALONG_ROUTE",
                        "ALONG_ROUTE_LIST",
                        "THINGS_TO_DO_LIST_LURE",
                        "FLIGHT_PRICE_LIST",
                        "FLIGHT_PRICE",
                        "GOOGLE_PLUS_STORY",
                        "MINUS_ONE_UPDATES_PROMOTION",
                        "THIRD_PARTY_WELCOME",
                        "THIRD_PARTY_WELCOME_V2",
                        "THIRD_PARTY_WELCOME_V3",
                        "HOTWORD_PROMO",
                        "TUTORIAL_CARD_CUSTOMIZE",
                        "TUTORIAL_CARD_INTRO",
                        "TUTORIAL_CARD_SWIPE",
                        "TUTORIAL_CARD_SWIPE_FOR_CUSTOMIZE",
                        "TUTORIAL_CARD_PULL_DOWN",
                        "TUTORIAL_CARD_WELCOME",
                        "TUTORIAL_CARD_SCREENIE",
                        "NON_PERSONALIZED_STREAM_WELCOME",
                        "TUTORIAL_CARD_SCREENIE_WELCOME",
                        "SPLIT_STREAM_WARM_WELCOME",
                        "SPLIT_STREAM_EMPTY",
                        "SPLIT_STREAM_BOTTOMBAR_PROMOTION",
                        "TUTORIAL_CALENDAR_TIP",
                        "TUTORIAL_GMAIL_INTELLIGENCE_TIP",
                        "CLUSTER_METADATA",
                        "CAROUSEL_MODULE_LIST",
                        "APP_LAUNCH_LIST",
                        "SMALL_UI_MODULE_LIST",
                        "TRAVEL_GENERIC_TABA_CONTENT",
                        "APP_CONTEXTUAL",
                        "CONTACT_CARD",
                        "GMAIL_LOCATION_OF_INTEREST",
                        "AT_A_PLACE",
                        "AT_A_CONTEXT_VIEW_MORE",
                        "AT_A_CONTEXT_PLACE_PAGE",
                        "BEFORE_PLACE",
                        "BEFORE_PLACE_VIEW_MORE",
                        "COMPONENT",
                        "CLOSET_PROFILE_SINGLE_TYPE",
                        "CLOSET_PROFILE_BUTTON",
                        "CLOSET_PROFILE_BUTTON_NO_NOTIF",
                        "CLOSET_PROFILE_BUTTON_RESET_ALL_PREF",
                        "CLOSET_PROFILE_MULTI_TYPE",
                        "CLOSET_ENTITY",
                        "CLOSET_CONTROL",
                        "CLOSET_QUESTION",
                        "CLOSET_TEMPLATE_GROUP",
                        "CLOSET_NOW_SETTINGS",
                        "AUTO_ACTIVATED_WELCOME",
                        "LOBBY_CAROUSEL",
                        "NOW_CLIENT_OPT_IN_PROMO",
                        "SIGN_IN_LURE",
                        "SEARCH_AWARENESS",
                        "KMU_QUOTE",
                        "KMU_RELATED_QUESTION",
                        "KMU_WHAT_IS",
                        "MOVIE_TRAILER_STORY",
                        "ECS_STORY",
                        "CONTEXTUAL_HEALTH",
                        "HIDE_INFERRED_LANGUAGE",
                        "FACETS",
                        "FRESH_VIDEO",
                        "NEWS_FULL_COVERAGE",
                        "TOPIC_FEED_ENTRY_POINTS",
                        "TWITTER_STORIES",
                        "MEDIA_MOVIES_TO_WATCH",
                        "AGENDA_CALENDAR_EVENT",
                        "AGENDA_CAR_RENTAL_RESERVATION",
                        "AGENDA_EVENT_RESERVATION",
                        "AGENDA_FLIGHT_RESERVATION",
                        "AGENDA_HOTEL_RESERVATION",
                        "AGENDA_REMINDER",
                        "AGENDA_RESTAURANT_RESERVATION",
                        "AGENDA_TRANSPORTATION_RESERVATION",
                        "AIRPORT_TERMINAL_MAP",
                        "AIRPORT_TERMINAL_MAP_ITEM",
                        "ASSISTANT_HQ_EMPTY_STATE",
                        "ASSISTANT_HQ_HIGHLIGHT",
                        "ASSISTANT_HQ_PEOPLE",
                        "ASSISTANT_HQ_PROMO_BANNER",
                        "ASSISTANT_HQ_TRIPS",
                        "ASSISTANT_ORDER",
                        "ASSISTANT_SHORTCUTS",
                        "AT_HOTEL_CARD",
                        "BEST_PRODUCTS",
                        "BEST_PRODUCTS_LIST",
                        "BIRTHDAY_DOODLE",
                        "BROAD_INTEREST_ECS_STORIES",
                        "BROAD_INTEREST_ECS_STORIES_MID_PERSONALIZED",
                        "BROAD_INTEREST_ECS_STORIES_MID_USER_MODEL_MATCHED",
                        "BROAD_INTEREST_EXPLORATION_STORIES",
                        "BROAD_INTEREST_STORIES",
                        "BROAD_INTEREST_STORIES_MID_PERSONALIZED",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE_BREAKING_NEWS",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE_CURRENT",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE_ENTITY_NEWS",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE_QUERY_NEWS",
                        "BROWSE_MODE_LURE_INTEREST_UPDATE_READING",
                        "BROWSE_MODE_TOP_NEWS_LURE",
                        "BROWSE_MODE_TOP_NEWS_STORY",
                        "BUYING_GUIDE",
                        "CHROMECAST_ART",
                        "CHROMECAST_GENERIC",
                        "CHROMECAST_GPLUS_FEATURED_PHOTO",
                        "CHROMECAST_GPLUS_PERSONAL_PHOTO",
                        "CHROMECAST_NEWS",
                        "CHROMECAST_PHOTO",
                        "CHROMECAST_PLACE",
                        "CHROMECAST_WEATHER",
                        "COARSE_LOCATION_OPTIN",
                        "CODELAB",
                        "COMPARE_PRICES",
                        "COMPARE_PRICES_LIST",
                        "COOKING_EXPERIENCE_MEMORY",
                        "COOKING_EXPERIENCE_MEMORY_CAROUSEL",
                        "COOKING_EXPERIENCE_MEMORY_LIST",
                        "COOKING_EXPERIENCE_RECIPE",
                        "COOKING_EXPERIENCE_RECIPE_CAROUSEL",
                        "COOKING_EXPERIENCE_RECIPE_LIST",
                        "COOKING_EXPERIENCE_SECONDARY_PAGE_LURE",
                        "COOKING_EXPERIENCE_TOOLBOX",
                        "COOKING_EXPERIENCE_TOOLBOX_CAROUSEL",
                        "COOKING_EXPERIENCE_TOOLBOX_LIST",
                        "COOKING_EXPERIENCE_TUTORIAL_CARD",
                        "COOKING_FEEDBACK_CARD",
                        "COOKING_VIDEOS",
                        "CORE_PANOPTIC_STORY",
                        "CRITIC_REVIEWS",
                        "CRITIC_REVIEWS_ITEM",
                        "DEEP_TRENDS_FABLE_STORY",
                        "DEEP_TRENDS_STORY",
                        "DESTINATIONS_ON_TRANSIT",
                        "DISCOVER_POLL",
                        "DISCOVER_VIDEO_GAME_VIDEOS",
                        "DOODLE_CARD",
                        "DUMMY",
                        "ENABLE_LOCATION_SETTINGS",
                        "EPHEMERAL_EVENT_STORIES",
                        "EXPLICIT_INTEREST_ALBUM",
                        "EXPLICIT_INTEREST_BOOK",
                        "EXPLICIT_INTEREST_CONCERT_EVENT",
                        "EXPLICIT_INTEREST_MOVIE",
                        "EXPLICIT_INTEREST_TV_EPISODE",
                        "EXPLICIT_INTEREST_VIDEO_GAME",
                        "FASHION_BEAUTY_VIDEOS",
                        "FEATURED_STAMP",
                        "FEED_REACTION",
                        "FEED_V2_WELCOME_CARD",
                        "FEED_VIDEO",
                        "FEED_VIDEO_DEEP_REC",
                        "FLIGHT_STATUS_GMAIL",
                        "FLIGHT_STATUS_SEARCH",
                        "FREQUENT_PLACE_GMAIL_EVENT",
                        "FREQUENT_PLACE_LOCATION_HISTORY_COMMUTE",
                        "FREQUENT_PLACE_LOCATION_HISTORY_NON_COMMUTE",
                        "FREQUENT_PLACE_LOCATION_HISTORY_NON_COMMUTE_TO_HOME_OR_WORK",
                        "FREQUENT_PLACE_LOCATION_HISTORY_PLACE_PREDICTION",
                        "FREQUENT_PLACE_LOCATION_HISTORY_OTHER",
                        "FREQUENT_PLACE_MAPS_SEARCH",
                        "FREQUENT_PLACE_TIME_TO_LEAVE",
                        "TRAVEL_TIMES_WIDGET",
                        "FREQUENT_PLACE_UNKNOWN",
                        "FREQUENT_PLACE_WEB_SEARCH",
                        "FRESH_CONTENT_CAROUSEL",
                        "FRESH_CONTENT_STORY",
                        "FRESH_CONTENT_HERO_STORY",
                        "FULL_PAGE_INTEREST_PICKER_LURE",
                        "FULL_PAGE_INTEREST_PICKER_LURE_MOVIES",
                        "FULL_PAGE_INTEREST_PICKER_LURE_MUSIC",
                        "FULL_PAGE_INTEREST_PICKER_LURE_RECIPES",
                        "FULL_PAGE_INTEREST_PICKER_TILE_CATEGORY",
                        "FULL_PAGE_INTEREST_PICKER_TILE_INTEREST",
                        "FULL_PAGE_INTEREST_PICKER_TILE_POPULAR",
                        "FULL_PAGE_INTEREST_PICKER_SEARCH_RESULT",
                        "FUN_FACTS",
                        "FUN_FACTS_ITEM",
                        "FUN_STREAM_CAROUSEL_ITEM",
                        "FUN_STREAM_CAROUSEL_LIST",
                        "FUN_STREAM_STANDALONE_ITEM",
                        "GENERIC_CARD",
                        "GENERIC_CRISIS_RESPONSE",
                        "GENERIC_ENABLE_LOCATION_HISTORY",
                        "GENERIC_HOME_WORK_ADDRESS_REMINDER",
                        "GENERIC_IN_STORE",
                        "GENERIC_LOCATION_HISTORY_REMINDER",
                        "GENERIC_SANTA_TRACKER",
                        "GENERIC_SCREEN_ASSIST",
                        "GENERIC_SNOW_CONDITIONS",
                        "GENERIC_STALE_HOME_WORK_ADDRESS_REMINDER",
                        "GENERIC_TV_VIDEO_CONFIGURATION",
                        "GENERIC_UPGRADE_REMINDER",
                        "GENERIC_UPGRADE_REMINDER_CUSTOM",
                        "GENERIC_USER_STUDY",
                        "GENERIC_USER_STUDY_EVAL_PROMPT",
                        "GENERIC_WEB_HISTORY_AND_LOCATION_HISTORY_REMINDER",
                        "GENERIC_WEB_HISTORY_REMINDER",
                        "GENERIC_WIFI",
                        "GESTALT_REACTIONS_EDUCATION",
                        "GESTALT_WELCOME",
                        "GEO_TARGETING_STORIES",
                        "GEO_TARGETING_STORIES_MID_PERSONALIZED",
                        "GOOGLE_FUTURE_EVENT",
                        "GOOGLE_FUTURE_EVENT_LIST",
                        "GOOGLE_FUTURE_EVENT_CAROUSEL",
                        "GOOGLE_REVIEWS",
                        "GOOGLE_STORIES",
                        "GOOGLE_STORIES_BIRTHDAY",
                        "GROUND_TRANSPORTATION_TICKET",
                        "HOTEL_PRICE_ITEM_BOOKED_HOTEL_BETTER_DEALS",
                        "HOTEL_PRICE_ITEM_BOOKED_HOTEL_PRICE_DROP",
                        "HOTEL_PRICE_ITEM_BOOKED_FLIGHT",
                        "HOTEL_PRICE_ITEM_HOTELS_TONIGHT",
                        "HOTEL_PRICE_ITEM_PROACTIVE_TRIPS",
                        "HOTEL_PRICE_LIST_BOOKED_HOTEL_BETTER_DEALS",
                        "HOTEL_PRICE_LIST_BOOKED_HOTEL_PRICE_DROP",
                        "HOTEL_PRICE_LIST_BOOKED_FLIGHT",
                        "HOTEL_PRICE_LIST_HOTELS_TONIGHT",
                        "HOTEL_PRICE_LIST_PROACTIVE_TRIPS",
                        "HYPERLOCAL",
                        "IMAGE",
                        "IN_STORE_OFFER",
                        "IN_STORE_OFFER_LIST",
                        "IN_STORE_OFFER_VIEW_MORE",
                        "IN_STORE_OFFER_HEADER",
                        "INDIAN_RAILWAY_PNR_STATUS",
                        "INFERRED_ALBUM",
                        "INFERRED_BOOK",
                        "INFERRED_CONCERT_EVENT",
                        "INFERRED_EVENT",
                        "INFERRED_EVENT_STRUCTURED_EMAIL",
                        "INFERRED_EVENT_CHAT",
                        "INFERRED_MOVIE",
                        "INFERRED_REMINDER",
                        "INFERRED_TV_EPISODE",
                        "INFERRED_VIDEO_GAME",
                        "INSTALL_NOW_LAUNCHER",
                        "INTEREST_FEED_CARD_SUMMARY",
                        "INTEREST_FEED_COLLECTION",
                        "INTEREST_FEED_HEADER",
                        "INTEREST_FEED_TRAY",
                        "INTEREST_PICKER_KNOWLEDGE_CARD",
                        "INTEREST_PICKER_ITEM_BROAD_TOPICS",
                        "INTEREST_PICKER_ITEM_SPORT_TEAMS",
                        "INTEREST_PICKER_CARD_CAP",
                        "INTEREST_PICKER_CUSTOMIZE_LURE",
                        "INTEREST_PICKER_CUSTOMIZE_LURE_SPORTS",
                        "INTEREST_PICKER_CUSTOMIZE_LURE_FINANCE",
                        "INTEREST_PICKER_CAROUSEL",
                        "INTEREST_PICKER_ONBOARDING_ACTORS",
                        "INTEREST_PICKER_ONBOARDING_ARTISTS",
                        "INTEREST_PICKER_ONBOARDING_FINANCE",
                        "INTEREST_PICKER_ONBOARDING_SPORTS",
                        "INTEREST_PICKER_LEAGUE_START",
                        "INTEREST_PICKER_BROAD_TOPICS",
                        "INTEREST_UPDATE_KE_NOW",
                        "INTEREST_UPDATE_KE_NOW_HEADLESS_NOTIFICATION",
                        "INTEREST_UPDATE_KE_NOW_ITEM",
                        "INTEREST_UPDATE_LIST_KE_NOW",
                        "INTEREST_UPDATE_KE_NOW_AWARDS",
                        "INTEREST_UPDATE_KE_NOW_AWARDS_NOMINEE_WINNER_TRAY",
                        "INTEREST_UPDATE_KE_NOW_BOLLYWOOD",
                        "INTEREST_UPDATE_KE_NOW_BOOKS",
                        "INTEREST_UPDATE_KE_NOW_BOOK_TO_BOOKS",
                        "INTEREST_UPDATE_KE_NOW_BUSINESS",
                        "INTEREST_UPDATE_KE_NOW_EVENTS",
                        "INTEREST_UPDATE_KE_NOW_EXHIBITION",
                        "INTEREST_UPDATE_KE_NOW_EXHIBITION_DATES",
                        "INTEREST_UPDATE_KE_NOW_EXHIBITION_SUMMARY",
                        "INTEREST_UPDATE_KE_NOW_EXHIBITION_TICKETS",
                        "INTEREST_UPDATE_KE_NOW_FILM_FESTIVAL",
                        "INTEREST_UPDATE_KE_NOW_FINANCE",
                        "INTEREST_UPDATE_KE_NOW_HISTORY",
                        "INTEREST_UPDATE_KE_NOW_HOLIDAY",
                        "INTEREST_UPDATE_KE_NOW_HOTKP",
                        "INTEREST_UPDATE_KE_NOW_INTEREST_HEADER",
                        "INTEREST_UPDATE_KE_NOW_LIVE_STREAM",
                        "INTEREST_UPDATE_KE_NOW_LOTTERY",
                        "INTEREST_UPDATE_KE_NOW_MOVIES",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_CAST",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_CRITIC_REVIEW",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_RATINGS",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_RELEASE_DATE",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_SUMMARY",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_SHOWTIMES",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_STREAMING_PROVIDERS",
                        "INTEREST_UPDATE_KE_NOW_MOVIES_TRAILER",
                        "INTEREST_UPDATE_KE_NOW_MULTISPORT_EVENT",
                        "INTEREST_UPDATE_KE_NOW_MUSIC",
                        "INTEREST_UPDATE_KE_NOW_MUSIC_FESTIVAL",
                        "INTEREST_UPDATE_KE_NOW_MUSIC_SONG",
                        "INTEREST_UPDATE_KE_NOW_OLYMPICS",
                        "INTEREST_UPDATE_KE_NOW_POLITICS",
                        "INTEREST_UPDATE_KE_NOW_SEARCH_ENGAGEMENT_ASKJOE",
                        "INTEREST_UPDATE_KE_NOW_SEARCH_ENGAGEMENT_HIGHLIGHT",
                        "INTEREST_UPDATE_KE_NOW_SPORTS",
                        "INTEREST_UPDATE_KE_NOW_TENNIS_HIGHLIGHTS",
                        "INTEREST_UPDATE_KE_NOW_TV",
                        "INTEREST_UPDATE_KE_NOW_VIDEOGAMES",
                        "INTEREST_UPDATE_KE_NOW_VOTING",
                        "INTEREST_UPDATE_KE_NOW_HEALTH",
                        "INTERNAL_DEBUG_CARD",
                        "IOS_LOCATION_REPORTING_PROMO",
                        "IOS_NOTIFICATION_PROMO",
                        "JANATA_HANDSHAKE",
                        "JANATA_EDIT_CARD_FOLLOWUP",
                        "JANATA_POST_IMAGE_FOLLOWUP",
                        "KNOWLEDGE_PANEL_AMUSEMENT_RIDES",
                        "KNOWLEDGE_PANEL_AMUSEMENT_RIDES_ITEM",
                        "KNOWLEDGE_PANEL_ARTWORK",
                        "KNOWLEDGE_PANEL_ARTWORK_ITEM",
                        "KNOWLEDGE_PANEL_CARD",
                        "KNOWLEDGE_PANEL_EVENTS",
                        "KNOWLEDGE_PANEL_EVENTS_ITEM",
                        "KNOWLEDGE_PANEL_MOVIES",
                        "KNOWLEDGE_PANEL_NUTRITION",
                        "KNOWLEDGE_PANEL_NUTRITION_ITEM",
                        "KNOWLEDGE_PANEL_ROSTER",
                        "KNOWLEDGE_PANEL_ROSTER_ITEM",
                        "LIVEWEB_STORY_MID_PERSONALIZED",
                        "LOBBY_COOKING",
                        "LOBBY_ENTERTAINMENT",
                        "LOBBY_MOVIES",
                        "LOBBY_RESTAURANTS",
                        "LOBBY_WEATHER",
                        "LOBBY_SPORTS",
                        "LOBBY_OLYMPICS",
                        "LOCALLY_TRENDING_STORIES",
                        "LOCALLY_TRENDING_STORIES_MID_PERSONALIZED",
                        "LOCUS",
                        "MALL_CAROUSEL",
                        "MALL_CAROUSEL_ITEM",
                        "MERCHANT_NOTIFICATION",
                        "MOONSTONE_STORY",
                        "MOVIE_LIST_CAROUSEL_ITEM",
                        "MORE_STORIES_VIEWER",
                        "NEARBY_EVENTS",
                        "NEARBY_EVENTS_LIST",
                        "NEARBY_EVENTS_CAROUSEL",
                        "NEARBY_EVENTS_SECONDARY_PAGE",
                        "NEARBY_PLACES_CAROUSEL",
                        "NEARBY_LOCAL_EVENTS",
                        "NEARBY_GMAIL_EVENTS",
                        "NEARBY_RECOMMENDED_GMAIL_EVENTS",
                        "NEARBY_LOW_CONFIDENCE_GMAIL_EVENTS",
                        "NEARBY_PRODUCT",
                        "NEARBY_PRODUCT_LIST",
                        "NEWS_EXPERIENCE_SECONDARY_PAGE_LURE",
                        "NEWS_BUSINESS_STORY",
                        "NEWS_BUSINESS_HERO_STORY",
                        "NEWS_ENTERTAINMENT_STORY",
                        "NEWS_ENTERTAINMENT_HERO_STORY",
                        "NEWS_HEADLINE_STORY",
                        "NEWS_HEADLINE_HERO_STORY",
                        "NEWS_HEADLINE_UNPERSONALIZED_STORY",
                        "NEWS_HEADLINE_UNPERSONALIZED_HERO_STORY",
                        "NEWS_NATION_STORY",
                        "NEWS_NATION_HERO_STORY",
                        "NEWS_SCITECH_STORY",
                        "NEWS_SCITECH_HERO_STORY",
                        "NEWS_SPORTS_STORY",
                        "NEWS_SPORTS_HERO_STORY",
                        "NEWS_WORLD_STORY",
                        "NEWS_WORLD_HERO_STORY",
                        "PERSONAL_SEARCH",
                        "BOARDING_PASS",
                        "FREQUENT_FLYER_NUMBER",
                        "KEEP_NOTE",
                        "LOCAL_STREAM",
                        "LOYALTY_NUMBER",
                        "PERSONAL_ANSWERS_EMAIL_SNIPPET",
                        "PERSONAL_RECOMMENDATIONS_EMAIL_SNIPPET",
                        "PERSONAL_ANSWERS_EMAIL_SNIPPET_LIST",
                        "POPULAR_STYLE",
                        "POPULAR_STYLE_LIST",
                        "PUBLIC_NOTIFICATION",
                        "NEW_TO_YOU_UPDATE",
                        "NEW_TO_YOU_UPDATE_FRESH_INTEREST",
                        "NEW_TO_YOU_UPDATE_LANDMARK",
                        "NEW_TO_YOU_UPDATE_LONG_TERM_INTEREST",
                        "CORE_INTEREST_ECS",
                        "NEW_TO_YOU_UPDATE_MOVIE",
                        "NEW_TO_YOU_UPDATE_MOVIE_CAST",
                        "NEW_TO_YOU_UPDATE_PURCHASE",
                        "NEW_TO_YOU_UPDATE_BOOK_PURCHASE",
                        "NEW_TO_YOU_UPDATE_VIDEO_PURCHASE",
                        "NEW_TO_YOU_UPDATE_VIDEO_GAME_PURCHASE",
                        "NEW_TO_YOU_UPDATE_SOFTWARE_PURCHASE",
                        "NEW_TO_YOU_UPDATE_HOBBY_TRAVEL",
                        "NEW_TO_YOU_UPDATE_TRAVEL",
                        "NEW_TO_YOU_UPDATE_DEATH_ANNIVERSARY",
                        "NEW_TO_YOU_UPDATE_TRAVEL_EVENT",
                        "NEW_TO_YOU_UPDATE_HOBBY_EVENT",
                        "NEW_TO_YOU_UPDATE_HOBBY_TRAVEL_EVENT",
                        "NEW_TO_YOU_UPDATE_BIRTHDAY",
                        "NEW_TO_YOU_UPDATE_GEO_ESTABLISHED",
                        "NEW_TO_YOU_UPDATE_HISTORICAL_EVENT",
                        "NEW_TO_YOU_UPDATE_LEGAL_DECISION",
                        "NEW_TO_YOU_UPDATE_RECENT_DEATH",
                        "NEW_TO_YOU_UPDATE_REMINDER",
                        "NEW_TO_YOU_UPDATE_UNFAMILIAR_PLACE",
                        "NEW_TO_YOU_UPDATE_LIVE_VIDEO",
                        "NEW_TO_YOU_UPDATE_VASCO_TASK",
                        "NEW_TO_YOU_UPDATE_VASCO_FRESH_TASK",
                        "NEW_TO_YOU_UPDATE_VASCO_VIDEO_TASK",
                        "NEW_TO_YOU_UPDATE_PARENTING",
                        "NEW_TO_YOU_UPDATE_AFTER_A_PLACE",
                        "LONG_TERM_INTEREST_UPDATE",
                        "URL_TO_URL_RECOMMENDATION_UPDATE",
                        "NEW_TO_YOU_GROUPING",
                        "NEST_PROXY",
                        "NEWS_BUSINESS",
                        "NEWS_COUNTRY",
                        "NEWS_ENTERTAINMENT",
                        "NEWS_HEALTH",
                        "NEWS_SCIENCE_TECHNOLOGY",
                        "NEWS_SPORTS",
                        "NEWS_WORLD",
                        "PHOTO_SPOT_CAROUSEL",
                        "PHOTO_SPOT_CAROUSEL_ITEM",
                        "PLACE_PHOTO_CAROUSEL",
                        "PLACE_PHOTO_CAROUSEL_ITEM",
                        "PODCAST",
                        "PREDEFINED_PIET",
                        "PREDICTIVE_SEARCH_AIRLINE_BAGGAGE_POLICY",
                        "PREDICTIVE_SEARCH_FLIGHT_ENTERTAINMENT",
                        "PREDICTIVE_SEARCH_FLIGHT_INFORMATION_LIST",
                        "PREDICTIVE_SEARCH_PARKING_NEAR_AIRPORT",
                        "PREDICTIVE_SEARCH_PARKING_NEAR_AIRPORT_LIST",
                        "PREDICTIVE_SEARCH_GAS_STATION_NEAR_RENTAL_RETURN",
                        "PREDICTIVE_SEARCH_GAS_STATION_NEAR_RENTAL_RETURN_LIST",
                        "PREVIOUSLY_VIEWED_PRODUCT",
                        "PREVIOUSLY_VIEWED_PRODUCT_LIST",
                        "RECENTLY_FOLLOWED_INJECTION_HERO_STORY",
                        "REMINDER_COPRESENCE",
                        "REMINDER_EXPERIMENTAL",
                        "REMINDER_LIST_LOCATION_CATEGORY",
                        "REMINDER_LIST_OCCASIONALLY",
                        "REMINDER_LIST_ONGOING",
                        "REMINDER_LIST_UNKNOWN",
                        "REMINDER_LOCATION_CATEGORY",
                        "REMINDER_LOCATION_CHAIN",
                        "REMINDER_LOCATION_CUSTOM",
                        "REMINDER_LOCATION_SAVED",
                        "REMINDER_SUGGESTION_CARD",
                        "REMINDER_TIME_DATE",
                        "REMINDER_TIME_OCCASIONALLY",
                        "REMINDER_TIME_REPEATED",
                        "REMINDER_UNKNOWN",
                        "RESTAURANT_MENU_SNIPPET",
                        "RESTAURANT_RESERVATION",
                        "RIDDLER",
                        "ROVER_NEARBY_PLACES",
                        "ROVER_NEARBY_PLACES_ITEM",
                        "SCREEN_ASSIST_ADDRESS",
                        "SCREEN_ASSIST_APP_DISABLED_CONTEXT",
                        "SCREEN_ASSIST_APP_LAUNCH",
                        "SCREEN_ASSIST_BUSINESS",
                        "SCREEN_ASSIST_CELEBRITY",
                        "SCREEN_ASSIST_CONTACT",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_DEFINITIONS",
                        "SCREEN_ASSIST_DEBUG",
                        "SCREEN_ASSIST_GENERIC",
                        "SCREEN_ASSIST_MOVIE",
                        "SCREEN_ASSIST_TELEPHONE_NUMBER",
                        "SCREEN_ASSIST_PRODUCT",
                        "SCREEN_ASSIST_NO_DATA",
                        "SCREEN_ASSIST_FEEDBACK",
                        "SCREEN_ASSIST_CONTEXT_DISABLED",
                        "SCREEN_ASSIST_ERROR",
                        "SCREEN_ASSIST_COMING_SOON",
                        "SCREEN_ASSIST_DOWN_FOR_MAINTENANCE",
                        "SHOPPING_LIST",
                        "SHOPPING_PROPERTY",
                        "SHOPPING_TASK_LURE",
                        "SPORT_BASEBALL",
                        "SPORT_BASKETBALL",
                        "SPORT_CRICKET",
                        "SPORT_AUSTRALIAN_FOOTBALL",
                        "SPORT_FOOTBALL",
                        "SPORT_HOCKEY",
                        "SPORT_LEAGUE_LURE",
                        "SPORT_RUGBY",
                        "SPORT_SOCCER",
                        "SPORT_TABLE_SOCCER",
                        "SPORT_TENNIS",
                        "SPORT_WORLD_CUP_STANDINGS",
                        "SPORT_VIDEO_LURE",
                        "STREAM_STORY_CAROUSEL",
                        "STREAM_STORY_CAROUSEL_SPORTS",
                        "STREAM_STORY_CAROUSEL_ELECTIONS",
                        "STREAM_STORY_PERSONALIZED",
                        "STREAM_STORY_ELECTIONS",
                        "STREAM_STORY_SPORTS",
                        "THINGS_TO_DO_CAROUSEL",
                        "THINGS_TO_WATCH_LIST_LURE_ENTRY",
                        "THINGS_TO_WATCH_AS_LURE",
                        "THINGS_TO_WATCH_LIST_LURE_TV",
                        "THINGS_TO_WATCH_LIST_LURE_VOD",
                        "THINGS_TO_WATCH_TV_LURE_ENTRY",
                        "THINGS_TO_WATCH_VOD_LURE_ENTRY",
                        "THINGS_TO_WATCH_TV_SECOND_SCREEN_ENTRY",
                        "THINGS_TO_WATCH_VOD_SECOND_SCREEN_ENTRY",
                        "THIRD_PARTY_LOCATION_NOTICE",
                        "THIRD_PARTY_OPT_IN",
                        "TRENDING_VIDEOS",
                        "TRENDING_VIDEOS_LIST",
                        "TRAVEL_ASSISTANT",
                        "TRAVEL_ARTICLE",
                        "TRAVEL_SUGGESTED_ITINERARY",
                        "TRIP_ITINERARY",
                        "TRIP_ITINERARY_CAR_RENTAL_RESERVATION",
                        "TRIP_ITINERARY_EVENT_RESERVATION",
                        "TRIP_ITINERARY_FLIGHT_RESERVATION",
                        "TRIP_ITINERARY_HOTEL_RESERVATION",
                        "TRIP_ITINERARY_RESTAURANT_RESERVATION",
                        "TRIP_ITINERARY_TRANSPORTATION_RESERVATION",
                        "TWEET",
                        "ULYSSES",
                        "ULYSSES_LIST",
                        "ULYSSES_SECOND_SCREEN",
                        "ULYSSES_APP_CAROUSEL",
                        "UPCOMING_TURNDOWN_IOS_DOWNLOAD_ASSISTANT_PROMO",
                        "UPCOMING_TURNDOWN_AGSA_UPGRADE_REQUIRED_PROMO",
                        "UPCOMING_TURNDOWN_IOS_ASSISTANT_UNAVAILABLE_PROMO",
                        "UPCOMING_TURNDOWN_AGSA_ASSISTANT_UNAVAILABLE_PROMO",
                        "VEHICLE_PARKING_LOCATION_BROWSE_LATEST",
                        "VEHICLE_PARKING_LOCATION_BROWSE_PREVIOUS",
                        "VIDYA_ONBOARDING",
                        "VISTA_STORY",
                        "VISTAAR_ARTICLE",
                        "VISTA_HERO_STORY",
                        "VISUAL_DICTIONARY_TERMINAL_MAP",
                        "VISUAL_DICTIONARY_SEATING_CHART",
                        "POPULAR_PLACE_ALONG_ROUTE",
                        "POPULAR_PLACE_ALONG_ROUTE_LIST",
                        "WEATHER_HEADLESS_NOTIFICATION",
                        "WEATHER_ENTRY_IN_LIST",
                        "WEBKICK_INTEREST_UPDATE_LIST",
                        "WEBKICK_STORIES_SECONDARY_PAGE_LURE",
                        "WEBKICK_STORIES_TO_READ_LIST",
                        "WEBKICK_STORY_GENERAL",
                        "WEBKICK_STORY_MID_PERSONALIZED_UNJUSTIFIED",
                        "WEBKICK_STORY_MID_PERSONALIZED_JUSTIFIED",
                        "WEBKICK_STORY_MID_PERSONALIZED_JUSTIFIED_PROMINENT",
                        "WEBKICK_STORY_LOCAL_PERSONALIZED",
                        "WEBKICK_STORY_LOCAL_UNPERSONALIZED",
                        "LOCAL_ENGAGING",
                        "WEBKICK_SWELL_STORY",
                        "WELCOME_FOR_EXISTING_USERS",
                        "WINTER_OLYMPIC_EVENT",
                        "WINTER_OLYMPIC_EVENT_LIST",
                        "ZAGAT_REVIEW",
                        "GOG_CAMEOS",
                        "GOG_POSTS",
                        "THIRD_PARTY_20221",
                        "THIRD_PARTY_20222",
                        "THIRD_PARTY_20223",
                        "THIRD_PARTY_20224",
                        "THIRD_PARTY_20225",
                        "THIRD_PARTY_20226",
                        "THIRD_PARTY_20227",
                        "THIRD_PARTY_20228",
                        "THIRD_PARTY_20229",
                        "THIRD_PARTY_20230",
                        "THIRD_PARTY_20231",
                        "THIRD_PARTY_20232",
                        "THIRD_PARTY_20233",
                        "THIRD_PARTY_20234",
                        "THIRD_PARTY_20235",
                        "THIRD_PARTY_20236",
                        "THIRD_PARTY_20237",
                        "THIRD_PARTY_20238",
                        "THIRD_PARTY_20239",
                        "THIRD_PARTY_20240",
                        "THIRD_PARTY_20241",
                        "THIRD_PARTY_20242",
                        "THIRD_PARTY_20243",
                        "THIRD_PARTY_20244",
                        "THIRD_PARTY_20245",
                        "THIRD_PARTY_20246",
                        "THIRD_PARTY_20247",
                        "THIRD_PARTY_20248",
                        "THIRD_PARTY_20249",
                        "THIRD_PARTY_20250",
                        "THIRD_PARTY_20251",
                        "THIRD_PARTY_20252",
                        "THIRD_PARTY_20253",
                        "THIRD_PARTY_20254",
                        "THIRD_PARTY_20255",
                        "THIRD_PARTY_20256",
                        "THIRD_PARTY_20257",
                        "THIRD_PARTY_20258",
                        "THIRD_PARTY_20259",
                        "THIRD_PARTY_20260",
                        "THIRD_PARTY_20261",
                        "THIRD_PARTY_20262",
                        "THIRD_PARTY_20263",
                        "THIRD_PARTY_20264",
                        "THIRD_PARTY_20265",
                        "THIRD_PARTY_20266",
                        "THIRD_PARTY_20267",
                        "THIRD_PARTY_20268",
                        "THIRD_PARTY_20269",
                        "THIRD_PARTY_20270",
                        "THIRD_PARTY_7NET",
                        "THIRD_PARTY_ABC_NEWS",
                        "THIRD_PARTY_ACCUWEATHER",
                        "THIRD_PARTY_AIRBNB",
                        "THIRD_PARTY_ALIEXPRESS",
                        "THIRD_PARTY_ALLRECIPES",
                        "THIRD_PARTY_AMEBA",
                        "THIRD_PARTY_ANYDO",
                        "THIRD_PARTY_AUDI",
                        "THIRD_PARTY_AUTOSCOUT24",
                        "THIRD_PARTY_AVIASALES",
                        "THIRD_PARTY_ARGUS",
                        "THIRD_PARTY_BANDSINTOWN",
                        "THIRD_PARTY_BHARATHMATRIMONY",
                        "THIRD_PARTY_BELLY",
                        "THIRD_PARTY_BH",
                        "THIRD_PARTY_BLABLACAR",
                        "THIRD_PARTY_BMW",
                        "THIRD_PARTY_BOOKMYSHOW",
                        "THIRD_PARTY_BUSUU",
                        "THIRD_PARTY_CABIFY",
                        "THIRD_PARTY_CARDEKHO",
                        "THIRD_PARTY_CARDMAKER",
                        "THIRD_PARTY_CARWALE",
                        "THIRD_PARTY_CALORIE_COUNTER",
                        "THIRD_PARTY_CGV",
                        "THIRD_PARTY_CHASE",
                        "THIRD_PARTY_CHEFKOCH",
                        "THIRD_PARTY_CIFRA_CLUB",
                        "THIRD_PARTY_CINE",
                        "THIRD_PARTY_CINEPOLIS",
                        "THIRD_PARTY_CIRCA",
                        "THIRD_PARTY_CLEANMASTER",
                        "THIRD_PARTY_CLEARTRIP",
                        "THIRD_PARTY_CNN",
                        "THIRD_PARTY_COINBASE",
                        "THIRD_PARTY_COMMONFLOOR",
                        "THIRD_PARTY_COOKPAD",
                        "THIRD_PARTY_COOKBOOK",
                        "THIRD_PARTY_COURSERA",
                        "THIRD_PARTY_CRICBUZZ",
                        "THIRD_PARTY_DANIME",
                        "THIRD_PARTY_DEEZER_MUSIC",
                        "THIRD_PARTY_DELIVERY_HERO",
                        "THIRD_PARTY_DIETA_E_SAUDE",
                        "THIRD_PARTY_DOMAIN",
                        "THIRD_PARTY_DUBSMASH",
                        "THIRD_PARTY_DUOLINGO",
                        "THIRD_PARTY_EASY_TAXI",
                        "THIRD_PARTY_EAT24",
                        "THIRD_PARTY_EBAY",
                        "THIRD_PARTY_ECONOMIC_TIMES",
                        "THIRD_PARTY_ECONOMIST",
                        "THIRD_PARTY_ESPN",
                        "THIRD_PARTY_ESPNCRICINFO",
                        "THIRD_PARTY_EXTERNAL_TESTING",
                        "THIRD_PARTY_EYEEM",
                        "THIRD_PARTY_FEEDLY",
                        "THIRD_PARTY_FINANZEN100",
                        "THIRD_PARTY_FITBIT",
                        "THIRD_PARTY_FIVERR",
                        "THIRD_PARTY_FLEA_MARKET",
                        "THIRD_PARTY_FLIXSTER",
                        "THIRD_PARTY_FOCUS_ONLINE",
                        "THIRD_PARTY_FOODPANDA",
                        "THIRD_PARTY_FORD",
                        "THIRD_PARTY_FORZA_SOCCER",
                        "THIRD_PARTY_FOTMOB",
                        "THIRD_PARTY_FREECHARGE",
                        "THIRD_PARTY_GAANA",
                        "THIRD_PARTY_GETTAXI",
                        "THIRD_PARTY_GISMETEO",
                        "THIRD_PARTY_GGUIDE",
                        "THIRD_PARTY_GLOW",
                        "THIRD_PARTY_GOOGLE",
                        "THIRD_PARTY_GOOGLE_INTERNAL_SHOEWARNING",
                        "THIRD_PARTY_GOOGLE_EXPERIMENTS",
                        "THIRD_PARTY_GOOGLE_EXPRESS",
                        "THIRD_PARTY_GOOGLE_PLAY_MUSIC",
                        "THIRD_PARTY_GOOGLE_SEARCH",
                        "THIRD_PARTY_GOURMET_NAVIGATOR",
                        "THIRD_PARTY_GRABTAXI",
                        "THIRD_PARTY_GROUPON",
                        "THIRD_PARTY_GUARDIAN",
                        "THIRD_PARTY_HAILO",
                        "THIRD_PARTY_HEALTHIFYME",
                        "THIRD_PARTY_HELLOFOOD",
                        "THIRD_PARTY_HOMEAWAY",
                        "THIRD_PARTY_HOOTSUITE",
                        "THIRD_PARTY_HOT_PEPPER_BEAUTY",
                        "THIRD_PARTY_HOT_PEPPER_GOURMET",
                        "THIRD_PARTY_HOTELTONIGHT",
                        "THIRD_PARTY_HOTELS_COM",
                        "THIRD_PARTY_HOTSTAR",
                        "THIRD_PARTY_HOUSING",
                        "THIRD_PARTY_HUNGAMA",
                        "THIRD_PARTY_ICICI",
                        "THIRD_PARTY_IHEARTRADIO",
                        "THIRD_PARTY_INMUEBLES_24",
                        "THIRD_PARTY_JOB_SEARCH",
                        "THIRD_PARTY_INSTACART",
                        "THIRD_PARTY_INSTAGRAM",
                        "THIRD_PARTY_INTEGRATION_TEST",
                        "THIRD_PARTY_INTERNAL_TEST",
                        "THIRD_PARTY_JABONG",
                        "THIRD_PARTY_JALAN",
                        "THIRD_PARTY_KAYAK",
                        "THIRD_PARTY_KOMOOT",
                        "THIRD_PARTY_KOMPAS",
                        "THIRD_PARTY_KOTAK_BANK",
                        "THIRD_PARTY_LE_FIGARO",
                        "THIRD_PARTY_LETRAS",
                        "THIRD_PARTY_LIEFERHELD",
                        "THIRD_PARTY_LIFE360",
                        "THIRD_PARTY_LIFESUM",
                        "THIRD_PARTY_LINCOLN",
                        "THIRD_PARTY_LOCAL_ADS",
                        "THIRD_PARTY_LOVECYCLES",
                        "THIRD_PARTY_LUMOSITY",
                        "THIRD_PARTY_LUNA_LUNA_LITE",
                        "THIRD_PARTY_LYFT",
                        "THIRD_PARTY_MAKEMYTRIP",
                        "THIRD_PARTY_MARMITON",
                        "THIRD_PARTY_MERCARI",
                        "THIRD_PARTY_MERU_CABS",
                        "THIRD_PARTY_MICOACH",
                        "THIRD_PARTY_M_INDICATOR_MUMBAI",
                        "THIRD_PARTY_MINT",
                        "THIRD_PARTY_MOBIKWIK",
                        "THIRD_PARTY_MOBILE_DE",
                        "THIRD_PARTY_MUFG",
                        "THIRD_PARTY_MUSIXMATCH",
                        "THIRD_PARTY_MUSLIM_PRO",
                        "THIRD_PARTY_MYFOURCHETTE",
                        "THIRD_PARTY_MYNTRA",
                        "THIRD_PARTY_MYTAXI",
                        "THIRD_PARTY_NAVITIME",
                        "THIRD_PARTY_NDTV",
                        "THIRD_PARTY_NEWS_REPUBLIC",
                        "THIRD_PARTY_NEXGTV",
                        "THIRD_PARTY_NICONICO",
                        "THIRD_PARTY_NINETY_NINE_TAXIS",
                        "THIRD_PARTY_NOW_API_ENG_INTERNAL",
                        "THIRD_PARTY_NOW_API_SUPPORT_TEST_INTERNAL",
                        "THIRD_PARTY_NUBANK",
                        "THIRD_PARTY_OLA_CABS",
                        "THIRD_PARTY_ONSTAR",
                        "THIRD_PARTY_ONEFOOTBALL",
                        "THIRD_PARTY_OPENTABLE",
                        "THIRD_PARTY_PANDORA",
                        "THIRD_PARTY_PAYPAL",
                        "THIRD_PARTY_PAYTM",
                        "THIRD_PARTY_PAYTM_WALLET",
                        "THIRD_PARTY_PEDIDOSYA",
                        "THIRD_PARTY_PINTEREST",
                        "THIRD_PARTY_PROJECT_FI",
                        "THIRD_PARTY_QUIKR",
                        "THIRD_PARTY_REALESTATE",
                        "THIRD_PARTY_REALTORCOM",
                        "THIRD_PARTY_REDBUS",
                        "THIRD_PARTY_REDFIN",
                        "THIRD_PARTY_RILA",
                        "THIRD_PARTY_RUNKEEPER",
                        "THIRD_PARTY_RUNTASTIC",
                        "THIRD_PARTY_RUNTASTIC_ME",
                        "THIRD_PARTY_SAAVN",
                        "THIRD_PARTY_SEATGEEK",
                        "THIRD_PARTY_SEVEN_ELEVEN",
                        "THIRD_PARTY_SERIE_A_TIM",
                        "THIRD_PARTY_SHAADI",
                        "THIRD_PARTY_SHAZAM",
                        "THIRD_PARTY_SHOPCLUES",
                        "THIRD_PARTY_SHUFOO",
                        "THIRD_PARTY_SIDECAR",
                        "THIRD_PARTY_SKYALERT",
                        "THIRD_PARTY_SKYSCANNER",
                        "THIRD_PARTY_SLACKER_RADIO",
                        "THIRD_PARTY_SLEEP_AS_ANDROID",
                        "THIRD_PARTY_SMARTNEWS",
                        "THIRD_PARTY_SNAPCHAT",
                        "THIRD_PARTY_SNAPDEAL",
                        "THIRD_PARTY_SONGZA",
                        "THIRD_PARTY_SOUNDCLOUD",
                        "THIRD_PARTY_SOUNDHOUND",
                        "THIRD_PARTY_SPOTIFY",
                        "THIRD_PARTY_STARBUCKS",
                        "THIRD_PARTY_STAR_SPORTS",
                        "THIRD_PARTY_STRAVA",
                        "THIRD_PARTY_SUUMO",
                        "THIRD_PARTY_TAPPSI",
                        "THIRD_PARTY_TARGET",
                        "THIRD_PARTY_TELE_LOISIRS",
                        "THIRD_PARTY_TODOIST",
                        "THIRD_PARTY_TOWNWORK",
                        "THIRD_PARTY_TRIPADVISOR",
                        "THIRD_PARTY_TRULIA",
                        "THIRD_PARTY_TUNEIN",
                        "THIRD_PARTY_TVSPIELFILM",
                        "THIRD_PARTY_TWITTER",
                        "THIRD_PARTY_UBER",
                        "THIRD_PARTY_UP",
                        "THIRD_PARTY_VIVINO",
                        "THIRD_PARTY_VK",
                        "THIRD_PARTY_WALGREENS",
                        "THIRD_PARTY_WATTPAD",
                        "THIRD_PARTY_WAZE",
                        "THIRD_PARTY_WEATHER_14_DAYS",
                        "THIRD_PARTY_WEATHERNEWS",
                        "THIRD_PARTY_WEIGHT_WATCHERS",
                        "THIRD_PARTY_WINK",
                        "THIRD_PARTY_WUNDERLIST",
                        "THIRD_PARTY_WYNK",
                        "THIRD_PARTY_YAHOO_AUCTIONS",
                        "THIRD_PARTY_YAHOO_JAPAN",
                        "THIRD_PARTY_YAHOO_TRANSIT",
                        "THIRD_PARTY_YOUTUBE",
                        "THIRD_PARTY_YUPPTV",
                        "THIRD_PARTY_ZILLOW",
                        "THIRD_PARTY_ZIPCAR",
                        "THIRD_PARTY_ZOMATO",
                        "THIRD_PARTY_UNKNOWN",
                        "INTERNAL_API_UNKNOWN",
                        "ADSENSE_DEMO",
                        "ADWORDSAPI_DEMO",
                        "AIR_QUALITY_DEMO",
                        "ARTWORKS_NEARBY_DEMO",
                        "BILL_REMINDERS_DEMO",
                        "CALENDAR_EVENT_DOCS_DEMO",
                        "CIVICS_DEMO",
                        "CIVICS_LOCAL_PUBLIC_MEETINGS",
                        "CIVICS_MUNICIPAL_CIVIC_ALERTS",
                        "DASHER_ASSISTANT",
                        "ELECTIONS_CANDIDATE_WITHDRAWAL",
                        "ELECTIONS_DELEGATE_SUMMARY",
                        "ELECTIONS_DEMO",
                        "ELECTIONS_EARLY_VOTE",
                        "ELECTIONS_MORE_INFO_LURE",
                        "ELECTIONS_POLLING_LOCATION",
                        "ELECTIONS_REGISTRATION",
                        "ELECTIONS_REPRESENTATIVE",
                        "ELECTIONS_RESULTS",
                        "ELECTIONS_SCHEDULE",
                        "ELECTIONS_VOTING_REMINDER",
                        "ELECTIONS_WINNER_ANNOUNCEMENT",
                        "ENTERPRISE_NOW_AGENDA_CARD_DEMO",
                        "ENTERPRISE_NOW_CONFLICTS_WHILE_TRAVELING_DEMO",
                        "ENTERPRISE_NOW_MEETING_CONFLICTS_DEMO",
                        "ENTERPRISE_NOW_TRENDING_CONTENTS_DEMO",
                        "ENTERPRISE_POPULAR_DOCUMENTS_DEMO",
                        "ENTERPRISE_CUSTOMERS_NEWS_DEMO",
                        "FLIGHT_PRICE_DEMO",
                        "GBUS",
                        "GOOGLE_ALERTS_DEMO",
                        "GOOGLE_CAFE_MENUS",
                        "HOTEL_PRICE",
                        "HOT_TRENDS_FOR_TRANSIT_COMMUTERS_DEMO",
                        "INFERRED_EVENTS_DEMO",
                        "JAPAN_AUTUMN_LEAVES",
                        "JAPAN_FIREWORKS",
                        "MOMA",
                        "MOON_PHASE",
                        "NONPROFIT_PROJECTS",
                        "PLAY_NEWSSTAND",
                        "POPULAR_MEME",
                        "SEARCH_TRENDS",
                        "SELDON_TOP_QUERIES_DEMO",
                        "SHOPPING_REMINDERS_DEMO",
                        "SOCIAL_SERENDIPITY_DISCOVERY",
                        "SOCIAL_SERENDIPITY_NEARBY",
                        "SPOTS_BLE_BEACON_DEMO",
                        "TOKYO_DEMO",
                        "TRAVEL_DEMO",
                        "TRAVEL_REACCOMMODATION",
                        "TV_RECOMMENDATIONS_DEMO",
                        "UPCOMING_HOLIDAYS",
                        "VOLUNTEER_OPPORTUNITIES",
                        "YOUTUBE_PAID_CONTENT_DEMO",
                        "CARDMAKER_00",
                        "CARDMAKER_01",
                        "CARDMAKER_02",
                        "CARDMAKER_03",
                        "CARDMAKER_04",
                        "CARDMAKER_05",
                        "CARDMAKER_06",
                        "CARDMAKER_07",
                        "CARDMAKER_08",
                        "CARDMAKER_09",
                        "CARDMAKER",
                        "CARDMAKER_DOGFOOD",
                        "CARDMAKER_SOS_ALERT",
                        "UNKNOWN_STACK",
                        "FREQUENT_PLACE_STACK",
                        "CALENDAR_STACK",
                        "NEWS_STACK",
                        "WEATHER_STACK",
                        "TRANSIT_STATION_STACK",
                        "PACKAGE_TRACKING_STACK",
                        "BIRTHDAY_CARD_STACK",
                        "CAR_RENTAL_STACK",
                        "HOTEL_RESTAURANT_STACK",
                        "DEPRECATED_LOCAL_PROMOTION",
                        "DEPRECATED_PERTINENT_QUESTION",
                        "DEPRECATED_LOBBY_AGENDA",
                        "DEPRECATED_LOBBY_CALENDAR_LURE",
                        "DEPRECATED_LOBBY_COMMUTE",
                        "DEPRECATED_LOBBY_EDIT_PLACES_LURE",
                        "DEPRECATED_LOBBY_EURO",
                        "DEPRECATED_LOBBY_NBA",
                        "DEPRECATED_LOBBY_STORIES",
                        "DEPRECATED_ONLINE_PRODUCT_PROMOTION",
                        "DEPRECATED_ONLINE_PRODUCT_PROMOTION_LIST",
                        "DEPRECATED_SEARCH_TRENDS_V2",
                        "DEPRECATED_SEARCH_TRENDS_V2_LIST",
                        "DEPRECATED_WEATHER_HOURLY_CAROUSEL",
                        "DEPRECATED_WEATHER_HOURLY_CAROUSEL_ITEM",
                        "DEPRECATED_AT_A_PLACE_UNKNOWN",
                        "DEPRECATED_AT_A_PLACE_AIRPORT",
                        "DEPRECATED_AT_A_PLACE_AMUSEMENT_PARK",
                        "DEPRECATED_AT_A_PLACE_FASTFOOD",
                        "DEPRECATED_AT_A_PLACE_LANDMARK",
                        "DEPRECATED_AT_A_PLACE_MALL",
                        "DEPRECATED_AT_A_PLACE_MUSEUM",
                        "DEPRECATED_AT_A_PLACE_RESTAURANT",
                        "DEPRECATED_AT_A_PLACE_SHOPPING",
                        "DEPRECATED_AT_A_PLACE_STADIUM",
                        "DEPRECATED_AT_A_PLACE_TRANSIT_STATION",
                        "DEPRECATED_AT_A_PLACE_HOTEL",
                        "DEPRECATED_IN_STORE_PROMOTION",
                        "DEPRECATED_IN_STORE_PROMOTION_LIST",
                        "DEPRECATED_POPULAR_DEALS_CAROUSEL",
                        "DEPRECATED_POPULAR_DEALS_CAROUSEL_ITEM",
                        "DEPRECATED_SHOPPING_TASK_CAROUSEL",
                        "DEPRECATED_SHOPPING_TASK_CAROUSEL_ITEM",
                        "DEPRECATED_GENERIC_POST_PURCHASE",
                        "DEPRECATED_SHOPPING_RECOMMENDATIONS",
                        "DEPRECATED_SHOPPING_RECOMMENDATIONS_LIST",
                        "DEPRECATED_VISUALLY_SIMILAR_PRODUCTS",
                        "DEPRECATED_VISUALLY_SIMILAR_PRODUCTS_ITEM",
                        "DEPRECATED_TOP_SELLING_CAROUSEL",
                        "DEPRECATED_TOP_SELLING_CAROUSEL_ITEM",
                        "DEPRECATED_LOBBY_SHOPPING",
                        "DEPRECATED_NBU_SPORT_AWARENESS"
                    ],
                    "enumDescriptions": [
                        "Every new card category need to be added to the list of entry_annotations.\nLINT.IfChange",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Lure to enter browse mode about an interest.",
                        "Lure to enter browse mode about a trip.",
                        "Lure to read articles from an author.",
                        "A single entry in the Browse Mode Author lure.",
                        "A single URL recommendation in browse mode.",
                        "A list of entity recommendations in browse mode.",
                        "A single entity recommendation for the list in browse mode.",
                        "A list of video recommendations in browse mode.",
                        "A single video recommendation for the list in browse mode.",
                        "Lure to enter browse mode about things to read.",
                        "A single entry in the Browse Mode reading lure.",
                        "Things to watch card.",
                        "",
                        "",
                        "A TV things to watch recommendation.",
                        "A VOD things to watch recommendation.",
                        "A card showing a single suggested application for the user.",
                        "List card containing multiple app suggestions.",
                        "A card showing personalized news for a user.",
                        "A card showing a single suggested contact (call/sms) for the user.",
                        "List card containing multiple contact suggestions.",
                        "Detected car parking location.",
                        "List of detected car parking location cards.",
                        "List of related music entries.",
                        "Individual transportation cards.",
                        "List of transportation cards.",
                        "Traffic incidents a user is likely to encounter.",
                        "Individual bill card.",
                        "List of bill cards.",
                        "Entry for a product that the user is interested in.",
                        "Entry for list of products that the user is interested in.",
                        "A card for the store the user is in.",
                        "A card that shows an indoor map for a location.",
                        "A card for a product with price drop that a user has visited online.",
                        "A card with a list of Web sites relating to a search spike triggered by\nthe TV program the user is watching.",
                        "A single Web site reference in the search spike card.",
                        "A Tv knowledge card that comes from Towerbridge, based on search queries.",
                        "Special group entry used to display suggested apps and contacts in the\nhotseat.",
                        "The app suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "The contact suggestion entry for HOTSEAT_SUGGESTION_LIST.",
                        "The mall directory card.",
                        "A list of Field Trip cards.",
                        "A card used to display interesting nearby content from Field Trip.",
                        "A cards containing photos from a friend at a location.",
                        "",
                        "",
                        "Card which brings the user to a Google Now feedback survey.",
                        "Card for information on whatever is showing in the Chromecast ambient\nstate.  Can be a link to a news story, a G+ photo with a link to the\nalbum, etc.",
                        "Card which shows the user their battery status and allows them to toggle\npower saving mode.",
                        "Card displaying fitness data.",
                        "Card displaying the user's agenda.",
                        "Card displaying a gas station along a route.",
                        "List of AlongRouteEntry.",
                        "List lure to enter browse mode of Things To Do.",
                        "A list of flights with prices and price changes.",
                        "An individual flight entry from the list above.",
                        "G+ stories card",
                        "Synthetic card type for a feature highlight view, not a card per-se.\nRepresents the promotion which is not defined by an entry.",
                        "Card describing 3rd-party cards from apps.",
                        "Card describing 3rd-party cards from apps and web sites.",
                        "Card describing 3rd-party cards for everyone.",
                        "Card promoting the hotword.",
                        "Tutorial card for customizing your Google Now experience.",
                        "Tutorial card for how to change card preferences.",
                        "Tutorial card for how to swipe the cards away.",
                        "Tutorial card for swiping to customize.",
                        "Tutorial card for how to pull down the top bar to search.",
                        "Tutorial card for welcoming users to Now.",
                        "Tutorial card for explaining NoT to new users.",
                        "Non-personalized stream warm-welcome card.",
                        "Tutorial card for explaining NoT to new users.",
                        "Warm welcome card for the split stream dashboard.",
                        "Card to show when the split stream dashboard is empty.",
                        "Synthetic card type for a feature highlight view, not a card per-se.\nRepresents the bottombar promotion which is not defined by an entry.",
                        "Tip card describing some of the benefits of having a linked calendar\naccount.",
                        "Tip card describing some benefits from having a linked gmail account.",
                        "Entry containing metadata about a lotic cluster (e.g. title, color).",
                        "Entry containing a list of items to show in a lotic carousel.",
                        "Entry containing a list of apps to show in the AppLauncher",
                        "Entry containing a list of lotic small UI modules.",
                        "Entry type for travel generic Taba content card.",
                        "A card showing a list of contextually relevant apps (go/now-ulysses).",
                        "A card showing a user's local contact",
                        "Gmail location of interest card.",
                        "A card showing a lure for at a place (AKA at a context) experience.\nFor our v1 UI this is used by the one card that's both the lure and\nalso has the notification. For our v2 UI (main view preview) this\nis used for our \"title\" card that has the notification (but is not\na lure).",
                        "The \"view more\" lure for the v2 at-a-context experience.",
                        "To be used for ataplace headless notification to corresponding place page\nin serp.",
                        "",
                        "",
                        "Entry type for a card built from a Hallmark Component.",
                        "Single type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Button in profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Turn off all notification button in profile page in closet redesign for\nAGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Reset all preferences button in profile page in closet redesign for\nAGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Multi-type profile page in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one interest: go/now-closet-proto.",
                        "Cards and notifications controls in closet redesign for AGSA 5.10/5.11:\nhttps://sites.google.com/a/google.com/agsa-closet/specs-deliverables",
                        "Closet entity which contains data for one question: go/now-closet-proto.",
                        "Closet template group which may contains template row and headers/footers,\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Closet now settings for enabling Now and notifications, also providing an\nentry for clearing all preference.\nthis is introduced in closet redesign for AGSA 6.6: go/now-closet-proto.",
                        "Auto-activated welcome card",
                        "Lobby card, see go/lobby.",
                        "Synthetic entry type for client-generated promotional or tutorial\ncards.  These pseudo-cards are created on the client and are not\nused by the server.",
                        "Sign in lure card for a GSA signed out user, see b/36367579.",
                        "Search awareness cards (go/search-aware).",
                        "Quoted text from news stories.",
                        "Questions related to the topic mids of a cluster.",
                        "What-is or Who-is questions related to the topic mids of a cluster.",
                        "Movie trailer related to the topic mids of a cluster.",
                        "Story provided by Explore-on-Content/Topic-Feed Service.",
                        "Contextual public health notifications for CDC alerted diseases.",
                        "Hide inferred language card for bilingual feed.",
                        "",
                        "",
                        "Tray card that brings user to the News Full Coverage experience.",
                        "",
                        "Twitter content in Discover.",
                        "Quoted text from news stories.",
                        "Card category overrides. Must use tag numbers between [5000, 10000).\n\nThe card categories in this section override the EntryType, and\nmust be set explicitly in the frontend EntrySource\n(see above for details).\n\nPlease keep this list sorted alphabetically.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Terminal map card categories.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Search > Search Platforms > AGSA Predictive (Now) > Cassini",
                        "Search > Search Platforms > AGSA Predictive (Now) > Cassini",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "go/now-notifications-codelab",
                        "",
                        "",
                        "Memory cards in cooking experience secondary page.",
                        "Memory carousels in cooking experience secondary page.",
                        "Memory list card in cooking experience secondary page.",
                        "Recipe cards in cooking experience second page.",
                        "Recipe carousels in cooking experience second page.\nA card to serve as a lure to secondary page for Cooking routine.",
                        "Recipe list card in cooking experience second page.",
                        "A card to serve as a lure to secondary page for Cooking routine.",
                        "Cooking Helper Toolbox cards in cooking experience secondary page.",
                        "Cooking Helper Toolbox carousels in cooking experience secondary page.",
                        "Cooking Helper Toolbox list card in cooking experience secondary page.",
                        "",
                        "",
                        "",
                        "",
                        "Critic reviews card.",
                        "One review item in critic reviews card.",
                        "DeepTrendsFaBLE card for users.",
                        "DeepTrends card for users.",
                        "A card to serve as a lure to secondary page for Cooking routine.\nA card with a list of predicted locations along the train/bus line route\nuser is currently riding on.\nCurrently disabled because the backend, TripMatching API, was not launched.",
                        "",
                        "",
                        "",
                        "A dummy card category used for tests.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Fun facts card categories.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Superceded by IN_STORE.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "PNR status card for India National Railways.",
                        "",
                        "",
                        "",
                        "Events extracted from unstructured emails.",
                        "Events extracted from structured emails from low confidence sources.",
                        "Events extracted from chats.",
                        "",
                        "Reminders extracted from emails.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card categories for the interest picker. go/interest-picker\nInterest picker items.",
                        "",
                        "",
                        "Interest picker utility components.",
                        "",
                        "",
                        "",
                        "Interest picker carousels.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Categories for interest updates (KENow).",
                        "",
                        "",
                        "",
                        "Interest updates broken down to individual verticals.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Cards to serve the knowledge panel with custom facts.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Liveweb personalized story card.",
                        "Card categories for the Lobby card, see go/lobby.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Moonstone quasi-pseronalized story for users.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "An entry with a product that a user has visited online and is\navailable in the nearby store.",
                        "A card with a list of products that a user has visited online and are\navailable in the nearby stores.",
                        "A card to serve as a lure to secondary page for News Experience.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Shows the user's frequent flyer number at the airport.",
                        "Shows keep-note containing relevant information at-a-place. For example,\nshows grocery list when in a grocery-store.",
                        "Shows personalized local recommendations by go/local-stream-prd.",
                        "Shows customer loyalty numbers such as REI membership number at the store.",
                        "PERSONAL_ANSWERS_EMAIL_SNIPPET and PERSONAL_RECOMMENDATIONS_EMAIL_SNIPPET\nwill be in the same PERSONAL_ANSWERS_EMAIL_SNIPPET_LIST container card.\nBut the data source of them are different. We will use different category\nto track the metrics.",
                        "",
                        "",
                        "Popular style cards for a shopping task",
                        "",
                        "",
                        "New to you updates card categories (vertical efforts).",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "New to you updates card categories (horizontal efforts).",
                        "",
                        "",
                        "",
                        "Different news categories.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "This should never happen.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "This should never happen.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card categories for different types of stream carousels. When adding new\ncard categories for new carousel types, please also add them to the\nconstant `STREAM_CAROUSEL_CARD_CATEGORIES` in WebkickStoriesModule:\nj/c/g/geo/sidekick/frontend/cards/browsemode/WebkickStoriesModule.java",
                        "",
                        "",
                        "Card categories for different types of stream stories. When adding new\ncard categories for new story types, please also add them to the\nconstant `CAROUSEL_TYPE_TO_STORY_CARD_CATEGORY` in WebkickStoriesModule:\nj/c/g/geo/sidekick/frontend/cards/browsemode/WebkickStoriesModule.java",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "TRAVEL_SUGGESTED_ITINERARY is a proposed day plan like \"A day full of\nhistoric downtown sights\".",
                        "TRIP_ITINERARY is a logistical trip schedule based on parsed reservations\nfrom Gmail and other input.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Visual Dictionary card categories.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "welcome card for auto-activated existing users.",
                        "",
                        "",
                        "",
                        "Card categories for Get-on-Google cards (go/gog).",
                        "LINT.ThenChange(//depot/google3/googledata/now/entry_annotations/entry_annotations.textpb)",
                        "Reserved third party card categories for automatic whitelisting.\nPartner self-whitelisting is independent of the card category creations;\nhowever, a partner needs a corresponding card category to serve its card\nin the frontend, and to be processed in logging and Rasta. After a partner\nis fully launched, its card category may be changed to a meaningful name,\nto be shown in the Rasta UI clearly.\nTODO(fanyp) after partner ID is used in Rasta to replace card category, we\nshall be able to fully remove the dependency of the card category for\nthird party partners and there is no need to do the reservation any more.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Foursquare",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "FlightStats",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "3rd-party API, unknown partner",
                        "Default value if API clients do not set the card_category.",
                        "Demo client for AdSense Demo Days 2013.",
                        "Demo API client for Ads Demo Days 2013 project.",
                        "Air quality now card demo.",
                        "Displays cards for nearby artworks.",
                        "Reminds users to pay their bills.",
                        "Content related to upcoming events",
                        "Demo of hyperlocal civic information cards.",
                        "Civic information cards with interesting topics from local public meetings.",
                        "Civic information cards showing local municipal alerts.",
                        "Dasher API client for enterprise usecases.",
                        "Election candidate withdrawal card.",
                        "Primary delegate summary card.",
                        "Demo of election related cards.",
                        "Elections cards related to early voting.",
                        "Lure for more info for ELECTION cluster.",
                        "Polling location cards.",
                        "Voter registration cards.",
                        "Cards related to newly elected reps.",
                        "Election results summary cards.",
                        "Upcoming election schedule card.",
                        "Election voting reminder cards.",
                        "Election winner announcement card.",
                        "Agenda card for enterprise users.",
                        "Conflicting events during a meeting card.",
                        "Conflicting events resolution card.",
                        "Trending contents card.",
                        "Popular documents from around the work card.",
                        "News about your customers card.",
                        "Flight price monitor.  go/flight-price-now",
                        "GBus Now API client for GBus shuttle real-time information.",
                        "Demo for Alerts integration with Now.",
                        "Displays menus for nearby Google cafes.",
                        "Delivers hotel price updates based on search history;",
                        "Search Trends card for fishfood.",
                        "Displays cards for events inferred from user's gmail.",
                        "Show nearby autumn leaves spot in Japan.",
                        "Show nearby fireworks happening in Japan.",
                        "Moma Now cards useful to Googlers in a mobile context.",
                        "Straw-man API client example, by the Google Now team.",
                        "Demo to connect people to nonprofit projects.",
                        "Play Newsstand recommendations",
                        "Popular meme image.",
                        "",
                        "Demo API client for Seldon showing top Google Search suggestions card.",
                        "Demo API client for Shopping Reminders for Shopping Demo Days.",
                        "aka SOCIAL_DISCOVERY G+ posts",
                        "aka SOCIAL_GBIZ_DEMO G+ posts",
                        "Show nearby Bluetooth LE beacon info.",
                        "Demo for things useful in Tokyo.",
                        "Travel demo API client for travel itineraries.",
                        "Travel reaccommodation API client.",
                        "Suggests shows or movies to watch.",
                        "Upcoming holidays now card.",
                        "Links people to volunteer opportunities.",
                        "Demo API client for YouTube Paid Content usecases.",
                        "Cardmaker card categories. Must use tags [60000, 61000).\n\nCardmaker categories. Because cardmaker cards are necessarily defined\non-the-fly, we reserve a block of categories for them so that we can\ndifferentiate them in metrics.\n\nCategories [60000, 60009] are deprecated. Please use CARDMAKER or\nCARDMAKER_DOGFOOD.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Use only the following cardmaker categories. Cards with the category\nCARDMAKER_DOGFOOD are not launched in prod and will have a dogfood icon.",
                        "",
                        "",
                        "Default value if we detect a stack of cards we do not identify.\nPotentially happens for internal API cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "////////////////////////////////////////////////////////////////////////\nDeprecated/unused card categories should be moved here and renamed with\nprefix DEPRECATED_.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "changeDetectionHash": {
                    "description": "A hash of properties that semantically distinguish the corresponding\ncontent. Two pieces of content sharing the same change_detection_hash and\ncontent_id may be treated as semantically equivalent.\n\nThis field may be appropriate to use if the content has many semantically\nrelevant fields (or a repetition thereof), where a change in any single one\nis enough to distinguish one piece of content from another.",
                    "format": "int64",
                    "type": "string"
                },
                "docIsPersonalized": {
                    "description": "For a document with broad topics (which has entity_signal of type\nDOCUMENT_HITS_CATEGORY) whether it is personalized or not (interest_level\nof matched entity is greater than 0.3). This is used for computing\nDiscoverUserState.",
                    "type": "boolean"
                },
                "isPaid": {
                    "description": "Boolean field to denote whether an entry contains paid content.",
                    "type": "boolean"
                },
                "mid": {
                    "description": "This may be used across multiple content domains and may have different\nmeanings in context. Please use this field with caution for that reason.\nAlso, the order should not be significant if multiple mids are provided.\nIf there is structure or hierarchy to mids related to an entity, we should\nuse new SemanticProperties that capture that structure instead of depending\non this field.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "notificationCategory": {
                    "enum": [
                        "REGULAR",
                        "ACCOUNT_NOTIFIER_NOTIF",
                        "AGSA_OPA_I18N_VERSION_GAP_NOTIF",
                        "AGSA_UPDATE_PROMO_NOTIF",
                        "AIR_QUALITY_NOTIF",
                        "AT_A_PLACE_LOCATION_NOTIF",
                        "BILL_PAY_NOTIF",
                        "BREAKING_NEWS_NOTIF",
                        "CIVICS_DEFAULT_NOTIF",
                        "CIVICS_ELECTION_RESULTS_NOTIF",
                        "CIVICS_VOTER_INFO_NOTIF",
                        "CODELAB_NOTIF",
                        "COMMUTE_GENERAL_NOTIF",
                        "COMMUTE_TRAFFIC_INCIDENT_NOTIF",
                        "COMMUTE_NOTIF",
                        "EVENT_CALENDAR_NOTIF",
                        "EVENT_ANDROID_CALENDAR_NOTIF",
                        "EVENT_CAR_RENTAL_NOTIF",
                        "EVENT_DEFAULT_NOTIF",
                        "EVENT_RESTAURANT_PLACE_NOTIF",
                        "EVENT_TICKET_CONCERT_NOTIF",
                        "EVENT_TICKET_DAY_BEFORE_NOTIF",
                        "EVENT_TICKET_IMMINENT_NOTIF",
                        "EVENT_TICKET_MOVIE_NOTIF",
                        "EVENTS_REMINDER_NOTIF",
                        "FINANCE_DAILY_RECAP_NOTIF",
                        "FINANCE_EOD_CHANGE_DELTA_NOTIF",
                        "FINANCE_INDEX_NOTIF",
                        "FINANCE_INFERRED_NOTIF",
                        "FINANCE_INTRADAY_NOTIF",
                        "FINANCE_IPO_DAY_OF_NOTIF",
                        "FLIGHT_BOARDING_PASS_BARCODE_NOTIF",
                        "FLIGHT_BOARDING_PASS_DAY_BEFORE_NOTIF",
                        "FLIGHT_BOARDING_PASS_IMMINENT_NOTIF",
                        "FLIGHT_PRICE_DROP_NOTIF",
                        "FLIGHT_PRICE_NDF_NOTIF",
                        "FLIGHT_STATUS_DEFAULT_NOTIF",
                        "FLIGHT_STATUS_DELAYED_CANCELLED_NOTIF",
                        "FLIGHT_STATUS_GATE_OR_TERMINAL_NOTIF",
                        "FLIGHT_STATUS_TIME_TO_LEAVE_NOTIF",
                        "FREQUENT_PLACE_COMMUTE_NOTIF",
                        "FREQUENT_PLACE_OTHER_NOTIF",
                        "JANATA_HANDSHAKE_NOTIF",
                        "JANATA_EDIT_CARD_FOLLOWUP_NOTIF",
                        "JANATA_POST_IMAGE_FOLLOWUP_NOTIF",
                        "HYPERLOCAL_LOCATION_NOTIF",
                        "INFERRED_REMINDER_DEFAULT_NOTIF",
                        "INTERNAL_API_DEFAULT_NOTIF",
                        "LAST_TRAIN_HOME_NOTIF",
                        "KE_NOW_AIR_QUALITY_DAILY_NOTIF",
                        "KE_NOW_AIR_QUALITY_CRITICAL_NOTIF",
                        "KE_NOW_ACTOR_TO_MOVIE_NOTIF",
                        "KE_NOW_CELEB_TO_TV_GUEST_APPEARANCE_NOTIF",
                        "KE_NOW_DIRECTOR_TO_MOVIE_NOTIF",
                        "KE_NOW_EXAM_NOTIF",
                        "KE_NOW_MOVIE_NOTIF",
                        "KE_NOW_MOVIE_TO_MOVIE_SEQUEL_NOTIF",
                        "KE_NOW_TV_SERIES_TO_FIRST_EPISODE_NOTIF",
                        "KE_NOW_TV_SERIES_TO_NEW_EPISODE_NOTIF",
                        "KE_NOW_ACTOR_TO_MOVIE_TRAILER_NOTIF",
                        "KE_NOW_DIRECTOR_TO_MOVIE_TRAILER_NOTIF",
                        "KE_NOW_MOVIE_TO_MOVIE_TRAILER_NOTIF",
                        "KE_NOW_TICKET_AVAILABILITY_NOTIF",
                        "KE_NOW_WEEKEND_SHOWTIMES_NOTIF",
                        "KE_NOW_VIDEO_GAME_NOTIF",
                        "KE_NOW_ARTIST_TO_ALBUM_NOTIF",
                        "KE_NOW_LOTTERY_NOTIF",
                        "KE_NOW_ATHLETE_TO_TEAM_NOTIF",
                        "KE_NOW_COACH_TO_TEAM_NOTIF",
                        "KE_NOW_TEAM_TO_ATHLETE_NOTIF",
                        "KE_NOW_TEAM_TO_COACH_NOTIF",
                        "KE_NOW_AUTHOR_TO_BOOK_NOTIF",
                        "KE_NOW_BOOK_TO_BOOK_NOTIF",
                        "KE_NOW_SEARCH_ENGAGEMENT_ASKJOE",
                        "KE_NOW_SEARCH_ENGAGEMENT_HIGHLIGHT",
                        "KE_NOW_STOCK_TO_TICKER_INTRADAY_NOTIF",
                        "KE_NOW_OLYMPICS_INTRO_NOTIF",
                        "KE_NOW_OLYMPICS_COUNTRY_MEDAL_WIN_NOTIF",
                        "KE_NOW_OLYMPICS_DAILY_FEATURED_EVENT_NOTIF",
                        "KE_NOW_OLYMPICS_DAILY_RECAP_NOTIF",
                        "KE_NOW_OLYMPICS_TOP_EVENT_HEADS_UP_NOTIF",
                        "KE_NOW_OLYMPICS_TOP_EVENT_SUMMARY_NOTIF",
                        "KE_NOW_OLYMPICS_MEDAL_EVENT_HEADS_UP_NOTIF",
                        "KE_NOW_AWARDS_CEREMONY_NOTIF",
                        "KE_NOW_EPHEMERAL_EVENT_NOTIF",
                        "KE_NOW_FILM_FESTIVAL_NOTIF",
                        "KE_NOW_MUSIC_FESTIVAL_NOTIF",
                        "KE_NOW_TOUR_DE_FRANCE_NOTIF",
                        "KE_NOW_MULTISPORT_EVENT_NOTIF",
                        "KE_NOW_HEALTH_POLLEN_COUNT_NOTIF",
                        "KE_NOW_ONEOFF_NOTIF",
                        "KE_NOW_DEFAULT_NOTIF",
                        "MERCHANT_NOTIF",
                        "MERCHANT_FIRST_POST_PROMPT_NOTIF",
                        "MERCHANT_HEALTH_CHECK_NOTIF",
                        "MERCHANT_LOCAL_POST_GOING_DARK_NOTIF",
                        "MERCHANT_LOCAL_POST_MILESTONE_NOTIF",
                        "MERCHANT_LOCAL_POST_REMINDER_NOTIF",
                        "MERCHANT_OWNER_REVIEW_NOTIF",
                        "MERCHANT_PHOTO_NOTIF",
                        "MERCHANT_REVIEW_NOTIF",
                        "MERCHANT_MONTHLY_PLACE_INSIGHTS_NOTIF",
                        "MERCHANT_SITE_MANAGER_ENGAGEMENT_NOTIF",
                        "MERCHANT_INFERRED_OUTREACH_NOTIF",
                        "MINDSEARCH_ANSWERS_NOTIF",
                        "MINDSEARCH_QUESTIONS_NOTIF",
                        "PACKAGE_TRACKING_NOTIF",
                        "PRICE_DROP_NOTIF",
                        "SHOPPING_SUBSCRIBED_PRICE_DROP_NOTIF",
                        "PUBLIC_ALERT_NOTIF",
                        "REMINDER_DEFAULT_NOTIF",
                        "SPORTS_OTHER_NOTIF",
                        "SPORTS_GAME_BASEBALL_NOTIF",
                        "SPORTS_GAME_BASKETBALL_NOTIF",
                        "SPORTS_GAME_CRICKET_NOTIF",
                        "SPORTS_GAME_AUSTRALIAN_FOOTBALL_NOTIF",
                        "SPORTS_GAME_FOOTBALL_NOTIF",
                        "SPORTS_GAME_HOCKEY_NOTIF",
                        "SPORTS_GAME_RUGBY_NOTIF",
                        "SPORTS_GAME_SOCCER_NOTIF",
                        "SPORTS_GAME_TENNIS_NOTIF",
                        "SPORTS_GAME_CRICKET_MILESTONE_NOTIF",
                        "SPORTS_VIDEO_HIGHLIGHTS_NOTIF",
                        "THIRD_PARTY_NOTIF",
                        "THIRD_PARTY_CARDMAKER_NOTIF",
                        "TIME_GAP_QUERY_SUBSCRIPTION_NOTIF",
                        "FORESIGHT_QUERY_SUBSCRIPTION_NOTIF",
                        "TIME_TO_LEAVE_NOTIF",
                        "TOP_STORY_NOTIF",
                        "TOPDECK_MORNING_GREETING",
                        "TRAFFIC_INCIDENT_NOTIF",
                        "TRANSPORTATION_TICKET_DAY_BEFORE_NOTIF",
                        "TRANSPORTATION_TICKET_IMMINENT_NOTIF",
                        "TRANSIT_STATION_INFORMATION_NOTIF",
                        "TRANSLATE_AWARENESS_NOTIF",
                        "TRAVEL_ASSISTANT_NOTIF",
                        "KE_NOW_UGC_PHOTO_NOTIF",
                        "UGC_THEATER_VISIT_NOTIF",
                        "UGC_PHOTO_EVENT_NOTIF",
                        "NBU_SPORT_AWARENESS_NOTIF",
                        "WEATHER_DEFAULT_NOTIF",
                        "WEATHER_HOURLY_SNOW_RAIN_NOTIF",
                        "WEATHER_NEXT_DAY_DEGREE_DELTA_NOTIF",
                        "WEATHER_NEXT_DAY_SNOW_RAIN_NOTIF",
                        "WEATHER_NEXT_DAY_FORECAST_NOTIF",
                        "WEATHER_TODAY_FORECAST_NOTIF",
                        "WEBKICK_EXPLICIT_INTEREST_NOTIF",
                        "WEBSITE_UPDATE_NOTIF",
                        "DEPRECATED_WHILE_YOU_WAIT_BOLLYWOOD_CARD_NOTIF",
                        "DOODLES_NOTIF",
                        "SEARCH_AWARENESS_NOTIF",
                        "FEED_SUMMARY_NOTIF",
                        "FEED_PROMO_MARKETING_NOTIF",
                        "VIDYA_ONBOARDING_NOTIF",
                        "PUBLIC_HEALTH_NOTIF",
                        "DUMMY_NOTIF",
                        "CRISIS_RESPONSE_SOS_NOTIF",
                        "UGC_LOCALIZATION_NOTIF",
                        "UGC_PLACE_QA_NOTIF",
                        "WORD_COACH_NOTIF",
                        "SEARCH_FEATURES_NOTIF",
                        "KE_NOW_MUSIC_SONG_NOTIF",
                        "SPORTS_AWARENESS_NOTIF",
                        "FINANCE_AWARENESS_NOTIF",
                        "TV_AWARENESS_NOTIF",
                        "BULLETIN_EVENTS_NOTIF",
                        "EMPLOY_SAVED_SEARCH_NOTIF",
                        "EMPLOY_APPLY_SIMILAR_JOBS_NOTIF",
                        "TRAVEL_PLANNING_TRIP_CREATE_NOTIF",
                        "TRAVEL_PLANNING_TRIP_UPDATE_NOTIF",
                        "TRAVEL_PLANNING_POTENTIAL_TRIP_NOTIF",
                        "EMPLOY_SAVED_JOBS_NOTIF",
                        "SEARCH_QUERY_RECOMMENDATION_NOTIF",
                        "SUBSCRIPTION_RECOMMENDATION_NOTIF"
                    ],
                    "enumDescriptions": [
                        "No special rules. A catchall bucket.",
                        "",
                        "Notification sent to older versions of AGSA in different i18n locales where\nAssistant is being enabled retroactively. See go/agsa-gap for context.",
                        "Notification is fired when the user has an old version of AGSA to promote\nAGSA app updates.",
                        "Notification is fired to give the user general information about the\nair quality in their current location.",
                        "Notification is fired when the user is at-a-place of interest, such as\nWalmart.",
                        "Notification is fired when bill is due with in 1 day and is not\nyet paid.",
                        "Notification is fired for breaking news events.",
                        "Catch-all category for all Civic notifications which don't specify a more\nfine-grained NotificationCategory.",
                        "Notification related to election results.",
                        "Notification related to voter information.",
                        "go/now-notifications-codelab",
                        "Notification is fired when there is general information available about\na user's (expected) commute. (currently unused)",
                        "Notification is fired when there is an incident on the user's route.\n(currently unused)",
                        "Commute notifications generated by CommuteNotificationModule based on\nthe commute field in LocationAnalysisResponse. These cover both normal and\nbad traffic cases.\nCan potentially be increased by introducing non-personalized routes.\n(The other commute-related notification, FREQUENT_PLACE_COMMUTE_NOTIF, is\nbased on FrequentPlace, ie the visited_places field in\nLocationAnalysisResponse and is generated by PlaceNotificationAdder.)",
                        "Notification is fired for calendar events information from moonshine.",
                        "",
                        "Notification is fired when there is a car rental reservation for pick up/\ndrop off.",
                        "Notification is fired for a default happyhour event.",
                        "Notification is fired when there is a restaurant reservation and it is\ntime to leave.",
                        "Notification is fired for happyhour concert ticket.",
                        "Notification is fired the day before a user has a ticketed event.",
                        "Notification is fired several hours before a user has a ticketed event.",
                        "Notification is fired for happyhour movie ticket.",
                        "Notification is fired for saved events in events search.",
                        "Finance daily recap notification - go/finance-daily-recap-dd.",
                        "Notification is fired when the difference between a stock's end-of-day\nprice is greater than the previous day's closing price by a given\nthreshold.",
                        "Notification is fired when the difference between an index's end-of-day\nvalue is greater than the previous day's closing value by a given\nthreshold.",
                        "Notification is fired for a user's inferred interested stock if a the price\nchange exceeds a given threshold.",
                        "Notification is fired when the difference between a stock's\nprice (during regular trading hours) is greater than the previous day's\nclosing price by a given threshold.",
                        "Notification is fired when a company the user is interested in goes IPO,\non the day of the IPO event.",
                        "Notification is fired when user is at airport.",
                        "Notification is fired the day before a user has a flight.",
                        "Notification is fired several hours before a user has a flight.",
                        "Notification is fired if we detect a (big) price drop of a tracked flight.",
                        "Notification for a next-day-fare (NDF) price prediction of a tracked\nflight.",
                        "Notification is fired near the time of the flight to inform the user. It is\ngenerally surfaced as a LOW_PRIORITY notification.",
                        "Notification is fired if the user's flight has a change of status (is\ndelayed or cancelled).",
                        "Notification is fired if the user's flight has a change of gate/terminal.",
                        "Notification is fired to let the user know that it's time to leave for the\nairport when they have an upcoming flight.",
                        "Notification is fired to inform a user about their planned commute.",
                        "Catch-all category for all other types of FREQUENT_PLACE notifications.",
                        "Notification categories for Janata (go/janata-one-pager)\nNotification sent to inform users about handshake request or approval\n(go/janata-handshake).",
                        "Notification sent to users a reminder on how to edit their card after they\ncreate it.",
                        "Notification sent to notify users about the ability to post images.",
                        "Notification is fired when the user is at a location (similar to\nAT_A_PLACE_LOCATION), but generates a different CardCategory so we use a\ndifferent NotificationCategory as well.",
                        "Notification is fired a day right before the due date to remind user tasks\ninferred from email.",
                        "Catch-all category for notifications triggered by a card created through\nthe 1P InternalApi when the card doesn't specify the category.",
                        "",
                        "Notification is fired everyday in the morning to notify about current\nair quality conditions.",
                        "Notification is fired when there is a dramatic negative change in\nair quality.",
                        "Notification is fired when a movie starring an actor the user is interested\nin is released in theaters today.",
                        "Notification is fired when a TV new episode airs containing a guest\nappearance by a celebrity in whom the user is interested.",
                        "Notification is fired when a movie directed by someone the user is\ninterested in is released in theaters today.",
                        "Notification is fired when there's an update for an exam the user is\ninterested in.",
                        "Notification is fired when a movie the user is interested in is\nreleased in theaters today.",
                        "Notification is fired when a movie the user is interested in is releasing\na sequel in theaters today.",
                        "Notification is fired when a TV first episode the user is interested in is\naired today.",
                        "Notification is fired when a TV new episode the user is interested in is\naired today.",
                        "Notification is fired when a movie trailer for a movie starring an actor\nthat the user is interested in is uploaded today.",
                        "Notification is fired when a movie trailer for a movie directed by someone\nwho the user is interested in is uploaded today.",
                        "Notification is fired when a movie trailer for a movie that the user is\ninterested in is uploaded today.",
                        "Notification triggered when tickets of a user interested movie are\navailable.",
                        "Notification triggered for movie-goers when some user interested movie\nshowtimes are available the coming weekend.",
                        "Notification is fired when a video game that the user is interested in\nis released.",
                        "Notification is fired when an artist that the user is interested in\nreleases a new album today.",
                        "Notification is fired when lottery results are announced for a game.",
                        "Notification is fired when an athlete that the user is interested in joins\na new team today.",
                        "Notification is fired when a coach that the user is interested in\njoined a new team.",
                        "Notification is fired when a team that the user is interested in signs a\nnew athlete today.",
                        "Notification is fired when a team that the user is interested in\nrecruited a new coach.",
                        "Notification is fired when an author that the user is interested in\npublishes a new book.",
                        "Notification is fired when the author of a book that the user\nis interested in publishes a new book.",
                        "Notification is fired when an entity that the user is interested in\nanswers a question.",
                        "Notification is fired when an author that the user is interested in\npublishes a new post.",
                        "Notification is fired when a stock that the user is interested in\nfluctuates more than a certain threashold.",
                        "Intro notification, which is used to introduce Olympics related updates.",
                        "Notifications triggered when users' countries of interest win a medal.",
                        "Notifications triggered for daily featured events.",
                        "Notifications triggered for daily recaps.",
                        "Notifications triggered for top events before they start.",
                        "Notifications triggered with summary for top events after they finish.",
                        "Notifications triggered when users' countries of interest are about to\ncompete for a medal.",
                        "Notification triggered when an awards ceremony that the user is interested\nin starts.",
                        "Notification category for generic ephemeral events.",
                        "Notification triggered when a film festival that the user is interested in\nstarts.",
                        "Notification triggered when a music festival that the user is interested in\nstarts.",
                        "Notification triggered when stage or final winner list is out.",
                        "Notification triggered when the opening ceremony of a multi-sport event\n(e.g. Winter Olympics, Asian games) that the user is interested in starts.",
                        "Notification for high pollen count.",
                        "Notification for one-off cases.",
                        "Catch-all category for all KE-Now notifications which don't specify a\ncategory.",
                        "Notification categories for notifications targeting merchants\n(go/merchant-consumer-notifications).\nCatch-all category (deprecated).",
                        "Notification sent to the listings that have never created a Local post and\nare eligible to create one.",
                        "Notification sent on the anniversary of the business listing that prompts\nthe merchant to check and update their listing data.",
                        "Notification sent when the latest Local Post is about to expire.",
                        "Notification sent when the listing crosses an insights milestone for Local\nPosts. Eg: 100 views or 50 clicks.",
                        "Notification sent after the last Local Post has expired to encourage the\nmerchant to create new posts.",
                        "Notification sent when there are user-initiated changes to the business\nlisting data (e.g., phone, address), which prompts the merchant to review\nand confirm those changes.",
                        "Notification sent when there are new user-uploaded photos for the business.",
                        "Notification sent when there is a new user review for the business.",
                        "Notification sent to the merchants monthly about their listings insights.",
                        "Notifications sent to potential Site-Managers of GMB locations.\ngo/gmb-sm-outreach",
                        "Notifications sent to potential inferred merchants for sign-up as GMB\nusers.\ngo/inferred-merchant-outreach-exp-tdd",
                        "Notification sent when a user entered question is answered by another user\nThe notification is sent to the user who asked and all followers.",
                        "Notification sent when a user entered question is routed to users for\ngetting answers.",
                        "Notification is fired when a package has shipped or when it is out\nfor delivery.",
                        "Notification for Shopping.\nFired if there's a price drop on a product user is interested in(detected\nby Google).",
                        "Fired if there's a price drop on a product user has explicitly subscribed.",
                        "Notification is fired for public alerts.",
                        "Catch-all category for all notifications fired by reminders.",
                        "Notification is fired for sports, and does not fit in any of the categories\ndefined below.",
                        "Notification is fired for a game in the given sport.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Notification is fired when the video highlights are available for a game.",
                        "Notification is fired by a third-party card.",
                        "Notification is fired by a third-party cardmaker card.",
                        "Notification cateogry for time gap and ForeSIght queries. Design doc:\ngo/time-gap-dd.",
                        "",
                        "Notification category for time to leave notifications created by\nTimeToLeaveModule.",
                        "Top story notifications. Design doc: http://go/top-story-notifs",
                        "Topdeck personalized greetings.",
                        "Notification is fired to inform user of a traffic incident. Usually\ndelivered as an ACTIVE notification.",
                        "Notification is fired the day before the user has a transportation\nreservation.",
                        "Notification is fired several hours before the user has a transportation\nreservation.",
                        "Notification is fired when the user is at a transit station, giving them\ngeneral information about the station.",
                        "",
                        "Notification is fired when user is at a city, giving them travel-specific\ninformation about the city.",
                        "Notification triggered when Event is occurring and a user is requested\nto upload photos of the event.",
                        "Notification is fired when a user visited a theater to prompt the user to\nreview the film they just saw.",
                        "Notification is fired when a user arrived an event venue to prompt the user\nto upload their photos of the event.",
                        "",
                        "Notification is fired to give the user general information about the\nweather in their current location. Currently only sent as a TOPDECK or\nLOW_PRIORITY notification.",
                        "Notification is fired if it is not raining/snowing currently and it is\nexpected to in the next few hours.",
                        "Notification is fired when the difference between today's max temperature\nand tomorrow's max temperature is greater than a threshold.",
                        "Notification is fired if it didn\u2019t rain/snow today and it\u2019s expected to\nrain/snow tomorrow.",
                        "Notification is fired at evening time and if\nWEATHER_NEXT_DAY_DEGREE_DELTA_NOTIF conditions are not met.",
                        "Notification is fired at the morning and shows today's forecast.",
                        "Notification is fired if there is a news story about a user's explicitly\ndeclared interest.",
                        "Notification is fired if there's an update to a website the user follows.",
                        "DEPRECATED Notification is fired if user has interest in Bollywood and\nwhile wait at transit station. (Leave in enum until logs containing this\nvalue are no longer processed.)",
                        "Notification category for Doodle notifications.",
                        "Notification category for Search awareness (go/search-aware).",
                        "Feed summary notifications.",
                        "",
                        "Notification category for Vidya language onboarding notifications.",
                        "Notification category for public health information for travelers.",
                        "Used for testing (since any notification going thru needs to have category\nset).",
                        "SOS notifications.",
                        "UGC (User-Generated Contents) localization notification",
                        "Notification triggered when a Place Q&A question or answer is written by\na user.",
                        "Notifications that offer the user to return to the Google Word Coach game.",
                        "Notification for awareness search features.",
                        "Notifications for the new youtube music video.",
                        "Awareness subscription notifications per vertical.",
                        "",
                        "",
                        "Event notifications for go/bulletin.",
                        "Saved Search notifications for search employ go/employ-notifs.",
                        "Apply to similar jobs notifications for search employ go/employ-notifs.",
                        "Notifications for user trip creations/updates.\ngo/travel-trip-notifications",
                        "",
                        "",
                        "Saved jobs notifications for search employ go/employ-notifs.",
                        "Notifications recommending users to try a Search query.",
                        "Notifications recommending users to subscribe to some topic."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__ShareAction": {
            "description": "Action to share content from the feed.",
            "id": "Sidekick__ShareAction",
            "properties": {
                "analyticsInfo": {
                    "$ref": "Sidekick_ShareAction_AnalyticsInfo",
                    "description": "Information used to populate analytics info of fdl (go/fdl) links."
                },
                "body": {
                    "description": "The contents to be shared, any ordered list of text and url.\nThe url is sent to the clients unmodified. The clients can modify (shorten)\nas desired.\nThis field takes a significant amount of space so we only keep in\ntemp prefetch logs and drop from permanent logs.",
                    "items": {
                        "$ref": "Sidekick_ShareAction_BodySegment"
                    },
                    "type": "array"
                },
                "socialTagInfo": {
                    "$ref": "Sidekick_ShareAction_SocialMetaTagInfo",
                    "description": "Information used to populate social media tags of fdl (go/fdl) links."
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "description": "Title or subject of the sharing information.",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__SmallContentModule": {
            "description": "Module to display the small representation of a card.  This\nis typically will be a few lines of text along with an icon\nand an image.",
            "id": "Sidekick__SmallContentModule",
            "properties": {
                "asset": {
                    "description": "Asset to display at the end (typically right) edge.",
                    "enum": [
                        "IP_GENERIC",
                        "IP_BILLS",
                        "IP_COMMUTE",
                        "IP_DAY",
                        "IP_FINANCE",
                        "IP_FOOD",
                        "IP_MOVIES",
                        "IP_MUSIC",
                        "IP_PEOPLE",
                        "IP_SPORTS",
                        "IP_TRAVEL",
                        "IP_UPDATE",
                        "TRAINING_PROFILE",
                        "TRAINING_BRIIM",
                        "EVENT_48",
                        "LOCAL_ATTRACTION_48",
                        "LOCAL_GAS_STATION_48",
                        "LOCAL_MOVIES_48",
                        "NEWS_48",
                        "PLACE_48",
                        "RESTAURANT_48",
                        "TV_48",
                        "HQ_AGENDA",
                        "HQ_ORDER",
                        "HQ_SHOPPING_LIST",
                        "HQ_REMINDERS",
                        "HQ_TRANSPORTATION",
                        "HQ_SHORTCUT",
                        "HQ_AGENDA_V1P5",
                        "HQ_ORDER_V1P5",
                        "HQ_SHOPPING_LIST_V1P5",
                        "HQ_REMINDERS_V1P5",
                        "HQ_SHORTCUT_V1P5"
                    ],
                    "enumDescriptions": [
                        "This chunk is for the Interest Picker.",
                        "",
                        "",
                        "Used for \"Manage my day\" (agenda, calendar, etc).",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Used for \"Keep me updated\" (website, news, etc).",
                        "This chunk is for tutorial/training cards.",
                        "",
                        "generic assets\nic_event_white_48",
                        "ic_local_attraction_white_48",
                        "ic_local_gas_station_white_48",
                        "ic_local_movies_white_48",
                        "ic_news_white_48",
                        "ic_place_white_48",
                        "ic_local_restaurant_white_48",
                        "ic_tv_white_48",
                        "The HQ Zero-State images",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The HQ Zero-State images, v1.5",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "assetBackgroundColor": {
                    "description": "Sets a background color for the image.",
                    "format": "int32",
                    "type": "integer"
                },
                "bottomImageOverlay": {
                    "description": "Display a metadataLineView over the bottom section of the image.\ngo/agsa-lower-left-image-overlay-design",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "bottomPaddingInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "centerContentVertically": {
                    "description": "Whether or not to center the content text vertically in the small module.\nThis is used by for the tutorial card and should not be used for any other\ncard. This is only supported for IMAGE_RIGHT types.",
                    "type": "boolean"
                },
                "content": {
                    "description": "This is the text content appearing in the small module.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "contentFooter": {
                    "$ref": "Sidekick__ContentFooter"
                },
                "details": {
                    "description": "This is the text content appearing in the small module on\nthe right hand side.  This is used by things like the stocks,\nand weather cards to show a few lines on the right hand side",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "extraInfo": {
                    "$ref": "Sidekick__MetadataLine",
                    "description": "A single Metadata line which appears on the right hand side\nbut left of the details.  This line typically is displayed as\na larger value centered vertically.  For example, the\ncurrent temperature on the weather card."
                },
                "footers": {
                    "description": "This is the text content appearing in the small module on\nthe bottom of the module.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "gutterIcon": {
                    "$ref": "Sidekick__ModuleIcon"
                },
                "icon": {
                    "description": "An icon from a standard resource specified by ActionIcon",
                    "enum": [
                        "UNKNOWN_ACTION_ICON",
                        "CALL",
                        "SMS",
                        "EMAIL",
                        "PLAY",
                        "START_NAVIGATION",
                        "MAP_LOCATION",
                        "DIRECTIONS",
                        "VIEW_MORE",
                        "CONFIRM",
                        "VIEW_ALARMS",
                        "EDIT",
                        "VIEW_EVENT",
                        "BUY",
                        "KEEP",
                        "ICON_ADD",
                        "LOCAL_TAXI",
                        "ADD_ALERT",
                        "AUTO_FIX",
                        "ICON_BILL",
                        "BLOCK",
                        "ICON_BOOK",
                        "CAR",
                        "CARD_TRAVEL",
                        "CURRENCY_CONVERTER",
                        "DIALER",
                        "DRIVE_TEXT",
                        "DIRECTIONS_BIKE",
                        "DIRECTIONS_TRANSIT",
                        "DIRECTIONS_WALK",
                        "FEEDBACK",
                        "GOOGLE",
                        "HISTORY",
                        "HOTEL",
                        "LOCAL_SHIPPING",
                        "MUSIC_ALBUM",
                        "ICON_NEWS",
                        "PERSON",
                        "PLANE",
                        "PLAY_ARROW",
                        "QUANTUM_GENERIC_BUSINESS",
                        "QUANTUM_GENERIC_ICON",
                        "QUANTUM_MOVIE",
                        "QUANTUM_MOVIE_IN_THEATER",
                        "QUANTUM_PHONE_NUMBER",
                        "QUANTUM_PLACE_ADDRESS",
                        "QUANTUM_RESTAURANT",
                        "ICON_REMINDER",
                        "ICON_REMOVE",
                        "REPORT",
                        "RESERVATION",
                        "RESTAURANT",
                        "SHOPPING_BASKET",
                        "SHOPPING_CART",
                        "SPORTS_BASEBALL",
                        "SPORTS_BASKETBALL",
                        "SPORTS_CRICKET",
                        "SPORTS_FOOTBALL",
                        "SPORTS_HOCKEY",
                        "SPORTS_RUGBY",
                        "SPORTS_SOCCER",
                        "STAR",
                        "STOCK",
                        "STOCK_DASH",
                        "STOCK_DOWN",
                        "STOCK_UP",
                        "STORE",
                        "TAG",
                        "TEMPERATURE",
                        "THUMB_DOWN",
                        "TIME_AT_HOME",
                        "TRENDING_UP",
                        "VISIBILITY",
                        "VISIBILITY_OFF",
                        "GOOGLE_PROVIDED_CONTENT",
                        "MAPS_LOGO",
                        "YOU_TUBE_LOGO",
                        "YOU_TUBE_LOGO_WHITE",
                        "GMAIL_LOGO",
                        "CALENDAR_LOGO",
                        "GOOGLE_PLUS_LOGO",
                        "TRANSLATE_LOGO",
                        "TRAVEL_FLIGHTS_LOGO",
                        "TRAVEL_HOTELS_LOGO",
                        "SHOPPING_LOGO",
                        "MUSIC_NOTE",
                        "ARTIST",
                        "DIRECTIONS_CAR",
                        "LIBRARY_BOOKS",
                        "LOCAL_OFFER",
                        "LOCAL_PHARMACY",
                        "SCHOOL",
                        "PALETTE",
                        "WEB",
                        "SEARCH",
                        "HANGOUT",
                        "WB_SUNNY",
                        "DRIVE_ETA",
                        "HOME",
                        "WORK",
                        "MIC",
                        "ICON_TRANSLATE",
                        "UPDATE",
                        "AMP_ICON_12",
                        "AMP_ICON_16",
                        "AMP_SEARCH_ICON_12",
                        "CHEVRON_RIGHT",
                        "CHEVRON_LEFT",
                        "CLOSE",
                        "ARROW_RIGHT",
                        "ARROW_LEFT",
                        "ADD_CIRCLE",
                        "SHARE",
                        "SHARE_18",
                        "TRIANGLE_LEFT",
                        "TRIANGLE_RIGHT",
                        "ADD_CIRCLE_OUTLINE",
                        "CHECK_CIRCLE",
                        "ADD_BOLD",
                        "CHECK_BOLD",
                        "LIVE_TV",
                        "PEOPLE",
                        "SHOW_CHART",
                        "LOCAL_DINING",
                        "PUBLIC",
                        "BRUSH",
                        "ARROW_UPWARD",
                        "ARROW_DOWNWARD",
                        "SAVE_FOR_LATER",
                        "SAVED_FOR_LATER",
                        "FEED_STORY_MORE",
                        "FEED_STORY_LESS",
                        "INFO",
                        "AD_BADGE",
                        "AD_BADGE_TEXT",
                        "FEED_STORY_NEUTRAL",
                        "FILLED_BOLT_AMP_ICON",
                        "DARK_FEED_STORY_NEUTRAL",
                        "DARK_FEED_STORY_MORE",
                        "INTEREST_MARK",
                        "TUNE",
                        "STAMP_ICON",
                        "PLAYSTORE_LOGO_ICON",
                        "MORE_VERT",
                        "VIDEO_SETTINGS",
                        "FAVORITE",
                        "FAVORITE_BORDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "See\nhttps://developers.google.com/now/api/using-templates#google_logos_and_icons",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Plus icon with not bolded lines",
                        "",
                        "Internal use only.\nhttps://icons.googleplex.com/#icon=ic_add_alert",
                        "https://icons.googleplex.com/#icon=ic_auto_fix",
                        "",
                        "https://icons.googleplex.com/#icon=ic_block",
                        "https://icons.googleplex.com/#icon=ic_book",
                        "",
                        "# ic_card_travel_white_24\n",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_drive_text",
                        "https://icons.googleplex.com/#icon=ic_directions_bike",
                        "https://icons.googleplex.com/#icon=ic_directions_transit",
                        "https://icons.googleplex.com/#icon=ic_directions_walk",
                        "https://icons.googleplex.com/#icon=ic_feedback",
                        "# ic_google_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_history",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_album",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_play_arrow",
                        "The standard quantum generic business icon",
                        "The standard quantum generic, fallback icon",
                        "The standard quantum movie icon",
                        "The standard quantum movie in theaters icon",
                        "The standard quantum phone number icon",
                        "The standard quantum place address icon",
                        "The standard quantum restaurant icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_highlight_off",
                        "https://icons.googleplex.com/#icon=ic_report",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_shopping_basket",
                        "https://icons.googleplex.com/#icon=ic_shopping_cart",
                        "Sports",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_star",
                        "Generic stock icon",
                        "",
                        "",
                        "",
                        "https://icons.googleplex.com/#icon=ic_store",
                        "Price tag icon",
                        "",
                        "https://icons.googleplex.com/#icon=ic_thumb_down",
                        "",
                        "# ic_trending_up_white_24\n",
                        "https://icons.googleplex.com/#icon=ic_visibility",
                        "https://icons.googleplex.com/#icon=ic_visibility_off",
                        "Color icon for generic Google provided content.\nSome Card Caps will use specific logos, such as GMAIL\nwhent he source of the card is more specific.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "ic_music_note_white_24",
                        "ic_artist_white_24",
                        "ic_directions_car_white_24",
                        "ic_library_books_white_24",
                        "ic_local_offer_white_24",
                        "ic_local_pharmacy_white_24",
                        "ic_school_white_24",
                        "ic_palette_white_24",
                        "ic_web_white_24",
                        "ic_search_white_24",
                        "ic_hangout_white_24",
                        "https://icons.googleplex.com/#icon=ic_wb_sunny",
                        "https://icons.googleplex.com/#icon=ic_drive_eta",
                        "https://icons.googleplex.com/#icon=ic_home",
                        "https://icons.googleplex.com/#icon=ic_work",
                        "https://icons.googleplex.com/#icon=ic_mic",
                        "https://icons.googleplex.com/#icon=ic_translate",
                        "",
                        "12pt AMP Icon",
                        "16pt AMP Icon",
                        "Search AMP Icon",
                        "Chevron Right icon https://icons.googleplex.com/#icon=ic_chevron_right\nAvailable in AGSA 6.6+.",
                        "Chevron Left icon https://icons.googleplex.com/#icon=ic_chevron_left\nAvailable in AGSA 6.6+.",
                        "Close or (X) icon https://icons.googleplex.com/#icon=ic_close&search=close\nAvailable in AGSA 6.6+.",
                        "Arrow Right icon https://icons.googleplex.com/#icon=ic_arrow_forward\nAvailable in AGSA 6.6+.",
                        "Arrow Left icon https://icons.googleplex.com/#icon=ic_arrow_back\nAvailable in AGSA 6.6+.",
                        "Plus icon inside a circle https://icons.googleplex.com/#icon=ic_add_circle\nAvailable in AGSA 6.9+.",
                        "https://icons.googleplex.com/#icon=ic_share\nAvailable in AGSA 6.12+",
                        "https://icons.googleplex.com/#icon=ic_share 18 dp asset\nAvailable in AGSA 8.01+",
                        "https://icons.googleplex.com/#icon=ic_arrow_left\nAvailable in AGSA 6.17+",
                        "https://icons.googleplex.com/#icon=ic_arrow_right\nAvailable in AGSA 6.17+",
                        "Plus icon inside a outline circle.\nhttps://icons.googleplex.com/#icon=ic_add_circle_outline\nAvailable in iGSA 28.0+.",
                        "Check icon inside a circle.\nhttps://icons.googleplex.com/#icon=ic_check_circle\nAvailable in iGSA 28.0+.",
                        "Plus icon with bolded lines.\nAvailable in AGSA 7.3+",
                        "Check icon.\nAvailable in AGSA 7.3+",
                        "Live TV icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_live_tv",
                        "People icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_people",
                        "Show Chart icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_show_chart",
                        "Local Dining icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_local_dining",
                        "Public icon (looks like an earth)\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_public",
                        "Brush icon\nAvailable in AGSA 7.6+\nhttps://icons.googleplex.com/#icon=ic_brush",
                        "Upward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_upward",
                        "Downward Arrow icon\nAvailable in AGSA 7.7+\nhttps://icons.googleplex.com/#icon=ic_arrow_downward",
                        "Bookmark icon-border",
                        "Bookmark icon-filled in",
                        "More icon",
                        "Less icon",
                        "Info icon\nAvailble in AGSA 7.17+\nhttps://icons.googleplex.com/#icon=ic_info",
                        "AdBadge icon (deprecated and will be deleted after b/130308386)\nAvailable in AGSA 7.18+, iGSA 46.0+",
                        "Available in AGSA 9.66+, this supports all languages, AD_BADGE does not.",
                        "Neutral icon for reactions\nAvailble in AGSA 7.20+",
                        "A custom made AMP icon that has a filled bolt instead of a transparent one.\nThis is intended to be used as an overlay shown over an image, where the\ncolor of the image is not known, but other uses may be beneficial as well.\nAvailable in AGSA 8.6+\nAvailable in iGSA 52+ (Zero Wing)",
                        "Custom android dark theme version of the Neutral icon for reactions",
                        "Custom android dark theme version of the More icon for reactions",
                        "Interest spark for gestalt brand.\ngoogledata/html/external_content/gstatic/android/now/images/default/xxhdpi/interest-mark.png",
                        "\"Manage interests\" icon used with the interest management UI. See\ngo/web-interest-management-design.\nhttps://icons.googleplex.com/#icon=ic_tune",
                        "Icon displayed on top of STAMP documents go/stampinfeed\nAvailable in AGSA 8.24+\nAvailable in iGSA 64.0+",
                        "Playstore logo icon\nAvailable in AGSA 8.50+",
                        "Snowman button\nhttps://www.gstatic.com/images/icons/material/system/1x/more_vert_black_24dp.png",
                        "Video settings icon.",
                        "Heart icon-filled in",
                        "Heart icon-border"
                    ],
                    "type": "string"
                },
                "iconUrl": {
                    "description": "An icon from a web url",
                    "type": "string"
                },
                "imageCaption": {
                    "description": "Text to show over the image on the lower right corner.",
                    "type": "string"
                },
                "inlineVideo": {
                    "$ref": "Sidekick__InlineVideo"
                },
                "minimumHeight": {
                    "enum": [
                        "NONE",
                        "STANDARD"
                    ],
                    "enumDescriptions": [
                        "No min height specified, will become wrap content.",
                        "For a standard card, 96dp"
                    ],
                    "type": "string"
                },
                "overlayColor": {
                    "description": "Overrides the default overlay color of green if present. This will be a\ncolor of the overlay over a card. Client will apply 70% alpha on this.\nNext available ID: 29",
                    "format": "uint32",
                    "type": "integer"
                },
                "photo": {
                    "$ref": "Sidekick__Photo",
                    "description": "Image to display at the end (typically right) edge.\nCurrently supported only for landscape image header with image_url."
                },
                "photoAsAvatar": {
                    "description": "Treat the photo as an avatar photo.  When the photo is defined\nif this is true, the photo will be styled as an Avatar",
                    "type": "boolean"
                },
                "photoIcon": {
                    "$ref": "Sidekick__ModuleIcon",
                    "description": "Icon to display at the end edge."
                },
                "showFullImage": {
                    "description": "Whether to show full image or crop it to fit the placeholder.",
                    "type": "boolean"
                },
                "showImageOverlayGradient": {
                    "description": "Display a gradient on top of the image, can be used to provide some\ncontrast when displaying text on top of the image\ngo/agsa-lower-left-image-overlay-design",
                    "type": "boolean"
                },
                "showLaunchIcon": {
                    "description": "If the launch icon should appear on the photo when the card is created if\nthe card does not have a video that is eligible for playback.",
                    "type": "boolean"
                },
                "showNonTintIcon": {
                    "description": "For the action icon, do we show it with the normal tint\nor show the full color.  The default is to show with the\ntint.\nThis is deprecated, please use ModuleIcon",
                    "type": "boolean"
                },
                "showVideoPlayIcon": {
                    "description": "Display a (video) play icon over the image.",
                    "type": "boolean"
                },
                "topPaddingInDp": {
                    "description": "Overrides the padding on the top and bottom of the card.\nPadding is based upon the type for the most part.  This gives\nthe server control over that.\nNOTE: Min Android Client support: 5.14",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "The type of the module.",
                    "enum": [
                        "IMAGE_RIGHT",
                        "CAROUSEL",
                        "CAROUSEL_CUSTOMIZE",
                        "CAROUSEL_LOGO",
                        "CAROUSEL_TEXTONLY",
                        "CAROUSEL_TWO_TONE",
                        "CAROUSEL_TWO_TONE_ICON",
                        "CAROUSEL_SPLIT_TEXT",
                        "CAROUSEL_MONOTONE",
                        "CAROUSEL_WEB_LOGO",
                        "ARTICLE",
                        "TUTORIAL",
                        "SCREENIE",
                        "SCREENIE_MOVIE",
                        "PORTRAIT_IMAGE_RIGHT",
                        "LARGE_IMAGE_RIGHT",
                        "HEADER",
                        "COMPACT_HEADER",
                        "SCREENIE_LIST_HEADER",
                        "INTEREST_UPDATE",
                        "EMBEDDED_EMAIL",
                        "CENTERED_ICON",
                        "CLOSET_NAVIGATION_ROW",
                        "ASSISTANT_HQ",
                        "SUGGESTION_CHIPS",
                        "ASSISTANT_HQ_LARGE",
                        "SUGGESTION_CHIPS_LIST_ROW",
                        "SUGGESTION_CHIPS_IMAGE_RIGHT",
                        "HERO_IMAGE_CENTER",
                        "HERO_IMAGE_RIGHT",
                        "TRAY_SPORTS",
                        "TRAY_SPORTS_STANDINGS",
                        "TRAY_GENERIC_SMALL_SPACE",
                        "TRAY_GENERIC_LARGE_SPACE",
                        "TRAY_RATING",
                        "TRAY_CRITIC",
                        "TRAY_IMAGE_FULL",
                        "ASSISTANT_HQ_EMPTY_CLUSTER",
                        "VOICE_OF_FEED",
                        "ASSISTANT_HQ_HEADER",
                        "ASSISTANT_HQ_IMAGE_RIGHT",
                        "RELATED_HEADER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "This is now referred to as card summary, formerly known as voice of the\nfeed.",
                        "",
                        "",
                        "Related module on Gestalt cards (go/gestalt-reactions-design).\nNext available ID: 43"
                    ],
                    "type": "string"
                },
                "upperRightImageOverlay": {
                    "description": "Display a metadataLineView over the image in the upper right corner.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__SmileScaleSurvey": {
            "description": "The information needed for a 5 smile scale single question survey.",
            "id": "Sidekick__SmileScaleSurvey",
            "properties": {
                "closeButtonVeInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "The Ve info for a close button to dismiss the survey."
                },
                "negativeLabel": {
                    "description": "The label for the negative side of the scale.",
                    "type": "string"
                },
                "positiveLabel": {
                    "description": "The label for the positive side of the scale.",
                    "type": "string"
                },
                "question": {
                    "description": "The question to ask.",
                    "type": "string"
                },
                "smileScaleNegative": {
                    "$ref": "Sidekick__VisualElementInfo"
                },
                "smileScaleNeutral": {
                    "$ref": "Sidekick__VisualElementInfo"
                },
                "smileScalePositive": {
                    "$ref": "Sidekick__VisualElementInfo"
                },
                "smileScaleVeryNegative": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "The Ve infos for each of the smile options."
                },
                "smileScaleVeryPositive": {
                    "$ref": "Sidekick__VisualElementInfo"
                },
                "surveyVeInfo": {
                    "$ref": "Sidekick__VisualElementInfo",
                    "description": "The Ve info for the survey as a whole."
                }
            },
            "type": "object"
        },
        "Sidekick__SpinnerModule": {
            "description": "Used on the client to display a card with a spinner",
            "id": "Sidekick__SpinnerModule",
            "properties": {
                "hideIndicator": {
                    "description": "If true, hide the progress indicator. This is useful for masking loading\noperations until the user shows interest in the data.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__SportEventEntity": {
            "description": "Fixed information about an entity in a SportEvent.",
            "id": "Sidekick__SportEventEntity",
            "properties": {
                "abbreviation": {
                    "description": "Abbreviation for team/player.",
                    "type": "string"
                },
                "freebaseId": {
                    "description": "Freebase MID of the team/player.",
                    "type": "string"
                },
                "isUserInterest": {
                    "description": "Whether this is an entity a user is interested in.",
                    "type": "boolean"
                },
                "logo": {
                    "$ref": "Sidekick__Photo",
                    "description": "Team logo."
                },
                "name": {
                    "description": "Name of team/player.",
                    "type": "string"
                },
                "primaryKey": {
                    "description": "The opaque primary key that would be used for this team in the user's\nsettings.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__SportEventEntityScore": {
            "description": "Score information about an entity in a SportEvent.",
            "id": "Sidekick__SportEventEntityScore",
            "properties": {
                "scoreDisplay": {
                    "description": "Score in this event",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__SportEventEntry": {
            "description": "A single game/event with a score. For browse-mode sports. This will\neventually replace SportScoreEntry. This will be contained in a group_entry\nof type SPORT_LURE_LIST, and the SportEventEntry will be of type SPORT_EVENT.\n\nThis is shown in the lure and the secondary page.",
            "id": "Sidekick__SportEventEntry",
            "properties": {
                "eventMid": {
                    "description": "Freebase ID of the event (example \"/m/0_ycvly\"), for the\nsecondary page to use.",
                    "type": "string"
                },
                "eventTitle": {
                    "description": "Displayable title (e.g. \"Semi-finals\").",
                    "type": "string"
                },
                "hideScores": {
                    "description": "If true, the client should hide scores from the user.",
                    "type": "boolean"
                },
                "linkAction": {
                    "description": "Links to more information about this event.",
                    "items": {
                        "$ref": "Sidekick__ClickAction"
                    },
                    "type": "array"
                },
                "location": {
                    "description": "Where the match is being held. This has no relation to the user's own\nlocation, so is not sensitive.",
                    "type": "string"
                },
                "secondaryPageHeader": {
                    "$ref": "Sidekick__SecondaryPageHeaderDescriptor",
                    "description": "Header info for the secondary page if this lure is clicked."
                },
                "showMoreButton": {
                    "description": "Whether to show the \"more...\" button in the lure. Controlled by an\nexperiment.",
                    "type": "boolean"
                },
                "sport": {
                    "description": "Type of sport.",
                    "enum": [
                        "BASKETBALL",
                        "FOOTBALL",
                        "BASEBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "CRICKET",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "startTimeSeconds": {
                    "description": "The start time of the match.",
                    "format": "int64",
                    "type": "string"
                },
                "startTimeZone": {
                    "description": "The timezone for the start time. This is an ID which can be read by\njava.util.TimeZone. Note this time zone has no relation to the user's own\nlocation, so is not sensitive.",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "DONE",
                        "IN_PROGRESS",
                        "NOT_STARTED",
                        "POSTPONED",
                        "CANCELLED",
                        "DELAYED",
                        "TBD",
                        "SUSPENDED",
                        "WITHDRAWN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "statusDisplay": {
                    "description": "HTML formatted displayable string corresponding to status, such as time\ninto game and maybe broadcast network (e.g. \"<b>Live 29'</b> on ESPN\").",
                    "type": "string"
                },
                "versusEvent": {
                    "$ref": "Sidekick__SportEventVersus",
                    "description": "An event between 2 opponents (teams, individuals)."
                }
            },
            "type": "object"
        },
        "Sidekick__SportEventVersus": {
            "description": "An event between 2 opponents (teams, individuals).",
            "id": "Sidekick__SportEventVersus",
            "properties": {
                "firstEntity": {
                    "$ref": "Sidekick__SportEventEntity",
                    "description": "The first entity to display."
                },
                "firstEntityScore": {
                    "$ref": "Sidekick__SportEventEntityScore",
                    "description": "Score for the first entity."
                },
                "noScoreDisplay": {
                    "description": "Displayable string when a score is not available. (e.g. \"vs\", as in\nYankees vs Red Sox).",
                    "type": "string"
                },
                "scoreSubtitle": {
                    "description": "Subtitle for the score, for example penalty shootouts for soccer would\nbe \"(4-3)\".",
                    "type": "string"
                },
                "secondEntity": {
                    "$ref": "Sidekick__SportEventEntity",
                    "description": "The second entity to display."
                },
                "secondEntityScore": {
                    "$ref": "Sidekick__SportEventEntityScore",
                    "description": "Score for the second entity."
                }
            },
            "type": "object"
        },
        "Sidekick__SportScoreEntry": {
            "id": "Sidekick__SportScoreEntry",
            "properties": {
                "boxScoresUrl": {
                    "type": "string"
                },
                "clickAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "The action to be performed when the team is clicked.\nThis supercedes web_search_query starting with the 3.3/L release."
                },
                "cricketDetails": {
                    "$ref": "Sidekick_SportScoreEntry_CricketDetails"
                },
                "eventMid": {
                    "description": "MID of the event related to this score entry.",
                    "type": "string"
                },
                "eventOriginalMids": {
                    "description": "MIDs of the event related to this score entry including possibly outdated\nMIDs as it might appear in the request(s) to get the score. In most cases\nthough would have single element which matches the 'event_mid' field\nabove.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hideScores": {
                    "description": "If true, the client should hide scores from the user.",
                    "type": "boolean"
                },
                "isNcaa": {
                    "description": "Whether this is an NCAA event (i.e. U.S. college sporting event).",
                    "type": "boolean"
                },
                "liveStreamUrl": {
                    "type": "string"
                },
                "liveUpdateUrl": {
                    "description": "For in-progress games.",
                    "type": "string"
                },
                "location": {
                    "description": "Where the match is being held.",
                    "type": "string"
                },
                "numRemainingPeriods": {
                    "description": "Deprecated 4/2013.",
                    "format": "int32",
                    "type": "integer"
                },
                "oneboxData": {
                    "$ref": "Sidekick__AuxiliaryMessage",
                    "description": "The original onebox data proto which is used by Google Now Everywhere."
                },
                "period": {
                    "description": "This is only returned for in-progress matches (StatusCode == IN_PROGRESS).\nOnly periods that are in progress or have completed appear. The last\nperiod is always the current period.",
                    "items": {
                        "$ref": "Sidekick_SportScoreEntry_Period"
                    },
                    "type": "array"
                },
                "previewUrl": {
                    "description": "For future games.",
                    "type": "string"
                },
                "recapUrl": {
                    "description": "For completed games.",
                    "type": "string"
                },
                "source": {
                    "enum": [
                        "INFERRED",
                        "MANUALLY_ADDED",
                        "ONBOARDING",
                        "AWARENESS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Onboarding user with temporary default interest.",
                        ""
                    ],
                    "type": "string"
                },
                "sport": {
                    "enum": [
                        "BASKETBALL",
                        "FOOTBALL",
                        "BASEBALL",
                        "HOCKEY",
                        "SOCCER",
                        "RUGBY",
                        "CRICKET",
                        "TENNIS",
                        "AUSTRALIAN_FOOTBALL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sportEntity": {
                    "items": {
                        "$ref": "Sidekick_SportScoreEntry_SportEntity"
                    },
                    "type": "array"
                },
                "startTimeSeconds": {
                    "description": "The start time of the match.",
                    "format": "int64",
                    "type": "string"
                },
                "startTimeZone": {
                    "description": "The timezone for the start time. This is an ID which can be read by\njava.util.TimeZone. Note this time zone has no relation to the user's own\nlocation, so is not sensitive.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "LINT.ThenChange(//depot/google3/search/now/proto/analysis/sports_enums.proto)",
                    "enum": [
                        "DONE",
                        "IN_PROGRESS",
                        "NOT_STARTED",
                        "POSTPONED",
                        "CANCELLED",
                        "DELAYED",
                        "TBD",
                        "SUSPENDED",
                        "WITHDRAWN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "ticketsUrl": {
                    "type": "string"
                },
                "tournamentRound": {
                    "description": "The name of the tournament round for this game, e.g. \"NBA Playoffs\". Will\nnot be populated if this is part of the regular season.",
                    "type": "string"
                },
                "upcomingMatch": {
                    "description": "Upcoming matches for the teams or players in sport_entity\nthat the user is interested in.",
                    "items": {
                        "$ref": "Sidekick_SportScoreEntry_UpcomingMatch"
                    },
                    "type": "array"
                },
                "webSearchQuery": {
                    "description": "The web search query string to get more details about this entry.\nThis field is deprecated in favor of click_action.  If the client supports\nclick_action (3.3/L or later), this field will not be populated.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__StaticMap": {
            "description": "Module to display a non-interactive image from maps based on precomputed\nmap query parameters",
            "id": "Sidekick__StaticMap",
            "properties": {
                "size": {
                    "description": "The width and height will be filled by client, based on the size option.",
                    "enum": [
                        "NORMAL",
                        "HIGH"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "staticMapPayload": {
                    "$ref": "Sidekick__StaticMapPayload",
                    "description": "The StaticMapPayload that contains the content of the map."
                }
            },
            "type": "object"
        },
        "Sidekick__StaticMapPayload": {
            "description": "Static map payload which is sent to client with hidden details",
            "id": "Sidekick__StaticMapPayload",
            "properties": {
                "encodedServerPayload": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__StatusBadgeMetadata": {
            "description": "Status badge style metadata",
            "id": "Sidekick__StatusBadgeMetadata",
            "properties": {
                "color": {
                    "description": "The text's color (0xrrggbb format)",
                    "format": "uint32",
                    "type": "integer"
                },
                "loud": {
                    "description": "If loud, the color is used as a background and the text is white.",
                    "type": "boolean"
                },
                "text": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The text to display"
                },
                "useKeyColorForText": {
                    "description": "If we are setting text color to the extracted key color,\nthen the background will be white.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sidekick__StockQuote": {
            "id": "Sidekick__StockQuote",
            "properties": {
                "chartUrl": {
                    "description": "The stock quote chart URL.",
                    "type": "string"
                },
                "clickAction": {
                    "$ref": "Sidekick__ClickAction",
                    "description": "The action to be performed when the stock quote is clicked.\nThis supercedes web_url starting with the 3.3/L release."
                },
                "currency": {
                    "description": "The currency in which this stock is priced. e.g. \"USD\"",
                    "type": "string"
                },
                "currencyPrecision": {
                    "description": "The precision to use for any currency information in this message.",
                    "format": "int32",
                    "type": "integer"
                },
                "exchange": {
                    "description": "e.g. \"NASDAQ\".",
                    "type": "string"
                },
                "highDay": {
                    "description": "Highest price for this stock for the day.\nThere are no current plans to log this field.",
                    "format": "float",
                    "type": "number"
                },
                "lastPrice": {
                    "description": "The price at which the last trade occurred.",
                    "format": "float",
                    "type": "number"
                },
                "lastUpdateSeconds": {
                    "description": "The time of the last update of the stock data. In seconds since epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "lowDay": {
                    "description": "Lowest price for this stock for the day.\nThere are no current plans to log this field.",
                    "format": "float",
                    "type": "number"
                },
                "name": {
                    "description": "The human-readable name of this stock, usually a company name. Used, for\nexample, on the back of the card.",
                    "type": "string"
                },
                "priceVariation": {
                    "description": "The change in price since the previous day's close.",
                    "format": "float",
                    "type": "number"
                },
                "priceVariationPercent": {
                    "description": "The change in price as a percentage of the previous days close.",
                    "format": "float",
                    "type": "number"
                },
                "primaryKey": {
                    "description": "The opaque primary key that would be used for this stock in the user's\nsettings.",
                    "type": "string"
                },
                "quoteserverData": {
                    "$ref": "Sidekick__AuxiliaryMessage",
                    "description": "Extra information that was used to generate this StockQuote.\nThis is only returned for browser clients, and is not logged because it's\nnot structured data."
                },
                "shortName": {
                    "description": "A short name of this stock or index that can replace the ticker symbol in\nthe table of a user's stocks. For all other uses, including the back of the\ncard, use the name field (11) above. The short name is intented only for a\nfew high-profile indicies with confusing ticker symbols. In those cases,\nclients should display the short name instead of the ticker symbol.\nExamples from the Google Finance homepage:\n  Dow Jones\n  NASDAQ\n  S&P 500",
                    "type": "string"
                },
                "source": {
                    "description": "LINT.ThenChange(//depot/google3/search/now/proto/analysis/stocks_enums.proto)",
                    "enum": [
                        "RECENT_SEARCH",
                        "SEARCH",
                        "MANUALLY_ADDED",
                        "PORTFOLIO",
                        "MEMORY_EXPLICIT_INTEREST",
                        "ONBOARDING_SUGGESTION",
                        "POPULAR_INDEX"
                    ],
                    "enumDescriptions": [
                        "",
                        "Up to 180 days",
                        "",
                        "",
                        "",
                        "Stocks suggested to the user during the onboarding process. The user\nhas not yet expressed an interest in these entries.",
                        "Popular index related to stocks of interest to the user."
                    ],
                    "type": "string"
                },
                "symbol": {
                    "description": "e.g. \"GOOG\".",
                    "type": "string"
                },
                "webUrl": {
                    "description": "URL to get more details with a search on the web.\ne.g. \"http://www.google.com/finance?q=NASDAQ%3AGOOG\".\nThis field is deprecated in favor of click_action.  It will be populated\nto support pre-3.3/L releases.",
                    "type": "string"
                },
                "yesterdayClose": {
                    "description": "Yesterday's close price.\nThere are no current plans to log this field.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sidekick__StockQuoteEntry": {
            "description": "An individual stock within the stock quote list card.",
            "id": "Sidekick__StockQuoteEntry",
            "properties": {
                "disclaimerUrl": {
                    "description": "URL to fetch disclaimer.",
                    "type": "string"
                },
                "stockQuoteEntry": {
                    "$ref": "Sidekick__StockQuote"
                }
            },
            "type": "object"
        },
        "Sidekick__StockQuoteListEntry": {
            "description": "The stock quote card is adopting a new design (away from the \"card stack\") in\nwhich one StockQuoteListEntry is responsible for a list of Stock quotes.\nSee mocks at:\nhttps://sites.google.com/a/google.com/googlenow-ux/home/stocks\n\nStarting with Android client version 3.3, stock lists will use the\ngroup_entry/subtree representation of lists. The EntryTreeNode will\nhave a group_entry containing a StockQuoteListEntry with top-level metadata,\nand each stock will be represented as a leaf Entry containing\nstock_quote_entry.",
            "id": "Sidekick__StockQuoteListEntry",
            "properties": {
                "disclaimerUrl": {
                    "description": "URL to fetch disclaimer.",
                    "type": "string"
                },
                "stockQuoteEntry": {
                    "description": "Should only be set for legacy clients (e.g. Android client < 3.3).",
                    "items": {
                        "$ref": "Sidekick__StockQuote"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__StringMetadata": {
            "description": "Simple text data",
            "id": "Sidekick__StringMetadata",
            "properties": {
                "color": {
                    "description": "The text's color (0xaarrggbb format)",
                    "format": "uint32",
                    "type": "integer"
                },
                "colorString": {
                    "description": "String Hex presentation of the color. For example: FF0000 for red (no alpha\nvalues).\n\nNOTE: This is a helper field for HTML rendering of GridModule. This field\n  is programmatically filled, and is not expected to be available by the\n  writer of this proto.",
                    "type": "string"
                },
                "darkThemeColor": {
                    "description": "The text's color (0xaarrggbb format) for android dark theme",
                    "format": "uint32",
                    "type": "integer"
                },
                "text": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "The text to display"
                }
            },
            "type": "object"
        },
        "Sidekick__SuggestionChipAction": {
            "description": "This defines the UI and ClientAction for a suggestion chip.  A suggestion\nchip appears inside some modules as a set of chips the user can press to\nraise an action.",
            "id": "Sidekick__SuggestionChipAction",
            "properties": {
                "action": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "The action that will be generated when the chip is pressed."
                },
                "label": {
                    "description": "The label which will appear inside the chip.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TabularModule": {
            "description": "Module with table-like content",
            "id": "Sidekick__TabularModule",
            "properties": {
                "cellWeights": {
                    "description": "layout_weights applied to the cells, these are percentages of the\nhorizontal space the cell should contain.\nDEPRECATED: Use column_description.weight instead.",
                    "items": {
                        "format": "float",
                        "type": "number"
                    },
                    "type": "array"
                },
                "columnsDescription": {
                    "description": "Information about styling of the table columns.",
                    "items": {
                        "$ref": "Sidekick_TabularModule_ColumnDescription"
                    },
                    "type": "array"
                },
                "metadata": {
                    "description": "Alternative mechanism for specifying content text or other structured\ncard content.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "overridingBottomPadInDp": {
                    "format": "int32",
                    "type": "integer"
                },
                "overridingTopPadInDp": {
                    "description": "Overriding top and bottom padding for the whole table.",
                    "format": "int32",
                    "type": "integer"
                },
                "rows": {
                    "items": {
                        "$ref": "Sidekick_TabularModule_TableRow"
                    },
                    "type": "array"
                },
                "subtitle": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Subtitle text to list under the title"
                },
                "title": {
                    "$ref": "Sidekick__TemplatedString",
                    "description": "Title text associated with the entire table"
                }
            },
            "type": "object"
        },
        "Sidekick__TemplatedString": {
            "description": "A parameterized string to be filled in on the client.",
            "id": "Sidekick__TemplatedString",
            "properties": {
                "displayString": {
                    "description": "The localized string. If there are parameters, this is in the Java format\nstring format (\"%s\" will be substituted by parameter values; all other \"%\"\nchars must be escaped with another \"%\" char). If there are no parameters,\nthis string is used directly, and \"%\" chars should not be escaped.",
                    "type": "string"
                },
                "parameters": {
                    "description": "The parameters for display_string.",
                    "items": {
                        "$ref": "Sidekick_TemplatedString_Parameter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__TextIcon": {
            "description": "Define an icon with a given text and color. See go/monogram.",
            "id": "Sidekick__TextIcon",
            "properties": {
                "fontSize": {
                    "description": "An explicit set font size (in dp) used to render the monogram icon. Only\nAGSA supports explicit font size, and iGSA will ignore this field if set.\n\nNOTE: for AGSA versions prior to 7.1, this field needs to be set explicitly\non the server side. Starting from AGSA 7.1, if this is not provided, the\nclient can choose to use a dynamically calculated size.",
                    "format": "int32",
                    "type": "integer"
                },
                "text": {
                    "description": "The text to show in the icon.",
                    "type": "string"
                },
                "textColor": {
                    "description": "The color of the text in the icon.\nFormat: 0xaarrggbb.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__TextOrIcon": {
            "description": "Text or icons that can be used to label something.",
            "id": "Sidekick__TextOrIcon",
            "properties": {
                "blankSpace": {
                    "description": "Create a blank space instead of showing any label or values.\nIn a row display, clear the entire row. In a column display,\nskip this column.",
                    "type": "boolean"
                },
                "fillContainer": {
                    "description": "Whether this text or icon should fill the container it is in (e.g. if in a\ntable).",
                    "type": "boolean"
                },
                "horizontalAlign": {
                    "enum": [
                        "START",
                        "CENTER",
                        "END"
                    ],
                    "enumDescriptions": [
                        "Align to the start of the container.",
                        "Align centered in the container.",
                        "Align to the end of the container."
                    ],
                    "type": "string"
                },
                "icon": {
                    "$ref": "Sidekick__Photo",
                    "description": "An icon that is used to label a value. Will not be shown if there is text."
                },
                "text": {
                    "description": "A text label that is used to label a value. Required if there is no icon.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TextStyleOverrides": {
            "description": "Style overrides for text display",
            "id": "Sidekick__TextStyleOverrides",
            "properties": {
                "maxLines": {
                    "description": "Makes the text be at most this many lines in display. Default is 0, which\nmeans unlimited. If truncation happens, ellipsis character will be added\nat the end.",
                    "format": "int32",
                    "type": "integer"
                },
                "style": {
                    "enum": [
                        "NORMAL",
                        "OPT_IN_TITLE",
                        "OPT_IN_SUBTITLE"
                    ],
                    "enumDescriptions": [
                        "Normal for the type of field it is (e.g. title, subtitle, etc).",
                        "Used as the title in opt-in cards. Shows text slightly smaller than\nnormal titles and in italics.",
                        "Used as the subtitle in opt-in cards. Shows text slightly smaller\nthan normal subtitles."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TimeRange": {
            "description": "A time interval. The interval is considered active at time 't' if 't' is\ngreater than or equal to the start time and less than the end time.",
            "id": "Sidekick__TimeRange",
            "properties": {
                "end": {
                    "description": "End time, in POSIX time (i.e., number of seconds since January 1st 1970\n00:00:00 UTC).\nIf missing, the interval ends at plus infinity.",
                    "format": "uint64",
                    "type": "string"
                },
                "start": {
                    "description": "Start time, in POSIX time (i.e., number of seconds since January 1st 1970\n00:00:00 UTC).\nIf missing, the interval starts at minus infinity.",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TimeToLeaveAttributes": {
            "description": "The state presented to the user which can be changed per event by\nthe user.",
            "id": "Sidekick__TimeToLeaveAttributes",
            "properties": {
                "arriveEarlyTimeSeconds": {
                    "description": "How early do we expect the user to arrive at the destination before\nthe start time.",
                    "format": "int32",
                    "type": "integer"
                },
                "startingLocation": {
                    "description": "What starting location does the user expect to use?  The default\nis the user's current location. The CommuteSummary associated\nwith the card should have been calculated using this value. This\nis not a location itself, it identifies what location the user\nexpects to leave from.  It is settable by the user.",
                    "enum": [
                        "HOME",
                        "WORK",
                        "CURRENT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "travelMode": {
                    "description": "The travel mode is the user expecting to use when travelling to\nto this event. This is duplicated in CommuteSummary and should\nmatch the value used to compute the CommuteSummary.",
                    "enum": [
                        "DRIVE",
                        "TRANSIT",
                        "WALKING",
                        "BIKING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TimeToLeaveDetails": {
            "description": "A message that captures the details for the time to leave information\nshown to the user for events which have a commute summary and a start\ntime.",
            "id": "Sidekick__TimeToLeaveDetails",
            "properties": {
                "disableTravelModeChanges": {
                    "description": "Disable changes to the travel mode on the client. One use of this is in\nthe Car Rental card to disable changing travel mode from DRIVING when\nreturning the rental car.",
                    "type": "boolean"
                },
                "showTravelTimeOnly": {
                    "description": "Show a modified header with only the travel time and mode. One use case\nis for all-day events, where this is shown instead of an ordinary header\nfor an event starting at midnight.\n\nSetting this to true will disable loud mode.",
                    "type": "boolean"
                },
                "startingLocationCurrentOnly": {
                    "description": "The starting location can only be the user's current location.",
                    "type": "boolean"
                },
                "timeToLeave": {
                    "description": "What time will the user leave for the event assuming the\ntravel mode (CommuteSummary), starting location and how early they\nwill arrive.",
                    "format": "int64",
                    "type": "string"
                },
                "toastMessage": {
                    "description": "This is a message displayed as toast on the client if there are errors\nwhen we create the time to leave details.  For example, setting the\ntransporation mode to a mode not supported can created an error.",
                    "type": "string"
                },
                "ttlAttributes": {
                    "$ref": "Sidekick__TimeToLeaveAttributes",
                    "description": "The time to leave attributes which may be set by the user per event."
                }
            },
            "type": "object"
        },
        "Sidekick__TimeWithZone": {
            "description": "A message representing time in a particular time zone.",
            "id": "Sidekick__TimeWithZone",
            "properties": {
                "seconds": {
                    "description": "Seconds since epoch.",
                    "format": "int64",
                    "type": "string"
                },
                "timezoneId": {
                    "description": "Timezone ID which can be read by java.util.TimeZone\n(e.g. \"Europe/Paris\" or \"GMT+03:00\")",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TimestampedLocation": {
            "description": "NOTE: Most changes should be synced to\nsidekick_internal_client_api.TimestampedLocation",
            "id": "Sidekick__TimestampedLocation",
            "properties": {
                "DEPRECATEDTimezoneOffsetSeconds": {
                    "description": "The offset of the timezone from UTC.\nClients should not set the timezone here. Rather, they should set the time\nzone in SensorSignals.\n\nNote: We may continue to see this field populated from legacy clients\n(e.g. <2.2 Android).\nDeprecated circa 12/2012",
                    "format": "int32",
                    "type": "integer"
                },
                "accuracyMeters": {
                    "format": "int32",
                    "type": "integer"
                },
                "accuracyMetersSquared": {
                    "description": "Accuracy measured in units which conform to the units used to measure s2\ncells",
                    "format": "double",
                    "type": "number"
                },
                "location": {
                    "$ref": "Sidekick__Location"
                },
                "networkLocationType": {
                    "description": "The type of network location, e.g. Wifi or Cell.\nThis field is deprecated as of 12/2012, prefer \"source\".\nSidekick frontend will still see requests with this field populated\n<Android, 2.3.",
                    "type": "string"
                },
                "provider": {
                    "description": "The location provider, e.g. GPS, Network.\nThis field is deprecated as of 12/2012, prefer \"source\".\nSidekick frontend will still see requests with this field populated\n<Android, 2.3.",
                    "type": "string"
                },
                "source": {
                    "description": "The source of this location, or in other words, how this\nlocation was derived.",
                    "enum": [
                        "UNKNOWN",
                        "WIFI",
                        "CELL",
                        "GPS",
                        "FUSED",
                        "IPGEO",
                        "MANUAL"
                    ],
                    "enumDescriptions": [
                        "There is a location. We don't know where",
                        "it came from.\nThe location came from wifi signals.",
                        "The location came from cell tower signals.",
                        "The location came from GPS.",
                        "The location came from a fused provider that",
                        "combined multiple signals.\nThe location came from IP Geolocation",
                        "The location was manually set by the user."
                    ],
                    "type": "string"
                },
                "timestampSeconds": {
                    "format": "int64",
                    "type": "string"
                },
                "velocity": {
                    "description": "Velocity of device, in meter per second. As of 12/2015 this is only used\nfor iOS.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sidekick__ToggleAction": {
            "description": "A ToggleAction is an style of action which will toggle between\nstates.  Currently this supports two states, Neutral and Checked.\nThere is content for both states.  In the UI, only the content\nthe current active state is displayed.",
            "id": "Sidekick__ToggleAction",
            "properties": {
                "checkAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "The action to run when the state enters checked."
                },
                "checked": {
                    "description": "The current state, checked or neutral",
                    "type": "boolean"
                },
                "checkedContent": {
                    "description": "The content appearing in the checked state",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "neutralAction": {
                    "$ref": "Sidekick__ClientAction",
                    "description": "The action to run when the state enters neutral."
                },
                "neutralContent": {
                    "description": "The content appearing in the (neutral) non-checked state",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__ToggleStateAction": {
            "description": "An Action which supports toggling the checked state\nand logging different events based upon the state.",
            "id": "Sidekick__ToggleStateAction",
            "properties": {
                "checkedActionType": {
                    "description": "The action raised when the action is checked",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "checkedLabel": {
                    "description": "Label displayed when the state is checked",
                    "type": "string"
                },
                "clearedActionType": {
                    "description": "The action raised when the action is cleared from checked or unchecked to\nneutral",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "neutralLabel": {
                    "description": "Label displayed when the state is unchecked",
                    "type": "string"
                },
                "state": {
                    "description": "The current state, either checked, unchecked, or neutral",
                    "enum": [
                        "CHECKED",
                        "NEUTRAL",
                        "UNCHECKED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "talkbackCheckedLabel": {
                    "description": "Label dictated by talkback when the state is checked",
                    "type": "string"
                },
                "talkbackNeutralLabel": {
                    "description": "Label dictated by talkback when the state is neutral. This is generally\nwhen the user has focused on the card.",
                    "type": "string"
                },
                "talkbackUncheckedLabel": {
                    "description": "Label dictated by talkback when the state is unchecked",
                    "type": "string"
                },
                "uncheckedActionType": {
                    "description": "The action raised when the action is unchecked.",
                    "enum": [
                        "INVALID",
                        "DISMISS",
                        "DISMISS_NOTIFICATION",
                        "DISMISS_FOR_AREA",
                        "DISMISS_COLLECTION",
                        "DETAILS",
                        "RENAME_PLACE",
                        "DELETE_PLACE",
                        "RESTORE",
                        "NAVIGATE",
                        "EDIT_HOME",
                        "EDIT_WORK",
                        "DELIVER_ACTIVE_NOTIFICATION",
                        "REQUEST_PLACE_CONFIRMATION",
                        "ADD",
                        "EXCLUDE_TERM",
                        "CLICK",
                        "VIEW",
                        "CARD_VISIBLE",
                        "CLICK_NOTIFICATION",
                        "CLICK_NOTIFICATION_ACTION",
                        "LIKE_CARD",
                        "DISLIKE_CARD",
                        "CLICK_WIDGET",
                        "INTERESTED",
                        "NOT_INTERESTED",
                        "CLEARED",
                        "SNOOZE_NOTIFICATION",
                        "SCHEDULE_NOTIFICATION",
                        "DELETE",
                        "ANSWER_TRAINING_QUESTION",
                        "SNOOZE_REMINDER",
                        "POSITIVE",
                        "NEGATIVE",
                        "GROUP_EXPAND",
                        "CARD_MENU_OPEN",
                        "CARD_ACTIONS_SWIPE",
                        "CARD_MENU_CLOSE",
                        "DISMISS_TRAIL_OK",
                        "DISMISS_TRAIL_SETTINGS",
                        "DIRECTIONS",
                        "PHOTO_ATTRIBUTION",
                        "CARD_SETTINGS",
                        "CHANGE_TRANSPORTATION_MODE",
                        "TIME_TO_LEAVE_MODIFICATION",
                        "LIST_CARD_EXPANDED_DETAILS",
                        "LIST_CARD_ROW_COLLAPSE",
                        "LIST_CARD_ROW_EXPAND",
                        "LIST_CARD_SHOW_MORE",
                        "LIST_CARD_SHOW_LESS",
                        "LIST_CARD_ATTRIBUTION",
                        "SURVEY_ANSWER",
                        "FOREGROUND_START",
                        "FOREGROUND_END",
                        "READING_VIEW",
                        "READING_VIEW_FIRST_SCROLL",
                        "READING_VIEW_CLICK_OUTBOUND",
                        "READING_VIEW_ZOOM",
                        "READING_VIEW_MENU_NEXT",
                        "READING_VIEW_MENU_PREV",
                        "READING_VIEW_NEXT_SWIPE",
                        "READING_VIEW_PREV_SWIPE",
                        "READING_VIEW_MENU_OPEN",
                        "READING_VIEW_MENU_CLOSE",
                        "READING_VIEW_MENU_BROWSER",
                        "READING_VIEW_MENU_SHARE",
                        "READING_VIEW_MENU_REFRESH",
                        "READING_VIEW_MENU_FEEDBACK",
                        "READING_VIEW_MENU_HELP",
                        "ALBUM_PLAY_STORE",
                        "APP_SUGGESTION_LAUNCH_APP",
                        "APP_SUGGESTION_OPEN_MARKET",
                        "ATTRACTIONS_LIST_SHOW_MORE",
                        "ATTRACTIONS_LIST_VIEW_PLACE_PAGE",
                        "BARCODE_BOARDING_PASS_EMAIL",
                        "BARCODE_MANAGE_FLIGHT",
                        "BATTERY_DISABLE_POWER_SAVING_MODE",
                        "BATTERY_ENABLE_POWER_SAVING_MODE",
                        "BILL_MAKE_PAYMENT",
                        "BILL_VIEW_EMAIL",
                        "BILL_SECONDARY_PAGE",
                        "BIRTHDAY_CARD_GPLUS_POST",
                        "BIRTHDAY_CARD_VIEW_CONTACT",
                        "BOOK_PLAY_STORE",
                        "BROWSE_MODE_AUTHOR_LURE",
                        "BROWSE_MODE_INTEREST_UPDATE_LURE",
                        "BROWSE_MODE_TRAVEL_LURE",
                        "BROWSE_MODE_READING_LURE",
                        "BROWSE_MODE_ENTITY_ROW",
                        "BROWSE_MODE_AUTHOR_STORY_ROW",
                        "BROWSE_MODE_VIDEO_ROW",
                        "BROWSE_MODE_WEB_LINK",
                        "BROWSE_MODE_READING_STORY_ROW",
                        "CALENDAR_EMAIL_GUESTS",
                        "CALENDAR_VIEW_IN_MAPS",
                        "CAR_RENTAL_CALL",
                        "CAR_RENTAL_MANAGE_RESERVATION",
                        "CAR_RENTAL_VIEW_EMAIL",
                        "CHROMECAST_ACTION_BUTTON_CLICK",
                        "CHROMECAST_PHOTO_CLICK",
                        "CONCERT_TICKET_MANAGE_RESERVATION",
                        "CONCERT_TICKET_VIEW_EMAIL",
                        "CONTACT_CARD_VIEW_CONTACT",
                        "CONTACT_SUGGESTION_PHONE",
                        "CONTACT_SUGGESTION_SMS",
                        "CURRENCY_EXCHANGE_DISCLAIMER",
                        "EVENT_COVER_PHOTO_DETAILS",
                        "EVENT_LEARN_MORE",
                        "EVENT_VIEW_LOCATION",
                        "FLIGHT_STATUS_CHECKIN",
                        "FLIGHT_STATUS_FIND_ALTERNATIVE_FLIGHTS",
                        "FLIGHT_STATUS_MANAGE_FLIGHT",
                        "FLIGHT_STATUS_NAVIGATE",
                        "FLIGHT_STATUS_VIEW_EMAIL",
                        "FREQUENT_PLACE_ALT_ROUTE",
                        "FREQUENT_PLACE_BUSINESS_DETAILS",
                        "FREQUENT_PLACE_BUSINESS_DETAILS_ROW",
                        "FREQUENT_PLACE_CALL",
                        "FREQUENT_PLACE_CANCEL_SHARE_LOCATION",
                        "FREQUENT_PLACE_CONFIRM_HOME_WORK",
                        "FREQUENT_PLACE_DELETE_PLACE",
                        "FREQUENT_PLACE_EDIT_HOME_WORK",
                        "FREQUENT_PLACE_EXPAND_MAP",
                        "FREQUENT_PLACE_MANAGE_LOCATION_SETTINGS",
                        "FREQUENT_PLACE_RENAME_PLACE",
                        "FREQUENT_PLACE_RESERVATION_MANAGE_RESERVATION",
                        "FREQUENT_PLACE_RESERVATION_CHECKIN",
                        "FREQUENT_PLACE_RESERVATION_VIEW_EMAIL",
                        "FREQUENT_PLACE_RESERVATION_VIEW_PLACE",
                        "FREQUENT_PLACE_SHARE_LOCATION",
                        "FREQUENT_PLACE_SCHEDULE_NOTIFICATION",
                        "GENERIC_CARD_BUTTON_CLICK",
                        "GENERIC_TICKET_VIEW_EMAIL",
                        "GENERIC_TICKET_CALL",
                        "GENERIC_TICKET_WEB",
                        "GENERIC_TV_PROGRAM_TV_CREW_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_CAST_MEMBER",
                        "GENERIC_TV_PROGRAM_TV_READ_MORE",
                        "GENERIC_TV_PROGRAM_PHOTO",
                        "GOOGLE_PLAY_SERVICES_RECOVER",
                        "INFERRED_EVENT_CREATE",
                        "INFERRED_EVENT_EDIT",
                        "INFERRED_EVENT_IGNORE",
                        "INFERRED_EVENT_KEEP_TRACK",
                        "INFERRED_EVENT_LOCATION_MODIFICATION",
                        "INFERRED_EVENT_TIME_MODIFICATION",
                        "INFERRED_EVENT_VIEW_EMAIL",
                        "LAST_TRAIN_HOME_SCHEDULE",
                        "MORE_STORIES_SECONDARY_PAGE",
                        "MOVIE_LEARN_MORE",
                        "MOVIE_LIST_MORE",
                        "MOVIE_RATINGS_LINK",
                        "MOVIE_WEB_URL",
                        "MOVIE_TICKET_VIEW_EMAIL",
                        "MOVIE_TICKET_VIEW_TRAILER",
                        "MOVIE_VIEW_TRAILER",
                        "NEARBY_PLACES_LIST_SEARCH_MORE",
                        "NEWS_PHOTO_STORY",
                        "PACKAGE_TRACKING_TRACK_PACKAGE",
                        "PACKAGE_TRACKING_VIEW_EMAIL",
                        "PACKAGE_TRACKING_PICKUP_DIRECTIONS",
                        "PACKAGE_TRACKING_SECONDARY_PAGE",
                        "PACKAGE_TRACKING_MANAGE_DELIVERY",
                        "PERSONAL_SECONDARY_PAGE",
                        "PHOTO_SPOT_OPEN_GALLERY",
                        "PROMO_CARD_SHOW_CARD_LIST",
                        "PUBLIC_ALERT_DETAILS",
                        "REAL_ESTATE_LEARN_MORE",
                        "REAL_ESTATE_SHOW_COMPS",
                        "REAL_ESTATE_SHOW_SIMILAR",
                        "RELEVANT_WEBSITE_LEARN_MORE",
                        "RELEVANT_WEBSITE_LEARN_MORE_ROW",
                        "REMINDER_BUTTON_DONE",
                        "REMINDER_BUTTON_UNDO",
                        "REMINDER_DELETE_PROMPT_NO",
                        "REMINDER_DELETE_PROMPT_YES",
                        "REMINDER_EDIT_OR_DELETE",
                        "REMINDER_PROMO_REMIND_ME",
                        "REMINDER_SNOOZE",
                        "REMINDER_DELETE_SUBSCRIPTION",
                        "REMINDER_CALL",
                        "REMINDER_EMAIL",
                        "REMINDER_EVENT",
                        "REMINDER_PAY",
                        "REMINDER_URL",
                        "REMINDER_DONE",
                        "REMINDER_VIEW_ALL",
                        "REMINDER_WEATHER",
                        "REMINDER_STOCK",
                        "RESEARCH_PAGE_CLICK_ROW",
                        "RESEARCH_TOPIC_EXPLORE_MORE",
                        "RESEARCH_TOPIC_PHOTO_ATTRIBUTION",
                        "RESEARCH_TOPIC_VIEW_RESEARCH_PAGE",
                        "SPORT_EVENT_TICKET_MANAGE_RESERVATION",
                        "SPORT_EVENT_TICKET_VIEW_EMAIL",
                        "SPORT_LURE_LIST",
                        "SPORT_LURE_LIST_MORE",
                        "SPORT_EVENT_LURE",
                        "SPORT_HIGHLIGHT",
                        "SPORT_SCORE_BOX_SCORE",
                        "SPORT_SCORE_PLAY_BY_PLAY",
                        "SPORT_SCORE_PREVIEW",
                        "SPORT_SCORE_RECAP",
                        "SPORT_SCORE_STREAM",
                        "STOCK_QUOTE_LIST_DISCLAIMER",
                        "STOCK_QUOTE_LIST_ROW",
                        "STOCK_QUOTE_LIST_SHOW_MORE",
                        "STOCK_QUOTE_LIST_STOCK_CHART",
                        "THINGS_TO_WATCH_VOD_BUTTON_CLICK",
                        "TIME_TO_LEAVE_TOGGLE",
                        "TRAFFIC_INCIDENT_DETAILS",
                        "TRANSIT_STATION_DETAILS",
                        "TRANSLATE_TRANSLATE",
                        "TRANSPORTATION_MANAGE_RESERVATION",
                        "TRANSPORTATION_VIEW_EMAIL",
                        "TRANSPORTATION_SECONDARY_PAGE",
                        "TUTORIAL_CUSTOMIZE_PROFILE",
                        "TV_KNOWLEDGE_SNIPPET_ATTRIBUTION",
                        "TV_KNOWLEDGE_ROW",
                        "TV_VIEW_LIVE_CONTENT",
                        "TV_RECOGNITION_DETECT",
                        "TV_RELATED_WEBSITE_ROW",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_FULLSCREEN",
                        "YOUTUBE_BRAND_ICON_TAPPED_FROM_INLINE",
                        "YOUTUBE_RELATED_VIDEO_TAPPED",
                        "YOUTUBE_VISIT_ADVERTISER_TAPPED",
                        "INLINE_VIDEO_FULLSCREEN_BUTTON_TAPPED",
                        "INLINE_VIDEO_PLAY",
                        "VIEW_MAP",
                        "WALLET_LOYALTY_LINK_TO_WALLET",
                        "WEATHER_CHANGE_UNITS",
                        "WEBSITE_UPDATE_READ_FULL_STORY_ROW",
                        "WEBSITE_UPDATE_READ_FULL_STORY_SINGLE_CARD",
                        "THINGS_TO_WATCH_LURE",
                        "REDIRECT_TO_TV_VIDEO_CONFIGURATIONS",
                        "PRODUCT_LANDING_PAGE",
                        "PRODUCT_LIST_URL",
                        "IN_STORE_WEBSITE_CLICK",
                        "IN_STORE_FLYER_CLICK",
                        "IN_STORE_RETURN_POLICY_CLICK",
                        "IN_STORE_INVENTORY_SEARCH_CLICK",
                        "INTEREST_PICKER_ADD",
                        "INTEREST_PICKER_CLEAR",
                        "INTEREST_PICKER_REMOVE",
                        "THINGS_TO_WATCH_TRAILER_CLICK",
                        "CONTACT_VIA_GOOGLEPLUS",
                        "CONTACT_VIA_EMAIL",
                        "VIEW_PHOTO",
                        "ANALYSIS_VIEW",
                        "INFERRED_VIEW",
                        "ANALYSIS_CLICK_POSITIVE",
                        "FIELD_TRIP_LURE",
                        "FIELD_TRIP_BROWSE_MODE",
                        "VEHICLE_PARK_LOCATIONS_MORE",
                        "VEHICLE_PARK_LOCATIONS_LEARN_MORE",
                        "TRANSIT_ROUTE_UPDATE_SELECT",
                        "TRANSIT_ROUTE_UPDATE_CANCEL",
                        "ENABLE_LOCATION_REPORTING",
                        "THINGS_TO_WATCH_RECOMMENDATION_CLICK",
                        "UNCLICKABLE_MODULE",
                        "WEATHER_ATTRIBUTION_URL",
                        "WEATHER_SECONDARY_PAGE",
                        "HOTWORD_PROMO",
                        "THINGS_TO_DO_LIST_LURE",
                        "DEPRECATED_SET_LINKED_DEVICE_FOR_THIRD_PARTY",
                        "VOICE_OF_GOOGLE_POSITIVE",
                        "VOICE_OF_GOOGLE_NEGATIVE",
                        "LOCATION_INTERSTITIAL_POSITIVE",
                        "LOCATION_INTERSTITIAL_NEGATIVE",
                        "GOOGLE_PLUS_STORY_VIEW",
                        "THIRD_PARTY_WELCOME_LEARN_MORE",
                        "THIRD_PARTY_WELCOME_SETTINGS",
                        "THIRD_PARTY_CARD_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_SETTINGS",
                        "THIRD_PARTY_LOCATION_NOTICE_LEARN_MORE",
                        "POST_PURCHASE_PLAY_PRODUCT_VIDEO",
                        "POST_PURCHASE_SEARCH_FOR_MANUAL",
                        "THIRD_PARTY_CLICK_CONTENT",
                        "THIRD_PARTY_CLICK_BUTTON_ONE",
                        "THIRD_PARTY_CLICK_BUTTON_TWO",
                        "THIRD_PARTY_CLICK_ADDRESS",
                        "THIRD_PARTY_CLICK_MAP",
                        "THIRD_PARTY_PLACE_CALL",
                        "THIRD_PARTY_SELECTOR_CHOICE",
                        "THIRD_PARTY_VIEW_VIDEO",
                        "REPORT_THIRD_PARTY_CARD",
                        "PRICE_DROP_MERCHANT_PAGE",
                        "PRICE_DROP_SHOPPING_PAGE",
                        "PRICE_DROP_SUBSCRIBE",
                        "PRICE_DROP_UNSUBSCRIBE",
                        "SHOPPING_TASK_LURE_CLICK",
                        "POPULAR_STYLES_CLICK",
                        "DISPLAYED_NOTIFICATION",
                        "DELIVERED_NOTIFICATION",
                        "EXPANDED_NOTIFICATION",
                        "THIRD_PARTY_OPT_IN_CLICK",
                        "THIRD_PARTY_OPT_IN_LEARN_MORE_CLICK",
                        "WEB_AND_APP_HISTORY_SETTING_CLICK",
                        "LOCATION_HISTORY_SETTING_CLICK",
                        "WEB_AND_APP_AND_LOCATION_HISTORY_SETTING_CLICK",
                        "HOME_WORK_LOCATION_SETTING_CLICK",
                        "STALE_HOME_WORK_LOCATION_SETTING_CLICK",
                        "ADD_SPORTS_TEAM",
                        "ADD_STOCK",
                        "BLACKLIST_EVENT",
                        "BLACKLIST_LOCATION",
                        "BLACKLIST_SPORTS_TEAM",
                        "BLACKLIST_TOPIC",
                        "BLACKLIST_TRIP",
                        "DISABLE_BILLS",
                        "DISABLE_STOCKS",
                        "OPEN_CLOSET",
                        "OPEN_INTEREST_PICKER",
                        "CLOSET_OPEN_PICKER",
                        "CLOSET_JUMP_PAGE",
                        "CLUSTER_MENU_OPEN",
                        "CAROUSEL_SCROLL",
                        "STREAM_SCROLL",
                        "TUTORIAL_DISMISS",
                        "CARD_FEEDBACK",
                        "ADD_REMINDER",
                        "DEPRECATED_VISIBLE_BACKGROUND_REFRESH",
                        "HOTEL_PRICE_ITEM_CLICK",
                        "HOTEL_PRICE_SEARCH_MORE",
                        "HOTEL_PRICE_VIEW_EMAIL",
                        "NON_PERSONALZED_STREAM_WELCOME_CLICK",
                        "TUTORIAL_WARM_WELCOME_CONFIRM_CLICK",
                        "NOW_OPT_IN_PROMO_CLICK",
                        "SCREEN_ASSIST_CALL",
                        "SCREEN_ASSIST_CREATE_EVENT",
                        "SCREEN_ASSIST_CREATE_REMINDER",
                        "SCREEN_ASSIST_GENERIC_SEARCH_ACTION",
                        "SCREEN_ASSIST_OPEN_GENERIC_URL",
                        "SCREEN_ASSIST_VIEW_PRODUCT",
                        "SCREEN_ASSIST_VIEW_RESTAURANT",
                        "SCREEN_ASSIST_VIEW_MOVIE",
                        "SCREEN_ASSIST_VIEW_MOVIE_TRAILER",
                        "SCREEN_ASSIST_KEEP_UPDATED",
                        "SCREEN_ASSIST_KEEP_UPDATED_CANCEL",
                        "SCREEN_ASSIST_NAVIGATE",
                        "SCREEN_ASSIST_VIEW_BUSINESS",
                        "SCREEN_ASSIST_VIEW_MAP",
                        "SCREEN_ASSIST_SHARE",
                        "SCREEN_ASSIST_REISSUE",
                        "SCREEN_ASSIST_TRANSLATE",
                        "SCREEN_ASSIST_COPY_TO_CLIPBOARD",
                        "GMAIL_LOCATION_OF_INTEREST_VIEW_DETAILS",
                        "ENABLE_LOCATION_SETTINGS_SUCCESS",
                        "ENABLE_LOCATION_SETTINGS_CANCELLED",
                        "ENABLE_LOCATION_SETTINGS_CLICK",
                        "MANAGE_NOTIFICATIONS",
                        "BOOLEAN_CLICK",
                        "BOOLEAN_LONG_VIEW",
                        "BOOLEAN_VIEW",
                        "BOOLEAN_LONG_VIEW_OR_CLICK",
                        "LONG_CLICK",
                        "RESTAURANT_TITLE_CLICK",
                        "RESTAURANT_MENU_LINK",
                        "GOOGLE_REVIEWS_LINK",
                        "WRITE_REVIEW_LINK",
                        "VOG_PLACE_CONFIRM",
                        "VOG_PLACE_DENY",
                        "VOG_PLACE_CONFIRM_BROWSE_MODE",
                        "VOG_PLACE_DENY_BROWSE_MODE",
                        "AT_A_PLACE_NOTIFICATION_CLICK",
                        "PLACE_CONFIRM",
                        "PLACE_WEAK_CONFIRM",
                        "PLACE_DENY",
                        "PLACE_CHOOSE",
                        "INFERRED_REMINDER_CREATE",
                        "INFERRED_REMINDER_VIEW_EMAIL",
                        "REMOVED_NOTIFICATION",
                        "TOPDECK_FEEDBACK_POSITIVE",
                        "TOPDECK_FEEDBACK_NEGATIVE",
                        "TOPDECK_FEEDBACK_DISPLAYED",
                        "MODULE_QUERY_BOX_ENTER",
                        "AUTO_ACTIVATED_WELCOME_CLICK",
                        "NOTIFICATION_FEEDBACK_RATING_1",
                        "NOTIFICATION_FEEDBACK_RATING_2",
                        "NOTIFICATION_FEEDBACK_RATING_3",
                        "NOTIFICATION_FEEDBACK_RATING_4",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_1",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_2",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_3",
                        "NOTIFICATION_FEEDBACK_SUPPLEMENTARY_RATING_4",
                        "NOTIFICATION_FEEDBACK_THUMBS_UP",
                        "NOTIFICATION_FEEDBACK_THUMBS_DOWN",
                        "NOTIFICATION_FEEDBACK_DISPLAYED",
                        "NOTIFICATION_FEEDBACK_CLICKED",
                        "NOTIFICATION_FEEDBACK_CANCELED",
                        "NOTIFICATION_FEED_PROMPT_OPT_IN",
                        "NOTIFICATION_FEED_PROMPT_OPT_OUT",
                        "NOTIFICATION_FEED_PROMPT_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_HERE",
                        "DISAMBIGUATION_QUESTION_NOT_HERE",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_1",
                        "DISAMBIGUATION_QUESTION_ALTERNATE_LOCATION_2",
                        "DISAMBIGUATION_QUESTION_PASSING_BY",
                        "DISAMBIGUATION_QUESTION_NONE_OF_ABOVE",
                        "DISAMBIGUATION_QUESTION_DISPLAYED",
                        "DISAMBIGUATION_QUESTION_CLICKED",
                        "DISAMBIGUATION_QUESTION_CANCELED",
                        "PERSONAL_NUMBERS_OPEN_EMAIL",
                        "SPLIT_STREAM_TAB_CHANGE",
                        "SPLIT_STREAM_WARM_WELCOME_CLICK",
                        "SPLIT_STREAM_BOTTOM_BAR_PROMO_CLICK",
                        "KENOW_PUSHKAR_APP",
                        "KENOW_THIRD_PARTY_ACTION",
                        "KENOW_YOUTUBE_PLAY",
                        "NEW_CONTENT_POPUP_VIEW",
                        "NEW_CONTENT_POPUP_CLICK",
                        "CARD_CAP_CLICK",
                        "WELCOME_FOR_EXISTING_USERS_CLICK",
                        "MINUS_ONE_PROMO_CLICK",
                        "INSTALL_APP_ICON",
                        "NOW_FEED_TOOLTIP_DISMISS",
                        "MUTED_INLINE_VIDEO_CLICK",
                        "FEED_AD_WTA",
                        "AD_DOMAIN_BLOCK",
                        "SHARE",
                        "SAVE_FOR_LATER",
                        "SAVE_FOR_LATER_UNDO",
                        "FEED_STORY_MORE",
                        "FEED_STORY_MORE_UNDO",
                        "FEED_STORY_LESS",
                        "FEED_STORY_LESS_UNDO",
                        "FEED_REACTION_FROM_DEFAULT",
                        "FEED_REACTION_FROM_SET",
                        "FEED_FOLLOW",
                        "MANAGE_SUBSCRIPTIONS_URL",
                        "SHOW_SPOILER",
                        "HIDE_SPOILER",
                        "NOTIFICATIONS_OPT_OUT",
                        "NOTIFICATIONS_OPT_IN",
                        "BILINGUAL_OPT_OUT",
                        "NOTIFICATION_SUBSCRIBE",
                        "NOTIFICATION_SUBSCRIPTION_TEASER_DECLINE",
                        "NOTIFICATION_UNSUBSCRIBE",
                        "HEART_REACTION",
                        "HEART_REACTION_UNDO",
                        "INLINE_INJECT_COLLECTION"
                    ],
                    "enumDescriptions": [
                        "Default returned if no Type is specified.",
                        "",
                        "",
                        "",
                        "Action to dismiss the collection card.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Sometimes it's useful to consider an active notification as an action,\nand record it (e.g. to allow the server to avoid re-sending a\nnotification for the same or a related entry).",
                        "The server may request confirmation that the user is interested in\ntraffic to a particular place. This \"action\" is not an action in the\ntraditional sense, and instead reflects that a confirmation dialog was\nshown to the user for a place.",
                        "Used to add or update entries on the server. When sent as part of an\nExecutedUserAction, its input_entry field should be populated with\nthe new or updated entries.",
                        "For entries that are triggered by query terms (e.g. news cards), stop\nusing the designated term in the entry for triggering future cards.",
                        "Entries such as events which have additional information available\nby clicking may have click actions attached. When the entry is clicked,\na click action (with a target) is saved on the server.",
                        "The user viewed the entry.",
                        "Indicates that the card is visible to the user. A card is visible if any\npart of the card is showed in the viewport. See go/now-view-logging for\ndetails.",
                        "When a notification is clicked.",
                        "When an action on a notification (e.g. navigation) is clicked.",
                        "To indicate the card was useful.",
                        "To indicate the card was not useful.",
                        "Indicates that a user has clicked on an entry in a widget. This is\ndistinguished from CLICK, which is used to specify a click on a card\ninside of the app.",
                        "Indicates that the user is or is not interested in the associated entry.\nThis is normally sent back when the user responds to a question  to\nguage interest. If the entry is a list of sub-entities (like Stocks or\nSports), but is not a group_entry with a list of child Entry protos,\nthen the interested_item_index should also be populated to indicate\nwhich sub-entity the action applies to.",
                        "",
                        "User cleared their interest in the entry, setting it back to the default\nstate",
                        "Indicates that a user snoozed a notification which will return\nat the end of the snooze period.",
                        "To schedule notification by user action (e.g. last train home).",
                        "Delete the data associated with the entry.",
                        "Indicates that the user has answered a training question associated\nwith the entry.",
                        "Indicates that a user snoozed a reminder.",
                        "Indicates a positive or negative answer to a question posed to the user.\nThe wording of the question and strings for the answers may be defined by\nother teams, but it is assumed that there is a positive answer and a\nnegative answer, and these action types correspond to these.",
                        "",
                        "Indicates that a group card was expanded to show contents.",
                        "Indicates that the back of card menu was opened.",
                        "Indicates the user swiped to open card actions.",
                        "Indicates that the back of card menu was closed.",
                        "",
                        "",
                        "Several card types can request directions, which opens up a directions\nlist in Google Maps without starting navigation.",
                        "The text for a photo which describes where the photo came from, ie.\nthe Google copyright at the bottom of a photo.",
                        "The option in the back of card menu to go to settings for this card.",
                        "",
                        "Indicates the user modified the Time To Leave properties on a card.",
                        "Actions on list cards.",
                        "",
                        "",
                        "",
                        "",
                        "Clicked the attribution field on the card.",
                        "Indicates the user answered a question in survey mode.",
                        "Action on the root entry tree node, which is recorded when the user\nstarts viewing cards.",
                        "Action on the root entry tree node, which is recorded when the user\nstops viewing cards.",
                        "Actions for tracking ReadingView engagement, the webview used for Browse\nMode pages.\nSee go/reading-mode-logging\nWeb page loaded in the view (equivalent of a card view). Records view\nduration (execution_time_ms), page load duration (page_load_time_ms) and\nviewed dimensions. View duration recording starts after the page has\nfinished rendering. Both execution_time_ms and page_load_time_ms could be\n0 if the view was destroyed before the page loaded.",
                        "The first scroll event on the web page (equivalent of a card click).",
                        "A link from the web page was clicked (and opened in a browser).",
                        "User zoomed in / out on the article.",
                        "Navigation actions.",
                        "",
                        "",
                        "",
                        "Overflow menu actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Card specific click targets. These actions are only used by a\nspecific entry type. The naming convention should be:\n{ENTRY_TYPE}_{ACTION}. Please keep this list ordered alphabetically.",
                        "Indicates a suggested app was launched.",
                        "Indicated the user opened the market to view a suggested app .",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Activating browse mode via lures.",
                        "",
                        "",
                        "",
                        "Clicked an entity row on a secondary page.",
                        "Clicked on story row in an author lure.",
                        "Clicked a video row on a seconary page.",
                        "Clicked a web link on a secondary page.",
                        "Clicked on story row in reading mode lure.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on a contact card",
                        "Clicked a link to phone a contact suggestion.",
                        "Clicked a link to sms a contact suggestion",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked a link or button that opens agenda/personal browse mode.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The explicit done button on main screen reminder cards.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Clicked on the list of sport lures.",
                        "Clicked on \"see more\" in the list of sport lures.",
                        "Clicked on a lure for a SportEventEntry",
                        "Clicked on a highlight entry.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Click on the customize tutorial's profile settings.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Interest picker actions",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Counts not just raw views but 'implicit' views which are\ndetermined based on actions like clicks and details.\nSee https://b/8520319",
                        "Counts views which are inferred on cards based on views above and below",
                        "Counts all clicks that signify some sort of positive engagement\non a card.",
                        "Click on a Field Trip lure card",
                        "Click on a Field Trip browse mode (aka secondary page) card",
                        "",
                        "",
                        "Actions to select a transit route for enroute updates.",
                        "",
                        "Action to enable location history and reporting on the device.",
                        "Click on a thing-to-watch recommendation in a QP list lure.",
                        "Action when a user has clicked on a quantum module that doesn't actually\nhave an action associated with it. Used to determine the impact of the\nquantum UI refresh.",
                        "Action when the user clicked the link to the weather data provider's URL",
                        "",
                        "Click on a Hotword promo card.",
                        "Click on a Things To Do list lure card.",
                        "",
                        "Positive action for the voice-of-google message.",
                        "Negative action for the voice-of-google message.",
                        "Acknowledged interstitial warning about 3rd party click destination\npotentially learning user's location due to location triggered 3rd party\ncard.",
                        "Did not acknowledge interstitial warning about leaking user's location.",
                        "G+ stories card",
                        "User clicks \"learn more\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party welcome card.",
                        "User clicks \"settings\" on 3rd party card (iOS only).",
                        "User actions for the third party location notice card.",
                        "",
                        "User clicks \"play product video\" on post purchase card.",
                        "User clicks \"search for manual\" on post purchase card.",
                        "Third party card actions:\nA click on the main content of a card, e.g. the list items of a\nlist card.",
                        "A click on the first action button at the bottom of a card",
                        "A click on the second action button at the bottom of a card",
                        "A click on the logo in the header of a card.",
                        "A click on the map in a card.",
                        "A click on the \"place call\" button of an address-style action button.",
                        "User selected a value in a selector module (drop down).",
                        "A click to view the video on the 3rd party video card.",
                        "User clicked on 'Report this card'",
                        "User click price drop card to see merchant page for the product.",
                        "User click price drop card to see shopping property for the product.",
                        "Subscribe to price drop notifications for a product.",
                        "Unsubscribe from price drop notifications for a product.",
                        "User clicks on shopping task lure card.",
                        "User clicks on popular styles card.",
                        "Notification was displayed on the client",
                        "Notification was delivered from the server.\nOnly used for platform where delivering of notification is separate\nfrom the client actual displaying, e.g. iOS.\nThis will be logged in addition to DELIVERED_ACTIVE_NOTIFICATION\nsince DELIVERED_ACTIVE_NOTIFICATION was already used in published client.",
                        "When user viewed the details of a notification without opening the app.\nCurrently it's only used for iOS 10 when user force-touch a notification.",
                        "Clicks on buttons of the third-party opt-in card which turns on settings\nneeded to enable receiving third-party cards.",
                        "",
                        "User click on web history card which turns on web history.",
                        "User click on location history card which turns on location history.",
                        "User click on combined WAA and LocationHistory card to turn on both\nsettings.",
                        "User click on the lure to add addresses to the closet.",
                        "User click on the lure to update stale addresses in the closet.",
                        "Actions used by lotic",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Scroll of stream in Now on Monet/MoMO streams in AGSA.",
                        "",
                        "User clicked on \"Send feedback\" CardAction.",
                        "",
                        "The entries were updated while the user was looking at them due to a\nrefresh not initiated by explicit user action (pull to refresh).\nDeprecated 11/2017 in AGSA 7.17.",
                        "Click on a hotel price list item.",
                        "Click on \"search for more hotels in $CITY\" link in hotelpricelist card.",
                        "Click on view confirmation link in hotelpricelist card.",
                        "Click on the non-personalized stream welcome card.",
                        "Click on the Lotic warm welcome card's \"OK, got it\" option.",
                        "Click on Now promo card for opt in.",
                        "Screen Assist actions.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Gmail location of interest card.",
                        "User accepted the dialog to enable location settings.",
                        "User cancelled the dialog to enable location settings.",
                        "User clicked card to open dialog to enable location settings.",
                        "Manage notifications click action type.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "At-a-place click actions.\nUser clicked the title of the restaurant card to view more info.",
                        "User clicked the link to the Local Search menu page.",
                        "User clicked the link to the Google Reviews page.",
                        "User clicked the link to write a review page.",
                        "User confirms Voice of Google notification.",
                        "User denies Voice of Google notification.",
                        "User confirms Voice of Google notification in browse mode.",
                        "User denies Voice of Google notification in browse mode.",
                        "User clicks at-a-place notification.",
                        "At-a-place click statistic actions.\nUser confirms the location inference, applied to high confidence\nand medium confidence places by selecting an action on that place.",
                        "User confirms the location inference, applied to high confidence\nand medium confidence places by selecting weaker actions.",
                        "User denies the location inference.",
                        "User selects a place from multiple inferences.",
                        "Inferred reminder actions.",
                        "",
                        "Notification was removed programmatically, not through user interaction.\ne.g. this action is recorded when notification is taken down because of\nexpiration or when notifications are removed because of the feed refresh.",
                        "",
                        "",
                        "",
                        "A click of the Enter (or Search) key of the keyboard for a query_box\nin a MODULE entry. Fired by QueryBoxModulePresenter.",
                        "Click on the auto-activated welcome card",
                        "Each of the following actions correspond to an option a user could choose\nwhile providing feedback on a notification.\nLink to mock: https://screenshot.googleplex.com/yLBRA0jG2cH",
                        "",
                        "",
                        "",
                        "When the user is displayed an inline notification action and the user\nclicks on \"Thumbs down\", a popup with various options is shown. These are\nthe actions that will be recorded when the user choosed one of those\noptions. To avoid conflating the feedback from this flow with the current\nnotification feedback flow, these are different from the\n\"NOTIFICATION_FEEDBACK_RATING_*\" actions defined above.\nLink to mock: https://screenshot.googleplex.com/aV7Hxz5N87k",
                        "",
                        "",
                        "",
                        "Actions for inline notification ratings.",
                        "",
                        "Notification feedback secondary action was displayed.",
                        "Notification feedback secondary action was clicked.",
                        "Notification feedback secondary action was clicked, but the user didn't\nsubmit feedback, i.e., they clicked on \"Cancel\".",
                        "Notification prompt opt actions",
                        "",
                        "",
                        "Actions for disambiguation questions in notifications.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Disambiguation question was displayed.",
                        "Disambiguation question was clicked.",
                        "Disambiguation question was clicked, but the user didn't submit feedback.",
                        "Action type for personal numbers clicks.",
                        "Action types for the split screen tabs.  When the user\nswitches tabs, we record this and the ExecutedUserAction\nidentifies which tab was switched to.",
                        "Click on the split stream dashboard welcome card.",
                        "Click on the dashboard feature promo.",
                        "Go to Pushkar App from KENow Bollywood Video Card",
                        "Go to Provider App from KENow Third Party  (Watch / Listen) Action Cards\n(i.e. Movie Streaming)",
                        "Go to Youtube channel from KENow Video Game Card",
                        "The user viewed the new-content popup for implicit app-open refresh.",
                        "The user clicked the new-content popup for implicit app-open refresh.",
                        "The user clicked the interest header (card cap).",
                        "Click on the welcome card on the top of the now feed.",
                        "Click on the minus one feature promo.",
                        "Action to install app icon on the home screen. Only applicable for\nAndroid.",
                        "Now feed tooltip dismiss action.",
                        "Click on the muted inline video card.",
                        "Ads specific actions.\nUser wants to see why this ad is shown in feed",
                        "User blocked an advertiser domain.",
                        "Feed Reactions (go/feed-reactions)\nShare the content with others.",
                        "Save the entry to read later.",
                        "An action to undo the SAVE_FOR_LATER action.",
                        "User wants to see more feed stories like this.",
                        "An action to undo the FEED_STORY_MORE action.",
                        "User wants to see fewer feed stories like this.",
                        "An action to undo the FEED_STORY_LESS action.",
                        "React (more/less) button is clicked when {@link State} is {@link DEFAULT}",
                        "React (more/less) button is click when {@link State} is {@link SET}",
                        "Action for following an interest on the feed.",
                        "Action for opening Manage Subscription URL.",
                        "Action to show spoilers on the feed.",
                        "Action to hide spoilers on the feed.",
                        "Client opted out of receiving any notifications.",
                        "Client opted into receiving notifications.",
                        "Client opted out of bilingual feed.",
                        "Client subscribed to a type of notification.\nCurrently not used on any client directly.",
                        "Client declined a notification subscription teaser.\nCurrently not used on any client directly.",
                        "Client unsubscribed to a type of notification after already being\nsubscribed.\nCurrently not used on any client directly.",
                        "Heart reactions. Please see go/public-reactions.",
                        "",
                        "Collection was inline injected (go/discover-inline-injection)."
                    ],
                    "type": "string"
                },
                "uncheckedLabel": {
                    "description": "Label displayed when the state is unchecked",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__Tooltip": {
            "description": "A message which contains the information necessary to\npopulate a tooltip for a clickable item.",
            "id": "Sidekick__Tooltip",
            "properties": {
                "awareTipId": {
                    "format": "int32",
                    "type": "integer"
                },
                "backgroundColor": {
                    "description": "The background color of the tooltip. Format: 0xaarrggbb.",
                    "format": "uint32",
                    "type": "integer"
                },
                "content": {
                    "description": "MetadataLine for the content and talkback of the tooltip.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The id of the tooltip used for triggering the tooltip.",
                    "type": "string"
                },
                "maxWidth": {
                    "description": "The maximum width of the tooltip in dp.",
                    "format": "int32",
                    "type": "integer"
                },
                "padding": {
                    "description": "The padding equally applied(top/bottom/start/end) around the\nmetadataLineView and the tooltip boundary in dp.",
                    "format": "int32",
                    "type": "integer"
                },
                "version": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__TrafficIncident": {
            "description": "A message that contains information related to traffic incidents.",
            "id": "Sidekick__TrafficIncident",
            "properties": {
                "attribution": {
                    "description": "The attribution text for the incident e.g. \"Reported via Waze app\"",
                    "type": "string"
                },
                "caption": {
                    "description": "Caption for the incident. Suitable to display as a title.",
                    "type": "string"
                },
                "description": {
                    "description": "The description for the incident e.g. \"Traffic incident on I-680 S.\"",
                    "type": "string"
                },
                "distanceMeters": {
                    "description": "Distance of the incident from the user along the most probably driving\npath.",
                    "format": "double",
                    "type": "number"
                },
                "incidentId": {
                    "description": "A unique ID associated with this incident.",
                    "format": "uint64",
                    "type": "string"
                },
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The location of the incident."
                },
                "type": {
                    "enum": [
                        "INCIDENT_ROAD_CLOSED",
                        "INCIDENT_ACCIDENT",
                        "INCIDENT_CONSTRUCTION",
                        "INCIDENT_SPEED_TRAP",
                        "INCIDENT_SPEED_CAMERA",
                        "INCIDENT_SUSPECTED_JAM",
                        "INCIDENT_SUSPECTED_CLOSURE",
                        "INCIDENT_LANE_CLOSURE",
                        "INCIDENT_STALLED_VEHICLE",
                        "INCIDENT_OBJECT_ON_ROAD",
                        "INCIDENT_JAM",
                        "INCIDENT_ICE",
                        "INCIDENT_SNOW",
                        "INCIDENT_FOG",
                        "INCIDENT_FLOOD",
                        "INCIDENT_OTHER"
                    ],
                    "enumDescriptions": [
                        "Road/bridge/ramp is completely closed or blocked and can't be\ntravelled.",
                        "Collision, multi-vehicle accident, injuries, medical emergencies.",
                        "Road construction, maintenance, paving, other types of road work.",
                        "Mobile speed camera.",
                        "Fixed speed camera.",
                        "A suspected stretch of slow traffic reported by users.",
                        "An unconfirmed road closure.",
                        "The road is not fully closed, some lanes are still open.",
                        "A vehicle is stalled or stopped on the road, which may impact traffic in\nthe area. Vehicle may be in the roadway or on a shoulder.",
                        "An object or debris is on the road and may impact traffic.",
                        "A Jamcident, describing a stretch of slow traffic.\nIncidents of this type ARE bad traffic.",
                        "Adverse road conditions or explicit incidents which are attributed to\nweather, e.g., icy roads, snow accumulation, etc. This does not include\nexplicit weather-related closures which should be mapped\nto INCIDENT_ROAD_CLOSED.",
                        "",
                        "",
                        "",
                        "Everything else not handle explicitly above. For example:\nobjects, people or animals on the roadway; slippery road surface,\nbroken road signs"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TrafficIncidentEntry": {
            "description": "The traffic incidents a user is likely to hit.",
            "id": "Sidekick__TrafficIncidentEntry",
            "properties": {
                "multipleTrafficIncidents": {
                    "description": "Text to indicate that multiple incidents were reported along the route.\nNot logged because this is a fixed string (as of 2/19/2014).",
                    "type": "string"
                },
                "trafficIncident": {
                    "description": "Ordered in decreasing order of relevance.",
                    "items": {
                        "$ref": "Sidekick__TrafficIncident"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__TransitStationEntry": {
            "description": "This is a flattened, localized, and selective version of the transit\nstation proto at maps/transit/tss/proto/tss_service.proto.",
            "id": "Sidekick__TransitStationEntry",
            "properties": {
                "alertPool": {
                    "description": "Holds both station and line alerts",
                    "items": {
                        "$ref": "Sidekick_CommuteSummaryTransitDetails_Alert"
                    },
                    "type": "array"
                },
                "gmmOptionsBase64": {
                    "description": "base 64 encoded proto containing GMM-specific intent options",
                    "type": "string"
                },
                "line": {
                    "items": {
                        "$ref": "Sidekick_TransitStationEntry_Line"
                    },
                    "type": "array"
                },
                "responseEpochSeconds": {
                    "description": "An epoch to which all times in this entry are relative.\nAs of Dec 2013, this value always be 0 (unused).",
                    "format": "int64",
                    "type": "string"
                },
                "scheduleUrl": {
                    "description": "URL for station details \"http://www3.rtd-denver.com/\"",
                    "type": "string"
                },
                "stationAlertIndex": {
                    "description": "Indices of station alerts in alert pool",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "stationId": {
                    "$ref": "Sidekick__GeostoreFeatureId",
                    "description": "The Oyster FeatureId of the station."
                },
                "stationLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "Location of the transit station"
                },
                "stationName": {
                    "description": "Localized station name \"Boulder Transit Center\"",
                    "type": "string"
                },
                "stationType": {
                    "description": "Localized station type \"Train station\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TransportationEntry": {
            "description": "The transportation single card.\nSee mocks at:\nhttps://folio.googleplex.com/assist-ux/predictive-ux/transportation/latest/",
            "id": "Sidekick__TransportationEntry",
            "properties": {
                "additionalText": {
                    "description": "Additional text for DOC check.",
                    "type": "string"
                },
                "arrivalCity": {
                    "description": "The arrival city.",
                    "type": "string"
                },
                "arrivalStationLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "The arrival station's geo information."
                },
                "arrivalStationName": {
                    "description": "The arrival station's name.",
                    "type": "string"
                },
                "arrivalTime": {
                    "$ref": "Sidekick__TimeWithZone",
                    "description": "The arrival time."
                },
                "barcode": {
                    "$ref": "Sidekick__Photo",
                    "description": "Boarding pass."
                },
                "currentStatusLink": {
                    "description": "Current status link URL.",
                    "type": "string"
                },
                "departureCity": {
                    "description": "The departure city.",
                    "type": "string"
                },
                "departurePlatform": {
                    "description": "Name of the platform/track.",
                    "type": "string"
                },
                "departureStationLocation": {
                    "$ref": "Sidekick__Location",
                    "description": "The departure station's geo information."
                },
                "departureStationName": {
                    "description": "The departure station's name.",
                    "type": "string"
                },
                "departureTime": {
                    "$ref": "Sidekick__TimeWithZone",
                    "description": "The departure time."
                },
                "gmailReference": {
                    "description": "Source email references.",
                    "items": {
                        "$ref": "Sidekick__GmailReference"
                    },
                    "type": "array"
                },
                "modifyUrl": {
                    "description": "URL to update the reservation.",
                    "type": "string"
                },
                "modifyUrlHeader": {
                    "description": "header of URL to update the reservation.",
                    "type": "string"
                },
                "operatorLogo": {
                    "$ref": "Sidekick__Photo",
                    "description": "The operator's logo."
                },
                "parserSourceBitmap": {
                    "description": "For Moonshine sourced data, the bitmap represents the set of parser\ntechnique(s) used to parse the email in Moonshine.\nThe parser sources are defined in\njava/com/google/geo/sidekick/pojos/ParserSourcePojo.java",
                    "format": "int32",
                    "type": "integer"
                },
                "passengerInfo": {
                    "description": "Passengers who are going on this route.",
                    "items": {
                        "$ref": "Sidekick__TransportationPassengerInfo"
                    },
                    "type": "array"
                },
                "reservationNumber": {
                    "description": "Reservation number, or say confirmation number.",
                    "type": "string"
                },
                "route": {
                    "description": "The routes the user will take to travel from his current location.",
                    "items": {
                        "$ref": "Sidekick__CommuteSummary"
                    },
                    "type": "array"
                },
                "routeCode": {
                    "description": "Train or bus code.",
                    "type": "string"
                },
                "routeNumber": {
                    "description": "Train or bus number.",
                    "type": "string"
                },
                "showBarcodeBlock": {
                    "description": "Whether to show barcode block on client.",
                    "type": "boolean"
                },
                "showTime": {
                    "description": "Whether to show time on client.",
                    "type": "boolean"
                },
                "showTimeBlock": {
                    "description": "Whether to show departure and arrival time block on client.",
                    "type": "boolean"
                },
                "status": {
                    "enum": [
                        "UNKNOWN",
                        "CONFIRMED",
                        "UPDATED",
                        "CANCELLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "subtitle": {
                    "description": "The subtitle of the list entry. It contains the transit time.",
                    "type": "string"
                },
                "trainScheduleLink": {
                    "description": "Train schedule link URL.",
                    "type": "string"
                },
                "transportOperator": {
                    "description": "Name of the Train/Bus operator.",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "INVALID",
                        "TRAIN",
                        "BUS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "vendor": {
                    "enum": [
                        "UNKNOWN_VENDOR",
                        "IRCTC"
                    ],
                    "enumDescriptions": [
                        "",
                        "Indian Railway Catering and Tourism Corporation"
                    ],
                    "type": "string"
                },
                "vendorMid": {
                    "description": "Vendor (the booking agent) MID.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__TransportationPassengerInfo": {
            "description": "Stores passenger information for a route. Since for each route, a passenger\ncan have only one ticket, the ticket information is folded into passenger\ninfo.",
            "id": "Sidekick__TransportationPassengerInfo",
            "properties": {
                "carriageNumber": {
                    "description": "Coach number, e.g. train car number.",
                    "type": "string"
                },
                "passengerName": {
                    "description": "Name of the passenger.",
                    "type": "string"
                },
                "seatClass": {
                    "description": "Seat class, e.g. Preferred.",
                    "type": "string"
                },
                "seatNumber": {
                    "description": "Seat number, e.g. 24A.",
                    "type": "string"
                },
                "waitlistStatus": {
                    "description": "Waitlist status, e.g. RAC21.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__TriggerCondition": {
            "description": "A message to specify when to trigger an event (e.g. a reminder or\na notification). A TriggerCondition may be executed in the client\nor the server.\nDEPRECATED: this field is still supported for unmigrated use cases, but no\nnew use cases/ should be built on it. Use RequestSchedule instead.",
            "id": "Sidekick__TriggerCondition",
            "properties": {
                "condition": {
                    "description": "The TriggerCondition triggers if ALL of these conditions are true.",
                    "enumDescriptions": [
                        "",
                        "Trigger when the user is at a specific location for a while.",
                        "",
                        "Triggers when the user is mobile and nears the given location.",
                        "Trigger for a required app and (optionally) required permissions.\nThe card is only shown if the app is installed and has the specified\nrequired permissions.",
                        "Trigger for an app that is not installed.  The card is only shown if\nthe app is not installed."
                    ],
                    "items": {
                        "enum": [
                            "AT_TIME",
                            "AT_LOCATION",
                            "IN_REGION",
                            "NEARING_LOCATION",
                            "REQUIRED_APP",
                            "UNINSTALLED_APP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "discRegion": {
                    "description": "Only valid if condition includes IN_REGION.",
                    "items": {
                        "$ref": "Sidekick__DiscUnion"
                    },
                    "type": "array"
                },
                "encodedServerPayload": {
                    "format": "byte",
                    "type": "string"
                },
                "expiresSeconds": {
                    "description": "The time since epoch when this trigger condition expires. This\nfield can be used, when the TriggerCondition is attached to an Entry,\nto effectivey set a time when the Entry should be considered stale.\nWhen you specify this, you need to set condition to AT_TIME, and also\nspecify time_seconds, even if it's 0.",
                    "format": "int64",
                    "type": "string"
                },
                "location": {
                    "description": "The locations to trigger the condition\nLogs: sensitive fields are stripped by Location.",
                    "items": {
                        "$ref": "Sidekick__Location"
                    },
                    "type": "array"
                },
                "requiredAppId": {
                    "description": "If set, this app must be installed for the card to be shown. This is\nused for the REQUIRED_APP condition. The client is responsible for\nfiltering out cards if the app is not installed. Format is\n<signature>:<package_name>. The signature is the base64 encoded SHA1\nhash of the full signature.",
                    "type": "string"
                },
                "requiredAppPackageName": {
                    "description": "If set, this app must be installed for the card to be shown. This is\nused for the REQUIRED_APP condition. The client is responsible for\nfiltering out cards if the app is not installed. Format is\n<package_name>. Once this field is set, the above required_app_id must\nbe empty. If both required_app_id and required_app_package_name are set,\nonly required_app_id is used.",
                    "type": "string"
                },
                "requiredPermission": {
                    "description": "If set, the app must have these permissions for the card to be shown.\nThis is used for the REQUIRED_APP condition. The client is responsible for\nfiltering out cards if these permissions do not exist. The\nrequired_app_id field must be set if this is set.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tcUpdateId": {
                    "description": "A unique ID for this TriggerCondition (TC); if the frontend sends a new TC\nwith the same ID then the new TC replaces the old TC.  If the\nTC is attached to an Entry, then this should match the\nEntry.entry_update_id.  The id is transient so it is not logged.",
                    "format": "int64",
                    "type": "string"
                },
                "timeSeconds": {
                    "description": "The timestamp since epoch to trigger the condition",
                    "format": "int64",
                    "type": "string"
                },
                "uninstalledAppPackageName": {
                    "description": "If set, this app must not be installed for the card to be shown.\nThis is used for UNINSTALLED_APP condition.  The client is responsible for\nfiltering out cards if the app is installed.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__VehicleParkedLocationEntry": {
            "id": "Sidekick__VehicleParkedLocationEntry",
            "properties": {
                "frequentPlace": {
                    "$ref": "Sidekick__FrequentPlace",
                    "description": "The location where the car was parked.\nTODO(dkhawk) deprecate and remove this field"
                },
                "learnMoreHelpPvalue": {
                    "description": "The help center p-value for the learn more link. Typically hardcoded\nto \"ws_now_find_car\" on the server. Not logged because this is\nessentially a constant.",
                    "type": "string"
                },
                "mostRecentLocation": {
                    "description": "Whether this is the most recent parking location.",
                    "type": "boolean"
                },
                "showInAssistantHqStyle": {
                    "description": "Whether to show the card in Assistant HQ sytle.",
                    "type": "boolean"
                },
                "vehicleLocation": {
                    "$ref": "Sidekick__TimestampedLocation"
                }
            },
            "type": "object"
        },
        "Sidekick__VideoModule": {
            "id": "Sidekick__VideoModule",
            "properties": {
                "content": {
                    "description": "This is the text content appearing in this module, including title,\nsubtitle and justification.",
                    "items": {
                        "$ref": "Sidekick__MetadataLine"
                    },
                    "type": "array"
                },
                "videoUrl": {
                    "description": "This is the URL of the video to play.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__VisualElementId": {
            "description": "Capture information needed by client to uniquely identify a VisualElement\nlogged server-side. Contains subset of fields in ClickTrackingCGI which is\nused by Search for similar purpose. Since we want the ability to open-source\nthe use of this data in Jardin, we are defining a separate lite version of\nClickTrackingCGI here.",
            "id": "Sidekick__VisualElementId",
            "properties": {
                "elementIndex": {
                    "description": "0-indexed position of VE among siblings. Used for representing ordered\nlists. Leave unset for only children.",
                    "format": "int32",
                    "type": "integer"
                },
                "eventId": {
                    "$ref": "__EventIdMessage",
                    "description": "Event ID of the server log record where the VisualElement is defined.\nShould be populated on the client from\nSidekickHttpResponse.encoded_event_id when parsing the response in order\nto avoid sending the same 20 bytes in every VEID in a single response.\nIt will also save client memory as the same EventIdMessage object will be\nreferenced from all VEIDs in memory."
                },
                "veIndex": {
                    "description": "The index into the visual_element array in the log record of the\nVisualElement.",
                    "format": "int32",
                    "type": "integer"
                },
                "veOffsetId": {
                    "$ref": "Logs__VeOffsetIdentifier",
                    "description": "Explicit VE indexing method of locating a VE within the VE array of a\nlog. Used in lieu of ve_index above. See go/explicit-ve-indexing for\ndetails."
                },
                "veType": {
                    "description": "The type of the VisualElement as defined in\n[now_]visual_element_configuration files.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sidekick__VisualElementInfo": {
            "description": "Information the client needs about the VisualElement corresponding to the\nUI element associated with proto this value is embedded in. In addition to\nidentifying the VisualElement we have attributes for how the client should\nlog (or not) interactions and viewstate.",
            "id": "Sidekick__VisualElementInfo",
            "properties": {
                "ignoreAttention": {
                    "type": "boolean"
                },
                "ignoreInteraction": {
                    "type": "boolean"
                },
                "interactionContext": {
                    "description": "Set when clients should record a non-default interaction id for this visual\nelement when an interaction occurs. Used when we want to capture an event\nin two ways (e.g. regular click tracking for Now and search action in\nSearch. Clients will use this value to set\nClientRequestContext.interaction_context if set. For more info see:\ngo/now-feed-interaction-logging.",
                    "format": "int32",
                    "type": "integer"
                },
                "veId": {
                    "$ref": "Sidekick__VisualElementId",
                    "description": "Identifier for the VisualElement instance."
                }
            },
            "type": "object"
        },
        "Sidekick__WeatherAction": {
            "description": "Describes an action to launch weather in GSA.",
            "id": "Sidekick__WeatherAction",
            "properties": {
                "location": {
                    "$ref": "Sidekick__Location",
                    "description": "The location to show weather for when opening the weather immersive (should\nbe same location as in the weather card)."
                },
                "sourceSuffix": {
                    "description": "Suffix of Now related source values and answers how the user entered GSA\nthrough Now feature. Available in AGSA 6.4+.\nSee go/agsa-sources \"Google Now\" section.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__WeatherEntry": {
            "id": "Sidekick__WeatherEntry",
            "properties": {
                "attribution": {
                    "$ref": "Sidekick__Attribution",
                    "description": "Attribution for the source of the data displayed in the list."
                },
                "changeDescriptions": {
                    "description": "List of summaries for periods of time from now (i.e. relative to\ncurrent conditions). Each entry denotes an arbitrary period of\ntime. e.g. \"Later\", \"Tomorrow\". The \"label\" field describes the period.\nEach summary is stored as a single string in \"description\" but may\nconsist of multiple parts delimited by the dot operator (\\u22C5).\ne.g. \"Rain at 13:00\u22c5Snow at 18:00\"",
                    "items": {
                        "$ref": "Sidekick_WeatherEntry_WeatherPoint"
                    },
                    "type": "array"
                },
                "currentConditions": {
                    "$ref": "Sidekick_WeatherEntry_WeatherPoint",
                    "description": "Contains the current weather conditions, only for Android version >= 2.6.\nFor older client versions, the current conditions will be the first item\nin weather_point below."
                },
                "hourlyWeatherPoint": {
                    "description": "Contains the hourly forecast, one WeatherPoint per hour. The first point\nin the list is the forecast for the current hour. The number of hours\nfor which we have the forecast depends on the Weather__hourlyNumHoursAhead\nflag.",
                    "items": {
                        "$ref": "Sidekick_WeatherEntry_WeatherPoint"
                    },
                    "type": "array"
                },
                "location": {
                    "$ref": "Sidekick__Location"
                },
                "locationType": {
                    "description": "LINT.ThenChange(//depot/google3/search/now/proto/analysis/weather_enums.proto)",
                    "enum": [
                        "HOME",
                        "WORK",
                        "CURRENT_LOCATION",
                        "TRIP_DESTINATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "longCityName": {
                    "description": "A non-ambiguous name for the city suitable for searching; for example,\n\"Lincoln, MA USA\" instead of \"Lincoln\". v1 clients will ignore this field,\nbut newer clients use this instead of the short city name when searching\nfor the weather.",
                    "type": "string"
                },
                "oneboxData": {
                    "$ref": "Sidekick__AuxiliaryMessage",
                    "description": "For Desktop requests only, we return the raw onebox data which is used\nfor rendering.\nThis is not logged in sawmill because this is just another representation\nof all the logged semantics above. This is meant to be treated as a blob."
                },
                "stickUrlParameter": {
                    "description": "A string that should be added to the \"stick\" CGI param when sending\nqueries to GWS to show the Weather OB after clicking on the Weather card.\nIt's used to ensure location consistency between Now and Onebox.\nSee b/32299753 for more details.",
                    "type": "string"
                },
                "weatherPoint": {
                    "description": "Contains the forecasted weather points. For older client versions\n(Android < 2.6), this will also contain the current weather conditions as\nthe first item.",
                    "items": {
                        "$ref": "Sidekick_WeatherEntry_WeatherPoint"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__WebViewAction": {
            "description": "Describes an action that loads a url in a Webview without leaving the app",
            "id": "Sidekick__WebViewAction",
            "properties": {
                "enableJavascript": {
                    "description": "Whether or not JavaScript should be enabled in the WebView",
                    "type": "boolean"
                },
                "enableZoomControls": {
                    "description": "Whether or not Zoom Controls should be enabled in the WebView",
                    "type": "boolean"
                },
                "service": {
                    "description": "Name of the service being loaded, used to show an icon in the title bar",
                    "type": "string"
                },
                "targetUrl": {
                    "description": "URL to load in the WebView",
                    "type": "string"
                },
                "title": {
                    "description": "Title to show in the title bar",
                    "type": "string"
                },
                "urlPrefixes": {
                    "description": "Array of prefixes for host names that should stay in the WebView when\nnavigated to",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sidekick__WebsiteUpdateEntry": {
            "description": "A website that the user is interested in, that has updated content.",
            "id": "Sidekick__WebsiteUpdateEntry",
            "properties": {
                "clickUrl": {
                    "description": "The URL to open in a browser if the user clicks on the card.  May be the\nURL of the main website or an update-specific URL.",
                    "type": "string"
                },
                "image": {
                    "$ref": "Sidekick__Photo",
                    "description": "If present, an image to display for the update."
                },
                "updateSnippet": {
                    "description": "Snippet of the content update if known.",
                    "type": "string"
                },
                "updateTimestampSeconds": {
                    "description": "If present, the update time, in seconds since the UNIX epoch.  For\nrarely-changed websites, this could be days/weeks in the past.",
                    "format": "int64",
                    "type": "string"
                },
                "updateTitle": {
                    "description": "The title of the content update if known.",
                    "type": "string"
                },
                "websiteTitle": {
                    "description": "The title of the main website the user is interested in.",
                    "type": "string"
                },
                "websiteUrl": {
                    "description": "The main URL of the website.  Not logged because it is only used to\naggregate action statistics by site from user actions in Kansas.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__WebsiteUpdateListEntry": {
            "description": "Collection of website updates in one card (WEBSITE_UPDATE_LIST). Each update\nis represented by a child WebsiteUpdateEntry.",
            "id": "Sidekick__WebsiteUpdateListEntry",
            "properties": {
                "title": {
                    "description": "The title at the top of the website updates card e.g. \"New content\navailable\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sidekick__WhyThisAdAction": {
            "description": "Used to show the why this ad dialog.\nBased on j/c/g/ads/proto/gws/why_this_ad.proto\ngo/agsa-wta.\nThis field will be set on the client as a server side flag:\n  ads_settings_url - the url to access the ads settings page.",
            "id": "Sidekick__WhyThisAdAction",
            "properties": {
                "adBlockRequestParam": {
                    "description": "The query params sent to the blocking api to block this ad.",
                    "type": "string"
                },
                "adsHideActionTakenMsg": {
                    "description": "The shown message after the hidden button is clicked.",
                    "type": "string"
                },
                "advertiserName": {
                    "description": "Name of the advertiser who placed the ad.",
                    "type": "string"
                },
                "domain": {
                    "description": "The advertiser's domain. This could be the same as advertiser_name, or it\ncould differ slightly (e.g. Google and google.com, or example.com for\nboth)",
                    "type": "string"
                },
                "listHeaderText": {
                    "description": "Targeting reasons list header. Text like \"This ad is based on:\".",
                    "type": "string"
                },
                "reason": {
                    "items": {
                        "$ref": "Sidekick_WhyThisAdAction_TargetingReason"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SocialClients__SocialClient": {
            "description": "A social client is uniquely identified by the following tuple:\n(Device, Application and Platform).  It tells us the physical\ndevice that the user uses to access the different social applications\nthat are either web application or native application.",
            "id": "SocialClients__SocialClient",
            "properties": {
                "application": {
                    "description": "The application on the device that generated the request.",
                    "enum": [
                        "UNKNOWN_APPLICATION",
                        "GPLUS",
                        "GPLUS_WEB",
                        "GPLUS_ARES_FEATURE_PROVIDER",
                        "GPLUS_PHOTOS",
                        "GPLUS_HANGOUT",
                        "GPLUS_EVENTS",
                        "GPLUS_SQUARES",
                        "GPLUS_NOTIFICATIONS",
                        "GPLUS_GAMES",
                        "GPLUS_WHATS_HOT",
                        "GPLUS_LOCAL",
                        "GPLUS_PLUS_PAGES",
                        "GPLUS_PLUS_PAGES_RSS",
                        "GPLUS_PROFILE",
                        "GPLUS_FIND_PEOPLE",
                        "GPLUS_PHOTO_EDITOR",
                        "GPLUS_SOCIALCAST",
                        "GPLUS_INTERACTION_EVENTS",
                        "GPLUS_ENTITY_TRANSFER",
                        "GPLUS_LIS",
                        "GPLUS_DRAWBRIDGE",
                        "GPLUS_DASHER",
                        "PAISA_MERCHANT_CONSOLE",
                        "GEO_DATA_UPLOAD_STAGING",
                        "GEO_DATA_UPLOAD",
                        "GOOGLE_PLAY_SERVICES",
                        "GOOGLE_SETTINGS",
                        "THIRD_PARTY",
                        "PICASA_PHOTOS",
                        "GMAIL_HANGOUT",
                        "FOUNTAIN",
                        "FOUNTAIN_YOUTUBE",
                        "YOUTUBE_LEGACY_COMMENT_MIGRATION",
                        "FOUNTAIN_YOUTUBE_DISCUSS",
                        "FOUNTAIN_YOUTUBE_MESSAGES",
                        "YOUTUBE_AUTOSHARES",
                        "FOUNTAIN_YOUTUBE_LEGACY_GDATA",
                        "YOUTUBE_CHOWN_PIPELINE",
                        "FOUNTAIN_YOUTUBE_ACTIVITY_LOG",
                        "FOUNTAIN_YOUTUBE_ADMIN",
                        "FOCUS_FRONTEND",
                        "URL_SHAREBOX",
                        "READER",
                        "GOOGLE_MAIL",
                        "PLUS_SHARE",
                        "YOUTUBE",
                        "CHECKIN",
                        "FRAMES",
                        "PHOTOS_CHROMEAPP",
                        "MOBILE_BASIC",
                        "GLASSWARE",
                        "GAMES",
                        "THIRD_PARTY_STREAM_EVERYWHERE_SINGLE_POST_WIDGET",
                        "PLAY_STORE",
                        "GMAIL_INBOX_POSTS",
                        "GMAIL_RECENT_POSTS",
                        "SIDECAR",
                        "GOOGLE_QUICK_SEARCH_BOX",
                        "WALLET",
                        "FRAMELESS_SHAREBOX",
                        "YOUTUBE_CAPTURE",
                        "YOUTUBE_WATCH_PAGE_SHARE",
                        "YOUTUBE_REACTR",
                        "YOUTUBE_MANGO",
                        "YOUTUBE_REACTR_TAKEOUT",
                        "YOUTUBE_COMMENTS_NOTIFICATION",
                        "GOOGLE_KEEP",
                        "VEGA",
                        "SOCIAL_REVIEWS",
                        "PLAY_MOVIES",
                        "GMAIL",
                        "HELPOUTS",
                        "MAPS",
                        "MAPS_ENGINE_MOBILE",
                        "CALENDAR",
                        "PLAY_NEWSSTAND",
                        "FITNESS",
                        "WEAR_HEALTH",
                        "WEAR_HEALTH_PROVISIONING",
                        "PLAY_BOOKS",
                        "INSTORE",
                        "PLAY_MUSIC",
                        "GOOGLE_CHROME",
                        "LOCATION_FLARE",
                        "NEWS_WEATHER",
                        "PROMOTED_POSTS",
                        "CLOUD_PRINT",
                        "CLOUD_DEVICES",
                        "CPANEL",
                        "DRIVE",
                        "CLASSROOM",
                        "STORIES",
                        "GOOGLE_ANALYTICS",
                        "LOCATION_SAMPLE",
                        "BIGTOP",
                        "GOOGLE_CAST",
                        "AUTHZEN",
                        "PARENTS",
                        "SEARCH",
                        "NEWS",
                        "DOCS",
                        "PHOTOS",
                        "PHOTOS_TAKEOUT",
                        "SIMBA_MOBILE",
                        "GOOGLE_JOBS",
                        "CLOUD_PLATFORM",
                        "CLOUD_PLATFORM_WEB",
                        "FIREFOX_BROWSER",
                        "MOVIEMAKER",
                        "MOVIEMAKER_PHOTOS",
                        "GOOGLE_STARS",
                        "SNAPSEED",
                        "BLOGGER",
                        "DEVICE_POLICY",
                        "DOUBLECLICK_CREATIVE_PREVIEW",
                        "UNICORN",
                        "ADWORDS_MOBILE",
                        "FAMILY_COMPASS",
                        "AUTH_GRANT_CREDENTIAL",
                        "HALLWAY",
                        "FAMILY_CAMERA",
                        "ENDER",
                        "MAPS_VIEWS",
                        "TABLESCAPE",
                        "TOPAZ",
                        "FIBER",
                        "ATARI",
                        "RIDEMATCH",
                        "GMONEY",
                        "GOOGLE_EXPRESS",
                        "CONSUMER_PHOTO_EDITOR",
                        "JETSTREAM",
                        "SOCIAL_SERENDIPITY",
                        "ONE_TODAY",
                        "PROFILES",
                        "SOCIAL_POLLS",
                        "SPACES",
                        "ADWORDS_EXPRESS",
                        "IDENTITY",
                        "IDENTITY_FRONTEND_VISUAL_ELEMENTS",
                        "YOUTUBE_BACKSTAGE",
                        "YOUTUBE_BACKSTAGE_ADMIN",
                        "YOUTUBE_UNPLUGGED",
                        "YOUTUBE_MUSIC",
                        "HUB",
                        "ANDROID_EDU_PROVISIONING",
                        "ANDROID_WEAR",
                        "CHROMECAST",
                        "ONTHEGO",
                        "ADSENSE",
                        "PROJECT_FI",
                        "JAM",
                        "HUDDLE",
                        "CAR_APP",
                        "TAILORMADE",
                        "ACTIVITY_LOG",
                        "SPACES_ACTIVITY_LOG",
                        "PHOTOS_ACTIVITY_LOG",
                        "MEMEGEN",
                        "SOCIETY",
                        "SOCIETY_CHAT",
                        "HIGHLIGHT",
                        "YOUTUBE_LIVE",
                        "YOUTUBE_LIVE_ACTIVITY_LOG",
                        "YOUTUBE_LIVE_TAKEOUT",
                        "CARDBOARD_CAMERA",
                        "PLAY_DEVELOPER_CONSOLE",
                        "MIXX",
                        "CHROME_REMOTE_DESKTOP",
                        "HOT_LANE",
                        "CONTACTS",
                        "CONTACTSHEET",
                        "HOVERCARD",
                        "DORY",
                        "SPECTRUM",
                        "DYNAMITE",
                        "DASHER_USER_HUB",
                        "CULTURAL",
                        "BOOND",
                        "EXPEDITIONS",
                        "PHOTO_ALBUM_ARCHIVE",
                        "GAMMAGO",
                        "FIREBALL",
                        "SUPPLY_CHAIN_CENTRAL",
                        "PAISA",
                        "SANDCLOCK",
                        "ACCOUNT_SETTINGS_MOBILE",
                        "GOOGLE_VOICE",
                        "WING_MARKETPLACE",
                        "CHIME",
                        "LIFESCIENCE_FRONTENDS",
                        "WYLO_TODAY",
                        "NAKSHA_CONSUMER",
                        "ENTERPRISE_ENROLLMENT",
                        "IMPROV",
                        "TRANSLATE",
                        "SOCIAL_ENGAGE",
                        "CORPCAM",
                        "ANDROID_CONTACTS",
                        "CURATOR",
                        "TRAVEL_BOOKING",
                        "SOCIAL_DISCOVERY",
                        "GPOST",
                        "PAIDTASKS",
                        "PRIMER",
                        "LOCAL_DISCOVERY",
                        "BASELINE",
                        "QUARTZ",
                        "DPANEL",
                        "TRIPS",
                        "HOME_SERVICES",
                        "SOCIALGOOD",
                        "LOUPE",
                        "UGC_LIVE_COMMENTS",
                        "FAMILY_LINK",
                        "G3DOC",
                        "MOMA",
                        "DASHER_ADMIN_CONSOLE",
                        "DASHER_COMMERCE_CONSOLE",
                        "TRAVEL_VACATIONS",
                        "TRENDS",
                        "TASKS",
                        "VIMES",
                        "SECURITY_EVENT_MANAGER",
                        "VR_EVA",
                        "MINDSEARCH",
                        "ANDROID_AUTO",
                        "CLOUDCAST_TEXTCHAT",
                        "APPS_ASSISTANT_OVERLAY",
                        "SEARCH_CONSOLE",
                        "CHROME_WEB_STORE",
                        "SAVE",
                        "FOOD_ORDERING",
                        "SOCIAL_RECOVERY",
                        "ANDROID_ONBOARD_WEB",
                        "WEAR_HOME",
                        "FACT_CHECK_EXPLORER",
                        "ALLO",
                        "FAMILY_LINK_HELPER",
                        "PROXY_GAL_PROVIDER",
                        "ONEGOOGLE",
                        "ONEGOOGLE_ASYNC",
                        "WICKED",
                        "SHEETS",
                        "SLIDES",
                        "ASSISTANT_EXPLORE_WEB",
                        "ASSISTANT_SETTINGS_WEB_UI",
                        "ANDROID_DIALER",
                        "KLOPFKLOPF",
                        "LAGEPLAN",
                        "SCIENCE_JOURNAL",
                        "HIRE",
                        "ZANDRIA",
                        "DASHER_RESELLER_FRONTEND",
                        "ZOOMSIGHTS",
                        "UGC_LIVE_COMMENTS_TAKEOUT",
                        "GUARDIAN",
                        "GUARDIAN_CORP",
                        "GOOGLE_MY_BUSINESS",
                        "PRESTO_ALP",
                        "PRESTO_FE",
                        "KIDS_HOME",
                        "OPA",
                        "SUBSCRIBEWITHGOOGLE_CLIENT",
                        "REVEAL",
                        "ANDROID_NATIVE_ONBOARDING",
                        "AMP_ACTIONS",
                        "SPOT",
                        "MEDICAL_SCRIBE",
                        "MEDICAL_SCRIBE_TASKING",
                        "DASHER_RULES_FRONTEND",
                        "ANDROID_TV_LAUNCHERX",
                        "ANDROID_TV_SETUP_WIZARD",
                        "SOS_LIVE_COMMENTS",
                        "GMAIL_LOCKER_UI",
                        "POLYGLOT",
                        "PLX",
                        "GROUPS_UI",
                        "MSV",
                        "WOLVERINE",
                        "MIC",
                        "FORMS",
                        "ARCORE",
                        "ANDROID_EMERGENCY",
                        "LENSLET",
                        "MEDICAL_LABELING",
                        "G_SUITE_ADD_ONS",
                        "LOCATION_HISTORY_CONSENT_ANDROID_LIBRARY",
                        "PAYMENTS_WEB_5",
                        "APPS_PLATFORM_CONSOLE",
                        "INTROSPECT",
                        "NGA",
                        "SUPPLY_CHAIN_HW_CHP2",
                        "DUC_COMPANION",
                        "AUTOMON",
                        "TOG",
                        "GOOGLE_ADMIN",
                        "MESSAGE_PROCESSOR",
                        "EMAIL_PROCESSOR",
                        "ENGAGE_PIPELINE",
                        "AUTO_DOC_PROBER",
                        "DOC_PROBER",
                        "FRAMES_DELETE_SYNC",
                        "EMBEDS_MIGRATION",
                        "SOCIAL_REVIEWS_SYNC",
                        "GUNS",
                        "POSTBOX_ONEOFF",
                        "PLUS_API_ONEOFF",
                        "STANZA_ACTIVITY_POST_DELETE_SYNC",
                        "GRAPH_PROBER",
                        "STANZA_PERIODIC",
                        "MADISON_PERIODIC",
                        "PAPYRUS_PERIODIC",
                        "PHOTOS_BACKEND",
                        "REDBOX_BACKEND",
                        "PHOTOS_FIFE",
                        "ABUSEIAM",
                        "ARES",
                        "STREAM_INDEXING",
                        "STANZA_INDEXING",
                        "STANZA",
                        "STANZA_MOONSHINE_INDEXING",
                        "STREAM_ACTIONS",
                        "STREAM_CONFIG",
                        "STREAM_SERVICE",
                        "STREAM_DELETE",
                        "KWYJIBO",
                        "STANZA_TEST",
                        "TEST_APPLICATION",
                        "SOCIAL_ANNOTATION_SERVICE",
                        "ANNOTATION_SERVICE_STANZA_LISTENER",
                        "SBE_PLAYGROUND",
                        "EXPO",
                        "ANDROID_VR_HOME",
                        "YOUTUBE_BLARNEY_STONE",
                        "SOCIAL_EVENTS",
                        "EMERGENCY_ASSIST",
                        "ADS_INTEGRITY_ENFORCER",
                        "ADS_INTEGRITY_ENFORCEMENT_MANAGER",
                        "ADS_INTEGRITY_EXPLORER",
                        "ADS_INTEGRITY_REVIEWER",
                        "GPLUS_COLLEXION_PIPELINE",
                        "GPLUS_OFFLINE",
                        "PAPYRUS",
                        "YOUTUBE_ADMIN",
                        "YOUTUBE_DECIDER",
                        "YOUTUBE_EXTERNAL_LINKS",
                        "FOCUS_BACKEND_BATCH",
                        "DEPRECATED_QUICKSTART_FLUME",
                        "DUO_CLIENT",
                        "ALBERT",
                        "PEOPLE_PLAYGROUND",
                        "GPLUS_POST_RECOMMENDER",
                        "IMAGES",
                        "GOOGLE_STORE",
                        "GCONNECT_MUSTARD",
                        "MADDEN",
                        "MOBDOG",
                        "GBOARD",
                        "RECORDER",
                        "UNMAPPED_LEGACY_GPLUS_SOURCE",
                        "PODIUM",
                        "GSA_FUSE",
                        "HONEYPHISH",
                        "SOCIAL_ANNOTATION_SERVICE_BACKFILL",
                        "CONTACT_HR",
                        "PAISA_WANDER",
                        "NEXTGENRETAIL_SELF_ORDER",
                        "UNSET_APPLICATION",
                        "UNKNOWN_FIRST_PARTY_APPLICATION",
                        "WABEL",
                        "VIDEO_HANGOUT",
                        "VIDEO_HANGOUT_LITE",
                        "VIDEO_HANGOUT_GVC",
                        "VIDEO_HANGOUT_PRESENT",
                        "VIDEO_HANGOUT_HOA",
                        "VIDEO_HANGOUT_TEE",
                        "VIDEO_HANGOUT_SDK",
                        "VIDEO_HANGOUT_ENVOY",
                        "BABEL",
                        "BABEL_NOVA",
                        "WABEL_MEDIACALL",
                        "HANGOUT_START_PAGE",
                        "EXPRESS_LANE",
                        "MEETINGS_ANDROID",
                        "EXPRESS_LANE_BOQ",
                        "RTC_FLEET_MGMT",
                        "STAX",
                        "RIGEL",
                        "PHOTOS_SCANNER",
                        "PHOTOS_LIBRARY_API",
                        "PHOTOS_PARTNER_API",
                        "VAULT",
                        "PROF",
                        "TOTAL",
                        "TOTAL_ZERO_PARTY",
                        "TOTAL_FIRST_PARTY",
                        "TOTAL_THIRD_PARTY",
                        "TOTAL_INTERNAL",
                        "TOTAL_UNKNOWN",
                        "TOTAL_MINUS_YOUTUBE",
                        "TOTAL_FIRST_PARTY_WITH_PRIMARY_INTENT_TO_SHARE_TO_GPLUS",
                        "TOTAL_FIRST_PARTY_WITH_SECONDARY_INTENT_TO_SHARE_TO_GPLUS",
                        "TOTAL_GPLUS",
                        "TOTAL_SOCIAL_APPS",
                        "CROWD_COMPUTE",
                        "KHAZANA",
                        "LIGHTER_GMM",
                        "LIGHTER_GMB",
                        "MYACTIVITY",
                        "BLOG_COMPASS",
                        "CONCORD",
                        "NAVSTAR",
                        "SETTINGS_INTELLIGENCE",
                        "TOPAZ_TEAMS",
                        "GEMAGENT",
                        "DUMBLEDORE",
                        "GOOGLE_ONE",
                        "NBU_GCONNECT_KIMCHI",
                        "FASTDASH",
                        "AQUARIUS_LAPIS",
                        "DASHER_REPORTING",
                        "GCONNECT_PICARD",
                        "GOOGLE_JACQUARD",
                        "GOOGLE_GO",
                        "BUGANIZER",
                        "DOCOS_MENTIONS",
                        "TRIX_WAFFLE",
                        "SHARE_SERVICE",
                        "ANDROID_SAFETY",
                        "CLOUDCAST_TEXTCHAT_TAKEOUT",
                        "ASSISTANT_GO",
                        "FLOURISH",
                        "ALECS",
                        "NANDHI",
                        "GOOGLE_RECORDER",
                        "CONTACT_STORE",
                        "PROFILE_CARD",
                        "ESPRESSO",
                        "PEOPLE_COMPANION",
                        "PHOTOS_GO",
                        "YETI",
                        "BLOOM",
                        "FIELD_OFFICER",
                        "URBAN_MOBILITY",
                        "FAMILYCARE",
                        "INTUITIVE_PLATFORM",
                        "NBU_CRICKET_WORLD_CUP",
                        "INTEGRATION_PLATFORM",
                        "CROS_SCALING_STAGING",
                        "CROS_SCALING_PROD",
                        "ASSISTANT_PROACTIVE_SUGGESTIONS",
                        "BULLETIN_CONTRIBUTOR",
                        "PRIVACY_ONE",
                        "PAISA_MERCHANT",
                        "ASSISTJS",
                        "TRAVEL_HOTELIER",
                        "PHOTOS_KINDYGRAM",
                        "ANDROID_MESSAGES",
                        "TRAVEL_HOTEL_EDITOR",
                        "VISTAAR",
                        "VISTAAR_DEV",
                        "GSUITE_GROWTH",
                        "ELDAR",
                        "GMB_ANDROID",
                        "SHOPPING_LIST",
                        "EARTH",
                        "PAISA_CREDIT_INSTANT_LOAN",
                        "ASSISTANT_GO_WEB",
                        "SHOWTIME_EVENTS",
                        "KONARK",
                        "EXO_REFSERVER",
                        "MONITORING_PLATFORM",
                        "AUTOCAP",
                        "PAYMENTS_ORCHESTRATION",
                        "GMB_IOS",
                        "ASSISTANT_KAIOS",
                        "ADMOB_MOBILE",
                        "SCREENERS",
                        "MILTON"
                    ],
                    "enumDescriptions": [
                        "Cannot just use UNKNOWN because enum values use C++ scoping rules.\nTherefore, \"UNKNOWN\" must be unique within \"apps.people.logs.proto\".",
                        "G+ application\nGeneric app that represents all G+ applications that don't have\nspecific app below.\nBecause of this, this value does NOT represent all G+ applications in\nanalytics data: Clients interested in analytics data for all G+\napplications (for example, both GPLUS and GPLUS_WEB), should generally\nuse the synthetic values defined later in this enum, like TOTAL_GPLUS.\nReplacement for \"s:oz\".",
                        "G+ web application (codename Tau: go/tauplus)\nApp that represents all G+ traffic coming from boq web.\nThis is meant to replace the application id GPLUS for web traffic\nwhen Oz is completely deprectaed.",
                        "Feature provider for go/ares",
                        "Photos app within G+ such as lighthouse.\nReplacement for \"s:lh2\".",
                        "Hangout app within G+\nReplacement for \"s:talk\" that is used for hangout requests.",
                        "Events app within G+.\nReplacement for \"s:events\".",
                        "Squares(community) app within G+.\nReplacement for \"s:squares\".",
                        "Notifications app within G+.\nReplacement for \"s:notifications\".",
                        "Games activities.\nReplacement for \"s:gadgets:*\" (source_id).",
                        "Explore app within G+.",
                        "Local app within G+.",
                        "+Pages app within G+.",
                        "RSS to +Page syndicator.",
                        "Profile app within G+.",
                        "Find People app within G+.",
                        "Edit photos within Photos within G+, see also http://go/snapseed",
                        "G+ consumption stream integration with Chromecast. see also\nhttp://go/+socialcast",
                        "G+ For Work Interaction Event Sync.\ngo/kerr-prd and go/gplus_interaction_event_sync.",
                        "G+ Entity Transfer.\nSee go/gplus-entity-transfer-design.",
                        "G+ LIS. See b/77638423.",
                        "G+ Drawbridge.\nSee go/drawbridge-dd.",
                        "Currents (G+ for Enterprise) App\nAn alternative to GPLUS that indicates this is in a build for Currents.",
                        "Paisa Merchant Console\nhttp://go/paisa\nTeam contact: paisa-merchant-eng-blr@google.com",
                        "GEO_DATA_UPLOADS is an internal-use-only staging corpus for\ngeo_data_upload (above).\nSee go/gdu-design-1.2",
                        "GEO_DATA_UPLOADS consists of discussions between 3rd parties and Google\nabout uploaded data.\nSee go/gdu-design-1.2",
                        "Google Play services, used when doing background tasks like log posting\nand background sync that aren't initiated by any external app.",
                        "Google Settings app.",
                        "Third party clients who use apiary to work with G+.\nReplacement for \"s:chili\".",
                        "External First party.\nPicasa photos app.",
                        "The G+ widget served off Oz and rendered in gmail for hangout\nintegration.\nReplacement for \"s:oz:gadget-gmail\".",
                        "The G+ widget served off Oz and rendered in any page EXCEPT Youtube.\nReplacement for \"s:fountain\".",
                        "The comment widget served off youtube video page.\nReplacement for \"s:fountain:youtube\".",
                        "Legacy youtube video watch page comments. See go/stollen for details.",
                        "The G+ widget served off Oz and rendered in youtube channel discuss page.\nIt's the \"DISTILLER\" project.\nReplacement for \"s:fountain:youtube:channel\".",
                        "YouTube private messages built on top of distiller comments.\nReplacement for \"s:fountain:youtube:private\".",
                        "Public posts generated automatically if a YT user who has been merged\nwith their G+ account uploads a public video.\nReplacement for request_header.application_id=\"s:oz\"\nand mutate_data.activity.stream_id.source_id=\n\"a:ext:client.sharebox.261207059221.",
                        "Used for comment writes sent to the legacy YouTube GData API by\nclients that have not switched to the G+ commenting API.",
                        "Used for the Youtube channel ownership pipeline.\nReplacement for \"s:youtube:distiller\".  go/youtube-chown-pipeline",
                        "Used for youtube's comment history page.",
                        "Used for youtube comments admin pages.",
                        "Focus Frontend which is serving G+ profile.\nReplacement for \"s:focus\".",
                        "URL sharebox served off Oz on /share and rendered in\n1P/3P, on both desktop & mobile.\nFor mobile sharebox, this app id is set in\n//java/com/google/apps/people/oz/sharebox/client/mobile/shell.js",
                        "Google Reader.\nReplacement for \"s:reader\".",
                        "Google Email.\nReplacement for \"s:google_mail\".",
                        "Plusone Application.\nReplace for \"s:plusshare\".",
                        "Connection with G+ through YouTube.\ne.g. YT mobile native apps.",
                        "Checkin within G+.\nReplacement for \"s:friendview:checkin\" (source_id).",
                        "Oz Frames.\nReplacement for \"s:frames\".",
                        "Pulsar native app.",
                        "Mobile basic traffic for clients hitting \"plus.google.com/app/basic\".",
                        "The Google Glass Mirror API: https://developers.google.com/glass/.\nReplacement for \"s:glass\".",
                        "Play Games related clients.  (e.g. Games destination app.)",
                        "Embeddable widgets, part of Stream Everywhere project.\nhttp://go/streameverywheredesign",
                        "Google Play Store.",
                        "Interactive email notifications in Gmail.",
                        "Right hand side widget in Gmail.",
                        "Third party \"sidecar\" widgets.\nhttp://go/embeddedstreamsdesign\nDEPRECATED, DO NOT USE.",
                        "Google Quick Search Box.\nhttps://sites.google.com/a/google.com/android-qsb.",
                        "Google Wallet (Android and iOS clients).",
                        "Sharebox that is populated via URL params, suitable for use in\na popup. This sharebox is accessible to 3p, although in practice it is\nmostly used by 1p.\nhttps://sites.google.com/a/google.com/es-sharing/",
                        "YouTube Capture (iOS client).\nhttp://go/kubrik",
                        "Posts generated from the share window launched by share menu on the YouTube\nwatch page.\nyt-social-dev@",
                        "Youtube Real-time group chat, also known as 'Reactr'.\nhttp://go/reactr\nTeam contact: reactr-dev@google.com.",
                        "YouTube Go - android app for the next billion users.\nhttp://go/ytgo\nTeam contact: mango-eng@google.com",
                        "YouTube Reactr Takeout. See b/69636706\nhttp://go/reactr\nTeam contact: reactr-dev@google.com.",
                        "Youtube Comments\ngo/ytcci\nTeam contact: yt-comments-team@google.com",
                        "Google Keep.\nhttps://sites.google.com/a/google.com/keep/",
                        "Vega / Google+ for Business (Android and iOS clients).\nhttp://go/vega",
                        "Reviews (Local and others)\nsr-eng@",
                        "Google Play Movies & TV, Android app.\nTeam contact: videosapp-android@google.com.",
                        "Gmail",
                        "Google Helpouts\nhttp://go/tee-team",
                        "Google Maps\nMobile: http://go/gmm\nDesktop: http://go/tactile",
                        "Google Maps Engine Mobile\nhttp://go/gmemobile",
                        "Calendar\nAndroid: https://sites.google.com/a/google.com/android-calendar/\nDesktop: https://sites.google.com/a/google.com/timely/",
                        "Google Play Newsstand\nhttp://go/dots\nTeam contact: dots-eng@google.com.",
                        "Google Fitness\nhttp://go/heart\nTeam contact: android-fitness-eng@google.com.",
                        "Google Health\nhttp://go/wear-health\nTeam contact: wear-health@google.com.",
                        "Google Wear Health Provisioning\nhttp://go/wear-health\nTeam contact: wear-health@google.com.",
                        "Google Play Books (Android and iOS clients)\nhttp://go/android-books\nhttp://go/ios-books",
                        "Google Instore\nhttp://go/instore-wallet",
                        "Google Play Music (Android and iOS clients)\nhttp://go/android-music\nTeam contact: music-app-eng@google.com",
                        "Google Chrome\niOS: http://go/blingy (bling-team@google.com)",
                        "Location Flare\nhttp://go/location-flare",
                        "Google News Weather Android App\nhttp://go/android-core-utilities\nTeam contact: android-news-eng@google.com.",
                        "Promoted Posts\nhttp://go/promotedposts",
                        "Cloud Print\nhttp://go/cloudprinting\nTeam contact: cloudprint-team@google.com",
                        "Cloud Devices\nhttp://go/cloud-devices\nTeam contact: cloud-devices-team@google.com",
                        "CPanel (Google Admin) for Enterprise\nhttp://go/cpanel-mobile\nTeam contact: cpanel-mobile-eng@google.com",
                        "Google Drive\nhttp://go/docs-site\nAndroid part:\n  http://go/cakemix\n  Team contact: cakemix-eng@google.com",
                        "Classroom\nhttp://go/homeroom\nTeam contact: homeroom-eng@google.com",
                        "Google+ Stories aka Boswell\ngo/bozdd\nTeam contact: boswell-eng@google.com",
                        "Google Analytics Android Client\nhttp://go/giant-site\nTeam contact: ga-mobile-app-eng@",
                        "Sample app for Location team\nTeam contact: location-lon@google.com",
                        "BigTop Android\nhttps://wiki.corp.google.com/twiki/bin/view/Main/BigtopAndroid",
                        "Google Cast Android Client\nhttp://go/dongle\nTeam contact: eureka-setup-team@",
                        "Authzen\nhttp://go/authzen\nTeam contact: authzen-team@google.com",
                        "Google Parental Supervision Android Client\nhttp://go/parentapp\nDEPRECATED, DO NOT USE.",
                        "Google Search",
                        "Google News",
                        "Google Docs\nNOTE: Docs is a separate app from DRIVE.",
                        "Google Photos standalone experience (not included with the G+ app).\nhttp://go/photos\nTeam contact: photos-backend@google.com",
                        "Google Photos Takeout export\nhttp://go/photos\nTeam contact: photos-backend@google.com",
                        "Simba android client\nhttp://sites/simba",
                        "Google Jobs android client\nhttp://go/garage-wiki\nTeam contact: garage-android@google.com",
                        "Google Cloud Platform Android and iOS apps\nhttp://go/vespa\nTeam contact: vespa-eng@google.com",
                        "Google Cloud Platform Android web app\nhttp://go/pantheon\nTeam contact: pantheon-client@google.com",
                        "Shares integrated into Firefox browser.\nContact: carnold@mozilla.com, sharekit-eng@google.com",
                        "MovieMaker component of G+.\nhttp://go/aamovie\nContact: photos-movies@google.com",
                        "MovieMaker component of Photos.\nhttp://go/aamoive\nContact: photos-movies@google.com",
                        "Google Stars Android Client (go/stars)\nTeam contact: collecting-eng@google.com",
                        "Edit photos, consumer app.\nsee http://go/snapseed\nTeam contact: snapseed-eng@google.com",
                        "Blogger for Android\nhttp://go/bloggerandroid\nTeam contact: blogger-tech@google.com",
                        "Google Apps Device Policy for Enterprise\nhttp://go/mdm\nTeam contact: mdm-eng@google.com",
                        "Doubleclick Creative Preview app\nhttp://go/audition\nTeam contact: mob-h5-eng@google.com",
                        "Unicorn kids app\nhttp://go/unicorn-infra\nTeam contact: unicorn-infra-eng@google.com\nDEPRECATED, DO NOT USE.",
                        "AdWords mobile app for Android\nhttp://go/awm\nTeam contact: aw-mobileapp-eng@google.com",
                        "Unicorn Family Compass\nhttp://go/family-compass\nTeam contact: family-compass-eng@google.com\nDEPRECATED, DO NOT USE.",
                        "Android grant credential\nTeam contact: android-auth-eng@google.com",
                        "Hallway mobile app for Android and iOS\nhttp://go/hallway-prd\nTeam contact: adventurelabs-eng@google.com",
                        "Unicorn Family Camera\nhttp://go/family-camera\nTeam contact: unicorn-famcam-eng@google.com\nDEPRECATED, DO NOT USE.",
                        "Ender\nhttp://go/ender\nTeam contact: ender-eng@google.com",
                        "Google Maps Views (Mostly deprecated, but lives as SVApp server)\nhttp://go/streetview-apps\nTeam contact: streetview-apps@google.com",
                        "Tablescape app (internally codenamed FoodEyes)\nhttp://go/tablescape\nTeam contact: foodeyes-team@google.com",
                        "Enterprise Topaz\nhttp://go/topaz\nTeam contact: topaz-team@google.com",
                        "gFiber app\nhttp://go/fiberapp\nTeam contact: gfiber-mobile-android@google.com",
                        "Atari app (The next Google Sites)\nhttp://go/atari http://go/atari-mobile\nTeam contact: atari-mobile@google.com",
                        "Ridematch app\nhttp://go/ridematch\nTeam contact: ridematch-team@google.com",
                        "Google GMoney (Android and iOS clients).",
                        "Google Express app (Android)\nhttp://go/sameday\nTeam contact: gsx-mobilemall@google.com",
                        "Consumer photo editor\nhttp://go/photo-editing\nTeam contact: photos-editing@google.com",
                        "Jetstream consumer app\nhttp://go/jetstream-team and http://go/jetstream\nTeam contact: jetstream-team@google.com",
                        "Social Serendipity (Social content in Google Now)\nhttp://go/serendipity\nTeam contact: serendipity-team@google.com",
                        "One Today by Google\nhttp://go/onetoday\nTeam contact: onetoday-eng@google.com",
                        "Google Profiles - SmartProfiles for viewing, Me View for editing.\nhttp://sites/profiles\nTeam contact: people-frontend-team@google.com",
                        "Social Polls - surfaced in G+ site/app\nhttp://go/es-polls\nTeam contact: es-polls@google.com",
                        "Spaces App\nhttp://go/spaces\nTeam contact: spaces-eng@google.com",
                        "AdWords Express App\nhttp://go/awxv2\nTeam contact: boost-eng@google.com",
                        "iOS Identity Library\nhttp://go/ios-id\nTeam contact: ios-id-library-team@google.com",
                        "Identity Frontend.\nhttp://go/idfe\nTeam contact: id-fe-infra@google.com.",
                        "Youtube Backstage.\nhttp://go/backstage\nTeam contact: yt-posts-team@google.com.",
                        "Youtube Backstage Admin Service.\nhttp://go/backstage-admin-service\nTeam contact: yt-posts-team@google.com.",
                        "YouTube Unplugged\nhttp://go/unplugged-eng\nTeam contact: yt-unplugged-eng@google.com",
                        "Youtube Music\nhttp://go/music\nTeam contact: woodstock-ios-eng@google.com",
                        "Android Enterprise Hub App\nhttp://go/afwhub\nTeam contact: afwhub@google.com",
                        "Android Education Device Initializer App.\nhttp://go/android-edu-platform\nTeam contact: android-edu-platform-eng@google.com",
                        "Android Wear app.\nhttp://go/clockwork\nContact: ewol@, flerda@, clockwork-eng@",
                        "Chromecast app.\nhttp://go/cast-apps\nTeam contact: cast-apps-eng@google.com",
                        "OnTheGo app.\nhttp://go/onthego\nTeam contact: otg-eng@google.com",
                        "Google AdSense app.\nTeam contact: publisher-android-app@google.com",
                        "Project Fi app.\nhttp://go/nova-eng\nTeam contact: tycho-atlas@google.com",
                        "Karma team's Jam app.\nhttp://go/jam\nTeam contact: karma-eng@google.com",
                        "Huddle app.\nhttp://go/huddle\nTeam contact: huddle-eng@google.com",
                        "Chauffeur Car app.\nhttp://go/chauffeur\nTeam contact: chauffeur-ux-eng@google.com",
                        "Tailormade app.\nhttp://go/tailormade\nTeam contact: tailormade-eng@google.com",
                        "Activity Log - surfaced in G+ site/app.  Currently for G+ only but may\nexpand to support other apps.\nhttp://go/activitylog-design\nTeam contact: sps-activitylog@google.com",
                        "Activity Log in the Spaces product.\nhttp://go/activity-log-spaces-dd\nTeam contact: spaces-team@google.com",
                        "Activity Log in the Google Photos product.\nhttp://go/envelope-comments-design-doc\nTeam contact: photos-backend@google.com",
                        "Memegen!\nhttps://memegen.googleplex.com\nTeam contact: memgegen-team@google.com",
                        "Society App\nhttp://go/society\nTeam contact: society-team@google.com",
                        "Society chat application.\nhttp://go/society\nTeam contact: society-team@google.com",
                        "Search Highlight\nhttp://go/seng-highlight\nTeam contact: search-engagement-team@google.com",
                        "YouTube Live Chat.\nhttp://go/livechat-redesign\nTeam contact: yt-live-chat@google.com",
                        "YouTube Live Activity log.\nhttp://go/live-chat-history-design\nTeam contact: yt-live-chat@google.com",
                        "YouTube Live Takeout.\nhttp://go/livechat-takeout\nTeam contact: yt-live-chat@google.com",
                        "Cardboard camera app\nhttp://go/cyclops\nTeam contact: tp-cyclops@google.com",
                        "Google Play Developer Console\nhttp://go/foxcub\nTeam contact: play-apps-devex@google.com",
                        "Google+ Mixx UI.\nhttp://go/mixx\nTeam contact: jeffschiller@google.com",
                        "Chrome Remote Desktop app\nhttp://go/chromoting\nTeam contact: chromoting-team@google.com",
                        "Hot Lane, Enterprise Meetings App\nhttp://go/hotlane\nTeam contact: hangout-enterprise-eng@google.com",
                        "Web Contacts UI.\nhttp://go/web-contacts\nTeam contact: contactsplus-eng@google.com",
                        "Contactsheet (Web, Android, iOS).\nhttp://go/peopleweb-docs\nTeam contact: smartprofile-eng@google.com, contactsheet@google.com",
                        "Hovercard (Web).\nhttp://go/peopleweb-docs\nTeam contact: contactsplus-eng@google.com",
                        "Dory is a tool for crowdsourcing and ranking user-submitted questions,\nsuggestions, and ideas.",
                        "Spectrum app.\nhttp://go/spectrum-site\nTeam contact: speedtest-eng@google.com",
                        "Dynamite App\nhttp://go/dynamite\nTeam contact: dynamite-eng@google.com",
                        "Enterprise end user UI\nhttp://go/novitas\nTeam contact: novitas-eng@google.com",
                        "Google Arts & Culture app.\nhttp://go/ci-mobile\nTeam contact: ci-mobile-eng@google.com",
                        "Boond app\nhttp://go/village-mobile\nTeam contact: village@google.com",
                        "Expeditions app\nhttp://go/vr-expeditions\nTeam contact: vr-expeditions@google.com",
                        "Photo Album Archive app\nhttp://go/albumarchive\nTeam contact: social-parc-eng@google.com",
                        "GammaGo app\nhttp://go/gammago\nTeam contact: gammax-mobile-eng@google.com",
                        "Fireball message app.\ncontact: fireball-android@google.com",
                        "Supply Chain Central\nhttp://go/scc-site\nTeam contact: scc-infra@google.com",
                        "Paisa app\nhttp://go/paisa\nTeam contact: paisa-eng@google.com",
                        "SandClock app\nhttp://go/sandclock\nTeam contact: sandclock-eng@google.com",
                        "Account Settings Mobile\nhttp://go/asm\nTeam contact: myaccount-mobile-eng@google.com",
                        "The telephony application!  Contact voice-team@ or voice-fe@",
                        "Wing Marketplace\nhttp://go/xwma\nTeam contact: wing-software-function@google.com",
                        "Chime\nhttp://go/chime\nTeam contact: chime-team@google.com",
                        "Verily Lifescience Frontends\nhttp://go/csp-eng\nTeam contact: csp-eng@google.com",
                        "Where You Left Off (WYLO) Today extension for iOS\nhttp://go/wylo-dd\nTeam contact: tempeh@google.com",
                        "Naksha Consumer Android App (Areo)\nhttp://go/naksha-android\nTeam contact: naksha-dev@google.com",
                        "Enterprise enrollment app for Chromebooks\nhttp://go/eeapp\nTeam contact: bootstrap-dev@google.com",
                        "Improv (Material Gallery) mobile app.\nhttp://go/material-gallery\nTeam contact: gallery-eng@google.com",
                        "Google Translate\nhttp://go/translate-eng\nTeam contact: translate-team@google.com",
                        "Social G+ Engage\nhttp://go/social-engage\nTeam contact:social-engage-eng@google.com",
                        "CorpCam\nhttp://go/corpcam\nTeam contact: plus-ios-team@google.com",
                        "Android Contacts\nhttp://go/android-contacts\nTeam contact: android-contacts-eng@google.com",
                        "Curator app.\nhttp://go/curator\nTeam contact: curator-eng@google.com",
                        "Travel Booking.\nhttp://go/travel-booking\nTeam contact: travel-booking-eng@google.com",
                        "People ranking and discovery.\nhttp://go/das\nTeam contact: es-disco-eng@google.com",
                        "GPost (Pony Express)\nhttp://go/gpost\nTeam contact: gpost-eng@google.com\ndocs: http://go/gpost-android-analytics",
                        "Paidtasks (Google Opinion Rewards, Google Surveys)\nhttp://go/402\nTeam contact: 402-eng@google.com\ndocs: http://g3doc/paidtasks/app/README.md",
                        "Primer\nhttp://go/primerapp\nTeam contact: vkes@google.com",
                        "Local Discovery social features\nhttp://go/local-stream\nTeam contact: dgajda@google.com, local-discovery-team@google.com",
                        "Baseline\nhttp://go/baseline-android\nTeam contact: verily-mobile-team@google.com",
                        "Opa on Quartz\nhttp://go/opa\nTeam contact: lmirelmann@google.com, opa-quartz-team@google.com",
                        "Device Management Panel\nhttp://go/dpanel-eng\nTeam contact: dpanel-eng@google.com",
                        "Google Trips\nhttp://go/otg\nTeam contact: oace@",
                        "Google home services\nhttp://go/homeservices\nTeam contact: sab-eng@google.com",
                        "Social Good / donations\nhttp://go/socialgood\nTeam contact: socialgood-eng-team@google.com",
                        "Camera by Google photos\nTeam contact: loupe-eng@google.com",
                        "Live comments in sport onebox",
                        "Family Link\nhttp://go/familylink\nTeam contact: familylink-eng@google.com",
                        "g3doc comments\nhttp://go/g3doc-comments",
                        "Moma\nhttp://go/moma-site",
                        "Dasher Admin Console.\nThere is a separate id for DASHER_USER_HUB = 535\nhttp://go/novitas\nTeam contact: novitas-eng@google.com",
                        "Dasher Commerce Console.\nhttp://go/job314\nTeam contact: job314-eng@google.com",
                        "Travel Vacations.\nhttp://go/travel-vacations\nTeam contact: travel-vacations-eng@google.com",
                        "Trends\nhttp://go/trends\nTeam contact: trends-narrator@google.com",
                        "Tasks\nhttp://go/accomplice\nTeam contact: tasks-eng@google.com",
                        "Vimes\nhttp://go/vimes-doc\nTeam contact: vimes-eng@google.com",
                        "Security Event Manager\nhttp://go/sem-doc\nTeam contact: sem-eng@google.com",
                        "Eva, the wally camera companion app\nhttp://go/wally-camera\nTeam contact: tp-wally@google.com",
                        "Mindsearch-QA: go/india-qa and g/sbe-mindsearch.",
                        "Android Auto\nhttp://go/android-auto\nTeam contact: gearhead-eng@google.com",
                        "Application for live chat when playing games.\ngo/yeti-gg.",
                        "Application for the Apps Assistant Overlay.\nhttp://go/awr\nTeam contact: awr@google.com",
                        "Search Console.\nhttp://go/wmx\nTeam contact: wmx-fe@google.com",
                        "Chrome Web Store\nhttp://go/cws\nTeam contact: webstore-eng@google.com",
                        "Saves (http://go/saves)\nTeam contact: saves-web-eng@google.com",
                        "Food Ordering\nhttp://go/fopa\nTeam contact: fopa-eng@google.com",
                        "Social Recovery\nhttp://go/social-recovery-update\nTeam contact: aczeskis@google.com",
                        "Android Onboard Website (Growth MWeb)\nhttp://go/android-mweb-dd\nTeam contact: campaign-il@google.com",
                        "Android Wear (Clockwork)\nhttp://go/clockwork\nTeam contact: clockwork-eng@google.com",
                        "Fact Check Explorer web app\nhttp://go/fc-explorer\nTeam contact: fact-checking-dev@google.com",
                        "Allo app\nhttp://go/allo\nTeam contact: allo-discuss@google.com",
                        "Family Link Helper companion app for kids/teens\nhttp://go/familylink\nTeam contact: familylink-eng@google.com",
                        "Proxy Gal Provider.\nhttp://go/gal-provider-migration\nTeam contact: contacts-sync-eng@google.com",
                        "OneGoogle bar (web).\nhttp://go/og\nTeam contact: og-team@google.com",
                        "OneGoogle async widgets (web).\nhttp://go/og-stack-redesign\nTeam contact: og-team@google.com",
                        "Wicked video uploads\nhttp://go/wicked-prd\nTeam contact: wicked-team@google.com",
                        "Google Sheets\nNOTE: Sheets is a separate app from DRIVE.",
                        "Google Slides\nNOTE: Slides is a separate app from DRIVE.",
                        "Assistant Explore Web\nhttp://go/assistant-agents-web\nTeam contact: assistant-explore-eng@google.com",
                        "Assistant Settings Web\nhttp://go/assistant-settings-web-ui-design\nTeam contact: assistant-settings-web-eng-team@google.com",
                        "Android Dialer app\nhttp://go/dialer\nTeam contact: android-dialer@google.com",
                        "Klopfklopf Roomtablet app.\nsee http://go/klopfklopf\nTeam contact: klopfklopf-eng@google.com",
                        "Klopfklopf Hallwaytablet app.\nsee http://go/lageplan\nTeam contact: lageplan-eng@google.com",
                        "Science Journal app.\nsee http://go/sciencejournal\nTeam contact: science-journal@google.com",
                        "Hire app.\nhttp://go/hire-mobile\nTeam contact: bebop-mobile-dev@google.com",
                        "Poly (Zandria) app.\nhttp://poly.google.com/\nTeam contact: poly-team@google.com",
                        "Dasher Reseller Frontend.\nhttp://g3doc/ccc/hosted/g3doc/teams/reseller/\nTeam contact: dasher-reseller-eng@google.com",
                        "Zoomsights.\nhttp://go/zs-prd-tt-v2\nTeam contact: zoomsights-eng@google.com",
                        "Live comments for take out\nTeam contact: search-ugc@google.com",
                        "Patient Guardian\nhttp://go/patient-guardian-site\nTeam contact: patient-guardian-eng@google.com",
                        "Patient Guardian\nhttp://go/patient-guardian-site\nTeam contact: patient-guardian-eng@google.com",
                        "Google My Business (go/gmb)\nTeam contact: geomerchant-data-measurement@google.com",
                        "Presto Ads Landing Page (go/alp-v0)\nTeam contact: sb-ads@google.com",
                        "Presto consumer FE\nhttp://go/presto-eng\nTeam contact: geomerchant-presto@google.com",
                        "Kids Home app for young kids android home experience\nTeam contact: hogsmeade-eng@google.com",
                        "Google assistant (OPA) app\nhttp://go/opa\nTeam contact: opa-android-eng@google.com",
                        "Subscribe with Google Client (SwG)\nhttp://go/swg\nTeam contact: swg-eng@google.com",
                        "Lookout app\nhttp://go/reveal\nTeam contact: reveal-eng@google.com",
                        "Android Native Onboarding\nhttp://go/android-onboarding-dd\nTeam contact: growth-il-eng@google.com",
                        "AMP Actions\ngo/aog-amp-actions\nTeam contact: aog-amp-actions@google.com",
                        "Spot app\ngo/spot\nTeam contact: spot-eng@google.com",
                        "Medical Scribe\ngo/medical-scribe\nTeam contact: medical-scribe-frontend-eng@google.com",
                        "Medical Scribe Tasking\ngo/medical-scribe-tasking-overview\nTeam contact: medical-scribe-tasking@google.com",
                        "Dasher Rules Platform\ngo/project-raven\nTeam contact: rules-platform-eng@google.com",
                        "Android TV LauncherX app\ngo/launcherx\nTeam contact: atv-launcher-engineering@google.com",
                        "Android TV Setup Wizard app\ngo/atv-eng-setup\nTeam contact: android-tv-setup-team-eng@google.com",
                        "Live comments in Google search results page when an SOS Alert is triggered\ngo/ugc-live-comments-for-crisis\nTeam contact: google-sos-eng@google.com",
                        "Gmail Locker UI\ngo/gmail-locker\nTeam contact: locker-eng@google.com",
                        "Google-built translation editor.\ngo/polyglot\nTeam contact: polyglot-team@google.com",
                        "Plx\ngo/plx\nTeam contact: plx-explorer-team@google.com",
                        "Google Groups Frontend\nhttp://go/groups-doc\nTeam contact: groups-eng-team@google.com",
                        "Managed Street View Collection app\ngo/msvApp\nTeam contact: streetview-apps@google.com",
                        "Google voice for enterprise\ngo/wolverine\nTeam contact: wonlverine-eng@",
                        "G Suite Alert Center (MIC)\ngo/project-mic\nTeam contact: mic-eng@google.com",
                        "Google Forms\ngo/freebird\nTeam contact: freebird-eng@google.com",
                        "ARCore\ngo/arcore\nTeam contact: arcore-team@google.com",
                        "Android Emergency\ngo/android-safety-oct-ap-ps\nTeam contact: android-safety@google.com",
                        "Google Lens 1p Lenslets\ngo/lenslets-g3doc\nTeam contact: lenslets-eng@google.com",
                        "Medical Labeling\ngo/maple\nTeam contact: maple-eng@google.com",
                        "G Suite Add-on\ngo/gsuite-addons\nTeam contact: gsuite-addons-eng@google.com",
                        "Android library for Location History consent, part of Mobile Consent Flows.\ngo/lohiboshe, go/consent-flows\nTeam contact: consent-flows-team@google.com",
                        "Payments Platform Web UI\nhttp://go/payments-web-5\nTeam contact: payments-web-infra-eng@google.com",
                        "Cattery (Apps Developer Platform Console UI server)\ngo/cattery-g3\nTeam contact: cattery-eng@google.com",
                        "Source of truth for Alphabet legal entities\ngo/legal-entities\nTeam contact: introspect-eng@google.com",
                        "Nga Suggestion Resolution\nTeam contact: nga-app-integration",
                        "Hot Orders Ui\nTeam contact: hw17eng@google.com",
                        "Duc Companion\nTeam contact: duc-eng",
                        "Automon\nhttp://go/automon\nTeam contact: monitoring-platform-team@google.com",
                        "Tog\nTeam contact: tog-eng@google.com",
                        "App for debugging G+ user data go/googleadmin.\nReplacement for \"s:googleadmin\".",
                        "Different apps that are run by the notifications team.\nReplacement for \"s:messageprocessor\".",
                        "Replacement for \"s:emailprocessor\".",
                        "Replacement for \"s:reengagement:pipeline\".",
                        "Stream backend monitoring tool go/lorelei101.",
                        "",
                        "FrameService delete synchronization flume job.  The ASBE requests use\n\"s:frames\" (as do online frames requests).",
                        "Embeds migration flume job. Covers the multiple MR's for that project\n(V0 -> V1, V1 -> V2, diffing, verifying ...). At any point in time\nonly one of the jobs should be running. Doesn't issue any rpc requests.",
                        "SocialReviews sync flume job. Synchronizes reviews from zipit to ASBE.",
                        "Guns notifications delivery.",
                        "One-off flumes run by the PostBox team.\nTeam contact: es-postbox@google.com.",
                        "One-off flumes run by the G+ API team.\nTeam contact: plus-api-core@google.com.",
                        "Stanza delete synchronization flume job.",
                        "Social graph index monitoring tool.  go/graphprober.",
                        "Stanza periodic flume jobs.\nTeam contact: stanza-team.",
                        "Madison accounts periodic flume jobs.\nhttp://go/madison-accounts\n\nTeam contact: madison-eng",
                        "Papyrus periodic flume jobs.\nTeam contact: papyrus-team",
                        "Photos-backend flume jobs.\nTeam contact: photos-backend",
                        "Redbox storage backend\ngo/redbox",
                        "Photos FIFE flume jobs.\nTeam contact: fife-eng",
                        "Classifies abuse. Replaced by Ares (see below).\ngo/abuseiam",
                        "Classifies abuse\ngo/ares",
                        "Sends cliends Goops notifications.\ngo/streamindexing",
                        "Computes Additional KV Pairs for Stanza's\ngo/stanza-indexing",
                        "Stanza service: go/stanza.\nTeam contact: stanza-team.",
                        "Stanza moonshine indexing.\nTeam contact: es-stream-delivery",
                        "StreamActions service: go/streamactionsservice\nTeam contact: stream-team",
                        "StreamConfig service: go/socialstreamconfigservice\nTeam contact: stream-team",
                        "Stream service: go/stream-service\nTeam contact: stream-team",
                        "Stream delete service: go/delete-stream\nTeam contact: stream-team",
                        "Legal Investigations Support matter management\nhttp://go/kwyjibo",
                        "Test stanzas for internal integration tests. Clients who want to prototype\non Stanza should use SBE_PLAYGROUND instead.\nTeam contact: stanza-team",
                        "Use for test applications and unit tests",
                        "AnnotationServiceV2, see go/as2-design.\nTeam contact: social-stream-delivery",
                        "Stanza Listener for AnnotationServiceV2: go/as2-design\nTeam contact: social-stream-delivery",
                        "Stanza App for clients to prototype on.\nTeam contact: stanza-team",
                        "Expo uses the Yenta autocomplete lib (go/EXPO, go/yenta).\nTeam contact: weaver-expo@google.com, yenta-team@google.com",
                        "Android VR Home app.\nhttp://go/vr-home",
                        "YouTube BlarneyStone;  automated abuse and moderation classification\nhttp://go/blarneystone",
                        "Social Events\nhttp://go/social-events\nTeam contact: eventsapp@google.com",
                        "EmergencyAssist: on-demand location sharing\nhttp://go/pomeroy",
                        "Deprecated name for ENFORCEMENT_MANAGER\nDEPRECATED, DO NOT USE.",
                        "Ads Integrity's Enforcement Manager client (go/hidoc)",
                        "Ads Integrity's Explorer client (go/hidoc)",
                        "Ads Integrity's Reviewer client (go/hidoc)",
                        "G+ Collections pipeline.\n\nThis application id is used for internal cleanup. Please DO NOT use it for\nfrontend or backend logging.\n\nTeam contact: es-collections-eng@google.com.",
                        "Application used by G+-owned pipelines.\nContact: plus-server-eng@.",
                        "Papyrus service (go/papyrus).\nTeam contact: papyrus-team",
                        "App for administration of Youtube entities at admin.youtube.com\nTeam contact: yt-force@google.com",
                        "YouTube Decider (go/yt-tns-dna)\nTeam contact: yt-force-decision-platform@google.com",
                        "YouTube External Links (go/abusivelinks).\nTeam contact: youtube-url-defenses@google.com",
                        "Batch jobs run by the Focus Backend team (go/fbs)\nTeam contact: focus-backend-eng@google.com",
                        "",
                        "Duo Client\nTeam contact: duo-eng@google.com",
                        "Project albert (go/albert-frontend)\nTeam contact: albert-eng@google.com",
                        "People Playground (go/people-playground-design)\nTeam contact: project-buffet@google.com",
                        "Recommended posts pipeline (go/topics-web-gplus)\nTeam contact: stream-ranking-team@google.com",
                        "Image Search\nhttp://go/images\nTeam contact: images-ui-eng@google.com",
                        "Google Store\nhttp://go/smashberry\nTeam contact: smashberry-eng@google.com",
                        "NBU GConnect Mustard\nhttp://go/mustard\nTeam contact: gconnect-mustard-eng@google.com",
                        "Madden (http://go/madden)\nTeam contact: madden-eng@google.com",
                        "MobDog (http://go/mobdog)\nTeam contact: ph-eng@google.com",
                        "GBOARD (http://go/gboard)\nTeam contact: gboard-eng@google.com",
                        "Recorder (http://go/recorder)\nTeam contact: recorder-eng-team@google.com",
                        "All legacy g+ posts which currently does not have an application to map to.",
                        "Podium (http://go/podium)",
                        "FUSE targets at younger user base who is extensively using Visual/Photo and\nlocation as input for searching.\ngo/fuse-sbe-v0-integration.\nTeam Contact: igsa-visual@google.com",
                        "Honeyphish (http://go/honeyphish)",
                        "Offline backfill job for annotations generated by go/asv2.",
                        "Pops Support (Contact HR)\ngo/contacthr-design\nTeam contact: boq-contacthr-eng@google.com",
                        "Paisa Wander (http://go/paisa-tools)\nTeam Contact: paisa-tools@google.com",
                        "NextGen Retail Self Order (go/nextgenretail)\nTeam Contact: nextgenretail-eng@google.com",
                        "Application not set by client. Only used internally.",
                        "First Party Application which is not mapped to the already defined enums.",
                        "DEPRECATED DO NOT USE.",
                        "VIDEO_HANGOUT represents the gcomm application (javascript/apps/gcomm).\nHangout Video Calls (rtc-eng@).",
                        "Legacy (lite) hangouts (rtc-eng@).",
                        "GVC hangouts calls (gvc-team@).",
                        "go/present hangouts (gvc-team@).",
                        "Hangouts on Air (rtc-audience@).",
                        "Helpouts Hangouts (tee-team@).",
                        "Shoe SDK (etnu@).",
                        "Envoy (go/envoy). Contact: noahric@, envoy-eng@.",
                        "Babel's chat client (aka Hangouts Chat).",
                        "Babel's Nova client.\nUsed for NOVA related logging through BABEL.\nContact: mlei@",
                        "Media calling embedded in Wabel. Contact: efernandez@, dalesat@",
                        "Hangouts landing page (hangouts.google.com). Contact: jdudder@, jchord@",
                        "Express Lane (go/express-lane) Contact: efernandez@, pauldean@, qaz@",
                        "Enterprise Meetings App for Android\nhttp://go/thor-android\nTeam contact: c4w-mobile-eng@google.com",
                        "Express Lane on Boq. Contact: efernandez@, pauldean@, qaz@, segu@",
                        "Hangout Meet Hardware management\nTeam contact: rtc-fleet-mgmt-eng@google.com\n--------------------------- END HANGOUT APPLICATIONS ----------------------",
                        "Stax database (go/stax). Contact: stax-eng@",
                        "Hangouts Immersive Client.  Contact: pawong@, plancarte@",
                        "Scanner app.\nhttp://go/photos-scanner\nTeam contact: photos-draper-eng@google.com",
                        "Photos Library API\nhttp://go/photos-3p-g3docs\nTeam contact: photos-3p-eng@google.com",
                        "Photos Library API\nhttp://go/photos-3p-g3docs\nTeam contact: photos-3p-eng@google.com",
                        "Vault (go/vault)\nTeam contact: vault-eng@",
                        "Course Kit (go/prof)\nTeam contact: prof-eng@",
                        "TOTAL is for all application traffic.",
                        "TOTAL_ZERO_PARTY is for all traffic from plus.google.com or its\ncounterparts such as the native mobile G+ app or mobile web.",
                        "TOTAL_FIRST_PARTY is all non-G+ Google properties, such as Gmail\nand YouTube.",
                        "TOTAL_THIRD_PARTY is all third-party site traffic.",
                        "TOTAL_INTERNAL is all Google-internal traffic.\ne.g. prober, monitoring, mapreduces.",
                        "TOTAL_UNKNOWN is all unknown traffic.",
                        "TOTAL_MINUS_YOUTUBE is all traffic excluding any traffic from YOUTUBE.",
                        "TOTAL_FIRST_PARTY_WITH_PRIMARY_INTENT_TO_SHARE_TO_GPLUS is all first party\ntraffic with primary intent to share to Google+. All applications that\nbelong to TOTAL_FIRST_PARTY and do not belong to\nTOTAL_FIRST_PARTY_WITH_SECONDARY_INTENT_TO_SHARE_TO_GPLUS belong to this\ncategory.",
                        "TOTAL_FIRST_PARTY_WITH_SECONDARY_INTENT_TO_SHARE_TO_GPLUS is all first\nparty traffic with no primary intent to share to Google+. The applications\nthat belong to the category are defined in\ngoogle3/logs/lib/social/content_creation/blacklist_apps.pb.",
                        "TOTAL_GPLUS is all variations of gplus app under TOTAL_SOCIAL_APPS",
                        "TOTAL_SOCIAL_APPS is all core social Google apps.",
                        "CROWD_COMPUTE is a Google-internal crowd-sourcing platform.",
                        "KHAZANA is an NBU app for document organization.\nhttp://go/khazana\nTeam contact: khazana-eng@google.com",
                        "Lighter is a cross-platform messaging platform to enable applications to\nbuild rich in-app messaging experiences. GMM (Google Maps for Mobile)\nchatting is built on top of Lighter.\nTeam contact: sbe-lighter@google.com",
                        "Lighter is a cross-platform messaging platform to enable applications to\nbuild rich in-app messaging experiences. GMB (Google My Business) chatting\nis built on top of Lighter.\nTeam contact: sbe-lighter@google.com",
                        "MYACTIVITY is myactivity.google.com\nhttp://go/myactivity\nTeam contact: footprints-team@google.com",
                        "BLOG_COMPASS is an app that helps bloggers manage their site and find\ntopics to write about.\nhttp://go/blog-compass\nTeam: blog-compass@google.com",
                        "CONCORD measures business and product usage metrics across Google Cloud\nPlatform.\nhttp://go/concord\nTeam: concord-dev@google.com",
                        "Navstar is an app that helps googlers to understand how\nusers are interacting wiht Search & Assistant features.\nhttp://go/navstar2\nTeam: navstar-eng@google.com",
                        "Settings Intelligence is an app that contains updatable module\nfor Pixel Settings.\nhttp://go/hacking-on-settings\nTeam: android-settings-core@google.com",
                        "Topaz teams is a team under Topaz (aka Google Cloud Search) with a mission\nto externalize the Teams product we have here at Google under Moma.\nhttp://go/topaz-teams\nTeam: topaz-teams-eng@google.com",
                        "Google Endpoint Management Android Agent\ngo/emm-extension\nTeam: mdm-core-eng@google.com",
                        "DUMBLEDORE is an app that helps kids learn through relevant interest based\ninformal interactions across Google's products\nhttp://go/dumbledore\nTeam: dumbledore-team",
                        "Google One is a subscriptions plan that unlocks premium experiences across\nGoogle products.  go/googleone\nTeam: subscriptions",
                        "NBU GConnect Kimchi\nGoogle Station Partner Console\nhttp://go/gstation-partner-console\nTeam: mdb.nbu-gconnect-kimchi-team@google.com",
                        "FASTDASH is a near real-time reporting system that processes front-end logs\ngo/fastdash\nTeam:fastdash-infra",
                        "Clockwork (Aquarius Lapis)\ngo/aquarius-eng\nTeam: aquarius-eng@google.com",
                        "Dasher Reporting\ngo/dasher-reporting-g3doc\nTeam: dasher-bip-eng@google.com",
                        "NBU GConnect Picard\nhttp://go/gconnect-picard\nTeam contact: gstation-web@google.com",
                        "go/jacquard",
                        "Google go\nhttp://go/googlego\nTeam: googleit-eng-team@google.com",
                        "Used in Buganizer.",
                        "Used in Docos Mentions.",
                        "Used in Trix Waffle. go/trixwaffle.",
                        "Used in Share Service. go/apps-share",
                        "Android Safety go/android-safety-g3doc",
                        "Yeti text chat for Takeout.\ngo/yeti-takeout-integration\nTeam contact: yeti-textchat@google.com",
                        "Assistant Go\nhttp://go/goopa\nTeam: assistant-lite-android-eng@google.com",
                        "Flourish App. go/flourish",
                        "ALECS\ngo/project-mic\nTeam contact: mic-eng@google.com",
                        "Nandhi Test Scheduler\nTeam contact: people-sharing-engprod@google.com",
                        "Audio Recorder\nTeam contact: pixel-apps-recorder@google.com",
                        "ContactStore traffic with unknown client.",
                        "Profile Card\ngo/yt-profile-card-prd\nTeam contact: yt-identity-core",
                        "Espresso\nTeam contact: readiness-devs",
                        "People Companion\nhttp://go/people-companion-dd\nTeam contact: people-sheet-web@google.com",
                        "Photos Go (go/photos-go)\nTeam contact: photos-go-eng",
                        "yeti\ngo/yeti\nTeam contact: yeti-analytics-eng",
                        "Bloom\ngo/bloom\nTeam contact: bloom-edu-eng@google.com",
                        "Field Officer Android app.\nTeam contact: corp-physicalsecurity-mobile-eng@google.com",
                        "Google Roads & Transit\ngo/urbanmobility\nTeam contact: urban-mobility-eng@google.com",
                        "Google Health Familycare\ngo/hydrangea\nTeam contact: health-familycare-apps-eng@google.com",
                        "Intuitive Platform\ngo/intuitive\nTeam contact: ml4nt-dev@google.com",
                        "Paisa microapps cricket.\ngo/wc-2019\nTeam contact: payments-microapps-pek-team@google.com",
                        "Integration Platform\nTeam contact: cloud-crm-platform-eng@prod.google.com",
                        "CrOS Scaling & Services staging apps generic commenting service.\ngo/cros3\nTeam contact: chromeos-peng-eng@google.com.",
                        "CrOS Scaling & Services prod apps generic commenting service\ngo/cros3\nTeam contact: chromeos-peng-eng@google.com.",
                        "Assistant Proactive Suggestions.\ngo/opacros-proactive-design\nTeam contact: assistant-proactive-suggestions-team@google.com",
                        "Bulletin Contributor app\ngo/bulletin\nTeam contact: bulletin-eng@google.com",
                        "Privacy One Suite of Applications\ngo/privacy-one\nTeam contact: privacy-one-dev-team@google.com",
                        "Paisa app\nhttp://go/paisa\nTeam contact: paisa-eng@google.com",
                        "Assist JS\ngo/aog-assistjs-logging\nTeam contact: aog-amp-actions@google.com",
                        "Hotelier\ngo/hotelier-frontend\nTeam contact: hotels-hotelier-eng@google.com",
                        "Photos Kindygram (Photos for Edu) app\ngo/kindy\nTeam contact: kindygram-eng@google.com",
                        "Messages SMS/MMS/RCS messaging app for Android\ngo/messages\nTeam contact: am-shell-team@google.com",
                        "HKB hotel editor\ngo/hkb\nTeam contact: hkb-eng@google.com",
                        "Vistaar web app\ngo/vistaar\nTeam contact: vistaar-eng@google.com",
                        "Vistaar web app, non-prod instances\ngo/vistaar\nTeam contact: vistaar-eng@google.com",
                        "G Suite Growth\ngo/dasher-growth\nTeam contact: dasher-growth-eng@google.com",
                        "Eldar\ngo/eldar\nTeam contact: eldar-dev@google.com",
                        "GMB Android client\nhttp://go/gmb-android\nTeam contact: gmb-android@google.com",
                        "Shopping List\ngo/shoppinglist\nTeam contact: shoppinglist-eng@google.com",
                        "Earth\nTeam contact: earth-ios",
                        "Instant Loans Microapp\ngo/instant-loans-ui-v2-dd\nTeam contact: paisa-credit-eng@google.com",
                        "Assistant Go Web (Citadel)\ngo/goopa-citadel\nTeam contact: assistant-nbu-android-eng@googoe.com",
                        "Showtime\nTeam contact: ecp-platform-team",
                        "Admin Console - Compliance Center (go/konark)\ngo/konark\nTeam contact: konark-eng@google.com",
                        "Exo Refserver\ngo/exo\nTeam contact: exo-core@google.com",
                        "Monitoring Platform\ngo/monitoring-platform\nTeam contact: monitoring-platform-team@google.com",
                        "Autocap\ngo/autocap\nTeam contact: capmgmt-team@google.com",
                        "Payments Orchestration\ngo/orchestration\nTeam contact: payments-platform-discuss@google.com",
                        "Google My Business iOS\nhttp://go/gmb\nTeam contact: geomerchant-data-measurement@google.com",
                        "Assistant on KaiOS\ngo/nbu-dcf-dd\nTeam contact: assistant-nbu-features-eng@google.com",
                        "AdMob companion app\ngo/admob-mobile-dd\nTeam contact: admob-mobile-app-eng",
                        "Health Screeners app\ngo/screeners-prd\nTeam contact: health-screeners-dev@google.com",
                        "Meetings intelligence\nhttp://go/meetings-intelligence\nTeam contact: meetings-intelligence-eng@google.com"
                    ],
                    "type": "string"
                },
                "device": {
                    "description": "The physical device that generated the request.",
                    "enum": [
                        "UNKNOWN_DEVICE",
                        "DESKTOP",
                        "ANDROID_PHONE",
                        "ANDROID_TABLET",
                        "IOS_PHONE",
                        "IOS_TABLET",
                        "TIER_2_3",
                        "BORG_JOB",
                        "GLASS",
                        "ANDROID_TV",
                        "DIGITAL_WHITEBOARD",
                        "VIDEO_CONFERENCE_SYSTEM",
                        "UNSET_DEVICE",
                        "TOTAL_DEVICE",
                        "TOTAL_DEVICE_MOBILE",
                        "TOTAL_DEVICE_MOBILE_ANDROID",
                        "TOTAL_DEVICE_MOBILE_IOS"
                    ],
                    "enumDescriptions": [
                        "Cannot just use UNKNOWN because enum values use C++ scoping rules.\nTherefore, \"UNKNOWN\" must be unique within \"apps.people.logs.proto\".",
                        "Apps or browsers running on desktops.",
                        "Android phone.",
                        "Android tablet.",
                        "ios phone + ipod.",
                        "ios tablet.",
                        "Tier 2 and 3 mobile devices.",
                        "Borg jobs that hit the service directly and have no frontend clients.\nE.g. mapreduce jobs.",
                        "http://go/projectglass",
                        "Pano No Touch UI for Android At Home go/aah",
                        "Large interactive display intended for whiteboard-like collaboration.\nExamples: Google Jamboard, Microsoft Surface Hub.",
                        "Video Conference Hardware.\nExamples: Hangouts Meet Hardware, Zoom Hardware.",
                        "Device not set by client. Only used internally.",
                        "TOTAL_DEVICE is for all device traffic, including UNKNOWN_DEVICE and\nUNSET_DEVICE.",
                        "TOTAL_DEVICE_MOBILE is for all traffic coming from\nmobile phones and tablets:\nANDROID_PHONE\nANDROID_TABLET\nIOS_PHONE\nIOS_TABLET\nTIER_2_3",
                        "TOTAL_DEVICE_MOBILE_ANDROID is for all traffic coming from\nAndroid phones and tablets:\nANDROID_PHONE\nANDROID_TABLET",
                        "TOTAL_DEVICE_MOBILE_IOS is for all traffic coming from\niOS phones and tablets:\nIOS_PHONE\nIOS_TABLET"
                    ],
                    "type": "string"
                },
                "platform": {
                    "description": "The platform running the application, whether native or web.",
                    "enum": [
                        "UNKNOWN_PLATFORM",
                        "WEB",
                        "NATIVE",
                        "BROWSER_EXTENSION",
                        "COMPANION",
                        "IMAP",
                        "UNSET_PLATFORM",
                        "TOTAL_PLATFORM"
                    ],
                    "enumDescriptions": [
                        "Cannot just use UNKNOWN because enum values use C++ scoping rules.\nTherefore, \"UNKNOWN\" must be unique within \"apps.people.logs.proto\".",
                        "This represents apps that run on a browser on any OS.",
                        "This represents a native app, e.g. Android app, iOS app, or G+ Photos\nnative client, which doesn't run in a browser.",
                        "A web browser plug-in that extends functionality of the browser and may\ninteract with third-party sites; includes toolbars.",
                        "This represents an app that runs inside a companion (go/gcompanion-eng).",
                        "This represents IMAP traffic for mailing apps.",
                        "Platform not set by client. Only used internally.",
                        "TOTAL_PLATFORM is for all platform traffic."
                    ],
                    "type": "string"
                },
                "trafficType": {
                    "description": "The type of traffic, whether User-Initiated, Dark Launch, etc.",
                    "enum": [
                        "UNKNOWN_TRAFFIC_TYPE",
                        "USER_INITIATED",
                        "USER_FACING_POLL",
                        "BACKGROUND_POLL",
                        "DARK_LAUNCH",
                        "MONITORING",
                        "INTERNAL_PROCESS"
                    ],
                    "enumDescriptions": [
                        "Any enum value not known to the binary reading the proto defaults to this.\nKeep this as the first value in the enum to preserve that. Assume same\npriority as user-initiated request.",
                        "Traffic initiated by a human user. Corresponds to CRITICAL_80.",
                        "Polling traffic where there's a user waiting on the other end. Corresponds\nto SHEDDABLE_30.",
                        "Traffic initiated by applications that poll or sync periodically. User is\nnot waiting for the response. Corresponds to SHEDDABLE_30.",
                        "Traffic that may be user-initiated but does not surface data to the user.\nCorresponds to SHEDDABLE_20 (less important dark launches can override to\nSHEDDABLE_10).",
                        "Traffic generated by internal probers.",
                        "Internal jobs such as batch MRs. Corresponds to SHEDDABLE_20. Low-priority\nbatch jobs can override to SHEDDABLE_10."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SocialCommon__SocialApiaryExtensions": {
            "description": "Extensions for sending sidechannel-esque information via Apiary. Meant for\nuse by both Oz and Tau.",
            "id": "SocialCommon__SocialApiaryExtensions",
            "properties": {},
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus_AirportRestrictions_RouteSpecification": {
            "description": "Airport IATA codes for BETWEEN_RESTRICTION and ROUTE_RESTRICTION",
            "id": "TravelFlightsProtoFlightStatus_AirportRestrictions_RouteSpecification",
            "properties": {
                "fromAirport": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "toAirport": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "viaAirport": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus_ApplicableWaiver_WaiverLink": {
            "description": "Information about how to generate a URL to link to more information or\nactions a user can take with the waiver (typically a deep link to an\nairline website).",
            "id": "TravelFlightsProtoFlightStatus_ApplicableWaiver_WaiverLink",
            "properties": {
                "urlTemplateFormatString": {
                    "description": "A format string providing the template for the URL. The frontend will\nobviously be responsible for filling the link with pertinent info\n(particularly user locale info) and then converting into a real URL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__AirportRestrictions": {
            "description": "The airports that a waiver applies to. They can be specified as a\nfrom/to/via airport (where any departure or arrival at the airport applies),\na between restriction (where the flight's origin and destination must both\nmatch the specification), or a route restriction (where the flight's origin\nor destination must match an airport in the \"from\" or \"to\" category\nrespectively, and the \"via\" airports are only used for layovers).",
            "id": "TravelFlightsProtoFlightStatus__AirportRestrictions",
            "properties": {
                "fromToViaAirport": {
                    "description": "Airport IATA codes for FROM_TO_VIA restriction",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "routeSpecification": {
                    "items": {
                        "$ref": "TravelFlightsProtoFlightStatus_AirportRestrictions_RouteSpecification"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "UNDEFINED_RESTRICTION",
                        "FROM_TO_VIA_RESTRICTION",
                        "BETWEEN_RESTRICTION",
                        "ROUTE_RESTRICTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__ApplicableWaiver": {
            "description": "A representation of a waiver that applies to a particular flight. This\nproto contains any information required to render the waiver and link to\nwhere a user could find alternate flights and fulfill the waiver, but\ndrops all the information used to match to a flight.",
            "id": "TravelFlightsProtoFlightStatus__ApplicableWaiver",
            "properties": {
                "airportRestrictions": {
                    "$ref": "TravelFlightsProtoFlightStatus__AirportRestrictions",
                    "description": "The specification for which airports this waiver applies to."
                },
                "carrier": {
                    "description": "The carrier that published the waiver.",
                    "type": "string"
                },
                "firstDateApplies": {
                    "$ref": "GoogleType__Date",
                    "description": "These fields specify the date range during which the waiver is active. The\ntime zone is the user's location. The dates are inclusive."
                },
                "id": {
                    "description": "A unique identifier for the waiver, taken from FlightStatusWaiver.",
                    "format": "int64",
                    "type": "string"
                },
                "lastDateApplies": {
                    "$ref": "GoogleType__Date"
                },
                "matchingCarrier": {
                    "description": "The operating carriers affected by the waiver.",
                    "items": {
                        "$ref": "TravelFlightsProtoFlightStatus__CarrierPair"
                    },
                    "type": "array"
                },
                "maxTimeToDeparture": {
                    "type": "string"
                },
                "minTimeToDeparture": {
                    "description": "These fields specify the range for amount of time left until departure\nduring which the waiver applies. Since we cannot use\ngoogle.protobuf.Duration safely, store iso8601 string-serialized durations\n(e.g., \"PT8H6M12.345S\").",
                    "type": "string"
                },
                "publishTimestamp": {
                    "description": "When the waiver was published to production, taken from FlightStatusWaiver.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "waiverLink": {
                    "$ref": "TravelFlightsProtoFlightStatus_ApplicableWaiver_WaiverLink"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__AttributionLink": {
            "description": "A message for linking to a flight status data provider for attribution.",
            "id": "TravelFlightsProtoFlightStatus__AttributionLink",
            "properties": {
                "dataSource": {
                    "enum": [
                        "DATA_SOURCE_NOT_SET",
                        "FLIGHT_STATS",
                        "OAG",
                        "FLIGHT_SCHEDULES",
                        "FLIGHT_STATS_FLEX",
                        "SSIM",
                        "MERGER",
                        "VARIFLIGHT",
                        "INSIGHTS",
                        "NOTIFICATION",
                        "DECORATOR",
                        "MERGER_SIMULATION",
                        "MERGER_NO_INSIGHTS",
                        "MERGER_NO_RUNWAY_TIMES"
                    ],
                    "enumDescriptions": [
                        "This is useful for MergerMetadata. Having a default value helps us\nrepresent case when a field comes from the primary data source.",
                        "",
                        "",
                        "Flight schedules from SSTables used by the e-mail parsing team.",
                        "FlightStats Flex API.",
                        "SSIM Schedules.",
                        "Merge of sources.",
                        "VariFlight",
                        "Insights generated internally.",
                        "Generated notification.",
                        "Data added in the decorator. For example, a waiver update.",
                        "Merge simulation. Note that this is only used for data analysis.",
                        "Merger without insights. Note that this is only used for data analysis.",
                        "Merger without runway times. Note that this is only used for data\nanalysis."
                    ],
                    "type": "string"
                },
                "desktopUrl": {
                    "description": "DEPRECATED. Use url instead.",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "mobileUrl": {
                    "type": "string"
                },
                "url": {
                    "description": "Locale independent URL. Used for both desktop and mobile. If it is\nmissing, text-only attribution is displayed instead of a link. May be a\ntemplate, which must be filled by the frontend before the url is usable.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__CarrierPair": {
            "description": "A message pairing operating and marketing carriers. Specifying both\noperating and marketing carrier indicates that only that a waiver only\napplies to that specific operating / marketing combination.",
            "id": "TravelFlightsProtoFlightStatus__CarrierPair",
            "properties": {
                "marketingCarrier": {
                    "type": "string"
                },
                "operatingCarrier": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__FlightStatusContext": {
            "description": "Provides context to the state of the flight: airport-wide events, FAA\nadvisories, a state of another flight that impacts this one, etc.",
            "id": "TravelFlightsProtoFlightStatus__FlightStatusContext",
            "properties": {
                "advisoryCause": {
                    "description": "In case the context is due to an airport advisory, reference the\nspecific impacting condition which caused this advisory.",
                    "enum": [
                        "UNKNOWN_CAUSE",
                        "RWY",
                        "LOW",
                        "THUNDERSTORMS",
                        "WIND",
                        "VOLUME",
                        "EQUIPMENT",
                        "FOG",
                        "DISABLED",
                        "AIRCRAFT",
                        "COMPACTED",
                        "AIR",
                        "VIP",
                        "RAIN",
                        "MULTITAXI",
                        "SNOWICE",
                        "SECURITY",
                        "FIRE",
                        "POOR",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "",
                        "Runway congestion",
                        "Low cloud ceiling/reduced visibility",
                        "Thunderstorms/heavy precipitation",
                        "High wind speeds",
                        "Aircraft volume exceeds capacity",
                        "Major equipment failure",
                        "Fog/reduced visibility",
                        "",
                        "",
                        "Compacted demand",
                        "",
                        "Arrival of VIP",
                        "Heavy precipitation",
                        "Many aircraft trying to taxi at once",
                        "Snow and/or ice",
                        "Security concern",
                        "Fire",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "fractionCancelled": {
                    "description": "In case of an airport-level event, use this to indicate the fraction of\npotentially affected flights that are known to be cancelled.",
                    "format": "float",
                    "type": "number"
                },
                "fractionDelayed": {
                    "description": "In case of an airport-level event, use this to indicate the fraction of\npotentially affected flights that are known to be delayed.",
                    "format": "float",
                    "type": "number"
                },
                "groupedAdvisoryCause": {
                    "description": "A user comprehensible impacting condition which is causing this advisory.",
                    "enum": [
                        "UNKNOWN_GROUPED_CAUSE",
                        "CONGESTION",
                        "LOW_VISIBILITY",
                        "CAUSE_THUNDERSTORMS",
                        "CAUSE_WIND",
                        "CAUSE_RAIN",
                        "SNOW_OR_ICE",
                        "EQUIPMENT_PROBLEM",
                        "OTHER_CAUSE"
                    ],
                    "enumDescriptions": [
                        "",
                        "RWY, VOLUME, COMPACTED, MULTITAXI",
                        "LOW, FOG",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "incomingFlight": {
                    "description": "In case the context is due to an incoming flight, reference the flight.\nThis is the leg-key of that flight.",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "TravelFlightsProtoFlightStatus__InsightMetadata"
                },
                "type": {
                    "enum": [
                        "UNKNOWN_TYPE",
                        "INCOMING_FLIGHT_DELAYED",
                        "GROUND_DELAY_AT_DESTINATION",
                        "GROUND_STOP_AT_DESTINATION",
                        "WEATHER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__FlightStatusExtended": {
            "description": "Extended flight status fields used by various frontend protos to implement\nnew features.\nNext ID: 10",
            "id": "TravelFlightsProtoFlightStatus__FlightStatusExtended",
            "properties": {
                "airlinePhoneNumber": {
                    "type": "string"
                },
                "airlineWebsiteUrl": {
                    "description": "Airline website and phone number specific for user's country and language.\nThese will be displayed in cases of a canceled or severely delayed flight.",
                    "type": "string"
                },
                "attributionLink": {
                    "description": "Links used for data source attribution. Contain template URLs.\nThe flightstats URL has 2 %s instead of the airline code and the flight\nnumber.",
                    "items": {
                        "$ref": "TravelFlightsProtoFlightStatus__AttributionLink"
                    },
                    "type": "array"
                },
                "insights": {
                    "$ref": "TravelFlightsProtoFlightStatus__FlightStatusInsights",
                    "description": "Insights associated with this flight (e.g., predicted delays based on\nthe status of a related flight or an airport advisory)"
                },
                "isScheduleOnly": {
                    "description": "Whether only schedule information is enabled for this flight.\nOther information, like live updates, will be disabled.",
                    "type": "boolean"
                },
                "lastNotifiedUpdateTime": {
                    "description": "The update time of the flight status update most recently notified to\nusers. If last_notified_update_time and update_time (above) are equal,\nthe flight status backend has decided that this update might be worth\nnotifying.",
                    "type": "string"
                },
                "notificationReason": {
                    "description": "If applicable, the set of reasons why a notification might be worth\nsending to a user. If this list is non-empty, the flight status backend\nhas decided that this update might be worth notifying.",
                    "enumDescriptions": [
                        "",
                        "Significant non-cancellations (i.e., DIVERTED)",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Basic flight info ~24h before departure.",
                        "Flight is ready for checkin.",
                        "A boarding pass N hours before departure.",
                        "A new waiver may now apply to the flight.",
                        "Just received departure gate information (no previous information).",
                        "Received an update on departure gate information.",
                        "Just received departure gate information (no previous information).",
                        "Received an update on departure terminal information.",
                        "Just received arrival gate information (no previous information).",
                        "Received an update on arrival gate information.",
                        "Just received arrival gate information (no previous information).",
                        "Received an update on arrival terminal information.",
                        "Flight previously reported delayed is announced to have a shorter delay\nthan before.",
                        "Flight is heading to an airport other than the originally scheduled one.",
                        "Flight has landed at an airport other than the originally scheduled one."
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_NOTIFICATION_REASON",
                            "STATUS",
                            "CANCELLATION",
                            "DEPARTURE_DELAY",
                            "ARRIVAL_DELAY",
                            "GATE_OR_TERMINAL",
                            "DELAY_PREDICTION",
                            "DEFAULT_UPDATE",
                            "CHECKIN",
                            "BOARDING_PASS",
                            "WAIVER",
                            "NEW_DEPARTURE_GATE",
                            "UPDATED_DEPARTURE_GATE",
                            "NEW_DEPARTURE_TERMINAL",
                            "UPDATED_DEPARTURE_TERMINAL",
                            "NEW_ARRIVAL_GATE",
                            "UPDATED_ARRIVAL_GATE",
                            "NEW_ARRIVAL_TERMINAL",
                            "UPDATED_ARRIVAL_TERMINAL",
                            "DELAY_REDUCTION",
                            "REDIRECTION",
                            "DIVERSION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "waiver": {
                    "$ref": "TravelFlightsProtoFlightStatus__ApplicableWaiver",
                    "description": "The most pertinent waiver that applies to this flight."
                },
                "waiverWebsiteUrl": {
                    "description": "Airline waiver website specific for user's language. This will be used when\na waiver is displayed for the flight.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__FlightStatusInsights": {
            "description": "A message to store and communicate Flight Status insights associated with a\nflight-leg. These can be prediction insight or insights about the context for\nthe flight's state.\nNext ID: 10",
            "id": "TravelFlightsProtoFlightStatus__FlightStatusInsights",
            "properties": {
                "context": {
                    "description": "Context: Lists all circumstances we know of that affect this flight. The\nidea is to only populate context that would affect the flight with high\nenough confidence, but as far as this proto is concerned, any events that\ncoincide with the flight can be placed here.",
                    "items": {
                        "$ref": "TravelFlightsProtoFlightStatus__FlightStatusContext"
                    },
                    "type": "array"
                },
                "legKey": {
                    "description": "The leg-key of the flight to which the insights pertain.\nFormat: <departure date><origin><destination><operating flight number>\nExample: 2017-05-01BOSSFOAA123",
                    "type": "string"
                },
                "predictedGateArrival": {
                    "$ref": "TravelFlightsProtoFlightStatus__PredictedTime"
                },
                "predictedGateDeparture": {
                    "$ref": "TravelFlightsProtoFlightStatus__PredictedTime",
                    "description": "Predictions"
                },
                "predictedTakeOff": {
                    "$ref": "TravelFlightsProtoFlightStatus__PredictedTime"
                },
                "predictedTouchdown": {
                    "$ref": "TravelFlightsProtoFlightStatus__PredictedTime"
                },
                "status": {
                    "$ref": "TravelFlightsProtoFlightStatus__PredictedStatus"
                },
                "updateTimes": {
                    "$ref": "TravelFlightsProtoFlightStatus__InsightsUpdateTimes",
                    "description": "Overall and per-source update times of the insights."
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__InsightMetadata": {
            "description": "Used to store fields, common to all insights, which indicate how the insight\nwas generated.",
            "id": "TravelFlightsProtoFlightStatus__InsightMetadata",
            "properties": {
                "confidence": {
                    "description": "A number between 0.0 and 1.0",
                    "format": "float",
                    "type": "number"
                },
                "source": {
                    "description": "The source(s) of the insight. In case the insight is based on more than one\nmodel, multiple sources are included in this repeated field.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "UNKNOWN_SOURCE",
                            "ARRIVAL_PREDICTOR",
                            "WEATHER_DEPARTURE_PREDICTOR",
                            "INCOMING_FLIGHT_DEPARTURE_PREDICTOR",
                            "AIRPORT_ADVISORY_DEPARTURE_PREDICTOR",
                            "CONTEXT_MODEL",
                            "POSITIONAL_STATUS_INFERRER",
                            "AIRPORT_ADVISORY_CONTEXT_GENERATOR"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__InsightsUpdateTimes": {
            "description": "Overall and per-source update times. update_time is unique and increasing per\nleg-key. update_time_by_source is needed to maintain consistency and\ncorrectness.",
            "id": "TravelFlightsProtoFlightStatus__InsightsUpdateTimes",
            "properties": {
                "updateTime": {
                    "description": "UTC time in ISO 8601 format, 2008-12-31T16:34:00.000Z. This field is unique\nand always increasing per leg-key.",
                    "type": "string"
                },
                "updateTimeBySource": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map from leg-keys (and possibly other sources) contributing to the\ninsights to their update times (UTC time in ISO 8601 format).",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__PredictedStatus": {
            "description": "Predicted status of the flight (for example, predict a flight is cancelled).",
            "id": "TravelFlightsProtoFlightStatus__PredictedStatus",
            "properties": {
                "attributionUrl": {
                    "description": "This refers to locale specific flightaware URL.",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "TravelFlightsProtoFlightStatus__InsightMetadata"
                },
                "startTime": {
                    "description": "UTC time in ISO 8601 format, 2007-12-03T10:15:30.000Z when the flight\nentered the predicted status.",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "UNKNOWN",
                        "BEFORE_TAKEOFF",
                        "IN_AIR",
                        "LANDED",
                        "IN_HOLDING_PATTERN",
                        "IN_AIR_AFTER_HOLDING_PATTERN"
                    ],
                    "enumDescriptions": [
                        "Default value, if status is not known",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TravelFlightsProtoFlightStatus__PredictedTime": {
            "description": "Predicted local time of a flight life-event (like gate departure).\nIt has the capacity to refer to an imprecise time interval, because that may\nbe the only way for the prediction to have high enough confidence (for\nexample, if the prediction model outputs probabilities of buckets).",
            "id": "TravelFlightsProtoFlightStatus__PredictedTime",
            "properties": {
                "metadata": {
                    "$ref": "TravelFlightsProtoFlightStatus__InsightMetadata"
                },
                "notAfter": {
                    "description": "Local time in ISO 8601 format, 2008-12-31T16:34:00.000-04:00",
                    "type": "string"
                },
                "notBefore": {
                    "description": "Local time in ISO 8601 format, 2008-12-31T16:34:00.000-04:00",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Util__StatusProto": {
            "description": "Wire-format for a Status object",
            "id": "Util__StatusProto",
            "properties": {
                "canonicalCode": {
                    "description": "The canonical error code (see codes.proto) that most closely\ncorresponds to this status. May be missing.",
                    "format": "int32",
                    "type": "integer"
                },
                "code": {
                    "description": "Numeric code drawn from the space specified below. Often, this is the\ncanonical error space, and code is drawn from google3/util/task/codes.proto",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "Detail message",
                    "type": "string"
                },
                "messageSet": {
                    "$ref": "Proto2Bridge__MessageSet",
                    "description": "message_set associates an arbitrary proto message with the status."
                },
                "payload": {
                    "$ref": "Proto__TypedMessage",
                    "description": "DEPRECATED.\n\nThis field was deprecated in 2011 with cl/20297133.  Java support\nfor the field was moved to a proto1 backward compatibility class\nin April 2017 with cl/142615857 and cl/154123203.  There was\nnever support for this field in Go; if set Go will ignore it.\nC++ stopped setting StatusProto::payload in October 2015 with cl/106347055,\nand stopped reading the field in October 2017 with cl/173324114.\n\nIn general, newly written code should use only \"message_set\". If you need\nto maintain backward compatibility with code written before 3/25/2011, do\nthe following:\n\n- During the transition period, either (1) set both \"payload\" and\n  \"message_set\", or (2) write the consumer of StatusProto so that it can\n  forge a MessageSet object from \"payload\" if \"message_set\" is missing.\n  The C++ util::Status implementation does (2).\n\n- Once all the consumers are converted to accept \"message_set\", then\n  remove the use of \"payload\" on the producer side."
                },
                "space": {
                    "description": "The following are usually only present when code != 0\nSpace to which this status belongs",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "__EventIdMessage": {
            "description": "An EventId is a 128 bit identifier that uniquely identifies an event, such\nas a query.  The event time recorded to the nearest microsecond, along\nwith information about the process generating event ensures that all\nEventIds are unique.\n\nDetails of this EventId are described in a design document:\n  http://www/eng/designdocs/sawmill/adlogs.html",
            "id": "__EventIdMessage",
            "properties": {
                "processId": {
                    "description": "process_id is an integer that identifies the process on this machine\nthat generated this event.  This id is calculated once when the server\ngenerates its first event, and it never changes for the life of this\nserver process.\n\nThis field has a very specific format mandated by the logs collection\ninfrastructure, which is subject to change WITHOUT NOTICE. As of\n2013-01-09, this format is:\n  uint32 process_id = (time(NULL) << 24) + (getpid() & 0xFFFFFF);\n\nIf you are generating an extended_pid directly, you MUST use one of the\nmaintained library implementations in order to generate it properly:\n C++    //logs/eventid library; call ServerId::ExtendedPid()\n Python //logs/eventid/python:eventid; call GetPid()\n Go     //logs/eventid/go:eventid; call ExtendedPID()\n Java   //java/com/google/common/logging; call EventId.getPid()\n\nIf you think that you need to parse the values of this field, please\ncontact logs-collection-dev@ to discuss your requirement.",
                    "format": "uint32",
                    "type": "integer"
                },
                "serverIp": {
                    "description": "server_ip is the IPv4 address or http://go/ghostid of the machine running\nthe server that created this event message.  This allows us to distinguish\nbetween events that occur at the same time on different servers.\nFormat: 10.1.2.3 is stored as 0x0a010203, and GHostId 1 as 0x00000001.",
                    "format": "uint32",
                    "type": "integer"
                },
                "timeUsec": {
                    "description": "time_usec is the number of microseconds since the epoch (i.e., since\n1970-01-01 00:00:00 UTC) as an int64: 1e6 * (unix time) + microseconds.\nApplications must ensure that EventIdMessages have increasing times,\nartificially increasing time_usec to one greater than the previous value\nif necessary.\nAlternate implementations were considered:\n  1. storing unix time and microseconds separately would require a bit\n     more storage, and the convenience of having a single value\n     representing the time seemed more useful than having trivial access\n     to a unix time.\n  2. storing unix time in the upper 32 bits would allow for more\n     precision - up to 4G events/second, but it wouldn't print nicely as\n     a decimal value and it seems unlikely that any single server would\n     ever sustain more than 1M events/second.\n  3. Java-compatible time uses millis - this would limit servers to 1000\n     events per second - too small.\nOther names for this field were considered, including time, time_stamp,\nand utime.  We felt that including the units in the name would tend to\nproduce more readable code. utime might be interpreted as user time.\nunix timestamp * 1e6 + microseconds",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "__GMRRoutingInfo": {
            "id": "__GMRRoutingInfo",
            "properties": {
                "AbuseRedirectorSelector": {
                    "type": "string"
                },
                "AbuseRedirectorService": {
                    "description": "What service should we delivery email that is marked as spam?",
                    "type": "string"
                },
                "BounceSelector": {
                    "type": "string"
                },
                "BounceService": {
                    "description": "What service should we send delivery-time errors to?",
                    "type": "string"
                },
                "FromSelector": {
                    "type": "string"
                },
                "FromService": {
                    "description": "Who is sending mail to the mrouter. These values select policy settings\n(go/gmr-address-restrictions), and are used for stats and reporting.",
                    "type": "string"
                },
                "SmtpSelector": {
                    "type": "string"
                },
                "SmtpService": {
                    "description": "What smtp service to use.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Notifications Private API",
    "version": "v1",
    "version_module": true
}