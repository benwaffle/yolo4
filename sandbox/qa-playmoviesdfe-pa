{
    "basePath": "",
    "baseUrl": "https://qa-playmoviesdfe-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "PlayMovies Device FE",
    "description": "Internal-only API for Play Movies TV/Movies 1st Party Consumption Apps",
    "discoveryVersion": "v1",
    "documentationLink": "",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "playmoviesdfe_pa:v1beta",
    "kind": "discovery#restDescription",
    "name": "playmoviesdfe_pa",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "Commerce": {
            "methods": {
                "acquirePurchase": {
                    "description": "Acquires a purchase. This is a 2+ step process. First call to Acquire\nlists all available purchase instruments, with one of them as default,\nrecalculates the correct price (in case the price has changed since the\noffer data was delivered to the app), taxes, and checks whether additional\nrequirements were met (e.g. user agreeing to various terms of service\n[TOS] etc). After the user has selected the purchase instrument, agreed\nto the TOS, reviewed the recalculated price, subsequent call(s) to Acquire\nis/are made to finalize the purchase. The exact number of calls depend on\ninstrument selection.",
                    "flatPath": "v1beta/Commerce/AcquirePurchase",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.acquirePurchase",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/AcquirePurchase",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseResponse"
                    }
                },
                "cancel": {
                    "description": "Cancels a previous purchase/grant operation. Not every purchase can be\ncanceled.\nExample of cancelable purchase: preorders.\nThe service will attempt to do the following:\n1. Granted item: will attempt to revoke (remove the asset from the\n   library).\n2. Purchase-flow: will attempt to cancel and refund the order.\nThe success depends on the underlying backends and is not guaranteed.\nCanceling a purchase order will trigger a notification email to the\nuser, unless explicitly marked in the request not to.",
                    "flatPath": "v1beta/Commerce/Cancel",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.cancel",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/Cancel",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelResponse"
                    }
                },
                "fetchLibrary": {
                    "description": "Gets the entitlements available to the user in their library.",
                    "flatPath": "v1beta/Commerce/FetchLibrary",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.fetchLibrary",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/FetchLibrary",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryResponse"
                    }
                },
                "findVouchers": {
                    "description": "Provides a list of vouchers that could be applied to the purchase action\non the given asset. If existing list of vouchers not provided, will load\nall the vouchers from the user's library.",
                    "flatPath": "v1beta/Commerce/FindVouchers",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.findVouchers",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/FindVouchers",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersResponse"
                    }
                },
                "grant": {
                    "description": "Grants flow. Adds an item directly into the user's library. No purchase\ninstruments are required and the purchase flow is not involved.",
                    "flatPath": "v1beta/Commerce/Grant",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.grant",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/Grant",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantResponse"
                    }
                },
                "redeem": {
                    "description": "Redeems a coupon code. Redeeming a coupon code successfully results in a\nvoucher being added to the user's library (asset of the type VOUCHER).\nVouchers can be applied towards purchases of eligible items (See the\nDiscovery.FindRelated). PreparePurchase will detail the discounted price\nafter applying the voucher.",
                    "flatPath": "v1beta/Commerce/Redeem",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.redeem",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/Redeem",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemResponse"
                    }
                },
                "share": {
                    "description": "Shares flow. Shares user's entitlement with the family in which the user\nis a member (go/familysharing).",
                    "flatPath": "v1beta/Commerce/Share",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.share",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/Share",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareResponse"
                    }
                },
                "unShare": {
                    "description": "UnShares flow cancels a previous Share operation.",
                    "flatPath": "v1beta/Commerce/UnShare",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Commerce.unShare",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Commerce/UnShare",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__UnShareRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__UnShareResponse"
                    }
                }
            }
        },
        "Config": {
            "methods": {
                "fetch": {
                    "description": "Fetches the config data.",
                    "flatPath": "v1beta/Config/Fetch",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Config.fetch",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Config/Fetch",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchResponse"
                    }
                }
            }
        },
        "Discovery": {
            "methods": {
                "getFeed": {
                    "description": "Gets the feeds for the discovery and onboarding.",
                    "flatPath": "v1beta/Discovery/GetFeed",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Discovery.getFeed",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Discovery/GetFeed",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetFeedRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetFeedResponse"
                    }
                },
                "getPlaylist": {
                    "description": "Returns the asset which the consumer's app should play next.",
                    "flatPath": "v1beta/Discovery/GetPlaylist",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Discovery.getPlaylist",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Discovery/GetPlaylist",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistResponse"
                    }
                },
                "getRelated": {
                    "description": "Given an asset and a relationship type, will return a collection\nof assets satisfying the relationship type.\nWill return NOT_FOUND if no assets satisfy the relationship.",
                    "flatPath": "v1beta/Discovery/GetRelated",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Discovery.getRelated",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Discovery/GetRelated",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedResponse"
                    }
                },
                "search": {
                    "description": "Search operation based on query.\nWill return NOT_FOUND if no results found.",
                    "flatPath": "v1beta/Discovery/Search",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Discovery.search",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Discovery/Search",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchResponse"
                    }
                },
                "suggest": {
                    "description": "Given a (partial) query, provides a list of suggestions to facilitate\nusers' search experience.",
                    "flatPath": "v1beta/Discovery/Suggest",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Discovery.suggest",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Discovery/Suggest",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestResponse"
                    }
                }
            }
        },
        "Drm": {
            "methods": {
                "fetchCencLicense": {
                    "description": "Fetches Widevine CENC license.",
                    "flatPath": "v1beta/Drm/FetchCencLicense",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Drm.fetchCencLicense",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Drm/FetchCencLicense",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm__FetchCencLicenseRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm__FetchCencLicenseResponse"
                    }
                }
            },
            "resources": {
                "FetchThirdPartyLicense": {
                    "resources": {
                        "request": {
                            "methods": {
                                "fetchThirdPartyLicense": {
                                    "description": "Fetches license for third party Dash Player.\nThe request URL is license_url/heartbeat_url in the GetStreamInfoUrl\nresponse. Authorization header or auth url parameter must be added by the\ncaller. The HttpBody only has the cdm_key_request BLOB. The response is\neither a license BLOB or LicenseError proto converted to Json.\nSuppresses warning: Path is not REST standard.",
                                    "flatPath": "v1beta/Drm/FetchThirdPartyLicense/request/{serializedRequest}",
                                    "httpMethod": "POST",
                                    "id": "playmoviesdfe_pa.Drm.FetchThirdPartyLicense.request.fetchThirdPartyLicense",
                                    "parameterOrder": [
                                        "serializedRequest"
                                    ],
                                    "parameters": {
                                        "serializedRequest": {
                                            "description": "Required. Serialized proto containing necessary information for getting a license.\nThis is generated as license_url or heartbeat_url in GetStreamInfoUrl\nresponse.",
                                            "location": "path",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1beta/Drm/FetchThirdPartyLicense/request/{serializedRequest}",
                                    "request": {
                                        "$ref": "GoogleApi__HttpBody"
                                    },
                                    "response": {
                                        "$ref": "GoogleApi__HttpBody"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Manifest": {
            "methods": {
                "getStreamInfoForDash": {
                    "description": "Get stream info for DASH. The response is in dash mpd proto format with\nextensions.",
                    "flatPath": "v1beta/Manifest/GetStreamInfoForDash",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Manifest.getStreamInfoForDash",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Manifest/GetStreamInfoForDash",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForDashRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForDashResponse"
                    }
                },
                "getStreamInfoForHls": {
                    "description": "Get stream info for HLS. Only IOS streams will be included. The response is\na list of HLS master playlists available for playback for each resolution\nwith extensions (captions and storyboards).",
                    "flatPath": "v1beta/Manifest/GetStreamInfoForHls",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Manifest.getStreamInfoForHls",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Manifest/GetStreamInfoForHls",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForHlsRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForHlsResponse"
                    }
                },
                "getStreamInfoInternal": {
                    "description": "Get stream info for internal testing environments. This endpoint will not\nfilter any streams. If a user does not pass the authentication check, an\nerror will be returned.",
                    "flatPath": "v1beta/Manifest/GetStreamInfoInternal",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Manifest.getStreamInfoInternal",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Manifest/GetStreamInfoInternal",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoInternalRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoInternalResponse"
                    }
                },
                "getStreamInfoUrl": {
                    "description": "Get stream info url for the request. The response contains:\n* a mpd url used for fetching a complete manifest with extensions.\nSince video players can only send HTTP GET request to fetch a manifest\nand we don't have a way to tell them the parameters to set. We have to\nbuild a url for handling request parameters and authentication beforehand\nin a separate request and instead return a short lived URL that can be\nHTTP GET by these players.\n* license and heartbeat url for fetching third party Dash licenses.",
                    "flatPath": "v1beta/Manifest/GetStreamInfoUrl",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Manifest.getStreamInfoUrl",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Manifest/GetStreamInfoUrl",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoUrlRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoUrlResponse"
                    }
                }
            },
            "resources": {
                "GetMpdForDashXml": {
                    "resources": {
                        "request": {
                            "resources": {
                                "signature": {
                                    "methods": {
                                        "get": {
                                            "description": "Get mpd for DASH, but in xml format.\nThe serialized_request is a mpd url generated by GetStreamInfoUrl endpoint.\nThe response is a DASH manifest in xml.\nThe signature is for our integrity check to make sure the\nserialized_request is not changed by others.",
                                            "flatPath": "v1beta/Manifest/GetMpdForDashXml/request/{serializedRequest}/signature/{signature}",
                                            "httpMethod": "GET",
                                            "id": "playmoviesdfe_pa.Manifest.GetMpdForDashXml.request.signature.get",
                                            "parameterOrder": [
                                                "serializedRequest",
                                                "signature"
                                            ],
                                            "parameters": {
                                                "serializedRequest": {
                                                    "description": "Required. Serialized request proto containing all information for getting DASH xml.\nThis is generated by GetStreamInfoUrl in the mpd_url in the response.",
                                                    "location": "path",
                                                    "required": true,
                                                    "type": "string"
                                                },
                                                "signature": {
                                                    "description": "Required. Signature of serialized_request.",
                                                    "location": "path",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1beta/Manifest/GetMpdForDashXml/request/{serializedRequest}/signature/{signature}",
                                            "response": {
                                                "$ref": "GoogleApi__HttpBody"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Metadata": {
            "methods": {
                "batchFetchPersonalizedAsset": {
                    "description": "Gets the metadata for a list of assets.\nThis endpoint returns personalized metadata for Play Movies assets to the\nconsumption apps. This endpoint will return only the portions of metadata\nwhich differ for the specific user, and should be used as an override of\nthe response from FetchAsset.",
                    "flatPath": "v1beta/Metadata/BatchFetchPersonalizedAsset",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Metadata.batchFetchPersonalizedAsset",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Metadata/BatchFetchPersonalizedAsset",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetResponse"
                    }
                },
                "fetchAsset": {
                    "description": "Gets the metadata for a list of assets.",
                    "flatPath": "v1beta/Metadata/FetchAsset",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Metadata.fetchAsset",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Metadata/FetchAsset",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__FetchAssetRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__FetchAssetResponse"
                    }
                }
            }
        },
        "Pagination": {
            "methods": {
                "fetchNextPage": {
                    "description": "Given a pagination or refresh token for any Collection instance, this\nendpoint will fetch the next (or first, for refresh) page.",
                    "flatPath": "v1beta/Pagination/FetchNextPage",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.Pagination.fetchNextPage",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/Pagination/FetchNextPage",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfe__FetchByTokenRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfe__FetchByTokenResponse"
                    }
                }
            }
        },
        "UserData": {
            "methods": {
                "fetch": {
                    "description": "Fetches the user data.",
                    "flatPath": "v1beta/UserData/Fetch",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.UserData.fetch",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/UserData/Fetch",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchResponse"
                    }
                },
                "update": {
                    "description": "Updates the user data.",
                    "flatPath": "v1beta/UserData/Update",
                    "httpMethod": "POST",
                    "id": "playmoviesdfe_pa.UserData.update",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1beta/UserData/Update",
                    "request": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__UpdateRequest"
                    },
                    "response": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__UpdateResponse"
                    }
                }
            }
        }
    },
    "revision": "20190906",
    "rootUrl": "https://qa-playmoviesdfe-pa.sandbox.googleapis.com/",
    "schemas": {
        "AndroidVideoId__VideoId": {
            "description": "A VideoId is the unique identifier of a video.\nThis ID should be used for replacing Venom ID in Play Movies codebase.",
            "id": "AndroidVideoId__VideoId",
            "properties": {
                "id": {
                    "description": "REQUIRED.",
                    "type": "string"
                },
                "source": {
                    "description": "REQUIRED.",
                    "enum": [
                        "SOURCE_UNSPECIFIED",
                        "YOUTUBE",
                        "YOUTUBE_MASTER_VIDEO",
                        "VENOM_HVC_INGESTION",
                        "PLAY_MOVIES_HVC_ENCODING"
                    ],
                    "enumDescriptions": [
                        "",
                        "Namespace for legacy (YouTube) non-aliasing videos.\n\nThis maps to video.assets.venom.VideoId.Namespace.NS_YOUTUBE.",
                        "Namespace for legacy (YouTube) master videos.\n\nMaster videos are not visible directly to users. See go/cf-alias-dd for\nmore detail.\n\nThis maps to video.assets.venom.VideoId.Namespace.NS_YOUTUBE_MEDIA.",
                        "Namespace for Prism videos ingested to Venom.\n\nContact: android-video-ingestion@\nFor details see: go/cf-ingestion-dd",
                        "Namespace for Prism video ingested via Play movies encoding pipeline,\na.k.a. Sonic, which doesn't depend on Venom / Viper.\n\nContact: play-movies-uhd-piper@\ngo/play-sonic"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleApi__HttpBody": {
            "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody) returns\n      (google.protobuf.Empty);\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged.",
            "id": "GoogleApi__HttpBody",
            "properties": {
                "contentType": {
                    "description": "The HTTP Content-Type header value specifying the content type of the body.",
                    "type": "string"
                },
                "data": {
                    "description": "The HTTP request/response body as raw binary.",
                    "format": "byte",
                    "type": "string"
                },
                "extensions": {
                    "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResultPurchaseMessage_DisplayMessage": {
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResultPurchaseMessage_DisplayMessage",
            "properties": {
                "html": {
                    "description": "Optional. The HTML-formatted localized message.",
                    "type": "string"
                },
                "text": {
                    "description": "Optional. The localized plain text message to be displayed on the\nclient. This should be set in addition to the html field. Used by apps\nthat don't support html messages, e.g. Roku.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResult_LegalDocument": {
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResult_LegalDocument",
            "properties": {
                "title": {
                    "description": "Required. Title to display for the link to this document.",
                    "type": "string"
                },
                "url": {
                    "description": "Required. Url to the document.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResult_PurchaseMessage": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResult_PurchaseMessage",
            "properties": {
                "displayMessage": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResultPurchaseMessage_DisplayMessage",
                    "description": "Optional. The localized message to be displayed on the Overrides the\nbuilt-in text that is bundled with the app for the message type."
                },
                "type": {
                    "description": "Required. The type of the message. Based on this type the client decides\nwhere / how to display the message.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "FAMILY_SHARING_NOT_ELIGIBLE",
                        "FAMILY_PAUSED_UPDATE_FOP_REQUIRED",
                        "FAMILY_PAYMENT_METHOD_FIRST_PURCHASE_NOTICE",
                        "COMPLETE_MY_SEASON_DISCOUNT_APPLIED_LINE_1",
                        "COMPLETE_MY_SEASON_DISCOUNT_APPLIED_LINE_2",
                        "COMPLETE_MY_SEASON_DISCOUNT_APPLIED_LINE_3",
                        "RENTAL_TERMS",
                        "ADD_INSTRUMENT_MESSAGE",
                        "BUNDLE_DISCOUNT_APPLIED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Indicating user has chosen a payment method that is not eligible for\nfamily sharing. Note a payment (e.g. gift card) that is not a family\nFOP can still be eligible for family sharing.",
                        "Indicating user's family is paused and need to update their family FOP.",
                        "Message displayed when family member purchases with family payment\nmethod for the first time.",
                        "Messaging for complete my season discounts (go/complete-my-season).\nThis is a multi-line message provided by upstream. Since UX formatting\ncannot be done in Nur, just send it down as is.",
                        "",
                        "",
                        "Message for rental terms if it is a rental offer.",
                        "Need to add a payment instrument.",
                        "Messaging for bundle discounts (go/bundle-discounts-PRD)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce_CommerceOperationStatus_FailureDescription": {
            "description": "Describes why the operation failed.\nNext Id: 4.",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce_CommerceOperationStatus_FailureDescription",
            "properties": {
                "displayErrorCode": {
                    "description": "Optional. An error code that can be displayed to the end user alongside a generic\nerror message. This error code makes it easy for engineers and support\nstaff to identify the exact source of the error condition when an error\nmessage is reported by end users.\nThis field is optionally set only when failure_code is GENERIC_FAILURE.",
                    "type": "string"
                },
                "failureCode": {
                    "description": "Optional. A detailed description of the failure.",
                    "enum": [
                        "FAILURE_UNSPECIFIED",
                        "GENERIC_FAILURE",
                        "ALREADY_CONSUMED",
                        "REQUEST_TOO_LATE",
                        "NO_ENTITLEMENT",
                        "SHARED_ENTITLEMENT",
                        "CONFIRM_AND_RETRY",
                        "PAYMENT_DECLINED",
                        "SESSION_EXPIRED",
                        "PURCHASE_COMMIT_FAILURE",
                        "NO_SUPPORTED_INSTRUMENTS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Generic failure for the lack of more detailed information.\nBasically, the backend doesn't know why the operation failed.",
                        "For Cancel calls, we cannot cancel a purchase that has been consumed.\nI.e.: if the user started watching the content and then decided to\ncancel - we cannot do that, they need to use the customer support\nvenue.",
                        "Eligibility window for in-app refund has passed. Contact customer\nsupport for refund requests.",
                        "For Cancel calls, we cannot cancel a purchase that doesn't exist.",
                        "For Cancel calls we cannot cancel a purchase that's shared in or out.",
                        "Operation was submitted with a wrong asset id. Retry with the new\nasset id. For example, sharing an episode which was purchased with\na season pass (i.e.: as part of a season purchase) will not work, and\nthe user will need to share the whole season.",
                        "",
                        "The existing session has expired, Client should re-initiate session\nand retry. Example includes during AcquirePurchase, the session_token\nhas expired and the Client needs to start a new session.",
                        "The operation to finalize the purchase with the selected_instrument\nhas failed.",
                        "The user either has no instruments on record or they are unsupported.\nThis should only happen at the initial acquire call, before client\ngets to select any instrument."
                    ],
                    "type": "string"
                },
                "retryId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Optional. In case of CONFIRM_AND_RETRY, this will be the new id to use. The app\nneeds to confirm the intention of rerunning the operation with the\nnew id with the user."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce_PaymentInstrument_InstrumentStatus": {
            "description": "Describes the status of the instrument, if it is disabled. An instrument\nmay be disabled for some purchases but not others depending on the status\nand the app may implement support for showing it as \"grayed out\" or marked\nas disabled in some other way to show that we're aware of the instrument\nbut the user cannot use it due to the specified reason.\nNext id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce_PaymentInstrument_InstrumentStatus",
            "properties": {
                "disabledMessageHtml": {
                    "description": "Optional. User facing message that describes why an instrument is\ndisabled. Overrides a message bundled with the app. No non-html version\navailable.",
                    "type": "string"
                },
                "disabledReason": {
                    "description": "Required. Reason why an instrument is not usable.",
                    "enum": [
                        "REASON_UNSPECIFIED",
                        "AMOUNT_EXCEEDED",
                        "EXPIRED",
                        "INAPPLICABLE_INSTRUMENT_SET",
                        "INAPPLICABLE_CURRENCY",
                        "INAPPLICABLE_LOCATION",
                        "EXCLUDED",
                        "TEMPORARILY_DISABLED",
                        "RESTRICTED_BY_ITEM",
                        "RESTRICTED_BY_LEGAL_COUNTRY",
                        "CART_PROCESSING_ERROR",
                        "NO_REVSHARE",
                        "INSTRUMENT_DECLINED",
                        "TRANSACTION_AMOUNT_EXCEEDED",
                        "DCB_NOT_PROVISIONED",
                        "REQUIRED_INSTRUMENT_MISSING",
                        "UNSELECTABLE_PRIMARY_INSTRUMENT",
                        "INSTRUMENT_DELETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "=== Checkout Instrument.InapplicableReason ===\nInforms user that a specific instrument does not contain\nenough funds to pay for the order.",
                        "Informs user that a specific instrument has expired.",
                        "Informs user that a specific instrument belongs to a family (set) that\nis not supported.",
                        "Informs user that a specific instrument does not support the\ncurrency of the order.",
                        "Informs user that the order can not be purchased with an\ninstrument that has the given billing address.",
                        "Informs user that a specific instrument can not be used.",
                        "Informs user that an instrument has been temporarily disabled.\nThis reason is currently only applicable for DCB and indicates\nthat the carrier is down.",
                        "This type of item can not be purchased with the given instrument\ntype. For example books in France can not be purchased with\nStored Value.",
                        "The instrument is not allowed in the user's legal country.",
                        "=== Android Reasons ===\nThere was a processing error (e.g. exception) trying to create or\nadjust the cart.",
                        "There is no valid revshare configuration and therefore\nthe instrument can not be used for this type of purchase.",
                        "Checkout marked the instrument as declined.",
                        "The purchase value exceeds the limit of a single transaction.\nThis is checked for DCB transaction limits sent from the device.",
                        "This DCB instrument is not provisioned for Direct Carrier Billing.\nCertain class of users like enterprise or pre-paid customers are\nnot provisioned to use carrier billing.\nOther than that carrier may not provision customers who have\npayments due.",
                        "The user does not have the required instrument. This is used for\nForm Of Payment (FOP) gated promotions.",
                        "The user cannot choose the primary fop when he's updating secondary fop\nfor a subscription.",
                        "The FOP was deleted and cannot be used anymore."
                    ],
                    "type": "string"
                },
                "errorMessage": {
                    "description": "Optional. Non localized error message which gives more details about why\nthe instrument is disabled. Used for debugging. Not to be shown in the UI\nbut may be logged on the device.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseParameters": {
            "description": "Next Id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseParameters",
            "properties": {
                "applicableVoucher": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Optional. Asset id of type VOUCHER of the voucher to be applied to\nthe purchase. When provided, the backend will attempt to apply the\nvoucher to the purchase. Only one voucher can be applied.\nThe voucher must already be in the user's library."
                },
                "assetId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "bypassVoucherAutoselect": {
                    "description": "Optional. If set to true, the backend will not attempt to autoselect a\nvoucher. No voucher will be applied.",
                    "type": "boolean"
                },
                "offerId": {
                    "description": "Required. The offer id of the offer based on which the purchase is\nrequested.",
                    "type": "string"
                },
                "selectedInstrumentId": {
                    "description": "Optional. ID of purchase instrument the user has selected.\nIf not set, the user's default instrument will be selected. For initial\nAcquireRequest leave empty. The list of available instruments will be\nin the response.",
                    "type": "string"
                },
                "sessionToken": {
                    "description": "Optional. Session token received as part of the latest AcquireResponse.\nFor example the 4th server call in a acquire flow should use the\ntoken received in the 3rd server response and not the token received in\n1st or 2nd server response. For initial AcquirePurchase call leave empty.\nRequired for subsequent calls.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseRequest": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseRequest",
            "properties": {
                "acquireParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseResponse": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "result": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseResult",
                    "description": "Optional. Only present when |status.code| is COMPLETED or IN_PROGRESS."
                },
                "status": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus",
                    "description": "Required. The status of the operation. Note that \"Completed\" means\nthis particular operation is successful. The entire multi-step purchase\nflow is only considered finished with the purchased entitlement\nreturned in the response and added to user library."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseResult": {
            "description": "Result of the AcquirePurchase operation.\nNext Id: 10",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__AcquirePurchaseResult",
            "properties": {
                "checkoutLegalDocument": {
                    "description": "Optional. The list of Checkout legal document URLs the user must accept.\nIf set, AcquirePurchase must not be called again before the user accepts\nall the legal documents linked.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResult_LegalDocument"
                    },
                    "type": "array"
                },
                "instrument": {
                    "description": "Optional. The instruments the user has in the Payments profile, sorted\nin the order they should be rendered on the client. Empty if user has\nno instrument. The first on the list is the instrument selected to create\nthe cart. It is the default instrument in the initial AcquireResponse,\nClient needs to check the presence of instrument_status to see whether\nthe instrument is disabled or not.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__PaymentInstrument"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "Optional. Messages that should be displayed to the user during the\npurchase flow.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce_AcquirePurchaseResult_PurchaseMessage"
                    },
                    "type": "array"
                },
                "originalPrice": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Money",
                    "description": "Optional. The original formatted, localized cart price. In case there's\na discount or voucher applied, this is the original listing price."
                },
                "price": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Money",
                    "description": "Optional. The formatted localized cart price."
                },
                "purchasedEntitlement": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Collection",
                    "description": "Optional. The entitlement is only set when the entire purchase flow is\nsuccessfully completed and the purchased content has been added to\nuser library."
                },
                "sessionToken": {
                    "description": "Optional. Session token to pass back to the server for subsequent request.\nOnly present if the multi-step purchase flow is not complete and there are\nadditional requests for the client to send.",
                    "type": "string"
                },
                "tax": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Money",
                    "description": "Optional. The formatted, localized tax for the cart. Only if there's\na tax component."
                },
                "voucherId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Optional. If set, represents a voucher that was applied to calculate\nthe price."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelParameters": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelParameters",
            "properties": {
                "assetId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "purchaseId": {
                    "description": "Required. The purchase id that the user wants to cancel.\nThis must be a result of an Acquire/Grant/FetchLibrary operation on\nthe user's account. Any other entitlement (e.g.: family sharing) cannot be\ncanceled by the user.",
                    "type": "string"
                },
                "skipEmailNotification": {
                    "description": "Optional. Skips email notification about the cancellation to the user.\nShould only be set if the user explicitly doesn't want an email. Email\nwill be requested from the billing pipeline by default.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelRequest": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelRequest",
            "properties": {
                "cancelParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelResponse": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__CancelResponse",
            "properties": {
                "deletedEntitlement": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Collection",
                    "description": "Optional. The entitlement removed from user library. Only set if the\nstatus.code is COMPLETED. If the cancel operation hasn't been completed\n(status.code is IN_PROGRESS), the client app needs to refresh the library\nto update the entitlements list.\nNote that the purchasing pipeline may cause a delay of up to 30 minutes\n(due to the fraud detection calculations). If status.code is IN_PROGRESS\nthe users will get an email confirmation when the operation is completed."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "status": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus",
                    "description": "Required. The status of the operation."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus": {
            "description": "Describes the state of the API operation request. Will only be used to\nelaborate on the specifics of the status when the API returns \"OK\", but the\noperation may have various potential outcomes. For commerce operations,\nwhere fraud detection pipeline may delay the actual operation, this will\nbe used heavily.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus",
            "properties": {
                "code": {
                    "description": "Required.",
                    "enum": [
                        "CODE_UNSPECIFIED",
                        "COMPLETED",
                        "IN_PROGRESS",
                        "PARTIALLY_COMPLETED",
                        "FAILED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Operation has been successfully completed.",
                        "Operation hasn't been completed, and is still in progress. See the\nservice endpoint description on how this should be handled.",
                        "Operation was completed partially. For example, sharing a TV show\nmay result in only some of the episodes shared due to the sharing\nrestrictions.",
                        "Operation couldn't be completed. For an operation that was expected to\nadd an entitlement - the entitlement was not added. For an operation\nthat was expected to remove an entitlement - the entitlement was not\nremoved."
                    ],
                    "type": "string"
                },
                "failureDescription": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce_CommerceOperationStatus_FailureDescription",
                    "description": "Optional. If the status is FAILED, this will describe the reason for the failure,\nif available."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryParameters": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryParameters",
            "properties": {
                "filter": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Filter",
                    "description": "Optional. Sets filters applicable to the request."
                },
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional. pagination_parameters.max_collections will be ignored for this\nrequest, pagination_parameters.max_assets has a valid range: [1 - 1000] and\ndefault to 500 if invalid or not set.\nIf token is provided, this field overrides the value encoded in\nthe token from the previous request. If not set, the value in the token\nwill continue being used."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryRequest": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryRequest",
            "properties": {
                "fetchLibraryParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryResponse": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__FetchLibraryResponse",
            "properties": {
                "collection": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Collection",
                    "description": "Required."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersParameters": {
            "description": "Next id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersParameters",
            "properties": {
                "assetId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. The asset id to find applicable vouchers for."
                },
                "formatQualities": {
                    "description": "Optional. Restricts the result only to those vouchers which can be applied\nto any one of the specified format qualities.\nIf not specified, all format qualities will be considered.",
                    "enumDescriptions": [
                        "",
                        "Standard definition",
                        "High Definition",
                        "UHD offers",
                        "3D-only/VR offers."
                    ],
                    "items": {
                        "enum": [
                            "QUALITY_UNSPECIFIED",
                            "QUALITY_SD",
                            "QUALITY_HD",
                            "QUALITY_UHD1",
                            "QUALITY_3D"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "offerTypes": {
                    "description": "Optional. Restricts the result only to those vouchers which can be applied\nto any one of the specified offer types.\nIf not specified, all offer types will be considered.",
                    "enumDescriptions": [
                        "",
                        "Video On Demand: Rentals have a start date and expiration date.",
                        "Electronic Sell-Through: user bought the asset.",
                        "Subscription requiring a recurring payment.",
                        "The offer is for a free to watch with Ads.\nAn asset can have both TVOD offers (TYPE_PURCHASE, TYPE_RENTAL) and AVOD\noffer (TYPE_FREE_WITH_ADS)."
                    ],
                    "items": {
                        "enum": [
                            "TYPE_UNSPECIFIED",
                            "TYPE_RENTAL",
                            "TYPE_PURCHASE",
                            "TYPE_SUBSCRIPTION",
                            "TYPE_FREE_WITH_ADS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "voucherIds": {
                    "description": "Optional. List of vouchers in user library. If not set, vouchers will be\nrequested from user library. Loading vouchers from user library will\nincrease the latency.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersRequest": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersRequest",
            "properties": {
                "findVouchersParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersResponse": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__FindVouchersResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "voucherIds": {
                    "description": "Optional. If any vouchers from the request (or user library if none in the request)\nare applicable to the given asset and offer/format type, they will be\nlisted here. Otherwise empty.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantParameters": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantParameters",
            "properties": {
                "assetId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "offerId": {
                    "type": "string"
                },
                "promotionId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantRequest": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantRequest",
            "properties": {
                "grantParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantResponse": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__GrantResponse",
            "properties": {
                "grantedEntitlement": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Collection",
                    "description": "Optional. If the grant operation successfully completed (status.code is\nCOMPLETED), this will be the entitlement granted in the user's library.\nIf the grant operation hasn't been completed (status.code IN_PROGRESS),\nthe client app needs to refresh the library to update the entitlements.\nNote that the purchasing pipeline may cause a delay of up to 30 minutes\n(due to the fraud detection calculations). If status.code is IN_PROGRESS\nthe users will get an email confirmation when the operation is completed."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "status": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus",
                    "description": "Required. The status of the operation."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__PaymentInstrument": {
            "description": "A payment instrument.\nNext id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__PaymentInstrument",
            "properties": {
                "displayTitle": {
                    "description": "Required. A display title of the instrument when this message is\nsent to the device.",
                    "type": "string"
                },
                "icon": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Image",
                    "description": "Optional. If present, use it to show an icon corresponding to the\ninstrument."
                },
                "instrumentFamily": {
                    "description": "Required. Indicates the family of instrument that the user must have\nenabled.",
                    "enum": [
                        "INSTRUMENT_FAMILY_UNSPECIFIED",
                        "CARD",
                        "EFT",
                        "CARRIER_BILLING",
                        "PAYPAL",
                        "DIRECT_DEBIT",
                        "STORED_VALUE",
                        "GIFT_CARD"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "instrumentId": {
                    "description": "Required.",
                    "type": "string"
                },
                "instrumentStatus": {
                    "description": "Optional. Describes the instrument status if it is disabled. May include\nmultiple reasons for being disabled, each in a separate status message.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce_PaymentInstrument_InstrumentStatus"
                    },
                    "type": "array"
                },
                "isFamilyFop": {
                    "description": "Optional. Whether this is a Family Form of Payment (FOP).\nSee go/unicorn-family for details.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemParameters": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemParameters",
            "properties": {
                "promotionCode": {
                    "description": "Required. Code that should be used to redeem a \"choosie\" (movie coupon).",
                    "type": "string"
                },
                "tosAccepted": {
                    "description": "Required. Set to true to indicate the terms of services (TOS)\nhas been accepted.\n  Step 1)\n    Request: { ... tos_accepted = false }\n    Response: { coupon_title = \"...\" coupon_message = \"...\" ... }\n\n  Step 2) Only necessary if voucher_id and refresh_token are not filled\n          in Step 1.\n    Request: { ... tos_accepted = true }\n    Response: { coupon_title = \"\" coupon_message = \"\"\n                voucher_id = \"...\" refresh_token = \"...\" }",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemRequest": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemRequest",
            "properties": {
                "redeemParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemResponse": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "result": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemResult",
                    "description": "Required."
                },
                "status": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus",
                    "description": "Required. The status of the operation."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemResult": {
            "description": "Next id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__RedeemResult",
            "properties": {
                "couponDiscount": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Discount",
                    "description": "Required. Discount information for this voucher."
                },
                "couponMessage": {
                    "description": "Optional. A localized message to show to the user for the promotion_code.",
                    "type": "string"
                },
                "couponTitle": {
                    "description": "Optional. A localized title to show to the user for the promotion_code.",
                    "type": "string"
                },
                "error": {
                    "description": "Optional. Indicates an error occurred redeeming code.",
                    "enum": [
                        "REDEMPTION_ERROR_UNSPECIFIED",
                        "OTHER_ERROR",
                        "ALREADY_REDEEMED",
                        "INVALID_CODE",
                        "REDEMPTION_DISABLED",
                        "DAILY_REDEMPTION_CAP_EXCEEDED",
                        "EXPIRED_PROMOTION_CODE",
                        "REDEMPTION_UNAVAILABLE_COUNTRY",
                        "TOS_ACCEPTANCE_REQUIRED"
                    ],
                    "enumDescriptions": [
                        "Not set/default state.",
                        "Generic fall-back error.",
                        "Unable to redeem because the promotion code has already been redeemed.",
                        "Unable to recognize promotion code.",
                        "This promotion code has been disabled.",
                        "The user's daily redemption limit has been exceeded.",
                        "The promotion code has expired.",
                        "Redemption is not available in the user's country.",
                        "Terms of Service must be accepted. Even if the voucher_id is returned,\nclients should still ensure the TOS has been accepted in this case."
                    ],
                    "type": "string"
                },
                "refreshToken": {
                    "description": "Optional. To fetch the collection for the assets covered by the voucher,\nThe client needs to call Discovery service, passing this refresh_token in\nthe request.",
                    "type": "string"
                },
                "voucherId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Optional. The voucher document ID that was added to the library when\nredeeming."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareParameters": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareParameters",
            "properties": {
                "assetId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "purchaseId": {
                    "description": "Required. The purchase to be shared/unshared.\nThis must be a result of an Acquire/Grant/FetchLibrary operation on the\nuser's account.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareRequest": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareRequest",
            "properties": {
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "shareParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareParameters",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareResponse": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "status": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__UnShareRequest": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__UnShareRequest",
            "properties": {
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "unshareParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__ShareParameters",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaCommerce__UnShareResponse": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaCommerce__UnShareResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "status": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaCommerce__CommerceOperationStatus",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig_CategoryGenreGroup_Genre": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig_CategoryGenreGroup_Genre",
            "properties": {
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__CategoryId",
                    "description": "Required. Id of the genre as reported in the Category."
                },
                "type": {
                    "description": "Required. Type of the genre as reported in the Category.",
                    "enum": [
                        "CATEGORY_TYPE_UNSPECIFIED",
                        "MOVIE",
                        "TV",
                        "FAMILY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig_Category_GenreGroup": {
            "description": "A grouping of similar genres. For example, \"Animation\" genre group will\ninclude the genre for \"Animation\" movies and the genre for \"Animation\" TV\ncontent.\nAll the genres within the group should use the same metadata and image,\ntaken from the first item in the group.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig_Category_GenreGroup",
            "properties": {
                "genres": {
                    "description": "Required. Each Category in the list belongs to the same group.\nThe list includes the category of the main proto.\nUse the first category in the list to fetch the metadata describing the\ngroup, use all the genres in the list to filter the results by genre.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig_CategoryGenreGroup_Genre"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_CategoriesRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_CategoriesRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_FormatsRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_FormatsRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_RatingSchemesRequest": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_RatingSchemesRequest",
            "properties": {
                "filterAuthorityIds": {
                    "description": "Optional. If specified then return rating schemes only for the\nspecified authorities.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "filterCountries": {
                    "description": "Optional. If specified then return rating schemes only for the\nspecified countries.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig_RatingScheme_Rating": {
            "description": "Definition of a specific content rating.\nOnly name is defined right now. Other metadata such as description,\nminimal age, may be added in the future.\nNext id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig_RatingScheme_Rating",
            "properties": {
                "authorityId": {
                    "description": "Authority identifier for movies & TV.",
                    "format": "int32",
                    "type": "integer"
                },
                "contentRatingId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ContentRatingId",
                    "description": "This field is defined as a string as opposed to enum because we don't\nwant to force app changes when new scheme is added."
                },
                "image": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Image",
                    "description": "Optional. Badge image to show for this content rating."
                },
                "maxSafesearchLevel": {
                    "description": "Maximum safe search level where content is available.",
                    "enum": [
                        "ID_UNSPECIFIED",
                        "LIGHT",
                        "MODERATE",
                        "STRICT",
                        "OFF"
                    ],
                    "enumDescriptions": [
                        "",
                        "Results rated \"R\" will be filtered",
                        "Results rated \"R\" or \"PG-13\" will be filtered",
                        "Any result not rated \"G\" will be filtered",
                        "No filtering will be applied"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Content rating name as defined in the country's official language.",
                    "type": "string"
                },
                "ratingId": {
                    "description": "Rating identifier for movies & TV.",
                    "format": "int32",
                    "type": "integer"
                },
                "shortName": {
                    "description": "Short name for the content rating. It may be used, for example, on\nwidgets, where a shorter name is desirable. It is optional and\npopulated only if short name is different from official name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__Categories": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__Categories",
            "properties": {
                "categories": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__Category"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__Category": {
            "description": "Next Id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__Category",
            "properties": {
                "description": {
                    "description": "Optional. The localized description of the category.",
                    "type": "string"
                },
                "genreGroups": {
                    "description": "Required. Other categories in the same genre groups as this category.\nIf there are no other categories which belong to the same genre, then the\ngenre group will only contain this category.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig_Category_GenreGroup"
                    },
                    "type": "array"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__CategoryId",
                    "description": "Required. Non-localized string identifying the category.\nValue is backend specific. In the case of youtube movie, the value\ncomes from video/youtube/gdata/rosy/movie_genre_id_data.proto\n\nExample value \"1\" representing \"Action & Adventure\""
                },
                "images": {
                    "description": "Optional. Images for the category.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Required. The localized display name of the category.",
                    "type": "string"
                },
                "type": {
                    "description": "Required. Identifies the type of category such as MOVIE or TV.\nThis is different from the resource type. For example, both season\nand episode fall under a single entry \"TV\".",
                    "enum": [
                        "CATEGORY_TYPE_UNSPECIFIED",
                        "MOVIE",
                        "TV",
                        "FAMILY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__FetchRequest": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchRequest",
            "properties": {
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "requestData": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchRequestData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__FetchRequestData": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchRequestData",
            "properties": {
                "categories": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_CategoriesRequest",
                    "description": "Fetch the video categories."
                },
                "formats": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_FormatsRequest",
                    "description": "Fetch the video formats."
                },
                "ratingSchemes": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig_FetchRequestData_RatingSchemesRequest",
                    "description": "Fetch the content rating schemes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__FetchResponse": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "responseData": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchResponseData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__FetchResponseData": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__FetchResponseData",
            "properties": {
                "categories": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__Categories",
                    "description": "Video categories."
                },
                "expirationTime": {
                    "description": "Required. The expiration timestamp of the data at which point the client\nshould refresh it.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "formats": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__Formats",
                    "description": "Video and audio formats."
                },
                "ratingSchemes": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__RatingSchemes",
                    "description": "Content rating schemes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__Format": {
            "description": "Describes the characteristics of the format types the manifest service may be\nexpected to provide in its response for various representations. Format\nincludes itag and metadata that is essential for downloading, stream\nselection, and playback in general.\nNext Id: 9",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__Format",
            "properties": {
                "bitrateOption": {
                    "description": "Optional. Video and audio format bitrate option.",
                    "enum": [
                        "BITRATE_UNSPECIFIED",
                        "DASH",
                        "MULTI"
                    ],
                    "enumDescriptions": [
                        "",
                        "Format is DASH or dynamic adaptive bitrate streaming over HTTP.",
                        "Format is multi-bitrate."
                    ],
                    "type": "string"
                },
                "drmType": {
                    "description": "Optional. DRM type given to the video and audio.",
                    "enum": [
                        "DRM_TYPE_UNSPECIFIED",
                        "NO_DRM",
                        "WIDEVINE_IN_APP",
                        "WIDEVINE_SYSTEM",
                        "CENC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "formatId": {
                    "description": "Required. A value that represents a video's format by specifying the protocol's\ncontainer, codec, etc. The format_id is also commonly referred to as itag.\n\nEnum: //depot/google3/wireless/android/video/proto/video_format.proto",
                    "format": "int32",
                    "type": "integer"
                },
                "height": {
                    "description": "Optional. Height of the video. For video, this value should never be 0. For audio,\nthis value is always 0.",
                    "format": "int32",
                    "type": "integer"
                },
                "mimeType": {
                    "description": "Optional.",
                    "enum": [
                        "MIME_TYPE_UNSPECIFIED",
                        "VIDEO_MP4",
                        "AUDIO_MP4",
                        "IMAGE_JPEG",
                        "VIDEO_WEBM",
                        "AUDIO_WEBM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "numberOfAudioChannels": {
                    "description": "Optional. Number of audio channels supported in the format.\nCommon values: 2 for stereo, 6 for 5.1, 8 for 7.1.\nNote: The value will be any integer number and is not restricted to common\nvalues listed above.",
                    "format": "int32",
                    "type": "integer"
                },
                "range": {
                    "description": "Optional. This field only pertains to videos.",
                    "enum": [
                        "DYNAMIC_RANGE_TYPE_UNKNOWN",
                        "SDR",
                        "PQ_HDR",
                        "HDR10",
                        "DOLBY_VISION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "width": {
                    "description": "Optional. Width of the video. For video, this value should never be 0. For audio,\nthis value is always 0.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__Formats": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__Formats",
            "properties": {
                "formats": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__Format"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__RatingScheme": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__RatingScheme",
            "properties": {
                "country": {
                    "description": "The countries for which this rating is applicable.\nIf the request contains filter_countries then countries which are not in\nthe filter will not be included here.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ratings": {
                    "description": "The complete list of all content ratings that are available for this\nscheme. The list is sorted based on restrictiveness, from most relaxed to\nthe most restrictive. For example, for MPAA rating, the order is:\nG, PG, PG-13, R, NC-17",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig_RatingScheme_Rating"
                    },
                    "type": "array"
                },
                "schemeId": {
                    "description": "Scheme of the content rating, such as MPAA, TVPG.",
                    "type": "string"
                },
                "types": {
                    "description": "Type of resource this rating is applicable for.",
                    "enumDescriptions": [
                        "",
                        "A stand-alone feature video.",
                        "A content bundle (multiple items together).",
                        "A container of seasons.",
                        "A container of episodes.",
                        "A stand-alone TV episode video.",
                        "A stand-alone Android Application.",
                        "A container of songs.",
                        "A stand-alone song.",
                        "A voucher.",
                        "A video content distributor.",
                        "A movie/tv related person.",
                        "A document representing a Play Story.",
                        "See the story_cover and story_details fields\nin AssetResource - these are the only fields\nthat will be filled for assets of this type.\nA stand-alone book (\"Ocean\" Play Books corpus).",
                        "A trailer which is a DRM-clear promotional video"
                    ],
                    "items": {
                        "enum": [
                            "TYPE_UNSPECIFIED",
                            "MOVIE",
                            "BUNDLE",
                            "SHOW",
                            "SEASON",
                            "EPISODE",
                            "ANDROID_APP",
                            "ALBUM",
                            "SONG",
                            "VOUCHER",
                            "DISTRIBUTOR",
                            "PERSON",
                            "STORY",
                            "BOOK",
                            "TRAILER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaConfig__RatingSchemes": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaConfig__RatingSchemes",
            "properties": {
                "ratingSchemes": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaConfig__RatingScheme"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_AmatiStream": {
            "description": "Next Id: 2.",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_AmatiStream",
            "properties": {
                "tab": {
                    "enum": [
                        "TAB_UNSPECIFIED",
                        "HOME",
                        "MOVIES",
                        "TVS",
                        "FAMILY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_CategoryBased": {
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_CategoryBased",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_ContinueWatching": {
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_ContinueWatching",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_Distributors": {
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_Distributors",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_LivingRoom": {
            "description": "Feed-specific parameters, if any.",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_LivingRoom",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_MobilePrimetime": {
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_MobilePrimetime",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_TopContent": {
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_TopContent",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_GetPlaylistParameters_ShowRequest": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_GetPlaylistParameters_ShowRequest",
            "properties": {
                "currentEpisodeId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "The last played episode in the show."
                },
                "showId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "The show to get the playlist for."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_Suggestion_AssetSuggestion": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_Suggestion_AssetSuggestion",
            "properties": {
                "iconBlob": {
                    "description": "Optional. If request had |icon_blob_size| != 0 and there's a suitable icon for the\nprovided suggestion, it will be provided here as a binary blob.\nThis is a blob representing image of type ICON and aspect ratio 1x1.",
                    "format": "byte",
                    "type": "string"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "image": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Image",
                    "description": "Optional. If available, a FIFE-hosted image that can be displayed for this query\nsuggestion."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery_Suggestion_QuerySuggestion": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery_Suggestion_QuerySuggestion",
            "properties": {
                "image": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Image",
                    "description": "Optional. If available, a FIFE-hosted image that can be displayed for this query\nsuggestion."
                },
                "query": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__FeedRequestDetails": {
            "description": "Next Id: 9",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__FeedRequestDetails",
            "properties": {
                "amatiStream": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_AmatiStream",
                    "description": "Amati stream. To be used for Amati only, Play Movies clients shouldn't\nrequest it."
                },
                "categoryBased": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_CategoryBased",
                    "description": "Feed of assets filtered by category. Category filter must\nbe provided in the request context. The source of the assets\nwill be determined by the backend (i.e.: top selling or some\nother ranking)."
                },
                "continueWatching": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_ContinueWatching",
                    "description": "Feed of assets to suggest to the user to continue watching.\nThis replaces the Magma \"WatchNext\" API (go/watchnow), and may\ninclude not only the items that the user actually watched or\nowns.\nNOTE: The resulting collection may contain both TV and non-TV\ncontent in the same collection."
                },
                "distributors": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_Distributors",
                    "description": "Provides the list of all available distributors for Primetime\napps (go/primetime).\n COLLECTION\n   - COLLECTION (PayTV)\n     - ASSET (distributor)\n     - ASSET (distributor)\n     - ...\n   - COLLECTION (SVOD)\n     - ...\n   - ..."
                },
                "filter": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Filter",
                    "description": "Optional. Sets filters applicable to the request."
                },
                "livingRoom": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_LivingRoom",
                    "description": "LivingRoom feed provides a collection of video resources based on backend\nlogic. Feed should be used for Living room clients. The response will be\na top level container with video collections. This feed only includes\nitems available (or to be available soon) in the Play Store.\nCOLLECTION\n  - COLLECTION\n    - ASSET\n    - ASSET\n    - ...\n  - ..."
                },
                "mobilePrimetime": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_MobilePrimetime",
                    "description": "Provides a collection of assets based on a backend logic.\nThe assets may not be available on Google Play store or be in\nPlay Movies catalog (go/primetime)."
                },
                "topContent": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_FeedRequestDetails_TopContent",
                    "description": "Provides series of collections of most popular assets for\nrecommendation. Can include both TV and Movie content depending on the\ntype_restrict in the request."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetFeedRequest": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetFeedRequest",
            "properties": {
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional. Pagination parameters."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "requestDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__FeedRequestDetails",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetFeedResponse": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetFeedResponse",
            "properties": {
                "feed": {
                    "description": "Required. The collections represent a forest (http://shortn/_R6wZNpB57I) of flatten\ntrees, with the roots being the first item (after the previous tree ends).\nCollections to be handled in the order of delivery.\nNote: Collections may be nested in multiple levels, and the trees are not\nnecessarily balanced (i.e. multiple branches can have different depths).",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Collection"
                    },
                    "type": "array"
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistParameters": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistParameters",
            "properties": {
                "flags": {
                    "description": "Optional. A list of flags to apply to the result.",
                    "enumDescriptions": [
                        "",
                        "If set, the playlist should wrap around when the end is reached (or\nwhen the beginning is reached in the \"previous\" collection).\nSetting this flag may result in multiple duplicate assets."
                    ],
                    "items": {
                        "enum": [
                            "FLAG_UNSPECIFIED",
                            "WRAP_AROUND"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "show": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_GetPlaylistParameters_ShowRequest",
                    "description": "List the episodes in the show, based on the last played episode."
                },
                "window": {
                    "description": "Required. This specifies whether to fetch the assets before and/or after the current\nepisode.",
                    "enum": [
                        "WINDOW_UNSPECIFIED",
                        "NEXT",
                        "PREVIOUS",
                        "BOTH"
                    ],
                    "enumDescriptions": [
                        "",
                        "The playlist should contain the current asset (if there is one) and the\nnext assets after it. If no asset has ever been played then the first\nasset will be considered the \"current\" asset. The current asset will be\nfirst in the list.",
                        "The playlist should contain the current asset and the previous assets\nbefore it. If no asset has ever been played then the first\nasset will be considered the \"current\" asset. The assets will be returned\nin normal order (e.g. 3,4,5), not reversed, so the current asset will be\nlast.",
                        "The playlist should contain the current asset and both the previous and\nnext assets. The current asset will be in position (max_assets-1)/2\n(using whole integer division), if there are enough assets on both ends.\nIf there aren't enough then the rest of the playlist will be backfilled\nwith the assets that are present so the current asset may end up not\nbeing in the middle."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistRequest": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistRequest",
            "properties": {
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional. max_collections will be ignored.\nValid range of max assets: [1 - 10]. Defaults to 2 if not set."
                },
                "playlistParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistResponse": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetPlaylistResponse",
            "properties": {
                "playlist": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Collection",
                    "description": "The playlist.\nThe included assets will have annotations of type PLAYLIST."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedParams": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedParams",
            "properties": {
                "filter": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Filter",
                    "description": "Optional. Sets filters applicable to the request."
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. ID of the content to which the relationship is being requested."
                },
                "type": {
                    "description": "Required.",
                    "enum": [
                        "RELATIONSHIP_TYPE_UNSPECIFIED",
                        "FROM_SAME_BROADCASTER",
                        "LIKE_THIS",
                        "CREDITS_LIST",
                        "VOUCHER_APPLICABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Deprecated.",
                        "Provides a list of assets that are considered by the backend similar to\nthe asset in question. For example, given the asset \"Doctor Who\", the\nresponse would probably include \"Torchwood\" which is a spin-off,\n\"Star Trek\" which is similarly a science-fiction adventure show, but not\n\"Sherlock\" which is a fictional drama from the same broadcaster.",
                        "Returns a collection of credits (MOVIE_PERSON assets) associated with\nthe requested id.",
                        "Assets to which the given voucher could be applied. The asset id must be\na VOUCHER type. Will return a collection of assets to which the voucher\ncould be applied."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedRequest": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedRequest",
            "properties": {
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional. Pagination parameters."
                },
                "params": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedParams",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedResponse": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__GetRelatedResponse",
            "properties": {
                "related": {
                    "description": "Required. The collections represent a forest (http://shortn/_R6wZNpB57I) of flatten\ntrees, with the roots being the first item (after the previous tree ends).\nCollections are to be handled in the order of delivery.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Collection"
                    },
                    "type": "array"
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchRequest": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchRequest",
            "properties": {
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "searchParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchRequestParameters",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchRequestParameters": {
            "description": "Search query and additional parameters.\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchRequestParameters",
            "properties": {
                "filter": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Filter",
                    "description": "Optional. Sets filters applicable to the request."
                },
                "query": {
                    "description": "The search query. In case of empty query predefined set of collection will\nbe returned.",
                    "type": "string"
                },
                "skipSpellCorrect": {
                    "description": "Skips the auto-correct (See |SpellingCorrection|),\nand forces the search with the submitted query.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchResponse": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SearchResponse",
            "properties": {
                "correction": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SpellingCorrection",
                    "description": "Optional. If set, describes how the backend mutated the query based on spelling\ncorrection suggestion."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "result": {
                    "description": "Required. There may be no actual assets in the collection in the case\nno results found.\nThe collections represent a forest (http://shortn/_R6wZNpB57I) of flatten\ntrees, with the roots being the first item (after the previous tree ends).\nCollections to be handled in the order of delivery.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Collection"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__SpellingCorrection": {
            "description": "Message that describes a spelling correction suggestion to the original query\nand whether the original query was auto-replaced by the suggestion in the\nbackend.\nSet |SearchParameters.skip_spell_correct| in the request to true to force\nthe search using the original query.\nNext Id: 4.",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SpellingCorrection",
            "properties": {
                "originalQuery": {
                    "description": "Required. The raw query from user.",
                    "type": "string"
                },
                "resultsReplaced": {
                    "description": "Optional. True, if the results response has been replaced with results of corrected\nquery.",
                    "type": "boolean"
                },
                "spellCorrectedQuery": {
                    "description": "Required. The spelling corrected query.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestRequest": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestRequest",
            "properties": {
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "suggestParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestRequestParameters",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestRequestParameters": {
            "description": "Search query and additional parameters.\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestRequestParameters",
            "properties": {
                "filter": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Filter",
                    "description": "Optional. Clients can limit the suggestions using the filter. If no filter is given\nthe backend will return all the suggestions applicable to the partial\nquery."
                },
                "iconBlobSize": {
                    "description": "Optional. If the client requests an icon blob to be attached to the results, this\nis the size requested. If the field is 0 or not set, no blob will be given.\nThe blob is for a square image.",
                    "format": "uint32",
                    "type": "integer"
                },
                "partialQuery": {
                    "description": "Required. The partial query upon which basing the suggestions.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestResponse": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__SuggestResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "suggestions": {
                    "description": "Optional. The suggestions for the partial query given, if any.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery__Suggestion"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDiscovery__Suggestion": {
            "description": "Next Id: 3.",
            "id": "GoogleInternalPlayMoviesDfeV1betaDiscovery__Suggestion",
            "properties": {
                "asset": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_Suggestion_AssetSuggestion",
                    "description": "Suggested asset to show to the user in the mini details page (MDP).\nSee: go/primetime-mdp.\nIf |asset| is filled, it must have proper |id| field. In this case\nthe app does not need to call Search endpoint if the user selects this\nsuggestion."
                },
                "query": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDiscovery_Suggestion_QuerySuggestion",
                    "description": "Suggested query to complete the partial query given. It may potentially\nbe a full title of an asset together with its poster/icon, but without\nthe asset id attached to it. To fetch the list of the potential\nids when the user selects the query the client should submit it to the\nSearch endpoint."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_Heartbeat": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_Heartbeat",
            "properties": {
                "isCastingMoviePinned": {
                    "description": "Optional. Set to true if the request is from cast receiver (e.g. Chromecast) and\nthe movie is pinned on the cast controller (e.g. phone). This is to get\naround the device usage rule that disallows the streaming of a VOD that\nis already pinned.",
                    "type": "boolean"
                },
                "playbackId": {
                    "description": "Required for Playready.",
                    "type": "string"
                },
                "streamId": {
                    "description": "Required for Classic and FairPlay.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_NewOffline": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_NewOffline",
            "properties": {
                "reqLicenseDuration": {
                    "description": "Optional. Override the default offline license duration to a smaller value.\nIgnored if bigger than what would be normally granted. Testing only.",
                    "format": "google-duration",
                    "type": "string"
                },
                "timeSinceStarted": {
                    "description": "Optional. Only present for VOD. This is to report for how long the rental clock has\nbeen started. Classic Widevine does not",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_NewStreaming": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_NewStreaming",
            "properties": {
                "isCastingMoviePinned": {
                    "description": "Set to true if the request is from cast receiver (e.g. Chromecast) and\nthe movie is pinned on the cast controller (e.g. phone). This is to get\naround the device usage rule that disallows the streaming of a VOD that\nis already pinned.",
                    "type": "boolean"
                },
                "playbackId": {
                    "description": "Required for Playready.",
                    "type": "string"
                },
                "streamId": {
                    "description": "Required for FairPlay.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_Release": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_Release",
            "properties": {
                "sessionId": {
                    "description": "Optional. Classic Widevine does not have session_id.",
                    "type": "string"
                },
                "timeSinceStarted": {
                    "description": "Optional. Only present for VOD. This is to report for how long the rental clock has\nbeen started.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_RenewalOffline": {
            "description": "Next id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_RenewalOffline",
            "properties": {
                "timeSinceStarted": {
                    "description": "Optional. Only present for VOD. This is to report for how long the rental clock has\nbeen started.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm__CencLicense": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm__CencLicense",
            "properties": {
                "cdmKeyResponse": {
                    "description": "Required. Key response blob from Widevine server.",
                    "format": "byte",
                    "type": "string"
                },
                "contentKeys": {
                    "description": "Optional. Populated if the key_response contains content_keys.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm__ContentKey"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm__CencRequest": {
            "description": "Next id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm__CencRequest",
            "properties": {
                "cdmKeyRequest": {
                    "description": "Required. The key request blob from a cenc based Widevine client.\nAlso known as the license challenge that is generated from the CDM.\nSigned with the device key.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm__CommonLicenseRequest": {
            "description": "The portion of the license request that is common for all DRM types.\nNext id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm__CommonLicenseRequest",
            "properties": {
                "heartbeat": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_Heartbeat"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. The ID of the video content for which the request is being made."
                },
                "newOffline": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_NewOffline"
                },
                "newStreaming": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_NewStreaming"
                },
                "release": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_Release"
                },
                "renewalOffline": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm_CommonLicenseRequest_RenewalOffline",
                    "description": "For Classic Widevine, the type cannot be RenewalOffline, because\nthere is no concept of offline renewal, every offline request is new."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm__ContentKey": {
            "description": "Content key information.\nNext id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm__ContentKey",
            "properties": {
                "formatType": {
                    "description": "Required. Format type of the stream encoded with the specified ContentKey.\nThe clients should only attempt playback of format types for which a\ncontent key is provided.",
                    "enum": [
                        "FORMAT_UNSPECIFIED",
                        "FORMAT_AUDIO",
                        "FORMAT_SD",
                        "FORMAT_HD",
                        "FORMAT_UHD1"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "keyId": {
                    "description": "Required. Key ID of the enclosed ContentKey.\nSee video/drm/protocol/response_headers.proto for details.",
                    "format": "byte",
                    "type": "string"
                },
                "videoFeature": {
                    "description": "Optional. Video feature associated with this key. Common value is HDR.\nOnly present for Video content.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm__FetchCencLicenseRequest": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm__FetchCencLicenseRequest",
            "properties": {
                "baseRequest": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm__CommonLicenseRequest",
                    "description": "Required."
                },
                "cencRequest": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm__CencRequest",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required. Standard request context. See the RequestContext definition for details."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm__FetchCencLicenseResponse": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm__FetchCencLicenseResponse",
            "properties": {
                "error": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm__LicenseError"
                },
                "license": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaDrm__CencLicense"
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaDrm__LicenseError": {
            "description": "Describes the errors encountered during request handling. Common errors in:\nutil/task/codes.proto will be returned as HTTP errors directly. This proto\ncontains more license proxy specific error codes.",
            "id": "GoogleInternalPlayMoviesDfeV1betaDrm__LicenseError",
            "properties": {
                "drmError": {
                    "description": "There is an error returned by the DRM Backend, see drm_error for details.",
                    "enum": [
                        "DRM_ERROR_UNSPECIFIED",
                        "SIGNATURE_FAILED",
                        "INVALID_LICENSE_CHALLENGE",
                        "INVALID_CONTENT_INFO",
                        "POLICY_UNKNOWN",
                        "MALFORMED_REQUEST",
                        "INTERNAL_ERROR",
                        "PROVIDER_MISSING",
                        "INVALID_REQUEST",
                        "ACCESS_DENIED",
                        "SIGNING_KEY_EXPIRED",
                        "INVALID_DRM_MESSAGE",
                        "DRM_ERROR_UNSUPPORTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Enum 1 to 10 are from  ModularDrmLicenseResponse::Status.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "The DRM system specific message is invalid.",
                        "The DRM error returned from License backend is not supported."
                    ],
                    "type": "string"
                },
                "offlinePolicyError": {
                    "description": "There is a offline device policy violation according to go/estusage.\nThe errors are returned by device manager. See offline_policy_error for\ndetails.",
                    "enum": [
                        "OFFLINE_POLICY_ERROR_UNSPECIFIED",
                        "ALREADY_PINNED_ON_ANOTHER_DEVICE",
                        "TOO_MANY_ACTIVE_DEVICES_FOR_USER",
                        "TOO_MANY_ACTIVE_DEVICES_FOR_FAMILY",
                        "TOO_MANY_ACCOUNTS_ON_DEVICE",
                        "ALREADY_PINNED_BY_DIFFERENT_REQUEST_SOURCE",
                        "OFFLINE_POLICY_ERROR_UNSUPPORTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The given asset cannot be pinned because it is already pinned on another\ndevice with a key that has not yet expired. Unpin it from that device.\nVOD only.",
                        "The given device is not active, and cannot become so because the user\nalready has reached the upper limit of active devices. A currently\nactive device must have all of its pinned assets unpinned before a new\ndevice can be activated.\nEST only.",
                        "The given device is not active, and cannot become so because the family\nalready has reached the upper limit of active family devices. A currently\nactive family device must have all of its pinned family assets unpinned\nbefore a new family device can be activated.\nEST only.",
                        "The given device cannot be activated because too many active accounts\nare on the device. For example, the device has 5 accounts with pinned\nassets and cannot pin from a 6th account.\nEST only.",
                        "The given video is already pinned on this device by a different\nrequest_source (YOUTUBE, PLAY etc). This is an error condition that\nprevents pinning.\nEST and VOD.",
                        "The offline error returned from device manager is not supported."
                    ],
                    "type": "string"
                },
                "purchaseError": {
                    "description": "There is an error generated by Flare/Catalog/UserLibrary.\nSee purchase_error for details.",
                    "enum": [
                        "PURCHASE_ERROR_UNSPECIFIED",
                        "PURCHASE_NOT_FOUND",
                        "NOT_IN_CATALOG",
                        "UNSUPPORTED_DEVICE",
                        "PURCHASE_ERROR_UNSUPPORTED",
                        "PURCHASE_EXPIRED",
                        "PURCHASE_REFUNDED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The video purchase is not in the user library.",
                        "Video is not in Play Catalog.",
                        "Playback not allowed on the device for the requested video/format.",
                        "The purchase error returned from backends is not supported.",
                        "The purchase has expired after any timer extension.",
                        "The purchase has been refunded."
                    ],
                    "type": "string"
                },
                "streamingPolicyError": {
                    "description": "There is a streaming device policy violation according to go/estusage.\nThe errors are returned by device manager. See streaming_policy_error for\ndetails.",
                    "enum": [
                        "STREAMING_POLICY_ERROR_UNSPECIFIED",
                        "STREAMING_DEVICES_QUOTA_PER_24H_EXCEEDED",
                        "ALREADY_PINNED_ON_A_DEVICE",
                        "TOO_MANY_STREAMS_PER_VIDEO_PER_USER",
                        "TOO_MANY_STREAMS_PER_USER",
                        "TOO_MANY_STREAMS_PER_VIDEO_PER_FAMILY",
                        "TOO_MANY_STREAMS_PER_FAMILY",
                        "STREAMING_POLICY_ERROR_UNSUPPORTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user tried to use too many devices/IP addresses over the 24h\nperiod.",
                        "In VOD, if the video is pinned on a device, it cannot be streamed.",
                        "For each video, a user can only have one active stream.\nOnce a new stream comes up, the old stream should be stopped.",
                        "For each user, he can only have N active streams for all his videos.\nOnce a new stream comes up, the oldest stream should be stopped.",
                        "For each video, a family can only have one active stream.\nOnce a new stream comes up, the old stream should be stopped.",
                        "For each family, there can only be N active streams for all\nfamily shared videos.\nOnce a new stream comes up, the oldest stream should be stopped.\nEST only.",
                        "The streaming error returned from device manager is not supported."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest_GetStreamInfoForHlsResponse_HlsMasterPlaylist": {
            "description": "The HLS master playlist for a given resolution.",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest_GetStreamInfoForHlsResponse_HlsMasterPlaylist",
            "properties": {
                "hlsUrl": {
                    "description": "Required.",
                    "type": "string"
                },
                "maxHeight": {
                    "description": "Required.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxWidth": {
                    "description": "Required.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest_StoryboardMosaic_FrameNumberAndLength": {
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest_StoryboardMosaic_FrameNumberAndLength",
            "properties": {
                "numberOfFrames": {
                    "description": "Required. Total number of frames this story board contains.\nWhen only number_of_frames is populated. The first image is the sample\nat time 0. The sampling interval can be calculated as:\n  sampling_interval_ms = video_length_ms / (number_of_frames - 1);",
                    "format": "int32",
                    "type": "integer"
                },
                "videoLength": {
                    "description": "Required. Duration of the video that this video storyboard represents.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__AdaptationSet": {
            "description": "Next Id: 13",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__AdaptationSet",
            "properties": {
                "contentProtection": {
                    "description": "Optional. Content protection should be set for HVC video. For Widevine supported\nCENC/PlayReady, as defined in SO-IEC-23009-1_2014 section 5.8.5.2, it\nshould be set to <ContentProtection\nschemeIdUri=\"urn:mpeg:dash:mp4protection:2011\" value=\"cenc\">. Players\nshould ignore unsupported/unknown values. For non-HVC video, this field\nshould not be set.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "contentType": {
                    "description": "Required. Content type of the adaptation set.",
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "VIDEO",
                        "AUDIO",
                        "IMAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Required. An unique id within the whole mpd. We rely on this id to map storyboards\nwith corresponding Adaptation Set in the MPD.",
                    "type": "string"
                },
                "language": {
                    "description": "Optional. Declares the language code for this Adaptation Set. If language is not set,\nit means the language is unknown.",
                    "type": "string"
                },
                "mimeType": {
                    "description": "Required. Required by DASH manifest. It follows the format of \"Type/SubType\" when\ntranslating to DASH xml. Values of the enum are formatted in\n[Type]_[SubType]. CONTENT_TYPE_UNSPECIFED is an invalid value and the\nAdaptation Set with that type should be ignored.",
                    "enum": [
                        "MIME_TYPE_UNSPECIFIED",
                        "VIDEO_MP4",
                        "AUDIO_MP4",
                        "IMAGE_JPEG",
                        "VIDEO_WEBM",
                        "AUDIO_WEBM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "representation": {
                    "description": "Optional.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Representation"
                    },
                    "type": "array"
                },
                "role": {
                    "description": "Optional. Specifies roles of an Adaptation Set.\nWe should use \"urn:mpeg:dash:role:2011\" as the default scheme_id_uri for\nroles. Values we support as of minor version 0:\n  - \"main\" for video and audio with original language type\n  - \"dub\" for audio with dubbed language type",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "segmentTemplate": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__SegmentTemplate",
                    "description": "Optional. SegmentTemplate can be inheritated by all Representations of an\nAdaptationSet."
                },
                "xmlContentProtection": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "xmlContentType": {
                    "description": "Supported values for xml_content_type are \"video\", \"audio\", \"image\".",
                    "type": "string"
                },
                "xmlMimeType": {
                    "description": "Supported values for xml_mime_type are \"video/mp4\" and \"audio/mp4\".",
                    "type": "string"
                },
                "xmlSubSegmentAlignment": {
                    "description": "Fields below are for serializing the proto to DASH xml. Client should not\nuse these fields.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__AudioFilter": {
            "description": "The relationship between codec_filter and container_filter are AND. The\nrelationship within each filter is OR.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__AudioFilter",
            "properties": {
                "codecFilter": {
                    "description": "Optional. The list of codecs that client wants to be contained in the response. If\nnot set, we will return all codecs.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CODEC_UNSPECIFIED",
                            "AC3",
                            "EAC3",
                            "OPUS",
                            "MP4A",
                            "VORBIS",
                            "DTSE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "containerFilter": {
                    "description": "Optional. The list of containers that client wants to be contained in the response.\nIf not set, we will return all containers.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CONTAINER_UNSPECIFIED",
                            "MP4",
                            "FMP4",
                            "WEBM"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__ByteRange": {
            "description": "Specifies a range of byte. According to the definition of Byte RFC\n2616 14.35.1, the ByteRange will be assembed \"[$first]-[$last]\" as a string\nwith format of \"[$first]-[$last]\" in DASH xml.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__ByteRange",
            "properties": {
                "first": {
                    "description": "Required. Specifies the starting point of a range.",
                    "format": "int64",
                    "type": "string"
                },
                "last": {
                    "description": "Required. Specifies the ending point of a range.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType": {
            "description": "Generic semantics of elements such as Role, Rating, etc.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType",
            "properties": {
                "schemeIdUri": {
                    "description": "Required. Specifies a URI/URN to identify the scheme. The semantics of this element\nare specific to the scheme specified by this attribute.\nFor non-XML clients, this field is irrelavant, but we rely on it for\nconverting the proto into XML.",
                    "type": "string"
                },
                "value": {
                    "description": "Optional. Specifies the value for the descriptor element.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__Duration": {
            "description": "Specifies the duration following xs:duration type description.\nThe xs:duration has constraints for each field:\nYear, month, day, hour, minute must be a non-negative integer.\nSecond can be a non-negative integer or non-negative fractional number.",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__Duration",
            "properties": {
                "day": {
                    "format": "int32",
                    "type": "integer"
                },
                "hour": {
                    "format": "int32",
                    "type": "integer"
                },
                "minute": {
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "format": "int32",
                    "type": "integer"
                },
                "second": {
                    "format": "double",
                    "type": "number"
                },
                "year": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__Format": {
            "description": "This is a wrapper proto of video formats to let us import it in proto2 to our\nproto3 protos in Nur.",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__Format",
            "properties": {
                "format": {
                    "description": "Required. The format field in the wrapper message should always be set.",
                    "enum": [
                        "MP4_AVCBASE640_AAC",
                        "MP4_AVC720P_AAC",
                        "MP4_H264_AAC_1080P",
                        "MP4_H264_640x360_AAC_FA",
                        "MP4_H264_1280x720_AAC_FA",
                        "MP4_H264_1920x1080_AAC_FA",
                        "MP4_H264_AAC_HIGH",
                        "MP4_H264_854x480_AAC_FA",
                        "M2PS_H264_640x360_AAC_WV",
                        "M2PS_H264_854x480_AAC_WV",
                        "M2PS_H264_1280x720_LC_AAC_WV",
                        "M2PS_H264_1920x1080_AAC_WV",
                        "MP4_H264_AAC_DVD",
                        "MP4_H264_640x360_AAC_WV",
                        "M2PS_H264_1280x720_AAC",
                        "M2PS_H264_1280x720_AAC_WV",
                        "M2PS_H264_1280x720_LC_AAC",
                        "M2PS_H264_1280x720_AAC_WV_MULTI",
                        "M2PS_H264_854x480_AAC_WV_MULTI",
                        "MP4_H264_426x240_AAC",
                        "MP4_H264_426x240_AAC_WV",
                        "DASH_H264_426x240_268",
                        "DASH_H264_640x360_700",
                        "DASH_H264_854x480_1000",
                        "DASH_H264_1280x720_2000",
                        "DASH_H264_1920x1080_3750",
                        "DASH_AAC_48k_48000_STEREO",
                        "DASH_AAC_128k_48000_STEREO",
                        "DASH_AAC_256k_48000_STEREO",
                        "DASH_H264_426x240_268_CENC",
                        "DASH_H264_640x360_700_CENC",
                        "DASH_H264_854x480_1000_CENC",
                        "DASH_H264_1280x720_2000_CENC",
                        "DASH_H264_1920x1080_3750_CENC",
                        "DASH_AAC_48k_48000_STEREO_CENC",
                        "DASH_AAC_128k_48000_STEREO_CENC",
                        "DASH_AAC_256k_48000_STEREO_CENC",
                        "M2PS_H264_1920x1080_AAC_WV_MULTI",
                        "DASH_H264_256x144_108",
                        "DASH_H264_256x144_108_CENC",
                        "M2PS_H264_1920x1080_AAC_51_WV_MULTI",
                        "DASH_WEBM_VORBIS_MED",
                        "DASH_WEBM_VORBIS_HIGH",
                        "M2PS_H264_1280x720_AAC_51_WV_MULTI",
                        "M2PS_H264_1280x720_AAC_51_HQ",
                        "M2PS_H264_1280x720_AAC_51_HQ_WV",
                        "M2PS_H264_1920x1080_AAC_51_HQ",
                        "M2PS_H264_1920x1080_AAC_51_HQ_WV",
                        "M2PS_H264_1280x720_AAC_51",
                        "M2PS_H264_1280x720_AAC_51_WV",
                        "MP4_H264_720x480_AAC_WV",
                        "DASH_WEBM_VORBIS_MED_CENC",
                        "DASH_WEBM_VORBIS_HIGH_CENC",
                        "DASH_H264_854x480_1500",
                        "DASH_H264_854x480_3000",
                        "DASH_H264_1280x720_3000",
                        "DASH_H264_1280x720_5000",
                        "DASH_H264_1920x1080_5000",
                        "DASH_H264_1920x1080_7000",
                        "DASH_H264_854x480_1500_CENC",
                        "DASH_H264_854x480_3000_CENC",
                        "DASH_H264_1280x720_3000_CENC",
                        "DASH_H264_1280x720_5000_CENC",
                        "DASH_H264_1920x1080_5000_CENC",
                        "DASH_H264_1920x1080_7000_CENC",
                        "DASH_WEBM_VP9_426x240_140",
                        "DASH_WEBM_VP9_640x360_256",
                        "DASH_WEBM_VP9_854x480_480",
                        "DASH_WEBM_VP9_854x480_750",
                        "DASH_WEBM_VP9_854x480_1000",
                        "DASH_WEBM_VP9_1280x720_1000",
                        "DASH_WEBM_VP9_1280x720_2048",
                        "DASH_WEBM_VP9_1280x720_3584",
                        "DASH_WEBM_VP9_1920x1080_2000",
                        "DASH_WEBM_VP9_1920x1080_3584",
                        "DASH_WEBM_VP9_1920x1080_5376",
                        "DASH_WEBM_OPUS_LOW",
                        "DASH_WEBM_OPUS_MED",
                        "DASH_WEBM_OPUS_HIGH",
                        "DASH_AAC_192k_48000_51",
                        "DASH_AAC_384k_48000_51",
                        "DASH_AAC_192k_48000_51_CENC",
                        "DASH_WEBM_OPUS_LOW_CENC",
                        "DASH_WEBM_OPUS_MED_CENC",
                        "DASH_WEBM_OPUS_HIGH_CENC",
                        "DASH_AAC_384k_48000_51_CENC",
                        "DASH_WEBM_VP9_2560x1440_6000",
                        "DASH_WEBM_VP9_14336x14336_97000",
                        "DASH_WEBM_VP9_854x480_1000_CENC",
                        "DASH_WEBM_VP9_1280x720_1000_CENC",
                        "DASH_WEBM_VP9_1280x720_2048_CENC",
                        "DASH_WEBM_VP9_1280x720_3584_CENC",
                        "DASH_WEBM_VP9_1920x1080_2000_CENC",
                        "DASH_WEBM_VP9_1920x1080_3584_CENC",
                        "DASH_WEBM_VP9_1920x1080_5376_CENC",
                        "DASH_WEBM_VP9_2560x1440_6000_CENC",
                        "DASH_WEBM_VP9_14336x14336_97000_CENC",
                        "DASH_WEBM_VP9_256x144_86",
                        "DASH_WEBM_VP9_426x240_140_CENC",
                        "DASH_WEBM_VP9_640x360_256_CENC",
                        "M2TS_H264_ULTRALOW_FP",
                        "M2TS_H264_LOW_FP",
                        "M2TS_H264_MED_FP",
                        "M2TS_H264_HIGH_FP",
                        "M2TS_H264_HIGH_MQ_FP",
                        "M2TS_H264_HIGH_HQ_FP",
                        "M2TS_H264_720P_FP",
                        "M2TS_H264_720P_MQ_FP",
                        "M2TS_H264_720P_HQ_FP",
                        "M2TS_H264_1080P_FP",
                        "M2TS_H264_1080P_MQ_FP",
                        "M2TS_H264_1080P_HQ_FP",
                        "M2TS_AAC_LOW_FP",
                        "M2TS_AAC_MED_FP",
                        "M2TS_AAC_HIGH_FP",
                        "M2TS_AAC_51_LOW_FP",
                        "M2TS_AAC_51_HIGH_FP",
                        "DASH_WEBM_VP9_1280x720_2000",
                        "DASH_WEBM_VP9_1920x1080_3000",
                        "DASH_WEBM_VP9_2560x1440_9000",
                        "DASH_WEBM_VP9_3840x2160_12000",
                        "DASH_WEBM_VP9_3840x2160_12000_CENC",
                        "DASH_WEBM_VP9_3840x2160_18000",
                        "DASH_WEBM_VP9_854x480_480_CENC",
                        "DASH_WEBM_VP9_854x480_750_CENC",
                        "DASH_FMP4_DTSHD_51_HIGH",
                        "DASH_FMP4_DTSHD_51_HIGH_CENC",
                        "DASH_FMP4_EAC3_51_HIGH",
                        "DASH_FMP4_EAC3_51_HIGH_CENC",
                        "DASH_FMP4_AC3_51_HIGH",
                        "DASH_FMP4_AC3_51_HIGH_CENC",
                        "DASH_WEBM_VP9_HDR_256x144_119",
                        "DASH_WEBM_VP9_HDR_426x240_188",
                        "DASH_WEBM_VP9_HDR_640x360_384",
                        "DASH_WEBM_VP9_HDR_854x480_768",
                        "DASH_WEBM_VP9_HDR_1280x720_1600",
                        "DASH_WEBM_VP9_HDR_1920x1080_2880",
                        "DASH_WEBM_VP9_HDR_2560x1440_7500",
                        "DASH_WEBM_VP9_HDR_3840x2160_15000",
                        "DASH_WEBM_VP9_HDR_256x144_119_CENC",
                        "DASH_WEBM_VP9_HDR_426x240_180_CENC",
                        "DASH_WEBM_VP9_HDR_640x360_384_CENC",
                        "DASH_WEBM_VP9_HDR_854x480_768_CENC",
                        "DASH_WEBM_VP9_HDR_1280x720_1600_CENC",
                        "DASH_WEBM_VP9_HDR_1920x1080_2880_CENC",
                        "DASH_WEBM_VP9_HDR_2560x1440_7500_CENC",
                        "DASH_WEBM_VP9_HDR_3840x2160_15000_CENC",
                        "DASH_WEBM_VP9_3840x2160_15000",
                        "DASH_WEBM_VP9_HDR_3840x2160_25000",
                        "DASH_WEBM_VP9_3840x2160_15000_CENC",
                        "DASH_WEBM_VP9_HDR_3840x2160_25000_CENC",
                        "DASH_H265_426x240_LOW",
                        "DASH_H265_426x240_HIGH",
                        "DASH_H265_640x360_LOW",
                        "DASH_H265_640x360_HIGH",
                        "DASH_H265_854x480_LOW",
                        "DASH_H265_854x480_MED",
                        "DASH_H265_854x480_HIGH",
                        "DASH_H265_1280x720_LOW",
                        "DASH_H265_1280x720_HIGH",
                        "DASH_H265_1920x1080_LOW",
                        "DASH_H265_1920x1080_MED",
                        "DASH_H265_1920x1080_HIGH",
                        "DASH_H265_2560x1440_LOW",
                        "DASH_H265_3840x2160_LOW",
                        "DASH_H265_3840x2160_MED",
                        "DASH_H265_3840x2160_HIGH",
                        "DASH_H265_3840x2160_ULTRA_HIGH",
                        "DASH_H265_426x240_LOW_CENC",
                        "DASH_H265_426x240_HIGH_CENC",
                        "DASH_H265_640x360_LOW_CENC",
                        "DASH_H265_640x360_HIGH_CENC",
                        "DASH_H265_854x480_LOW_CENC",
                        "DASH_H265_854x480_MED_CENC",
                        "DASH_H265_854x480_HIGH_CENC",
                        "DASH_H265_1280x720_LOW_CENC",
                        "DASH_H265_1280x720_HIGH_CENC",
                        "DASH_H265_1920x1080_LOW_CENC",
                        "DASH_H265_1920x1080_MED_CENC",
                        "DASH_H265_1920x1080_HIGH_CENC",
                        "DASH_H265_2560x1440_LOW_CENC",
                        "DASH_H265_3840x2160_LOW_CENC",
                        "DASH_H265_3840x2160_MED_CENC",
                        "DASH_H265_3840x2160_HIGH_CENC",
                        "DASH_H265_3840x2160_ULTRA_HIGH_CENC",
                        "DASH_H265_426x240_LOW_HDR10",
                        "DASH_H265_426x240_HIGH_HDR10",
                        "DASH_H265_640x360_LOW_HDR10",
                        "DASH_H265_640x360_HIGH_HDR10",
                        "DASH_H265_854x480_LOW_HDR10",
                        "DASH_H265_854x480_MED_HDR10",
                        "DASH_H265_854x480_HIGH_HDR10",
                        "DASH_H265_1280x720_LOW_HDR10",
                        "DASH_H265_1280x720_HIGH_HDR10",
                        "DASH_H265_1920x1080_LOW_HDR10",
                        "DASH_H265_1920x1080_MED_HDR10",
                        "DASH_H265_1920x1080_HIGH_HDR10",
                        "DASH_H265_2560x1440_LOW_HDR10",
                        "DASH_H265_3840x2160_LOW_HDR10",
                        "DASH_H265_3840x2160_MED_HDR10",
                        "DASH_H265_3840x2160_HIGH_HDR10",
                        "DASH_H265_3840x2160_ULTRA_HIGH_HDR10",
                        "DASH_H265_426x240_LOW_HDR10_CENC",
                        "DASH_H265_426x240_HIGH_HDR10_CENC",
                        "DASH_H265_640x360_LOW_HDR10_CENC",
                        "DASH_H265_640x360_HIGH_HDR10_CENC",
                        "DASH_H265_854x480_LOW_HDR10_CENC",
                        "DASH_H265_854x480_MED_HDR10_CENC",
                        "DASH_H265_854x480_HIGH_HDR10_CENC",
                        "DASH_H265_1280x720_LOW_HDR10_CENC",
                        "DASH_H265_1280x720_HIGH_HDR10_CENC",
                        "DASH_H265_1920x1080_LOW_HDR10_CENC",
                        "DASH_H265_1920x1080_MED_HDR10_CENC",
                        "DASH_H265_1920x1080_HIGH_HDR10_CENC",
                        "DASH_H265_2560x1440_LOW_HDR10_CENC",
                        "DASH_H265_3840x2160_LOW_HDR10_CENC",
                        "DASH_H265_3840x2160_MED_HDR10_CENC",
                        "DASH_H265_3840x2160_HIGH_HDR10_CENC",
                        "DASH_H265_3840x2160_ULTRA_HIGH_HDR10_CENC",
                        "DASH_H265_426x240_LOW_DV",
                        "DASH_H265_426x240_HIGH_DV",
                        "DASH_H265_640x360_LOW_DV",
                        "DASH_H265_640x360_HIGH_DV",
                        "DASH_H265_854x480_LOW_DV",
                        "DASH_H265_854x480_MED_DV",
                        "DASH_H265_854x480_HIGH_DV",
                        "DASH_H265_1280x720_LOW_DV",
                        "DASH_H265_1280x720_HIGH_DV",
                        "DASH_H265_1920x1080_LOW_DV",
                        "DASH_H265_1920x1080_MED_DV",
                        "DASH_H265_1920x1080_HIGH_DV",
                        "DASH_H265_2560x1440_LOW_DV",
                        "DASH_H265_3840x2160_LOW_DV",
                        "DASH_H265_3840x2160_MED_DV",
                        "DASH_H265_3840x2160_HIGH_DV",
                        "DASH_H265_3840x2160_ULTRA_HIGH_DV",
                        "DASH_H265_426x240_LOW_DV_CENC",
                        "DASH_H265_426x240_HIGH_DV_CENC",
                        "DASH_H265_640x360_LOW_DV_CENC",
                        "DASH_H265_640x360_HIGH_DV_CENC",
                        "DASH_H265_854x480_LOW_DV_CENC",
                        "DASH_H265_854x480_MED_DV_CENC",
                        "DASH_H265_854x480_HIGH_DV_CENC",
                        "DASH_H265_1280x720_LOW_DV_CENC",
                        "DASH_H265_1280x720_HIGH_DV_CENC",
                        "DASH_H265_1920x1080_LOW_DV_CENC",
                        "DASH_H265_1920x1080_MED_DV_CENC",
                        "DASH_H265_1920x1080_HIGH_DV_CENC",
                        "DASH_H265_2560x1440_LOW_DV_CENC",
                        "DASH_H265_3840x2160_LOW_DV_CENC",
                        "DASH_H265_3840x2160_MED_DV_CENC",
                        "DASH_H265_3840x2160_HIGH_DV_CENC",
                        "DASH_H265_3840x2160_ULTRA_HIGH_DV_CENC"
                    ],
                    "enumDescriptions": [
                        "Clear non-dash format, currently only for Trailers.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "This is named incorrectly for historical reasons. See b/7390740.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HEVC clear SDR itags.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HEVC encrypted SDR itags.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HEVC clear HDR10 itags.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HEVC encrypted HDR10 itags.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HEVC clear Dolby Vision itags.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "HEVC encrypted Dolby Vision itags.",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForDashRequest": {
            "description": "Next Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForDashRequest",
            "properties": {
                "audioFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__AudioFilter",
                    "description": "Optional. Audio filter for filtering audio streams."
                },
                "deviceSupportedHdcpLevel": {
                    "description": "Required. HDCP level supported the by device.",
                    "enum": [
                        "HDCP_UNSPECIFIED",
                        "HDCP_NONE",
                        "HDCP_V1",
                        "HDCP_V2",
                        "HDCP_V2_1",
                        "HDCP_V2_2",
                        "HDCP_DISCONNECTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "HDCP_NONE is for devices that don't have any HDMI port. So no HDCP\nrequirement needed.",
                        "",
                        "",
                        "",
                        "",
                        "HDCP_DISCONNECTED is for devices with an HDMI port but is not connected\nto any other devices. This is always considered the highest HDCP level."
                    ],
                    "type": "string"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "includeNonDash": {
                    "description": "Optional. Non dash formats are needed by legacy Android players. When this flag is\nset, response will include both dash and non dash formats. By default, only\ndash formats will be returned.",
                    "type": "boolean"
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "timedTextFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextFilter",
                    "description": "Optional. TimedText filter for filtering timed text streams."
                },
                "videoFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__VideoFilter",
                    "description": "Optional. Video filter for filtering video streams."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForDashResponse": {
            "description": "Next Id: 6",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForDashResponse",
            "properties": {
                "mpd": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Mpd",
                    "description": "Required. Available manifest for the requested video id. If there is an error, this\nfield will not be set. Client should check the error in ResponseContext\nbefore reading from this field."
                },
                "qoe": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Qoe",
                    "description": "Optional. Qoe properties for all videos the response."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "storyboards": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Storyboard",
                    "description": "Optional. A tree structured storyboards for the video."
                },
                "timedTexts": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedText",
                    "description": "Optional. Since there is no standard way of defining timed text in DASH spec, we will\nput the timed text info outside mpd. Client should fetch timed text info\nseparately and build manifest on the fly for different players."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForHlsRequest": {
            "description": "Next Id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForHlsRequest",
            "properties": {
                "audioFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__AudioFilter",
                    "description": "Optional. Audio filter for filtering audio streams."
                },
                "deviceSupportedHdcpLevel": {
                    "description": "Required. HDCP level supported the by device.",
                    "enum": [
                        "HDCP_UNSPECIFIED",
                        "HDCP_NONE",
                        "HDCP_V1",
                        "HDCP_V2",
                        "HDCP_V2_1",
                        "HDCP_V2_2",
                        "HDCP_DISCONNECTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "HDCP_NONE is for devices that don't have any HDMI port. So no HDCP\nrequirement needed.",
                        "",
                        "",
                        "",
                        "",
                        "HDCP_DISCONNECTED is for devices with an HDMI port but is not connected\nto any other devices. This is always considered the highest HDCP level."
                    ],
                    "type": "string"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "timedTextFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextFilter",
                    "description": "Optional. TimedText filter for filtering timed_text streams."
                },
                "videoFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__VideoFilter",
                    "description": "Optional. Video filter for filtering video streams."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForHlsResponse": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoForHlsResponse",
            "properties": {
                "hlsMasterPlaylists": {
                    "description": "Required. The list of HLS master playlists available for playback for each\nresolution. For example, SD purchasers will only get a 480p playlist,\nwhereas HD purchasers will get a 480p, 720p, and 1080p playlist.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest_GetStreamInfoForHlsResponse_HlsMasterPlaylist"
                    },
                    "type": "array"
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "storyboards": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Storyboard",
                    "description": "Optional. A tree structured storyboards for the video."
                },
                "timedTexts": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedText",
                    "description": "Optional. Since there is no standard way of defining timed text in DASH spec, we will\nput the timed text info outside mpd. Client should fetch timed text info\nseparately and build manifest on the fly for different players."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoInternalRequest": {
            "description": "This endpoint is for internal use only. It is controlled by a whitelist of\ngaia id. Request with un-whitelisted gaia id will be rejected.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoInternalRequest",
            "properties": {
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Deprecated."
                },
                "playbackUrlExpirationSecs": {
                    "description": "Optional. Force the playback_url of each representation to expire at these seconds\nsince signing. For testing purposes only.",
                    "format": "uint64",
                    "type": "string"
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "videoId": {
                    "$ref": "AndroidVideoId__VideoId",
                    "description": "Required. Internal endpoint will not have an asset id since asset id is created after\nQC. Use video id only."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoInternalResponse": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoInternalResponse",
            "properties": {
                "mpd": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Mpd",
                    "description": "Required. Available manifest for the requested video id. If there is an\nerror, client will get an error response from the API and the whole\nresponse proto won't be set."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "storyboards": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Storyboard",
                    "description": "Optional. A tree structured storyboards for the video."
                },
                "timedTexts": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedText",
                    "description": "Optional. Since there is no standard way of defining timed text in DASH spec, we will\nput the timed text info outside mpd. Client should fetch timed text info\nseparately and build manifest on the fly for different players."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoUrlRequest": {
            "description": "Next Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoUrlRequest",
            "properties": {
                "audioFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__AudioFilter",
                    "description": "Optional. Audio filter for filtering audio streams."
                },
                "cpn": {
                    "description": "Optional. A number issued once per response for joining logs with bandaid.\nIf cpn is provided, it will be appended to all bandaid urls during url\ngeneration.",
                    "type": "string"
                },
                "deviceSupportedHdcpLevel": {
                    "description": "Required. HDCP level supported the by device.",
                    "enum": [
                        "HDCP_UNSPECIFIED",
                        "HDCP_NONE",
                        "HDCP_V1",
                        "HDCP_V2",
                        "HDCP_V2_1",
                        "HDCP_V2_2",
                        "HDCP_DISCONNECTED"
                    ],
                    "enumDescriptions": [
                        "",
                        "HDCP_NONE is for devices that don't have any HDMI port. So no HDCP\nrequirement needed.",
                        "",
                        "",
                        "",
                        "",
                        "HDCP_DISCONNECTED is for devices with an HDMI port but is not connected\nto any other devices. This is always considered the highest HDCP level."
                    ],
                    "type": "string"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "timedTextFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextFilter",
                    "description": "Optional. TimedText filter for filtering timed text streams."
                },
                "videoFilter": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__VideoFilter",
                    "description": "Optional. Video filter for filtering video streams."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoUrlResponse": {
            "description": "Next Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__GetStreamInfoUrlResponse",
            "properties": {
                "heartbeatUrl": {
                    "description": "Required. Client can pass this URL to player to renew a streaming license, i.e.\nheartbeat. The URL is for a POST request, with the body containing a\nbinary BLOB generated by the CDM client on the device.\nAuthorization header or auth url parameter must be added by the caller.",
                    "type": "string"
                },
                "licenseUrl": {
                    "description": "Required. Client can pass this URL to player to request a new license.\nThe URL is for a POST request, with the body containing a binary BLOB\ngenerated by the CDM client on the device.\nAuthorization header or auth url parameter must be added by the caller.",
                    "type": "string"
                },
                "mpdUrl": {
                    "description": "Required. Mpd URL generated based on the request. Client can pass this URL to player\nto request standard DASH manifest in xml. The url should contain a\nserialized request and its signature.",
                    "type": "string"
                },
                "qoe": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Qoe",
                    "description": "Required. Qoe properties for all videos the response."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "storyboards": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Storyboard",
                    "description": "Optional. Tree-structured storyboards for the video."
                },
                "timedTexts": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedText",
                    "description": "Optional. Since there is no standard way of defining timed text in DASH spec, we will\nput the timed text info outside mpd. Client should fetch timed text info\nseparately and build manifest on the fly for different players."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__Mpd": {
            "description": "Next Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__Mpd",
            "properties": {
                "period": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Period"
                    },
                    "type": "array"
                },
                "xmlMinBufferTime": {
                    "type": "string"
                },
                "xmlNamespace": {
                    "description": "Fields below are for serializing the proto to DASH xml. Client should not\nuse these fields.",
                    "type": "string"
                },
                "xmlProfiles": {
                    "type": "string"
                },
                "xmlSchema": {
                    "type": "string"
                },
                "xmlSchemaLocation": {
                    "type": "string"
                },
                "xmlType": {
                    "description": "Supported values for xml_type are \"static\" and \"dynamic\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__Period": {
            "description": "Next Id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__Period",
            "properties": {
                "adaptationSet": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__AdaptationSet"
                    },
                    "type": "array"
                },
                "duration": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Duration"
                },
                "id": {
                    "description": "Required. An unique id within the whole mpd. We rely on this id to map timed text\nwith corresponding Period in the MPD.",
                    "type": "string"
                },
                "supplementalProperty": {
                    "description": "Optional. SupplementalProperty specifies supplemental information about the\ncontaining element that may be used by the DASH client optimizing the\nprocessing.\nFor details: ISO_IEC_23009-1 section 5.8.4.9.\nFor example:\n<SupplementalProperty schemeIdUri=\"urn:google:gpm:2019:type\"\nvalue=\"pre-roll\">",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "xmlDuration": {
                    "description": "Fields below are for serializing the proto to DASH xml. Client should not\nuse these fields.",
                    "type": "string"
                },
                "xmlStart": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__Qoe": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__Qoe",
            "properties": {
                "adaptationSetQoePropertiesMap": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__QoeProperties"
                    },
                    "description": "Deprecated.\nA map of Quality of Experience (QoE) properties indexed by a string\nrepresenting adaptation set id to indicate the adaptation set which the QoE\nproperties belongs to.",
                    "type": "object"
                },
                "qoePropertiesMap": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__QoeProperties"
                    },
                    "description": "Required. A map of Quality of Experience (QoE) properties indexed by a string\nrepresenting Period or AdaptationSet or Representation id. Like Dash\nManifest, Qoe properties in lower level should overwrite the value in the\nsame field of ones in higher level.\nFor example, we can have qoe properties map containing:\n  - A property for a period: {\"1\", qoe_property1}\n  - A property for an adaptation set: {\"1-1\", qoe_property2}\n  - A property for a representation: {\"1-1-1\", qoe_property3}\nqoe_property3 should overwrite qoe_property2, which should overwite\nqoe_property1.\nAn example for actual usage:\nqoe_properties_map {\n  {\"1\" /*period id*/, qoe_properties {docid: PCIxoCGIDKQ, ns: pr,} stmp\n    {prismid: klg4relw1Is.P}},\n  {\"1-1-1\" /*representation id, qoe_properties {fmt: 222}},\n  {\"1-1-2\" /*representation id, qoe_properties {fmt: 223}}\n}",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__QoeProperties": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__QoeProperties",
            "properties": {
                "qoeProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key value pairs of properties for QoE.\nThe key is the field name in QoE. The value is corresponding value of the\nfield. For example: {key: ns, value: gp}.\nClient should put these properties to QoE blindly.",
                    "type": "object"
                },
                "stmp": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary key value logging for experimental and temporary usage supported\nby QoE.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__Representation": {
            "description": "Next Id: 24",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__Representation",
            "properties": {
                "audioChannelConfiguration": {
                    "description": "Optional. Specifies the audio channel number and configuration (speaker type, speaker\nlocation, etc.). Only used for audio representations.\nWe should use \"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" as\nthe default scheme_id_uri for audio channel configurations.\nThe value is a univeral string defined in ISO/IEC 23003-3:2012 Table 68.\nValues we support as of minor version 0:\n  - \"2\" is the value for \"2/0.0\" (stereo audio channel configurations).\n  This means it has only left, right front speakers.\n  - \"6\" is the value for \"3/2.1\" (5.1 audio channel configuration). This\n  means it has left, center, right front speakers; left, right surround\n  speakers; center front low frequency enhancement speaker.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "bandwidth": {
                    "description": "Required. The average bitrate of the Representation will converge to. It is not\nguarenteed to have fixed bitrate for each frame.",
                    "format": "int32",
                    "type": "integer"
                },
                "baseUrl": {
                    "description": "Optional. Specifies the url of the stream. We don't use nested Base URL. So the url\nspecified here should be a list of complete url starting with http or\nhttps. Players should try from the first url. If one url can't be played,\nfall over to the next one.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "codecs": {
                    "description": "Optional. Specifies the comma-separated codecs present within the Representation.",
                    "type": "string"
                },
                "contentProtection": {
                    "description": "Optional. Content protection should be set for HVC video. For Widevine supported\nCENC/PlayReady, as defined in SO-IEC-23009-1_2014 section 5.8.5.2, it\nshould be set to <ContentProtection\nschemeIdUri=\"urn:mpeg:dash:mp4protection:2011\" value=\"cenc\">. Players\nshould ignore unsupported/unknown values. For non-HVC video, this field\nshould not be set.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "essentialProperty": {
                    "description": "Optional. Essential Property Descriptor specifies information about the containing\nelement that is considered essential by the Media Presentation author for\nprocessing the containing element.\nFor example with thumbnails:\n<EssentialProperty\nschemeIdUri=\"http://dashif.org/guidelines/thumbnail_tile\"\nvalue=\"25x1\"/>",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "fileSize": {
                    "description": "Optional. File size in byte. To be used for offline stream only.",
                    "format": "int64",
                    "type": "string"
                },
                "formatId": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__Format",
                    "description": "Optional. Format id of the Representation. Provides a proprietary description of the\nrepresentation format (itag). If set, can be used for more concise\ndescription of the content's bitrate, resolution and codec. Clients should\nnot rely on the existence of this field."
                },
                "frameRate": {
                    "description": "Optional. Specifies the output frame rate of the video media type in the\nRepresentation. If the frame or field rate is varying, the value is the\naverage frame or half the average field rate field rate over the entire\nduration of the Representation. The value is coded as a string, either\ncontaining two integers separated by a \"/\", (\"F/D\"), or a single integer\n\"F\". The framerate is the division F/D, or F, like \"60\" or \"24/1.001\".",
                    "type": "string"
                },
                "height": {
                    "description": "Optional. Specifies the vertical visual presentation size of the video.",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "Required. Specifies an identifier for this Representation. The id is unique within\nthe whole mpd.",
                    "type": "string"
                },
                "immersive": {
                    "description": "Optional. Set to true when the content should be presented in an immersive setting.\nShould be ignored if stereo_layout == LAYOUT_MONO.\nAn example of immersive content is IMAX content.",
                    "type": "boolean"
                },
                "mimeType": {
                    "description": "Required. Required by DASH manifest. It follows the format of \"Type/SubType\" when\ntranslating to DASH xml. Values of the enum are formatted in\n[Type]_[SubType]. CONTENT_TYPE_UNSPECIFED is an invalid value and the\nAdaptation Set with that type should be ignored.",
                    "enum": [
                        "MIME_TYPE_UNSPECIFIED",
                        "VIDEO_MP4",
                        "AUDIO_MP4",
                        "IMAGE_JPEG",
                        "VIDEO_WEBM",
                        "AUDIO_WEBM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "segmentBase": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__SegmentBase",
                    "description": "Optional."
                },
                "segmentTemplate": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__SegmentTemplate",
                    "description": "Optional. SegmentTemplate can be part of any Representation of an AdaptationSet."
                },
                "stereoLayout": {
                    "description": "Optional. This field contains the frame layout information of a video.\nIt is modeled after video/storage/proto/video_layout.proto",
                    "enum": [
                        "STEREO_LAYOUT_UNSPECIFIED",
                        "LAYOUT_MONO",
                        "LAYOUT_LEFT_RIGHT",
                        "LAYOUT_TOP_BOTTOM"
                    ],
                    "enumDescriptions": [
                        "",
                        "Standard non-3D video.",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "streamTimestamp": {
                    "description": "Optional. Time of the stream was indexed. To be used for offline stream only.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "width": {
                    "description": "Optional. Specifies the horizontal visual presentation size of the video.",
                    "format": "int32",
                    "type": "integer"
                },
                "xmlAudioSamplingRate": {
                    "description": "Fields below are for serializing the proto to DASH xml. Client should not\nuse these fields.",
                    "type": "string"
                },
                "xmlContentProtection": {
                    "description": "Optional. Xml represented content protection.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__DescriptorType"
                    },
                    "type": "array"
                },
                "xmlMaxPlayoutRate": {
                    "format": "int64",
                    "type": "string"
                },
                "xmlMimeType": {
                    "description": "Supported values for xml_mime_type are \"video/mp4\" and \"audio/mp4\".",
                    "type": "string"
                },
                "xmlStartWithSap": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__SegmentBase": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__SegmentBase",
            "properties": {
                "indexRange": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__ByteRange",
                    "description": "Optional. Specifies the byte range that contains the Segment Index in all Media\nSegments of the Representation. When presented, also set @indexRangeExcat\nin DASH xml to be true."
                },
                "initRange": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__UrlType",
                    "description": "Optional. Specifies the URL including a possible byte range for the Initialization\nSegment."
                },
                "xmlIndexRange": {
                    "description": "Fields below are for serializing the proto to DASH xml. Client should not\nuse these fields.",
                    "type": "string"
                },
                "xmlIndexRangeExact": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__SegmentTemplate": {
            "description": "Next Id: 6\nSegmentTemplate element provides a mechanism to construct a list of segments\nfrom a given template.",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__SegmentTemplate",
            "properties": {
                "duration": {
                    "description": "Required. The duration of each segment in the case of fixed duration segments. The\nvalue in seconds is the division of this value and timescale. If not set,\nthe duration is in scale of seconds. For example, if timescale=30 and\nduration is 90 seconds, the duration field will be set to 2700. If\ntimescale is not set, the duration should be set to 90.",
                    "format": "int64",
                    "type": "string"
                },
                "media": {
                    "description": "Required. The template for the media segment assigned to a Representation.\nFor example:\n  \"$RepresentationID$/tile$Number$.jpg\u201d\n  \"https://i9.ytimg.com/sb/7rZ6QVvOsE4/storyboard3_L2/M$Number$.jpg?rs=AMzJL3kLvbUEBKe_cyvr8htu3m8wnxvacw\"\n$Number$ will be replaced by incremental integers starting from\nstartNumber.",
                    "type": "string"
                },
                "startNumber": {
                    "description": "Optional. Number of the first segment in the Period assigned to a Representation.",
                    "format": "int32",
                    "type": "integer"
                },
                "timescale": {
                    "description": "Optional. Timescale of Representation, in units per second.",
                    "format": "int32",
                    "type": "integer"
                },
                "xmlStartNumber": {
                    "description": "Fields below are for serializing the proto to DASH xml. Client should not\nuse these fields.\nIt should be convereted from int value start_number. It's added here\nbecause for use cases where the start number is 0, we want to avoid start\nnumber field from being ignored by xml_formatter.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__Storyboard": {
            "description": "The storyboard is a tree structure with a depth of 2.\nCaption (Root)\n   |\nAdaptation Set (indexed by Adaptation Set Id)\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__Storyboard",
            "properties": {
                "adaptationSetStoryboardMap": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__StoryboardPerAdaptationSet"
                    },
                    "description": "Required. A map of storyboard indexed by a string represented Adaptation Set Id. In\nour proto, Adapatation Set id will be identical with in a MPD.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__StoryboardMosaic": {
            "description": "Next Id: 9",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__StoryboardMosaic",
            "properties": {
                "frameHeight": {
                    "description": "Required. Height of the screenshot image. The total height of the mosaic should be\n  frame_height * max_frames_per_column",
                    "format": "int32",
                    "type": "integer"
                },
                "frameNumberAndLength": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest_StoryboardMosaic_FrameNumberAndLength"
                },
                "frameWidth": {
                    "description": "Required. Width of the screenshot image. The total width of the mosaic should be\n  frame_width * max_frames_per_row",
                    "format": "int32",
                    "type": "integer"
                },
                "maxFramesPerColumn": {
                    "description": "Required. Max number of frames per column.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxFramesPerRow": {
                    "description": "Required. Max number of frames per row.",
                    "format": "int32",
                    "type": "integer"
                },
                "samplingInterval": {
                    "description": "The time interval between each sample. The first frame is always at time\n0.",
                    "format": "google-duration",
                    "type": "string"
                },
                "totalImageBytes": {
                    "description": "Optional. Total size of all the mosaics in the storyboard. This field is empty for\nassets that aren't in the Catalog (for QC tool) and should be always set in\nother environments since clients relies on it to determine whether there is\nenough space left.",
                    "format": "int64",
                    "type": "string"
                },
                "urls": {
                    "description": "Required. List of urls for the mosaic.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__StoryboardPerAdaptationSet": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__StoryboardPerAdaptationSet",
            "properties": {
                "storyboardMosaic": {
                    "description": "Required. List of storyboards within this Adaptation Set.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__StoryboardMosaic"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__TimedText": {
            "description": "The TimedText is a tree structure with depth of 3.\nTimedText (Root)\n   |\nPeriod   (indexed by Period Id)\n   |\nFormat   (indexed by timed text format)\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedText",
            "properties": {
                "periodTimedTextMap": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextPerFormat"
                    },
                    "description": "Required. A map of timed text indexed by a string represented Period Id to indicate\nthe period which the timed text belongs to.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextEntity": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextEntity",
            "properties": {
                "contentType": {
                    "description": "Required. The content type of the timed text.",
                    "enum": [
                        "CONTENT_TYPE_UNSPECIFIED",
                        "FORCED_SUBTITLE",
                        "CLOSED_CAPTION",
                        "SUBTITLE",
                        "SDH"
                    ],
                    "enumDescriptions": [
                        "",
                        "Forced subtitle is common on movies and only provide subtitles when the\ncharacters speak a foreign or alien language, or a sign, flag, or other\ntext in a scene is not translated in the localization and dubbing\nprocess. In some cases, foreign dialogue may be left untranslated if the\nmovie is meant to be seen from the point of view of a particular\ncharacter who does not speak the language in question.",
                        "Closed caption is the American term for closed timed text specifically\nintended for people who are deaf or hard of hearing. Is usually contains\ndescriptions of important non-dialog audio as well such as \"(sighs)\",\n\"(wind blowing)\", \"(\"SONG TITLE\" playing)\", \"(kisses)\" or \"(door creaks)\"\nand lyrics.\nThis is a transcription rather than a translation. For example, an\nEnglish closed caption for a French audio will show \"[Speaking in\nFrench]\" instead of translating French into English.",
                        "Subtitles are primarily for translation for people who can hear but not\nunderstand the audio. Subtitles do not contain transciption of\nnon-dialogue audio.",
                        "SDH (Subtitles for the Deaf and Hard-of-hearing) are\nintended for people who are hearing impaired, providing information about\nmusic, environmental sounds and off-screen speakers (e.g. when a doorbell\nrings or a gunshot is heard). In other words, they indicate the kinds and\nthe sources of the sounds coming from the movie, and usually put this\ninformation inside brackets to demarcate it from actors' dialogs. For\nexample: [sound of typing on a keyboard], [mysterious music], [glass\nbreaks], [woman screaming]. Narrative is the most common type of subtitle\nin which spoken dialogue is displayed. These are most commonly used to\ntranslate a film with one spoken language and the text of a second\nlanguage.\nThe difference between SDH and CLOSED_CAPTION is SDH has translation, but\nCLOSED_CAPTION doesn't. For example, an English SDH for a French audio\nwill show \"Hello\" when the audio saying \"Bonjour\", but ClOSED_CAPTION\nwill only show \"[Speaking in French]\"."
                    ],
                    "type": "string"
                },
                "language": {
                    "description": "Required. The language of the timed text.",
                    "type": "string"
                },
                "url": {
                    "description": "Required. The signed url to fetch the timed text.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextFilter": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextFilter",
            "properties": {
                "formatFilter": {
                    "description": "Optional. The list of format that clients wants to be contained in the response. If\nnot set we will return all formats.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "FORMAT_UNSPECIFIED",
                            "FORMAT_3",
                            "JSON3",
                            "FORMAT_2",
                            "WEB_VTT",
                            "WEB_VTT_TV",
                            "TTML"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextList": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextList",
            "properties": {
                "timedTextEntity": {
                    "description": "Required. A list of map entities. This field should always contain at least one\nTimedTextEntity. Otherwise, there should not be this kv pair in\nformat_timed_text_map.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextEntity"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextPerFormat": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextPerFormat",
            "properties": {
                "formatTimedTextMap": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__TimedTextList"
                    },
                    "description": "Required. A map of timed text entity indexed by timed text format. Since the key of a\nmap in proto can't be a enum, we use the name of \"Format\" enum listed below\nas the key. For example <\"WEB_VTT\", {}>. Since there may be multiple timed\ntext urls with the same format, the value for this map is a repeated field\nof timed text entities.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__UrlType": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__UrlType",
            "properties": {
                "byteRange": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaManifest__ByteRange",
                    "description": "Optional. Specifies the byte range restricting the above HTTP-URL. If not presented,\nthe element rfers to the entire resource referenced in the url (mapped to\nurl from parent if url is not presented)."
                },
                "url": {
                    "description": "Optional. Specifies the source URL part and shall be formatted either as an\n<absolute-URI> according to RFC 3986, Clause 4.3, with a fixed scheme of\n\u201chttp\u201d or \u201chttps\u201d or as a <relative - ref> according to RFC 3986,\nClause 4.2. If not presented, Base URL from parent will be used as default.",
                    "type": "string"
                },
                "xmlByteRange": {
                    "description": "Fields below are for serializing the proto to DASH xml. Client should not\nuse these fields.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaManifest__VideoFilter": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaManifest__VideoFilter",
            "properties": {
                "codecFilter": {
                    "description": "Optional. The list of codecs that client wants to be contained in the response. If\nnot set, we will return all codecs.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CODEC_UNSPECIFIED",
                            "AVC1",
                            "VP9",
                            "HVC1",
                            "DVH1",
                            "DVHE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "containerFilter": {
                    "description": "The list of containers that client wants to be contained in the response.\nIf not set, we will return all containers.",
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "CONTAINER_UNSPECIFIED",
                            "MP4",
                            "M2PS",
                            "WEBM",
                            "M2TS",
                            "FMP4"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_DistributorDetails_DistributorInfo": {
            "description": "Detail information about a Distributor asset.\nNext Id: 7",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_DistributorDetails_DistributorInfo",
            "properties": {
                "appId": {
                    "description": "Required. The IDs of the apps provided by distributor.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "authenticationId": {
                    "description": "Optional. ID to use for the external vendor authentication.",
                    "type": "string"
                },
                "authenticationVendor": {
                    "description": "Optional.",
                    "enum": [
                        "VENDOR_UNSPECIFIED",
                        "ADOBE"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "images": {
                    "description": "Optional.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "premiumChannelId": {
                    "description": "Optional. The IDs of the distributors representing premium channels if current\ndistributor is a Pay TV.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Optional.",
                    "enum": [
                        "DISTRIBUTOR_TYPE_UNSPECIFIED",
                        "DISTRIBUTOR_TYPE_BASIC_CHANNEL",
                        "DISTRIBUTOR_TYPE_PREMIUM_CHANNEL",
                        "DISTRIBUTOR_TYPE_MVPD",
                        "DISTRIBUTOR_TYPE_SVOD",
                        "DISTRIBUTOR_TYPE_AVOD",
                        "DISTRIBUTOR_TYPE_TVOD"
                    ],
                    "enumDescriptions": [
                        "",
                        "TV channels available to a majority of Pay TV services.\nE.g. ABC, CBS, FOX",
                        "TV channels available with premium Pay TV packages.\nE.g. HBO, Showtime",
                        "Multichannel video programming distributor, usually requires a\nsubscription fee. (satellite TV, cable TV, OTT services)\nE.g. Comcast, DirecTV, Sling TV, PlayStation Vue",
                        "Subscription Video on Demand.\nE.g. Netflix, Hulu+",
                        "Advertising Video on demand. Ad-supported streaming service.\nE.g. Yahoo View",
                        "Transactional video on demand.\nE.g. Play Movies"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_FetchAssetResponse_Error": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_FetchAssetResponse_Error",
            "properties": {
                "aliases": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__AssetIdAliases",
                    "description": "Error message is required to have \"id\" and/or \"aliases\" set.\nAlternative identifiers of asset that experienced an error while\nfetching."
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Error message is required to have \"id\" and/or \"aliases\" set.\nThe asset that experienced an error while fetching."
                },
                "statusMessage": {
                    "description": "Optional. The non-localized internal status of the asset for debugging.",
                    "type": "string"
                },
                "type": {
                    "description": "Required.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "PERMANENT",
                        "TRANSIENT"
                    ],
                    "enumDescriptions": [
                        "Unused.",
                        "Indicates that attempts to fetch this asset aren't likely to succeed.\nMost likely, this is because a NOT_FOUND error was returned.",
                        "Indicates that the client should continue retrying to fetch\nthe asset with exponential backoff.\nMostly likely because a request to another system timed out."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_BonusItem": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_BonusItem",
            "properties": {
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_BundleHierarchy": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_BundleHierarchy",
            "properties": {
                "bonusItems": {
                    "description": "Optional. Not all bundles have bonus content, but if it has any - it will be here.\nThe order of items in the list is predefined and should be preserved\nin presentation and listings.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "items": {
                    "description": "Required. A bundle must have at least one item (e.g. movie) in it. The order of\nitems in the list is not arbitrary and should be respected.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_EpisodeHierarchy": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_EpisodeHierarchy",
            "properties": {
                "seasonId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. An episode must be a part of a season."
                },
                "sequenceNumber": {
                    "description": "Required. This field dictates the order that the asset should be sorted when listed\nwith its siblings. It is not always a number (\"1a\", \"1b\"). If it is not\nset, use sort by the asset's localized title.\n\nWhen using this field, client should always use a collator with numeric\ncollation for proper sorting (go/sorting).",
                    "type": "string"
                },
                "showId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. A season must be a part of a show. This is the id of the show the parent\nseason belongs to."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_MovieHierarchy": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_MovieHierarchy",
            "properties": {
                "bonusItems": {
                    "description": "Optional. Not all movies have bonus content, but if it has any - it will be here.\nThe order of items in the list is predefined and should be preserved in\npresentation and listings.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_BonusItem"
                    },
                    "type": "array"
                },
                "inBundles": {
                    "description": "Optional. Not all movies belong to bundles. If a movie belongs to any bundle, the\nbundle id will be in this list.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "trailers": {
                    "description": "Optional. Not all movies have trailers. If a movie has any, it will be here.\nThe order of items in the list is predefined and should be preserved in\npresentation and listings.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_SeasonHierarchy": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_SeasonHierarchy",
            "properties": {
                "bonusItems": {
                    "description": "Optional. Not all seasons have bonus content, but if it has any - it will be here.\nIt is possible that some assets will be moved between episodes and\nbonus_items so don't assume that this can never change.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "episodes": {
                    "description": "Optional. A Season must have at least one episode or bonus item in it. So at least\none of the two fields will have at least one item. The order of items in\nthe list is predefined and should be preserved in presentation and\nlistings.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "sequenceNumber": {
                    "description": "Required. This field dictates the order that the asset should be sorted when listed\nwith its siblings. It is not always a number (\"1a\", \"1b\").\n\nWhen using this field, client should always use a collator with numeric\ncollation for proper sorting (go/sorting).",
                    "type": "string"
                },
                "showId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. A season must be a part of a show."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_ShowHierarchy": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_ShowHierarchy",
            "properties": {
                "seasons": {
                    "description": "Required. A Show must have at least one season in it. The order of items in the\nlist is predefined and should be preserved in presentation and listings.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_ViewerRating_PlayStoreUserRating": {
            "description": "Next id: 9",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_ViewerRating_PlayStoreUserRating",
            "properties": {
                "count": {
                    "description": "Required. If there are no ratings, there can be no score.",
                    "format": "uint64",
                    "type": "string"
                },
                "score": {
                    "description": "Required.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_ViewerRating_RecommendationRating": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_ViewerRating_RecommendationRating",
            "properties": {
                "count": {
                    "description": "Required.",
                    "format": "uint64",
                    "type": "string"
                },
                "recommendation": {
                    "description": "Required. Besides the total thumbs up/down counts, some systems also include a\noverall decision whether a movie is recommended or not, such as the\nrotten tomato.",
                    "enum": [
                        "RECOMMENDATION_UNSPECIFIED",
                        "RECOMMENDED",
                        "NOT_RECOMMENDED",
                        "RT_FRESH",
                        "RT_ROTTEN",
                        "RT_CERTIFIED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Generic positive feedback.",
                        "Generic negative feedback.",
                        "A fresh tomato icon, indicates a positive review.",
                        "A rotten tomato icon, indicates a negative review.",
                        "A rotten tomato icon, indicates a certified fresh review."
                    ],
                    "type": "string"
                },
                "score": {
                    "description": "Required.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata_VoucherDetails_PlayCampaign": {
            "description": "Stores voucher specific data. Represents a subset of\nfinsky::p3::PlayCampaign.\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata_VoucherDetails_PlayCampaign",
            "properties": {
                "allowedTypes": {
                    "description": "Required. Defines the types of assets to which a current voucher potentially can\nbe applied. If not set, this voucher isn't applicable to any Play\nMovies&TV titles. It *doesn't* guaranty that voucher can be applied to\nany item with listed types. To check if voucher can be applied to a\nspecific title, use FindVouchers api.",
                    "enumDescriptions": [
                        "",
                        "A stand-alone feature video.",
                        "A content bundle (multiple items together).",
                        "A container of seasons.",
                        "A container of episodes.",
                        "A stand-alone TV episode video.",
                        "A stand-alone Android Application.",
                        "A container of songs.",
                        "A stand-alone song.",
                        "A voucher.",
                        "A video content distributor.",
                        "A movie/tv related person.",
                        "A document representing a Play Story.",
                        "See the story_cover and story_details fields\nin AssetResource - these are the only fields\nthat will be filled for assets of this type.\nA stand-alone book (\"Ocean\" Play Books corpus).",
                        "A trailer which is a DRM-clear promotional video"
                    ],
                    "items": {
                        "enum": [
                            "TYPE_UNSPECIFIED",
                            "MOVIE",
                            "BUNDLE",
                            "SHOW",
                            "SEASON",
                            "EPISODE",
                            "ANDROID_APP",
                            "ALBUM",
                            "SONG",
                            "VOUCHER",
                            "DISTRIBUTOR",
                            "PERSON",
                            "STORY",
                            "BOOK",
                            "TRAILER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "containerId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__CollectionId",
                    "description": "Required. The id of the collection that holds the assets to which the voucher\nis applicable.\nThis field is deprecated.\nTo get the list of assets to which the voucher is applicable, use\nDiscoveryService.GetRelated method with VOUCHER_APPLICABLE type."
                },
                "discount": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Discount",
                    "description": "Required. Discount provided by the voucher. Can be used to make \"strike\nthrough\" pricing."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__AndroidAppDetails": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__AndroidAppDetails",
            "properties": {
                "description": {
                    "description": "Required.",
                    "type": "string"
                },
                "images": {
                    "description": "Optional.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "packageId": {
                    "description": "Required. The android app package id.",
                    "type": "string"
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__Asset": {
            "description": "Resource for a single asset.\nAn asset is a piece of content a user may own or consume. For example,\nTV shows, seasons, and movies bundles are considered assets, but collections\nare not.\nNext Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__Asset",
            "properties": {
                "aliases": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__AssetIdAliases",
                    "description": "Optional. Alternative identifier(s) of an asset."
                },
                "annotations": {
                    "description": "Optional. Asset annotations. These are non-personalized annotations that apply to the\nasset regardless of a user or non-existence of a user.\nAnnotations that are user-related or require any kind of personalization\nwill not be here, and will only be in the IncludedAsset structure of the\nfeed or search results, instead.\n\nNote that the annotations here will also appear in the IncludedAsset\nstructure of the feed/search results.\n\nAsset annotations may change relatively often (for example, for a show\navailability annotations will change as new episodes are being released).",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Annotation"
                    },
                    "type": "array"
                },
                "availability": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Availability",
                    "description": "Optional. Information about the offers and/or watch actions for an asset.\nExpect that this data expires quickly, not because the data changes\nfrequently but because offers are used in purchases and must be current\nlest the user experiences a purchase failure."
                },
                "content": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__ContentMetadata",
                    "description": "Optional. Metadata about the underlying content of an asset, such as\nthe language of audio streams and captions, the resolution of\navailable video streams, credit start time, etc. This will include\nany metadata about actual content streams such as audio/video/captions.\nIt is expected that as the content is initially ingested and QCed, this\nwill change semi-frequently, but eventually it should should stabilize."
                },
                "hierarchy": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__Hierarchy",
                    "description": "Optional. Lists the hierarchy of IDs directly related to this asset and\nthe nature of that relationship: e.g. trailers, bundles, etc.\nExpect that this data expires quickly, not because the data changes\nfrequently but because users are sensitive to additions to ongoing seasons\nas part of Next-Day TV."
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "presentation": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__Presentation",
                    "description": "Optional. Descriptive metadata about an asset, which mostly pertains to how the asset\nis to be rendered.\nIt is expected that this metadata will only ever rarely change and there\nis no critical need to respond to such changes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__AssetIdAliases": {
            "description": "Alternative identifiers of an asset. Please note that they do NOT map 1:1 to\nAssetId. For example multiple assets with different AssetIds can have the\nsame MID or EIDR.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__AssetIdAliases",
            "properties": {
                "eidrId": {
                    "description": "Optional. The EIDR (Entertainment IDentifier Registry) of an asset.",
                    "type": "string"
                },
                "mid": {
                    "description": "Optional. Knowledge Graph ID.\nCommonly referred to as Machine ID or \"mid\". See go/ke-bg.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__AssetRequestParameters": {
            "description": "Next Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__AssetRequestParameters",
            "properties": {
                "assetMask": {
                    "description": "Optional. If not set, all fields in the Asset proto will be returned. When set, only\nthe Asset proto fields identified in the mask will be returned.\nSee the FieldMask proto for more details on how to use it.",
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "ids": {
                    "description": "Required. There should be at least one ID in the request.\nField is deprecated. request_ids should be used instead.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "includeChildren": {
                    "description": "Optional. Whether the request should be expanded to return direct children assets,\ni.e. this does not recursively expand to include indirect children.",
                    "type": "boolean"
                },
                "includeGrandparents": {
                    "description": "Optional. Whether the request should be expanded to return both assets that are\ndirect parents and the parents of parents of the requested assets.\nThis only does at most *two* levels of lookups and does not imply any extra\nrecursion in adding parents to the response.",
                    "type": "boolean"
                },
                "includeParents": {
                    "description": "Optional. Whether the request should be expanded to return direct parent assets,\ni.e. this does not recursively expand to include indirect parents.",
                    "type": "boolean"
                },
                "paginationToken": {
                    "description": "Optional. Opaque pagination token used to continue paging through all assets. This\ntoken is returned in the Pagination field of the FetchAssetRepsonse when\nthere are more assets to be returned.\nNote: Because of caching, there is generally no guarantee of consistent\nhierarchy structure between calls to the Metadata service. The same is true\nwith pagination where it is possible that assets may be added or removed\nfrom the response. In these cases, the request will still succeed, just the\nresponse may not be consistent. For example, a season may list itself as\nhaving only one child episode in its hierachy but after paginating, two\nepisodes are returned, both claiming to be children of the prevoiusly\nreturned season. If this happens, reloading the hierarchies of all assets\ninvolved will generally correct the problem as hierarchies are guaranteed\nconsistent within a single response.",
                    "type": "string"
                },
                "requestIds": {
                    "description": "Required. There should be at least one ID in the request.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__RequestedAsset"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__AudioInfo": {
            "description": "Information about an audio track.\nThe structure of the message is modeled after AudioTrackInfo in the file:\n  wireless/android/video/proto/audio_track.proto\nNext id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__AudioInfo",
            "properties": {
                "audioCapabilities": {
                    "description": "Optional.",
                    "enumDescriptions": [
                        "",
                        "5.1 surround sound."
                    ],
                    "items": {
                        "enum": [
                            "AUDIO_CAPABILITY_UNSPECIFIED",
                            "CHANNELS_5_1"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "language": {
                    "description": "Required. BCP 47 language code of the audio track, such as en, en-US, etc.",
                    "type": "string"
                },
                "languageType": {
                    "description": "Optional.",
                    "enum": [
                        "LANGUAGE_TYPE_UNSPECIFIED",
                        "ORIGINAL",
                        "DUBBED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The track is the original track created by the film maker.",
                        "The track is dubbed."
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Optional.",
                    "enum": [
                        "TRACK_TYPE_UNSPECIFIED",
                        "PRIMARY",
                        "COMMENTARY",
                        "PRIMARY_DESCRIPTIVE",
                        "NARRATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Indicates that this is the main track for a movie.",
                        "A track containing the comments/opinions of individuals involved with a\nmovie.",
                        "A primary track that includes audio descriptions for the\nvisually impaired. Also known as the Descriptive Video Service.",
                        "The visually impairment associated service is a complete program mix\ncontaining music, effects, dialogue, and additionally a narrative\ndescription of the picture content. The narration service may be coded\nusing multiple channels. A Descriptive Video Service\u00ae (DVS\u00ae) track is a\nnarration track."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetRequest": {
            "description": "Request for the personalized fields in the Asset metadata.\nNext Id: 3.",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetRequest",
            "properties": {
                "parameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetRequestParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetRequestParameters": {
            "description": "Parameters for the personalization.\nNext Id: 3.",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetRequestParameters",
            "properties": {
                "ids": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "vouchers": {
                    "description": "Optional. This is for the server latency optimization - caller can provide the\nvouchers from the user's library.\nIf not set, the service will fetch vouchers from the user's library and\napply them as part of the personalization.\nVouchers affect the availability of the asset.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetResponse": {
            "description": "Field overrides for the asset metadata as returned by FetchAsset based on\nthe user-specific data.\nNext Id: 3.",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__BatchFetchPersonalizedAssetResponse",
            "properties": {
                "personalizedFields": {
                    "description": "Optional. May be empty if the asset wasn't available.\nIf available, replaces the user-agnostic data in the respective fields as\nreturned by FetchAssets.\nThe order may or may not match the order of the ids in the request. Only\none set of personalized_fields per asset will be provided with all the\nfields that were personalized set in it.\nIf no personalized_fields returned for the requested id, all the fields\nshould remain as returned by FetchAsset.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__PersonalizedField"
                    },
                    "type": "array"
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__BookDetails": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__BookDetails",
            "properties": {
                "description": {
                    "description": "Required.",
                    "type": "string"
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__Broadcaster": {
            "description": "Describes a TV Broadcaster. This is the channel/studio owning the content.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__Broadcaster",
            "properties": {
                "name": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__CaptionInfo": {
            "description": "Information about a caption track.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__CaptionInfo",
            "properties": {
                "languageCode": {
                    "description": "Required. BCP-47 language code.",
                    "type": "string"
                },
                "type": {
                    "description": "Optional. Type of the caption track.",
                    "enum": [
                        "CAPTION_TYPE_UNSPECIFIED",
                        "SUBTITLES",
                        "CLOSED_CAPTION",
                        "OPEN_CAPTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Subtitles. Represent the spoken text transcribed on the screen. Usually\nused for translations. The language_code may not match any of the audio\ntrack languages.\nMay be represented on the details page as an icon or a list of available\ntranslation subtitles.",
                        "Closed captions. Differ from subtitles because they represent any\nmeaningful sound transcribed, not just speech. Usually used for people\nwith hearing difficulties. The language code should match at least\none of the audio track languages.\nMay be represented on the details page by a badge icon like this:\nhttps://commons.wikimedia.org/wiki/File:Closed_captioning_symbol.svg.",
                        "Forced subtitles. This will show up on screen regardless of whether the\nuser has turned subtitles on or not. Usually represent translations of\nforeign/made-up languages that don't match the track language.\nFor this type of captions, the language_code matches the audio track\nlanguage for which it should be used."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__ContentMetadata": {
            "description": "Note that the fields here only indicate what content is available, not what\nthe offers are on them. It is possible to have 4k video streams available but\nno 4k offers.\nNext Id: 11",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__ContentMetadata",
            "properties": {
                "audioInfo": {
                    "description": "Optional. Information about audio tracks. The client app should not assume there is\nalways one audio track. In fact, some older movies will not have this\nfield populated. For the future multiple-audio-track project, there\nwill be more than one audio tracks. The client app should handle zero,\none, and many audio tracks properly.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__AudioInfo"
                    },
                    "type": "array"
                },
                "captions": {
                    "description": "Optional. List of all of the open and closed caption track languages available.\nThere may be different badges for the same language, with different types.\nNot all assets have captions, such as trailers.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__CaptionInfo"
                    },
                    "type": "array"
                },
                "contentEnd": {
                    "description": "Optional. The position of when the content of the video ends.\nThis time may be different from when the end credits has started if there\nis content after the credits.\nIt should be safe to suggest watching the next episode after this time.",
                    "format": "google-duration",
                    "type": "string"
                },
                "endCredits": {
                    "description": "Optional. The position of when the video's end credits start.\nThere may or may not be more video content after the credits have started.\nIt should be safe to assume the user is done watching the video if they\nstop watching after this time.",
                    "format": "google-duration",
                    "type": "string"
                },
                "hasInfoCards": {
                    "description": "Optional. Whether the Eastwood pipeline has processed this asset, generating\ntime-coded face detection in the form of Info Cards.",
                    "type": "boolean"
                },
                "maxResolution": {
                    "description": "Optional. The maximum resolution supported by the video for this asset.\nAssumes that all lower resolutions are available.\nThis may not be set for assets that don't have a video delivered yet.",
                    "enum": [
                        "RESOLUTION_UNSPECIFIED",
                        "RES_240P",
                        "RES_360P",
                        "RES_480P",
                        "RES_720P",
                        "RES_1080P",
                        "RES_2160P"
                    ],
                    "enumDescriptions": [
                        "",
                        "YouTube's lowest resolution found in some trailers for Singleton.",
                        "",
                        "Standard Definition: The highest resolution of SD offers.",
                        "High Definition: The lowest resolution of HD offers.",
                        "Full High Definition: The highest resolution of HD offers.",
                        "Ultra High Definition: requires an UHD offer."
                    ],
                    "type": "string"
                },
                "moviesAnywhereEligible": {
                    "description": "Optional. If the movie can be shared across services using the Movies Anywhere\nmembership (moviesanywhere.com).",
                    "type": "boolean"
                },
                "videoCapabilities": {
                    "description": "Optional. All special attributes of available video streams like being 3D, HDR, etc.",
                    "enumDescriptions": [
                        "",
                        "Standard non-3D video.",
                        "There are 3D video streams available.",
                        "There are HDR streams available with PQ transfer function.",
                        "There are HDR 10 streams available.",
                        "There are Dolby Vision HDR streams available.",
                        "Immersive content (e.g.: IMAX).",
                        "VR mode is explicitly not allowed for this item.\nShould not be visible in any interface or interaction in VR mode."
                    ],
                    "items": {
                        "enum": [
                            "VIDEO_CAPABILITY_UNSPECIFIED",
                            "VIDEO_2D",
                            "VIDEO_3D",
                            "HDR_PQ",
                            "HDR_10",
                            "HDR_DOLBY_VISION",
                            "IMMERSIVE",
                            "VR_DISALLOWED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "videoLength": {
                    "description": "Optional. An approximate duration of the asset, accurate to within a few seconds.\nDifferent video representations will actually have different durations up\nto a few seconds so this value is not to be trusted for frame-accurate\npurposes. Note: This field may be missing, such as in cases where there is\nno proper underlying video (i.e. a bundle), a preorder hasn't been ingested\nyet, or rarely because of historical bugs in the ingestion pipeline.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__Credit": {
            "description": "A movie or TV show credit line.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__Credit",
            "properties": {
                "name": {
                    "description": "Required. Name of the person/entity: \"Industrial Light & Magic\", or\n\"Anthony Hopkins\"",
                    "type": "string"
                },
                "role": {
                    "description": "Required. Role of the person/entity.",
                    "enum": [
                        "ROLE_UNSPECIFIED",
                        "ACTOR",
                        "DIRECTOR",
                        "PRODUCER",
                        "WRITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__DistributorDetails": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__DistributorDetails",
            "properties": {
                "description": {
                    "description": "Required.",
                    "type": "string"
                },
                "distributorInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_DistributorDetails_DistributorInfo",
                    "description": "Required."
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__EpisodeDetails": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__EpisodeDetails",
            "properties": {
                "details": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__TvSharedDetails",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__FetchAssetRequest": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__FetchAssetRequest",
            "properties": {
                "parameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__AssetRequestParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__FetchAssetResponse": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__FetchAssetResponse",
            "properties": {
                "assets": {
                    "description": "Optional. May be empty if none of the assets were available.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__Asset"
                    },
                    "type": "array"
                },
                "errors": {
                    "description": "Optional. There is an error for each asset that failed to be fetched.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_FetchAssetResponse_Error"
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Pagination",
                    "description": "Optional. Used to paginate through the list of assets."
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__Hierarchy": {
            "description": "Hierarchies exist for certain types of content:\n\nTV content:     TV show is a parent of multiple seasons, each of which is a\n                parent of multiple episodes. An episode can belong to only\n                one season, a season can belong to only one show.\n                A TV Season can include bonus episodes.\nMovies content: A movie can belong to a set of movies sold together as a\n                single item (bundle). A single movie can belong to multiple\n                different bundles, and a single bundle can include multiple\n                different movies.\n                A movie can have multiple trailers. A single trailer can\n                belong to multiple movies.\n                A movie or a bundle can have multiple bonus items. A bonus\n                item can belong to multiple movies/bundles.\n\nNote: Assets representing trailers or movie bonus items will not have\nhierarchy available for them. (i.e.: we can't trace a movie from its trailer,\nsince it is a many-to-many relationship and we lack the reverse mapping).\nNext Id: 6",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__Hierarchy",
            "properties": {
                "bundleHierarchy": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_BundleHierarchy"
                },
                "episodeHierarchy": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_EpisodeHierarchy"
                },
                "movieHierarchy": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_MovieHierarchy"
                },
                "seasonHierarchy": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_SeasonHierarchy"
                },
                "showHierarchy": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_Hierarchy_ShowHierarchy"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__MovieDetails": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__MovieDetails",
            "properties": {
                "assetVersion": {
                    "description": "Required.",
                    "enum": [
                        "ASSET_VERSION_UNSPECIFIED",
                        "CANONICAL_VERSION",
                        "NON_CANONICAL_VERSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "credits": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__Credit"
                    },
                    "type": "array"
                },
                "sharedDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__MovieSharedDetails",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__MovieSharedDetails": {
            "description": "Describes shared attributes for all movie content\nNext Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__MovieSharedDetails",
            "properties": {
                "categories": {
                    "description": "Optional. The Category id this asset belongs to. One asset can belong to\nmultiple categories. The first category is the primary category.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__CategoryId"
                    },
                    "type": "array"
                },
                "contentRatings": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__ContentRating"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Required. The description (\"snippet\") of the content.",
                    "type": "string"
                },
                "images": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "originalRelease": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Date",
                    "description": "Optional. When the asset was originally released for broad audiences. Typically, this\nis the first time a movie was shown in theaters."
                },
                "title": {
                    "description": "Required. Movies must always have title.",
                    "type": "string"
                },
                "viewerRatings": {
                    "description": "Optional. Some assets just don't have any ratings.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__ViewerRating"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__MoviesBundleDetails": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__MoviesBundleDetails",
            "properties": {
                "sharedDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__MovieSharedDetails",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__MusicAlbumDetails": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__MusicAlbumDetails",
            "properties": {
                "description": {
                    "description": "Required.",
                    "type": "string"
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__MusicSongDetails": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__MusicSongDetails",
            "properties": {
                "description": {
                    "description": "Required.",
                    "type": "string"
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__PersonalizedField": {
            "description": "Next Id: 3.",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__PersonalizedField",
            "properties": {
                "availability": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Availability",
                    "description": "Optional. If set, replaces the user-agnostic data in the availability field as\nreturned by FetchAssets. Prices and offers may be affected by vouchers or\nexisting purchases for the user."
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__Presentation": {
            "description": "Next Id: 15",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__Presentation",
            "properties": {
                "androidApp": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__AndroidAppDetails",
                    "description": "Primetime types."
                },
                "book": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__BookDetails"
                },
                "bundle": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__MoviesBundleDetails"
                },
                "distributor": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__DistributorDetails"
                },
                "episode": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__EpisodeDetails"
                },
                "expiration": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Expiration",
                    "description": "Optional. Expiration of the information in this message."
                },
                "movie": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__MovieDetails",
                    "description": "Movie types."
                },
                "musicAlbum": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__MusicAlbumDetails"
                },
                "musicSong": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__MusicSongDetails",
                    "description": "Other types."
                },
                "season": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__SeasonDetails"
                },
                "show": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__ShowDetails",
                    "description": "TV types."
                },
                "voucher": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__VoucherDetails",
                    "description": "Commerce types."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__RequestedAsset": {
            "description": "This message describes a single ID in one of the supported namespaces.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__RequestedAsset",
            "properties": {
                "eidrId": {
                    "description": "The EIDR (Entertainment IDentifier Registry) of an asset.",
                    "type": "string"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Asset ID."
                },
                "mid": {
                    "description": "Knowledge Graph ID.\nCommonly referred to as Machine ID or \"mid\". See go/ke-bg.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__SeasonDetails": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__SeasonDetails",
            "properties": {
                "title": {
                    "description": "Required. Seasons must have a title to display, even if it is generated from its\nseason sequence number.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__ShowDetails": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__ShowDetails",
            "properties": {
                "details": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__TvSharedDetails",
                    "description": "Required."
                },
                "viewerRatings": {
                    "description": "Optional.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__ViewerRating"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__TvSharedDetails": {
            "description": "Describes shared attributes for all TV content.\nNext Id: 10",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__TvSharedDetails",
            "properties": {
                "assetVersion": {
                    "description": "Required.",
                    "enum": [
                        "ASSET_VERSION_UNSPECIFIED",
                        "CANONICAL_VERSION",
                        "NON_CANONICAL_VERSION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "broadcasters": {
                    "description": "Required for Show.\nBroadcaster of TV content.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__Broadcaster"
                    },
                    "type": "array"
                },
                "categories": {
                    "description": "Required for Show.\nThe Category id this asset belongs to. One asset can belong to\nmultiple categories. The first category is the primary category.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__CategoryId"
                    },
                    "type": "array"
                },
                "contentRatings": {
                    "description": "Required for Show.\nContent rating information.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__ContentRating"
                    },
                    "type": "array"
                },
                "credits": {
                    "description": "Optional. Some assets (like episodes) may be missing credits.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata__Credit"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Required. A snippet or description of the content.",
                    "type": "string"
                },
                "images": {
                    "description": "Required for Show.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "originalRelease": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Date",
                    "description": "Required. When the asset was originally released for broad audiences. Typically, this\nis the first time an episode first aired on TV anywhere."
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__ViewerRating": {
            "description": "Viewer rating information. Some fields are modeled after AggregateRating,\nwhich is defined in: wireless/android/finsky/proto/rating.proto\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__ViewerRating",
            "properties": {
                "playUserRating": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_ViewerRating_PlayStoreUserRating"
                },
                "recommendation": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_ViewerRating_RecommendationRating"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaMetadata__VoucherDetails": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaMetadata__VoucherDetails",
            "properties": {
                "description": {
                    "description": "Required.",
                    "type": "string"
                },
                "playCampaign": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaMetadata_VoucherDetails_PlayCampaign",
                    "description": "Required. Stores voucher specific data."
                },
                "title": {
                    "description": "Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_AssetsRequestParameters_Timeframe": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_AssetsRequestParameters_Timeframe",
            "properties": {
                "endTime": {
                    "description": "Optional. If not set then defaults to now.\nIncluded assets must have timestamp less than or equal to end_time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "startTime": {
                    "description": "Optional. If not set then ignored.\nIncluded assets must have timestamp greater than or equal to start_time.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_AccountLinksRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_AccountLinksRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_ConfigSettingsRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_ConfigSettingsRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_CountryRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_CountryRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_DistributorSelectionRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_DistributorSelectionRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_ExperimentsRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_ExperimentsRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_FamilyRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_FamilyRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_SentimentsRequest": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_SentimentsRequest",
            "properties": {
                "assetsRequestParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsRequestParameters",
                    "description": "Optional."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_UnicornRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_UnicornRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_UserSettingsRequest": {
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_UserSettingsRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_WatchEventsRequest": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_WatchEventsRequest",
            "properties": {
                "assetsRequestParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsRequestParameters",
                    "description": "Optional."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_WatchlistRequest": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_WatchlistRequest",
            "properties": {
                "assetsRequestParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsRequestParameters",
                    "description": "Optional."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchResponseData_Error": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchResponseData_Error",
            "properties": {
                "status": {
                    "description": "Required. Canonical error status.",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Required. The type of error which specifies how the error should be treated.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "FATAL",
                        "RETRY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Fatal error. The request should not be retried as is, e.g. due to an\ninvalid argument error.",
                        "Retry error. The request may be retried with exponential backoff, e.g.\ndue to a deadline exceeded error."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__AccountLink": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__AccountLink",
            "properties": {
                "consentDialogFrequency": {
                    "description": "Optional. How often should we show the consent dialog to the user.",
                    "format": "google-duration",
                    "type": "string"
                },
                "linkReconsentTime": {
                    "description": "Optional. In the PM app we show a consent dialog to remind the user that they\nare linked. We show this dialog once a day starting 20 months\nfrom the last consent time. At 24 months we unlink the user if they\nhaven't consented. See: http://go/disney-dma.\n\nTimestamp of the user's next reconsent. If this timestamp is in the past\nwe should present the reconsent dialog to the user at the frequency\nindicated in consent_dialog_frequency.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "linkState": {
                    "description": "Required. Whether this account is linked or not.",
                    "enum": [
                        "LINK_STATE_UNSPECIFIED",
                        "LINKED",
                        "NOT_LINKED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "partnerId": {
                    "description": "Required. The partner they are linked to.",
                    "enum": [
                        "PARTNER_ID_UNSPECIFIED",
                        "KC_MA"
                    ],
                    "enumDescriptions": [
                        "",
                        "Movies Anywhere"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__AccountLinks": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__AccountLinks",
            "properties": {
                "accountLinks": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AccountLink"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsRequestParameters": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsRequestParameters",
            "properties": {
                "filter": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Filter",
                    "description": "Optional. Filter by ids, types. If categories or content ratings are\nset then an error is returned."
                },
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional. pagination_parameters.max_collections will be ignored for\nthis request, pagination_parameters.max_assets has a valid range: [1-1000]\nand defaults to 500 if not set."
                },
                "snapshotToken": {
                    "description": "Optional. If nothing was changed since the snapshot then no assets are returned.\nIf assets were added to the list since the snapshot but weren't\nremoved then only the added assets are returned.\nIf assets were removed from the list since the snapshot then all\nassets are returned.",
                    "type": "string"
                },
                "timeframe": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_AssetsRequestParameters_Timeframe",
                    "description": "Optional. If set then only the assets whose footprints timestamps\nfall within the timeframe will be returned."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsResponseData": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsResponseData",
            "properties": {
                "collections": {
                    "description": "Optional. The collections containing the assets.\nNot set if status is UNCHANGED.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Collection"
                    },
                    "type": "array"
                },
                "snapshotToken": {
                    "description": "Required.",
                    "type": "string"
                },
                "status": {
                    "description": "Required.",
                    "enum": [
                        "STATUS_UNSPECIFIED",
                        "UNCHANGED",
                        "ALL_FETCHED",
                        "DELTA_FETCHED"
                    ],
                    "enumDescriptions": [
                        "",
                        "If snapshot_token was passed and the response is unchanged since when\nthe snapshot_token was generated.\nIn this case no assets are returned.",
                        "All assets were fetched. There are two cases when this would happen:\n1. If no snapshot_token was passed.\n2. If snapshot_token was passed, and assets were removed from the\n   list changed since the snapshot.\nIn this case all the assets are returned (possibly with pagination).",
                        "If snapshot_token was passed, and assets were added to the list\nbut not removed since the snapshot.\nIn this case only the added assets are returned.\nThis will not be supported at first and will be implemented at a\nlater stage."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__ConfigSettings": {
            "description": "Config settings provided based on various parameters given by the client.\nSee go/avi-user-config.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__ConfigSettings",
            "properties": {
                "settings": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of the group config settings key-value pairs.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__DistributorSelection": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__DistributorSelection",
            "properties": {
                "entitlements": {
                    "description": "Optional. Primetime distributor entitlements. These are all the distributors the\nusers selected plus, if the users answered \"YES\" to the cable question,\nadditional distributors that are considered included in the cable\nsubscription. This is a superset of |selection.user_selection|.\nThe entitlements should be of type DISTRIBUTOR.\n\nThis field is read only.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "payTvState": {
                    "description": "Required. User answer for question: \"Do you have Cable or Satellite TV?\".",
                    "enum": [
                        "PAY_TV_STATE_UNSPECIFIED",
                        "PAY_TV_STATE_NO",
                        "PAY_TV_STATE_YES"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "selection": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__Selection",
                    "description": "Required. Contains Primetime distributors selected by user explicitly.\nThe user_selections should be of type DISTRIBUTOR. If it's not set\nto DISTRIBUTOR in an Update call, it will be rejected."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__Family": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__Family",
            "properties": {
                "familyState": {
                    "description": "Required. Current state of membership.",
                    "enum": [
                        "FAMILY_STATE_UNSPECIFIED",
                        "NOT_IN_FAMILY",
                        "NOT_OPTED_IN",
                        "PAUSED",
                        "ACTIVE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Not a member of any family.",
                        "Invited to a family, but hasn't completed the joining flow.",
                        "Family membership paused.\nUsually, but not necessarily because head of household didn't update the\nfamily instrument.",
                        "Normal membership."
                    ],
                    "type": "string"
                },
                "inactiveSince": {
                    "description": "Optional. If the state is PAUSED, this timestamp is the timestamp of\nwhen the PAUSED state started.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "membershipRole": {
                    "description": "Optional, but required if family_state != NOT_IN_FAMILY.\nType of membership.",
                    "enum": [
                        "MEMBERSHIP_ROLE_UNSPECIFIED",
                        "MANAGER",
                        "MEMBER"
                    ],
                    "enumDescriptions": [
                        "Not a member of any family.",
                        "Family manager (head of household).",
                        "Family member (not head of household)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchRequest": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchRequest",
            "properties": {
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "requestData": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchRequestData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchRequestData": {
            "description": "Next Id: 12",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchRequestData",
            "properties": {
                "accountLinks": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_AccountLinksRequest",
                    "description": "Fetch the account links (e.g. Movies Anywhere)."
                },
                "configSettings": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_ConfigSettingsRequest",
                    "description": "~~~ Read-only types ~~~\nFetch the global config settings key-value pairs."
                },
                "country": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_CountryRequest",
                    "description": "Fetch the user's country which should be set in the RequestContext\nof any future requests."
                },
                "distributorSelection": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_DistributorSelectionRequest",
                    "description": "Fetch the distributor selection (e.g. Primetime)."
                },
                "experiments": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_ExperimentsRequest",
                    "description": "Fetch the relevant experiment IDs for this user."
                },
                "family": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_FamilyRequest",
                    "description": "Fetch the family info."
                },
                "sentiments": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_SentimentsRequest",
                    "description": "~~~ Asset collection types ~~~\nFetch the user's sentiments (thumbs up / thumbs down)."
                },
                "unicorn": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_UnicornRequest",
                    "description": "Fetch the unicorn status."
                },
                "userSettings": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_UserSettingsRequest",
                    "description": "Fetch the configurable user settings such as notification settings."
                },
                "watchEvents": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_WatchEventsRequest",
                    "description": "Fetch the user's watch events (playbacks, watch actions)."
                },
                "watchlist": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchRequestData_WatchlistRequest",
                    "description": "Fetch the user's watchlist."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchResponse": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                },
                "responseData": {
                    "description": "Required.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchResponseData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchResponseData": {
            "description": "Next Id: 15",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__FetchResponseData",
            "properties": {
                "accountLinks": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AccountLinks",
                    "description": "Account links (e.g. Movies Anywhere)."
                },
                "configSettings": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__ConfigSettings",
                    "description": "Global config settings key-value pairs."
                },
                "country": {
                    "description": "The user's country which should be set in the RequestContext\nof any future requests.",
                    "type": "string"
                },
                "distributorSelection": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__DistributorSelection",
                    "description": "Distributor selection (e.g. Primetime)."
                },
                "error": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata_FetchResponseData_Error",
                    "description": "Filled if we failed to fetch the response data for the given request\ndata."
                },
                "experiments": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Experiments",
                    "description": "The relevant experiment IDs for this user."
                },
                "experimentsData": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ExperimentsData",
                    "description": "The relevant experiment data for this user."
                },
                "expiration": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Expiration",
                    "description": "Required, except if data oneof is error.\nThe expiration of the data at which point the client should refresh it."
                },
                "family": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__Family",
                    "description": "Family info."
                },
                "sentiments": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsResponseData",
                    "description": "The user's sentiments (thumbs up / thumbs down)."
                },
                "unicorn": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__Unicorn",
                    "description": "Unicorn status."
                },
                "userSettings": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__UserSettings",
                    "description": "Configurable user settings such as notification settings."
                },
                "watchEvents": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsResponseData",
                    "description": "The user's watch events (playbacks, watch actions)."
                },
                "watchlist": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AssetsResponseData",
                    "description": "The user's watchlist."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__IncludedSentiment": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__IncludedSentiment",
            "properties": {
                "assetId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "assetTitle": {
                    "description": "Required. The localized title as was shown to the user when sentiment was\nprovided.",
                    "type": "string"
                },
                "sentiment": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Sentiment",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__NotificationSetting": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__NotificationSetting",
            "properties": {
                "optInState": {
                    "description": "Required.",
                    "enum": [
                        "OPT_IN_STATE_UNSPECIFIED",
                        "OPT_IN",
                        "OPT_OUT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Required.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "MY_TV_SHOWS",
                        "MY_WATCHLIST",
                        "RECOMMENDATIONS_AND_OFFERS",
                        "REWARD_EXPIRATION",
                        "RENTAL_EXPIRATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Notify user when a new episode or season from a TV Show that they own\nbecomes available.",
                        "Notify user when content from their watchlist becomes available or drops\nin price.",
                        "Notify user of special offers, or when content that they might be\ninterested in becomes available.",
                        "Notify user when their rewards are about to expire.",
                        "Notify user when their rentals are about to expire."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__Selection": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__Selection",
            "properties": {
                "firstSelectionTime": {
                    "description": "Optional. Read-only - updates by the clients will be ignored. Set by the service\nduring the update operation if not yet set.\nClients can use this field to know when the first ever selection\nwas made for reminders/warm welcome cards/etc.\nShould never be set/reset by the apps.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "lastSelectionTime": {
                    "description": "Required. Read-only - updates by the clients will be ignored. Set by the service\nduring the update operation.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "state": {
                    "description": "Required. Specifies the state of setup flow.",
                    "enum": [
                        "SETUP_STATE_UNSPECIFIED",
                        "COMPLETED",
                        "SKIPPED_BY_USER",
                        "NEVER_STARTED",
                        "SKIPPED_DUE_TO_ERROR"
                    ],
                    "enumDescriptions": [
                        "",
                        "Setup flow was completed by the user and configuration was saved to the\nbackend.",
                        "Setup flow was intentionally skipped by the user.",
                        "Setup flow was never started by the app. This is the value which is sent\nto clients if nothing is available on backend. Requests to save this\nvalue would be rejected with error.",
                        "Setup flow was skipped because there was an error"
                    ],
                    "type": "string"
                },
                "userSelections": {
                    "description": "Optional. Assets selected by user explicitly.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__SentimentsDetails": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__SentimentsDetails",
            "properties": {
                "includedSentiments": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__IncludedSentiment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__Unicorn": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__Unicorn",
            "properties": {
                "ratingFilters": {
                    "description": "Optional. A unicorn user's content filter setting set by a parent.\nOnly present if this is a unicorn account and filters are set.\nSince the user's country is fixed, return only two filters (movie and TV).\ne.g. for a US user \"MPAA_PG_13\" and \"TVPG_PG\".",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__ContentRatingFilter"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Required. Whether the account is a Unicorn account (supervised account for a child)\nor not.",
                    "enum": [
                        "STATUS_UNSPECIFIED",
                        "IS_UNICORN",
                        "IS_NOT_UNICORN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__UpdateRequest": {
            "description": "Next Id: 8",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__UpdateRequest",
            "properties": {
                "accountLink": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__AccountLink",
                    "description": "Account links (e.g. Movies Anywhere)."
                },
                "distributorSelection": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__DistributorSelection",
                    "description": "Distributor selection (e.g. Primetime)."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required."
                },
                "sentimentsDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__SentimentsDetails",
                    "description": "The user's sentiments (thumbs up / thumbs down).\nThis is a batch update, so if any one update fails then the entire\nrequest will fail."
                },
                "userSettings": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__UserSettings",
                    "description": "Configurable user settings such as notification settings."
                },
                "watchEventDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__WatchEventDetails",
                    "description": "A user's watch event (playback, watch action)."
                },
                "watchlist": {
                    "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__WatchlistDetails",
                    "description": "The user's watchlist.\nThis is a batch update, so if any one update fails then the entire\nrequest will fail."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__UpdateResponse": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__UpdateResponse",
            "properties": {
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__UserSettings": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__UserSettings",
            "properties": {
                "notificationSettings": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfeV1betaUserdata__NotificationSetting"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__WatchEventDetails": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__WatchEventDetails",
            "properties": {
                "assetId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "startTime": {
                    "description": "Required. The time at which the user started the last playback.\nThis is needed because subsequent position updates are keyed by the\nasset id and the start timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "updateTime": {
                    "description": "Required. The time of the watch event.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "watchEvent": {
                    "$ref": "GoogleInternalPlayMoviesDfe__WatchEvent",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfeV1betaUserdata__WatchlistDetails": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfeV1betaUserdata__WatchlistDetails",
            "properties": {
                "action": {
                    "description": "Required. Specifies whether the assets were added or removed.",
                    "enum": [
                        "ACTION_UNSPECIFIED",
                        "ADD",
                        "REMOVE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "assetIds": {
                    "description": "Required. Lists the assets which have been added to or removed from the watchlist.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_AcquisitionInfo_PriceBasedAnnotation": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfe_AcquisitionInfo_PriceBasedAnnotation",
            "properties": {
                "currencySymbol": {
                    "description": "If this string is not empty, clients should use it as a symbol to show\nin annotation, and ignore the representative_offer field.\nUse this field if priced_annotation_type == PAID_SYMBOL.",
                    "type": "string"
                },
                "pricedType": {
                    "description": "If priced_type set to PRICE_UNKNOWN - ignore the rest of the fields.",
                    "enum": [
                        "PRICE_UNSPECIFIED",
                        "PRICE",
                        "PAID_SYMBOL",
                        "PAID_ICON",
                        "LOCK_ICON",
                        "NOT_AVAILABLE_ICON"
                    ],
                    "enumDescriptions": [
                        "",
                        "Show the full offer annotation (\"Rent from $2.99\").",
                        "Just show a symbol to indicate this item can be purchased, e.g.: \"$\".",
                        "Show an icon to indicate this item can be purchased. Uses a client\nsupplied icon instead of the currency_symbol field.",
                        "Show an icon indicating this content is not easily available.",
                        "Show an icon indicating this content cannot be accessed."
                    ],
                    "type": "string"
                },
                "representativeOffer": {
                    "description": "Offers available for an episode or season of a show. Used to display\nthe price annotation.\nThere will be exactly one offer per quality/type. I.e. VOD/EST and\nHD/UHD/SD combinations. If more than one offer with the same\ncombination appears, the clients should only use the first one. E.g.:\nif there's {UHD/EST $5.00, UHD/EST $7.00} clients will present the\n$5.00 price. Use this field if priced_annotation_type is PRICE.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Offer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_AcquisitionInfo_TextBasedAnnotation": {
            "description": "Next id: 3",
            "id": "GoogleInternalPlayMoviesDfe_AcquisitionInfo_TextBasedAnnotation",
            "properties": {
                "accessibilityText": {
                    "description": "The localized text to use for screen readers for this annotation.",
                    "type": "string"
                },
                "displayText": {
                    "description": "The localized text to display for this annotation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_AvailabilityInfo_AvailabilityDetails": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfe_AvailabilityInfo_AvailabilityDetails",
            "properties": {
                "availabilityType": {
                    "description": "Required.",
                    "enum": [
                        "AVAILABILITY_TYPE_UNSPECIFIED",
                        "TOTAL_EPISODES"
                    ],
                    "enumDescriptions": [
                        "",
                        "Total number of episodes available in the distributor's store."
                    ],
                    "type": "string"
                },
                "episodesAvailable": {
                    "description": "Optional. Only set for availability_type = TOTAL_EPISODES.\nNumber of episodes available to the user under the specified\navailability type.",
                    "format": "int32",
                    "type": "integer"
                },
                "watchRestriction": {
                    "description": "Required. Watch restriction to access distributor's content.",
                    "enum": [
                        "WATCH_RESTRICTION_UNSPECIFIED",
                        "SUBSCRIPTION_REQUIRED",
                        "FREE",
                        "TRANSACTIONAL"
                    ],
                    "enumDescriptions": [
                        "Invalid value. Ignore this watch action.",
                        "Can only be invoked if the user has an appropriate subscription in the\nlibrary. If the app doesn't support checking for Primetime subscriptions\nin the library - this watch action should be skipped.",
                        "No restrictions.",
                        "Transactional. Each item should be rented/purchased in a specific\ntransaction (as opposed to a blanket subscription or completely free)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedAsset": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedAsset",
            "properties": {
                "annotations": {
                    "description": "Optional. Annotations for the asset. The same asset may appear more than once in\nthe same cluster with different annotations in each occurrence. These are\n\"on-the-fly\" annotations generated during the request handling. The same\nasset returned in a different response (or even the same response, but\ndifferent position) may have different annotations generated in this\nfield.\nFor \"static\" annotations see the DynamicDetails proto of the Asset.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Annotation"
                    },
                    "type": "array"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required."
                },
                "loggingToken": {
                    "description": "Optional. This is a serialized ServerCookie message\n(google3/wireless/android/video/proto/server_cookie.proto).\nThis value should be copied as is into the UiElement.server_cookie_str\nfield (or, if supported, decoded as websafe BASE64 and copied into the\nUiElement.server_cookie) of the logging proto when any logging pertaining\nthis item is made.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedAssets": {
            "description": "A wrapper for repeated list of included assets, since \"repeated\" cannot\nbe used directly within a \"oneof\".\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedAssets",
            "properties": {
                "assets": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedAsset"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedCollection": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedCollection",
            "properties": {
                "annotations": {
                    "description": "Optional. Annotations for the collection.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Annotation"
                    },
                    "type": "array"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__CollectionId",
                    "description": "Required."
                },
                "loggingToken": {
                    "description": "Optional. This is a serialized ServerCookie message\n(google3/wireless/android/video/proto/server_cookie.proto).\nThis value should be copied as is into the UiElement.server_cookie_str\nfield (or, if supported, decoded as websafe BASE64 and copied into the\nUiElement.server_cookie) of the logging proto when any logging pertaining\nthis item is made.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedCollections": {
            "description": "A wrapper for repeated list of included collections, since \"repeated\"\ncannot be used directly within a \"oneof\".\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedCollections",
            "properties": {
                "collections": {
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedCollection"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionPresentationDetailsPageSelection_DistributorDetails": {
            "description": "Details about a specific distributor.",
            "id": "GoogleInternalPlayMoviesDfe_CollectionPresentationDetailsPageSelection_DistributorDetails",
            "properties": {
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "[Required]\nThe distributor ID, e.g. Netflix."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionPresentationImpressionCap_ImpressionCount": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfe_CollectionPresentationImpressionCap_ImpressionCount",
            "properties": {
                "count": {
                    "description": "Required.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionPresentationImpressionCap_NotCapped": {
            "id": "GoogleInternalPlayMoviesDfe_CollectionPresentationImpressionCap_NotCapped",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionPresentation_DetailsPageSelection": {
            "description": "Data used to indicate details page selections. Example: selecting the\nlatest vs earliest season of a show, or specifying which Primetime\ndistributor to select.\nNext id: 4",
            "id": "GoogleInternalPlayMoviesDfe_CollectionPresentation_DetailsPageSelection",
            "properties": {
                "distributorSelectionType": {
                    "description": "Indicates which logic to use when choosing the distributor to be\nselected when landing on a Primetime details page.",
                    "enum": [
                        "DISTRIBUTOR_SELECTION_TYPE_UNSPECIFIED",
                        "GOOGLE_PLAY",
                        "SPECIFIC_DISTRIBUTOR",
                        "ENTITLED_DISTRIBUTOR",
                        "BEST_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Select a specific distributor. It is not guaranteed that the asset will\nhave a watch action for this distributor. If there is no watch action\nfor this distributor, the client may use any logic to determine a\ndifferent ordering. Data in specific_distributor_details indicates\nwhich distributor to select.",
                        "Select any entitled distributor.",
                        "Select best available across all distributors and Google Play"
                    ],
                    "type": "string"
                },
                "seasonSelectionLocation": {
                    "description": "Location of the TV show season to be selected. To be ignored for movie\ndetail pages.",
                    "enum": [
                        "SEASON_SELECTION_LOCATION_UNSPECIFIED",
                        "EARLIEST",
                        "LATEST"
                    ],
                    "enumDescriptions": [
                        "",
                        "Show the first available season on the specified distributor.",
                        "Show the most recent available season on the specified distributor."
                    ],
                    "type": "string"
                },
                "specificDistributorDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe_CollectionPresentationDetailsPageSelection_DistributorDetails",
                    "description": "For SPECIFIC_DISTRIBUTOR distributor selection type, indicates which\ndistributor should be selected. To be ignored for all other distributor\nselection types."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_CollectionPresentation_ImpressionCap": {
            "description": "Message indicating if/how clients should cap the impressions of a\ncollection returned from the server. The collection will be considered\nunique for impression capping purposes by its collection_id.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe_CollectionPresentation_ImpressionCap",
            "properties": {
                "impressionCount": {
                    "$ref": "GoogleInternalPlayMoviesDfe_CollectionPresentationImpressionCap_ImpressionCount",
                    "description": "This collection should be hidden by clients after it's shown specified\ntimes."
                },
                "notCapped": {
                    "$ref": "GoogleInternalPlayMoviesDfe_CollectionPresentationImpressionCap_NotCapped",
                    "description": "Collection shouldn't be capped."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_ContinueWatchingInfo_PlaybackInfo": {
            "description": "Contains details about playing this asset inside Play.\nNext id: 2",
            "id": "GoogleInternalPlayMoviesDfe_ContinueWatchingInfo_PlaybackInfo",
            "properties": {
                "position": {
                    "description": "The position within the video from its beginning, at which the user\nwatched.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_ContinueWatchingInfo_WatchActionInfo": {
            "description": "Contains details about playing this asset inside a 3rd party distributor\napp.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfe_ContinueWatchingInfo_WatchActionInfo",
            "properties": {
                "distributorId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "The id of the 3rd party distributor."
                },
                "open3rdPartyApp": {
                    "description": "Specifies whether a 3rd party app should be used to continue watch.\nIf set to false, then user click on this document should lead to the\ndetails page.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_DeprecationDetails_Action": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfe_DeprecationDetails_Action",
            "properties": {
                "actionUri": {
                    "description": "[Required].\nURI for the action. Can be either web link (http://) or a uri to the play\nstore.",
                    "type": "string"
                },
                "callToAction": {
                    "description": "[Required].\nText for a \"call to action\" button.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_DeprecationDetails_DeprecationMessage": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfe_DeprecationDetails_DeprecationMessage",
            "properties": {
                "translatedText": {
                    "description": "[Required].\nText of expiration message to present to the users instead of the app's\nbuilt in message for this case.",
                    "type": "string"
                },
                "translatedTitle": {
                    "description": "[Required].\nTitle of expiration message to present to the users instead of the app's\nbuilt in title for this case.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_Discount_AbsoluteDiscount": {
            "id": "GoogleInternalPlayMoviesDfe_Discount_AbsoluteDiscount",
            "properties": {
                "discountedPrice": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Money",
                    "description": "Required. The absolute price being offered as if the discount has\nalready been applied. This includes free or a price of zero."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_Discount_RatioDiscount": {
            "id": "GoogleInternalPlayMoviesDfe_Discount_RatioDiscount",
            "properties": {
                "discountRatioMicros": {
                    "description": "Required. The discount as a ratio from the list price.\nExample: 50_000 for 0.050_000 off (5% off).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_Discount_RelativeDiscount": {
            "id": "GoogleInternalPlayMoviesDfe_Discount_RelativeDiscount",
            "properties": {
                "relativeDecrease": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Money",
                    "description": "Required. The original price is decreased by a discount price."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_ExperimentFlags_FlagValue": {
            "description": "Mendel experiment flag types.",
            "id": "GoogleInternalPlayMoviesDfe_ExperimentFlags_FlagValue",
            "properties": {
                "booleanFlag": {
                    "type": "boolean"
                },
                "doubleFlag": {
                    "format": "double",
                    "type": "number"
                },
                "int64Flag": {
                    "format": "int64",
                    "type": "string"
                },
                "protoFlag": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "type": "object"
                },
                "stringFlag": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_Experiments_ExperimentIds": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfe_Experiments_ExperimentIds",
            "properties": {
                "ids": {
                    "description": "Required. List of experiment ids in which the user participates.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_FetchByTokenParameters_RefreshParameters": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe_FetchByTokenParameters_RefreshParameters",
            "properties": {
                "filter": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Filter",
                    "description": "Optional. Sets filters applicable to the request.\nIf set, this will replace the filter from the original request."
                },
                "refreshToken": {
                    "description": "Required. Refresh token is used to restart a new response from the first page.",
                    "type": "string"
                },
                "requestedTags": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestedTags",
                    "description": "Optional. Tag selection.\nIf set, this will replace the requested tags from the original request."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_Image_Dimensions": {
            "description": "Image dimensions.\nIf is_fife is false, width and height must be set.\nIf width and height are not set, aspect_ratio must be set.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfe_Image_Dimensions",
            "properties": {
                "aspectRatio": {
                    "description": "If present, used as a hint to indicate the\naspect ratio of the image. This can be used in various frontends to use\nright images for optimizing tablet, and mobile layouts. Ratios are\nrepresented as width to height.",
                    "enum": [
                        "RATIO_UNSPECIFIED",
                        "RATIO_1X1",
                        "RATIO_2X3",
                        "RATIO_3X2",
                        "RATIO_3X4",
                        "RATIO_4X3",
                        "RATIO_16X9",
                        "RATIO_57X14",
                        "RATIO_1X2"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "isFife": {
                    "description": "Indicates if the URL supports FIFE parameters. go/fife for details.",
                    "type": "boolean"
                },
                "width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_LayoutAttributesCardDetails_CardMetadata": {
            "description": "Represents type-specific metadata for the card.\nThe meaning/interpretation of the information in the metadata can vary\ndepending on the type. See the Type enum for the description of the\nmetadata for each of the types.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe_LayoutAttributesCardDetails_CardMetadata",
            "properties": {
                "token": {
                    "description": "[Required] An opaque token for the client to pass along with the card\ncall to action. Depending on the type of the card, it will be passed in\ndifferent ways.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_LayoutAttributes_CardDetails": {
            "description": "Describes various cards that can be delivered to the clients as part of the\nApiary response. This is used in the VideoCollectionPresentation as a\nsub-type of the cluster layout \"CARD\".\n\nSee go/scrn/TiUV3qg7kMb.png for example of various fields usage in a card\nrendering.\nNext Id: 10",
            "id": "GoogleInternalPlayMoviesDfe_LayoutAttributes_CardDetails",
            "properties": {
                "accessibilityCallToAction": {
                    "description": "Text for a \"call to action\" button to be presented to an accessibility\nreader.",
                    "type": "string"
                },
                "arrowPlacement": {
                    "description": "Required for CARD_TYPE_FEEDBACK. Card \"tail\" arrow placement.\nSee go/scrn/TiUV3qg7kMb.png for example. If not set assume no tail arrow.",
                    "enum": [
                        "ARROW_PLACEMENT_UNSPECIFIED",
                        "ARROW_NONE",
                        "ARROW_BOTTOM",
                        "ARROW_TOP"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "callToAction": {
                    "description": "Required for CARD_TYPE_FEEDBACK, CARD_TYPE_PRIMETIME_SETUP_PROMPT and\nCARD_WARM_WELCOME. Text for a \"call to action\" button:\ngo/scrn/upuDZg2AQsK, go/scrn/TiUV3qg7kMb.png. The presence of\nthis field determines whether a call to action button should be shown.\nClients must implement the action based on the card type, this field\nonly determines the text to show.",
                    "type": "string"
                },
                "cardMetadata": {
                    "$ref": "GoogleInternalPlayMoviesDfe_LayoutAttributesCardDetails_CardMetadata",
                    "description": "Required for CARD_TYPE_FEEDBACK.\nRepresents type-specific metadata for the card. Can vary depending on the\ntype. See the Type enum for the description of the metadata for each of\nthe types below."
                },
                "dismissalType": {
                    "description": "Required. Field to indicate how the card can be dismissed. Example:\ngo/scrn/WFCRNYP6A4b",
                    "enum": [
                        "DISMISSAL_TYPE_UNSPECIFIED",
                        "DISMISSAL_TYPE_CLOSE_BUTTON",
                        "DISMISSAL_TYPE_NON_DISMISSIBLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Sample mock: go/scrn/WFCRNYP6A4b.",
                        ""
                    ],
                    "type": "string"
                },
                "images": {
                    "description": "A list of image specifications. Depending on the card type, this may be a\nlist of images with different aspect ratios and resolutions, from which\nclients should choose the correct image for the device. Or, it may be a\nlist of images with the same type/resolution and multiple can be rendered\non the card. go/scrn/cQubHuRFzct, go/scrn/ykdsB4J7mBL,\ngo/scrn/4keF0RxiATt",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "messageText": {
                    "description": "Optional. Main message/description text. If empty - the card only\nhas the title. See the third example at: go/scrn/TiUV3qg7kMb.png.",
                    "type": "string"
                },
                "title": {
                    "description": "Required. Title/header of the card.",
                    "type": "string"
                },
                "type": {
                    "description": "Required. The type of the card.",
                    "enum": [
                        "CARD_TYPE_UNSPECIFIED",
                        "CARD_TYPE_PERSISTENT_GENERIC",
                        "CARD_TYPE_FEEDBACK",
                        "CARD_TYPE_PRIMETIME_SETUP_PROMPT",
                        "CARD_WARM_WELCOME",
                        "CARD_TYPE_CONFIRMATION",
                        "CARD_MINI_DETAILS_PAGE"
                    ],
                    "enumDescriptions": [
                        "Invalid value, message should be ignored.",
                        "Generic card. Will have no calls for action. Will have no images.\nCannot be dismissed, will appear any time it appears in the feed.\nUse the title/message_text to fill the text, and the presentation_color\nfield for the background color.\n\ncard_metadata field should be ignored.",
                        "Feedback card.\nSee mocks at http://shortn/_tyUqDEkRZO. Call to action must be\nimplemented specifically for this feature.\n\ncard_metadata.token field contains the value for the server-side PSD\ntag (see go/primetime-guide-feedback-client for details). The tag will\nnot have any PII. PSD is \"Product Specific Data\". See go/feedback-gcore\nfor more details.",
                        "Setup prompt card for Primetime.\nSee mock at go/scrn/4keF0RxiATt, For this card type, all images\nreturned can be used. Clients decide how many to render before\ntruncating.\n\ncard_metadata field should be ignored.",
                        "Card is rendered as a welcome (or welcome back) message in Primetime.\nExample of welcome message: go/scrn/06C5E9jbkgm, go/scrn/GQQqt94ootc,\ngo/scrn/GLkxTbqwbGY.\n\ntitle field contains header message: go/scrn/cgAEmiZFEM7.\n\nmessage_text field is required for this type of card.\n\ncall_to_action field is optional. The presence of this field determines\nwhether a call to action button should be shown: go/scrn/upuDZg2AQsK.\n\nThis card can optionally have images provided. For this card type, if\nimages field is not empty the app should select the one image best\nappropriate for the apps' presentation mode (resolution, etc).\n\ncard_metadata field should be ignored.",
                        "Confirmation message card.\nSee mock at go/scrn/UTjPBQ3N8XS. Will have no images. If dismissable,\ncall_to_action field will be filled with content for the dismissal\nbutton.\n\ncard_metadata field should be ignored.",
                        "Mini Details Page card (go/mdc-prd)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_LayoutAttributes_LayoutTemplate": {
            "description": "Defines the template to be used for presentation.\nValues started with STREAM_ imply that the collection is a stream (built of\nother collections) otherwise the collection is built of individual assets.\nIf none set - there's no presentation details for this collection and the\nrest of the message should be ignored.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe_LayoutAttributes_LayoutTemplate",
            "properties": {
                "id": {
                    "description": "If not ID_UNSPECIFIED this is the guidance on how to present the\ncollection.",
                    "enum": [
                        "ID_UNSPECIFIED",
                        "STREAM_DISTRIBUTOR_CONTENT",
                        "STREAM_SVOD_DISTRIBUTOR_CONTENT",
                        "STREAM_PRIMETIME_GUIDE",
                        "STREAM_DETAILS_PAGE",
                        "STREAM_SEARCH",
                        "STREAM_EMBEDDED",
                        "DISTRIBUTOR_CONTENT",
                        "SVOD_DISTRIBUTOR_CONTENT",
                        "CROSS_DISTRIBUTOR_CONTENT",
                        "TAG_BROWSE",
                        "PROMOTIONAL_BANNER",
                        "NO_ANNOTATION",
                        "WITH_ANNOTATION",
                        "SEARCH",
                        "VERTICAL_SEARCH",
                        "PLAY_STORIES",
                        "CONTINUE_WATCHING",
                        "CREDITS",
                        "CARD",
                        "EMBEDDED_STREAM_CONTENT",
                        "EMBEDDED_STREAM_CONTENT_TWO_ROWS",
                        "EMBEDDED_STREAM_CONTENT_WITH_ANNOTATION",
                        "EMBEDDED_STREAM_CONTENT_TWO_ROWS_WITH_ANNOTATION",
                        "STREAM_DISTRIBUTORS_SETUP_LIST",
                        "DISTRIBUTORS_SVOD",
                        "DISTRIBUTORS_TVOD",
                        "DISTRIBUTORS_PREMIUM",
                        "DISTRIBUTORS_ALL_TVOD",
                        "DISTRIBUTORS_ALL_AVOD",
                        "DISTRIBUTORS_ALL_BASIC_CHANNEL",
                        "DISTRIBUTORS_ALL_CABLE_CHANNEL"
                    ],
                    "enumDescriptions": [
                        "",
                        "Collections of content grouped by distributor (e.g. Netflix),\nrendered vertically. The collections in this stream are not expected\nto be paginated. Sample mock: https://goo.gl/wKH4RY",
                        "Collections of content grouped by distributor (e.g. Netflix),\nrendered horizontally. The collections in this stream do support\npagination. Sample mock: go/scrn/TaNrVO1BoCW",
                        "Top-level stream for the Primetime Guide (go/primetime-guide).",
                        "Stream of clusters for movie / TV show details page. See\ngo/scrn/hMXtetbifNN",
                        "Search stream it can have Fireball style tags at the top.\nExample of stream with tags: go/scrn/JpX0Q8fq1Qd, without tags:\ngo/scrn/wxASEdTiy7D",
                        "A stream of clusters that is meant to be embedded within another\nstream. Examples: go/scrn/ORrhJX4e3iv, go/scrn/vehnWQsRvyq,\ngo/scrn/Z3NC8WbBspS.",
                        "A cluster of content from a specific distributor (e.g. Netflix),\nrendered vertically. This collection is not expected to be paginated.\nSample mock: https://goo.gl/dnvL9u",
                        "A cluster of content from a specific distributor (e.g. Netflix),\nrendered horizontally. This collection does support pagination.\nSample mock: go/scrn/TaNrVO1BoCW",
                        "A distributor-agnostic cluster of content. Sample mock:\nhttps://goo.gl/sHVVZm",
                        "A cluster facilitating tag-based browsing (go/primetime-fireball).\nSample mock: https://goo.gl/c9to6N",
                        "A cluster containing promotional content that should be presented as\na banner (must come with image type TYPE_BANNER). Sample mock:\nhttps://goo.gl/KTkpyV",
                        "A cluster containing leaf documents with no price or availability\nannotation. Sample mocks: go/scrn/f0D4vfbj1bT, go/scrn/DRMRqV4ZHVa.",
                        "A cluster containing leaf documents with a price or availability\nannotation. Sample mocks: go/scrn/FjYkOARK5Ab, go/scrn/ngbyryodN9w.\nThe availability or price annotation to be shown will be specified\nper asset inside AssetResource.asset_annotation. If no annotation is\nspecified, client should render the doc with the same template as\nother WITH_ANNOTATION docs, but with the space for the annotation\nleft blank.",
                        "A cluster containing leaf documents shown in Primetime search\n(go/primetime-search-prd). Sample mocks: go/scrn/bZZKvVCqX2a. The\navailability or price annotation to be shown will be specified per\ncluster child inside AssetResource.asset_annotation.",
                        "A cluster containing leaf documents shown in search. This cluster\nwill be the only cluster in the stream, and should be displayed\nvertically instead of horizontally. Sample mock: go/scrn/wG2UbwpvVhh",
                        "A cluster containing Play Stories (go/play-stories).",
                        "A placeholder collection for the Continue Watching feed.\ngo/scrn/pGjt00GYV0t",
                        "A cluster containing credits personality documents.\ngo/movies-personality-pages",
                        "A cluster that represents a card. Examples of a card cluster:\nhttp://shortn/_tyUqDEkRZO, go/movies-ios-deprecation-cards.",
                        "A cluster of single-row content within an embedded stream. Examples:\ngo/scrn/pWunbg3g25L, go/scrn/Fs94YCviGEx",
                        "A cluster of double-row content that scrolls/paginates together\nwithin an embedded stream. Example: go/scrn/Szy5X65uZtQ",
                        "A cluster of single-row content within an embedded stream, which\nshows an annotation. Example: go/scrn/JwBa7pRM77O",
                        "A cluster of double-row content that scrolls/paginates together\nwithin an embedded stream, with annotations.\nExample: go/scrn/P8H9eqOEH1r",
                        "//////////////////////////////////////////////////////////////////////\nThe following layouts are controlled by Apiary/Nur\n\nA list of distributor collections for Primetime Setup. Each sub\ncollection will have a template id to identify what type of\ndistributor is in that sub collection.",
                        "A list of SVOD distributors. For Primetime setup should be presented\nas described in go/primetime-setup for streaming services.",
                        "A list of TVOD distributors. For Primetime setup should be presented\nas described in go/primetime-setup for Pay TV distributors.",
                        "A list of premium channel distributors. For primetime setup should be\npresented as described in go/primetime-setup for Premium Channel\ndistributors.",
                        "A list of all TVOD distributors. For Primetime setup should be\npresented as described in go/primetime-setup for search of Pay TV\ndistributors.",
                        "A list of all AVOD distributors.",
                        "A list of all basic (OTA) channel distributors. E.g.: ABC, Fox.",
                        "A list of all cable channel distributors. E.g.: Comedy Central, MTV."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_LayoutAttributes_TagDetails": {
            "description": "Tag details for guide-level tag browsing.\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfe_LayoutAttributes_TagDetails",
            "properties": {
                "selectedTagId": {
                    "description": "Currently selected tags. Will mirror the selected tags in the request.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tagDb": {
                    "$ref": "GoogleInternalPlayMoviesDfe__TagDb",
                    "description": "The tag DB to use. Will be provided if the id for the TAG_DB_TYPE_GUIDE\nin the GetFeed request doesn't match the current id, or is not provided."
                },
                "tagsPositionIndex": {
                    "description": "Required. A zero based index that indicates where the tags should be placed in the\nresponse. Ex. 0 means that it should be placed at the top, while 1 means\nthat it should be placed between first and second collections.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_Offer_Format": {
            "description": "Describes the offer or purchase format.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfe_Offer_Format",
            "properties": {
                "quality": {
                    "description": "Required.",
                    "enum": [
                        "QUALITY_UNSPECIFIED",
                        "QUALITY_SD",
                        "QUALITY_HD",
                        "QUALITY_UHD1",
                        "QUALITY_3D"
                    ],
                    "enumDescriptions": [
                        "",
                        "Standard definition",
                        "High Definition",
                        "UHD offers",
                        "3D-only/VR offers."
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Required.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_2D",
                        "TYPE_3D"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_PresentationColor_Color": {
            "id": "GoogleInternalPlayMoviesDfe_PresentationColor_Color",
            "properties": {
                "gradient": {
                    "$ref": "GoogleInternalPlayMoviesDfe_PresentationColor_Gradient",
                    "description": "Optional. Gradient configuration, if type = COLOR_GRADIENT."
                },
                "solidColor": {
                    "description": "Color to use for solid fill, in 0xRRGGBB, if type = COLOR_SOLID.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "Required.",
                    "enum": [
                        "COLOR_UNSPECIFIED",
                        "COLOR_SOLID",
                        "COLOR_GRADIENT"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_PresentationColor_Gradient": {
            "id": "GoogleInternalPlayMoviesDfe_PresentationColor_Gradient",
            "properties": {
                "endColor": {
                    "description": "Required. Color to use as the end of the gradient, in 0xRRGGBB format.",
                    "format": "int32",
                    "type": "integer"
                },
                "startColor": {
                    "description": "Required. Color to use as the start of the gradient, in 0xRRGGBB format.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "Required.",
                    "enum": [
                        "GRADIENT_UNSPECIFIED",
                        "GRADIENT_BL_TR",
                        "GRADIENT_BOTTOM_TOP",
                        "GRADIENT_BR_TL",
                        "GRADIENT_LEFT_RIGHT",
                        "GRADIENT_RIGHT_LEFT",
                        "GRADIENT_TL_BR",
                        "GRADIENT_TOP_BOTTOM",
                        "GRADIENT_TR_BL"
                    ],
                    "enumDescriptions": [
                        "",
                        "Draw the gradient from the bottom-left to the top-right",
                        "Draw the gradient from the bottom to the top",
                        "Draw the gradient from the bottom-right to the top-left",
                        "Draw the gradient from the left to the right",
                        "Draw the gradient from the right to the left",
                        "Draw the gradient from the top-left to the bottom-right",
                        "Draw the gradient from the top to the bottom",
                        "Draw the gradient from the top-right to the bottom-left"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_PromotionDetails_Coupon": {
            "description": "Next Id: 2",
            "id": "GoogleInternalPlayMoviesDfe_PromotionDetails_Coupon",
            "properties": {
                "couponCode": {
                    "description": "Required. Redemption code to be used when calling into CommerceService.Reedeem.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_PurchasePurchaseDetails_Attribute": {
            "id": "GoogleInternalPlayMoviesDfe_PurchasePurchaseDetails_Attribute",
            "properties": {
                "bonus": {
                    "$ref": "GoogleInternalPlayMoviesDfe_PurchasePurchaseDetails_BonusItem",
                    "description": "This is a bonus content that comes with another purchased asset."
                },
                "isHidden": {
                    "description": "Clients that support the new Hide/Unhide UX feature will use it for\nthe UI.\nLegacy Clients that do not have the Hide/Unhide UX feature should not\nshow the purchase if this bit is set.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_PurchasePurchaseDetails_BonusItem": {
            "id": "GoogleInternalPlayMoviesDfe_PurchasePurchaseDetails_BonusItem",
            "properties": {
                "originalPurchase": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Optional. Id of the original purchased asset that granted this bonus content."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_Purchase_PurchaseDetails": {
            "description": "Next Id: 8",
            "id": "GoogleInternalPlayMoviesDfe_Purchase_PurchaseDetails",
            "properties": {
                "addedToLibraryTimestamp": {
                    "description": "Required. Time at which the doc was added to the user's library. This might be\ndifferent than the purchase timestamp. E.g. when syncing accounts with\nDMA.\nSeconds since epoch.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "attributes": {
                    "description": "Optional. Purchase attributes.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe_PurchasePurchaseDetails_Attribute"
                    },
                    "type": "array"
                },
                "purchaseTimestamp": {
                    "description": "Required. The time at which the purchase was made.\nThis can be different than the time at which the doc was added\nto the library in the scenario where a user syncs their account with\nDMA.\nFor the time at which the doc was added to the library look at\ndoc_added_to_library_timestamp_sec.\nSeconds since epoch.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "purchaseType": {
                    "description": "Required.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_RENTAL",
                        "TYPE_PURCHASE",
                        "TYPE_SUBSCRIPTION",
                        "TYPE_FREE_WITH_ADS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Video On Demand: Rentals have a start date and expiration date.",
                        "Electronic Sell-Through: user bought the asset.",
                        "Subscription requiring a recurring payment.",
                        "The offer is for a free to watch with Ads.\nAn asset can have both TVOD offers (TYPE_PURCHASE, TYPE_RENTAL) and AVOD\noffer (TYPE_FREE_WITH_ADS)."
                    ],
                    "type": "string"
                },
                "purchasedQuality": {
                    "description": "Required.",
                    "enum": [
                        "QUALITY_UNSPECIFIED",
                        "QUALITY_SD",
                        "QUALITY_HD",
                        "QUALITY_UHD1",
                        "QUALITY_3D"
                    ],
                    "enumDescriptions": [
                        "",
                        "Standard definition",
                        "High Definition",
                        "UHD offers",
                        "3D-only/VR offers."
                    ],
                    "type": "string"
                },
                "source": {
                    "description": "Optional. This is used by the app to determine the purchase source and display\nnotifications such as \"You have X new purchases from Disney.\"",
                    "enum": [
                        "SOURCE_UNSPECIFIED",
                        "SOURCE_PLAY",
                        "SOURCE_YOUTUBE",
                        "SOURCE_MA"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "upgradeTimestamp": {
                    "description": "Optional. The time the offer was upgraded from original quality.\nNot set if offer has never been upgraded.\ngo/flattened-pricing-design-review.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_RentalDetails_DualTimers": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe_RentalDetails_DualTimers",
            "properties": {
                "expirationTimestamp": {
                    "description": "Optional. Rental expiration time. The value of the long and short timers\nare aggregated  into this field. It is computed as\npurchase_time+long_timer until playback starts, after which it is\ncomputed as viewer_started+short_timer.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "longTimer": {
                    "description": "Required. The time period in which the user may start watching\nthe video after the purchase_ts. Usually on the order of 30 days.",
                    "format": "google-duration",
                    "type": "string"
                },
                "shortTimer": {
                    "description": "Optional. Activated period. The time period in which the user\nmay continue to access the video after starting to watch it. Usually\non the order of 24 to 72 hours.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_WatchAction_SupportedApp": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfe_WatchAction_SupportedApp",
            "properties": {
                "deeplinkUri": {
                    "description": "Required. URI to invoke for this watch action. This should be used in\nconjunction with the supported_app parameter.",
                    "type": "string"
                },
                "playbackUri": {
                    "description": "Optional. Direct drop to the playback URI. Should only be used for content the\nuser is entitled to, otherwise playbacks will fail. Only certain\ndistributors support this. The caller is expected to verify the user is\nentitled to the content before invoking the URI. If cannot verify or the\nuser is not entitled - use the |deeplink_uri| instead.",
                    "type": "string"
                },
                "supportedApp": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. The supported app."
                },
                "type": {
                    "description": "Required. The supported app platform type.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "ANDROID_MOBILE",
                        "ANDROID_TV",
                        "IOS_MOBILE",
                        "CHROMECAST"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_WatchEvent_EpisodeDetails": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfe_WatchEvent_EpisodeDetails",
            "properties": {
                "episodeId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                },
                "seasonId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_WatchEvent_Playback": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfe_WatchEvent_Playback",
            "properties": {
                "position": {
                    "description": "Required (May be 0).\nPlayback position.\nThe position is measured as a duration from the beginning of the content.",
                    "format": "google-duration",
                    "type": "string"
                },
                "startTime": {
                    "description": "Optional. If set, denotes the start time of the playback.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe_WatchEvent_WatchActionDetails": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfe_WatchEvent_WatchActionDetails",
            "properties": {
                "watchAction": {
                    "$ref": "GoogleInternalPlayMoviesDfe__WatchAction"
                },
                "watchActionId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__WatchActionId"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__AcquisitionInfo": {
            "description": "Next id: 4.",
            "id": "GoogleInternalPlayMoviesDfe__AcquisitionInfo",
            "properties": {
                "priceBasedAnnotation": {
                    "$ref": "GoogleInternalPlayMoviesDfe_AcquisitionInfo_PriceBasedAnnotation",
                    "description": "Offers available for an episode or season of a show. Used to display\nthe price annotation."
                },
                "textBasedAnnotation": {
                    "$ref": "GoogleInternalPlayMoviesDfe_AcquisitionInfo_TextBasedAnnotation",
                    "description": "See go/primetime-annotations2 for details."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Annotation": {
            "description": "Message representing an annotation on an asset.\nNext id: 18",
            "id": "GoogleInternalPlayMoviesDfe__Annotation",
            "properties": {
                "acquisitionInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AcquisitionInfo",
                    "description": "Acquisition information. Describes how the content can be purchased.\nThis annotation holds info about how to display the price or availability\non search or guide. This annotation may not have application and/or\nexpiration timestamps and is only valid for primetime content."
                },
                "availabilityWindowEnding": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AvailabilityWindowEnding",
                    "description": "Availability window is about to end."
                },
                "childNewlyUpdated": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ChildNewlyUpdated",
                    "description": "The asset has a decendent down its hierarchy which has NEWLY_UPDATED\nannotation."
                },
                "continueWatchingInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ContinueWatchingInfo",
                    "description": "Additional Continue Watching information that defines asset play behavior\n(Play vs 3rd party distributor app)."
                },
                "distributorsAvailability": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AvailabilityInfo",
                    "description": "Distributors availability annotation. Describes how the items are\navailable on various 3rd party distributors (for shows/seasons - how many\nepisodes). This annotation may not have application and/or expiration\ntimestamps and is only valid for primetime content."
                },
                "expiration": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Expiration",
                    "description": "Optional."
                },
                "newAction": {
                    "$ref": "GoogleInternalPlayMoviesDfe__NewAction",
                    "description": "New to buy, rent, or preorder for the first time."
                },
                "newlyUpdated": {
                    "$ref": "GoogleInternalPlayMoviesDfe__NewlyUpdated",
                    "description": "The asset has been recently added/updated."
                },
                "ownershipInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe__OwnershipInfo",
                    "description": "The ownership info."
                },
                "personalityDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PersonalityDetails",
                    "description": "Describes the personality role for the content, such as actor or\ndirector. This will be provided as an annotation in the credit list\nresponse based on the request of credits for a specific content, thus\nthe role here is the role of the personality annotated in the content for\nwhich credits were requested."
                },
                "playAvailability": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AvailabilityInfo",
                    "description": "Play availability annotation. Describes how the items are available (for\nshows/seasons - how many episodes).\nThis annotation is valid for seasons only and shows how many episodes in\nthe season are available on Play Movies app."
                },
                "playlistInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PlaylistInfo",
                    "description": "Info needed for assets in a playlist (returned by the\nDiscovery.GetPlaylist endpoint)."
                },
                "priceDrop": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PriceDrop",
                    "description": "Price has dropped."
                },
                "promotionDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PromotionDetails",
                    "description": "Annotation for VOUCHER asset that contains promotion information."
                },
                "sentiment": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Sentiment",
                    "description": "User feedback of a movie or TV show.\nThis asset has user feedback info, which could be either a like or\ndislike of the content. User expresses such feedback through a\nThumbs-up/down UI control."
                },
                "suggestionReason": {
                    "$ref": "GoogleInternalPlayMoviesDfe__SuggestionReason",
                    "description": "Suggestion explanation.\nThe asset was floated to the user for a specific reason. This annotation\ncontains a string describing the reason. For eaxmple:\n\"Because you watched <That Awesome Movie>\"."
                },
                "watchEvent": {
                    "$ref": "GoogleInternalPlayMoviesDfe__WatchEvent",
                    "description": "This asset has watch event info, which represents an event based on the\nuser watching a movie or show."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__AssetId": {
            "description": "A unique identifier of the content item available to the Play Movies app for\nconsumption or as a purchase item.\nTV shows, seasons and movies bundles are considered assets, not collections.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfe__AssetId",
            "properties": {
                "id": {
                    "description": "Required. Id of the asset. The id per type will be unique (i.e.: assets\nwith the same type and the same id are the same asset).\nNo assumptions should be made about the format of the id string.",
                    "type": "string"
                },
                "type": {
                    "description": "Required. Type of the asset.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "MOVIE",
                        "BUNDLE",
                        "SHOW",
                        "SEASON",
                        "EPISODE",
                        "ANDROID_APP",
                        "ALBUM",
                        "SONG",
                        "VOUCHER",
                        "DISTRIBUTOR",
                        "PERSON",
                        "STORY",
                        "BOOK",
                        "TRAILER"
                    ],
                    "enumDescriptions": [
                        "",
                        "A stand-alone feature video.",
                        "A content bundle (multiple items together).",
                        "A container of seasons.",
                        "A container of episodes.",
                        "A stand-alone TV episode video.",
                        "A stand-alone Android Application.",
                        "A container of songs.",
                        "A stand-alone song.",
                        "A voucher.",
                        "A video content distributor.",
                        "A movie/tv related person.",
                        "A document representing a Play Story.",
                        "See the story_cover and story_details fields\nin AssetResource - these are the only fields\nthat will be filled for assets of this type.\nA stand-alone book (\"Ocean\" Play Books corpus).",
                        "A trailer which is a DRM-clear promotional video"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Availability": {
            "description": "Message describing the purchasing options of a given asset.\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__Availability",
            "properties": {
                "offers": {
                    "description": "Optional. Should only be used for asset with type DISTRIBUTOR. Deprecated for all\nother asset types. Use WatchAction.offers for non-distributor assets.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Offer"
                    },
                    "type": "array"
                },
                "sellerInformation": {
                    "$ref": "GoogleInternalPlayMoviesDfe__SellerInformation",
                    "description": "Optional. Sometimes, we need to provide the seller information to show in our store\nfronts (e.g.: for VAT purposes in some countries).\nShould be ignored if |offers| is empty."
                },
                "watchActions": {
                    "description": "Optional. The list of all the ways in which the user can watch the asset outside\nPlay or gain ownership of the asset on Play.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__WatchAction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__AvailabilityInfo": {
            "description": "Next id: 4",
            "id": "GoogleInternalPlayMoviesDfe__AvailabilityInfo",
            "properties": {
                "availabilityDetails": {
                    "description": "Required. Describes how the annotated content is available for the given\ndistributor.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe_AvailabilityInfo_AvailabilityDetails"
                    },
                    "type": "array"
                },
                "distributorId": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Optional. Should be filled if annotation is distributors_availability."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__AvailabilityWindowEnding": {
            "id": "GoogleInternalPlayMoviesDfe__AvailabilityWindowEnding",
            "properties": {
                "availabilityType": {
                    "description": "Required.",
                    "enum": [
                        "AVAILABILITY_UNSPECIFIED",
                        "RENTAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "Rental availability window (when users can rent the asset) is about\nto end."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__CategoryId": {
            "description": "A unique identifier of a category, i.e. movie or TV show genre.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe__CategoryId",
            "properties": {
                "id": {
                    "description": "Required. Non-localized string identifying the category.\nValue is backend specific. In the case of youtube movie, the value\ncomes from video/youtube/gdata/rosy/movie_genre_id_data.proto\n\nExample value \"1\" representing \"Action & Adventure\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ChildNewlyUpdated": {
            "id": "GoogleInternalPlayMoviesDfe__ChildNewlyUpdated",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ClientProfile": {
            "description": "Provides the information about the client (app and device) in use.\nNext Id: 6",
            "id": "GoogleInternalPlayMoviesDfe__ClientProfile",
            "properties": {
                "apiVersion": {
                    "description": "Required. API minor version that was available when the client app was\nbeing developed. Only minor version number is needed. For example, if the\napp is built against API v2.01, the value should be \"01\". The app should\nhave filled all the required fields for that version. Fields marked as\n\"Required\" without specifying the minor version are required for all apps\nusing the current major API version.",
                    "type": "string"
                },
                "device": {
                    "description": "Required. A type of the device, as determined by the app.",
                    "enum": [
                        "DEVICE_UNSPECIFIED",
                        "DEVICE_PHONE",
                        "DEVICE_TABLET",
                        "DEVICE_BROWSER",
                        "DEVICE_STREAMER",
                        "DEVICE_SET_TOP_BOX",
                        "DEVICE_TV_SET",
                        "DEVICE_GAME_CONSOLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "E.g.: iPhone, Nexus 6P.",
                        "E.g.: iPad, Pixel C.",
                        "E.g.: Player on play.google.com/store/movies.",
                        "E.g.: Chromecast.",
                        "E.g.: Fiber, Android TV, Roku.",
                        "E.g.: Smart TVs, TV sets with STB backed in, like RokuTV.",
                        "E.g.: XBox, PlayStation."
                    ],
                    "type": "string"
                },
                "platform": {
                    "description": "Required. Platform type for which the app was made.",
                    "enum": [
                        "PLATFORM_UNSPECIFIED",
                        "PLATFORM_ANDROID",
                        "PLATFORM_GENERIC_BROWSER",
                        "PLATFORM_IOS",
                        "PLATFORM_ROKU"
                    ],
                    "enumDescriptions": [
                        "",
                        "Any android app.",
                        "Web app (web browser, Chromecast receiver, Smart TV\napp or an app running under a built-in renderer like Cobalt).",
                        "iOS app.",
                        "Brightscript app or a native app packaged with a Brighscript\napp."
                    ],
                    "type": "string"
                },
                "presentation": {
                    "description": "Required. User interface mode. This is in client profile, since\nthe same device and app may have different UX presentations\ndepending on the presentation device. E.g.: a mobile phone app can be\nrunning on a \"standard\" 2D presentation mode or VR mode. The value should\nrepresent the state of the client when the request was created (even if\nsubmitted later, when the UX has changed).",
                    "enum": [
                        "PRESENTATION_UNSPECIFIED",
                        "PRESENTATION_STANDARD"
                    ],
                    "enumDescriptions": [
                        "",
                        "Standard UX for the device."
                    ],
                    "type": "string"
                },
                "version": {
                    "description": "Required. The client app version/build number.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Collection": {
            "description": "Resource for a single collection of multiple items (a cluster or a stream).\nNext Id.: 5",
            "id": "GoogleInternalPlayMoviesDfe__Collection",
            "properties": {
                "details": {
                    "$ref": "GoogleInternalPlayMoviesDfe__CollectionDetails",
                    "description": "Required."
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__CollectionId",
                    "description": "Required."
                },
                "pagination": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Pagination",
                    "description": "Optional. Pagination information for this collection."
                },
                "presentation": {
                    "$ref": "GoogleInternalPlayMoviesDfe__CollectionPresentation",
                    "description": "Optional. How is this collection to be presented."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__CollectionDetails": {
            "description": "Describes a collection of items.\nNext id: 7",
            "id": "GoogleInternalPlayMoviesDfe__CollectionDetails",
            "properties": {
                "includedAssets": {
                    "$ref": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedAssets",
                    "description": "Optional. The assets included in the cluster. The assets delivered in the order\nthe service provided. Note that there's no guarantee that the assets\nwould only appear once (or at all)."
                },
                "includedCollections": {
                    "$ref": "GoogleInternalPlayMoviesDfe_CollectionDetails_IncludedCollections",
                    "description": "Optional. The streams or clusters included in the stream."
                },
                "loggingToken": {
                    "description": "Optional. This is a serialized PlaylogMoviesExtension.ServerCookie message\n(google3/wireless/android/play/playlog/play_movies_v2.proto).\nThis value should be copied as is into the UiElement.server_cookie_str\nfield (or, if supported, decoded as websafe BASE64 and copied into the\nUiElement.server_cookie) of the logging proto when any logging pertaining\nthis item is made.",
                    "type": "string"
                },
                "snippet": {
                    "description": "Optional. The long text (snippet) of the collection. This may be used, for example,\nwhen floating promotional or informational messages.\nUse based on the presentation layout.",
                    "type": "string"
                },
                "subTitle": {
                    "description": "Optional. The sub-title of the collection. Use based on the presentation layout.",
                    "type": "string"
                },
                "title": {
                    "description": "Optional. The title of the collection. Use based on the presentation layout.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__CollectionId": {
            "description": "A unique identifier of a collection of assets.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe__CollectionId",
            "properties": {
                "id": {
                    "description": "Required. Id of the collection.\nNo guarantees of uniqueness of the id. Some collections will be generated\non the fly and may have hard-coded or automatically generated ids which\nmay not be unique.\nIf a service guarantees the collection id to be unique in the response,\nit will be explicitly documented.\nNo assumptions should be made about the format of the id string.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__CollectionPresentation": {
            "description": "Describes a presentation of a collection. Presentation descriptor for a\ncollection conveys critical information as to how the UX for it should be\nhandled. In some cases it also provides additional information about the\ncollection content.\nNext Id: 8",
            "id": "GoogleInternalPlayMoviesDfe__CollectionPresentation",
            "properties": {
                "assetType": {
                    "description": "Describes the type of the assets in this collection. The API will filter\nout items that don't match these types from the collection.\nIf not set, no explicit promise is given and any type may appear in the\ncollection.",
                    "enumDescriptions": [
                        "",
                        "A stand-alone feature video.",
                        "A content bundle (multiple items together).",
                        "A container of seasons.",
                        "A container of episodes.",
                        "A stand-alone TV episode video.",
                        "A stand-alone Android Application.",
                        "A container of songs.",
                        "A stand-alone song.",
                        "A voucher.",
                        "A video content distributor.",
                        "A movie/tv related person.",
                        "A document representing a Play Story.",
                        "See the story_cover and story_details fields\nin AssetResource - these are the only fields\nthat will be filled for assets of this type.\nA stand-alone book (\"Ocean\" Play Books corpus).",
                        "A trailer which is a DRM-clear promotional video"
                    ],
                    "items": {
                        "enum": [
                            "TYPE_UNSPECIFIED",
                            "MOVIE",
                            "BUNDLE",
                            "SHOW",
                            "SEASON",
                            "EPISODE",
                            "ANDROID_APP",
                            "ALBUM",
                            "SONG",
                            "VOUCHER",
                            "DISTRIBUTOR",
                            "PERSON",
                            "STORY",
                            "BOOK",
                            "TRAILER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "detailsPageSelection": {
                    "$ref": "GoogleInternalPlayMoviesDfe_CollectionPresentation_DetailsPageSelection",
                    "description": "Optional. Data used to indicate details page selections for the assets in the\ncollection. Example: selecting the latest vs earliest season of a show, or\nspecifying which Primetime distributor to select. This applies to all\ncollections at this level and below, unless overridden by descendent\ncollections."
                },
                "images": {
                    "description": "Optional. Images included with the collection. See the LayoutTemplate layout\ndescription for guidance on expectations and how to use the images.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "impressionCap": {
                    "$ref": "GoogleInternalPlayMoviesDfe_CollectionPresentation_ImpressionCap",
                    "description": "Optional. Specifies if and how this collection should be impression-capped by\nclients. The collection will be considered unique for impression capping\npurposes by its collection_id."
                },
                "layouts": {
                    "description": "[Required]\nLayout to be used to present the given collection. The layouts will be\ngiven in descending priority, client should pick the first one they know\nhow to present. If none is known to the client, the collection should not\nbe presented. An call for upgrade can be shown instead, if such\na UX is available.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__LayoutAttributes"
                    },
                    "type": "array"
                },
                "offerPreference": {
                    "$ref": "GoogleInternalPlayMoviesDfe__OfferPreference",
                    "description": "Optional. Describes the preferred offer type to show for this collection. The Apiary\nwill not filter out offers, so the clients need to make sure the offer\nfloated in the UX for this collection matches the type defined here.\nIf not set - the clients should float the lowest available offer (or as\ndefined by the specific template in the UX requirements for that template).\nIf both fields are UNSPECIFIED (OFFER_UNSPECIFIED and FORMAT_UNSPECIFIED\nrespectively) then this should be ignored (i.e.: treat as not set)."
                },
                "presentationColor": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PresentationColor",
                    "description": "Optional. Colors to use for this collection, if any."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ContentRating": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__ContentRating",
            "properties": {
                "country": {
                    "description": "At least one country is required.\nApplicable countries of the rating.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ContentRatingId",
                    "description": "Required."
                },
                "name": {
                    "description": "Required. Content rating name as defined in the country's official language.\nFor example rating PG-13 has id \"MPAA_PG_13\" and name \"PG-13\".\nNote that this is not a per-user localized text.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ContentRatingFilter": {
            "description": "Used for filtering content per type based on content rating.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__ContentRatingFilter",
            "properties": {
                "applicableType": {
                    "description": "Required. Type of content to which the rating should be applied. Applying rating\nfrom a movie scale to TV content and vice versa may result in an empty\nresponse.",
                    "enumDescriptions": [
                        "",
                        "A stand-alone feature video.",
                        "A content bundle (multiple items together).",
                        "A container of seasons.",
                        "A container of episodes.",
                        "A stand-alone TV episode video.",
                        "A stand-alone Android Application.",
                        "A container of songs.",
                        "A stand-alone song.",
                        "A voucher.",
                        "A video content distributor.",
                        "A movie/tv related person.",
                        "A document representing a Play Story.",
                        "See the story_cover and story_details fields\nin AssetResource - these are the only fields\nthat will be filled for assets of this type.\nA stand-alone book (\"Ocean\" Play Books corpus).",
                        "A trailer which is a DRM-clear promotional video"
                    ],
                    "items": {
                        "enum": [
                            "TYPE_UNSPECIFIED",
                            "MOVIE",
                            "BUNDLE",
                            "SHOW",
                            "SEASON",
                            "EPISODE",
                            "ANDROID_APP",
                            "ALBUM",
                            "SONG",
                            "VOUCHER",
                            "DISTRIBUTOR",
                            "PERSON",
                            "STORY",
                            "BOOK",
                            "TRAILER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "rating": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ContentRatingId",
                    "description": "Required. The id of the content rating by which to restrict."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ContentRatingId": {
            "description": "A unique identifier of an official content rating by an organization such as\nMPAA (Motion Picture Association of America) or\nBBFC (British Board of Film Classification).\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__ContentRatingId",
            "properties": {
                "id": {
                    "description": "Required. Enum name as defined in:\n  video/youtube/gdata/rosy/content_rating_data.proto\n\nThis field is defined as a string as opposed to enum because we don't\nwant to force app changes when a new scheme is added.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ContinueWatchingInfo": {
            "description": "Contains all necessary information needed to describe asset play behavior:\nplay this asset inside Play vs. in some 3rd party distributor app.\nNext id: 4",
            "id": "GoogleInternalPlayMoviesDfe__ContinueWatchingInfo",
            "properties": {
                "lastActivity": {
                    "description": "Optional. The timestamp of the last known activity.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "playbackInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe_ContinueWatchingInfo_PlaybackInfo"
                },
                "watchActionInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe_ContinueWatchingInfo_WatchActionInfo"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Cookie": {
            "description": "Next Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__Cookie",
            "properties": {
                "cookie": {
                    "description": "Backend_cookie value is set by the backend in the response, and is\nexpected to be forwarded back as-is in the subsequent request. The\ncontent of the cookie is opaque to the API clients.",
                    "type": "string"
                },
                "maxStalenessTime": {
                    "description": "The response data is guaranteed to be newer than this timestamp. Clients\ncan use this field to bypass caches and force strong reads.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Date": {
            "description": "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. This is based on:\nhttp://google3/google/type/date.proto",
            "id": "GoogleInternalPlayMoviesDfe__Date",
            "properties": {
                "day": {
                    "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Required. Month of year. Must be from 1 to 12. A combination with only year and day\nmakes no sense. And there is not utility of this proto if only one field is\nused.",
                    "format": "int32",
                    "type": "integer"
                },
                "year": {
                    "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__DebugInfo": {
            "description": "This message will be used for tracing/debug only. It should not be used in\nany functional/business logic. On app side, this message should be logged if\nset in any response.\nThe existence of this message is never guaranteed and shouldn't be expected.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe__DebugInfo",
            "properties": {
                "validationErrors": {
                    "description": "Optional. Errors discovered during validations.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__ValidationErrorDescription"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__DeprecationDetails": {
            "description": "Next Id: 7",
            "id": "GoogleInternalPlayMoviesDfe__DeprecationDetails",
            "properties": {
                "action": {
                    "$ref": "GoogleInternalPlayMoviesDfe_DeprecationDetails_Action",
                    "description": "[Optional].\nAction that should be presented to user insted of default \"update\" button."
                },
                "apiVersion": {
                    "description": "[Required].\nThe minor version that is now marked as deprecated, should match\nRequestContext.client_profile.api_version.",
                    "type": "string"
                },
                "expectedExpiration": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Expiration",
                    "description": "[Required].\nExpected expiration details of the minor version in question."
                },
                "message": {
                    "$ref": "GoogleInternalPlayMoviesDfe_DeprecationDetails_DeprecationMessage",
                    "description": "[Optional].\nMessage to present to the users instead of the app's built in\nmessage for this case. Should replace the default translated\nversion packaged with the app."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__DeviceProfile": {
            "description": "Describes the device (hardware) in use.\nNext Id: 8",
            "id": "GoogleInternalPlayMoviesDfe__DeviceProfile",
            "properties": {
                "brand": {
                    "description": "Required. For Android devices, the value of android.os.Build.BRAND.\nFor other devices, the brand name as available.",
                    "type": "string"
                },
                "device": {
                    "description": "Required. For Android devices, the value of android.os.Build.DEVICE.\nFor other devices, the device name as available.",
                    "type": "string"
                },
                "id": {
                    "description": "Optional. For Android devices - android id. for others - Checkin ID.\n|id| or |serial_number| should be set, otherwise no experimentation\ntargeting will be supported for non-logged in usecases.",
                    "type": "string"
                },
                "make": {
                    "description": "Required. For Android devices, the value of android.os.Build.MANUFACTURER.\nFor other devices, the manufacturer name as available.",
                    "type": "string"
                },
                "model": {
                    "description": "Required. For Android devices, the value of android.os.Build.MODEL.\nFor other devices, the device model as available.",
                    "type": "string"
                },
                "product": {
                    "description": "Required. For Android devices, the value of android.os.Build.PRODUCT.\nFor other devices, the product name as available.",
                    "type": "string"
                },
                "serialNumber": {
                    "description": "Optional. For Android devices, the value of android.os.Build.SERIAL.\nFor others, a manufacturer provided serial number of the physical\ndevice, where available. When not available, some other identifier:\n* MAC address,\n* For Roku: ifDeviceInfo.GetChannelClientId().\n* For iOS: UIDevice.currentDevice().identifierForVendor().UUIDString()\n* Any other similarly reasonably unique id or token.\n|id| or |serial_number| should be set, otherwise no experimentation\ntargeting will be supported for non-logged in usecases.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Discount": {
            "description": "Message describing discount users will be getting.\nNext id: 5",
            "id": "GoogleInternalPlayMoviesDfe__Discount",
            "properties": {
                "absoluteDiscount": {
                    "$ref": "GoogleInternalPlayMoviesDfe_Discount_AbsoluteDiscount"
                },
                "offerType": {
                    "description": "Required. Offer type for which this promotion will be applied.\nRental/Purchase.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_RENTAL",
                        "TYPE_PURCHASE",
                        "TYPE_SUBSCRIPTION",
                        "TYPE_FREE_WITH_ADS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Video On Demand: Rentals have a start date and expiration date.",
                        "Electronic Sell-Through: user bought the asset.",
                        "Subscription requiring a recurring payment.",
                        "The offer is for a free to watch with Ads.\nAn asset can have both TVOD offers (TYPE_PURCHASE, TYPE_RENTAL) and AVOD\noffer (TYPE_FREE_WITH_ADS)."
                    ],
                    "type": "string"
                },
                "ratioDiscount": {
                    "$ref": "GoogleInternalPlayMoviesDfe_Discount_RatioDiscount"
                },
                "relativeDiscount": {
                    "$ref": "GoogleInternalPlayMoviesDfe_Discount_RelativeDiscount"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ExperimentFlags": {
            "description": "Next Id: 6",
            "id": "GoogleInternalPlayMoviesDfe__ExperimentFlags",
            "properties": {
                "experimentFlags": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlayMoviesDfe_ExperimentFlags_FlagValue"
                    },
                    "description": "Optional. Map of experiment flag names and their corresponding values.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Experiments": {
            "description": "Next Id: 6",
            "id": "GoogleInternalPlayMoviesDfe__Experiments",
            "properties": {
                "experimentFlags": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ExperimentFlags",
                    "description": "Optional. Flags that allow clients to enable/disable flag-guarded server-side code.\nThe server will attempt to honor, as best efforts. Flags should be\ncoordinated with the backend team. Otherwise, flags may be ignored."
                },
                "experimentIds": {
                    "$ref": "GoogleInternalPlayMoviesDfe_Experiments_ExperimentIds",
                    "description": "List of explicit experiment IDs, for clients using Mendel experiment\nids directly."
                },
                "nurToken": {
                    "description": "Token provided by UserDataService experiments response. The information\nis used trigger server-side behavior and validate the experiment state of\nthe client.",
                    "type": "string"
                },
                "phenotypeToken": {
                    "description": "This is the server token provided by the Phenotype/Heterodyne (go/ph)\nframework. The client should set it if integrated with P/H.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ExperimentsData": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__ExperimentsData",
            "properties": {
                "experimentFlags": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ExperimentFlags",
                    "description": "Optional. Mendel experiment flags. Experiment flags are configured in\ndepot/google3/googledata/experiments/play_movies_nur/features/."
                },
                "ids": {
                    "description": "Optional. List of selected Mendel experiment ids. The experiment ids is used by\nclients to log to Playlog.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "nurToken": {
                    "description": "Optional. Serialized token used to interpret the client's state and validate the\nexperiment.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Expiration": {
            "description": "Expiration defines the validity period of the message. The data in the\nmessage will become stale once the expiration time elapses, and should be\nrefreshed as soon as possible.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe__Expiration",
            "properties": {
                "expirationTime": {
                    "description": "Required. Explicit expiration timestamp. I.e.: expire on <>.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__FamilySharingDestination": {
            "description": "Describes the sharing status for the content that is being shared to the\nuser. \"Destination\" means the destination of sharing.\nNext id: 2",
            "id": "GoogleInternalPlayMoviesDfe__FamilySharingDestination",
            "properties": {
                "familyId": {
                    "description": "Required. Family ID from which a family shared purchase is acquired.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__FamilySharingInfo": {
            "description": "Family sharing info associated with a purchase.\nNext id: 4",
            "id": "GoogleInternalPlayMoviesDfe__FamilySharingInfo",
            "properties": {
                "destination": {
                    "$ref": "GoogleInternalPlayMoviesDfe__FamilySharingDestination",
                    "description": "This user received the content as destination."
                },
                "shareabilityState": {
                    "description": "Required.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "STATE_SHAREABLE",
                        "STATE_NOT_SHAREABLE",
                        "STATE_PARTIALLY_SHAREABLE"
                    ],
                    "enumDescriptions": [
                        "",
                        "User can share the content with their family.",
                        "User cannot share the content with their family.",
                        "Indicates that at least one item in collection can be shared.\nCurrently supported only for TV shows."
                    ],
                    "type": "string"
                },
                "source": {
                    "$ref": "GoogleInternalPlayMoviesDfe__FamilySharingSource",
                    "description": "This user shared the content as source."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__FamilySharingSource": {
            "description": "Describes the sharing status for the content that is being shared by the\nuser. \"Source\" means the source of sharing.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfe__FamilySharingSource",
            "properties": {
                "familyId": {
                    "description": "Required. Family ID with which an owned purchase is shared.",
                    "format": "int64",
                    "type": "string"
                },
                "state": {
                    "description": "Required.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "STATE_SHARED",
                        "STATE_PARTIALLY_SHARED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The content is shared with the family.",
                        "The content shared only partially (e.g.: some of the TV\nseason episodes were shared, but not all)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__FetchByTokenParameters": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__FetchByTokenParameters",
            "properties": {
                "paginationToken": {
                    "description": "Pagination token is used to fetch the next page of the previously\nrequested response.",
                    "type": "string"
                },
                "refreshParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe_FetchByTokenParameters_RefreshParameters",
                    "description": "Refresh parameters is used to restart a new response from the first page."
                },
                "reversePaginationToken": {
                    "description": "Reverse pagination token is used to fetch the previous page of the\npreviously requested response.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__FetchByTokenRequest": {
            "id": "GoogleInternalPlayMoviesDfe__FetchByTokenRequest",
            "properties": {
                "paginationParameters": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PaginationParameters",
                    "description": "Optional. Pagination parameters. If not set, pagination parameters from\nthe original request will be used."
                },
                "params": {
                    "$ref": "GoogleInternalPlayMoviesDfe__FetchByTokenParameters",
                    "description": "Required."
                },
                "requestContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RequestContext",
                    "description": "Required. Note that the request context from the original request and context from\nthe pagination request should be the same. Changing the request context\nwhile paginating (differs from original context) will cause an error."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__FetchByTokenResponse": {
            "id": "GoogleInternalPlayMoviesDfe__FetchByTokenResponse",
            "properties": {
                "nextPage": {
                    "description": "Required. The next page will be based on the calculation from the original request\nencoded in the pagination token passed in the previous response.\nThe collections represent a forest (http://shortn/_R6wZNpB57I) of flatten\ntrees, with the roots being the first item (after the previous tree ends).\nCollections to be handled in the order of delivery.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Collection"
                    },
                    "type": "array"
                },
                "responseContext": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ResponseContext",
                    "description": "Required."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Filter": {
            "description": "Filters are used to let the backends know how to slice the information\nprovided. Depending on the request, a filter may be required.\nThe filter types are common between different services. Filters will be\napplied as OR between the values in the same field, and AND between the\nvalues in different fields, in any combination.\n\nFor example, for value:\n {\n   type_restrict [\n     MOVIE, SEASON, COLLECTION\n   ],\n   id_restrict [\n     movie1, show2, collection3\n   ]\n },\n\nAssets MOVIE:movie1 and COLLECTION:collection3 will be returned, but not\nSHOW:show2 and not SEASON:season4.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfe__Filter",
            "properties": {
                "categoryRestrict": {
                    "description": "Optional. Restrict the response based on the category of the asset. Will only be\nsupported by specific endpoints that explicitly allow this filter, will\nbe ignored otherwise.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__CategoryId"
                    },
                    "type": "array"
                },
                "idRestrict": {
                    "description": "Optional. Filter by content id. Only ids that appear in the list will be returned.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__AssetId"
                    },
                    "type": "array"
                },
                "ratingRestrict": {
                    "description": "Optional. Restrict the response based on the content rating of the asset. Will only\nbe supported by specific endpoints that explicitly allow this filter, will\nbe ignored otherwise.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__ContentRatingFilter"
                    },
                    "type": "array"
                },
                "typeRestrict": {
                    "description": "Optional. Filter by content type. Only ids with types that appear in the list will\nbe returned.",
                    "enumDescriptions": [
                        "",
                        "A stand-alone feature video.",
                        "A content bundle (multiple items together).",
                        "A container of seasons.",
                        "A container of episodes.",
                        "A stand-alone TV episode video.",
                        "A stand-alone Android Application.",
                        "A container of songs.",
                        "A stand-alone song.",
                        "A voucher.",
                        "A video content distributor.",
                        "A movie/tv related person.",
                        "A document representing a Play Story.",
                        "See the story_cover and story_details fields\nin AssetResource - these are the only fields\nthat will be filled for assets of this type.\nA stand-alone book (\"Ocean\" Play Books corpus).",
                        "A trailer which is a DRM-clear promotional video"
                    ],
                    "items": {
                        "enum": [
                            "TYPE_UNSPECIFIED",
                            "MOVIE",
                            "BUNDLE",
                            "SHOW",
                            "SEASON",
                            "EPISODE",
                            "ANDROID_APP",
                            "ALBUM",
                            "SONG",
                            "VOUCHER",
                            "DISTRIBUTOR",
                            "PERSON",
                            "STORY",
                            "BOOK",
                            "TRAILER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Image": {
            "description": "Describes an image.\nNext id: 5",
            "id": "GoogleInternalPlayMoviesDfe__Image",
            "properties": {
                "category": {
                    "description": "Optional. Image category e.g. title specific, default(placeholder).",
                    "enum": [
                        "CATEGORY_UNSPECIFIED",
                        "CATEGORY_TITLE_SPECIFIC",
                        "CATEGORY_DEFAULT"
                    ],
                    "enumDescriptions": [
                        "",
                        "This category means that the image is specific to the asset and was added\nexplicitly to it.",
                        "Default Artwork.\nThis image is a default image and is provided since no image was added\nexplicitly to this asset. This image is not asset-specific and may be\nshared with other assets to which no asset-specific image exists."
                    ],
                    "type": "string"
                },
                "dimensions": {
                    "$ref": "GoogleInternalPlayMoviesDfe_Image_Dimensions",
                    "description": "Required."
                },
                "type": {
                    "description": "Required. Type is used to hint the users of the expected usage of this image.\nIn some cases, type will be set to TYPE_GENERIC and the users will need\nto use the image based on the context in which this message appears.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_LOGO",
                        "TYPE_BANNER",
                        "TYPE_POSTER",
                        "TYPE_SCREEN_SHOT",
                        "TYPE_BACKGROUND",
                        "TYPE_TITLE",
                        "TYPE_ICON",
                        "TYPE_GENERIC_LOGO",
                        "TYPE_GENERIC"
                    ],
                    "enumDescriptions": [
                        "",
                        "A logo is generally a textual image of the show name. It has\nsquare aspect ratio.",
                        "Banner of the asset. This is generally a wide image with the\nseries/program name overlaid and used, for instance, as a header for\nthe asset's web landing page.\nfor VideoCollectionResource, if the template requires a banner to\nbe used in the collection representation - this should be used.",
                        "Poster of the asset. This is generally a tall image with the\nseries/program name overlaid and used, for instance, as the asset's\ndefault image.",
                        "A video still from the program/series used, for instance, by the\nplayer. Common aspect ratios are 16:9 or 4:3.",
                        "For VideoCollectionResource, if the template requires a background\nimage - this should be used.",
                        "For VideoCollectionResource, if the template requires an image to\nreplace or be added to the textual collection title - this should be\nused.",
                        "For distributors and apps, typically a square 512x512 icon.",
                        "This is finsky::Image::LOGO image with no guarantee about image\nformat.",
                        "General purpose image. No assumption should be made regarding size,\nquality or usage. Images with this type will have the following\nfields set: aspect_ratio, url, and will have is_fife==true or\ndimensions set. Such an image should be used based on its context, for\nexample, aspect_ratio, not on its type."
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "Required. If dimensions.is_fife is true, attach the FIFE url parameters to this url.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__LayoutAttributes": {
            "description": "Describes a presentation of a collection\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__LayoutAttributes",
            "properties": {
                "cardDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe_LayoutAttributes_CardDetails",
                    "description": "Card details. Required if LayoutTemplate.id == CARD. Only one\ntemplate can be CARD in the list of template ids."
                },
                "layoutTemplate": {
                    "$ref": "GoogleInternalPlayMoviesDfe_LayoutAttributes_LayoutTemplate",
                    "description": "[Required]\nTemplates to be used to present the given collection"
                },
                "tagDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe_LayoutAttributes_TagDetails",
                    "description": "Tag cluster details.\nRequired if LayoutTemplate.id == TAG_CLUSTER. Only one template\ncan be TAG_CLUSTER in the list of template ids."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Locale": {
            "description": "Describes the location and the language in use by the client.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__Locale",
            "properties": {
                "country": {
                    "description": "Required. III country code that the user is located in. This should be\nthe \"Play Country\" for any user that has it. If this field is not\nset, the backend will try to determine the play country for the user,\nor country based on the source IP location if Play country is unavailable.\nThe country determined by the backend will be returned in\na ResponseContext if such a lookup has been made, and should then\nbe set in this field for subsequent requests.\nSetting this field will avoid the extra latency of making that\nquery on every call.",
                    "type": "string"
                },
                "language": {
                    "description": "Required. III language code for the user interface selected on the device/app.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Money": {
            "description": "------------------------------------------------------------------------------\nMessage representing presentable money. Does not simply use the Checkout\ndefinition of Money because we need formatted Money for display in UIs.\n## Used for item price, taxes, fees, and cart total.\n\nNext id: 4",
            "id": "GoogleInternalPlayMoviesDfe__Money",
            "properties": {
                "currencyCode": {
                    "description": "Required if micros > 0.\nThe upper-case, III currency code. For possible values, see:\n  google3/i18n/identifiers/currencycode.h\n  google3/java/com/google/common/money/CurrencyCode.java",
                    "type": "string"
                },
                "formattedAmount": {
                    "description": "Required if micros > 0.\nFormatted amount of the price_micros field. This can be presented in the UI\nas the actual amount.",
                    "type": "string"
                },
                "micros": {
                    "description": "Only set when micros > 0.\nOffered price in the micro currency-unit, for example, micro dollar.\nThis is to be consistent with finsky and leaves space for supporting\nmicro-payment if required in the future. This can be used for sorting\nbased on the price.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__NewAction": {
            "id": "GoogleInternalPlayMoviesDfe__NewAction",
            "properties": {
                "action": {
                    "description": "Required.",
                    "enum": [
                        "ACTION_UNSPECIFIED",
                        "BUY",
                        "RENT",
                        "BUY_OR_RENT",
                        "PREORDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "New to buy for the first time.",
                        "Available to rent for the first time.",
                        "Simultaneously available to buy or rent for the first time.",
                        "Available to pre-order for the first time."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__NewlyUpdated": {
            "id": "GoogleInternalPlayMoviesDfe__NewlyUpdated",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Offer": {
            "description": "Describes a purchase offer (\"price tag\") of the given content.\nNext id: 11",
            "id": "GoogleInternalPlayMoviesDfe__Offer",
            "properties": {
                "expiration": {
                    "description": "Optional. If set, the offer will expire at that time and should not be used by the\nclient.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "format": {
                    "$ref": "GoogleInternalPlayMoviesDfe_Offer_Format",
                    "description": "Optional. For content that includes video - the format of the video (HD/UHD, etc)."
                },
                "fullPrice": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Money",
                    "description": "Optional. The original price from which the real price is being discounted.\nOnly set when there is a discount."
                },
                "id": {
                    "description": "Required. A unique identifier of the offer. The users must send this back to the API\nwhen a service requires an offer as input.",
                    "type": "string"
                },
                "offerType": {
                    "description": "Required. The kind of entitlement the customer is getting.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_RENTAL",
                        "TYPE_PURCHASE",
                        "TYPE_SUBSCRIPTION",
                        "TYPE_FREE_WITH_ADS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Video On Demand: Rentals have a start date and expiration date.",
                        "Electronic Sell-Through: user bought the asset.",
                        "Subscription requiring a recurring payment.",
                        "The offer is for a free to watch with Ads.\nAn asset can have both TVOD offers (TYPE_PURCHASE, TYPE_RENTAL) and AVOD\noffer (TYPE_FREE_WITH_ADS)."
                    ],
                    "type": "string"
                },
                "preorderDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe__PreorderDetails",
                    "description": "Optional. Describes a \"preorder\" offer - an option for a user to purchase\ncontent before it is available. If set - the offer is a preorder."
                },
                "price": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Money",
                    "description": "Required. Describes the actual price and currency."
                },
                "rentalDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RentalDetails",
                    "description": "Optional. Description of the retail if offer type is RENTAL."
                },
                "skipPurchaseFlow": {
                    "description": "Optional. If set to true, purchase flow and FOPs are not required, and the client\ncan call |GrantPurchase| on this offer directly.",
                    "type": "boolean"
                },
                "subscriptionDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe__SubscriptionDetails",
                    "description": "Optional. Description of the subscription if offer type is SUBSCRIPTION."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__OfferPreference": {
            "description": "Describes the offer preference for offer floating.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__OfferPreference",
            "properties": {
                "quality": {
                    "description": "Offer format (quality) to float. If set - the offer of the type defined\nabove and the format defined here should be floated. If not set - the\nlowest offer of the type above should be floated.",
                    "enum": [
                        "QUALITY_UNSPECIFIED",
                        "QUALITY_SD",
                        "QUALITY_HD",
                        "QUALITY_UHD1",
                        "QUALITY_3D"
                    ],
                    "enumDescriptions": [
                        "",
                        "Standard definition",
                        "High Definition",
                        "UHD offers",
                        "3D-only/VR offers."
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Offer type to float. If set - offer of this type and the format as\ndescribed below should be floated. If not set - the lowest offer for the\nformat defined below should be floated.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_RENTAL",
                        "TYPE_PURCHASE",
                        "TYPE_SUBSCRIPTION",
                        "TYPE_FREE_WITH_ADS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Video On Demand: Rentals have a start date and expiration date.",
                        "Electronic Sell-Through: user bought the asset.",
                        "Subscription requiring a recurring payment.",
                        "The offer is for a free to watch with Ads.\nAn asset can have both TVOD offers (TYPE_PURCHASE, TYPE_RENTAL) and AVOD\noffer (TYPE_FREE_WITH_ADS)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__OwnershipInfo": {
            "description": "Annotation representing the ownership info of a given asset.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfe__OwnershipInfo",
            "properties": {
                "expiration": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Expiration",
                    "description": "Optional. Expiration of the information in this message."
                },
                "purchases": {
                    "description": "Required. The list of all the ways the user can own the asset on Play.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Purchase"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Pagination": {
            "description": "Describes the pagination data in the response.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfe__Pagination",
            "properties": {
                "refreshToken": {
                    "description": "Optional. The client should copy this token to the PaginationService request to get\nthe refreshed 1st page of the collection. This field will be populated if\nthe collection can be refreshed outside of its original source (i.e.: if\nthe collection is delivered as part of a feed and can be fetched outside of\nit. Collection may not be fetched outside the original source if the\ncontext matters, e.g. search results), and for those refresh_token will not\nbe set.",
                    "type": "string"
                },
                "reverseToken": {
                    "description": "Optional. Token to fetch the previous page. Token should be sent to the\nPaginationService. If empty/not set - no previous page is available.\nThe assets will be returned in normal order (e.g. 3,4,5), not reversed.",
                    "type": "string"
                },
                "token": {
                    "description": "Optional. Token to fetch the next page. Token should be sent to the\nPaginationService. If empty/not set - no next page is available.",
                    "type": "string"
                },
                "totalEstimate": {
                    "description": "Optional. If not 0, an estimate provided by the service regarding the total of the\nitems in all the pages. May not be precise.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__PaginationParameters": {
            "description": "Message describing pagination parameters in the request.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__PaginationParameters",
            "properties": {
                "maxAssets": {
                    "description": "Optional. Please see each endpoint for valid range and default value if invalid or\nnot set. Sets the limit to the count of assets embedded in a collection in\nthe response. Will be applied to all the collections that embed assets.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxCollections": {
                    "description": "Optional. Valid range: [1 - 10]. If not set or invalid, 10 will be assumed.\nIf the response is a hierarchy of collections, this sets the limit to the\ncount of collections embedded in a collection. Will be applied to all the\ncollections that embed collections.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__PersonalityDetails": {
            "description": "Next id: 2",
            "id": "GoogleInternalPlayMoviesDfe__PersonalityDetails",
            "properties": {
                "role": {
                    "description": "Required.",
                    "enum": [
                        "ROLE_UNSPECIFIED",
                        "ACTOR",
                        "DIRECTOR",
                        "PRODUCER",
                        "WRITER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__PlaylistInfo": {
            "description": "Contains all necessary information needed to describe assets in a playlist\n(returned by the Discovery.GetPlaylist endpoint).\nNext id: 4",
            "id": "GoogleInternalPlayMoviesDfe__PlaylistInfo",
            "properties": {
                "lastPlayActionTime": {
                    "description": "Optional. The timestamp of the latest play action.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "playbackPosition": {
                    "description": "Optional. Playback position.\nThe position is measured as a duration from the beginning of the content.",
                    "format": "google-duration",
                    "type": "string"
                },
                "positionState": {
                    "description": "Optional. If the playback position has special meaning for the clients (e.g. played\npast the credits), this will contain a value.",
                    "enum": [
                        "POSITION_UNSPECIFIED",
                        "PLAYED_PAST_START_OF_CREDITS"
                    ],
                    "enumDescriptions": [
                        "",
                        "The playback position is after the start of the credits."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__PreorderDetails": {
            "description": "Next Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__PreorderDetails",
            "properties": {
                "onSaleAvailable": {
                    "description": "Required. Epoch time the pre-order will be available for sale.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "onSaleDate": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Date",
                    "description": "Required. Client should use this field to display date when the pre-order will be\navailable for sale. For example on_sale_available can be 1535868000 which\ncorresponds to September 2, 2018 1:00 am EST and\nSeptember 1, 2018 11:00 pm PST. But if on_sale_date is September 2, 2018\nthen client should use it regardless of local time zone."
                },
                "onSaleDisplay": {
                    "description": "Required. Epoch time the client is allowed to display the on-sale date (the\non_sale_timestamp_sec and on_sale_date). Until this is in the past, the\ndetails page should not show the expected availability date.\nNote: this time does not affect the display of the pre-order offer.\n      It only affects whether to display the on-sale date or not.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__PresentationColor": {
            "description": "Describes a color that should be used when presenting the item to which this\nmessage refers.\n\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__PresentationColor",
            "properties": {
                "background": {
                    "$ref": "GoogleInternalPlayMoviesDfe_PresentationColor_Color",
                    "description": "Color for the item's background."
                },
                "text": {
                    "$ref": "GoogleInternalPlayMoviesDfe_PresentationColor_Color",
                    "description": "Color for the item's text."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__PriceDrop": {
            "id": "GoogleInternalPlayMoviesDfe__PriceDrop",
            "properties": {
                "purchaseType": {
                    "description": "Required.",
                    "enum": [
                        "PURCHASE_TYPE_UNSPECIFIED",
                        "BUY",
                        "RENT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Buy price has dropped.",
                        "Rent price has dropped."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__PromotionDetails": {
            "description": "Annotation for VOUCHER asset that contains promotion information.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfe__PromotionDetails",
            "properties": {
                "coupon": {
                    "$ref": "GoogleInternalPlayMoviesDfe_PromotionDetails_Coupon",
                    "description": "Coupon available for redemption."
                },
                "description": {
                    "description": "Optional. Promotion description text. If empty - the promotion only has the title.",
                    "type": "string"
                },
                "images": {
                    "description": "Optional. Image(s) for promotion banner.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Image"
                    },
                    "type": "array"
                },
                "title": {
                    "description": "Required. Title of the promotion.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Purchase": {
            "description": "Next id: 6",
            "id": "GoogleInternalPlayMoviesDfe__Purchase",
            "properties": {
                "details": {
                    "$ref": "GoogleInternalPlayMoviesDfe_Purchase_PurchaseDetails",
                    "description": "Required. Information describing the purchase."
                },
                "familySharingInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe__FamilySharingInfo",
                    "description": "Optional. Family sharing info associated with this asset. This is\npopulated only if user is part of a \"family\" (go/unicorn-families)."
                },
                "id": {
                    "description": "Required. A globally unique identifier of this purchase.\nClient will use it as purchase_id in Cancel/Share Purchase Requests.",
                    "type": "string"
                },
                "purchaseState": {
                    "description": "Required. The state of the purchase.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "ACTIVE",
                        "PRE_ORDER"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "rentalDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RentalDetails",
                    "description": "Optional. If the purchase is of details.purchase_type = TYPE_RENTAL, this\nmust be filled."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__RecurringPeriod": {
            "description": "Describes a recurring period. Recurring period is based on calendar and not\na count of seconds, as such needs a different presentation than a regular\nduration.\nNext Id: 3.",
            "id": "GoogleInternalPlayMoviesDfe__RecurringPeriod",
            "properties": {
                "count": {
                    "description": "Required. Count of units of the given unit of period.",
                    "format": "int64",
                    "type": "string"
                },
                "unit": {
                    "description": "Required. Type of period.",
                    "enum": [
                        "PERIOD_UNIT_UNSPECIFIED",
                        "SECOND",
                        "MINUTE",
                        "HOUR",
                        "DAY",
                        "WEEK",
                        "MONTH",
                        "YEAR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__RentalDetails": {
            "description": "Information about a rental in an offer or a purchase message.\nPresent only if the offer or purchase type is RENTAL.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__RentalDetails",
            "properties": {
                "dualTimers": {
                    "$ref": "GoogleInternalPlayMoviesDfe_RentalDetails_DualTimers",
                    "description": "The rented item expires based on two timers. A long timer and a short\ntimer. The long timer starts at purchase time. The short timer starts\nat the first playback time. When either timer expires, the user will\nnot be able to start the playback."
                },
                "fixedExpirationTimestamp": {
                    "description": "The rented item expires at a fixed timestamp regardless of puchase\ntime and first playback time.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__RequestContext": {
            "description": "Next Id: 6",
            "id": "GoogleInternalPlayMoviesDfe__RequestContext",
            "properties": {
                "clientProfile": {
                    "$ref": "GoogleInternalPlayMoviesDfe__ClientProfile",
                    "description": "[Required]."
                },
                "cookie": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Cookie",
                    "description": "[Optional]. Should be set if a previous API call had a cookie in the\nresponse."
                },
                "deviceProfile": {
                    "$ref": "GoogleInternalPlayMoviesDfe__DeviceProfile",
                    "description": "[Required]."
                },
                "experiments": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Experiments",
                    "description": "[Optional]. Should be filled if available from the previous API response."
                },
                "locale": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Locale",
                    "description": "[Required]."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__RequestedTags": {
            "description": "For tagged browsing experience, this message encapsulates the information\nneeded to be in the request.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__RequestedTags",
            "properties": {
                "selectedTagId": {
                    "description": "Optional. Tags selected by the user according to the backend. If this differs from\nthe user selection, application should use this as source of truth.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tagDbId": {
                    "description": "Required. Current version of the tags the client has. This should come from the\nTagDb.id field of the tag database stored by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ResponseContext": {
            "description": "Next Id: 7",
            "id": "GoogleInternalPlayMoviesDfe__ResponseContext",
            "properties": {
                "cookie": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Cookie",
                    "description": "[Optional]. Will be set if available."
                },
                "debugInfo": {
                    "$ref": "GoogleInternalPlayMoviesDfe__DebugInfo",
                    "description": "[Optional].\nThis message will be used for tracing/debug only. It should not be used in\nany functional/business logic. On app side, this message should be logged\nif set in any response. The existence of this message is never guaranteed\nand shouldn't be expected."
                },
                "deprecationDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe__DeprecationDetails",
                    "description": "[Optional]. Will be set if available."
                },
                "expiration": {
                    "$ref": "GoogleInternalPlayMoviesDfe__Expiration",
                    "description": "[Required]. Will be set in any response, unless the service returns an\nerror."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__SellerInformation": {
            "description": "Describes a seller and whether the prices include VAT.\nNext id: 3",
            "id": "GoogleInternalPlayMoviesDfe__SellerInformation",
            "properties": {
                "includesVat": {
                    "description": "Indicates whether 'All prices include VAT' message should be shown on\nthe details page.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Seller entity name to be shown to the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Sentiment": {
            "description": "User sentiment selection representation. The user sentiment is keyed by the\nuser id (gaia) and document id (asset id) in the storage and requires both\nto be in the request for fetch/update operations.\nNext Id: 3",
            "id": "GoogleInternalPlayMoviesDfe__Sentiment",
            "properties": {
                "selectionTime": {
                    "description": "Required for update request.\nTimestamp when the user made the action.\nShould be set when the selection took place. Note that for the multiple\nselections with the same timestamp the order is undefined.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "state": {
                    "description": "Required. Sentiment thumb state reported.",
                    "enum": [
                        "SENTIMENT_STATE_UNSPECIFIED",
                        "THUMBS_UP",
                        "THUMBS_DOWN",
                        "THUMBS_NONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Positive sentiment.",
                        "Negative sentiment.",
                        "For Update request, clear previous selection.\nNot relevant for Fetch request."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__SubscriptionDetails": {
            "description": "Next Id: 5",
            "id": "GoogleInternalPlayMoviesDfe__SubscriptionDetails",
            "properties": {
                "recurringPeriod": {
                    "$ref": "GoogleInternalPlayMoviesDfe__RecurringPeriod",
                    "description": "Required. Billing period for the subscription (every how often price_micros\nis charged)."
                },
                "subscriptionApp": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Optional. Application in which the user needs to make the subscription to gain\naccess to the content."
                },
                "subscriptionType": {
                    "description": "Required. Type of subscription.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "PLAY_IN_APP_SUBSCRIPTION",
                        "PLAY_MOVIES_SUBSCRIPTION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Play in-app subscription offered by third-party app.\nRecurring payment may be managed by Play.",
                        "Subscription offered by play movies app."
                    ],
                    "type": "string"
                },
                "subscriptionUri": {
                    "description": "Required. Uri where subscription can be purchased.\nPotential schemes:\nsubs : deeplink to the in-app purchase for an app available on\n       Play Store.\nhttp/https: A web link, should be opened in a webview/web browser.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__SuggestionReason": {
            "description": "Annotation describing why the asset was floated to the user.\nNext id: 2",
            "id": "GoogleInternalPlayMoviesDfe__SuggestionReason",
            "properties": {
                "reason": {
                    "description": "Required. Localized reason of recommendation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__Tag": {
            "description": "A tag is a categorical label, describing content. Each asset has a\nnumber of tags, and a user selects tags to narrow the selection of\nassets in their view when browsing a collection.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfe__Tag",
            "properties": {
                "accessibilityText": {
                    "description": "Required. Text to be presented to an accessibility reader. Localized.",
                    "type": "string"
                },
                "id": {
                    "description": "Required. ID for a tag.",
                    "type": "string"
                },
                "subDimension": {
                    "$ref": "GoogleInternalPlayMoviesDfe__TagDimension",
                    "description": "Optional. Some dimensions (e.g., Genre) have sub-dimensions. A sub-dimension is\nshown when its parent tag has been selected. For example, a \"Action\"\ngenre dimension may have sub-dimension with tags like \"Top Rated\",\n\"Top Selling\", etc."
                },
                "text": {
                    "description": "Required. Label displayed in the UI. Localized.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__TagDb": {
            "description": "A list of tags to be displayed in the client, organized in dimensions. The\nclient may cache tags for short periods of time but should always tell the\nAPI the id of the cached message and update it if the API sends a new\nmessage.\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__TagDb",
            "properties": {
                "dimension": {
                    "description": "Optional. All dimensions of tags to be shown in the client. The order of dimensions\nin this field determines the display order in the client.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__TagDimension"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Required. An id for this DB.",
                    "type": "string"
                },
                "tagExclusion": {
                    "description": "Optional. If a subset of n-1 tags from any of these sets is selected in the client,\nremove the n-th tag from the list of selectable tags.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__TagExclusion"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__TagDimension": {
            "description": "A collection of tags, with the property that at most one tag in this\ndimension should ever be selected.  The order of tags in field tag()\ndetermines the display order in the client.\nNext Id: 4",
            "id": "GoogleInternalPlayMoviesDfe__TagDimension",
            "properties": {
                "id": {
                    "description": "Required. Unique ID for this dimension (e.g., \u201cVERTICAL\u201d, \"GENRE\",\n\u201cACTION_SUB_THEME\u201d). Tags with the same dimension id will be treated as\nmutually exclusive in the UI.",
                    "type": "string"
                },
                "tag": {
                    "description": "Required. List of tags in this dimension.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Tag"
                    },
                    "type": "array"
                },
                "tagColor": {
                    "description": "Required. Color in which tags in this dimension should be rendered, in\n0xRRGGBB format.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__TagExclusion": {
            "description": "An unordered set of tags, identified by Tag.id. For a TagExclusion\nset of n elements, if n-1 tags from the set are all selected in the client,\nthe remaining tag is removed from the client's list of selectable tags.\nThese sets define mutually exclusive tags across dimensions.  For example, to\nensure that the \"Rental\" tag is never shown if the \"TV\" tag is selected\n(because there are no TV shows for rent), a TagExclusion message of {\ntag_id: \"rental\", tag_id: \"TV\" } would be inserted here.\nNext Id: 2",
            "id": "GoogleInternalPlayMoviesDfe__TagExclusion",
            "properties": {
                "tagId": {
                    "description": "Required. A set of IDs of tags that should not be shown in the client at the same\ntime.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__ValidationErrorDescription": {
            "description": "Validation error descriptor message. Describes errors occurred when\nvalidating a request.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfe__ValidationErrorDescription",
            "properties": {
                "details": {
                    "description": "Optional. Additional optional details. If set, may be useful for logging debugging.",
                    "type": "string"
                },
                "error": {
                    "description": "Required. Type of validation error.",
                    "enum": [
                        "ERROR_UNSPECIFIED",
                        "AUTH_ERROR",
                        "INVALID_FIELD",
                        "MISSING_FIELD",
                        "API_NOT_ALLOWED"
                    ],
                    "enumDescriptions": [
                        "Invalid value - uninitialized.",
                        "Authentication error - request unauthenticated but requires\nauthentication.",
                        "The value in the field is invalid.",
                        "The value in the field is required, but not set.",
                        "The API call is not allowed."
                    ],
                    "type": "string"
                },
                "fieldName": {
                    "description": "Required. The name of the field where validation failed, including the encapsulating\nfields.",
                    "type": "string"
                },
                "fieldValue": {
                    "description": "Required. The value of the field that failed the validation. If the original field\ntype is a proto - a string dump of the proto will be given.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__WatchAction": {
            "description": "Watch actions describe what the user can do with content. This is in the\ncontext of Primetime (go/primetime). The app can use the WatchAction to\ndecide whether to invoke a third party app for a certain content, and will\nknow how to do it based on the data in this structure.\n\nNext Id: 8",
            "id": "GoogleInternalPlayMoviesDfe__WatchAction",
            "properties": {
                "availabilityEndDate": {
                    "description": "Required. Time when watch action stops being available (in seconds since\nunix epoch). The WatchAction should no longer be used beyond this time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "availabilityStartDate": {
                    "description": "Optional. Time when watch action became available (in seconds since unix\nepoch). This time should always be in the past.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "distributor": {
                    "$ref": "GoogleInternalPlayMoviesDfe__AssetId",
                    "description": "Required. Distributor id who supplied watch action."
                },
                "id": {
                    "$ref": "GoogleInternalPlayMoviesDfe__WatchActionId",
                    "description": "Required. A unique identifier for this watch action. Two watch actions with this\nfield being equal are identical."
                },
                "offers": {
                    "description": "The list of all the ways in which the user can gain ownership of the asset\non Play. Only watch actions with FREE or TRANSACTIONAL watch restriction\ncan have offers.",
                    "items": {
                        "$ref": "GoogleInternalPlayMoviesDfe__Offer"
                    },
                    "type": "array"
                },
                "restriction": {
                    "description": "Required. Restriction when asset can be watched.",
                    "enum": [
                        "WATCH_RESTRICTION_UNSPECIFIED",
                        "SUBSCRIPTION_REQUIRED",
                        "FREE",
                        "TRANSACTIONAL"
                    ],
                    "enumDescriptions": [
                        "Invalid value. Ignore this watch action.",
                        "Can only be invoked if the user has an appropriate subscription in the\nlibrary. If the app doesn't support checking for Primetime subscriptions\nin the library - this watch action should be skipped.",
                        "No restrictions.",
                        "Transactional. Each item should be rented/purchased in a specific\ntransaction (as opposed to a blanket subscription or completely free)."
                    ],
                    "type": "string"
                },
                "supportedApp": {
                    "$ref": "GoogleInternalPlayMoviesDfe_WatchAction_SupportedApp",
                    "description": "Required. Application required to watch asset."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__WatchActionId": {
            "description": "A unique identifier for a watch action. Two watch actions with this field\nbeing equal are identical.",
            "id": "GoogleInternalPlayMoviesDfe__WatchActionId",
            "properties": {
                "id": {
                    "description": "Required.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlayMoviesDfe__WatchEvent": {
            "description": "Represents an event based on the user watching a movie or show.\nIf the user used the normal Play Movies flow to watch, then the events\nassociated with this are playback position updates. If the show or movie is\n3rd party content (Primetime), then the associated events are WatchActions.\nFor UserData Fetch requests the most recent watch event by timestamp is\nreturned.\nNext Id: 5",
            "id": "GoogleInternalPlayMoviesDfe__WatchEvent",
            "properties": {
                "episodeDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe_WatchEvent_EpisodeDetails",
                    "description": "Optional. If the asset with which this annotation is associated\nis of type TV_SHOW then this field will be set because the asset id is\nfor the show and clients also need the episode and season asset ids."
                },
                "playback": {
                    "$ref": "GoogleInternalPlayMoviesDfe_WatchEvent_Playback"
                },
                "updateTime": {
                    "description": "Optional. If set, denotes the last update time of the event.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "watchActionDetails": {
                    "$ref": "GoogleInternalPlayMoviesDfe_WatchEvent_WatchActionDetails"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Play Movies Device Front End Private API (QA)",
    "version": "v1beta",
    "version_module": true
}