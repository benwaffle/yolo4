{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "View and manage your data across Google Cloud Platform services"
                },
                "https://www.googleapis.com/auth/jobs": {
                    "description": "Manage job postings"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://test-jobs.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Test Talent Solution",
    "description": "Cloud Talent Solution provides the capability to create, read, update, and delete job postings, as well as search jobs based on keywords and filters.\n",
    "discoveryVersion": "v1",
    "documentationLink": "https://cloud.google.com/talent-solution/job-search/docs/",
    "fullyEncodeReservedExpansion": true,
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "jobs:v4beta1",
    "kind": "discovery#restDescription",
    "name": "jobs",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "projects": {
            "methods": {
                "complete": {
                    "description": "Completes the specified prefix with keyword suggestions.\nIntended for use by a job search auto-complete search box.",
                    "flatPath": "v4beta1/projects/{projectsId}:complete",
                    "httpMethod": "GET",
                    "id": "jobs.projects.complete",
                    "parameterOrder": [
                        "parent"
                    ],
                    "parameters": {
                        "company": {
                            "description": "If provided, restricts completion to specified company.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/foo\".",
                            "location": "query",
                            "type": "string"
                        },
                        "languageCodes": {
                            "description": "The list of languages of the query. This is\nthe BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).\n\nFor CompletionType.JOB_TITLE type, only open jobs with the same\nlanguage_codes are returned.\n\nFor CompletionType.COMPANY_NAME type,\nonly companies having open jobs with the same language_codes are\nreturned.\n\nFor CompletionType.COMBINED type, only open jobs with the same\nlanguage_codes or companies having open jobs with the same\nlanguage_codes are returned.\n\nThe maximum number of allowed characters is 255.",
                            "location": "query",
                            "repeated": true,
                            "type": "string"
                        },
                        "pageSize": {
                            "description": "Required. Completion result count.\n\nThe maximum allowed page size is 10.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "parent": {
                            "description": "Required. Resource name of tenant the completion is performed within.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/foo\".",
                            "location": "path",
                            "pattern": "^projects/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "query": {
                            "description": "Required. The query used to generate suggestions.\n\nThe maximum number of allowed characters is 255.",
                            "location": "query",
                            "type": "string"
                        },
                        "scope": {
                            "description": "The scope of the completion. The defaults is CompletionScope.PUBLIC.",
                            "enum": [
                                "COMPLETION_SCOPE_UNSPECIFIED",
                                "TENANT",
                                "PUBLIC"
                            ],
                            "location": "query",
                            "type": "string"
                        },
                        "type": {
                            "description": "The completion topic. The default is CompletionType.COMBINED.",
                            "enum": [
                                "COMPLETION_TYPE_UNSPECIFIED",
                                "JOB_TITLE",
                                "COMPANY_NAME",
                                "COMBINED"
                            ],
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v4beta1/{+parent}:complete",
                    "response": {
                        "$ref": "CompleteQueryResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/jobs"
                    ]
                }
            },
            "resources": {
                "clientEvents": {
                    "methods": {
                        "create": {
                            "description": "Report events issued when end user interacts with customer's application\nthat uses Cloud Talent Solution. You may inspect the created events in\n[self service\ntools](https://console.cloud.google.com/talent-solution/overview).\n[Learn\nmore](https://cloud.google.com/talent-solution/docs/management-tools)\nabout self service tools.",
                            "flatPath": "v4beta1/projects/{projectsId}/clientEvents",
                            "httpMethod": "POST",
                            "id": "jobs.projects.clientEvents.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. Resource name of the tenant under which the event is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created, for example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/clientEvents",
                            "request": {
                                "$ref": "CreateClientEventRequest"
                            },
                            "response": {
                                "$ref": "ClientEvent"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                },
                "companies": {
                    "methods": {
                        "create": {
                            "description": "Creates a new company entity.",
                            "flatPath": "v4beta1/projects/{projectsId}/companies",
                            "httpMethod": "POST",
                            "id": "jobs.projects.companies.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. Resource name of the tenant under which the company is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created, for example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/companies",
                            "request": {
                                "$ref": "CreateCompanyRequest"
                            },
                            "response": {
                                "$ref": "Company"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "delete": {
                            "description": "Deletes specified company.\nPrerequisite: The company has no jobs associated with it.",
                            "flatPath": "v4beta1/projects/{projectsId}/companies/{companiesId}",
                            "httpMethod": "DELETE",
                            "id": "jobs.projects.companies.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The resource name of the company to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/foo/companies/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/companies/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "get": {
                            "description": "Retrieves specified company.",
                            "flatPath": "v4beta1/projects/{projectsId}/companies/{companiesId}",
                            "httpMethod": "GET",
                            "id": "jobs.projects.companies.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The resource name of the company to be retrieved.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/api-test-project/tenants/foo/companies/bar\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/api-test-project/companies/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/companies/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "response": {
                                "$ref": "Company"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "list": {
                            "description": "Lists all companies associated with the project.",
                            "flatPath": "v4beta1/projects/{projectsId}/companies",
                            "httpMethod": "GET",
                            "id": "jobs.projects.companies.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "pageSize": {
                                    "description": "The maximum number of companies to be returned, at most 100.\nDefault is 100 if a non-positive number is provided.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The starting indicator from which to return results.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Required. Resource name of the tenant under which the company is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\".\n\nIf tenant id is unspecified, the default tenant will be used, for\nexample, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "requireOpenJobs": {
                                    "description": "Set to true if the companies requested must have open jobs.\n\nDefaults to false.\n\nIf true, at most page_size of companies are fetched, among which\nonly those with open jobs are returned.",
                                    "location": "query",
                                    "type": "boolean"
                                }
                            },
                            "path": "v4beta1/{+parent}/companies",
                            "response": {
                                "$ref": "ListCompaniesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "patch": {
                            "description": "Updates specified company.",
                            "flatPath": "v4beta1/projects/{projectsId}/companies/{companiesId}",
                            "httpMethod": "PATCH",
                            "id": "jobs.projects.companies.patch",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required during company update.\n\nThe resource name for a company. This is generated by the service when a\ncompany is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/companies/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/companies/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "request": {
                                "$ref": "UpdateCompanyRequest"
                            },
                            "response": {
                                "$ref": "Company"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                },
                "jobs": {
                    "methods": {
                        "batchCreate": {
                            "description": "Begins executing a batch create jobs operation.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs:batchCreate",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.batchCreate",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/jobs:batchCreate",
                            "request": {
                                "$ref": "BatchCreateJobsRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "batchDelete": {
                            "description": "Deletes a list of Jobs by filter.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs:batchDelete",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.batchDelete",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "filter": {
                                    "description": "Required. The filter string specifies the jobs to be deleted.\n\nSupported operator: =, AND\n\nThe fields eligible for filtering are:\n\n* `companyName` (Required)\n* `requisitionId` (Required)\n\nSample Query: companyName = \"projects/foo/companies/bar\" AND\nrequisitionId = \"req-1\"",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/jobs:batchDelete",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "batchUpdate": {
                            "description": "Begins executing a batch update jobs operation.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs:batchUpdate",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.batchUpdate",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/jobs:batchUpdate",
                            "request": {
                                "$ref": "BatchUpdateJobsRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "create": {
                            "description": "Creates a new job.\n\nTypically, the job becomes searchable within 10 seconds, but it may take\nup to 5 minutes.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified a default tenant\nis created. For example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/jobs",
                            "request": {
                                "$ref": "CreateJobRequest"
                            },
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "delete": {
                            "description": "Deletes the specified job.\n\nTypically, the job becomes unsearchable within 10 seconds, but it may take\nup to 5 minutes.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs/{jobsId}",
                            "httpMethod": "DELETE",
                            "id": "jobs.projects.jobs.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The resource name of the job to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For\nexample, \"projects/foo/tenants/bar/jobs/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/jobs/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/jobs/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "get": {
                            "description": "Retrieves the specified job, whose status is OPEN or recently EXPIRED\nwithin the last 90 days.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs/{jobsId}",
                            "httpMethod": "GET",
                            "id": "jobs.projects.jobs.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The resource name of the job to retrieve.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For\nexample, \"projects/foo/tenants/bar/jobs/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/jobs/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/jobs/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "list": {
                            "description": "Lists jobs by filter.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs",
                            "httpMethod": "GET",
                            "id": "jobs.projects.jobs.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "filter": {
                                    "description": "Required. The filter string specifies the jobs to be enumerated.\n\nSupported operator: =, AND\n\nThe fields eligible for filtering are:\n\n* `companyName` (Required)\n* `requisitionId`\n* `status` Available values: OPEN, EXPIRED, ALL. Defaults to\nOPEN if no value is specified.\n\nSample Query:\n\n* companyName = \"projects/foo/tenants/bar/companies/baz\"\n* companyName = \"projects/foo/tenants/bar/companies/baz\" AND\nrequisitionId = \"req-1\"\n* companyName = \"projects/foo/tenants/bar/companies/baz\" AND\nstatus = \"EXPIRED\"",
                                    "location": "query",
                                    "type": "string"
                                },
                                "jobView": {
                                    "description": "The desired job attributes returned for jobs in the\nsearch response. Defaults to JobView.JOB_VIEW_FULL if no value is\nspecified.",
                                    "enum": [
                                        "JOB_VIEW_UNSPECIFIED",
                                        "JOB_VIEW_ID_ONLY",
                                        "JOB_VIEW_MINIMAL",
                                        "JOB_VIEW_SMALL",
                                        "JOB_VIEW_FULL"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "The maximum number of jobs to be returned per page of results.\n\nIf job_view is set to JobView.JOB_VIEW_ID_ONLY, the maximum allowed\npage size is 1000. Otherwise, the maximum allowed page size is 100.\n\nDefault is 100 if empty or a number < 1 is specified.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The starting point of a query result.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/jobs",
                            "response": {
                                "$ref": "ListJobsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "patch": {
                            "description": "Updates specified job.\n\nTypically, updated contents become visible in search results within 10\nseconds, but it may take up to 5 minutes.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs/{jobsId}",
                            "httpMethod": "PATCH",
                            "id": "jobs.projects.jobs.patch",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required during job update.\n\nThe resource name for the job. This is generated by the service when a\njob is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For\nexample, \"projects/foo/tenants/bar/jobs/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/jobs/bar\".\n\nUse of this field in job queries and API calls is preferred over the use of\nrequisition_id since this value is unique.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/jobs/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "request": {
                                "$ref": "UpdateJobRequest"
                            },
                            "response": {
                                "$ref": "Job"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "recommendProfiles": {
                            "description": "Recommend profiles for a given job.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs/{jobsId}:recommendProfiles",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.recommendProfiles",
                            "parameterOrder": [
                                "job"
                            ],
                            "parameters": {
                                "job": {
                                    "description": "The job name for get recommendations for.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\".\nFor example, \"projects/foo/tenants/bar/jobs/baz\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/jobs/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+job}:recommendProfiles",
                            "request": {
                                "$ref": "RecommendProfilesRequest"
                            },
                            "response": {
                                "$ref": "RecommendProfilesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "search": {
                            "description": "Searches for jobs using the provided SearchJobsRequest.\n\nThis call constrains the visibility of jobs\npresent in the database, and only returns jobs that the caller has\npermission to search against.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs:search",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.search",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The resource name of the tenant to search within.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/jobs:search",
                            "request": {
                                "$ref": "SearchJobsRequest"
                            },
                            "response": {
                                "$ref": "SearchJobsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "searchForAlert": {
                            "description": "Searches for jobs using the provided SearchJobsRequest.\n\nThis API call is intended for the use case of targeting passive job\nseekers (for example, job seekers who have signed up to receive email\nalerts about potential job opportunities), and has different algorithmic\nadjustments that are targeted to passive job seekers.\n\nThis call constrains the visibility of jobs\npresent in the database, and only returns jobs the caller has\npermission to search against.",
                            "flatPath": "v4beta1/projects/{projectsId}/jobs:searchForAlert",
                            "httpMethod": "POST",
                            "id": "jobs.projects.jobs.searchForAlert",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The resource name of the tenant to search within.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/jobs:searchForAlert",
                            "request": {
                                "$ref": "SearchJobsRequest"
                            },
                            "response": {
                                "$ref": "SearchJobsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                },
                "operations": {
                    "methods": {
                        "get": {
                            "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                            "flatPath": "v4beta1/projects/{projectsId}/operations/{operationsId}",
                            "httpMethod": "GET",
                            "id": "jobs.projects.operations.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the operation resource.",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/operations/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                },
                "resumes": {
                    "methods": {
                        "parse": {
                            "description": "Parses a resume into a Profile. The API attempts to fill out the\nfollowing profile fields if present within the resume:\n\n* personNames\n* addresses\n* emailAddress\n* phoneNumbers\n* personalUris\n* employmentRecords\n* educationRecords\n* skills\n\nNote that some attributes in these fields may not be populated if they're\nnot present within the resume or unrecognizable by the resume parser.\n\nThis API does not save the resume or profile. To create a profile from this\nresume, clients need to call the CreateProfile method again with the\nprofile returned.\n\nThe following list of formats are supported:\n\n* PDF\n* TXT\n* DOC\n* RTF\n* DOCX\n* PNG (only when ParseResumeRequest.enable_ocr is set to `true`,\notherwise an error is thrown)",
                            "flatPath": "v4beta1/projects/{projectsId}/resumes:parse",
                            "httpMethod": "POST",
                            "id": "jobs.projects.resumes.parse",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The resource name of the project.\n\nThe format is \"projects/{project_id}\", for example,\n\"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/resumes:parse",
                            "request": {
                                "$ref": "ParseResumeRequest"
                            },
                            "response": {
                                "$ref": "ParseResumeResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    }
                },
                "tenants": {
                    "methods": {
                        "complete": {
                            "description": "Completes the specified prefix with keyword suggestions.\nIntended for use by a job search auto-complete search box.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}:complete",
                            "httpMethod": "GET",
                            "id": "jobs.projects.tenants.complete",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "company": {
                                    "description": "If provided, restricts completion to specified company.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/foo\".",
                                    "location": "query",
                                    "type": "string"
                                },
                                "languageCodes": {
                                    "description": "The list of languages of the query. This is\nthe BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).\n\nFor CompletionType.JOB_TITLE type, only open jobs with the same\nlanguage_codes are returned.\n\nFor CompletionType.COMPANY_NAME type,\nonly companies having open jobs with the same language_codes are\nreturned.\n\nFor CompletionType.COMBINED type, only open jobs with the same\nlanguage_codes or companies having open jobs with the same\nlanguage_codes are returned.\n\nThe maximum number of allowed characters is 255.",
                                    "location": "query",
                                    "repeated": true,
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Required. Completion result count.\n\nThe maximum allowed page size is 10.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "parent": {
                                    "description": "Required. Resource name of tenant the completion is performed within.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "query": {
                                    "description": "Required. The query used to generate suggestions.\n\nThe maximum number of allowed characters is 255.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "scope": {
                                    "description": "The scope of the completion. The defaults is CompletionScope.PUBLIC.",
                                    "enum": [
                                        "COMPLETION_SCOPE_UNSPECIFIED",
                                        "TENANT",
                                        "PUBLIC"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "The completion topic. The default is CompletionType.COMBINED.",
                                    "enum": [
                                        "COMPLETION_TYPE_UNSPECIFIED",
                                        "JOB_TITLE",
                                        "COMPANY_NAME",
                                        "COMBINED"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}:complete",
                            "response": {
                                "$ref": "CompleteQueryResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "create": {
                            "description": "Creates a new tenant entity.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants",
                            "httpMethod": "POST",
                            "id": "jobs.projects.tenants.create",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. Resource name of the project under which the tenant is created.\n\nThe format is \"projects/{project_id}\", for example,\n\"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/tenants",
                            "request": {
                                "$ref": "CreateTenantRequest"
                            },
                            "response": {
                                "$ref": "Tenant"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "delete": {
                            "description": "Deletes specified tenant.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}",
                            "httpMethod": "DELETE",
                            "id": "jobs.projects.tenants.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The resource name of the tenant to be deleted.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "get": {
                            "description": "Retrieves specified tenant.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}",
                            "httpMethod": "GET",
                            "id": "jobs.projects.tenants.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The resource name of the tenant to be retrieved.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "response": {
                                "$ref": "Tenant"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "list": {
                            "description": "Lists all tenants associated with the project.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants",
                            "httpMethod": "GET",
                            "id": "jobs.projects.tenants.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "pageSize": {
                                    "description": "The maximum number of tenants to be returned, at most 100.\nDefault is 100 if a non-positive number is provided.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The starting indicator from which to return results.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Required. Resource name of the project under which the tenant is created.\n\nThe format is \"projects/{project_id}\", for example,\n\"projects/foo\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}/tenants",
                            "response": {
                                "$ref": "ListTenantsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "patch": {
                            "description": "Updates specified tenant.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}",
                            "httpMethod": "PATCH",
                            "id": "jobs.projects.tenants.patch",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required during tenant update.\n\nThe resource name for a tenant. This is generated by the service when a\ntenant is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}",
                            "request": {
                                "$ref": "UpdateTenantRequest"
                            },
                            "response": {
                                "$ref": "Tenant"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "search": {
                            "description": "Searches for profiles within a tenant.\n\nFor example, search by raw queries \"software engineer in Mountain View\" or\nsearch by structured filters (location filter, education filter, etc.).\n\nSee SearchProfilesRequest for more information.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}:search",
                            "httpMethod": "POST",
                            "id": "jobs.projects.tenants.search",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "parent": {
                                    "description": "Required. The resource name of the tenant to search within.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenants/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+parent}:search",
                            "request": {
                                "$ref": "SearchProfilesRequest"
                            },
                            "response": {
                                "$ref": "SearchProfilesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        },
                        "switchFeature": {
                            "description": "Modify the [rollout_features_map] of a tenant to control the feature\nroll out.",
                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}:switchFeature",
                            "httpMethod": "POST",
                            "id": "jobs.projects.tenants.switchFeature",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The tenant resource name that feature applies to.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                    "location": "path",
                                    "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v4beta1/{+name}:switchFeature",
                            "request": {
                                "$ref": "SwitchFeatureRequest"
                            },
                            "response": {
                                "$ref": "Tenant"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/jobs"
                            ]
                        }
                    },
                    "resources": {
                        "clientEvents": {
                            "methods": {
                                "create": {
                                    "description": "Report events issued when end user interacts with customer's application\nthat uses Cloud Talent Solution. You may inspect the created events in\n[self service\ntools](https://console.cloud.google.com/talent-solution/overview).\n[Learn\nmore](https://cloud.google.com/talent-solution/docs/management-tools)\nabout self service tools.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/clientEvents",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.clientEvents.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. Resource name of the tenant under which the event is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created, for example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/clientEvents",
                                    "request": {
                                        "$ref": "CreateClientEventRequest"
                                    },
                                    "response": {
                                        "$ref": "ClientEvent"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                }
                            }
                        },
                        "companies": {
                            "methods": {
                                "create": {
                                    "description": "Creates a new company entity.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/companies",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.companies.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. Resource name of the tenant under which the company is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created, for example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/companies",
                                    "request": {
                                        "$ref": "CreateCompanyRequest"
                                    },
                                    "response": {
                                        "$ref": "Company"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "delete": {
                                    "description": "Deletes specified company.\nPrerequisite: The company has no jobs associated with it.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/companies/{companiesId}",
                                    "httpMethod": "DELETE",
                                    "id": "jobs.projects.tenants.companies.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The resource name of the company to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/foo/companies/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/companies/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "get": {
                                    "description": "Retrieves specified company.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/companies/{companiesId}",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.companies.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The resource name of the company to be retrieved.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/api-test-project/tenants/foo/companies/bar\".\n\nIf tenant id is unspecified, the default tenant is used, for\nexample, \"projects/api-test-project/companies/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/companies/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Company"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "list": {
                                    "description": "Lists all companies associated with the project.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/companies",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.companies.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "pageSize": {
                                            "description": "The maximum number of companies to be returned, at most 100.\nDefault is 100 if a non-positive number is provided.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The starting indicator from which to return results.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. Resource name of the tenant under which the company is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenant/bar\".\n\nIf tenant id is unspecified, the default tenant will be used, for\nexample, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "requireOpenJobs": {
                                            "description": "Set to true if the companies requested must have open jobs.\n\nDefaults to false.\n\nIf true, at most page_size of companies are fetched, among which\nonly those with open jobs are returned.",
                                            "location": "query",
                                            "type": "boolean"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/companies",
                                    "response": {
                                        "$ref": "ListCompaniesResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "patch": {
                                    "description": "Updates specified company.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/companies/{companiesId}",
                                    "httpMethod": "PATCH",
                                    "id": "jobs.projects.tenants.companies.patch",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required during company update.\n\nThe resource name for a company. This is generated by the service when a\ncompany is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/companies/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/companies/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "request": {
                                        "$ref": "UpdateCompanyRequest"
                                    },
                                    "response": {
                                        "$ref": "Company"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                }
                            }
                        },
                        "conversations": {
                            "methods": {
                                "check": {
                                    "description": "Determine if a conversation with a candidate can be initiated or not.\n\nThis method checks if it's okay for the API client to initiate a\nconversation, as distinct from the [InitiateConversation] method above.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations:check",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.conversations.check",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. Resource name of the tenant to check the conversation.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/conversations:check",
                                    "request": {
                                        "$ref": "CheckConversationRequest"
                                    },
                                    "response": {
                                        "$ref": "CheckConversationResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "converse": {
                                    "description": "Converses with a candidate. The API client can add new response of the\ncandidate to a started conversation.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations/{conversationsId}:converse",
                                    "httpMethod": "PATCH",
                                    "id": "jobs.projects.tenants.conversations.converse",
                                    "parameterOrder": [
                                        "conversationName"
                                    ],
                                    "parameters": {
                                        "conversationName": {
                                            "description": "Required. The resource name for a conversation. This is generated by the service when\na conversation is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/conversations/{conversation_id}\",\nfor example,\n\"projects/api-test-project/tenants/test-tenant/conversations/1234\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/conversations/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+conversationName}:converse",
                                    "request": {
                                        "$ref": "ConverseRequest"
                                    },
                                    "response": {
                                        "$ref": "Conversation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "create": {
                                    "description": "Creates a conversation with a candidate.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.conversations.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. Resource name of the tenant to create conversation in.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/api-test-project/tenants/test-tenant\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/conversations",
                                    "request": {
                                        "$ref": "CreateConversationRequest"
                                    },
                                    "response": {
                                        "$ref": "Conversation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "delete": {
                                    "description": "Deletes a conversation. The data of deleted conversation will be purged\nfrom storage. Please note that the delete is not undo-able.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations/{conversationsId}",
                                    "httpMethod": "DELETE",
                                    "id": "jobs.projects.tenants.conversations.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The resource name for a conversation. This is generated by the service when\na conversation is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/conversations/{conversation_id}\",\nfor example,\n\"projects/api-test-project/tenants/test-tenant/conversations/1234\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/conversations/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "get": {
                                    "description": "Gets details of a conversation.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations/{conversationsId}",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.conversations.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The resource name of the conversation to retrieve.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/conversations/{conversation_id}\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/conversations/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Conversation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "initiate": {
                                    "description": "Initiate a conversation with a candidate.\n\nThis method triggers Google to initiate a conversation on the API client's\nbehalf. If a SCHEDULED,\nIN_PROGRESS,\nIDLE exists, this conversation will be\ninitiated, with a Pub/Sub\nmessage\nsent out. Otherwise, a new conversation will be created, with a Pub/Sub\nmessage\nsent out.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations:initiate",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.conversations.initiate",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant to initiate the conversation.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/conversations:initiate",
                                    "request": {
                                        "$ref": "InitiateConversationRequest"
                                    },
                                    "response": {
                                        "$ref": "InitiateConversationResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "list": {
                                    "description": "Lists conversations, return conversations that meet the filter with all\nConversationStatus except for SCHEDULED, CONVERSATION_STATUS_UNSPECIFIED.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.conversations.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "filter": {
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "The maximum number of conversations to return.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The next_page_token value returned from a previous list request, if any.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. Resource name of the tenant to get conversations for.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/api-test-project/tenants/test-tenant\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/conversations",
                                    "response": {
                                        "$ref": "ListConversationsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "reportEmail": {
                                    "description": "Report that an email has been sent to a candidate.\n\nThis method leaves Google a record of an email sent to a candidate for\nfuture reference (such as rule evaluation, training or data analysis\npurpose). If a SCHEDULED conversation,\nwhose [ContactType] is email, exists, that conversation will be updated to\nFINISHED. Otherwise, a\nFINISHED email conversation will be created",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations:reportEmail",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.conversations.reportEmail",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. Resource name of the tenant to report the email contact.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/conversations:reportEmail",
                                    "request": {
                                        "$ref": "ReportEmailContactRequest"
                                    },
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "updateStatus": {
                                    "description": "Updates status of a conversation with a candidate. The API client can\nupdate the conversation with corresponding status (EXPIRED/CANCELLED) to\nexpire/cancel a conversation.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/conversations/{conversationsId}:updateStatus",
                                    "httpMethod": "PATCH",
                                    "id": "jobs.projects.tenants.conversations.updateStatus",
                                    "parameterOrder": [
                                        "conversationName"
                                    ],
                                    "parameters": {
                                        "conversationName": {
                                            "description": "Required. The resource name for a conversation. This is generated by the service when\na conversation is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/conversations/{conversation_id}\",\nfor example,\n\"projects/api-test-project/tenants/test-tenant/conversations/1234\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/conversations/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+conversationName}:updateStatus",
                                    "request": {
                                        "$ref": "UpdateConversationStatusRequest"
                                    },
                                    "response": {
                                        "$ref": "Conversation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                }
                            }
                        },
                        "jobs": {
                            "methods": {
                                "batchCreate": {
                                    "description": "Begins executing a batch create jobs operation.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs:batchCreate",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.batchCreate",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/jobs:batchCreate",
                                    "request": {
                                        "$ref": "BatchCreateJobsRequest"
                                    },
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "batchDelete": {
                                    "description": "Deletes a list of Jobs by filter.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs:batchDelete",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.batchDelete",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/jobs:batchDelete",
                                    "request": {
                                        "$ref": "BatchDeleteJobsRequest"
                                    },
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "batchUpdate": {
                                    "description": "Begins executing a batch update jobs operation.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs:batchUpdate",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.batchUpdate",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/jobs:batchUpdate",
                                    "request": {
                                        "$ref": "BatchUpdateJobsRequest"
                                    },
                                    "response": {
                                        "$ref": "Operation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "create": {
                                    "description": "Creates a new job.\n\nTypically, the job becomes searchable within 10 seconds, but it may take\nup to 5 minutes.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified a default tenant\nis created. For example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/jobs",
                                    "request": {
                                        "$ref": "CreateJobRequest"
                                    },
                                    "response": {
                                        "$ref": "Job"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "delete": {
                                    "description": "Deletes the specified job.\n\nTypically, the job becomes unsearchable within 10 seconds, but it may take\nup to 5 minutes.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs/{jobsId}",
                                    "httpMethod": "DELETE",
                                    "id": "jobs.projects.tenants.jobs.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The resource name of the job to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For\nexample, \"projects/foo/tenants/bar/jobs/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/jobs/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/jobs/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "get": {
                                    "description": "Retrieves the specified job, whose status is OPEN or recently EXPIRED\nwithin the last 90 days.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs/{jobsId}",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.jobs.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The resource name of the job to retrieve.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For\nexample, \"projects/foo/tenants/bar/jobs/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/jobs/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/jobs/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Job"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "list": {
                                    "description": "Lists jobs by filter.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.jobs.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "filter": {
                                            "description": "Required. The filter string specifies the jobs to be enumerated.\n\nSupported operator: =, AND\n\nThe fields eligible for filtering are:\n\n* `companyName` (Required)\n* `requisitionId`\n* `status` Available values: OPEN, EXPIRED, ALL. Defaults to\nOPEN if no value is specified.\n\nSample Query:\n\n* companyName = \"projects/foo/tenants/bar/companies/baz\"\n* companyName = \"projects/foo/tenants/bar/companies/baz\" AND\nrequisitionId = \"req-1\"\n* companyName = \"projects/foo/tenants/bar/companies/baz\" AND\nstatus = \"EXPIRED\"",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "jobView": {
                                            "description": "The desired job attributes returned for jobs in the\nsearch response. Defaults to JobView.JOB_VIEW_FULL if no value is\nspecified.",
                                            "enum": [
                                                "JOB_VIEW_UNSPECIFIED",
                                                "JOB_VIEW_ID_ONLY",
                                                "JOB_VIEW_MINIMAL",
                                                "JOB_VIEW_SMALL",
                                                "JOB_VIEW_FULL"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "The maximum number of jobs to be returned per page of results.\n\nIf job_view is set to JobView.JOB_VIEW_ID_ONLY, the maximum allowed\npage size is 1000. Otherwise, the maximum allowed page size is 100.\n\nDefault is 100 if empty or a number < 1 is specified.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The starting point of a query result.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The resource name of the tenant under which the job is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/jobs",
                                    "response": {
                                        "$ref": "ListJobsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "listJobPrompts": {
                                    "description": "Lists job prompts by job including both selected job prompts and suggested\njob prompts.\nNote: Disabled linter because job is not a parent of job prompts.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs/{jobsId}:listJobPrompts",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.jobs.listJobPrompts",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "pageSize": {
                                            "description": "The maximum number of job prompts to return.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The next_page_token value returned from a previous list request, if any.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The resource name of the job to retrieve jobPrompt objects for.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\",\nfor example, \"projects/api-test-project/tenants/test-tenant/jobs/1234\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/jobs/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}:listJobPrompts",
                                    "response": {
                                        "$ref": "ListJobPromptsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "patch": {
                                    "description": "Updates specified job.\n\nTypically, updated contents become visible in search results within 10\nseconds, but it may take up to 5 minutes.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs/{jobsId}",
                                    "httpMethod": "PATCH",
                                    "id": "jobs.projects.tenants.jobs.patch",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required during job update.\n\nThe resource name for the job. This is generated by the service when a\njob is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For\nexample, \"projects/foo/tenants/bar/jobs/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/jobs/bar\".\n\nUse of this field in job queries and API calls is preferred over the use of\nrequisition_id since this value is unique.",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/jobs/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "request": {
                                        "$ref": "UpdateJobRequest"
                                    },
                                    "response": {
                                        "$ref": "Job"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "recommendProfiles": {
                                    "description": "Recommend profiles for a given job.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs/{jobsId}:recommendProfiles",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.recommendProfiles",
                                    "parameterOrder": [
                                        "job"
                                    ],
                                    "parameters": {
                                        "job": {
                                            "description": "The job name for get recommendations for.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\".\nFor example, \"projects/foo/tenants/bar/jobs/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/jobs/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+job}:recommendProfiles",
                                    "request": {
                                        "$ref": "RecommendProfilesRequest"
                                    },
                                    "response": {
                                        "$ref": "RecommendProfilesResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "search": {
                                    "description": "Searches for jobs using the provided SearchJobsRequest.\n\nThis call constrains the visibility of jobs\npresent in the database, and only returns jobs that the caller has\npermission to search against.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs:search",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.search",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant to search within.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/jobs:search",
                                    "request": {
                                        "$ref": "SearchJobsRequest"
                                    },
                                    "response": {
                                        "$ref": "SearchJobsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "searchForAlert": {
                                    "description": "Searches for jobs using the provided SearchJobsRequest.\n\nThis API call is intended for the use case of targeting passive job\nseekers (for example, job seekers who have signed up to receive email\nalerts about potential job opportunities), and has different algorithmic\nadjustments that are targeted to passive job seekers.\n\nThis call constrains the visibility of jobs\npresent in the database, and only returns jobs the caller has\npermission to search against.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs:searchForAlert",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.searchForAlert",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant to search within.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenant/bar\". If tenant id is unspecified, a default tenant\nis created. For example, \"projects/foo\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/jobs:searchForAlert",
                                    "request": {
                                        "$ref": "SearchJobsRequest"
                                    },
                                    "response": {
                                        "$ref": "SearchJobsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "setJobPrompts": {
                                    "description": "Set job prompts for job - deletes previous job prompts for the job then\ncreates job prompts provided in request.\nThis API does not directly write to Jobs table, instead updates JobPrompts\ntable.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/jobs/{jobsId}:setJobPrompts",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.jobs.setJobPrompts",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the job to use for jobPrompts.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\",\nfor example, \"projects/api-test-project/tenants/test-tenant/jobs/1234\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/jobs/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}:setJobPrompts",
                                    "request": {
                                        "$ref": "SetJobPromptsRequest"
                                    },
                                    "response": {
                                        "$ref": "SetJobPromptsResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                }
                            }
                        },
                        "profiles": {
                            "methods": {
                                "create": {
                                    "description": "Creates and returns a new profile.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.profiles.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The name of the tenant this profile belongs to.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenants/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/profiles",
                                    "request": {
                                        "$ref": "CreateProfileRequest"
                                    },
                                    "response": {
                                        "$ref": "Profile"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "delete": {
                                    "description": "Deletes the specified profile.\nPrerequisite: The profile has no associated applications or assignments\nassociated.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}",
                                    "httpMethod": "DELETE",
                                    "id": "jobs.projects.tenants.profiles.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. Resource name of the profile to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\". For\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "get": {
                                    "description": "Gets the specified profile.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.profiles.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. Resource name of the profile to get.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\". For\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Profile"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "highlight": {
                                    "description": "Highlight profile with given job and profile",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}:highlight",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.profiles.highlight",
                                    "parameterOrder": [
                                        "profile"
                                    ],
                                    "parameters": {
                                        "profile": {
                                            "description": "Required. Resource name of the candidate to be highlighted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\". For\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+profile}:highlight",
                                    "request": {
                                        "$ref": "HighlightProfileRequest"
                                    },
                                    "response": {
                                        "$ref": "HighlightProfileResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "list": {
                                    "description": "Lists profiles by filter. The order is unspecified.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.profiles.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "filter": {
                                            "description": "The filter string specifies the profiles to be enumerated.\n\nSupported operator: =, AND\n\nThe field(s) eligible for filtering are:\n\n* `externalId`\n* `groupId`\n\nexternalId and groupId cannot be specified at the same time. If both\nexternalId and groupId are provided, the API will return a bad request\nerror.\n\nSample Query:\n\n* externalId = \"externalId-1\"\n* groupId = \"groupId-1\"",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "The maximum number of profiles to be returned, at most 100.\n\nDefault is 100 unless a positive number smaller than 100 is specified.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The token that specifies the current offset (that is, starting result).\n\nPlease set the value to ListProfilesResponse.next_page_token to\ncontinue the list.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The resource name of the tenant under which the profile is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\". For example,\n\"projects/foo/tenants/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "readMask": {
                                            "description": "A field mask to specify the profile fields to be listed in response.\nAll fields are listed if it is unset.\n\nValid values are:\n\n* name",
                                            "format": "google-fieldmask",
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/profiles",
                                    "response": {
                                        "$ref": "ListProfilesResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "patch": {
                                    "description": "Updates the specified profile and returns the updated result.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}",
                                    "httpMethod": "PATCH",
                                    "id": "jobs.projects.tenants.profiles.patch",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required during profile update.\n\nResource name assigned to a profile by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\",\nfor example, \"projects/foo/tenants/bar/profiles/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "request": {
                                        "$ref": "UpdateProfileRequest"
                                    },
                                    "response": {
                                        "$ref": "Profile"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "touch": {
                                    "description": "Mark certain fields as having been recently reviewed.\n\nThis method updates the Profile.field_update_metadata map, refreshing\nthe update time on the specified fields without changing the field values\nthemselves.\n\nUse this method to indicate that data in the profile has been reviewed, and\nno update to that data was necessary.\n\nThe following fields are supported:\n\n* external_id\n* source\n* source_types\n* uri\n* is_hirable\n* create_time\n* update_time\n* candidate_update_time\n* resume_update_time\n* resume\n* person_names\n* addresses\n* email_addresses\n* phone_numbers\n* personal_uris\n* additional_contact_info\n* employment_records\n* education_records\n* skills\n* activities\n* publications\n* patents\n* certifications\n* recruiting_notes\n* custom_attributes\n* group_id\n* external_system\n* source_note\n* primary_responsibilities\n* citizenships\n* work_authorizations\n* employee_types\n* language_code\n* qualification_summary\n* allowed_contact_types\n* preferred_contact_types\n* contact_availability\n* language_fluencies\n* work_preference\n* industry_experiences\n* work_environment_experiences\n* work_availability\n* security_clearances\n* references\n* assessments\n* interviews\n* feature_control_flags",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}:touch",
                                    "httpMethod": "PATCH",
                                    "id": "jobs.projects.tenants.profiles.touch",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. Resource name assigned to a profile by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\". For\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}:touch",
                                    "request": {
                                        "$ref": "TouchProfileRequest"
                                    },
                                    "response": {
                                        "$ref": "Profile"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                }
                            },
                            "resources": {
                                "applications": {
                                    "methods": {
                                        "create": {
                                            "description": "Creates a new application entity.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/applications",
                                            "httpMethod": "POST",
                                            "id": "jobs.projects.tenants.profiles.applications.create",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. Resource name of the profile under which the application is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+parent}/applications",
                                            "request": {
                                                "$ref": "CreateApplicationRequest"
                                            },
                                            "response": {
                                                "$ref": "Application"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "delete": {
                                            "description": "Deletes specified application.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/applications/{applicationsId}",
                                            "httpMethod": "DELETE",
                                            "id": "jobs.projects.tenants.profiles.applications.delete",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The resource name of the application to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/applications/{application_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/applications/qux\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+/applications/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+name}",
                                            "response": {
                                                "$ref": "Empty"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "get": {
                                            "description": "Retrieves specified application.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/applications/{applicationsId}",
                                            "httpMethod": "GET",
                                            "id": "jobs.projects.tenants.profiles.applications.get",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The resource name of the application to be retrieved.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/applications/{application_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/applications/qux\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+/applications/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+name}",
                                            "response": {
                                                "$ref": "Application"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "list": {
                                            "description": "Lists all applications associated with the profile.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/applications",
                                            "httpMethod": "GET",
                                            "id": "jobs.projects.tenants.profiles.applications.list",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "pageSize": {
                                                    "description": "The maximum number of applications to be returned, at most 100.\nDefault is 100 if a non-positive number is provided.",
                                                    "format": "int32",
                                                    "location": "query",
                                                    "type": "integer"
                                                },
                                                "pageToken": {
                                                    "description": "The starting indicator from which to return results.",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "parent": {
                                                    "description": "Required. Resource name of the profile under which the application is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\", for\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+parent}/applications",
                                            "response": {
                                                "$ref": "ListApplicationsResponse"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "patch": {
                                            "description": "Updates specified application.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/applications/{applicationsId}",
                                            "httpMethod": "PATCH",
                                            "id": "jobs.projects.tenants.profiles.applications.patch",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required during application update.\n\nResource name assigned to an application by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/applications/{application_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/applications/qux\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+/applications/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+name}",
                                            "request": {
                                                "$ref": "UpdateApplicationRequest"
                                            },
                                            "response": {
                                                "$ref": "Application"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        }
                                    }
                                },
                                "assignments": {
                                    "methods": {
                                        "create": {
                                            "description": "Creates a new assignment entity.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/assignments",
                                            "httpMethod": "POST",
                                            "id": "jobs.projects.tenants.profiles.assignments.create",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Required. Resource name of the project under which the assignment is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\", for\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+parent}/assignments",
                                            "request": {
                                                "$ref": "CreateAssignmentRequest"
                                            },
                                            "response": {
                                                "$ref": "Assignment"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "delete": {
                                            "description": "Deletes specified assignment.\nPrerequisite: The assignment has no jobs associated with it.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/assignments/{assignmentsId}",
                                            "httpMethod": "DELETE",
                                            "id": "jobs.projects.tenants.profiles.assignments.delete",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The resource name of the assignment to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/assignments/{assignment_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/assignments/qux\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+/assignments/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+name}",
                                            "response": {
                                                "$ref": "Empty"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "get": {
                                            "description": "Retrieves specified assignment.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/assignments/{assignmentsId}",
                                            "httpMethod": "GET",
                                            "id": "jobs.projects.tenants.profiles.assignments.get",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required. The resource name of the assignment to be retrieved.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/assignments/{assignment_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/assignments/qux\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+/assignments/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+name}",
                                            "response": {
                                                "$ref": "Assignment"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "list": {
                                            "description": "Lists all assignments associated with the profile.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/assignments",
                                            "httpMethod": "GET",
                                            "id": "jobs.projects.tenants.profiles.assignments.list",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "pageSize": {
                                                    "description": "The maximum number of assignments to be returned, at most 100.\nDefault is 100 if a non-positive number is provided.",
                                                    "format": "int32",
                                                    "location": "query",
                                                    "type": "integer"
                                                },
                                                "pageToken": {
                                                    "description": "The starting indicator from which to return results.",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "parent": {
                                                    "description": "Required. Resource name of the project under which the assignment is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\", for\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+parent}/assignments",
                                            "response": {
                                                "$ref": "ListAssignmentsResponse"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "patch": {
                                            "description": "Updates specified assignment.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/assignments/{assignmentsId}",
                                            "httpMethod": "PATCH",
                                            "id": "jobs.projects.tenants.profiles.assignments.patch",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Required during assignment update.\n\nResource name assigned to an assignment by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/assignments/{assignment_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/assignments/qux\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+/assignments/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+name}",
                                            "request": {
                                                "$ref": "UpdateAssignmentRequest"
                                            },
                                            "response": {
                                                "$ref": "Assignment"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        }
                                    }
                                },
                                "tags": {
                                    "methods": {
                                        "add": {
                                            "description": "Add tags into a profile.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/tags:add",
                                            "httpMethod": "POST",
                                            "id": "jobs.projects.tenants.profiles.tags.add",
                                            "parameterOrder": [
                                                "profile"
                                            ],
                                            "parameters": {
                                                "profile": {
                                                    "description": "Required. Resource name assigned to a profile by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\". For\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+profile}/tags:add",
                                            "request": {
                                                "$ref": "AddProfileTagsRequest"
                                            },
                                            "response": {
                                                "$ref": "Profile"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "remove": {
                                            "description": "Remove tags from a profile.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/profiles/{profilesId}/tags:remove",
                                            "httpMethod": "POST",
                                            "id": "jobs.projects.tenants.profiles.tags.remove",
                                            "parameterOrder": [
                                                "profile"
                                            ],
                                            "parameters": {
                                                "profile": {
                                                    "description": "Required. Resource name assigned to a profile by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\". For\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/profiles/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+profile}/tags:remove",
                                            "request": {
                                                "$ref": "RemoveProfileTagsRequest"
                                            },
                                            "response": {
                                                "$ref": "Profile"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "promptTemplates": {
                            "methods": {
                                "get": {
                                    "description": "Gets details of a prompt template.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/promptTemplates/{promptTemplatesId}",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.promptTemplates.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The resource name of the prompt template to retrieve.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/promptTemplates/{prompt_template_id}\",\nfor example,\n\"projects/api-test-project/tenants/test-tenant/promptTemplates/1234\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/promptTemplates/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "PromptTemplate"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "list": {
                                    "description": "Lists prompt templates.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/promptTemplates",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.promptTemplates.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "pageSize": {
                                            "description": "The maximum number of conversations to return.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The next_page_token value returned from a previous list request, if any.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. Resource name of the tenant to list prompt templates from.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\",\nfor example, \"projects/api-test-project/tenants/test-tenant\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/promptTemplates",
                                    "response": {
                                        "$ref": "ListPromptTemplatesResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                }
                            }
                        },
                        "recruiters": {
                            "methods": {
                                "create": {
                                    "description": "Creates and returns a new recruiter.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/recruiters",
                                    "httpMethod": "POST",
                                    "id": "jobs.projects.tenants.recruiters.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "parent": {
                                            "description": "Required. The resource name of the tenant this recruiter belongs to.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/recruiters",
                                    "request": {
                                        "$ref": "CreateRecruiterRequest"
                                    },
                                    "response": {
                                        "$ref": "Recruiter"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "delete": {
                                    "description": "Deletes the specified recruiter.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/recruiters/{recruitersId}",
                                    "httpMethod": "DELETE",
                                    "id": "jobs.projects.tenants.recruiters.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. Resource name of the recruiter to be deleted.\n\nThe format is\n\"projects/{project_id}/tenants/{renant_id}/recruiters/{recruiter_id}\",\nfor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/recruiters/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "get": {
                                    "description": "Gets the specified recruiter.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/recruiters/{recruitersId}",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.recruiters.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. Resource name of the recruiter to get.\n\nThe format is\n\"projects/{project_id}/tenants/{renant_id}/recruiters/{recruiter_id}\",\nfor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/recruiters/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "response": {
                                        "$ref": "Recruiter"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "list": {
                                    "description": "Lists all recruiters associated with the tenant.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/recruiters",
                                    "httpMethod": "GET",
                                    "id": "jobs.projects.tenants.recruiters.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "pageSize": {
                                            "description": "The maximum number of recruiters to be returned, at most 100.\n\nDefault is 100 unless a positive number smaller than 100 is specified.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The token that specifies the current offset (that is, starting result).\n\nPlease set the value to ListRecruitersResponse.next_page_token to\ncontinue the list.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The resource name of the tenant under which the recruiter is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+parent}/recruiters",
                                    "response": {
                                        "$ref": "ListRecruitersResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                },
                                "patch": {
                                    "description": "Updates the specified recruiter and returns the updated result.",
                                    "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/recruiters/{recruitersId}",
                                    "httpMethod": "PATCH",
                                    "id": "jobs.projects.tenants.recruiters.patch",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required during recruiter update.\n\nResource name assigned to a recruiter by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/recruiters/{recruiter_id}\",\nfor example, \"projects/api-test-project/tenants/foo/recruiters/bar\".",
                                            "location": "path",
                                            "pattern": "^projects/[^/]+/tenants/[^/]+/recruiters/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v4beta1/{+name}",
                                    "request": {
                                        "$ref": "UpdateRecruiterRequest"
                                    },
                                    "response": {
                                        "$ref": "Recruiter"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform",
                                        "https://www.googleapis.com/auth/jobs"
                                    ]
                                }
                            },
                            "resources": {
                                "profileTags": {
                                    "methods": {
                                        "add": {
                                            "description": "Add profile tags into a recruiter.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/recruiters/{recruitersId}/profileTags:add",
                                            "httpMethod": "POST",
                                            "id": "jobs.projects.tenants.recruiters.profileTags.add",
                                            "parameterOrder": [
                                                "recruiter"
                                            ],
                                            "parameters": {
                                                "recruiter": {
                                                    "description": "Required. Resource name assigned to a recruiter by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{renant_id}/recruiters/{recruiter_id}\",\nfor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/recruiters/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+recruiter}/profileTags:add",
                                            "request": {
                                                "$ref": "AddRecruiterProfileTagsRequest"
                                            },
                                            "response": {
                                                "$ref": "Recruiter"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        },
                                        "remove": {
                                            "description": "Remove profile tags from a recruiter.",
                                            "flatPath": "v4beta1/projects/{projectsId}/tenants/{tenantsId}/recruiters/{recruitersId}/profileTags:remove",
                                            "httpMethod": "POST",
                                            "id": "jobs.projects.tenants.recruiters.profileTags.remove",
                                            "parameterOrder": [
                                                "recruiter"
                                            ],
                                            "parameters": {
                                                "recruiter": {
                                                    "description": "Required. Resource name assigned to a recruiter by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{renant_id}/recruiters/{recruiter_id}\",\nfor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                                                    "location": "path",
                                                    "pattern": "^projects/[^/]+/tenants/[^/]+/recruiters/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v4beta1/{+recruiter}/profileTags:remove",
                                            "request": {
                                                "$ref": "RemoveRecruiterProfileTagsRequest"
                                            },
                                            "response": {
                                                "$ref": "Recruiter"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform",
                                                "https://www.googleapis.com/auth/jobs"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "revision": "20190920",
    "rootUrl": "https://test-jobs.sandbox.googleapis.com/",
    "schemas": {
        "Activity": {
            "description": "Resource that represents an individual or collaborative activity participated\nin by a candidate, for example, an open-source project, a class assignment,\nand so on.",
            "id": "Activity",
            "properties": {
                "activityDescriptionSnippet": {
                    "description": "Output only. Activity description snippet shows how the\ndescription is related to a search query. It's empty if the\ndescription isn't related to the search query.",
                    "type": "string"
                },
                "activityNameSnippet": {
                    "description": "Output only. Activity name snippet shows how the display_name is related to a search\nquery. It's empty if the display_name isn't related to the search\nquery.",
                    "type": "string"
                },
                "createDate": {
                    "$ref": "Date",
                    "description": "The first creation date of the activity."
                },
                "description": {
                    "description": "Activity description.\n\nNumber of characters allowed is 100,000.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Activity display name.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "skillsUsed": {
                    "description": "A list of skills used in this activity.\n\nThe limitation for max number of skills used is 50.",
                    "items": {
                        "$ref": "Skill"
                    },
                    "type": "array"
                },
                "skillsUsedSnippet": {
                    "description": "Output only. Skill used snippet shows how the corresponding\nskills_used are related to a search query. It's empty if the\ncorresponding skills_used are not related to the search query.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "teamMembers": {
                    "description": "A list of team members involved in this activity.\n\nNumber of characters allowed is 100.\n\nThe limitation for max number of team members is 50.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "updateDate": {
                    "$ref": "Date",
                    "description": "The last update date of the activity."
                },
                "uri": {
                    "description": "Activity URI.\n\nNumber of characters allowed is 4,000.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AddProfileTagsRequest": {
            "description": "Add tags request.",
            "id": "AddProfileTagsRequest",
            "properties": {
                "tags": {
                    "description": "Required. The tags to which this profile is assigned.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AddRecruiterProfileTagsRequest": {
            "description": "Add profile tags request.",
            "id": "AddRecruiterProfileTagsRequest",
            "properties": {
                "profileTags": {
                    "description": "Required. The profile tags added to the recruiter's list of profile tags.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AdditionalContactInfo": {
            "description": "Resource that represents contact information other than phone, email,\nURI and addresses.",
            "id": "AdditionalContactInfo",
            "properties": {
                "contactId": {
                    "description": "The contact id.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the contact method.\n\nFor example, \"hangout\", \"skype\".\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "usage": {
                    "description": "The usage of this contact method. For example, SCHOOL, WORK, PERSONAL.",
                    "enum": [
                        "CONTACT_INFO_USAGE_UNSPECIFIED",
                        "PERSONAL",
                        "WORK",
                        "SCHOOL"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Personal use.",
                        "Work use.",
                        "School use."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Address": {
            "description": "Resource that represents a address.",
            "id": "Address",
            "properties": {
                "current": {
                    "description": "Indicates if it's the person's current address.",
                    "type": "boolean"
                },
                "structuredAddress": {
                    "$ref": "PostalAddress",
                    "description": "Structured address that contains street address, city, state, country,\nand so on."
                },
                "unstructuredAddress": {
                    "description": "Unstructured address.\n\nFor example, \"1600 Amphitheatre Pkwy, Mountain View, CA 94043\",\n\"Sunnyvale, California\".\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "usage": {
                    "description": "The usage of the address. For example, SCHOOL, WORK, PERSONAL.",
                    "enum": [
                        "CONTACT_INFO_USAGE_UNSPECIFIED",
                        "PERSONAL",
                        "WORK",
                        "SCHOOL"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Personal use.",
                        "Work use.",
                        "School use."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Application": {
            "description": "Resource that represents a job application record of a candidate.",
            "id": "Application",
            "properties": {
                "applicationDate": {
                    "$ref": "Date",
                    "description": "The application date."
                },
                "assessments": {
                    "description": "Any asessments done on the candidate as part of this application.",
                    "items": {
                        "$ref": "Assessment"
                    },
                    "type": "array"
                },
                "company": {
                    "description": "One of either a job or a company is required.\n\nResource name of the company which the candidate applied for.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\".\nFor example, \"projects/foo/tenants/bar/companies/baz\".",
                    "type": "string"
                },
                "compensationPreferences": {
                    "description": "Any known preferences of the candidate's compensation (salary, bonuses,\nand so on).",
                    "items": {
                        "$ref": "CompensationInfo"
                    },
                    "type": "array"
                },
                "createTime": {
                    "description": "Required. Reflects the time that the application was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "externalId": {
                    "description": "Required. Client side application identifier, used to uniquely identify the\napplication.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "interviewAvailability": {
                    "description": "When the candidate is available for interviewing.",
                    "items": {
                        "$ref": "TimeSegment"
                    },
                    "type": "array"
                },
                "interviews": {
                    "description": "All interviews (screen, onsite, and so on) conducted as part of this\napplication (includes details such as user conducting the interview,\ntimestamp, feedback, and so on).",
                    "items": {
                        "$ref": "Interview"
                    },
                    "type": "array"
                },
                "isMatch": {
                    "description": "Output only. Indicates whether this job application is a match to\napplication related filters. This value is only applicable in profile\nsearch response.",
                    "type": "boolean"
                },
                "isSupervisor": {
                    "description": "If it is a supervised position.",
                    "type": "boolean"
                },
                "job": {
                    "description": "One of either a job or a company is required.\n\nResource name of the job which the candidate applied for.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For example,\n\"projects/foo/tenants/bar/jobs/baz\".",
                    "type": "string"
                },
                "jobTitleSnippet": {
                    "description": "Output only. Job title snippet shows how the job title is related to a\nsearch query. It's empty if the job title isn't related to the search\nquery.",
                    "type": "string"
                },
                "languageCode": {
                    "description": "Required. The language in which this application information is provided.\nThis is distinct from the language of the job posting or profile.",
                    "type": "string"
                },
                "name": {
                    "description": "Required during application update.\n\nResource name assigned to an application by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/applications/{application_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/applications/qux\".",
                    "type": "string"
                },
                "offers": {
                    "description": "All job offers associated wih this application.",
                    "items": {
                        "$ref": "ApplicationOffer"
                    },
                    "type": "array"
                },
                "outcome": {
                    "description": "Outcome positiveness shows how positive the outcome is.",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "outcomeNotes": {
                    "description": "Free text reason behind the recruitement outcome (for example, reason for\nwithdraw / reject, reason for an unsuccessful finish, and so on).\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "proactiveSubmission": {
                    "$ref": "ProactiveSubmission",
                    "description": "Information about if this application is a pro-active submission."
                },
                "profile": {
                    "description": "Output only. Resource name of the candidate of this application.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz\".",
                    "type": "string"
                },
                "recruiter": {
                    "description": "The resource name of the person who generated this application. The format\nis \"projects/{project_id}/tenants/{tenant_id}/recruiters/{recruiter_id}\".\nFor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                    "type": "string"
                },
                "recruitingNotes": {
                    "description": "Notes from the recruiter about this application that do not fit\ninto the other structured fields.",
                    "items": {
                        "$ref": "RecruitingNote"
                    },
                    "type": "array"
                },
                "references": {
                    "description": "Details of any reference checks performed on the candidate.",
                    "items": {
                        "$ref": "Reference"
                    },
                    "type": "array"
                },
                "referral": {
                    "description": "If the candidate is referred by a employee.",
                    "type": "boolean"
                },
                "source": {
                    "description": "Required. Where did the candidate's application to this job orginate (recruiter\nsourcing, job board application, direct website, walk-in, and so on)?",
                    "enum": [
                        "APPLICATION_SOURCE_UNSPECIFIED",
                        "RECRUITER_SOURCED",
                        "APPLY_DIRECT_WEB",
                        "APPLY_DIRECT_MOBILE_WEB",
                        "APPLY_DIRECT_MOBILE_APP",
                        "APPLY_DIRECT_IN_PERSON",
                        "APPLY_INDIRECT",
                        "REFERRAL",
                        "OTHER_APPLICATION_SOURCE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Recruiter sourced the candidate (whether from internal database, their\nnetwork, and so on).",
                        "Candidate applied to the job through a desktop web browser.",
                        "Candidate applied to the job through a mobile web browser.",
                        "Candidate applied to the job through a mobile app.",
                        "Candidate applied to the job through a walk in / in person.",
                        "Candidate applies to the job through a 3rd party job board or aggregator.",
                        "Candidate was referred to the job.",
                        "Another candidate source not specified."
                    ],
                    "type": "string"
                },
                "sourceDetails": {
                    "description": "Free text string indicating any additional information about the\napplication source, (for example, name of job board, vendor) -\ntypically is from a list of values within a tenant.",
                    "type": "string"
                },
                "stage": {
                    "description": "Required. What is the most recent stage of the application (that is, new, screen,\nsend cv, hired, finished work)?  This field is intentionally not\ncomprehensive of every possible status, but instead, represents statuses\nthat would be used to indicate to the ML models good / bad matches.",
                    "enum": [
                        "APPLICATION_STAGE_UNSPECIFIED",
                        "NEW",
                        "SCREEN",
                        "HIRING_MANAGER_REVIEW",
                        "INTERVIEW",
                        "OFFER_EXTENDED",
                        "OFFER_ACCEPTED",
                        "STARTED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Candidate has applied or a recruiter put candidate into consideration but\ncandidate is not yet screened / no decision has been made to move or not\nmove the candidate to the next stage.",
                        "A recruiter decided to screen the candidate for this role.",
                        "Candidate is being / was sent to the customer / hiring manager for\ndetailed review.",
                        "Candidate was approved by the client / hiring manager and is being / was\ninterviewed for the role.",
                        "Candidate will be / has been given an offer of employment.",
                        "Candidate has accepted their offer of employment.",
                        "Candidate has begun (or completed) their employment or assignment with\nthe employer."
                    ],
                    "type": "string"
                },
                "state": {
                    "description": "The application state.",
                    "enum": [
                        "APPLICATION_STATE_UNSPECIFIED",
                        "IN_PROGRESS",
                        "CANDIDATE_WITHDREW",
                        "EMPLOYER_WITHDREW",
                        "COMPLETED",
                        "CLOSED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The current stage is in progress or pending, for example, interviews in\nprogress.",
                        "The current stage was terminated by a candidate decision.",
                        "The current stage was terminated by an employer or agency decision.",
                        "The current stage is successfully completed, but the next stage (if\napplicable) has not begun.",
                        "The current stage was closed without an exception, or terminated for\nreasons unrealated to the candidate."
                    ],
                    "type": "string"
                },
                "supervisedEmployeeCount": {
                    "description": "The number of employees this person has supervised.",
                    "format": "int32",
                    "type": "integer"
                },
                "updateTime": {
                    "description": "The last update timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApplicationDateFilter": {
            "description": "Application Date Range Filter.\n\nThe API matches profiles with Application.application_date between\nstart date and end date (both boundaries are inclusive). The filter is\nignored if both start_date and end_date are missing.",
            "id": "ApplicationDateFilter",
            "properties": {
                "endDate": {
                    "$ref": "Date",
                    "description": "End date. If it's missing, The API matches profiles with application date\nnot before the start date."
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "Start date. If it's missing, The API matches profiles with application date\nnot after the end date."
                }
            },
            "type": "object"
        },
        "ApplicationInfo": {
            "description": "Application related details of a job posting.",
            "id": "ApplicationInfo",
            "properties": {
                "emails": {
                    "description": "Use this field to specify email address(es) to which resumes or\napplications can be sent.\n\nThe maximum number of allowed characters for each entry is 255.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "instruction": {
                    "description": "Use this field to provide instructions, such as \"Mail your application\nto ...\", that a candidate can follow to apply for the job.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 3,000.",
                    "type": "string"
                },
                "uris": {
                    "description": "Use this URI field to direct an applicant to a website, for example to\nlink to an online application form.\n\nThe maximum number of allowed characters for each entry is 2,000.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ApplicationJobFilter": {
            "description": "Filter on the job information of Application.",
            "id": "ApplicationJobFilter",
            "properties": {
                "jobRequisitionId": {
                    "description": "The job requisition id in the application. The API does an exact match on\nthe Job.requisition_id of Application.job in profiles.",
                    "type": "string"
                },
                "jobTitle": {
                    "description": "The job title in the application. The API does an exact match on the\nJob.title of Application.job in profiles.",
                    "type": "string"
                },
                "negated": {
                    "description": "If true, the API excludes all profiles with any Application.job\nmatching the filters.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ApplicationOffer": {
            "description": "Details of an application offer.",
            "id": "ApplicationOffer",
            "properties": {
                "expectedEndDate": {
                    "$ref": "Date",
                    "description": "Expected end date (inclusive) of the assignment."
                },
                "expectedStartDate": {
                    "$ref": "Date",
                    "description": "Required. Expected start date (inclusive) of the assignment."
                },
                "notes": {
                    "description": "Notes from the recruiter about the offer (for example, negotiations,\nproposed adjustments).",
                    "type": "string"
                },
                "offerBillRate": {
                    "$ref": "CompensationInfo",
                    "description": "Job compensation information for the \"bill rate\", that is, the amount\nthat will be billed to the employer."
                },
                "offerExpireTime": {
                    "description": "Timestamp on which this offer expires (that is, by when the candidate\nmust respond to get the job).",
                    "format": "google-datetime",
                    "type": "string"
                },
                "offerOutcome": {
                    "description": "Whether or not the offer was accepted by the candidate.",
                    "enum": [
                        "OFFER_OUTCOME_UNSPECIFIED",
                        "DECLINED",
                        "ACCEPTED",
                        "PENDING"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Offer declined.",
                        "Offer accepted.",
                        "Offer pending."
                    ],
                    "type": "string"
                },
                "offerPayRate": {
                    "$ref": "CompensationInfo",
                    "description": "Job compensation information for the \"pay rate\", that is, the\ncompensation that will paid to the employee"
                },
                "offerTime": {
                    "description": "Required. Timestamp on which this offer was issued to the candidate.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ApplicationOutcomeNotesFilter": {
            "description": "Outcome Notes Filter.",
            "id": "ApplicationOutcomeNotesFilter",
            "properties": {
                "negated": {
                    "description": "If true, The API excludes all candidates with any\nApplication.outcome_notes matching the outcome reason specified in\nthe filter.",
                    "type": "boolean"
                },
                "outcomeNotes": {
                    "description": "Required. User entered or selected outcome reason. The API does an exact match on the\nApplication.outcome_notes in profiles.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AssessedCompetency": {
            "description": "Details of a specific assessment competency of one assessment.",
            "id": "AssessedCompetency",
            "properties": {
                "displayName": {
                    "description": "Required. A human readable, descriptive name for the given competency.",
                    "type": "string"
                },
                "notes": {
                    "description": "Any notes captured by the recruiter that do not fit into the other\nstructured fields.",
                    "type": "string"
                },
                "outcome": {
                    "description": "Required. The outcome for this competency (passed, failed, nuetral / inconclusive).",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this assessment competency."
                }
            },
            "type": "object"
        },
        "Assessment": {
            "description": "Details of an assessment.",
            "id": "Assessment",
            "properties": {
                "assessedCompetencies": {
                    "description": "Details of each specific competency / sub-components assessed as part of\nthis test.",
                    "items": {
                        "$ref": "AssessedCompetency"
                    },
                    "type": "array"
                },
                "assessmentTime": {
                    "description": "Required. Customer provided timestamp of when the asessment took place.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "assessmentType": {
                    "description": "Required. What type of assessment is this (for example, skill, certification)?",
                    "enum": [
                        "ASSESSMENT_TYPE_UNSPECIFIED",
                        "KNOWLEDGE",
                        "SKILL",
                        "ABILITY",
                        "PSYCHOMETRIC",
                        "CERTIFICATION",
                        "SCREENING",
                        "OTHER_ASSESSMENT_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Knowledge.",
                        "Skill.",
                        "Ability.",
                        "Psychometric test, such as a personality questionnaire or aptitude test.",
                        "A certification or license.",
                        "Screening test, such as a drug test or vision test.",
                        "A different type of assessment."
                    ],
                    "type": "string"
                },
                "displayName": {
                    "description": "The name of the assessment (typically from a list of values used by the\ntenant e.g., test names, and so on).",
                    "type": "string"
                },
                "notes": {
                    "description": "Any notes captured by the recruiter that do not fit into the other\nstructured fields.",
                    "type": "string"
                },
                "outcome": {
                    "description": "Required. The overall outcome resulting from this exam (passed, failed, nuetral /\ninconclusive).",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this assessment."
                }
            },
            "type": "object"
        },
        "Assignment": {
            "description": "Resource that represents a job assignment record of a candidate.",
            "id": "Assignment",
            "properties": {
                "application": {
                    "description": "Resource name of the application generating this assignment.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/applications/{application_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/applications/qux\".",
                    "type": "string"
                },
                "assigneeOutcome": {
                    "description": "The termination status of the assignment from the assignee or candidate's\nperspective, if available and the assignment has termination.\nThat is, an outcome of NEGATIVE means the candidate would be unwilling to\nengage with this employer or assignment again.",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "assignmentType": {
                    "description": "The assignment's employment type (for example, PERMANENT, TEMPORARY)\nif different from the EmploymentType on the job.",
                    "enum": [
                        "EMPLOYMENT_TYPE_UNSPECIFIED",
                        "FULL_TIME",
                        "PART_TIME",
                        "CONTRACTOR",
                        "CONTRACT_TO_HIRE",
                        "TEMPORARY",
                        "INTERN",
                        "VOLUNTEER",
                        "PER_DIEM",
                        "FLY_IN_FLY_OUT",
                        "PERMANENT",
                        "DELIVERABLE",
                        "OTHER_EMPLOYMENT_TYPE"
                    ],
                    "enumDescriptions": [
                        "The default value if the employment type isn't specified.",
                        "The job requires working a number of hours that constitute full\ntime employment, typically 40 or more hours per week.",
                        "The job entails working fewer hours than a full time job,\ntypically less than 40 hours a week.",
                        "The job is offered as a contracted, as opposed to a salaried employee,\nposition.",
                        "The job is offered as a contracted position with the understanding\nthat it's converted into a full-time position at the end of the\ncontract. Jobs of this type are also returned by a search for\nEmploymentType.CONTRACTOR jobs.",
                        "The job is offered as a temporary employment opportunity, usually\na short-term engagement.",
                        "The job is a fixed-term opportunity for students or entry-level job\nseekers to obtain on-the-job training, typically offered as a summer\nposition.",
                        "The is an opportunity for an individual to volunteer, where there's no\nexpectation of compensation for the provided services.",
                        "The job requires an employee to work on an as-needed basis with a\nflexible schedule.",
                        "The job involves employing people in remote areas and flying them\ntemporarily to the work site instead of relocating employees and their\nfamilies permanently.",
                        "This job is a permanent placement from a staffing agency at an\norganization.",
                        "This job is for a specific deliverable (\"gig\"), for example, delivering a\nspecific project.",
                        "The job does not fit any of the other listed types."
                    ],
                    "type": "string"
                },
                "company": {
                    "description": "One of either a job or a company is required.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\". For\nexample, \"projects/foo/tenants/bar/companies/baz\".",
                    "type": "string"
                },
                "compensation": {
                    "$ref": "CompensationInfo",
                    "description": "Any known candidate's compensation information for this assignment (salary,\nbonuses, and so on) where different from the associated job_id's\ncompensation information (where available)."
                },
                "employeeSatisfactionSurveys": {
                    "description": "Any employee satisfaction surveys (for example, how happy they are with the\nrole, and do on).",
                    "items": {
                        "$ref": "EmployeeSatisfactionSurvey"
                    },
                    "type": "array"
                },
                "employerOutcome": {
                    "description": "The termination status of the assignment from the employer's perspective,\nif available and the assignment has termination. That is, an outcome of\nNEGATIVE means the employer would be unwilling to engage with this person\non this or similar assignments again.",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "endDate": {
                    "$ref": "Date",
                    "description": "The expected or actual end date (inclusive) of the assignment."
                },
                "extended": {
                    "description": "If the assignment was extended beyond the initially planned end date, this\nshould be set to true; false otherwise. Update the corresponding end date\nif setting this field to true.",
                    "type": "boolean"
                },
                "externalId": {
                    "description": "Required. Client side assignment identifier, used to uniquely identify the\nassignment.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "isSupervisor": {
                    "description": "If it is a supervisor position.",
                    "type": "boolean"
                },
                "issuedFirstPaycheck": {
                    "description": "If true, the assignee has been issued the first paycheck for this\nassignment or not.",
                    "type": "boolean"
                },
                "job": {
                    "description": "One of either a job or a company is required.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For example,\n\"projects/foo/tenants/bar/jobs/baz\".",
                    "type": "string"
                },
                "languageCode": {
                    "description": "The language in which this assignment information is provided.\nThis is distinct from the language of the job posting or profile.",
                    "type": "string"
                },
                "name": {
                    "description": "Required during assignment update.\n\nResource name assigned to an assignment by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}/assignments/{assignment_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz/assignments/qux\".",
                    "type": "string"
                },
                "outcomeNotes": {
                    "description": "Any notes, raw status codes, or additional context around the termination\nof the assignment.",
                    "type": "string"
                },
                "performanceReviews": {
                    "description": "All performance feedback received by the employee (for example, performance\nreviews, and so on).",
                    "items": {
                        "$ref": "PerformanceReview"
                    },
                    "type": "array"
                },
                "profile": {
                    "description": "Output only. Resource name of the profile of this assignment.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\".\nFor example, \"projects/foo/tenants/bar/profiles/baz\".",
                    "type": "string"
                },
                "recruiter": {
                    "description": "The resource name of the person who generated this assignment. The format\nis \"projects/{project_id}/tenants/{tenant_id}/recruiters/{recruiter_id}\".\nFor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                    "type": "string"
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "The expected or actual start date (inclusive) of the assignment."
                },
                "state": {
                    "description": "The current status of the assignment, identifiying whether the assignment\nis in progress or completed. Used for filtering on current assignment\nstate.",
                    "enum": [
                        "ASSIGNMENT_STATE_UNSPECIFIED",
                        "NOT_STARTED",
                        "IN_PROGRESS",
                        "COMPLETED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The person has not started the assignment yet.",
                        "The person is currently on assignment.",
                        "The person has completed assignment."
                    ],
                    "type": "string"
                },
                "supervisedEmployeeCount": {
                    "description": "The number of employees this person has supervised.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Availability": {
            "description": "Deprecated. Use AvailabilitySignal instead.\n\nCandidate availability indicates if a candidate is actively seeking new\nemployment.\n\nSee CandidateAvailabilityFilter for how this is computed.",
            "id": "Availability",
            "properties": {
                "available": {
                    "description": "Candidate's overall availability based on signals.",
                    "type": "boolean"
                },
                "jobApplicationAvailabilitySignal": {
                    "$ref": "JobApplicationAvailabilitySignal",
                    "description": "Candidate's recent job application behavior.\nBased on the number of days since the candidate's most recent job\napplication to any job.  The number of days is returned as the minimum of\n(today's date - Application.create_time) for all of the candidate's\nApplication records\nthat have Application.source as any of the following:\nAPPLY_DIRECT_WEB,\nAPPLY_DIRECT_MOBILE_WEB,\nAPPLY_DIRECT_MOBILE_APP,\nAPPLY_DIRECT_IN_PERSON,\nAPPLY_INDIRECT.  This\nsignal is set to \"true\" if the candidate has applied\nfor any job in the last 30 days (non-inclusive), otherwise, it is set to\n\"false\"."
                },
                "profileUpdateAvailabilitySignal": {
                    "$ref": "ProfileUpdateAvailabilitySignal",
                    "description": "Based on number of days since the candidate's most recent\nprofile update.  This signal is set to \"true\" if the candidate's profile\nhas been updated in the last 30 days (non-inclusive). Otherwise, it is set\nto \"false\"."
                }
            },
            "type": "object"
        },
        "AvailabilityFilter": {
            "description": "Filter on availability signals.",
            "id": "AvailabilityFilter",
            "properties": {
                "range": {
                    "$ref": "TimestampRange",
                    "description": "Required. Range of times to filter candidate signals by."
                },
                "required": {
                    "description": "If multiple AvailabilityFilter are provided, the default\nbehavior is to OR all filters, but if this field is set to true, this\nparticular AvailabilityFilter will be AND'ed against other\nAvailabilityFilter.",
                    "type": "boolean"
                },
                "signalType": {
                    "description": "Required. Type of signal to apply filter on.",
                    "enum": [
                        "AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED",
                        "JOB_APPLICATION",
                        "RESUME_UPDATE",
                        "CANDIDATE_UPDATE",
                        "CLIENT_SUBMISSION",
                        "RECRUITER_CONTACT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Job application signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate's most recent application.\nlast_update_time is\ncalculated from max(Application.create_time) from all Application\nrecords where Application.source is any of the following:\n APPLY_DIRECT_WEB\n APPLY_DIRECT_MOBILE_WEB\n APPLY_DIRECT_MOBILE_APP\n APPLY_DIRECT_IN_PERSON\n APPLY_INDIRECT\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is JOB_APPLICATION.",
                        "Resume update signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent update to their resume.\nFor a SummarizedProfile.summary,\nlast_update_time is\ncalculated from max(Profile.resume_update_time) from all\nSummarizedProfile.profiles.\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is RESUME_UPDATE.",
                        "Candidate update signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent update to their profile.\nFor a SummarizedProfile.summary,\nlast_update_time is\ncalculated from max(Profile.candidate_update_time) from all\nSummarizedProfile.profiles.\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is CANDIDATE_UPDATE.",
                        "Client submission signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent submission.\nlast_update_time is\ncalculated from max(Application.create_time) from all Application\nrecords where Application.stage is any of the following:\n HIRING_MANAGER_REVIEW\n INTERVIEW\n OFFER_EXTENDED\n OFFER_ACCEPTED\n STARTED\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is CLIENT_SUBMISSION.",
                        "Recruiter contact signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent contact with a recruiter.\nFor a SummarizedProfile.summary,\nlast_update_time is\ncalculated from max(Profile.last_successful_recruiter_contact_time)\nfrom all SummarizedProfile.profiles.\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is RECRUITER_CONTACT."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AvailabilitySignal": {
            "description": "Candidate availability signal.",
            "id": "AvailabilitySignal",
            "properties": {
                "filterSatisfied": {
                    "description": "Indicates if the last_update_time is within\nAvailabilityFilter.range.\n\nReturned only in a search response when there is an AvailabilityFilter\nin ProfileQuery.availability_filters where\nsignal_type matches type.",
                    "type": "boolean"
                },
                "lastUpdateTime": {
                    "description": "Timestamp of when the given availability activity last happened.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "type": {
                    "description": "Type of signal.",
                    "enum": [
                        "AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED",
                        "JOB_APPLICATION",
                        "RESUME_UPDATE",
                        "CANDIDATE_UPDATE",
                        "CLIENT_SUBMISSION",
                        "RECRUITER_CONTACT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Job application signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate's most recent application.\nlast_update_time is\ncalculated from max(Application.create_time) from all Application\nrecords where Application.source is any of the following:\n APPLY_DIRECT_WEB\n APPLY_DIRECT_MOBILE_WEB\n APPLY_DIRECT_MOBILE_APP\n APPLY_DIRECT_IN_PERSON\n APPLY_INDIRECT\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is JOB_APPLICATION.",
                        "Resume update signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent update to their resume.\nFor a SummarizedProfile.summary,\nlast_update_time is\ncalculated from max(Profile.resume_update_time) from all\nSummarizedProfile.profiles.\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is RESUME_UPDATE.",
                        "Candidate update signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent update to their profile.\nFor a SummarizedProfile.summary,\nlast_update_time is\ncalculated from max(Profile.candidate_update_time) from all\nSummarizedProfile.profiles.\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is CANDIDATE_UPDATE.",
                        "Client submission signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent submission.\nlast_update_time is\ncalculated from max(Application.create_time) from all Application\nrecords where Application.stage is any of the following:\n HIRING_MANAGER_REVIEW\n INTERVIEW\n OFFER_EXTENDED\n OFFER_ACCEPTED\n STARTED\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is CLIENT_SUBMISSION.",
                        "Recruiter contact signal.\n\nIn the context of Profile.availability_signals, this signal is related\nto the candidate\u2019s most recent contact with a recruiter.\nFor a SummarizedProfile.summary,\nlast_update_time is\ncalculated from max(Profile.last_successful_recruiter_contact_time)\nfrom all SummarizedProfile.profiles.\n\nIn the context of AvailabilityFilter, the filter is applied on\nProfile.availability_signals where\ntype is RECRUITER_CONTACT."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchCreateJobsRequest": {
            "description": "Request to create a batch of jobs.",
            "id": "BatchCreateJobsRequest",
            "properties": {
                "jobs": {
                    "description": "Required. The jobs to be created.",
                    "items": {
                        "$ref": "Job"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchDeleteJobsRequest": {
            "description": "Batch delete jobs request.",
            "id": "BatchDeleteJobsRequest",
            "properties": {
                "filter": {
                    "description": "Required. The filter string specifies the jobs to be deleted.\n\nSupported operator: =, AND\n\nThe fields eligible for filtering are:\n\n* `companyName` (Required)\n* `requisitionId` (Required)\n\nSample Query: companyName = \"projects/foo/companies/bar\" AND\nrequisitionId = \"req-1\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchOperationMetadata": {
            "description": "Metadata used for long running operations returned by CTS batch APIs.\nIt's used to replace google.longrunning.Operation.metadata.",
            "id": "BatchOperationMetadata",
            "properties": {
                "createTime": {
                    "description": "The time when the batch operation is created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "endTime": {
                    "description": "The time when the batch operation is finished and\ngoogle.longrunning.Operation.done is set to `true`.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "failureCount": {
                    "description": "Count of failed item(s) inside an operation.",
                    "format": "int32",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of a long running operation.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "INITIALIZING",
                        "PROCESSING",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELLING",
                        "CANCELLED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The batch operation is being prepared for processing.",
                        "The batch operation is actively being processed.",
                        "The batch operation is processed, and at least one item has been\nsuccessfully processed.",
                        "The batch operation is done and no item has been successfully processed.",
                        "The batch operation is in the process of cancelling after\ngoogle.longrunning.Operations.CancelOperation is called.",
                        "The batch operation is done after\ngoogle.longrunning.Operations.CancelOperation is called. Any items\nprocessed before cancelling are returned in the response."
                    ],
                    "type": "string"
                },
                "stateDescription": {
                    "description": "More detailed information about operation state.",
                    "type": "string"
                },
                "successCount": {
                    "description": "Count of successful item(s) inside an operation.",
                    "format": "int32",
                    "type": "integer"
                },
                "totalCount": {
                    "description": "Count of total item(s) inside an operation.",
                    "format": "int32",
                    "type": "integer"
                },
                "updateTime": {
                    "description": "The time when the batch operation status is updated. The metadata and the\nupdate_time is refreshed every minute otherwise cached data is\nreturned.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchUpdateJobsRequest": {
            "description": "Request to update a batch of jobs.",
            "id": "BatchUpdateJobsRequest",
            "properties": {
                "jobs": {
                    "description": "The jobs to be updated.",
                    "items": {
                        "$ref": "Job"
                    },
                    "type": "array"
                },
                "updateMask": {
                    "description": "Strongly recommended for the best service experience. Be aware that it will\nalso increase latency when checking the status of a batch operation.\n\nIf update_mask is provided, only the specified fields in\nJob are updated. Otherwise all the fields are updated.\n\nA field mask to restrict the fields that are updated. Only\ntop level fields of Job are supported.\n\nIf update_mask is provided, The Job inside\nJobResult\nwill only contains fields that is updated, plus the Id of the Job.\nOtherwise,  Job will include all fields, which can yield a very\nlarge response.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CandidateAvailabilityFilter": {
            "description": "Deprecated. Use AvailabilityFilter instead.\n\nFilter on availability signals.",
            "id": "CandidateAvailabilityFilter",
            "properties": {
                "negated": {
                    "description": "It is false by default. If true, API excludes all the potential available\nprofiles.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Certification": {
            "description": "Resource that represents a license or certification.",
            "id": "Certification",
            "properties": {
                "acquireDate": {
                    "$ref": "Date",
                    "description": "Acquisition date or effective date of license or certification."
                },
                "authority": {
                    "description": "Authority of license, such as government.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "current": {
                    "description": "Indicates if it's the person's current certification.",
                    "type": "boolean"
                },
                "description": {
                    "description": "Description of license or certification.\n\nNumber of characters allowed is 100,000.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Name of license or certification.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "expireDate": {
                    "$ref": "Date",
                    "description": "Expiration date of license of certification."
                }
            },
            "type": "object"
        },
        "CheckConversationRequest": {
            "description": "Check conversation request.",
            "id": "CheckConversationRequest",
            "properties": {
                "contactType": {
                    "description": "Required. The contact type to contact the candidate. Currently, only\nWEB and SMS is supported.",
                    "enum": [
                        "CONTACT_TYPE_UNSPECIFIED",
                        "PHONE_CALL",
                        "SMS",
                        "WEB",
                        "EMAIL",
                        "OTHER_CONTACT_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Phone call.",
                        "SMS or Text Messaging.",
                        "Web-based conversations.",
                        "Email outreach.",
                        "Another contact type not specified here."
                    ],
                    "type": "string"
                },
                "job": {
                    "description": "The resource name of the job to which this request is related.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\",\nfor example, \"projects/foo/tenants/bar/jobs/baz\".",
                    "type": "string"
                },
                "notificationId": {
                    "description": "The outreach or followup notification ID, sent by Google in the Pub/Sub\nmessage, to\nwhich this request is related.",
                    "type": "string"
                },
                "profile": {
                    "description": "Required. The resource name of the candidate to be contacted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\",\nfor example, \"projects/foo/tenants/bar/profiles/baz\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CheckConversationResponse": {
            "description": "Check conversation response.",
            "id": "CheckConversationResponse",
            "properties": {
                "canBeInitiated": {
                    "description": "True, if the conversation can be initiated.",
                    "type": "boolean"
                },
                "rejectionDetail": {
                    "description": "The detail about why a conversation cannot be initiated, if it is rejected.",
                    "type": "string"
                },
                "rejectionReason": {
                    "description": "The reason why a conversation cannot be initiated, if it is rejected.",
                    "enum": [
                        "REJECTION_REASON_UNSPECIFIED"
                    ],
                    "enumDescriptions": [
                        "Default value."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClientEvent": {
            "description": "An event issued when an end user interacts with the application that\nimplements Cloud Talent Solution. Providing this information improves the\nquality of results for the API clients, enabling the\nservice to perform optimally. The number of events sent must be consistent\nwith other calls, such as job searches, issued to the service by the client.",
            "id": "ClientEvent",
            "properties": {
                "createTime": {
                    "description": "Required. The timestamp of the event.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "eventId": {
                    "description": "Required. A unique identifier, generated by the client application.",
                    "type": "string"
                },
                "eventNotes": {
                    "description": "Notes about the event provided by recruiters or other users, for example,\nfeedback on why a profile was bookmarked.",
                    "type": "string"
                },
                "jobEvent": {
                    "$ref": "JobEvent",
                    "description": "An event issued when a job seeker interacts with the application that\nimplements Cloud Talent Solution."
                },
                "profileEvent": {
                    "$ref": "ProfileEvent",
                    "description": "An event issued when a profile searcher interacts with the application\nthat implements Cloud Talent Solution."
                },
                "requestId": {
                    "description": "Strongly recommended for the best service experience.\n\nA unique ID generated in the API responses. It can be found in\nResponseMetadata.request_id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommuteFilter": {
            "description": "Parameters needed for commute search.",
            "id": "CommuteFilter",
            "properties": {
                "allowImpreciseAddresses": {
                    "description": "If `true`, jobs without street level addresses may also be returned.\nFor city level addresses, the city center is used. For state and coarser\nlevel addresses, text matching is used.\nIf this field is set to `false` or isn't specified, only jobs that include\nstreet level addresses will be returned by commute search.",
                    "type": "boolean"
                },
                "commuteMethod": {
                    "description": "Required. The method of transportation to calculate the commute time for.",
                    "enum": [
                        "COMMUTE_METHOD_UNSPECIFIED",
                        "DRIVING",
                        "TRANSIT",
                        "WALKING",
                        "CYCLING",
                        "TRANSIT_ACCESSIBLE"
                    ],
                    "enumDescriptions": [
                        "Commute method isn't specified.",
                        "Commute time is calculated based on driving time.",
                        "Commute time is calculated based on public transit including bus, metro,\nsubway, and so on.",
                        "Commute time is calculated based on walking time.",
                        "Commute time is calculated based on biking time.",
                        "Commute time is calculated based on public transit that is wheelchair\naccessible."
                    ],
                    "type": "string"
                },
                "departureTime": {
                    "$ref": "TimeOfDay",
                    "description": "The departure time used to calculate traffic impact, represented as\ngoogle.type.TimeOfDay in local time zone.\n\nCurrently traffic model is restricted to hour level resolution."
                },
                "roadTraffic": {
                    "description": "Specifies the traffic density to use when calculating commute time.",
                    "enum": [
                        "ROAD_TRAFFIC_UNSPECIFIED",
                        "TRAFFIC_FREE",
                        "BUSY_HOUR"
                    ],
                    "enumDescriptions": [
                        "Road traffic situation isn't specified.",
                        "Optimal commute time without considering any traffic impact.",
                        "Commute time calculation takes in account the peak traffic impact."
                    ],
                    "type": "string"
                },
                "startCoordinates": {
                    "$ref": "LatLng",
                    "description": "Required. The latitude and longitude of the location to calculate the\ncommute time from."
                },
                "travelDuration": {
                    "description": "Required. The maximum travel time in seconds. The maximum allowed value is `3600s`\n(one hour). Format is `123s`.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CommuteInfo": {
            "description": "Commute details related to this job.",
            "id": "CommuteInfo",
            "properties": {
                "jobLocation": {
                    "$ref": "Location",
                    "description": "Location used as the destination in the commute calculation."
                },
                "travelDuration": {
                    "description": "The number of seconds required to travel to the job location from the\nquery location. A duration of 0 seconds indicates that the job isn't\nreachable within the requested duration, but was returned as part of an\nexpanded query.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Company": {
            "description": "A Company resource represents a company in the service. A company is the\nentity that owns job postings, that is, the hiring entity responsible for\nemploying applicants for the job position.",
            "id": "Company",
            "properties": {
                "careerSiteUri": {
                    "description": "The URI to employer's career site or careers page on the employer's web\nsite, for example, \"https://careers.google.com\".",
                    "type": "string"
                },
                "customAttributes": {
                    "additionalProperties": {
                        "$ref": "CustomAttribute"
                    },
                    "description": "A map of fields to hold both filterable and non-filterable custom company\nattributes that are not covered by the provided structured fields.\n\nThe keys of the map are strings up to 64 bytes and must match the\npattern: a-zA-Z*. For example, key0LikeThis or\nKEY_1_LIKE_THIS.\n\nAt most 100 filterable and at most 100 unfilterable keys are supported.\nFor filterable `string_values`, across all keys at most 200 values are\nallowed, with each string no more than 255 characters. For unfilterable\n`string_values`, the maximum total size of `string_values` across all keys\nis 50KB.",
                    "type": "object"
                },
                "derivedInfo": {
                    "$ref": "CompanyDerivedInfo",
                    "description": "Output only. Derived details about the company."
                },
                "displayName": {
                    "description": "Required. The display name of the company, for example, \"Google LLC\".",
                    "type": "string"
                },
                "dunsId": {
                    "description": "The [DUNS](http://go/wiki/Data_Universal_Numbering_System) unique\nidentifier of the company.",
                    "type": "string"
                },
                "eeoText": {
                    "description": "Equal Employment Opportunity legal disclaimer text to be\nassociated with all jobs, and typically to be displayed in all\nroles.\n\nThe maximum number of allowed characters is 500.",
                    "type": "string"
                },
                "externalId": {
                    "description": "Required. Client side company identifier, used to uniquely identify the\ncompany.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "externalSystem": {
                    "description": "The system of record / source system / operating company from which this\ncompany is extracted. This is intended to be populated where the same job\nmight be represented differently to different recruiters.\n\nFrom a training perspective it is important to maintain a separation of\ndata that best represents the information an individual recruiter had\naccess to during the search and placement process.",
                    "type": "string"
                },
                "headquartersAddress": {
                    "description": "The street address of the company's main headquarters, which may be\ndifferent from the job location. The service attempts\nto geolocate the provided address, and populates a more specific\nlocation wherever possible in DerivedInfo.headquarters_location.",
                    "type": "string"
                },
                "hiringAgency": {
                    "description": "Set to true if it is the hiring agency that post jobs for other\nemployers.\n\nDefaults to false if not provided.",
                    "type": "boolean"
                },
                "imageUri": {
                    "description": "A URI that hosts the employer's company logo.",
                    "type": "string"
                },
                "industries": {
                    "description": "The industries in which the company operates.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "keywordSearchableJobCustomAttributes": {
                    "description": "A list of keys of filterable Job.custom_attributes, whose\ncorresponding `string_values` are used in keyword searches. Jobs with\n`string_values` under these specified field keys are returned if any\nof the values match the search keyword. Custom field values with\nparenthesis, brackets and special symbols are not searchable as-is,\nand those keyword queries must be surrounded by quotes.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "languageCode": {
                    "description": "The BCP-47 language code for the language in which this company meta-data\nis written. This is distinct from any information about which languages\nemployees of this company speak, or where this company is based.",
                    "type": "string"
                },
                "naicsCodes": {
                    "description": "NAICS codes of the company. For more information, see [North American\nIndustry Classification System](https://www.census.gov/eos/www/naics/).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Required during company update.\n\nThe resource name for a company. This is generated by the service when a\ncompany is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\", for\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/companies/bar\".",
                    "type": "string"
                },
                "size": {
                    "description": "The employer's company size.",
                    "enum": [
                        "COMPANY_SIZE_UNSPECIFIED",
                        "MINI",
                        "SMALL",
                        "SMEDIUM",
                        "MEDIUM",
                        "BIG",
                        "BIGGER",
                        "GIANT"
                    ],
                    "enumDescriptions": [
                        "Default value if the size isn't specified.",
                        "The company has less than 50 employees.",
                        "The company has between 50 and 99 employees.",
                        "The company has between 100 and 499 employees.",
                        "The company has between 500 and 999 employees.",
                        "The company has between 1,000 and 4,999 employees.",
                        "The company has between 5,000 and 9,999 employees.",
                        "The company has 10,000 or more employees."
                    ],
                    "type": "string"
                },
                "suspended": {
                    "description": "Output only. Indicates whether a company is flagged to be suspended from\npublic availability by the service when job content appears suspicious,\nabusive, or spammy.",
                    "type": "boolean"
                },
                "websiteUri": {
                    "description": "The URI representing the company's primary web site or home page,\nfor example, \"https://www.google.com\".\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompanyDerivedInfo": {
            "description": "Derived details about the company.",
            "id": "CompanyDerivedInfo",
            "properties": {
                "headquartersLocation": {
                    "$ref": "Location",
                    "description": "A structured headquarters location of the company, resolved from\nCompany.headquarters_address if provided."
                }
            },
            "type": "object"
        },
        "CompensationEntry": {
            "description": "A compensation entry that represents one component of compensation, such\nas base pay, bonus, or other compensation type.\n\nAnnualization: One compensation entry can be annualized if\n- it contains valid amount or range.\n- and its expected_units_per_year is set or can be derived.\nIts annualized range is determined as (amount or range) times\nexpected_units_per_year.",
            "id": "CompensationEntry",
            "properties": {
                "amount": {
                    "$ref": "Money",
                    "description": "Compensation amount."
                },
                "description": {
                    "description": "Compensation description.  For example, could\nindicate equity terms or provide additional context to an estimated\nbonus.",
                    "type": "string"
                },
                "expectedUnitsPerYear": {
                    "description": "Expected number of units paid each year. If not specified, when\nJob.employment_types is FULLTIME, a default value is inferred\nbased on unit. Default values:\n- HOURLY: 2080\n- DAILY: 260\n- WEEKLY: 52\n- MONTHLY: 12\n- ANNUAL: 1",
                    "format": "double",
                    "type": "number"
                },
                "range": {
                    "$ref": "CompensationRange",
                    "description": "Compensation range."
                },
                "type": {
                    "description": "Compensation type.\n\nDefault is CompensationType.COMPENSATION_TYPE_UNSPECIFIED.",
                    "enum": [
                        "COMPENSATION_TYPE_UNSPECIFIED",
                        "BASE",
                        "BONUS",
                        "SIGNING_BONUS",
                        "EQUITY",
                        "PROFIT_SHARING",
                        "COMMISSIONS",
                        "TIPS",
                        "OTHER_COMPENSATION_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Base compensation: Refers to the fixed amount of money paid to an\nemployee by an employer in return for work performed. Base compensation\ndoes not include benefits, bonuses or any other potential compensation\nfrom an employer.",
                        "Bonus.",
                        "Signing bonus.",
                        "Equity.",
                        "Profit sharing.",
                        "Commission.",
                        "Tips.",
                        "Other compensation type."
                    ],
                    "type": "string"
                },
                "unit": {
                    "description": "Frequency of the specified amount.\n\nDefault is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.",
                    "enum": [
                        "COMPENSATION_UNIT_UNSPECIFIED",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "YEARLY",
                        "ONE_TIME",
                        "OTHER_COMPENSATION_UNIT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Hourly.",
                        "Daily.",
                        "Weekly",
                        "Monthly.",
                        "Yearly.",
                        "One time.",
                        "Other compensation units."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompensationFilter": {
            "description": "Filter on job compensation type and amount.",
            "id": "CompensationFilter",
            "properties": {
                "includeJobsWithUnspecifiedCompensationRange": {
                    "description": "If set to true, jobs with unspecified compensation range fields are\nincluded.",
                    "type": "boolean"
                },
                "range": {
                    "$ref": "CompensationRange",
                    "description": "Compensation range."
                },
                "type": {
                    "description": "Required. Type of filter.",
                    "enum": [
                        "FILTER_TYPE_UNSPECIFIED",
                        "UNIT_ONLY",
                        "UNIT_AND_AMOUNT",
                        "ANNUALIZED_BASE_AMOUNT",
                        "ANNUALIZED_TOTAL_AMOUNT"
                    ],
                    "enumDescriptions": [
                        "Filter type unspecified. Position holder, INVALID, should never be used.",
                        "Filter by `base compensation entry's` unit. A job is a match if and\nonly if the job contains a base CompensationEntry and the base\nCompensationEntry's unit matches provided units.\nPopulate one or more units.\n\nSee CompensationInfo.CompensationEntry for definition of\nbase compensation entry.",
                        "Filter by `base compensation entry's` unit and amount / range. A job\nis a match if and only if the job contains a base CompensationEntry, and\nthe base entry's unit matches provided\nCompensationUnit and\namount or range overlaps with provided\nCompensationRange.\n\nSee CompensationInfo.CompensationEntry for definition of\nbase compensation entry.\n\nSet exactly one units and populate range.",
                        "Filter by annualized base compensation amount and `base compensation\nentry's` unit. Populate range and zero or more units.",
                        "Filter by annualized total compensation amount and `base compensation\nentry's` unit . Populate range and zero or more units."
                    ],
                    "type": "string"
                },
                "units": {
                    "description": "Required. Specify desired `base compensation entry's`\nCompensationInfo.CompensationUnit.",
                    "enumDescriptions": [
                        "Default value.",
                        "Hourly.",
                        "Daily.",
                        "Weekly",
                        "Monthly.",
                        "Yearly.",
                        "One time.",
                        "Other compensation units."
                    ],
                    "items": {
                        "enum": [
                            "COMPENSATION_UNIT_UNSPECIFIED",
                            "HOURLY",
                            "DAILY",
                            "WEEKLY",
                            "MONTHLY",
                            "YEARLY",
                            "ONE_TIME",
                            "OTHER_COMPENSATION_UNIT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompensationInfo": {
            "description": "Job compensation details.",
            "id": "CompensationInfo",
            "properties": {
                "annualizedBaseCompensationRange": {
                    "$ref": "CompensationRange",
                    "description": "Output only. Annualized base compensation range. Computed as base compensation entry's\nCompensationEntry.amount times\nCompensationEntry.expected_units_per_year.\n\nSee CompensationEntry for explanation on compensation annualization."
                },
                "annualizedTotalCompensationRange": {
                    "$ref": "CompensationRange",
                    "description": "Output only. Annualized total compensation range. Computed as all compensation entries'\nCompensationEntry.amount times\nCompensationEntry.expected_units_per_year.\n\nSee CompensationEntry for explanation on compensation annualization."
                },
                "entries": {
                    "description": "Job compensation information.\n\nAt most one entry can be of type\nCompensationInfo.CompensationType.BASE, which is\nreferred as **base compensation entry** for the job.",
                    "items": {
                        "$ref": "CompensationEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompensationRange": {
            "description": "Compensation range.",
            "id": "CompensationRange",
            "properties": {
                "maxCompensation": {
                    "$ref": "Money",
                    "description": "The maximum amount of compensation. If left empty, the value is set\nto a maximal compensation value and the currency code is set to\nmatch the currency code of\nmin_compensation."
                },
                "minCompensation": {
                    "$ref": "Money",
                    "description": "The minimum amount of compensation. If left empty, the value is set\nto zero and the currency code is set to match the\ncurrency code of max_compensation."
                }
            },
            "type": "object"
        },
        "CompleteQueryResponse": {
            "description": "Response of auto-complete query.",
            "id": "CompleteQueryResponse",
            "properties": {
                "completionResults": {
                    "description": "Results of the matching job/company candidates.",
                    "items": {
                        "$ref": "CompletionResult"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                }
            },
            "type": "object"
        },
        "CompletionResult": {
            "description": "Resource that represents completion results.",
            "id": "CompletionResult",
            "properties": {
                "imageUri": {
                    "description": "The URI of the company image for\nCOMPANY_NAME.",
                    "type": "string"
                },
                "suggestion": {
                    "description": "The suggestion for the query.",
                    "type": "string"
                },
                "type": {
                    "description": "The completion topic.",
                    "enum": [
                        "COMPLETION_TYPE_UNSPECIFIED",
                        "JOB_TITLE",
                        "COMPANY_NAME",
                        "COMBINED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Only suggest job titles.",
                        "Only suggest company names.",
                        "Suggest both job titles and company names."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Conversation": {
            "description": "Resource that represents a conversation.",
            "id": "Conversation",
            "properties": {
                "completedPrompts": {
                    "description": "Optional. A history of back-and-forth prompts (instantiated template prompt) and\nresponses to those prompts from the candidate if available.",
                    "items": {
                        "$ref": "Prompt"
                    },
                    "type": "array"
                },
                "contactType": {
                    "description": "The communication channel (for example, SMS) on which this conversation\ntook place.",
                    "enum": [
                        "CONTACT_TYPE_UNSPECIFIED",
                        "PHONE_CALL",
                        "SMS",
                        "WEB",
                        "EMAIL",
                        "OTHER_CONTACT_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Phone call.",
                        "SMS or Text Messaging.",
                        "Web-based conversations.",
                        "Email outreach.",
                        "Another contact type not specified here."
                    ],
                    "type": "string"
                },
                "displayTemporaryEntities": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of temporary entity name to readable representation.",
                    "type": "object"
                },
                "endTime": {
                    "description": "The timestamp on which the conversation was ended, which may be different\nfrom the time of last prompt if the conversation expired.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "finishingEvent": {
                    "$ref": "EventType",
                    "description": "Optional. The event that terminated this conversation."
                },
                "initiatingEvent": {
                    "$ref": "EventType",
                    "description": "Optional. The event that triggered the conversation."
                },
                "isConversationApproved": {
                    "description": "Required. Whether the candidate told the chatbot they could talk now or not.",
                    "type": "boolean"
                },
                "job": {
                    "description": "Resource name of the job this conversation is with.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\".",
                    "type": "string"
                },
                "knockoutResults": {
                    "description": "Output only. Shows the result of checking knockout conditions.",
                    "items": {
                        "$ref": "KnockoutResult"
                    },
                    "type": "array"
                },
                "knockoutTriggered": {
                    "description": "Output only. Indicates whether interview knockout is triggered or not.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Resource name assigned to the conversation by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/conversations/{conversation_id}\".",
                    "type": "string"
                },
                "nextPrompt": {
                    "$ref": "Prompt",
                    "description": "Optional. The next prompt to be asked in the flow of conversation."
                },
                "profile": {
                    "description": "Resource name of the candidate this conversation is with.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\".",
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "Optional. Candidate's rating about this conversation experience."
                },
                "startTime": {
                    "description": "The timestamp on which the conversation was started.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "description": "The current state of the conversation.",
                    "enum": [
                        "CONVERSATION_STATUS_UNSPECIFIED",
                        "SCHEDULED",
                        "IN_PROGRESS",
                        "IDLE",
                        "FINISHED",
                        "CANCELLED",
                        "EXPIRED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The conversation is scheduled to occur.",
                        "The conversation is in active progress.",
                        "The conversation was in progress but hasn't been actively conversing for\n15 minutes.",
                        "The conversation has finished.",
                        "The conversation was cancelled.",
                        "The conversation was started but timed out waiting for a candidate\nresponse."
                    ],
                    "type": "string"
                },
                "statusNotes": {
                    "description": "Optional. Notes about the status of the conversation, such as why it was cancelled.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConverseRequest": {
            "description": "Update conversation request.",
            "id": "ConverseRequest",
            "properties": {
                "textResponse": {
                    "description": "Required. A list of responses from the candidate. Should contain at least one\nresponse and responses can't be empty strings.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CreateApplicationRequest": {
            "description": "The Request of the CreateApplication method.",
            "id": "CreateApplicationRequest",
            "properties": {
                "application": {
                    "$ref": "Application",
                    "description": "Required. The application to be created."
                }
            },
            "type": "object"
        },
        "CreateAssignmentRequest": {
            "description": "The Request of the CreateAssignment method.",
            "id": "CreateAssignmentRequest",
            "properties": {
                "assignment": {
                    "$ref": "Assignment",
                    "description": "Required. The assignment to be created."
                }
            },
            "type": "object"
        },
        "CreateClientEventRequest": {
            "description": "The report event request.",
            "id": "CreateClientEventRequest",
            "properties": {
                "clientEvent": {
                    "$ref": "ClientEvent",
                    "description": "Required. Events issued when end user interacts with customer's application that\nuses Cloud Talent Solution."
                }
            },
            "type": "object"
        },
        "CreateCompanyRequest": {
            "description": "The Request of the CreateCompany method.",
            "id": "CreateCompanyRequest",
            "properties": {
                "company": {
                    "$ref": "Company",
                    "description": "Required. The company to be created."
                }
            },
            "type": "object"
        },
        "CreateConversationRequest": {
            "description": "Get conversation request.",
            "id": "CreateConversationRequest",
            "properties": {
                "conversation": {
                    "$ref": "Conversation",
                    "description": "Conversation to be created."
                }
            },
            "type": "object"
        },
        "CreateJobRequest": {
            "description": "Create job request.",
            "id": "CreateJobRequest",
            "properties": {
                "job": {
                    "$ref": "Job",
                    "description": "Required. The Job to be created."
                }
            },
            "type": "object"
        },
        "CreateProfileRequest": {
            "description": "Create profile request.",
            "id": "CreateProfileRequest",
            "properties": {
                "profile": {
                    "$ref": "Profile",
                    "description": "Required. The profile to be created."
                }
            },
            "type": "object"
        },
        "CreateRecruiterRequest": {
            "description": "Create recruiter request.",
            "id": "CreateRecruiterRequest",
            "properties": {
                "recruiter": {
                    "$ref": "Recruiter",
                    "description": "Required. The recruiter to be created."
                }
            },
            "type": "object"
        },
        "CreateTenantRequest": {
            "description": "The Request of the CreateTenant method.",
            "id": "CreateTenantRequest",
            "properties": {
                "tenant": {
                    "$ref": "Tenant",
                    "description": "Required. The tenant to be created."
                }
            },
            "type": "object"
        },
        "CustomAttribute": {
            "description": "Custom attribute values that are either filterable or non-filterable.",
            "id": "CustomAttribute",
            "properties": {
                "filterable": {
                    "description": "If the `filterable` flag is true, custom field values are searchable.\nIf false, values are not searchable.\n\nDefault is false.",
                    "type": "boolean"
                },
                "longValues": {
                    "description": "Exactly one of string_values or long_values must be specified.\n\nThis field is used to perform number range search.\n(`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`.\n\nCurrently at most 1 long_values is supported.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "stringValues": {
                    "description": "Exactly one of string_values or long_values must be specified.\n\nThis field is used to perform a string match (`CASE_SENSITIVE_MATCH` or\n`CASE_INSENSITIVE_MATCH`) search.\nFor filterable `string_value`s, a maximum total number of 200 values\nis allowed, with each `string_value` has a byte size of no more than\n500B. For unfilterable `string_values`, the maximum total byte size of\nunfilterable `string_values` is 50KB.\n\nEmpty string isn't allowed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CustomRankingInfo": {
            "description": "Custom ranking information for SearchJobsRequest.",
            "id": "CustomRankingInfo",
            "properties": {
                "importanceLevel": {
                    "description": "Required. Controls over how important the score of\nCustomRankingInfo.ranking_expression gets applied to job's final\nranking position.\n\nAn error is thrown if not specified.",
                    "enum": [
                        "IMPORTANCE_LEVEL_UNSPECIFIED",
                        "NONE",
                        "LOW",
                        "MILD",
                        "MEDIUM",
                        "HIGH",
                        "EXTREME"
                    ],
                    "enumDescriptions": [
                        "Default value if the importance level isn't specified.",
                        "The given ranking expression is of None importance, existing relevance\nscore (determined by API algorithm) dominates job's final ranking\nposition.",
                        "The given ranking expression is of Low importance in terms of job's\nfinal ranking position compared to existing relevance\nscore (determined by API algorithm).",
                        "The given ranking expression is of Mild importance in terms of job's\nfinal ranking position compared to existing relevance\nscore (determined by API algorithm).",
                        "The given ranking expression is of Medium importance in terms of job's\nfinal ranking position compared to existing relevance\nscore (determined by API algorithm).",
                        "The given ranking expression is of High importance in terms of job's\nfinal ranking position compared to existing relevance\nscore (determined by API algorithm).",
                        "The given ranking expression is of Extreme importance, and dominates\njob's final ranking position with existing relevance\nscore (determined by API algorithm) ignored."
                    ],
                    "type": "string"
                },
                "rankingExpression": {
                    "description": "Required. Controls over how job documents get ranked on top of existing relevance\nscore (determined by API algorithm). The product of ranking expression\nand relevance score is used to determine job's final ranking position.\n\nThe syntax for this expression is a subset of Google SQL syntax.\n\nSupported operators are: +, -, *, /, where the left and right side of\nthe operator is either a numeric Job.custom_attributes key,\ninteger/double value or an expression that can be evaluated to a number.\n\nParenthesis are supported to adjust calculation precedence. The\nexpression must be < 100 characters in length.\n\nSample ranking expression\n(year + 25) * 0.25 - (freshness / 0.5)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Date": {
            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
            "id": "Date",
            "properties": {
                "day": {
                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                    "format": "int32",
                    "type": "integer"
                },
                "year": {
                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DebugInfo": {
            "description": "Debug information.",
            "id": "DebugInfo",
            "properties": {
                "experimentIds": {
                    "description": "Identifiers for the versions of the search algorithm used during\nthis API invocation if multiple algorithms are used.\nThe default value is empty.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "moonshineDebugInfo": {
                    "type": "string"
                },
                "queryDebugInfo": {
                    "type": "string"
                },
                "recommendModelId": {
                    "description": "The model id for profiles recommendation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DebugOptions": {
            "description": "Various debug options available for debugging mode. Internal only.",
            "id": "DebugOptions",
            "properties": {
                "enableWildcardSearch": {
                    "description": "Temporarily added this flag for profile wildcard search\nFlag to indicate whether wildcard search is enabled",
                    "type": "boolean"
                },
                "level": {
                    "description": "Specifies the level of debug output. The higher the number, the more\ndebug information is returned and printed in backend server logs.\nCurrent levels are 1-4.",
                    "format": "int32",
                    "type": "integer"
                },
                "scoringParameterOverride": {
                    "description": "Specifies the scoring parameters to override during search. This is\nequivalent to the 'dsp' url parameter in the legacy system. For details,\nconsult go/gjobs-scoring-params.",
                    "type": "string"
                },
                "searchAllTenant": {
                    "description": "Search documents of all tenants (only implemented for job search as of\n6/14/2019).",
                    "type": "boolean"
                },
                "searcher": {
                    "description": "Specifies which search backend to use. Current available options are:\nst-bti, model-t, and st-muppet.",
                    "type": "string"
                },
                "stExpressionOverride": {
                    "description": "Overrides the ST sorting/scoring expression.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Degree": {
            "description": "Resource that represents a degree pursuing or acquired by a candidate.",
            "id": "Degree",
            "properties": {
                "degreeName": {
                    "description": "Full Degree name.\n\nFor example, \"B.S.\", \"Master of Arts\", and so on.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "degreeType": {
                    "description": "ISCED degree type.",
                    "enum": [
                        "DEGREE_TYPE_UNSPECIFIED",
                        "PRIMARY_EDUCATION",
                        "LOWER_SECONDARY_EDUCATION",
                        "UPPER_SECONDARY_EDUCATION",
                        "ADULT_REMEDIAL_EDUCATION",
                        "ASSOCIATES_OR_EQUIVALENT",
                        "BACHELORS_OR_EQUIVALENT",
                        "MASTERS_OR_EQUIVALENT",
                        "DOCTORAL_OR_EQUIVALENT"
                    ],
                    "enumDescriptions": [
                        "Default value. Represents no degree, or early childhood education.\nMaps to ISCED code 0.\nEx) Kindergarten",
                        "Primary education which is typically the first stage of compulsory\neducation. ISCED code 1.\nEx) Elementary school",
                        "Lower secondary education; First stage of secondary education building on\nprimary education, typically with a more subject-oriented curriculum.\nISCED code 2.\nEx) Middle school",
                        "Middle education; Second/final stage of secondary education preparing for\ntertiary education and/or providing skills relevant to employment.\nUsually with an increased range of subject options and streams. ISCED\ncode 3.\nEx) High school",
                        "Adult Remedial Education; Programmes providing learning experiences that\nbuild on secondary education and prepare for labour market entry and/or\ntertiary education. The content is broader than secondary but not as\ncomplex as tertiary education. ISCED code 4.",
                        "Associate's or equivalent; Short first tertiary programmes that are\ntypically practically-based, occupationally-specific and prepare for\nlabour market entry. These programmes may also provide a pathway to other\ntertiary programmes. ISCED code 5.",
                        "Bachelor's or equivalent; Programmes designed to provide intermediate\nacademic and/or professional knowledge, skills and competencies leading\nto a first tertiary degree or equivalent qualification. ISCED code 6.",
                        "Master's or equivalent; Programmes designed to provide advanced academic\nand/or professional knowledge, skills and competencies leading to a\nsecond tertiary degree or equivalent qualification. ISCED code 7.",
                        "Doctoral or equivalent; Programmes designed primarily to lead to an\nadvanced research qualification, usually concluding with the submission\nand defense of a substantive dissertation of publishable quality based on\noriginal research. ISCED code 8."
                    ],
                    "type": "string"
                },
                "fieldsOfStudy": {
                    "description": "Fields of study for the degree.\n\nFor example, \"Computer science\", \"engineering\".\n\nNumber of characters allowed is 100.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DelegatedUserInfo": {
            "description": "Delegated partner information where for admin or debug purpose, our\ninternal source needs to act as a partner to do READ_ONLY operations (for\nexample, SearchJobs).",
            "id": "DelegatedUserInfo",
            "properties": {
                "distributorId": {
                    "description": "The pretended distributor id.\n\nIf both project number and distributor id are provided,\ndistributor id has the higher priority.",
                    "type": "string"
                },
                "projectNumber": {
                    "description": "The GCP project number of the customer that the caller is acting on\nbehalf of.\n\nIf both project number and distributor id are provided,\ndistributor id has the higher priority.",
                    "format": "int64",
                    "type": "string"
                },
                "tenantId": {
                    "description": "The pretended tenant id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeviceInfo": {
            "description": "Device information collected from the job seeker, candidate, or\nother entity conducting the job search. Providing this information improves\nthe quality of the search results across devices.",
            "id": "DeviceInfo",
            "properties": {
                "deviceType": {
                    "description": "Type of the device.",
                    "enum": [
                        "DEVICE_TYPE_UNSPECIFIED",
                        "WEB",
                        "MOBILE_WEB",
                        "ANDROID",
                        "IOS",
                        "BOT",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "The device type isn't specified.",
                        "A desktop web browser, such as, Chrome, Firefox, Safari, or Internet\nExplorer)",
                        "A mobile device web browser, such as a phone or tablet with a Chrome\nbrowser.",
                        "An Android device native application.",
                        "An iOS device native application.",
                        "A bot, as opposed to a device operated by human beings, such as a web\ncrawler.",
                        "Other devices types."
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "A device-specific ID. The ID must be a unique identifier that\ndistinguishes the device from other devices.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EducationFilter": {
            "description": "Education filter of the search.",
            "id": "EducationFilter",
            "properties": {
                "degreeType": {
                    "description": "Education degree in ISCED code. Each value in degree covers a specific\nlevel of education, without any expansion to upper nor lower levels of\neducation degree.",
                    "enum": [
                        "DEGREE_TYPE_UNSPECIFIED",
                        "PRIMARY_EDUCATION",
                        "LOWER_SECONDARY_EDUCATION",
                        "UPPER_SECONDARY_EDUCATION",
                        "ADULT_REMEDIAL_EDUCATION",
                        "ASSOCIATES_OR_EQUIVALENT",
                        "BACHELORS_OR_EQUIVALENT",
                        "MASTERS_OR_EQUIVALENT",
                        "DOCTORAL_OR_EQUIVALENT"
                    ],
                    "enumDescriptions": [
                        "Default value. Represents no degree, or early childhood education.\nMaps to ISCED code 0.\nEx) Kindergarten",
                        "Primary education which is typically the first stage of compulsory\neducation. ISCED code 1.\nEx) Elementary school",
                        "Lower secondary education; First stage of secondary education building on\nprimary education, typically with a more subject-oriented curriculum.\nISCED code 2.\nEx) Middle school",
                        "Middle education; Second/final stage of secondary education preparing for\ntertiary education and/or providing skills relevant to employment.\nUsually with an increased range of subject options and streams. ISCED\ncode 3.\nEx) High school",
                        "Adult Remedial Education; Programmes providing learning experiences that\nbuild on secondary education and prepare for labour market entry and/or\ntertiary education. The content is broader than secondary but not as\ncomplex as tertiary education. ISCED code 4.",
                        "Associate's or equivalent; Short first tertiary programmes that are\ntypically practically-based, occupationally-specific and prepare for\nlabour market entry. These programmes may also provide a pathway to other\ntertiary programmes. ISCED code 5.",
                        "Bachelor's or equivalent; Programmes designed to provide intermediate\nacademic and/or professional knowledge, skills and competencies leading\nto a first tertiary degree or equivalent qualification. ISCED code 6.",
                        "Master's or equivalent; Programmes designed to provide advanced academic\nand/or professional knowledge, skills and competencies leading to a\nsecond tertiary degree or equivalent qualification. ISCED code 7.",
                        "Doctoral or equivalent; Programmes designed primarily to lead to an\nadvanced research qualification, usually concluding with the submission\nand defense of a substantive dissertation of publishable quality based on\noriginal research. ISCED code 8."
                    ],
                    "type": "string"
                },
                "fieldOfStudy": {
                    "description": "The field of study. This is to search against value provided in\nDegree.fields_of_study.\nFor example \"Computer Science\", \"Mathematics\".",
                    "type": "string"
                },
                "negated": {
                    "description": "Whether to apply negation to the filter so profiles matching the filter\nis excluded.",
                    "type": "boolean"
                },
                "school": {
                    "description": "The school name. For example \"MIT\", \"University of California, Berkeley\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EducationRecord": {
            "description": "Resource that represents an education record of a candidate.",
            "id": "EducationRecord",
            "properties": {
                "address": {
                    "$ref": "Address",
                    "description": "The physical address of the education institution."
                },
                "degreeDescription": {
                    "description": "The full description of the degree.\n\nFor example, \"Master of Science in Computer Science\", \"B.S in Math\".\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "degreeSnippet": {
                    "description": "Output only. The job description snippet shows how the Degree is related to a search\nquery in search result. It's empty if the Degree isn't related to the\nsearch query.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the education.\n\nNumber of characters allowed is 100,000.",
                    "type": "string"
                },
                "endDate": {
                    "$ref": "Date",
                    "description": "The end date of the education."
                },
                "expectedGraduationDate": {
                    "$ref": "Date",
                    "description": "The expected graduation date if currently pursuing a degree."
                },
                "isCurrent": {
                    "description": "If this education is current.",
                    "type": "boolean"
                },
                "schoolName": {
                    "description": "The name of the school or institution.\n\nFor example, \"Stanford University\", \"UC Berkeley\", and so on.\n\nNumber of characters allowed is 250.",
                    "type": "string"
                },
                "schoolNameSnippet": {
                    "description": "Output only. The school name snippet shows how the school_name is related to a\nsearch query in search result. It's empty if the school_name isn't\nrelated to the search query.",
                    "type": "string"
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "The start date of the education."
                },
                "structuredDegree": {
                    "$ref": "Degree",
                    "description": "The structured notation of the degree."
                }
            },
            "type": "object"
        },
        "EeoDemographics": {
            "description": "The demographic information (equal employment opportunity, EEO).",
            "id": "EeoDemographics",
            "properties": {
                "age": {
                    "description": "Person's \"age\" as defined and specified by an EEO questionaire.",
                    "format": "int32",
                    "type": "integer"
                },
                "dateOfBirth": {
                    "$ref": "Date",
                    "description": "Person's \"year of birth\" as an alternative to age (for current or\nindefinite profile records) as defined and specified by an EEO\nquestionaire."
                },
                "disabilityStatus": {
                    "description": "Person's \"disability\" status as defined and specified by an EEO\nquestionaire.",
                    "enum": [
                        "DISABILITY_STATUS_UNSPECIFIED",
                        "DISABILITY_STATUS_UNDISCLOSED",
                        "DISABILITY_STATUS",
                        "NO_DISABILITY_STATUS"
                    ],
                    "enumDescriptions": [
                        "Disability status unspecified.",
                        "Person chose not to disclose disability status.",
                        "Person voluntarily self-identifies as having a disability.",
                        "Person voluntarily self-identifies as not having a disability."
                    ],
                    "type": "string"
                },
                "ethnicities": {
                    "description": "Person's \"race\"/\"ethnicity\" as defined and specified by an EEO\nquestionaire.",
                    "enumDescriptions": [
                        "Race or ethnicity is not specified.",
                        "The individual elected to not disclose race or ethnicity.",
                        "A person having origins in any of the original peoples of Europe, the\nMiddle East, or North Africa.",
                        "A person having origins in any of the black racial groups of Africa.",
                        "A person having origins in any of the original peoples of Hawaii, Guam,\nSamoa, or other Pacific Islands.",
                        "A person having origins in any of the original peoples of the Far East,\nSoutheast Asia, or the Indian subcontinent including, for example,\nCambodia, China, India, Japan, Korea, Malaysia, Pakistan, the Philippine\nIslands, Thailand, and Vietnam.",
                        "A person of Cuban, Mexican, Chicano, Puerto Rican, South or Central\nAmerican, or other Spanish culture or origin, regardless of race.",
                        "A person having origins in any of the original peoples of North and South\nAmerica (including Central America), and who maintains tribal affiliation\nor community attachment."
                    ],
                    "items": {
                        "enum": [
                            "ETHNICITY_UNSPECIFIED",
                            "ETHNICITY_UNDISCLOSED",
                            "WHITE",
                            "BLACK_AFRICAN_AMERICAN",
                            "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
                            "ASIAN",
                            "HISPANIC_LATINO",
                            "AMERICAN_INDIAN_OR_ALASKA_NATIVE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "gender": {
                    "description": "Person's \"gender\" as defined and specified by an EEO questionaire.",
                    "enum": [
                        "GENDER_UNSPECIFIED",
                        "GENDER_UNDISCLOSED",
                        "MALE",
                        "FEMALE"
                    ],
                    "enumDescriptions": [
                        "Profile gender identity unspecified.",
                        "Individual chose not to disclose gender.",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                },
                "geneticInfo": {
                    "description": "Person's \"genetic information\" as defined and specified by an EEO\nquestionaire.",
                    "type": "string"
                },
                "nationalOrigin": {
                    "description": "Person's \"national origin\" as defined and specified by an EEO questionaire.",
                    "type": "string"
                },
                "religion": {
                    "description": "Person's \"religion\" as defined and specified by an EEO questionaire.",
                    "type": "string"
                },
                "sexualOrientation": {
                    "description": "Person's \"sexual orientation\" as defined and specified by an EEO\nquestionaire.",
                    "type": "string"
                },
                "veteranStatus": {
                    "description": "Person's \"veteran status\" as defined and specified by an EEO questionaire.",
                    "enum": [
                        "VETERAN_STATUS_UNSPECIFIED",
                        "VETERAN_STATUS_UNDISCLOSED",
                        "PROTECTED_VETERAN_STATUS",
                        "NO_PROTECTED_VETERAN_STATUS"
                    ],
                    "enumDescriptions": [
                        "Veteran status unspecified.",
                        "Person chose not to disclose protected veteran status.",
                        "Person identifies as one or more classifications of protected veteran\nstatus.",
                        "Person does not identify as a protected veteran status."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Email": {
            "description": "Resource that represents a person's email address.",
            "id": "Email",
            "properties": {
                "emailAddress": {
                    "description": "Email address.\n\nNumber of characters allowed is 4,000.",
                    "type": "string"
                },
                "usage": {
                    "description": "The usage of the email address. For example, SCHOOL, WORK, PERSONAL.",
                    "enum": [
                        "CONTACT_INFO_USAGE_UNSPECIFIED",
                        "PERSONAL",
                        "WORK",
                        "SCHOOL"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Personal use.",
                        "Work use.",
                        "School use."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmployeeSatisfactionSurvey": {
            "description": "Any employee satisfaction surveys (i.e., how happy they are with the role,\nand so on).",
            "id": "EmployeeSatisfactionSurvey",
            "properties": {
                "outcome": {
                    "description": "Required. Is the rating on this assessment area positive, negative, neutral?",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this assessment."
                },
                "surveyName": {
                    "description": "Required. Customer provided survey name or description.",
                    "type": "string"
                },
                "surveyNotes": {
                    "description": "Any free-text notes / feedback provided on the survey.",
                    "type": "string"
                },
                "surveyTime": {
                    "description": "Required. Customer provided timestamp of when the satisfaction survey was\ncompleted.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "surveyTopics": {
                    "description": "Individual sub-components of the satisfaction survey (that is, overall,\noffice location, manager, work / life balance, and so on).",
                    "items": {
                        "$ref": "EmployeeSatisfactionSurveyTopic"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EmployeeSatisfactionSurveyTopic": {
            "description": "Individual sub-components of the satisfaction survey (i.e., overall, office\nlocation, manager, work / life balance, and so on).",
            "id": "EmployeeSatisfactionSurveyTopic",
            "properties": {
                "outcome": {
                    "description": "Is the rating on this assessment area positive, negative, neutral?",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this assessment."
                },
                "surveyTopicName": {
                    "description": "Required. What area of satisfaction this is about (that is, overall, office\nlocation, manager, work / life balance, and so on).",
                    "type": "string"
                },
                "surveyTopicNotes": {
                    "description": "Any free-text notes / feedback provided on this sub-component.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EmployerFilter": {
            "description": "Employer filter of the search.",
            "id": "EmployerFilter",
            "properties": {
                "employer": {
                    "description": "Required. The name of the employer, for example \"Google\", \"Alphabet\".",
                    "type": "string"
                },
                "mode": {
                    "description": "Define set of EmploymentRecords to search against.\n\nDefaults to EmployerFilterMode.ALL_EMPLOYMENT_RECORDS.",
                    "enum": [
                        "EMPLOYER_FILTER_MODE_UNSPECIFIED",
                        "ALL_EMPLOYMENT_RECORDS",
                        "CURRENT_EMPLOYMENT_RECORDS_ONLY",
                        "PAST_EMPLOYMENT_RECORDS_ONLY"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Apply to all employers in Profile.employment_records.",
                        "Apply only to current employer in Profile.employment_records.",
                        "Apply only to past (not current) employers in\nProfile.employment_records."
                    ],
                    "type": "string"
                },
                "negated": {
                    "description": "Whether to apply negation to the filter so profiles matching the filter\nis excluded.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "EmploymentRecord": {
            "description": "Resource that represents an employment record of a candidate.",
            "id": "EmploymentRecord",
            "properties": {
                "address": {
                    "$ref": "Address",
                    "description": "The physical address of the employer."
                },
                "divisionName": {
                    "description": "The division name of the employment.\n\nFor example, division, department, client, and so on.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "employerName": {
                    "description": "The name of the employer company/organization.\n\nFor example, \"Google\", \"Alphabet\", and so on.\n\nNumber of characters allowed is 250.",
                    "type": "string"
                },
                "employerNameSnippet": {
                    "description": "Output only. The employer name snippet shows how the employer_name is\nrelated to a search query. It's empty if the employer_name isn't\nrelated to the search query.",
                    "type": "string"
                },
                "endDate": {
                    "$ref": "Date",
                    "description": "End date of the employment."
                },
                "isCurrent": {
                    "description": "If this employment is current.",
                    "type": "boolean"
                },
                "isSelfEmployed": {
                    "description": "If this employment is self-employed.",
                    "type": "boolean"
                },
                "isSupervisor": {
                    "description": "If the jobs is a supervisor position.",
                    "type": "boolean"
                },
                "jobDescription": {
                    "description": "The description of job content.\n\nNumber of characters allowed is 100,000.",
                    "type": "string"
                },
                "jobDescriptionSnippet": {
                    "description": "Output only. The job description snippet shows how the job_description\nis related to a search query. It's empty if the job_description isn't\nrelated to the search query.",
                    "type": "string"
                },
                "jobTitle": {
                    "description": "The job title of the employment.\n\nFor example, \"Software Engineer\", \"Data Scientist\", and so on.\n\nNumber of characters allowed is 250.",
                    "type": "string"
                },
                "jobTitleSnippet": {
                    "description": "Output only. The job title snippet shows how the job_title is related\nto a search query. It's empty if the job_title isn't related to the\nsearch query.",
                    "type": "string"
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "Start date of the employment."
                }
            },
            "type": "object"
        },
        "EmploymentRecordSummary": {
            "description": "Resource that represents a summary of an employment record.",
            "id": "EmploymentRecordSummary",
            "properties": {
                "employerName": {
                    "description": "The name of the employer company/organization.\n\nFor example, \"Google\", \"Alphabet\", and so on.\n\nIf the data is from Profile.employment_records, represents\nProfile.employment_records.employer_name.\n\nIf the data is from Assignment, represents either\n\n* Company.display_name from the Company record joined via Company.name\n  == Job.company AND Assignment.job == Job.name\n\n* If the above is not present, represents Company.display_name from the\n  Company record joined via Assignment.company == Company.name",
                    "type": "string"
                },
                "endDate": {
                    "$ref": "Date",
                    "description": "End date of the employment.  If the data is from\nProfile.employment_records, represents\nProfile.employment_records.end_date.\n\nIf the data is from Assignment, represents Assignment.end_date."
                },
                "jobTitle": {
                    "description": "The job title of the employment.\n\nFor example, \"Software Engineer\", \"Data Scientist\", and so on.\n\nIf the data is from Profile.employment_records, represents\nProfile.employment_records.job_title.\n\nIf the data is from Assignment, represents Job.job_title from the Job\nrecord joined via Assignment.job == Job.name",
                    "type": "string"
                },
                "source": {
                    "description": "The source of employment record summary - where this employment record was\nfound.",
                    "enum": [
                        "EMPLOYMENT_RECORD_SUMMARY_SOURCE_UNSPECIFIED",
                        "EMPLOYMENT_HISTORY",
                        "ASSIGNMENT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The profile's employment_records.",
                        "Job assignment record for this profile."
                    ],
                    "type": "string"
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "Start date of the employment.  If the data is from\nProfile.employment_records, represents\nProfile.employment_records.start_date.\n\nIf the data is from Assignment, represents Assignment.start_date.\n\nIt can be a partial date (only year, or only year and month), but must be\nvalid. Otherwise an error is thrown.\n\nExamples:\n\n* `{\"year\": 2017, \"month\": 2, \"day\": 28}` is valid.\n* `{\"year\": 2020, \"month\": 1, \"date\": 31}` is valid.\n* `{\"year\": 2018, \"month\": 12}` is valid (partial date).\n* `{\"year\": 2018}` is valid (partial date).\n* `{\"year\": 2015, \"day\": 21}` is not valid (month is missing but day is\n   presented).\n* `{\"year\": 2018, \"month\": 13}` is not valid (invalid month).\n* `{\"year\": 2017, \"month\": 1, \"day\": 32}` is not valid (invalid day)."
                }
            },
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "EventType": {
            "description": "Resource that represents either profile or job event.",
            "id": "EventType",
            "properties": {
                "jobEventType": {
                    "description": "Optional. The type of job event that triggered or terminated the conversation.",
                    "enum": [
                        "JOB_EVENT_TYPE_UNSPECIFIED",
                        "IMPRESSION",
                        "VIEW",
                        "VIEW_REDIRECT",
                        "APPLICATION_START",
                        "APPLICATION_FINISH",
                        "APPLICATION_QUICK_SUBMISSION",
                        "APPLICATION_REDIRECT",
                        "APPLICATION_START_FROM_SEARCH",
                        "APPLICATION_REDIRECT_FROM_SEARCH",
                        "APPLICATION_COMPANY_SUBMIT",
                        "BOOKMARK",
                        "UNBOOKMARK",
                        "NOTIFICATION",
                        "HIRED",
                        "SENT_CV",
                        "INTERVIEW_GRANTED",
                        "NEGATIVE_FEEDBACK",
                        "UNSET_NEGATIVE_FEEDBACK"
                    ],
                    "enumDescriptions": [
                        "The event is unspecified by other provided values.",
                        "The job seeker or other entity interacting with the service has\nhad a job rendered in their view, such as in a list of search results in\na compressed or clipped format. This event is typically associated with\nthe viewing of a jobs list on a single page by a job seeker.",
                        "The job seeker, or other entity interacting with the service, has\nviewed the details of a job, including the full description. This\nevent doesn't apply to the viewing a snippet of a job appearing as a\npart of the job search results. Viewing a snippet is associated with an\nimpression).",
                        "The job seeker or other entity interacting with the service\nperformed an action to view a job and was redirected to a different\nwebsite for job.",
                        "The job seeker or other entity interacting with the service\nbegan the process or demonstrated the intention of applying for a job.",
                        "The job seeker or other entity interacting with the service\nsubmitted an application for a job.",
                        "The job seeker or other entity interacting with the service\nsubmitted an application for a job with a single click without\nentering information. If a job seeker performs this action, send only\nthis event to the service. Do not also send\nJobEventType.APPLICATION_START or JobEventType.APPLICATION_FINISH\nevents.",
                        "The job seeker or other entity interacting with the service\nperformed an action to apply to a job and was redirected to a different\nwebsite to complete the application.",
                        "The job seeker or other entity interacting with the service began the\nprocess or demonstrated the intention of applying for a job from the\nsearch results page without viewing the details of the job posting.\nIf sending this event, JobEventType.VIEW event shouldn't be sent.",
                        "The job seeker, or other entity interacting with the service, performs an\naction with a single click from the search results page to apply to a job\n(without viewing the details of the job posting), and is redirected\nto a different website to complete the application. If a candidate\nperforms this action, send only this event to the service. Do not also\nsend JobEventType.APPLICATION_START,\nJobEventType.APPLICATION_FINISH or JobEventType.VIEW events.",
                        "This event should be used when a company submits an application\non behalf of a job seeker. This event is intended for use by staffing\nagencies attempting to place candidates.",
                        "The job seeker or other entity interacting with the service demonstrated\nan interest in a job by bookmarking or saving it.",
                        "The job seeker or other entity interacting with the service in a job by\nunbookmarking or unsaving it.",
                        "The job seeker or other entity interacting with the service was\nsent a notification, such as an email alert or device notification,\ncontaining one or more jobs listings generated by the service.",
                        "The job seeker or other entity interacting with the service was\nemployed by the hiring entity (employer). Send this event\nonly if the job seeker was hired through an application that was\ninitiated by a search conducted through the Cloud Talent Solution\nservice.",
                        "A recruiter or staffing agency submitted an application on behalf of the\ncandidate after interacting with the service to identify a suitable job\nposting.",
                        "The entity interacting with the service (for example, the job seeker),\nwas granted an initial interview by the hiring entity (employer). This\nevent should only be sent if the job seeker was granted an interview as\npart of an application that was initiated by a search conducted through /\nrecommendation provided by the Cloud Talent Solution service.",
                        "The job seeker makes a \"thumbs down\" decision about a given job.",
                        "The job seeker reverses their decision to \"thumbs down\" a given job."
                    ],
                    "type": "string"
                },
                "profileEventType": {
                    "description": "Optional. The type of profile event that triggered or terminated the conversation.",
                    "enum": [
                        "PROFILE_EVENT_TYPE_UNSPECIFIED",
                        "IMPRESSION",
                        "VIEW",
                        "BOOKMARK",
                        "UNBOOKMARK",
                        "CONTACT_PHONE",
                        "CONTACT_TEXT",
                        "CONTACT_EMAIL",
                        "CONTACT_ATS_NOTE",
                        "NEGATIVE_FEEDBACK",
                        "UNSET_NEGATIVE_FEEDBACK",
                        "PROFILE_AVAILABILITY_DETAIL_VIEWED",
                        "PROFILE_SHORTLIST",
                        "PROFILE_UNSHORTLIST"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Send this event when a ProfileEvent.profiles was sent as a part of\na result set for a CTS API call and was rendered in the end user's UI\n(that is, the ProfileEvent.recruiter).",
                        "The VIEW event records the action of a candidate's profile being\nviewed by an end user. This is critical to tracking product metrics and\nshould be sent for every profile VIEW that happens in your system,\nwhether the event is associated with an API call (for example, a\nrecruiter making a request for a result set and clicking on a profile)\nor not (a recruiter using the system to view profile details without\nmaking a request).\n\nFor a VIEW events associated with API calls, the\nClientEvent.request_id should be populated.  If the VIEW is not\nassociated with an API call, request_id should\nnot be populated.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "The profile is bookmarked.",
                        "The profile is unbookmarked.",
                        "This event is typically created by processing actual call log data (that\nis, phone call records) in order to determine if a\nProfileEvent.recruiter called a ProfileEvent.profiles.\n\nThe ClientEvent.requestId is optional. CTS applies inferance logic\nto link this event to a requestId for both Search and Reccommendation\nAPI calls.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "Text message sent to the profile (regardless of if the candidate\nresponded).\nThis event is typically created by processing actual text log data (that\nis, text records) in order to determine if a ProfileEvent.recruiter\ntexted a ProfileEvent.profiles.\n\nNote that for this event type, the ClientEvent.requestId is\noptional, and CTS applies inferance logic to link this event to a\nrequestId for both Search and Reccommendation API calls.\n\nThis event requires valid recruiter and one valid ID in profiles.",
                        "Email sent to the profile (regardless of if the candidate responded).\nThis event is typically created by processing actual email log data\n(that is, email history) in order to determine if a\nProfileEvent.recruiter contacted a ProfileEvent.profiles.\n\nThe ClientEvent.requestId is optional. CTS applies inferance logic\nto link this event to a requestId for both Search and Reccommendation\nAPI calls.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "Note was entered in the ATS indicating that the recruiter tried to\ncontact the candidate (regardless of the mode of contact, for example,\nemail, phone, and so on).\n\nEven though ATS notes are syncronized to CTS, this event is required to\nbe sent separately.  It is typically created by processing ATS notes in\norder to determine if a ProfileEvent.recruiter made a note that\nthey contacted a ProfileEvent.profiles.  The logic for determining\nwhether an ATS note indicates a contact attempt is customer specific,\nalthough often there is a type of ATS note that indicates this or a\npattern of text strings (such as LVM) that indicate this type of\nbehavior in an ATS note.\n\nThe ClientEvent.requestId is optional. CTS applies inferance logic\nto link this event to a requestId for both Search and Reccommendation\nAPI calls.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "The recruiter makes a \"thumbs down\" decision about a given profile\nfor a given job.\nThis event requires valid request_id, recruiter, and one valid ID in\nprofiles and one valid ID in jobs.",
                        "The recruiter reverses their decision to \"thumbs down\" a given profile\nfor the given job.\nThis event requires valid request_id, recruiter, and one valid ID in\nprofiles and one valid ID in jobs.",
                        "The candidate availability detail is viewed.\nThis event is sent to indicate that the details beyond the\nProfile[available] boolean flag was rendered in the\ncustomer's UI and seen by a recruiter. The typical use case is to send\nthis event when an end user clicks on the UI\naffordance on a candidate's card in the result set\nto see the additional detail beyond the summary boolean value for\navailability.",
                        "Profile Event: The profile is added to a shortlist.",
                        "Profile Event: The profile is removed from a shortlist."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Experience": {
            "description": "Resource that that represents an experience.",
            "id": "Experience",
            "properties": {
                "displayName": {
                    "description": "Required. The name of the experience the person has.",
                    "type": "string"
                },
                "experienceYears": {
                    "description": "The years of experience in this specific experience.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ExtractedAnswer": {
            "description": "Structural answer extracted from a conversation or profile.",
            "id": "ExtractedAnswer",
            "properties": {
                "boolAnswer": {
                    "description": "Answer to a boolean question.",
                    "type": "boolean"
                },
                "dateAnswer": {
                    "$ref": "Date",
                    "description": "Answer to a date question."
                },
                "doubleAnswer": {
                    "description": "Answer to a numeric question.",
                    "format": "double",
                    "type": "number"
                },
                "listAnswer": {
                    "$ref": "ListAnswer",
                    "description": "Answer to a list-answer question."
                },
                "stringAnswer": {
                    "description": "Answer to an enum question.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FeatureConfig": {
            "description": "The configuration of a specific feature type for a tenant.",
            "id": "FeatureConfig",
            "properties": {
                "enabledControlFlags": {
                    "description": "The control flags list representing the resource set for which this feature\nis turned on. For example, [\"US_stage1\", \"US_stage2\", \"US_public\"]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "featureType": {
                    "description": "The type of feature, must be a supported feature enum.",
                    "enum": [
                        "CONTROLLABLE_FEATURE_TYPE_UNSPECIFIED",
                        "CE_OUTREACH",
                        "CE_SMS"
                    ],
                    "enumDescriptions": [
                        "Default feature type.",
                        "Allows CE Outreach. This feature applies to [Profile] resources only.\nSee the Profile.feature_control_flags field to enable/disable this\nfeature for each profile.",
                        "Allows CE Sms chat. This feature applies to [Profile] resources only.\nSee the Profile.feature_control_flags field to enable/disable this\nfeature for each profile."
                    ],
                    "type": "string"
                },
                "updateTime": {
                    "description": "Last update time of this configuration.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FieldUpdateMetadata": {
            "description": "Resource that represents a profile update history.",
            "id": "FieldUpdateMetadata",
            "properties": {
                "updateReasonNote": {
                    "description": "The reason this update occurred.",
                    "type": "string"
                },
                "updateTime": {
                    "description": "Required. When the profile information is updated.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HighlightProfileRequest": {
            "description": "Highlight profile for job and profile pair. This call highlighted records in\nprofile for the given\nHighlightProfileRequest.job and\nHighlightProfileRequest.profile.",
            "id": "HighlightProfileRequest",
            "properties": {
                "fieldMask": {
                    "description": "A field mask to specify the profile fields to be included in the\nSummarizedProfile in the results.  The field\nProfile.name is always included.\nYou can specify one or more of the following fields:\n\n* external_id\n* external_system\n* source\n* uri\n* source_note\n* group_id\n* field_update_metadata\n* is_hirable\n* create_time\n* update_time\n* resume\n* primary_responsibilities\n* citizenships\n* work_authorizations\n* employee_types\n* language_code\n* qualification_summary\n* person_names\n* addresses\n* email_addresses\n* phone_numbers\n* personal_uris\n* additional_contact_info\n* allowed_contact_types\n* preferred_contact_types\n* contact_availability\n* employment_records\n* education_records\n* skills\n* language_fluencies\n* activities\n* publications\n* patents\n* certifications\n* applications\n* assignments\n* recruiting_notes\n* work_preference\n* industry_experiences\n* work_environment_experiences\n* work_availability\n* security_clearances\n* custom_attributes\n* tags\n* currently_placed\n* applied\n* previously_placed\n* summarized_employment_history\n\nYou may set the field mask by using the format: { fieldMask: { paths:[\n'email_addresses','addresses', 'person_names' ] } }",
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "job": {
                    "description": "Resource name of the job that the profile matches to.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For example,\n\"projects/foo/tenants/bar/jobs/baz\".",
                    "type": "string"
                },
                "recruiter": {
                    "description": "Required. Resource name of the recruiter to identify.\n\nThe format is\n\"projects/{project_id}}/tenants/{tenant_id}/recruiters/{recruiter_id}\".\nFor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                    "type": "string"
                },
                "resultSetId": {
                    "description": "An id that uniquely identifies the result set of a\nRecommendProfilesRequest call.\nUsed for identification.\n\nIf set, the id is returned in the response.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HighlightProfileResponse": {
            "description": "Highlighted records for job and profile pair.",
            "id": "HighlightProfileResponse",
            "properties": {
                "highlightedRecords": {
                    "description": "Records to be highlighted.",
                    "items": {
                        "$ref": "HighlightedRecord"
                    },
                    "type": "array"
                },
                "resultSetId": {
                    "description": "An id that uniquely identifies the result set of a\nRecommendProfilesRequest call.\nUsed for identification.\n\nReturns the same result_set_id set in the request.",
                    "type": "string"
                },
                "summarizedProfile": {
                    "$ref": "SummarizedProfile",
                    "description": "The profile recommended according to the criteria in the request."
                }
            },
            "type": "object"
        },
        "HighlightedRecord": {
            "description": "Record to be highlighted in a profile.",
            "id": "HighlightedRecord",
            "properties": {
                "address": {
                    "$ref": "Address",
                    "description": "The candidate's postal addresses."
                },
                "application": {
                    "description": "The resource name of the candidate's application.",
                    "type": "string"
                },
                "assignment": {
                    "description": "The resource name of the candidate's assignment.",
                    "type": "string"
                },
                "educationRecord": {
                    "$ref": "EducationRecord",
                    "description": "The education history record of the candidate."
                },
                "employmentRecord": {
                    "$ref": "EmploymentRecord",
                    "description": "The employment history record of the candidate."
                },
                "highlightScore": {
                    "description": "The score for highlight.\nRepresents how good the record match to the job.",
                    "format": "double",
                    "type": "number"
                },
                "recruitingNote": {
                    "$ref": "RecruitingNote",
                    "description": "The recruiting notes added for the candidate."
                },
                "skill": {
                    "$ref": "Skill",
                    "description": "The skill of the candidate."
                },
                "workPreference": {
                    "$ref": "WorkPreference",
                    "description": "The work preference of this candidate."
                }
            },
            "type": "object"
        },
        "HistogramQuery": {
            "description": "The histogram request.",
            "id": "HistogramQuery",
            "properties": {
                "histogramQuery": {
                    "description": "An expression specifies a histogram request against matching resources\n(for example, jobs, profiles) for searches.\n\nSee SearchJobsRequest.histogram_queries and\nSearchProfilesRequest.histogram_queries for details about syntax.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HistogramQueryResult": {
            "description": "Histogram result that matches HistogramQuery specified in searches.",
            "id": "HistogramQueryResult",
            "properties": {
                "histogram": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "string"
                    },
                    "description": "A map from the values of the facet associated with distinct values to the\nnumber of matching entries with corresponding value.\n\nThe key format is:\n\n* (for string histogram) string values stored in the field.\n* (for named numeric bucket) name specified in `bucket()` function, like\n  for `bucket(0, MAX, \"non-negative\")`, the key will be `non-negative`.\n* (for anonymous numeric bucket) range formatted as `<low>-<high>`, for\n  example, `0-1000`, `MIN-0`, and `0-MAX`.",
                    "type": "object"
                },
                "histogramQuery": {
                    "description": "Requested histogram expression.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InitiateConversationRequest": {
            "description": "Initiate conversation request.",
            "id": "InitiateConversationRequest",
            "properties": {
                "contactType": {
                    "description": "Required. The contact type to contact the candidate. Currently, only\nWEB and SMS is supported.",
                    "enum": [
                        "CONTACT_TYPE_UNSPECIFIED",
                        "PHONE_CALL",
                        "SMS",
                        "WEB",
                        "EMAIL",
                        "OTHER_CONTACT_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Phone call.",
                        "SMS or Text Messaging.",
                        "Web-based conversations.",
                        "Email outreach.",
                        "Another contact type not specified here."
                    ],
                    "type": "string"
                },
                "conversationType": {
                    "description": "Conversation type.",
                    "enum": [
                        "CONVERSATION_TYPE_UNSPECIFIED",
                        "USER_INITIATED",
                        "OUTREACH",
                        "FOLLOW_UP"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user started this conversation.",
                        "Reaching out to a candidate to gather information.",
                        "Following up to a previous outreach that hasn't been completed."
                    ],
                    "type": "string"
                },
                "conversationView": {
                    "description": "The desired conversation attributes returned in the response.\n\nDefaults to NAME_ONLY if no value is\nspecified",
                    "enum": [
                        "CONVERSATION_VIEW_UNSPECIFIED",
                        "CONVERSATION_VIEW_NAME_ONLY",
                        "CONVERSATION_VIEW_BASIC",
                        "CONVERSATION_VIEW_FULL"
                    ],
                    "enumDescriptions": [
                        "The default value.",
                        "Include only name.",
                        "Include basic metadata about the conversation, but not the full contents.",
                        "Include everything."
                    ],
                    "type": "string"
                },
                "job": {
                    "description": "The resource name of the job, if there exists, to which this conversation\nis related.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\",\nfor example, \"projects/foo/tenants/bar/jobs/baz\".",
                    "type": "string"
                },
                "notificationId": {
                    "description": "The outreach or followup notification ID, sent by Google in the Pub/Sub\nmessage, to\nwhich this request is related.",
                    "type": "string"
                },
                "profile": {
                    "description": "Required. The resource name of the candidate to be contacted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\", for\nexample, \"projects/foo/tenants/bar/profiles/baz\".",
                    "type": "string"
                },
                "recruiter": {
                    "description": "The resource name of the recruiter, if there exists, on whose behalf to\ninitiate the conversation.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/recruiter/{recruiter_id}\", for\nexample, \"projects/foo/tenants/bar/recruiter/baz\".",
                    "type": "string"
                },
                "smsContactInfo": {
                    "$ref": "SmsContactInfo",
                    "description": "Required if contact is through SMS.\n\nThis field contains the necessary information to contact through SMS."
                },
                "userConsent": {
                    "description": "Required. Providing a value of true confirms by the client that prior consent for the\ncommunication has been received under applicable law. If a value of false\nis provided the conversation will be prevented.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "InitiateConversationResponse": {
            "description": "Initiate conversation response.",
            "id": "InitiateConversationResponse",
            "properties": {
                "conversation": {
                    "description": "Resource name of the conversation initiated.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Interview": {
            "description": "Details of an interview.",
            "id": "Interview",
            "properties": {
                "interviewTime": {
                    "description": "Required. Customer provided timestamp of when the interview took place.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "interviewTopicAssessments": {
                    "description": "Interview feedback about individual sub-components (that is, culture fit,\ntechnical skills).",
                    "items": {
                        "$ref": "InterviewTopicAssessment"
                    },
                    "type": "array"
                },
                "interviewerId": {
                    "description": "Unique identifier of the person conducting the interview.",
                    "type": "string"
                },
                "interviewerRole": {
                    "description": "Required. Who is conducting the interview.",
                    "enum": [
                        "INTERVIEWER_ROLE_UNSPECIFIED",
                        "RECRUITER_OR_SOURCER",
                        "HIRING_MANAGER",
                        "OTHER_INTERVIEWER_ROLE"
                    ],
                    "enumDescriptions": [
                        "Unknown role of interviewer.",
                        "Recruiter or sourcer is conducting the interview.",
                        "Hiring Manager at the client of the firm that is Google's customer.",
                        "Interview role is known, but this role is not specified in this ENUM."
                    ],
                    "type": "string"
                },
                "medium": {
                    "description": "How was the interview conducted (phone, and so on)?",
                    "enum": [
                        "MEDIUM_UNSPECIFIED",
                        "PHONE",
                        "ONSITE",
                        "INFORMAL",
                        "VIDEO",
                        "TEXT",
                        "OTHER_MEDIUM"
                    ],
                    "enumDescriptions": [
                        "Unknown interview media.",
                        "Phone interview.",
                        "On-site / on-campus interview.",
                        "Informal interview (for example, lunch interview).",
                        "Video-based interview (for example, video chat).",
                        "Text-based interview (for example, email, messenger, coding portal).",
                        "Another interview type not specified."
                    ],
                    "type": "string"
                },
                "notes": {
                    "description": "Any notes captured by the interviewer that do not fit into the other\nstructured fields.",
                    "type": "string"
                },
                "outcome": {
                    "description": "Required. The overall decision resulting from this interview (positive, negative,\nnuetral).",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this interview."
                }
            },
            "type": "object"
        },
        "InterviewTopicAssessment": {
            "description": "Interview feedback about individual sub-components (for example, culture\nfit, technical skills, and so on).",
            "id": "InterviewTopicAssessment",
            "properties": {
                "displayName": {
                    "description": "Required. What is the sub-topic of asessment detailed here (for example, overall,\nculture fit, technical skills, and so on).  May be replaced by an ENUM in\nthe future.",
                    "type": "string"
                },
                "notes": {
                    "description": "Any notes captured by the interviewer on this specific area of the\ninterview.",
                    "type": "string"
                },
                "outcome": {
                    "description": "Required. Is the rating on this asessment area positive, negative, nuetral?",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this assessment."
                }
            },
            "type": "object"
        },
        "Job": {
            "description": "A Job resource represents a job posting (also referred to as a \"job listing\"\nor \"job requisition\"). A job belongs to a Company, which is the hiring\nentity responsible for the job.",
            "id": "Job",
            "properties": {
                "addresses": {
                    "description": "Strongly recommended for the best service experience.\n\nLocation(s) where the employer is looking to hire for this job posting.\n\nSpecifying the full street address(es) of the hiring location enables\nbetter API results, especially job searches by commute time.\n\nAt most 50 locations are allowed for best search performance. If a job has\nmore locations, it is suggested to split it into multiple jobs with unique\nrequisition_ids (e.g. 'ReqA' becomes 'ReqA-1', 'ReqA-2', and so on.) as\nmultiple jobs with the same company, language_code and\nrequisition_id are not allowed. If the original requisition_id must\nbe preserved, a custom field should be used for storage. It is also\nsuggested to group the locations that close to each other in the same job\nfor better search experience.\n\nThe maximum number of allowed characters is 500.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "aggregatorName": {
                    "description": "If the job requisition is being filled through a VMS or MSP, the name of\nthe aggregator.",
                    "type": "string"
                },
                "applicationInfo": {
                    "$ref": "ApplicationInfo",
                    "description": "Job application information."
                },
                "billRate": {
                    "$ref": "CompensationInfo",
                    "description": "Job compensation information for the \"bill rate\" i.e., the amount that will\nbe billed to the employer."
                },
                "certifications": {
                    "description": "The certifications required for a given job.",
                    "items": {
                        "$ref": "Certification"
                    },
                    "type": "array"
                },
                "classification": {
                    "description": "The internal classification for this job, often a category, code, or\nconcatenated value.",
                    "type": "string"
                },
                "classifications": {
                    "description": "Deprecated. Use \"classification\" instead.\n\nThe internal classification for this job, often a category, code, or\nconcatenated values.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "company": {
                    "description": "Required. The resource name of the company listing the job.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\". For\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/companies/bar\".",
                    "type": "string"
                },
                "companyDisplayName": {
                    "description": "Output only. Display name of the company listing the job.",
                    "type": "string"
                },
                "compensationInfo": {
                    "$ref": "CompensationInfo",
                    "description": "Job compensation information (a.k.a. \"pay rate\") i.e., the compensation\nthat will paid to the employee."
                },
                "customAttributes": {
                    "additionalProperties": {
                        "$ref": "CustomAttribute"
                    },
                    "description": "A map of fields to hold both filterable and non-filterable custom job\nattributes that are not covered by the provided structured fields.\n\nThe keys of the map are strings up to 64 bytes and must match the\npattern: a-zA-Z*. For example, key0LikeThis or\nKEY_1_LIKE_THIS.\n\nAt most 100 filterable and at most 100 unfilterable keys are supported.\nFor filterable `string_values`, across all keys at most 200 values are\nallowed, with each string no more than 255 characters. For unfilterable\n`string_values`, the maximum total size of `string_values` across all keys\nis 50KB.",
                    "type": "object"
                },
                "degreeTypes": {
                    "description": "The desired education degrees for the job, such as Bachelors, Masters.",
                    "enumDescriptions": [
                        "Default value. Represents no degree, or early childhood education.\nMaps to ISCED code 0.\nEx) Kindergarten",
                        "Primary education which is typically the first stage of compulsory\neducation. ISCED code 1.\nEx) Elementary school",
                        "Lower secondary education; First stage of secondary education building on\nprimary education, typically with a more subject-oriented curriculum.\nISCED code 2.\nEx) Middle school",
                        "Middle education; Second/final stage of secondary education preparing for\ntertiary education and/or providing skills relevant to employment.\nUsually with an increased range of subject options and streams. ISCED\ncode 3.\nEx) High school",
                        "Adult Remedial Education; Programmes providing learning experiences that\nbuild on secondary education and prepare for labour market entry and/or\ntertiary education. The content is broader than secondary but not as\ncomplex as tertiary education. ISCED code 4.",
                        "Associate's or equivalent; Short first tertiary programmes that are\ntypically practically-based, occupationally-specific and prepare for\nlabour market entry. These programmes may also provide a pathway to other\ntertiary programmes. ISCED code 5.",
                        "Bachelor's or equivalent; Programmes designed to provide intermediate\nacademic and/or professional knowledge, skills and competencies leading\nto a first tertiary degree or equivalent qualification. ISCED code 6.",
                        "Master's or equivalent; Programmes designed to provide advanced academic\nand/or professional knowledge, skills and competencies leading to a\nsecond tertiary degree or equivalent qualification. ISCED code 7.",
                        "Doctoral or equivalent; Programmes designed primarily to lead to an\nadvanced research qualification, usually concluding with the submission\nand defense of a substantive dissertation of publishable quality based on\noriginal research. ISCED code 8."
                    ],
                    "items": {
                        "enum": [
                            "DEGREE_TYPE_UNSPECIFIED",
                            "PRIMARY_EDUCATION",
                            "LOWER_SECONDARY_EDUCATION",
                            "UPPER_SECONDARY_EDUCATION",
                            "ADULT_REMEDIAL_EDUCATION",
                            "ASSOCIATES_OR_EQUIVALENT",
                            "BACHELORS_OR_EQUIVALENT",
                            "MASTERS_OR_EQUIVALENT",
                            "DOCTORAL_OR_EQUIVALENT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "department": {
                    "description": "The department or functional area within the company with the open\nposition.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "derivedInfo": {
                    "$ref": "JobDerivedInfo",
                    "description": "Output only. Derived details about the job posting."
                },
                "description": {
                    "description": "Required. The description of the job, which typically includes a multi-paragraph\ndescription of the company and related information. Separate fields are\nprovided on the job object for responsibilities,\nqualifications, and other job characteristics. Use of\nthese separate job fields is recommended.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 100,000.",
                    "type": "string"
                },
                "employmentTypes": {
                    "description": "The employment type(s) of a job, for example,\nfull time or\npart time.",
                    "enumDescriptions": [
                        "The default value if the employment type isn't specified.",
                        "The job requires working a number of hours that constitute full\ntime employment, typically 40 or more hours per week.",
                        "The job entails working fewer hours than a full time job,\ntypically less than 40 hours a week.",
                        "The job is offered as a contracted, as opposed to a salaried employee,\nposition.",
                        "The job is offered as a contracted position with the understanding\nthat it's converted into a full-time position at the end of the\ncontract. Jobs of this type are also returned by a search for\nEmploymentType.CONTRACTOR jobs.",
                        "The job is offered as a temporary employment opportunity, usually\na short-term engagement.",
                        "The job is a fixed-term opportunity for students or entry-level job\nseekers to obtain on-the-job training, typically offered as a summer\nposition.",
                        "The is an opportunity for an individual to volunteer, where there's no\nexpectation of compensation for the provided services.",
                        "The job requires an employee to work on an as-needed basis with a\nflexible schedule.",
                        "The job involves employing people in remote areas and flying them\ntemporarily to the work site instead of relocating employees and their\nfamilies permanently.",
                        "This job is a permanent placement from a staffing agency at an\norganization.",
                        "This job is for a specific deliverable (\"gig\"), for example, delivering a\nspecific project.",
                        "The job does not fit any of the other listed types."
                    ],
                    "items": {
                        "enum": [
                            "EMPLOYMENT_TYPE_UNSPECIFIED",
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "CONTRACT_TO_HIRE",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "FLY_IN_FLY_OUT",
                            "PERMANENT",
                            "DELIVERABLE",
                            "OTHER_EMPLOYMENT_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "expectedAssignmentDays": {
                    "description": "The expected number of working days this assignment will be (working days\nrefers to the days the employee will work not to business days). If this\nvalue is zero, this value is ignored and this job has no end date.",
                    "format": "int32",
                    "type": "integer"
                },
                "externalSystem": {
                    "description": "The system of record / source system / operating company from which this\njob is extracted. This is intended to be populated where the same job might\nbe represented differently to different recruiters.\n\nFrom a training perspective it is important to maintain a separation of\ndata that best represents the information an individual recruiter had\naccess to during the search and placement process.",
                    "type": "string"
                },
                "hiringManager": {
                    "description": "An identifier for the hiring manager for this job, the individual who\nultimately makes the decision on who to hire for the position.",
                    "type": "string"
                },
                "incentives": {
                    "description": "A description of bonus, commission, and other compensation\nincentives associated with the job not including salary or pay.\n\nThe maximum number of allowed characters is 10,000.",
                    "type": "string"
                },
                "internalDescription": {
                    "description": "The internal description or statement of work for a job, intended for\ndetails or recruiter notes not intended to be externally known or formally\ndescribed.",
                    "type": "string"
                },
                "internalTitle": {
                    "description": "The internal title of the job, such as \"Software Engineer Level 5\".\n\nThe maximum number of allowed characters is 500.",
                    "type": "string"
                },
                "jobAuthor": {
                    "description": "An identifier for the author or creator of the job, the individual (e.g.\nrecruiter or account manager) who wrote the job description(s).",
                    "type": "string"
                },
                "jobBenefits": {
                    "description": "The benefits included with the job.",
                    "enumDescriptions": [
                        "Default value if the type isn't specified.",
                        "The job includes access to programs that support child care, such\nas daycare.",
                        "The job includes dental services covered by a dental\ninsurance plan.",
                        "The job offers specific benefits to domestic partners.",
                        "The job allows for a flexible work schedule.",
                        "The job includes health services covered by a medical insurance plan.",
                        "The job includes a life insurance plan provided by the employer or\navailable for purchase by the employee.",
                        "The job allows for a leave of absence to a parent to care for a newborn\nchild.",
                        "The job includes a workplace retirement plan provided by the\nemployer or available for purchase by the employee.",
                        "The job allows for paid time off due to illness.",
                        "The job includes paid time off for vacation.",
                        "The job includes vision services covered by a vision\ninsurance plan."
                    ],
                    "items": {
                        "enum": [
                            "JOB_BENEFIT_UNSPECIFIED",
                            "CHILD_CARE",
                            "DENTAL",
                            "DOMESTIC_PARTNER",
                            "FLEXIBLE_HOURS",
                            "MEDICAL",
                            "LIFE_INSURANCE",
                            "PARENTAL_LEAVE",
                            "RETIREMENT_PLAN",
                            "SICK_DAYS",
                            "VACATION",
                            "VISION"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "jobEndTime": {
                    "description": "The end timestamp of the job. Typically this field is used for contracting\nengagements. Invalid timestamps are ignored.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "jobLevel": {
                    "description": "The experience level associated with the job, such as \"Entry Level\".",
                    "enum": [
                        "JOB_LEVEL_UNSPECIFIED",
                        "ENTRY_LEVEL",
                        "EXPERIENCED",
                        "MANAGER",
                        "DIRECTOR",
                        "EXECUTIVE"
                    ],
                    "enumDescriptions": [
                        "The default value if the level isn't specified.",
                        "Entry-level individual contributors, typically with less than 2 years of\nexperience in a similar role. Includes interns.",
                        "Experienced individual contributors, typically with 2+ years of\nexperience in a similar role.",
                        "Entry- to mid-level managers responsible for managing a team of people.",
                        "Senior-level managers responsible for managing teams of managers.",
                        "Executive-level managers and above, including C-level positions."
                    ],
                    "type": "string"
                },
                "jobRequirements": {
                    "description": "The requirements for this job.",
                    "items": {
                        "$ref": "JobRequirement"
                    },
                    "type": "array"
                },
                "jobStartTime": {
                    "description": "The start timestamp of the job in UTC time zone. Typically this field\nis used for contracting engagements. Invalid timestamps are ignored.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "languageCode": {
                    "description": "The language of the posting. This field is distinct from\nany requirements for fluency that are associated with the job.\n\nLanguage codes must be in BCP-47 format, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47){:\nclass=\"external\" target=\"_blank\" }.\n\nIf this field is unspecified and Job.description is present, detected\nlanguage code based on Job.description is assigned, otherwise\ndefaults to 'en_US'.",
                    "type": "string"
                },
                "languageFluencies": {
                    "description": "The language skills required for a given job.",
                    "items": {
                        "$ref": "LanguageFluency"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Required during job update.\n\nThe resource name for the job. This is generated by the service when a\njob is created.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\". For\nexample, \"projects/foo/tenants/bar/jobs/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/jobs/bar\".\n\nUse of this field in job queries and API calls is preferred over the use of\nrequisition_id since this value is unique.",
                    "type": "string"
                },
                "postingCreateTime": {
                    "description": "Output only. The timestamp when this job posting was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "postingExpireTime": {
                    "description": "Strongly recommended for the best service experience.\n\nThe expiration timestamp of the job. After this timestamp, the\njob is marked as expired, and it no longer appears in search results. The\nexpired job can't be listed by the ListJobs API,\nbut it can be retrieved with the GetJob API or\nupdated with the UpdateJob API or deleted with\nthe DeleteJob API. An expired job can\nbe updated and opened again by using a future expiration timestamp.\nUpdating an expired job fails if there is another existing open job with\nsame company, language_code and requisition_id.\n\nThe expired jobs are retained in our system for 90 days. However, the\noverall expired job count cannot exceed 3 times the maximum number of\nopen jobs over previous 7 days. If this threshold is exceeded,\nexpired jobs are cleaned out in order of earliest expire time.\nExpired jobs are no longer accessible after they are cleaned\nout.\n\nInvalid timestamps are ignored, and treated as expire time not provided.\n\nIf the timestamp is before the instant request is made, the job\nis treated as expired immediately on creation. This kind of job can\nnot be updated. And when creating a job with past timestamp, the\nposting_publish_time must be set before\nposting_expire_time. The purpose of this feature is\nto allow other objects, such as Application, to refer a job\nthat didn't exist in the system prior to becoming expired. If you\nwant to modify a job that was expired on creation,\ndelete it and create a new one.\n\nIf this value isn't provided at the time of job creation or is invalid,\nthe job posting expires after 30 days from the job's creation time. For\nexample, if the job was created on 2017/01/01 13:00AM UTC with an\nunspecified expiration date, the job expires after 2017/01/31 13:00AM UTC.\n\nIf this value isn't provided on job update, it depends on the field masks\nset by UpdateJobRequest.update_mask. If the field masks include\njob_end_time, or the masks are empty meaning that every field is\nupdated, the job posting expires after 30 days from the job's last\nupdate time. Otherwise the expiration date isn't updated.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "postingPublishTime": {
                    "description": "The timestamp this job posting was most recently published. The default\nvalue is the time the request arrives at the server. Invalid timestamps are\nignored.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "postingRegion": {
                    "description": "The job PostingRegion (for example, state, country) throughout\nwhich the job is available. If this field is set, a LocationFilter\nin a search query within the job region finds this job posting if an\nexact location match isn't specified. If this field is set to\nPostingRegion.NATION or PostingRegion.ADMINISTRATIVE_AREA,\nsetting job Job.addresses to the same location level as this field\nis strongly recommended.",
                    "enum": [
                        "POSTING_REGION_UNSPECIFIED",
                        "ADMINISTRATIVE_AREA",
                        "NATION",
                        "TELECOMMUTE"
                    ],
                    "enumDescriptions": [
                        "If the region is unspecified, the job is only returned if it\nmatches the LocationFilter.",
                        "In addition to exact location matching, job posting is returned when the\nLocationFilter in the search query is in the same administrative area\nas the returned job posting. For example, if a `ADMINISTRATIVE_AREA` job\nis posted in \"CA, USA\", it's returned if LocationFilter has\n\"Mountain View\".\n\nAdministrative area refers to top-level administrative subdivision of this\ncountry. For example, US state, IT region, UK constituent nation and\nJP prefecture.",
                        "In addition to exact location matching, job is returned when\nLocationFilter in search query is in the same country as this job.\nFor example, if a `NATION_WIDE` job is posted in \"USA\", it's\nreturned if LocationFilter has 'Mountain View'.",
                        "Job allows employees to work remotely (telecommute).\nIf locations are provided with this value, the job is\nconsidered as having a location, but telecommuting is allowed."
                    ],
                    "type": "string"
                },
                "postingUpdateTime": {
                    "description": "Output only. The timestamp when this job posting was last updated.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "processingOptions": {
                    "$ref": "ProcessingOptions",
                    "description": "Options for job processing."
                },
                "promotionValue": {
                    "description": "A promotion value of the job, as determined by the client.\nThe value determines the sort order of the jobs returned when searching for\njobs using the featured jobs search call, with higher promotional values\nbeing returned first and ties being resolved by relevance sort. Only the\njobs with a promotionValue >0 are returned in a FEATURED_JOB_SEARCH.\n\nDefault value is 0, and negative values are treated as 0.",
                    "format": "int32",
                    "type": "integer"
                },
                "qualifications": {
                    "description": "A description of the qualifications required to perform the\njob. The use of this field is recommended\nas an alternative to using the more general description field.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 10,000.",
                    "type": "string"
                },
                "recruiters": {
                    "description": "The resource names of the recruiters who are assigned to place for this\njob, such as \"projects/foo/tenants/bar/recruiters/baz\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recruitingNotes": {
                    "description": "Recruiter's free-text internal notes on the job including notes on skill\nrequirements, years of experience requirements, and so on.",
                    "items": {
                        "$ref": "RecruitingNote"
                    },
                    "type": "array"
                },
                "requisitionId": {
                    "description": "Required. The requisition ID, also referred to as the posting ID, is assigned by the\nclient to identify a job. This field is intended to be used by clients\nfor client identification and tracking of postings. A job isn't allowed\nto be created if there is another job with the same company,\nlanguage_code and requisition_id.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "requisitionState": {
                    "description": "Required. The current state of the job requisition.",
                    "enum": [
                        "REQUISITION_STATE_UNSPECIFIED",
                        "ACTIVE",
                        "FILLED",
                        "LOST",
                        "CLOSED"
                    ],
                    "enumDescriptions": [
                        "The requisition state is unspecified.",
                        "The requisition is in progress / pending.",
                        "Candidate was placed for this requisition.",
                        "Requisition was filled, but lost to a competitor.",
                        "Requisition was closed without being filled by Customer or a competitor\n(e.g., position went away, recruiter changed their mind, and so on)."
                    ],
                    "type": "string"
                },
                "responsibilities": {
                    "description": "A description of job responsibilities. The use of this field is\nrecommended as an alternative to using the more general description\nfield.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 10,000.",
                    "type": "string"
                },
                "securityClearances": {
                    "description": "If the job requires a security clearance, what type(s)?",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "skills": {
                    "description": "The skills required for a given job.",
                    "items": {
                        "$ref": "Skill"
                    },
                    "type": "array"
                },
                "structuredAddresses": {
                    "description": "Structured location(s) where the job is hiring.  Providing the full street\naddress(es) of the hiring location is recommended.",
                    "items": {
                        "$ref": "PostalAddress"
                    },
                    "type": "array"
                },
                "title": {
                    "description": "Required. The title of the job, such as \"Software Engineer\"\n\nThe maximum number of allowed characters is 500.",
                    "type": "string"
                },
                "visibility": {
                    "description": "Deprecated. The job is only visible to the owner.\n\nThe visibility of the job.\n\nDefaults to Visibility.ACCOUNT_ONLY if not specified.",
                    "enum": [
                        "VISIBILITY_UNSPECIFIED",
                        "ACCOUNT_ONLY",
                        "SHARED_WITH_GOOGLE",
                        "SHARED_WITH_PUBLIC"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The resource is only visible to the GCP account who owns it.",
                        "The resource is visible to the owner and may be visible to other\napplications and processes at Google.",
                        "The resource is visible to the owner and may be visible to all other API\nclients."
                    ],
                    "type": "string"
                },
                "workEnvironments": {
                    "description": "The work environment in which the person placed in this job will be\noperating, for instance in a warehouse or factory.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "workHours": {
                    "description": "The hours / dates required for this job.",
                    "items": {
                        "$ref": "TimeSegment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobApplicationAvailabilitySignal": {
            "description": "Deprecated. Use AvailabilitySignal with AvailabilitySignal.type =\nJOB_APPLICATION instead.\n\nCandidate availability signal: Job Application.",
            "id": "JobApplicationAvailabilitySignal",
            "properties": {
                "available": {
                    "description": "Candidate's availability based on the signal.",
                    "type": "boolean"
                },
                "days": {
                    "description": "Number of days since most recent job application.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobDerivedInfo": {
            "description": "Derived details about the job posting.",
            "id": "JobDerivedInfo",
            "properties": {
                "jobCategories": {
                    "description": "Job categories derived from Job.title and Job.description.",
                    "enumDescriptions": [
                        "The default value if the category isn't specified.",
                        "An accounting and finance job, such as an Accountant.",
                        "An administrative and office job, such as an Administrative Assistant.",
                        "An advertising and marketing job, such as Marketing Manager.",
                        "An animal care job, such as Veterinarian.",
                        "An art, fashion, or design job, such as Designer.",
                        "A business operations job, such as Business Operations Manager.",
                        "A cleaning and facilities job, such as Custodial Staff.",
                        "A computer and IT job, such as Systems Administrator.",
                        "A construction job, such as General Laborer.",
                        "A customer service job, such s Cashier.",
                        "An education job, such as School Teacher.",
                        "An entertainment and travel job, such as Flight Attendant.",
                        "A farming or outdoor job, such as Park Ranger.",
                        "A healthcare job, such as Registered Nurse.",
                        "A human resources job, such as Human Resources Director.",
                        "An installation, maintenance, or repair job, such as Electrician.",
                        "A legal job, such as Law Clerk.",
                        "A management job, often used in conjunction with another category,\nsuch as Store Manager.",
                        "A manufacturing or warehouse job, such as Assembly Technician.",
                        "A media, communications, or writing job, such as Media Relations.",
                        "An oil, gas or mining job, such as Offshore Driller.",
                        "A personal care and services job, such as Hair Stylist.",
                        "A protective services job, such as Security Guard.",
                        "A real estate job, such as Buyer's Agent.",
                        "A restaurant and hospitality job, such as Restaurant Server.",
                        "A sales and/or retail job, such Sales Associate.",
                        "A science and engineering job, such as Lab Technician.",
                        "A social services or non-profit job, such as Case Worker.",
                        "A sports, fitness, or recreation job, such as Personal Trainer.",
                        "A transportation or logistics job, such as Truck Driver."
                    ],
                    "items": {
                        "enum": [
                            "JOB_CATEGORY_UNSPECIFIED",
                            "ACCOUNTING_AND_FINANCE",
                            "ADMINISTRATIVE_AND_OFFICE",
                            "ADVERTISING_AND_MARKETING",
                            "ANIMAL_CARE",
                            "ART_FASHION_AND_DESIGN",
                            "BUSINESS_OPERATIONS",
                            "CLEANING_AND_FACILITIES",
                            "COMPUTER_AND_IT",
                            "CONSTRUCTION",
                            "CUSTOMER_SERVICE",
                            "EDUCATION",
                            "ENTERTAINMENT_AND_TRAVEL",
                            "FARMING_AND_OUTDOORS",
                            "HEALTHCARE",
                            "HUMAN_RESOURCES",
                            "INSTALLATION_MAINTENANCE_AND_REPAIR",
                            "LEGAL",
                            "MANAGEMENT",
                            "MANUFACTURING_AND_WAREHOUSE",
                            "MEDIA_COMMUNICATIONS_AND_WRITING",
                            "OIL_GAS_AND_MINING",
                            "PERSONAL_CARE_AND_SERVICES",
                            "PROTECTIVE_SERVICES",
                            "REAL_ESTATE",
                            "RESTAURANT_AND_HOSPITALITY",
                            "SALES_AND_RETAIL",
                            "SCIENCE_AND_ENGINEERING",
                            "SOCIAL_SERVICES_AND_NON_PROFIT",
                            "SPORTS_FITNESS_AND_RECREATION",
                            "TRANSPORTATION_AND_LOGISTICS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "locations": {
                    "description": "Structured locations of the job, resolved from Job.addresses.\n\nlocations are exactly matched to Job.addresses in the same\norder.",
                    "items": {
                        "$ref": "Location"
                    },
                    "type": "array"
                },
                "streetLocations": {
                    "description": "Structured street locations of the job.\n\nUnlike locations, street_locations contains street locations\ninferred from job posting details, e.g. Job.addresses,\nJob.company_display_name, and so on.\n\nNote that the inference of street_locations isn't guaranteed to\nbe 100% correct.\n\nstreet_locations are exactly matched to Job.addresses in the same\norder.",
                    "items": {
                        "$ref": "Location"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobEvent": {
            "description": "An event issued when a job seeker interacts with the application that\nimplements Cloud Talent Solution.",
            "id": "JobEvent",
            "properties": {
                "jobs": {
                    "description": "Required. The job name(s) associated with this event.\nFor example, if this is an impression event,\nthis field contains the identifiers of all jobs shown to the job seeker.\nIf this was a view event, this field contains the\nidentifier of the viewed job.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\", for\nexample, \"projects/foo/tenants/bar/jobs/baz\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "profile": {
                    "description": "The profile name associated with this client event.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\",\nfor example, \"projects/foo/tenants/bar/profiles/baz\".",
                    "type": "string"
                },
                "type": {
                    "description": "Required. The type of the event (see JobEventType).",
                    "enum": [
                        "JOB_EVENT_TYPE_UNSPECIFIED",
                        "IMPRESSION",
                        "VIEW",
                        "VIEW_REDIRECT",
                        "APPLICATION_START",
                        "APPLICATION_FINISH",
                        "APPLICATION_QUICK_SUBMISSION",
                        "APPLICATION_REDIRECT",
                        "APPLICATION_START_FROM_SEARCH",
                        "APPLICATION_REDIRECT_FROM_SEARCH",
                        "APPLICATION_COMPANY_SUBMIT",
                        "BOOKMARK",
                        "UNBOOKMARK",
                        "NOTIFICATION",
                        "HIRED",
                        "SENT_CV",
                        "INTERVIEW_GRANTED",
                        "NEGATIVE_FEEDBACK",
                        "UNSET_NEGATIVE_FEEDBACK"
                    ],
                    "enumDescriptions": [
                        "The event is unspecified by other provided values.",
                        "The job seeker or other entity interacting with the service has\nhad a job rendered in their view, such as in a list of search results in\na compressed or clipped format. This event is typically associated with\nthe viewing of a jobs list on a single page by a job seeker.",
                        "The job seeker, or other entity interacting with the service, has\nviewed the details of a job, including the full description. This\nevent doesn't apply to the viewing a snippet of a job appearing as a\npart of the job search results. Viewing a snippet is associated with an\nimpression).",
                        "The job seeker or other entity interacting with the service\nperformed an action to view a job and was redirected to a different\nwebsite for job.",
                        "The job seeker or other entity interacting with the service\nbegan the process or demonstrated the intention of applying for a job.",
                        "The job seeker or other entity interacting with the service\nsubmitted an application for a job.",
                        "The job seeker or other entity interacting with the service\nsubmitted an application for a job with a single click without\nentering information. If a job seeker performs this action, send only\nthis event to the service. Do not also send\nJobEventType.APPLICATION_START or JobEventType.APPLICATION_FINISH\nevents.",
                        "The job seeker or other entity interacting with the service\nperformed an action to apply to a job and was redirected to a different\nwebsite to complete the application.",
                        "The job seeker or other entity interacting with the service began the\nprocess or demonstrated the intention of applying for a job from the\nsearch results page without viewing the details of the job posting.\nIf sending this event, JobEventType.VIEW event shouldn't be sent.",
                        "The job seeker, or other entity interacting with the service, performs an\naction with a single click from the search results page to apply to a job\n(without viewing the details of the job posting), and is redirected\nto a different website to complete the application. If a candidate\nperforms this action, send only this event to the service. Do not also\nsend JobEventType.APPLICATION_START,\nJobEventType.APPLICATION_FINISH or JobEventType.VIEW events.",
                        "This event should be used when a company submits an application\non behalf of a job seeker. This event is intended for use by staffing\nagencies attempting to place candidates.",
                        "The job seeker or other entity interacting with the service demonstrated\nan interest in a job by bookmarking or saving it.",
                        "The job seeker or other entity interacting with the service in a job by\nunbookmarking or unsaving it.",
                        "The job seeker or other entity interacting with the service was\nsent a notification, such as an email alert or device notification,\ncontaining one or more jobs listings generated by the service.",
                        "The job seeker or other entity interacting with the service was\nemployed by the hiring entity (employer). Send this event\nonly if the job seeker was hired through an application that was\ninitiated by a search conducted through the Cloud Talent Solution\nservice.",
                        "A recruiter or staffing agency submitted an application on behalf of the\ncandidate after interacting with the service to identify a suitable job\nposting.",
                        "The entity interacting with the service (for example, the job seeker),\nwas granted an initial interview by the hiring entity (employer). This\nevent should only be sent if the job seeker was granted an interview as\npart of an application that was initiated by a search conducted through /\nrecommendation provided by the Cloud Talent Solution service.",
                        "The job seeker makes a \"thumbs down\" decision about a given job.",
                        "The job seeker reverses their decision to \"thumbs down\" a given job."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobOperationResult": {
            "description": "The result of JobService.BatchCreateJobs or\nJobService.BatchUpdateJobs APIs. It's used to\nreplace google.longrunning.Operation.response in case of success.",
            "id": "JobOperationResult",
            "properties": {
                "jobResults": {
                    "description": "List of job mutation results from a batch mutate operation. It can change\nuntil operation status is FINISHED, FAILED or CANCELLED.",
                    "items": {
                        "$ref": "JobResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobPrompt": {
            "description": "Resource that represents job prompt.",
            "id": "JobPrompt",
            "properties": {
                "dynamicTexts": {
                    "description": "The place-holder text (associated with a jobPrompt) that's replaced\ndepending on certain conditions. For example, a conversation's contact_type\nwill result in changes to the dynamic text that apply to different\nconditions, making the job prompts more conversational. In this example,\nthat might result in the phrase \"Thanks for applying for forklift\noperator!\" being generated for a web conversation and \"Thanks for your\ninterest in forklift operator\" being generated for an SMS conversation.",
                    "items": {
                        "$ref": "PromptTemplateText"
                    },
                    "type": "array"
                },
                "includeConditions": {
                    "description": "Optional. If this prompt is a follow-up, the conditions that represent the value for\nwhich this prompt should be included.",
                    "items": {
                        "$ref": "PromptTemplateCondition"
                    },
                    "type": "array"
                },
                "isSelected": {
                    "description": "Required. True, if the prompt is selected to be included as part of the screening\nprocess.",
                    "type": "boolean"
                },
                "knockoutCondition": {
                    "description": "Optional. A condition which, if met, will trigger interview knockout. For example,\n\"x>10\". Leaving it empty means disabling knockout for this job prompt.",
                    "type": "string"
                },
                "knockoutDescription": {
                    "description": "Output only. Describes how to write a knockout condition for this job\nprompt.",
                    "type": "string"
                },
                "knockoutParameterType": {
                    "description": "Output only. The type of answer that can be referred to by using the\nparameter \"x\" in knockout condition. Knockout condition is not supported\nfor a job prompt if this field is KNOCKOUT_PARAMETER_TYPE_UNSPECIFIED.",
                    "enum": [
                        "KNOCKOUT_PARAMETER_TYPE_UNSPECIFIED",
                        "BOOLEAN",
                        "NUMBER",
                        "STRING",
                        "DATE",
                        "STRING_LIST"
                    ],
                    "enumDescriptions": [
                        "Default type. This indicates knockout condition is not supported for the\ngiven job prompt.",
                        "Usually used when the expected answer indicates Yes or No.",
                        "Usually used when the expected answer contains a number.",
                        "Usually used when the expected answer contains an enum.",
                        "Usually used when the expected answer contains a date.",
                        "Usually used when the expected answer contains a list of strings."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Required. The unique identifier for the instantiated prompt. This is important to\ntrack when there are multiple versions of the same template instantiated\nfor a job.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}/jobPrompts/{jobPrompt_id}\",\nfor example, \"projects/foo/tenants/bar/jobs/XXX/jobPrompts/YYY\".",
                    "type": "string"
                },
                "parameters": {
                    "description": "Optional. The selected parameter values for this prompt template.",
                    "items": {
                        "$ref": "PromptTemplateTextParameter"
                    },
                    "type": "array"
                },
                "parentJobPromptName": {
                    "description": "Optional. The prompt that should precede this prompt. For instance, if this prompt is\na follow up question of the type QUESTION_CLARIFICATION, the QUESTION hat\nfailed to parse should trigger it. This is important to track when there\nare multiple versions of the same template instantiated for a job.\n\nThe format is\n\"projects/{project_id}/jobs/{job_id}/jobPrompts/{jobPrompt_id}\",\nfor example, \"projects/foo/jobs/bar/jobPrompts/XXX\".",
                    "type": "string"
                },
                "promptTemplateName": {
                    "description": "Required. Name of prompt template that this job prompt was instantiated from.",
                    "type": "string"
                },
                "questionType": {
                    "description": "Type of the question, whether it's a free-form question, or multiple choice\nquestion, etc. It's up to the front-end to determine how to render the\nbuttons based on this type. The content of each button is stored in the\nsuggested_replies field.",
                    "enum": [
                        "QUESTION_TYPE_UNSPECIFIED",
                        "FREE_FORM",
                        "BOOLEAN",
                        "MULTI_CHOICE",
                        "RATING"
                    ],
                    "enumDescriptions": [
                        "Default type.",
                        "Free-form question, any response is allowed.",
                        "Expect user to respond Yes or No.\nBy default two SuggestedReply will be provided, one with \"Yes\", one\nwith \"No\", unless other SuggestedReply is specified in the\nPromptTemplate.",
                        "Expect user to choose from a limited set of answers.",
                        "Expect user to choose from a range of ratings.\nBy default five SuggestedReply with text \"1\", \"2\", \"3\", \"4\", \"5\"\nwill be provided unless other SuggestedReply is specified in the\nPromptTemplate."
                    ],
                    "type": "string"
                },
                "responseAttribute": {
                    "$ref": "PromptTemplateCondition",
                    "description": "Optional. The data schema field corresponding to where the candidate response to the\nprompt template is stored. For example, \"profile.skills.yearsExperience\nwhere skill=$name\". If the value doesn't exist, it should be created for\nprompt templates of type \"QUESTION_CONFIRMATION\" where the response is yes."
                },
                "suggestedReplies": {
                    "description": "A limited list of choices for the user to choose from. Should be used to\nrender choice buttons in the front-end.",
                    "items": {
                        "$ref": "SuggestedReply"
                    },
                    "type": "array"
                },
                "text": {
                    "description": "Required. The verbatim prompt that should be asked to the candidate.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobQuery": {
            "description": "The query required to perform a search query.",
            "id": "JobQuery",
            "properties": {
                "commuteFilter": {
                    "$ref": "CommuteFilter",
                    "description": "Allows filtering jobs by commute time with different travel methods (for\n example, driving or public transit).\n\nNote: This only works when you specify a CommuteMethod. In this case,\nlocation_filters is ignored.\n\n Currently we don't support sorting by commute time."
                },
                "companies": {
                    "description": "This filter specifies the company entities to search against.\n\nIf a value isn't specified, jobs are searched for against all\ncompanies.\n\nIf multiple values are specified, jobs are searched against the\ncompanies specified.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/companies/{company_id}\". For\nexample, \"projects/foo/tenants/bar/companies/baz\".\n\nIf tenant id is unspecified, the default tenant is used. For\nexample, \"projects/foo/companies/bar\".\n\nAt most 20 company filters are allowed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "companyDisplayNames": {
                    "description": "This filter specifies the exact company Company.display_name\nof the jobs to search against.\n\nIf a value isn't specified, jobs within the search results are\nassociated with any company.\n\nIf multiple values are specified, jobs within the search results may be\nassociated with any of the specified companies.\n\nAt most 20 company display name filters are allowed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "compensationFilter": {
                    "$ref": "CompensationFilter",
                    "description": "This search filter is applied only to\nJob.compensation_info. For example, if the filter is specified\nas \"Hourly job with per-hour compensation > $15\", only jobs meeting\nthese criteria are searched. If a filter isn't defined, all open jobs\nare searched."
                },
                "customAttributeFilter": {
                    "description": "This filter specifies a structured syntax to match against the\nJob.custom_attributes marked as `filterable`.\n\nThe syntax for this expression is a subset of SQL syntax.\n\nSupported operators are: `=`, `!=`, `<`, `<=`, `>`, and `>=` where the\nleft of the operator is a custom field key and the right of the operator\nis a number or a quoted string. You must escape backslash (\\\\) and\nquote (\\\") characters.\n\nSupported functions are `LOWER([field_name])` to\nperform a case insensitive match and `EMPTY([field_name])` to filter on the\nexistence of a key.\n\nBoolean expressions (AND/OR/NOT) are supported up to 3 levels of\nnesting (for example, \"((A AND B AND C) OR NOT D) AND E\"), a maximum of 100\ncomparisons or functions are allowed in the expression. The expression\nmust be < 6000 bytes in length.\n\nSample Query:\n`(LOWER(driving_license)=\"class \\\"a\\\"\" OR EMPTY(driving_license)) AND\ndriving_years > 10`",
                    "type": "string"
                },
                "disableSpellCheck": {
                    "description": "This flag controls the spell-check feature. If false, the\nservice attempts to correct a misspelled query,\nfor example, \"enginee\" is corrected to \"engineer\".\n\nDefaults to false: a spell check is performed.",
                    "type": "boolean"
                },
                "employmentTypes": {
                    "description": "The employment type filter specifies the employment type of jobs to\nsearch against, such as EmploymentType.FULL_TIME.\n\nIf a value isn't specified, jobs in the search results includes any\nemployment type.\n\nIf multiple values are specified, jobs in the search results include\nany of the specified employment types.",
                    "enumDescriptions": [
                        "The default value if the employment type isn't specified.",
                        "The job requires working a number of hours that constitute full\ntime employment, typically 40 or more hours per week.",
                        "The job entails working fewer hours than a full time job,\ntypically less than 40 hours a week.",
                        "The job is offered as a contracted, as opposed to a salaried employee,\nposition.",
                        "The job is offered as a contracted position with the understanding\nthat it's converted into a full-time position at the end of the\ncontract. Jobs of this type are also returned by a search for\nEmploymentType.CONTRACTOR jobs.",
                        "The job is offered as a temporary employment opportunity, usually\na short-term engagement.",
                        "The job is a fixed-term opportunity for students or entry-level job\nseekers to obtain on-the-job training, typically offered as a summer\nposition.",
                        "The is an opportunity for an individual to volunteer, where there's no\nexpectation of compensation for the provided services.",
                        "The job requires an employee to work on an as-needed basis with a\nflexible schedule.",
                        "The job involves employing people in remote areas and flying them\ntemporarily to the work site instead of relocating employees and their\nfamilies permanently.",
                        "This job is a permanent placement from a staffing agency at an\norganization.",
                        "This job is for a specific deliverable (\"gig\"), for example, delivering a\nspecific project.",
                        "The job does not fit any of the other listed types."
                    ],
                    "items": {
                        "enum": [
                            "EMPLOYMENT_TYPE_UNSPECIFIED",
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "CONTRACT_TO_HIRE",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "FLY_IN_FLY_OUT",
                            "PERMANENT",
                            "DELIVERABLE",
                            "OTHER_EMPLOYMENT_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludedJobs": {
                    "description": "This filter specifies a list of job names to be excluded during search.\n\nAt most 400 excluded job names are allowed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "jobCategories": {
                    "description": "The category filter specifies the categories of jobs to search against.\nSee JobCategory for more information.\n\nIf a value isn't specified, jobs from any category are searched against.\n\nIf multiple values are specified, jobs from any of the specified\ncategories are searched against.",
                    "enumDescriptions": [
                        "The default value if the category isn't specified.",
                        "An accounting and finance job, such as an Accountant.",
                        "An administrative and office job, such as an Administrative Assistant.",
                        "An advertising and marketing job, such as Marketing Manager.",
                        "An animal care job, such as Veterinarian.",
                        "An art, fashion, or design job, such as Designer.",
                        "A business operations job, such as Business Operations Manager.",
                        "A cleaning and facilities job, such as Custodial Staff.",
                        "A computer and IT job, such as Systems Administrator.",
                        "A construction job, such as General Laborer.",
                        "A customer service job, such s Cashier.",
                        "An education job, such as School Teacher.",
                        "An entertainment and travel job, such as Flight Attendant.",
                        "A farming or outdoor job, such as Park Ranger.",
                        "A healthcare job, such as Registered Nurse.",
                        "A human resources job, such as Human Resources Director.",
                        "An installation, maintenance, or repair job, such as Electrician.",
                        "A legal job, such as Law Clerk.",
                        "A management job, often used in conjunction with another category,\nsuch as Store Manager.",
                        "A manufacturing or warehouse job, such as Assembly Technician.",
                        "A media, communications, or writing job, such as Media Relations.",
                        "An oil, gas or mining job, such as Offshore Driller.",
                        "A personal care and services job, such as Hair Stylist.",
                        "A protective services job, such as Security Guard.",
                        "A real estate job, such as Buyer's Agent.",
                        "A restaurant and hospitality job, such as Restaurant Server.",
                        "A sales and/or retail job, such Sales Associate.",
                        "A science and engineering job, such as Lab Technician.",
                        "A social services or non-profit job, such as Case Worker.",
                        "A sports, fitness, or recreation job, such as Personal Trainer.",
                        "A transportation or logistics job, such as Truck Driver."
                    ],
                    "items": {
                        "enum": [
                            "JOB_CATEGORY_UNSPECIFIED",
                            "ACCOUNTING_AND_FINANCE",
                            "ADMINISTRATIVE_AND_OFFICE",
                            "ADVERTISING_AND_MARKETING",
                            "ANIMAL_CARE",
                            "ART_FASHION_AND_DESIGN",
                            "BUSINESS_OPERATIONS",
                            "CLEANING_AND_FACILITIES",
                            "COMPUTER_AND_IT",
                            "CONSTRUCTION",
                            "CUSTOMER_SERVICE",
                            "EDUCATION",
                            "ENTERTAINMENT_AND_TRAVEL",
                            "FARMING_AND_OUTDOORS",
                            "HEALTHCARE",
                            "HUMAN_RESOURCES",
                            "INSTALLATION_MAINTENANCE_AND_REPAIR",
                            "LEGAL",
                            "MANAGEMENT",
                            "MANUFACTURING_AND_WAREHOUSE",
                            "MEDIA_COMMUNICATIONS_AND_WRITING",
                            "OIL_GAS_AND_MINING",
                            "PERSONAL_CARE_AND_SERVICES",
                            "PROTECTIVE_SERVICES",
                            "REAL_ESTATE",
                            "RESTAURANT_AND_HOSPITALITY",
                            "SALES_AND_RETAIL",
                            "SCIENCE_AND_ENGINEERING",
                            "SOCIAL_SERVICES_AND_NON_PROFIT",
                            "SPORTS_FITNESS_AND_RECREATION",
                            "TRANSPORTATION_AND_LOGISTICS"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "languageCodes": {
                    "description": "This filter specifies the locale of jobs to search against,\nfor example, \"en-US\".\n\nIf a value isn't specified, the search results can contain jobs in any\nlocale.\n\n\nLanguage codes should be in BCP-47 format, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).\n\nAt most 10 language code filters are allowed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "locationFilters": {
                    "description": "The location filter specifies geo-regions containing the jobs to\nsearch against. See LocationFilter for more information.\n\nIf a location value isn't specified, jobs fitting the other search\ncriteria are retrieved regardless of where they're located.\n\nIf multiple values are specified, jobs are retrieved from any of the\nspecified locations. If different values are specified for the\nLocationFilter.distance_in_miles parameter, the maximum provided\ndistance is used for all locations.\n\nAt most 5 location filters are allowed.",
                    "items": {
                        "$ref": "LocationFilter"
                    },
                    "type": "array"
                },
                "publishTimeRange": {
                    "$ref": "TimestampRange",
                    "description": "Jobs published within a range specified by this filter are searched\nagainst."
                },
                "query": {
                    "description": "The query string that matches against the job title, description, and\nlocation fields.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobRequirement": {
            "description": "The requirements of a job.",
            "id": "JobRequirement",
            "properties": {
                "context": {
                    "description": "The context for this requirement, for example, if this is for lifting\nobjects, how much weight?",
                    "type": "string"
                },
                "jobRequirementType": {
                    "description": "The job requirement type, for example, working overtime, standing, lifting,\nand so on.",
                    "enum": [
                        "JOB_REQUIREMENT_TYPE_UNSPECIFIED",
                        "PHYSICAL",
                        "OVERTIME_WORK",
                        "WEEKEND_WORK",
                        "PERCENT_TRAVEL",
                        "NO_CLIMATE_CONTROL",
                        "DRUG_SCREEN",
                        "SMOKE_FREE",
                        "STEEL_TOED_SHOES"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A job that requires physically demanding work.",
                        "A job that requires or offers overtime work.",
                        "A job that requires or offers weekend work.",
                        "A job that requires travelling for a percentage of the working time.",
                        "A job that requires working in a non-climate controlled environment.",
                        "A job that requires one or more drug screens.",
                        "A job that requires a smoke-free enviornment.",
                        "A job that requires steel-toed shoes."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobRequirementInterest": {
            "description": "The requirements making a person interested (or not) in a job.",
            "id": "JobRequirementInterest",
            "properties": {
                "isInterested": {
                    "description": "If true, the candidate is interested in jobs with this requirement.",
                    "type": "boolean"
                },
                "jobRequirement": {
                    "$ref": "JobRequirement",
                    "description": "The requirement of a job."
                },
                "jobs": {
                    "description": "The job(s) relevant to this person's interest requirements.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\",\nfor example, \"projects/api-test-project/tenants/foo/jobs/bar\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobResult": {
            "description": "Mutation result of a job.",
            "id": "JobResult",
            "properties": {
                "job": {
                    "$ref": "Job",
                    "description": "Here Job only contains basic information including name,\ncompany, language_code\nand requisition_id, use getJob method to retrieve\ndetailed information of the created/updated job."
                },
                "status": {
                    "$ref": "Status",
                    "description": "The status of the job processed. This field is populated if the\nprocessing of the job fails."
                }
            },
            "type": "object"
        },
        "JobTitleFilter": {
            "description": "Job title of the search.",
            "id": "JobTitleFilter",
            "properties": {
                "jobTitle": {
                    "description": "Required. The job title. For example, \"Software engineer\", or \"Product manager\".",
                    "type": "string"
                },
                "negated": {
                    "description": "Whether to apply negation to the filter so profiles matching the filter\nare excluded.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "KnockoutResult": {
            "description": "Result of checking the knockout condition of a job prompt.",
            "id": "KnockoutResult",
            "properties": {
                "extractedAnswer": {
                    "$ref": "ExtractedAnswer",
                    "description": "Extracted answer that is used for evaluating the knockout condition. The\nextracted answer is left empty when the corresponding prompt is skipped by\nthe candidate during the conversation."
                },
                "jobPromptName": {
                    "description": "The unique ID of the job prompt associated with the knockout condition\nbeing evaluated. The format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}/jobPrompts/{jobPrompt_id}\",\nfor example, \"projects/foo/tenants/bar/jobs/XXX/jobPrompts/YYY\".",
                    "type": "string"
                },
                "knockoutCondition": {
                    "description": "Knockout condition expression.",
                    "type": "string"
                },
                "knockoutTriggered": {
                    "description": "Whether the knockout was triggered in this check.",
                    "type": "boolean"
                },
                "questionText": {
                    "description": "The text of the question associated with this job prompt.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LanguageFluency": {
            "description": "Resource that represents a skill of a candidate.",
            "id": "LanguageFluency",
            "properties": {
                "canBeTested": {
                    "description": "Whether the person is willing to be tested on their proficiency in this\nskill.",
                    "type": "boolean"
                },
                "contexts": {
                    "description": "A paragraph describes context of this skill.",
                    "enumDescriptions": [
                        "Default value.",
                        "Skill is in writing the language.",
                        "Skill is in reading the language.",
                        "Skill is in speaking the language.",
                        "Another language skill contexte."
                    ],
                    "items": {
                        "enum": [
                            "LANGUAGE_FLUENCY_CONTEXT_UNSPECIFIED",
                            "WRITING",
                            "READING",
                            "SPEAKING",
                            "OTHER_LANGUAGE_FLUENCY_CONTEXT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "displayName": {
                    "description": "Skill display name.\n\nFor example, \"English\", \"Spanish\".\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "experienceYears": {
                    "description": "Years of experience with the skill.",
                    "format": "double",
                    "type": "number"
                },
                "lastUsedDate": {
                    "$ref": "Date",
                    "description": "The last time this skill was used."
                },
                "level": {
                    "description": "Skill proficiency level which indicates how proficient the candidate is at\nthis skill.",
                    "enum": [
                        "SKILL_PROFICIENCY_LEVEL_UNSPECIFIED",
                        "UNSKILLED",
                        "FUNDAMENTAL_AWARENESS",
                        "NOVICE",
                        "INTERMEDIATE",
                        "ADVANCED",
                        "EXPERT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Lacks any proficiency in this skill.",
                        "Have a common knowledge or an understanding of basic techniques and\nconcepts.",
                        "Have the level of experience gained in a classroom and/or experimental\nscenarios or as a trainee on-the-job.",
                        "Be able to successfully complete tasks in this skill as requested. Help\nfrom an expert may be required from time to time, but can usually perform\nskill independently.",
                        "Can perform the actions associated with this skill without assistance.",
                        "Known as an expert in this area."
                    ],
                    "type": "string"
                },
                "skillNameSnippet": {
                    "description": "Output only. Skill name snippet shows how the display_name is related to a search\nquery. It's empty if the display_name isn't related to the search\nquery.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LatLng": {
            "description": "An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n<a href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\">WGS84\nstandard</a>. Values must be within normalized ranges.",
            "id": "LatLng",
            "properties": {
                "latitude": {
                    "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ListAnswer": {
            "description": "Answer that contains more than one element.",
            "id": "ListAnswer",
            "properties": {
                "answers": {
                    "items": {
                        "$ref": "ExtractedAnswer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListApplicationsResponse": {
            "description": "The List applications response object.",
            "id": "ListApplicationsResponse",
            "properties": {
                "applications": {
                    "description": "Applications for the current client.",
                    "items": {
                        "$ref": "Application"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListAssignmentsResponse": {
            "description": "The List assignments response object.",
            "id": "ListAssignmentsResponse",
            "properties": {
                "assignments": {
                    "description": "Assignments for the current client.",
                    "items": {
                        "$ref": "Assignment"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListCompaniesResponse": {
            "description": "The List companies response object.",
            "id": "ListCompaniesResponse",
            "properties": {
                "companies": {
                    "description": "Companies for the current client.",
                    "items": {
                        "$ref": "Company"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListConversationsResponse": {
            "description": "List conversations response.",
            "id": "ListConversationsResponse",
            "properties": {
                "conversations": {
                    "description": "List of conversations for a given filter.",
                    "items": {
                        "$ref": "Conversation"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListJobPromptsResponse": {
            "description": "List job prompts by job response.",
            "id": "ListJobPromptsResponse",
            "properties": {
                "jobPrompts": {
                    "description": "List of job prompts related to given job.",
                    "items": {
                        "$ref": "JobPrompt"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListJobsResponse": {
            "description": "List jobs response.",
            "id": "ListJobsResponse",
            "properties": {
                "jobs": {
                    "description": "The Jobs for a given company.\n\nThe maximum number of items returned is based on the limit field\nprovided in the request.",
                    "items": {
                        "$ref": "Job"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListProfilesResponse": {
            "description": "The List profiles response object.",
            "id": "ListProfilesResponse",
            "properties": {
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results. This is empty if there are no\nmore results.",
                    "type": "string"
                },
                "profiles": {
                    "description": "Profiles for the specific tenant.",
                    "items": {
                        "$ref": "Profile"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListPromptTemplatesResponse": {
            "description": "List prompt templates response.",
            "id": "ListPromptTemplatesResponse",
            "properties": {
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.",
                    "type": "string"
                },
                "promptTemplates": {
                    "description": "List of prompt templates.",
                    "items": {
                        "$ref": "PromptTemplate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListRecruitersResponse": {
            "description": "The List recruiters response object.",
            "id": "ListRecruitersResponse",
            "properties": {
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results. This is empty if there are no\nmore results.",
                    "type": "string"
                },
                "recruiters": {
                    "description": "Recruiters for the specific tenant.",
                    "items": {
                        "$ref": "Recruiter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListTenantsResponse": {
            "description": "The List tenants response object.",
            "id": "ListTenantsResponse",
            "properties": {
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results.",
                    "type": "string"
                },
                "tenants": {
                    "description": "Tenants for the current client.",
                    "items": {
                        "$ref": "Tenant"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Location": {
            "description": "A resource that represents a location with full geographic information.",
            "id": "Location",
            "properties": {
                "latLng": {
                    "$ref": "LatLng",
                    "description": "An object representing a latitude/longitude pair."
                },
                "locationType": {
                    "description": "The type of a location, which corresponds to the address lines field of\ngoogle.type.PostalAddress. For example, \"Downtown, Atlanta, GA, USA\"\nhas a type of LocationType.NEIGHBORHOOD, and \"Kansas City, KS, USA\"\nhas a type of LocationType.LOCALITY.",
                    "enum": [
                        "LOCATION_TYPE_UNSPECIFIED",
                        "COUNTRY",
                        "ADMINISTRATIVE_AREA",
                        "SUB_ADMINISTRATIVE_AREA",
                        "LOCALITY",
                        "POSTAL_CODE",
                        "SUB_LOCALITY",
                        "SUB_LOCALITY_1",
                        "SUB_LOCALITY_2",
                        "NEIGHBORHOOD",
                        "STREET_ADDRESS"
                    ],
                    "enumDescriptions": [
                        "Default value if the type isn't specified.",
                        "A country level location.",
                        "A state or equivalent level location.",
                        "A county or equivalent level location.",
                        "A city or equivalent level location.",
                        "A postal code level location.",
                        "A sublocality is a subdivision of a locality, for example a city borough,\nward, or arrondissement. Sublocalities are usually recognized by a local\npolitical authority. For example, Manhattan and Brooklyn are recognized\nas boroughs by the City of New York, and are therefore modeled as\nsublocalities.",
                        "A district or equivalent level location.",
                        "A smaller district or equivalent level display.",
                        "A neighborhood level location.",
                        "A street address level location."
                    ],
                    "type": "string"
                },
                "postalAddress": {
                    "$ref": "PostalAddress",
                    "description": "Postal address of the location that includes human readable information,\nsuch as postal delivery and payments addresses. Given a postal address,\na postal service can deliver items to a premises, P.O. Box, or other\ndelivery location."
                },
                "radiusMiles": {
                    "description": "Radius in miles of the job location. This value is derived from the\nlocation bounding box in which a circle with the specified radius\ncentered from google.type.LatLng covers the area associated with the\njob location.\nFor example, currently, \"Mountain View, CA, USA\" has a radius of\n6.17 miles.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "LocationFilter": {
            "description": "Geographic region of the search.",
            "id": "LocationFilter",
            "properties": {
                "address": {
                    "description": "The address name, such as \"Mountain View\" or \"Bay Area\".",
                    "type": "string"
                },
                "distanceInMiles": {
                    "description": "The distance_in_miles is applied when the location being searched for is\nidentified as a city or smaller. This field is ignored if the location\nbeing searched for is a state or larger.",
                    "format": "double",
                    "type": "number"
                },
                "latLng": {
                    "$ref": "LatLng",
                    "description": "The latitude and longitude of the geographic center to search from. This\nfield is ignored if `address` is provided."
                },
                "negated": {
                    "description": "Whether to apply negation to the filter so profiles matching the filter\nare excluded.\n\nCurrently only supported in profile search.",
                    "type": "boolean"
                },
                "regionCode": {
                    "description": "CLDR region code of the country/region of the address. This is used\nto address ambiguity of the user-input location, for example, \"Liverpool\"\nagainst \"Liverpool, NY, US\" or \"Liverpool, UK\".\n\nSet this field to bias location resolution toward a specific country\nor territory. If this field is not set, application behavior is biased\ntoward the United States by default.\n\nSee http://cldr.unicode.org/ and\nhttp://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\nfor details. Example: \"CH\" for Switzerland.\nNote that this filter is not applicable for Profile Search related queries.",
                    "type": "string"
                },
                "telecommutePreference": {
                    "description": "Allows the client to return jobs without a\nset location, specifically, telecommuting jobs (telecommuting is considered\nby the service as a special location.\nJob.posting_region indicates if a job permits telecommuting.\nIf this field is set to TelecommutePreference.TELECOMMUTE_ALLOWED,\ntelecommuting jobs are searched, and address and lat_lng are\nignored. If not set or set to\nTelecommutePreference.TELECOMMUTE_EXCLUDED, telecommute job are not\nsearched.\n\nThis filter can be used by itself to search exclusively for telecommuting\njobs, or it can be combined with another location\nfilter to search for a combination of job locations,\nsuch as \"Mountain View\" or \"telecommuting\" jobs. However, when used in\ncombination with other location filters, telecommuting jobs can be\ntreated as less relevant than other jobs in the search response.\n\nThis field is only used for job search requests.",
                    "enum": [
                        "TELECOMMUTE_PREFERENCE_UNSPECIFIED",
                        "TELECOMMUTE_EXCLUDED",
                        "TELECOMMUTE_ALLOWED"
                    ],
                    "enumDescriptions": [
                        "Default value if the telecommute preference isn't specified.",
                        "Exclude telecommute jobs.",
                        "Allow telecommute jobs."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MatchingJob": {
            "description": "Job entry with metadata inside SearchJobsResponse.",
            "id": "MatchingJob",
            "properties": {
                "commuteInfo": {
                    "$ref": "CommuteInfo",
                    "description": "Commute information which is generated based on specified\n CommuteFilter."
                },
                "debugInfo": {
                    "type": "string"
                },
                "job": {
                    "$ref": "Job",
                    "description": "Job resource that matches the specified SearchJobsRequest."
                },
                "jobSummary": {
                    "description": "A summary of the job with core information that's displayed on the search\nresults listing page.",
                    "type": "string"
                },
                "jobTitleSnippet": {
                    "description": "Contains snippets of text from the Job.title field most\nclosely matching a search query's keywords, if available. The matching\nquery keywords are enclosed in HTML bold tags.",
                    "type": "string"
                },
                "searchTextSnippet": {
                    "description": "Contains snippets of text from the Job.description and similar\nfields that most closely match a search query's keywords, if available.\nAll HTML tags in the original fields are stripped when returned in this\nfield, and matching query keywords are enclosed in HTML bold tags.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Money": {
            "description": "Represents an amount of money with its currency type.",
            "id": "Money",
            "properties": {
                "currencyCode": {
                    "description": "The 3-letter currency code defined in ISO 4217.",
                    "type": "string"
                },
                "nanos": {
                    "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                    "format": "int32",
                    "type": "integer"
                },
                "units": {
                    "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
            "id": "Operation",
            "properties": {
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "error": {
                    "$ref": "Status",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "metadata": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "type": "object"
                },
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
                    "type": "string"
                },
                "response": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ParseResumeOptions": {
            "description": "Options that change how the resume parse is performed.",
            "id": "ParseResumeOptions",
            "properties": {
                "enableFullSkillDetection": {
                    "description": "Controls whether detected skills are included in the parsed profile from\nsections of the resume other than just skills sections.\n\nNormally, returned skills are limited to those taken from a resume section\nintended to list skills. When enabled, this feature causes detected\nskills in other sections to also be included in the returned profile.",
                    "type": "boolean"
                },
                "enableOcr": {
                    "description": "Controls whether Optical Character Recognition (OCR) is enabled.\n\nOCR is used to decipher pictorial resumes, or resumes that have some\nelement of pictorial detail (for example, contact information placed within\nan image in a pdf). Note that the API call has a higher latency if OCR is\nenabled.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ParseResumeRequest": {
            "description": "Parse resume request.",
            "id": "ParseResumeRequest",
            "properties": {
                "languageCode": {
                    "description": "The language code of contents in the resume.\n\nLanguage codes must be in BCP-47 format, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47){:\nclass=\"external\" target=\"_blank\" }.",
                    "type": "string"
                },
                "options": {
                    "$ref": "ParseResumeOptions",
                    "description": "Options that change how the resume parse is performed."
                },
                "regionCode": {
                    "description": "The region code indicating where the resume is from. Values\nare as per the ISO-3166-2 format. For example, US, FR, DE.\n\nProviding this value improves the resume parsing quality and performance.\n\nAn error is thrown if the regionCode is invalid.",
                    "type": "string"
                },
                "resume": {
                    "description": "Required. The bytes of the resume file in common format, for example, PDF, TXT.\nUTF-8 encoding is needed if the resume is text-based, otherwise an error\nis thrown.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ParseResumeResponse": {
            "description": "Parse resume response.",
            "id": "ParseResumeResponse",
            "properties": {
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "profile": {
                    "$ref": "Profile",
                    "description": "The profile parsed from the resume. personName is always returned\nas a structured object rather than a formatted string. For example,\nas object \"Smith, John, Jr\" as opposed to the formatted string\n\"John Smith, Jr.\"."
                },
                "rawText": {
                    "description": "Raw text from resume.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Patent": {
            "description": "Resource that represents the patent acquired by a candidate.",
            "id": "Patent",
            "properties": {
                "displayName": {
                    "description": "Name of the patent.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "inventors": {
                    "description": "A list of inventors' names.\n\nNumber of characters allowed for each is 100.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "patentDescription": {
                    "description": "The description of the patent.\n\nNumber of characters allowed is 100,000.",
                    "type": "string"
                },
                "patentFilingDate": {
                    "$ref": "Date",
                    "description": "The date that the patent was filed."
                },
                "patentNumber": {
                    "description": "The number of the patent.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "patentOffice": {
                    "description": "The name of the patent office.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "patentStatus": {
                    "description": "The status of the patent.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "patentStatusDate": {
                    "$ref": "Date",
                    "description": "The date the last time the status of the patent was checked."
                },
                "skillsUsed": {
                    "description": "The skills used in this patent.",
                    "items": {
                        "$ref": "Skill"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PerformanceReview": {
            "description": "All performance feedback received by the employee (i.e., performance reviews,\nand so on).",
            "id": "PerformanceReview",
            "properties": {
                "outcome": {
                    "description": "Required. Is the rating on this assessment area positive, negative, neutral?",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "performanceReviewTopics": {
                    "description": "Individual sub-components of the performance review (for example,\ncommunication skills, technical skills, and so on).",
                    "items": {
                        "$ref": "PerformanceReviewTopic"
                    },
                    "type": "array"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this assessment."
                },
                "reviewNotes": {
                    "description": "Any free text notes on the performance review.",
                    "type": "string"
                },
                "reviewPeriodEndDate": {
                    "$ref": "Date",
                    "description": "Required. The last date (inclusive) of the period for which this performance review\nis for."
                },
                "reviewPeriodStartDate": {
                    "$ref": "Date",
                    "description": "Required. The first date (inclusive) of the period for which this performance review\nis for."
                },
                "reviewTime": {
                    "description": "Required. Customer provided timestamp of when the performance review was given.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "reviewerId": {
                    "description": "Unique identifier of the person providing the performance review.",
                    "type": "string"
                },
                "reviewerRole": {
                    "description": "Role of the person providing the performance review.",
                    "enum": [
                        "REVIEWER_ROLE_UNSPECIFIED",
                        "EMPLOYEE_MANAGER",
                        "PEER",
                        "SUBORDINATE",
                        "OTHER_REVIEWER_ROLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Performance review is done by the employee's manager.",
                        "Performance review is done by a peer of the employee.",
                        "Performance review is done by a subordinate of the employee.",
                        "Reviewer role is known, but this role is not specified in this ENUM."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PerformanceReviewTopic": {
            "description": "Individual sub-components of the performance review (for example,\ncommunication skills, technical skills, and so on).",
            "id": "PerformanceReviewTopic",
            "properties": {
                "outcome": {
                    "description": "Required. Is the rating on this assessment area positive, negative, neutral?",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "rating": {
                    "$ref": "Rating",
                    "description": "The rating on this assessment."
                },
                "reviewNotes": {
                    "description": "Notes about the employee's performance on this sub-area.",
                    "type": "string"
                },
                "reviewerId": {
                    "description": "Unique identifier of the person providing the performance review for this\ntopic.",
                    "type": "string"
                },
                "reviewerRole": {
                    "description": "Role of the person providing the performance review for this topic.",
                    "enum": [
                        "REVIEWER_ROLE_UNSPECIFIED",
                        "EMPLOYEE_MANAGER",
                        "PEER",
                        "SUBORDINATE",
                        "OTHER_REVIEWER_ROLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Performance review is done by the employee's manager.",
                        "Performance review is done by a peer of the employee.",
                        "Performance review is done by a subordinate of the employee.",
                        "Reviewer role is known, but this role is not specified in this ENUM."
                    ],
                    "type": "string"
                },
                "topicType": {
                    "description": "Required. What area of feedback this is about (for example, overall, communication\nskills, technical skills, and so on).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PersonName": {
            "description": "Resource that represents the name of a person.",
            "id": "PersonName",
            "properties": {
                "formattedName": {
                    "description": "A string represents a person's full name. For example, \"Dr. John Smith\".\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "preferredName": {
                    "description": "Preferred name for the person. This field is ignored if structured_name\nis provided.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "structuredName": {
                    "$ref": "PersonStructuredName",
                    "description": "A person's name in a structured way (last name, first name, suffix, and\nso on.)"
                }
            },
            "type": "object"
        },
        "PersonNameFilter": {
            "description": "Filter on person name.",
            "id": "PersonNameFilter",
            "properties": {
                "personName": {
                    "description": "Required. The person name. For example, \"John Smith\".\n\nCan be any combination of PersonName.structured_name.given_name,\nPersonName.structured_name.middle_initial,\nPersonName.structured_name.family_name, and\nPersonName.formatted_name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PersonStructuredName": {
            "description": "Resource that represents a person's structured name.",
            "id": "PersonStructuredName",
            "properties": {
                "familyName": {
                    "description": "Family/last name.\n\nIt's derived from formatted_name if not provided.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "givenName": {
                    "description": "Given/first name.\n\nIt's derived from formatted_name if not provided.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "middleInitial": {
                    "description": "Middle initial.\n\nIt's derived from formatted_name if not provided.\n\nNumber of characters allowed is 20.",
                    "type": "string"
                },
                "preferredName": {
                    "description": "Preferred given/first name or nickname.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "prefixes": {
                    "description": "Prefixes.\n\nNumber of characters allowed is 20.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "suffixes": {
                    "description": "Suffixes.\n\nNumber of characters allowed is 20.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PersonalUri": {
            "description": "Resource that represents a valid URI for a personal use.",
            "id": "PersonalUri",
            "properties": {
                "uri": {
                    "description": "The personal URI.\n\nNumber of characters allowed is 4,000.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Phone": {
            "description": "Resource that represents a person's telephone number.",
            "id": "Phone",
            "properties": {
                "number": {
                    "description": "Phone number.\n\nAny phone formats are supported and only exact matches are performed on\nsearches. For example, if a phone number in profile is provided in the\nformat of \"(xxx)xxx-xxxx\", in profile searches the same phone format\nhas to be provided.\n\nNumber of characters allowed is 20.",
                    "type": "string"
                },
                "type": {
                    "description": "The phone type. For example, LANDLINE, MOBILE, FAX.",
                    "enum": [
                        "PHONE_TYPE_UNSPECIFIED",
                        "LANDLINE",
                        "MOBILE",
                        "FAX",
                        "PAGER",
                        "TTY_OR_TDD",
                        "VOICEMAIL",
                        "VIRTUAL",
                        "VOIP",
                        "MOBILE_OR_LANDLINE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A landline.",
                        "A mobile.",
                        "A fax.",
                        "A pager.",
                        "A TTY (test telephone) or TDD (telecommunication device for the deaf).",
                        "A voicemail.",
                        "A virtual telephone number is a number that can be routed to another\nnumber and managed by the user via Web, SMS, IVR, and so on.  It is\nassociated with a particular person, and may be routed to either a MOBILE\nor LANDLINE number. The phone usage should\nbe set to PERSONAL for these phone types. Some more information can be\nfound here: http://en.wikipedia.org/wiki/Personal_Numbers",
                        "Voice over IP numbers. This includes TSoIP (Telephony Service over IP).",
                        "In some regions (e.g. the USA), it is impossible to distinguish between\nfixed-line and mobile numbers by looking at the phone number itself."
                    ],
                    "type": "string"
                },
                "usage": {
                    "description": "The usage of the phone. For example, SCHOOL, WORK, PERSONAL.",
                    "enum": [
                        "CONTACT_INFO_USAGE_UNSPECIFIED",
                        "PERSONAL",
                        "WORK",
                        "SCHOOL"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Personal use.",
                        "Work use.",
                        "School use."
                    ],
                    "type": "string"
                },
                "whenAvailable": {
                    "description": "When this number is available. Any descriptive string is expected.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostalAddress": {
            "description": "Represents a postal address, e.g. for postal delivery or payments addresses.\nGiven a postal address, a postal service can deliver items to a premise, P.O.\nBox or similar.\nIt is not intended to model geographical locations (roads, towns,\nmountains).\n\nIn typical usage an address would be created via user input or from importing\nexisting data, depending on the type of process.\n\nAdvice on address input / editing:\n - Use an i18n-ready address widget such as\n   https://github.com/google/libaddressinput)\n- Users should not be presented with UI elements for input or editing of\n  fields outside countries where that field is used.\n\nFor more guidance on how to use this schema, please see:\nhttps://support.google.com/business/answer/6397478",
            "id": "PostalAddress",
            "properties": {
                "addressLines": {
                    "description": "Unstructured address lines describing the lower levels of an address.\n\nBecause values in address_lines do not have type information and may\nsometimes contain multiple values in a single field (e.g.\n\"Austin, TX\"), it is important that the line order is clear. The order of\naddress lines should be \"envelope order\" for the country/region of the\naddress. In places where this can vary (e.g. Japan), address_language is\nused to make it explicit (e.g. \"ja\" for large-to-small ordering and\n\"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of\nan address can be selected based on the language.\n\nThe minimum permitted structural representation of an address consists\nof a region_code with all remaining information placed in the\naddress_lines. It would be possible to format such an address very\napproximately without geocoding, but no semantic reasoning could be\nmade about any of the address components until it was at least\npartially resolved.\n\nCreating an address only containing a region_code and address_lines, and\nthen geocoding is the recommended way to handle completely unstructured\naddresses (as opposed to guessing which parts of the address should be\nlocalities or administrative areas).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "administrativeArea": {
                    "description": "Optional. Highest administrative subdivision which is used for postal\naddresses of a country or region.\nFor example, this can be a state, a province, an oblast, or a prefecture.\nSpecifically, for Spain this is the province and not the autonomous\ncommunity (e.g. \"Barcelona\" and not \"Catalonia\").\nMany countries don't use an administrative area in postal addresses. E.g.\nin Switzerland this should be left unpopulated.",
                    "type": "string"
                },
                "languageCode": {
                    "description": "Optional. BCP-47 language code of the contents of this address (if\nknown). This is often the UI language of the input form or is expected\nto match one of the languages used in the address' country/region, or their\ntransliterated equivalents.\nThis can affect formatting in certain countries, but is not critical\nto the correctness of the data and will never affect any validation or\nother non-formatting related operations.\n\nIf this value is not known, it should be omitted (rather than specifying a\npossibly incorrect default).\n\nExamples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
                    "type": "string"
                },
                "locality": {
                    "description": "Optional. Generally refers to the city/town portion of the address.\nExamples: US city, IT comune, UK post town.\nIn regions of the world where localities are not well defined or do not fit\ninto this structure well, leave locality empty and use address_lines.",
                    "type": "string"
                },
                "organization": {
                    "description": "Optional. The name of the organization at the address.",
                    "type": "string"
                },
                "postalCode": {
                    "description": "Optional. Postal code of the address. Not all countries use or require\npostal codes to be present, but where they are used, they may trigger\nadditional validation with other parts of the address (e.g. state/zip\nvalidation in the U.S.A.).",
                    "type": "string"
                },
                "recipients": {
                    "description": "Optional. The recipient at the address.\nThis field may, under certain circumstances, contain multiline information.\nFor example, it might contain \"care of\" information.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "regionCode": {
                    "description": "Required. CLDR region code of the country/region of the address. This\nis never inferred and it is up to the user to ensure the value is\ncorrect. See http://cldr.unicode.org/ and\nhttp://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\nfor details. Example: \"CH\" for Switzerland.",
                    "type": "string"
                },
                "revision": {
                    "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is\nthe latest revision.\n\nAll new revisions **must** be backward compatible with old revisions.",
                    "format": "int32",
                    "type": "integer"
                },
                "sortingCode": {
                    "description": "Optional. Additional, country-specific, sorting code. This is not used\nin most regions. Where it is used, the value is either a string like\n\"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number\nalone, representing the \"sector code\" (Jamaica), \"delivery area indicator\"\n(Malawi) or \"post office indicator\" (e.g. C\u00f4te d'Ivoire).",
                    "type": "string"
                },
                "sublocality": {
                    "description": "Optional. Sublocality of the address.\nFor example, this can be neighborhoods, boroughs, districts.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProactiveSubmission": {
            "description": "The information representing if this application is a pro-active\nsubmission.",
            "id": "ProactiveSubmission",
            "properties": {
                "notes": {
                    "description": "Additional supporting information if this application is a pro-active\nsubmittal, such as possible role fits, or a potential hiring manager.",
                    "type": "string"
                },
                "proactive": {
                    "description": "Set to true if this application represents a pro-active submission.\nDefault to false.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProcessingOptions": {
            "description": "Options for job processing.",
            "id": "ProcessingOptions",
            "properties": {
                "disableStreetAddressResolution": {
                    "description": "If set to `true`, the service does not attempt to resolve a\nmore precise address for the job.",
                    "type": "boolean"
                },
                "htmlSanitization": {
                    "description": "Option for job HTML content sanitization. Applied fields are:\n\n* description\n* applicationInfo.instruction\n* incentives\n* qualifications\n* responsibilities\n\nHTML tags in these fields may be stripped if sanitiazation isn't\ndisabled.\n\nDefaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY.",
                    "enum": [
                        "HTML_SANITIZATION_UNSPECIFIED",
                        "HTML_SANITIZATION_DISABLED",
                        "SIMPLE_FORMATTING_ONLY"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Disables sanitization on HTML input.",
                        "Sanitizes HTML input, only accepts bold, italic, ordered list, and\nunordered list markup tags."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Profile": {
            "description": "A resource that represents the profile for a job candidate (also referred to\nas a \"single-source profile\").",
            "id": "Profile",
            "properties": {
                "activities": {
                    "description": "The individual or collaborative activities which the candidate has\nparticipated in, for example, open-source projects, class assignments that\naren't listed in employment_records.\n\nThe limitation for max number of activities is 50.",
                    "items": {
                        "$ref": "Activity"
                    },
                    "type": "array"
                },
                "additionalContactInfo": {
                    "description": "Available contact information besides addresses, email_addresses,\nphone_numbers and personal_uris. For example, Hang-out, Skype.",
                    "items": {
                        "$ref": "AdditionalContactInfo"
                    },
                    "type": "array"
                },
                "addresses": {
                    "description": "The candidate's postal addresses. It's highly recommended to\ninput this information as accurately as possible to help improve search\nquality. Here are some recommendations:\n\n* Provide Address.usage if possible, especially if the address is\nPERSONAL. During a search only personal addresses are considered. If there\nis no such address, all addresses with unspecified usage are assumed to be\npersonal.\n* Provide Address.current for the current address if possible. During\na search, only current addresses are considered. If there is no such\naddress, all addresses are assumed to be current.\n\nWhen displaying a candidate's addresses, it is sometimes desirable to limit\nthe number of addresses shown. In these cases we recommend that you display\nthe addresses in the following order of priority:\n1. Address.usage is PERSONAL and Address.current is true.\n2. Address.usage is PERSONAL and Address.current is false or not\nset.\n3. Address.usage is CONTACT_INFO_USAGE_UNSPECIFIED and\nAddress.current is true.\n4. Address.usage is CONTACT_INFO_USAGE_UNSPECIFIED and\nAddress.current is false or not set.",
                    "items": {
                        "$ref": "Address"
                    },
                    "type": "array"
                },
                "allowedContactTypes": {
                    "description": "What types of outreach a candidate has either consented to or is otherwise\nallowed by business rules.",
                    "enumDescriptions": [
                        "Default value.",
                        "Phone call.",
                        "SMS or Text Messaging.",
                        "Web-based conversations.",
                        "Email outreach.",
                        "Another contact type not specified here."
                    ],
                    "items": {
                        "enum": [
                            "CONTACT_TYPE_UNSPECIFIED",
                            "PHONE_CALL",
                            "SMS",
                            "WEB",
                            "EMAIL",
                            "OTHER_CONTACT_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "applications": {
                    "description": "Output only. The resource names of the candidate's applications.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "applied": {
                    "description": "Output only. Indicates if the candidate has applied to the job posting for the job\nresource in\nRecommendProfilesRequest.\n\nA candidate is considered to have applied to the job posting if the Profile\nhas an associated Application record with Application.job ==\nRecommendProfilesRequest.job\nand Application.source is one\nof (APPLY_DIRECT_WEB,\nAPPLY_DIRECT_MOBILE_WEB,\nAPPLY_DIRECT_MOBILE_APP,\nAPPLY_DIRECT_IN_PERSON,\nAPPLY_INDIRECT).",
                    "type": "boolean"
                },
                "assessments": {
                    "description": "Details of any asessments done on the candidate. This should only be\npopulated if these assessments were not tied to any specific\napplication or assignment.",
                    "items": {
                        "$ref": "Assessment"
                    },
                    "type": "array"
                },
                "assignments": {
                    "description": "Output only. The resource names of the candidate's assignments.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "availability": {
                    "$ref": "Availability",
                    "description": "Output only. Deprecated. Use availability_signals instead.\n\nCandidate's overall availability based on signals.\n\nSee CandidateAvailabilityFilter for how this is computed."
                },
                "availabilitySignals": {
                    "description": "Output only. Candidate's availability signals.",
                    "items": {
                        "$ref": "AvailabilitySignal"
                    },
                    "type": "array"
                },
                "candidateUpdateTime": {
                    "description": "The timestamp when the profile was last updated as a result of a direct or\nindirect action by a candidate.\n\nThese actions include:\n\n* Direct actions such as the candidate submitting a new resume as part of a\njob application to the agency, using a self-service tool such as a website\nto update their profile, and so on.\n* Indirect actions by the candidate such as uploading a resume to a job\nboard that is collected by the agency through a feed, providing a resume to\na recruiter who then uploads it into the ATS, and so on.\n* Updates made to the candidate's profile by the recruiter as a result of\ninteracting with the candidate (for example adding a skill or work\npreference, and so on). Changes to recruiting_notes are specifically\nexcluded from this action type.\n\nNote: candidate_update_time must be greater than or equal to\nresume_update_time or an error is thrown.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "certifications": {
                    "description": "The certifications acquired by the candidate.",
                    "items": {
                        "$ref": "Certification"
                    },
                    "type": "array"
                },
                "citizenships": {
                    "description": "Citizenship/s of the candidate.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "clientVersionTimestamp": {
                    "description": "The user defined timestamp.\n\nThis field is used for client side version control. The user can provide\nthis field to ensure that the API always stores and search against the\nmost recent profiles. A profile with a more recent timestamp overwrites\nthe same profile with an older timestamp. An error is thrown if the clients\ntry to update the existing profile with an older timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "contactAvailability": {
                    "description": "When the candidate is available for additional screening conversations.",
                    "items": {
                        "$ref": "TimeSegment"
                    },
                    "type": "array"
                },
                "createTime": {
                    "description": "The timestamp when the profile was first created at this source.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "currentlyPlaced": {
                    "description": "Output only. Indicates if the candidate is currently placed on an assignment.\n\nThis is true if the Profile has 1 or more associated assignment entities\nwith assignment status =\nIN_PROGRESS.",
                    "type": "boolean"
                },
                "customAttributes": {
                    "additionalProperties": {
                        "$ref": "CustomAttribute"
                    },
                    "description": "A map of fields to hold both filterable and non-filterable custom profile\nattributes that aren't covered by the provided structured fields. See\nCustomAttribute for more details.\n\nAt most 100 filterable and at most 100 unfilterable keys are supported. If\nlimit is exceeded, an error is thrown. Custom attributes are `unfilterable`\nby default. These are filterable when the `filterable` flag is set to\n`true`.\n\nNumeric custom attributes: each key can only map to one numeric value,\notherwise an error is thrown. Client can also filter on numeric custom\nattributes using '>', '<' or '=' operators.\n\nString custom attributes: each key can map up to 50 string values. For\nfilterable string value, each value has a byte size of no more than 256B.\nFor unfilterable string values, the maximum byte size of a single key is\n64B. An error is thrown for any request exceeding the limit.\nThe maximum total byte size is 10KB.",
                    "type": "object"
                },
                "derivedAddresses": {
                    "description": "Output only. Derived locations of the profile, resolved from Profile.addresses.\n\nderived_addresses are exactly matched to Profile.addresses in the\nsame order.",
                    "items": {
                        "$ref": "Location"
                    },
                    "type": "array"
                },
                "educationRecords": {
                    "description": "The education history record of the candidate. It's highly recommended to\ninput this information as accurately as possible to help improve search\nquality. Here are some recommendations:\n\n* Specify the start and end dates of the education records.\n* List each education type separately, no matter how minor the change is.\nFor example, the profile contains the education experience from the same\nschool but different degrees.\n* Provide EducationRecord.is_current for the current education if\npossible. If not, it's inferred from user inputs.\n\nThe limitation for max number of education records is 100.",
                    "items": {
                        "$ref": "EducationRecord"
                    },
                    "type": "array"
                },
                "eeoDemographics": {
                    "$ref": "EeoDemographics",
                    "description": "The demographic information (equal employment opportunity, EEO) for the\nperson."
                },
                "emailAddresses": {
                    "description": "The candidate's email addresses.",
                    "items": {
                        "$ref": "Email"
                    },
                    "type": "array"
                },
                "employeeTypes": {
                    "description": "A list of employee types (e.g. W2, Vendor, Unknown) which the employee is\nallowed to be hired against.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "employmentRecords": {
                    "description": "The employment history records of the candidate. It's highly recommended\nto input this information as accurately as possible to help improve search\nquality. Here are some recommendations:\n\n* Specify the start and end dates of the employment records.\n* List different employment types separately, no matter how minor the\nchange is.\nFor example, only job title is changed from \"software engineer\" to \"senior\nsoftware engineer\".\n* Provide EmploymentRecord.is_current for the current employment if\npossible. If not, it's inferred from user inputs.\n\nThe limitation for max number of employment records is 100.",
                    "items": {
                        "$ref": "EmploymentRecord"
                    },
                    "type": "array"
                },
                "externalId": {
                    "description": "Profile's id in client system, if available. This value is unique for each\nprofile inside a tenant. An error is thrown if another profile with the\nsame external_id is created.\n\nThe maximum number of bytes allowed is 100.",
                    "type": "string"
                },
                "externalSystem": {
                    "description": "The system of record / source system / operating company from which this\nprofile is extracted. This is intended to be populated where the same job\nmight be represented differently to different recruiters.\n\nFrom a training perspective it is important to maintain a separation of\ndata that best represents the information an individual recruiter had\naccess to during the search and placement process.",
                    "type": "string"
                },
                "featureControlFlags": {
                    "description": "List of strings representing the feature control flags of the profile.\nAny given flag, for example \"SMS_Stage1\", can be assigned to a group of\nprofiles. The flag can be then used to enable/disable the features defined\nin Tenant.FeatureType together with SwitchFeature API. Each flag string\nmust be a maximum of 64 characters and must match the pattern:\na-zA-Z*, except reserved string \"ALL\".\n\nFor example, [feature_control_flags] = [\"SMS_Stage1\", \"Outreach_Stage2\"],\nand tenant is set to be Tenant.rollout_features =\n{\"SMS\": [\"SMS_stage1\"], \"Outreach\": [\"Outreach_stage1\"]}.\nThis profile now has feature \"SMS\" enabled, and feature \"Outreach\"\ndisabled.\n\nNote: If the flag list is empty, features defined in Tenant.FeatureType\nare disabled for this profile regardless of Tenant.rollout_features.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fieldUpdateMetadata": {
                    "additionalProperties": {
                        "$ref": "FieldUpdateMetadata"
                    },
                    "description": "Output only. A history of when and why the candidate's information was updated or\nreviewed. This is important for tracking situations where data was reviewed\nand updated, but the data value did not change (for example, for tracking\nfield-level freshness).\n\nWhen a change is made to a profile through either the CreateProfile or\nUpdateProfile API, fields assigned or modified are also tracked here in\nfieldUpdateMetadata. The timestamp for tracking is decided in the following\norder of priority:\n  1. create_time of profile in that request if present.\n  2. update_time of profile in that request if present.\n  3. Timestamp of the API call.\n\nThe following fields are tracked:\n\n* external_id\n* source\n* source_types\n* uri\n* is_hirable\n* create_time\n* update_time\n* candidate_update_time\n* resume_update_time\n* resume\n* person_names\n* addresses\n* email_addresses\n* phone_numbers\n* personal_uris\n* additional_contact_info\n* employment_records\n* education_records\n* skills\n* activities\n* publications\n* patents\n* certifications\n* recruiting_notes\n* custom_attributes\n* group_id\n* external_system\n* source_note\n* primary_responsibilities\n* citizenships\n* work_authorizations\n* employee_types\n* language_code\n* qualification_summary\n* allowed_contact_types\n* preferred_contact_types\n* contact_availability\n* language_fluencies\n* work_preference\n* industry_experiences\n* work_environment_experiences\n* work_availability\n* security_clearances\n* references\n* assessments\n* interviews\n* feature_control_flags",
                    "type": "object"
                },
                "groupId": {
                    "description": "The cluster id of the profile to associate with other profile(s) for the\nsame candidate.\n\nThis field should be generated by the customer. If a value is not provided,\na random UUID is assigned to this field of the profile.\n\nThis is used to link multiple profiles to the same candidate. For example,\na client has a candidate with two profiles, where one was created recently\nand the other one was created 5 years ago. These two profiles may be very\ndifferent. The clients can create the first profile and get a generated\ngroup_id, and assign it when the second profile is created,\nindicating these two profiles are referring to the same candidate.",
                    "type": "string"
                },
                "industryExperiences": {
                    "description": "Which industries does this person have experience working in.",
                    "items": {
                        "$ref": "Experience"
                    },
                    "type": "array"
                },
                "interviews": {
                    "description": "All interviews (screen, onsite, and so on) conducted on the candidate\n(includes details such as user conducting the interview, timestamp,\nfeedback, and so on). This should only be populated if these interviews are\nnot tied to any specific application or assignment.",
                    "items": {
                        "$ref": "Interview"
                    },
                    "type": "array"
                },
                "isHirable": {
                    "description": "Indicates the hirable status of the candidate.",
                    "type": "boolean"
                },
                "keywordSnippet": {
                    "description": "Output only. Keyword snippet shows how the search result is related to a\nsearch query.  This is only returned in SearchProfilesResponse.",
                    "type": "string"
                },
                "languageCode": {
                    "description": "The language in which the profile information is provided.\nThis field is distinct from the languages the candidate is fluent in,\nwhich should be provided as a skill.",
                    "type": "string"
                },
                "languageFluencies": {
                    "description": "The candidate's skill set in written and spoken languages",
                    "items": {
                        "$ref": "LanguageFluency"
                    },
                    "type": "array"
                },
                "lastSuccessfulRecruiterContactTime": {
                    "description": "Output only. The last time a recruiter successfully reached the candidate as represented\nin the recruiting_notes.\n\nNote: This specifically excludes any automated or self-service actions\nand only includes actual conversations between the recruiter and candidate.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "name": {
                    "description": "Required during profile update.\n\nResource name assigned to a profile by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\",\nfor example, \"projects/foo/tenants/bar/profiles/baz\".",
                    "type": "string"
                },
                "negativeFeedback": {
                    "description": "Output only. Reflects \"true\" if:\n1. the recruiter id passed in the\nRequestMetadata object passed a NEGATIVE_FEEDBACK signal for the specified\nprofile_id for the job_id passed in the Query, and\n2. a corresponding\nUNSET_NEGATIVE_FEEDBACK signal has not been received. If these conditions\nare not met, it reflects \"false\". This should be reflected in the\ncustomer's UX.",
                    "type": "boolean"
                },
                "patents": {
                    "description": "The patents acquired by the candidate.",
                    "items": {
                        "$ref": "Patent"
                    },
                    "type": "array"
                },
                "personNames": {
                    "description": "The names of the candidate this profile references.\n\nCurrently only one person name is supported.",
                    "items": {
                        "$ref": "PersonName"
                    },
                    "type": "array"
                },
                "personalUris": {
                    "description": "The candidate's personal URIs.",
                    "items": {
                        "$ref": "PersonalUri"
                    },
                    "type": "array"
                },
                "phoneNumbers": {
                    "description": "The candidate's phone number(s).",
                    "items": {
                        "$ref": "Phone"
                    },
                    "type": "array"
                },
                "preferredContactTypes": {
                    "description": "What types of outreach a candidate prefers.",
                    "enumDescriptions": [
                        "Default value.",
                        "Phone call.",
                        "SMS or Text Messaging.",
                        "Web-based conversations.",
                        "Email outreach.",
                        "Another contact type not specified here."
                    ],
                    "items": {
                        "enum": [
                            "CONTACT_TYPE_UNSPECIFIED",
                            "PHONE_CALL",
                            "SMS",
                            "WEB",
                            "EMAIL",
                            "OTHER_CONTACT_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "previouslyPlaced": {
                    "description": "Output only. Indicates if the candidate has ever been placed before on an assignment.\n\nThis is true if the Profile has one or more associated Assignment\nentities with Assignment.state as one of (\nCOMPLETED,\nIN_PROGRESS)",
                    "type": "boolean"
                },
                "primaryResponsibilities": {
                    "description": "A list of current job responsibilities. This should be populated when\nthere is no knowledge of where a candidate is currently working\n(for example, indicated by the employmentRecord field) but the\ncandidate provides their current responsibilities.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "processed": {
                    "description": "Output only. Indicates if a summarized profile was created as part of the\nprofile creation API call. This flag does not indicate whether a profile is\nsearchable or not.",
                    "type": "boolean"
                },
                "publications": {
                    "description": "The publications published by the candidate.\n\nThe limitation for max number of publications is 50.",
                    "items": {
                        "$ref": "Publication"
                    },
                    "type": "array"
                },
                "qualificationSummary": {
                    "description": "A list or paragraph displaying a range of the persons' most impressive\nachievements.",
                    "type": "string"
                },
                "recruitingNotes": {
                    "description": "The recruiting notes added for the candidate.\n\nFor example, the recruiter can add some unstructured comments for this\ncandidate like \"this candidate also has experiences in volunteer work\".\n\nThe limitation for max number of allowed recruiting notes is 50.",
                    "items": {
                        "$ref": "RecruitingNote"
                    },
                    "type": "array"
                },
                "references": {
                    "description": "Details of any reference checks performed on the candidate. This should\nonly be populated if these reference checks are not tied to any specific\napplication or assignment.",
                    "items": {
                        "$ref": "Reference"
                    },
                    "type": "array"
                },
                "resume": {
                    "$ref": "Resume",
                    "description": "The resume representing this profile."
                },
                "resumeUpdateTime": {
                    "description": "The timestamp when the candidate's resume was added or updated on the\ncandidate's profile. Whether that resume was directly uploaded by a\ncandidate, pulled from a 3rd party job board feed, added by a recruiter,\nand so on.\n\nIf this field is updated, it's expected that resume is provided in\nthe create or update calls.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "securityClearances": {
                    "description": "The candidate's list of issued security clearances.",
                    "items": {
                        "$ref": "SecurityClearance"
                    },
                    "type": "array"
                },
                "skills": {
                    "description": "The skill set of the candidate. It's highly recommended to provide as\nmuch information as possible to help improve the search quality.\n\nThe limitation for max number of skills is 500.",
                    "items": {
                        "$ref": "Skill"
                    },
                    "type": "array"
                },
                "source": {
                    "description": "The source description indicating where the profile is acquired.\n\nFor example, if a candidate profile is acquired from a resume, the user can\ninput \"resume\" here to indicate the source.\n\nThe maximum number of bytes allowed is 100.",
                    "type": "string"
                },
                "sourceNote": {
                    "description": "Other information about this source.",
                    "type": "string"
                },
                "sourceTypes": {
                    "description": "The type of sources the profile was originally acquired from.",
                    "enumDescriptions": [
                        "Default value.",
                        "Candidate provided resume file.",
                        "The client's application tracking system.",
                        "Online source including social media or professional social media.",
                        "Profile gathered from a candidate via self-service tools such a a web\nportal.",
                        "Other source type."
                    ],
                    "items": {
                        "enum": [
                            "SOURCE_TYPE_UNSPECIFIED",
                            "RESUME",
                            "ATS",
                            "ONLINE_PROFILE",
                            "SELF_SERVICE",
                            "OTHER_SOURCE_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "summarizedEmploymentHistory": {
                    "description": "Output only. Intended for display in the SERP on each candidate. Represents\nthe union of the candidate's employment history from\nProfile.employment_records and any associated Assignment records\nfor this candidate.  The employment histories are sorted in the following\nway:\n1. Any records that are missing a start_date\nappear at the bottom of the list.\n2. Any records with a start_date appearing\nafter end_date appear at the bottom of the\nlist.\n3. Any records that are missing an end_date\nare assumed to be current and appear at the start of the list.\n4. Descending order by end_date.\n5. Descending order by start_date.\n\nNote that this is in order of priority. For example, if a record is missing\nboth start_date and\nend_date, the record will appear at the bottom\nof the list.",
                    "items": {
                        "$ref": "EmploymentRecordSummary"
                    },
                    "type": "array"
                },
                "tags": {
                    "description": "Output only. The tags assigned to this profile. This supports the ability\nto filter on tags assigned to the profile.\n\nTags are set by the AddProfileTags and\nRemoveProfileTags APIs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "updateTime": {
                    "description": "The timestamp when the profile was last updated at this source.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "uri": {
                    "description": "The URI set by clients that links to this profile's client-side copy.\n\nThe maximum number of bytes allowed is 4000.",
                    "type": "string"
                },
                "workAuthorizations": {
                    "description": "List of values where the candidate is authorized to work (e.g. H1b,\ncitizen, green card).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "workAvailability": {
                    "description": "The candidate's availability e.g. \"M,T,W from 8am to 6pm, Th, F from any\ntime before 6pm, Sa any time\", or ranges like \"Available after the 16th\".",
                    "items": {
                        "$ref": "TimeSegment"
                    },
                    "type": "array"
                },
                "workEnvironmentExperiences": {
                    "description": "Which work environment(s), such as in a warehouse or a factory, does this\nperson have experience working in.",
                    "items": {
                        "$ref": "Experience"
                    },
                    "type": "array"
                },
                "workPreference": {
                    "$ref": "WorkPreference",
                    "description": "The work preference of this candidate."
                }
            },
            "type": "object"
        },
        "ProfileEvent": {
            "description": "An event issued when a profile searcher interacts with the application\nthat implements Cloud Talent Solution.",
            "id": "ProfileEvent",
            "properties": {
                "jobs": {
                    "description": "The job name(s) associated with this client event. Leave it\nempty if the event isn't associated with a job.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\", for\nexample, \"projects/foo/tenants/bar/jobs/baz\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "profiles": {
                    "description": "Required. The profile name(s) associated with this client event.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\",\nfor example, \"projects/foo/tenants/bar/profiles/baz\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recruiter": {
                    "description": "Required. This is a unique identifier of the recruiter who triggered the event, to\nsupport filtering by individual recruiter behavior.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/recruiters/{recruiter_id}\",\nfor example, \"projects/foo/tenants/bar/recruiters/baz\".",
                    "type": "string"
                },
                "type": {
                    "description": "Required. Type of event.",
                    "enum": [
                        "PROFILE_EVENT_TYPE_UNSPECIFIED",
                        "IMPRESSION",
                        "VIEW",
                        "BOOKMARK",
                        "UNBOOKMARK",
                        "CONTACT_PHONE",
                        "CONTACT_TEXT",
                        "CONTACT_EMAIL",
                        "CONTACT_ATS_NOTE",
                        "NEGATIVE_FEEDBACK",
                        "UNSET_NEGATIVE_FEEDBACK",
                        "PROFILE_AVAILABILITY_DETAIL_VIEWED",
                        "PROFILE_SHORTLIST",
                        "PROFILE_UNSHORTLIST"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Send this event when a ProfileEvent.profiles was sent as a part of\na result set for a CTS API call and was rendered in the end user's UI\n(that is, the ProfileEvent.recruiter).",
                        "The VIEW event records the action of a candidate's profile being\nviewed by an end user. This is critical to tracking product metrics and\nshould be sent for every profile VIEW that happens in your system,\nwhether the event is associated with an API call (for example, a\nrecruiter making a request for a result set and clicking on a profile)\nor not (a recruiter using the system to view profile details without\nmaking a request).\n\nFor a VIEW events associated with API calls, the\nClientEvent.request_id should be populated.  If the VIEW is not\nassociated with an API call, request_id should\nnot be populated.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "The profile is bookmarked.",
                        "The profile is unbookmarked.",
                        "This event is typically created by processing actual call log data (that\nis, phone call records) in order to determine if a\nProfileEvent.recruiter called a ProfileEvent.profiles.\n\nThe ClientEvent.requestId is optional. CTS applies inferance logic\nto link this event to a requestId for both Search and Reccommendation\nAPI calls.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "Text message sent to the profile (regardless of if the candidate\nresponded).\nThis event is typically created by processing actual text log data (that\nis, text records) in order to determine if a ProfileEvent.recruiter\ntexted a ProfileEvent.profiles.\n\nNote that for this event type, the ClientEvent.requestId is\noptional, and CTS applies inferance logic to link this event to a\nrequestId for both Search and Reccommendation API calls.\n\nThis event requires valid recruiter and one valid ID in profiles.",
                        "Email sent to the profile (regardless of if the candidate responded).\nThis event is typically created by processing actual email log data\n(that is, email history) in order to determine if a\nProfileEvent.recruiter contacted a ProfileEvent.profiles.\n\nThe ClientEvent.requestId is optional. CTS applies inferance logic\nto link this event to a requestId for both Search and Reccommendation\nAPI calls.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "Note was entered in the ATS indicating that the recruiter tried to\ncontact the candidate (regardless of the mode of contact, for example,\nemail, phone, and so on).\n\nEven though ATS notes are syncronized to CTS, this event is required to\nbe sent separately.  It is typically created by processing ATS notes in\norder to determine if a ProfileEvent.recruiter made a note that\nthey contacted a ProfileEvent.profiles.  The logic for determining\nwhether an ATS note indicates a contact attempt is customer specific,\nalthough often there is a type of ATS note that indicates this or a\npattern of text strings (such as LVM) that indicate this type of\nbehavior in an ATS note.\n\nThe ClientEvent.requestId is optional. CTS applies inferance logic\nto link this event to a requestId for both Search and Reccommendation\nAPI calls.\n\nThis event requires a valid recruiter and one valid ID in profiles.",
                        "The recruiter makes a \"thumbs down\" decision about a given profile\nfor a given job.\nThis event requires valid request_id, recruiter, and one valid ID in\nprofiles and one valid ID in jobs.",
                        "The recruiter reverses their decision to \"thumbs down\" a given profile\nfor the given job.\nThis event requires valid request_id, recruiter, and one valid ID in\nprofiles and one valid ID in jobs.",
                        "The candidate availability detail is viewed.\nThis event is sent to indicate that the details beyond the\nProfile[available] boolean flag was rendered in the\ncustomer's UI and seen by a recruiter. The typical use case is to send\nthis event when an end user clicks on the UI\naffordance on a candidate's card in the result set\nto see the additional detail beyond the summary boolean value for\navailability.",
                        "Profile Event: The profile is added to a shortlist.",
                        "Profile Event: The profile is removed from a shortlist."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProfileQuery": {
            "description": "Filters to apply when performing the search query.",
            "id": "ProfileQuery",
            "properties": {
                "applicationDateFilters": {
                    "description": "The application date filters specify application date ranges to match on.",
                    "items": {
                        "$ref": "ApplicationDateFilter"
                    },
                    "type": "array"
                },
                "applicationJobFilters": {
                    "description": "The application job filters specify the job applied for in the application.",
                    "items": {
                        "$ref": "ApplicationJobFilter"
                    },
                    "type": "array"
                },
                "applicationOutcomeNotesFilters": {
                    "description": "The application outcome notes filters specify the notes for the outcome of\nthe job application.",
                    "items": {
                        "$ref": "ApplicationOutcomeNotesFilter"
                    },
                    "type": "array"
                },
                "availabilityFilters": {
                    "description": "The availability filter which filters based on\nProfile.availability_signals.\n\nThe availability filter helps a recruiter understand if a\nspecific candidate is likely to be actively seeking new job opportunities\nbased on an aggregated set of signals.  Specifically, the intent is NOT to\nindicate the candidate's potential qualification / interest / close ability\nfor a specific job.\n\nThere can be at most one AvailabilityFilter per\nsignal_type. If there are multiple\nAvailabilityFilter for a signal_type,\nan error is thrown.",
                    "items": {
                        "$ref": "AvailabilityFilter"
                    },
                    "type": "array"
                },
                "candidateAvailabilityFilter": {
                    "$ref": "CandidateAvailabilityFilter",
                    "description": "Deprecated. Use availability_filters instead.\n\nThe candidate availability filter which filters based on availability\nsignals.\n\nSignal 1: Number of days since most recent job application.  See\nAvailability.JobApplicationAvailabilitySignal for the details of this\nsignal.\n\nSignal 2: Number of days since last profile update. See\nAvailability.ProfileUpdateAvailabilitySignal\nfor the details of this signal.\n\nThe candidate availability filter helps a recruiter understand if a\nspecific candidate is likely to be actively seeking new job opportunities\nbased on an aggregated set of signals.  Specifically, the intent is NOT to\nindicate the candidate's potential qualification / interest / close ability\nfor a specific job."
                },
                "customAttributeFilter": {
                    "description": "This filter specifies a structured syntax to match against the\nProfile.custom_attributes that are marked as `filterable`.\n\nThe syntax for this expression is a subset of Google SQL syntax.\n\nString custom attributes: supported operators are =, != where the left of\nthe operator is a custom field key and the right of the operator is a\nstring (surrounded by quotes) value.\n\nNumeric custom attributes: Supported operators are '>', '<' or '='\noperators where the left of the operator is a custom field key and the\nright of the operator is a numeric value.\n\nSupported functions are LOWER(<field_name>) to\nperform case insensitive match and EMPTY(<field_name>) to filter on the\nexistence of a key.\n\nBoolean expressions (AND/OR/NOT) are supported up to 3 levels of\nnesting (for example \"((A AND B AND C) OR NOT D) AND E\"), and there can be\na maximum of 50 comparisons/functions in the expression. The expression\nmust be < 2000 characters in length.\n\nSample Query:\n(key1 = \"TEST\" OR LOWER(key1)=\"test\" OR NOT EMPTY(key1))",
                    "type": "string"
                },
                "educationFilters": {
                    "description": "Education filter specifies education of profiles to match on.\n\nIf an education filter isn't specified, profiles with any education are\nretrieved.\n\nIf multiple education filters are specified, profiles that match any\neducation filters are retrieved.\n\nIf EducationFilter.negated is specified, the result won't contain\nprofiles that match the educations.\n\nFor example, search for profiles with a master degree.",
                    "items": {
                        "$ref": "EducationFilter"
                    },
                    "type": "array"
                },
                "employerFilters": {
                    "description": "Employer filter specifies employers of profiles to match on.\n\nIf an employer filter isn't specified, profiles with any employers are\nretrieved.\n\nIf multiple employer filters are specified, profiles with any matching\nemployers are retrieved.\n\nIf EmployerFilter.negated is specified, the result won't contain\nprofiles that match the employers.\n\nFor example, search for profiles that have working experience at \"Google\nLLC\".",
                    "items": {
                        "$ref": "EmployerFilter"
                    },
                    "type": "array"
                },
                "hirableFilter": {
                    "description": "The hirable filter specifies the profile's hirable status to match on.",
                    "type": "boolean"
                },
                "jobTitleFilters": {
                    "description": "Job title filter specifies job titles of profiles to match on.\n\nIf a job title isn't specified, profiles with any titles are retrieved.\n\nIf multiple values are specified, profiles are retrieved with any of the\nspecified job titles.\n\nIf JobTitleFilter.negated is specified, the result won't contain\nprofiles with the job titles.\n\nFor example, search for profiles with a job title \"Product Manager\".",
                    "items": {
                        "$ref": "JobTitleFilter"
                    },
                    "type": "array"
                },
                "locationFilters": {
                    "description": "The location filter specifies geo-regions containing the profiles to\nsearch against.\n\nOne of LocationFilter.address or LocationFilter.lat_lng must be\nprovided or an error is thrown. If both LocationFilter.address and\nLocationFilter.lat_lng are provided, an error is thrown.\n\nThe following logic is used to determine which locations in\nthe profile to filter against:\n1. All of the profile's geocoded Profile.addresses where\nAddress.usage is PERSONAL and Address.current is true.\n2. If the above set of locations is empty, all of the profile's geocoded\nProfile.addresses where Address.usage is\nCONTACT_INFO_USAGE_UNSPECIFIED and Address.current is true.\n3. If the above set of locations is empty, all of the profile's geocoded\nProfile.addresses where Address.usage is PERSONAL or\nCONTACT_INFO_USAGE_UNSPECIFIED and Address.current is not set.\n\nThis means that any profiles without any Profile.addresses that match\nany of the above criteria will not be included in a search with location\nfilter. Furthermore, any Profile.addresses where Address.usage is\nWORK or SCHOOL or where Address.current is false are not considered for\nlocation filter.\n\nIf a location filter isn't specified, profiles fitting the other search\ncriteria are retrieved regardless of where they're located.\n\nIf LocationFilter.negated is specified, the result doesn't contain\nprofiles from that location.\n\nIf LocationFilter.address is provided, the\nLocationType, center\npoint (latitude and longitude), and radius are automatically detected by\nthe Google Maps Geocoding API and included as well. If\nLocationFilter.address cannot be geocoded, the filter\nfalls back to keyword search.\n\nIf the detected\nLocationType is\nLocationType.SUB_ADMINISTRATIVE_AREA,\nLocationType.ADMINISTRATIVE_AREA,\nor\nLocationType.COUNTRY,\nthe filter is performed against the detected location name (using exact\ntext matching). Otherwise, the filter is performed against the detected\ncenter point and a radius of detected location radius +\nLocationFilter.distance_in_miles.\n\nIf LocationFilter.address is provided,\nLocationFilter.distance_in_miles is the additional radius on top of the\nradius of the location geocoded from LocationFilter.address. If\nLocationFilter.lat_lng is provided,\nLocationFilter.distance_in_miles is the only radius that is used.\n\nLocationFilter.distance_in_miles is 10 by default. Note that the value\nof LocationFilter.distance_in_miles is 0 if it is unset, so the server\ndoes not differentiate LocationFilter.distance_in_miles that is\nexplicitly set to 0 and LocationFilter.distance_in_miles that is not\nset. Which means that if LocationFilter.distance_in_miles is explicitly\nset to 0, the server will use the default value of\nLocationFilter.distance_in_miles which is 10. To work around this and\neffectively set LocationFilter.distance_in_miles to 0, we recommend\nsetting LocationFilter.distance_in_miles to a very small decimal number\n(such as 0.00001).\n\nIf LocationFilter.distance_in_miles is negative, an error is thrown.",
                    "items": {
                        "$ref": "LocationFilter"
                    },
                    "type": "array"
                },
                "personNameFilters": {
                    "description": "Person name filter specifies person name of profiles to match on.\n\nIf multiple person name filters are specified, profiles that match any\nperson name filters are retrieved.\n\nFor example, search for profiles of candidates with name \"John Smith\".",
                    "items": {
                        "$ref": "PersonNameFilter"
                    },
                    "type": "array"
                },
                "query": {
                    "description": "Keywords to match any text fields of profiles.\n\nFor example, \"software engineer in Palo Alto\".",
                    "type": "string"
                },
                "skillFilters": {
                    "description": "Skill filter specifies skill of profiles to match on.\n\nIf a skill filter isn't specified, profiles with any skills are retrieved.\n\nIf multiple skill filters are specified, profiles that match any skill\nfilters are retrieved.\n\nIf SkillFilter.negated is specified, the result won't contain profiles\nthat match the skills.\n\nFor example, search for profiles that have \"Java\" and \"Python\" in skill\nlist.",
                    "items": {
                        "$ref": "SkillFilter"
                    },
                    "type": "array"
                },
                "timeFilters": {
                    "description": "Time filter specifies the create/update timestamp of the profiles to match\non.\n\nFor example, search for profiles created since \"2018-1-1\".",
                    "items": {
                        "$ref": "TimeFilter"
                    },
                    "type": "array"
                },
                "workExperienceFilter": {
                    "description": "Work experience filter specifies the total working experience of profiles\nto match on.\n\nIf a work experience filter isn't specified, profiles with any\nprofessional experience are retrieved.\n\nIf multiple work experience filters are specified, profiles that match any\nwork experience filters are retrieved.\n\nFor example, search for profiles with 10 years of work experience.",
                    "items": {
                        "$ref": "WorkExperienceFilter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProfileUpdateAvailabilitySignal": {
            "description": "Deprecated. Use AvailabilitySignal with AvailabilitySignal.type =\nCANDIDATE_UPDATE instead.\n\nCandidate availability signal: Profile Update.",
            "id": "ProfileUpdateAvailabilitySignal",
            "properties": {
                "available": {
                    "description": "Candidate's availability based on the signal.",
                    "type": "boolean"
                },
                "days": {
                    "description": "Number of days since last profile update.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Prompt": {
            "description": "Output Only.\n\nResource that represents prompt instance",
            "id": "Prompt",
            "properties": {
                "allowedTextRenderActions": {
                    "description": "List of allowed render actions to be applied for particular prompt text. If\nnot set, [KEEP] will be used by default.",
                    "enumDescriptions": [
                        "Default value.",
                        "Generated prompt should be displayed as is.",
                        "Generated prompt should be concatenated with next prompt.",
                        "Generated prompt should not be displayed."
                    ],
                    "items": {
                        "enum": [
                            "TEXT_RENDER_ACTION_UNSPECIFIED",
                            "KEEP",
                            "CONCAT",
                            "SKIP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "conversationName": {
                    "description": "Name of conversation linked to this prompt",
                    "type": "string"
                },
                "endTime": {
                    "description": "The time at which the candidate's first response to the prompt was\nreceived.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "knockoutCondition": {
                    "description": "A condition which, if met, disqualifies the candidate from the interview.",
                    "type": "string"
                },
                "knockoutTriggered": {
                    "description": "Whether interview knockout is triggered for this prompt or not.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the prompt.",
                    "type": "string"
                },
                "parameters": {
                    "description": "The selected parameter values for this prompt",
                    "items": {
                        "$ref": "PromptTemplateTextParameter"
                    },
                    "type": "array"
                },
                "promptResponses": {
                    "description": "The structured response to a prompt.",
                    "items": {
                        "$ref": "PromptResponse"
                    },
                    "type": "array"
                },
                "promptTemplateName": {
                    "description": "Name of prompt template that this prompt was instantiated from.",
                    "type": "string"
                },
                "questionType": {
                    "description": "Type of the question, whether it's a free-form question, or multiple choice\nquestion, etc. It's up to the front-end to determine how to render the\nbuttons based on this type. The content of each button is stored in the\nsuggested_replies field.",
                    "enum": [
                        "QUESTION_TYPE_UNSPECIFIED",
                        "FREE_FORM",
                        "BOOLEAN",
                        "MULTI_CHOICE",
                        "RATING"
                    ],
                    "enumDescriptions": [
                        "Default type.",
                        "Free-form question, any response is allowed.",
                        "Expect user to respond Yes or No.\nBy default two SuggestedReply will be provided, one with \"Yes\", one\nwith \"No\", unless other SuggestedReply is specified in the\nPromptTemplate.",
                        "Expect user to choose from a limited set of answers.",
                        "Expect user to choose from a range of ratings.\nBy default five SuggestedReply with text \"1\", \"2\", \"3\", \"4\", \"5\"\nwill be provided unless other SuggestedReply is specified in the\nPromptTemplate."
                    ],
                    "type": "string"
                },
                "responseTexts": {
                    "description": "The verbatim candidate response to the prompt. Multiple sent responses to a\nsingle prompt should be stored as a list.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "startTime": {
                    "description": "The time at which this prompt was asked. NULL if the prompt has not yet\nbeen asked.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "suggestedReplies": {
                    "description": "A limited list of choices for the user to choose from. Should be used to\nrender choice buttons in the front-end.",
                    "items": {
                        "$ref": "SuggestedReply"
                    },
                    "type": "array"
                },
                "text": {
                    "description": "The verbatim prompt that was asked to the candidate.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PromptResponse": {
            "description": "The structured response to a prompt.",
            "id": "PromptResponse",
            "properties": {
                "responseAttribute": {
                    "description": "Required. The schema field which this prompt was seeking to populate.",
                    "type": "string"
                },
                "responseValues": {
                    "description": "Optional. The normaled response value(s) extracted from the response_text which are\nsaved in the response_attribute.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PromptTemplate": {
            "description": "Resource that represents prompt template.\nThis is output only.\nNext Id: 47",
            "id": "PromptTemplate",
            "properties": {
                "includeConditions": {
                    "description": "Optional. The universal conditions which must always be met in order to have this\nprompt template included in a conversation. These conditions are only\nchecked for prompt templates of where parent_prompt_id != NULL",
                    "items": {
                        "$ref": "PromptTemplateCondition"
                    },
                    "type": "array"
                },
                "knockoutDescription": {
                    "description": "Optional. Describes how to write a knockout condition for any job prompt derived from\nthis prompt template.",
                    "type": "string"
                },
                "name": {
                    "description": "Required. Unique name of the PromptTemplate. Should be meaningful string which\nindicate the purpose of the PromptTemplate. For example,\n\"profile_reason_for_staying\" is a good name for a PromptTemplate to ask a\ncandidate what's their reason to stay at current position.",
                    "type": "string"
                },
                "parentPromptTemplateName": {
                    "description": "Optional. The prompt template that should precede this prompt template, for instance\nwhere this prompt template is a follow up question, or, for example, if\nthis of type QUESTION_CLARIFICATION, the QUESTION who's failure to parse\nshould trigger this.",
                    "type": "string"
                },
                "priority": {
                    "description": "Required. The priority of this prompt template for determining conversation\nsequencing.",
                    "format": "double",
                    "type": "number"
                },
                "questionType": {
                    "description": "Optional. Type of the question, whether it's a free-form question, or multiple choice\nquestion, etc.",
                    "enum": [
                        "QUESTION_TYPE_UNSPECIFIED",
                        "FREE_FORM",
                        "BOOLEAN",
                        "MULTI_CHOICE",
                        "RATING"
                    ],
                    "enumDescriptions": [
                        "Default type.",
                        "Free-form question, any response is allowed.",
                        "Expect user to respond Yes or No.\nBy default two SuggestedReply will be provided, one with \"Yes\", one\nwith \"No\", unless other SuggestedReply is specified in the\nPromptTemplate.",
                        "Expect user to choose from a limited set of answers.",
                        "Expect user to choose from a range of ratings.\nBy default five SuggestedReply with text \"1\", \"2\", \"3\", \"4\", \"5\"\nwill be provided unless other SuggestedReply is specified in the\nPromptTemplate."
                    ],
                    "type": "string"
                },
                "suggestedReplies": {
                    "description": "Optional\n\nIf there is a limited list of choices to this prompt template.",
                    "items": {
                        "$ref": "SuggestedReply"
                    },
                    "type": "array"
                },
                "texts": {
                    "description": "Required. The text of the prompt template for the specific surface or other\nconditions.",
                    "items": {
                        "$ref": "PromptTemplateText"
                    },
                    "type": "array"
                },
                "types": {
                    "description": "Required. The type(s) of prompt template this represents. For prompts with multiple\ntypes, all attributes of this prompt apply.",
                    "enumDescriptions": [
                        "Default value.",
                        "A prompt representing the way the virtual recruiter introduces itself\nduring a conversation.",
                        "A question asked in the context of authenticating the candidate.",
                        "A general question to be asked to the candidate, ususally a profile\nbuilding question.",
                        "A question confirming data which was previously gathered to\nensure it's still up to date. A response of \"yes\" to this question should\nkeep the data in the field specified unchanged. A response of No should\nclear the attribute (and replace it with what the person provides, if\navailable).",
                        "Deprecated, use \"QUESTION_GENERAL\" instead.\n\nA question asked in service of fleshing out or gathering a candidate's\nprofile or resume.",
                        "A question asked in the context of gather the candidate's work\npreferences and availability.",
                        "A question asked in context of deciding whether a candidate meets the\nrequirements of a job.",
                        "A prompt representing the way the virtual recruiter terminates a\nconversation when it has no additional steps or links for the candidate.",
                        "The message to be shown if a candidate requests the virtual recruiter\nrefrain from sending any additional prompts via the current channel (for\nexample, \"Opt's out\" of further contact)",
                        "A prompt representing the way the virtual recruiter terminates a\nconversation by asking if a candidate is interested in one or more\nadditional jobs",
                        "A prompt representing the way the virtual recruiter terminates a\nconversation by sending a candidate to a specific URL that will show them\nother jobs they should apply for",
                        "A prompt representing the way the virtual recruiter terminates a\nconversation and informs a candidate that someone may be in touch soon.",
                        "A prompt representing the way the virtual recruiter terminates a\nconversation by presenting them with options for scheduling an interview",
                        "Deprecated, use the specific \"COMPLETION_*\" instead\n\nA prompt representing the way the virtual recruiter terminates a\nconversation when it has no place to send the candidate.",
                        "This represents how the virtual recruiter should follow-up when it can't\nunderstand a candidate's response to a question and wants to rephrase the\nquestion. An event of this type should always have a parent_prompt of\ntype \"QUESTION\" or \"QUESTION_CLARIFICATION\".",
                        "This represents how the virtual recruiter should follow-up when it can't\nunderstand a candidate's response to a question and will move on to the\nnext question in the conversation (i.e. it gives up). If the prompt has a\nparent_prompt of type \"QUESTION\" or \"QUESTION_CLARIFICATION\", this prompt\nwill follow only failures for that question or clarification. If this has\nno parent_prompt it will be the general way the virtual recruiter reacts\nwhen it can't understand the candidate response.",
                        "Deprecated, use \"COMPLETION_FINAL\" instead.\n\nThis represents the last prompt in the dialog like saying goodbye.",
                        "The follow up prompt to show when the bot understands a response and is\nboth confirming and segueing into the next question. For example, \"Not a\nproblem.\", \"Great, thank you\". Etc.",
                        "The prompt to be shown when the virtual recruiter is unsure it has\nunderstood the candidate's response correctly to confirm the data.",
                        "The message the virtual recruiter should send when a candidate has not\nresponded to a message in some time.",
                        "The message the virtual recruiter should send when it is connecting in a\nlive person to take over the conversation on behalf of the recruiter.",
                        "The prompt to be shown if you want the candidate to email their resume to\na specific email address.",
                        "This represents how the virtual recruiter should follow-up when it\nidentifies that the candidate is upset and expressing negative sentiment.",
                        "This represents how the virtual recruiter should follow-up when it\nidentifies that the candidate is abusing the bot.",
                        "This represents how the virtual recruiter should follow-up when it\nidentifies that the candidate is busy and cannot converse.",
                        "This represents how the virtual recruiter should follow-up when it\nidentifies that the candidate wants to stop the conversation.",
                        "The prompt to be shown when candidate sends hello greetings.",
                        "The prompt to be shown when candidate asks general greeting questions.\nFor example: whatsup, how are you?",
                        "The prompt to be shown when candidate asks about the company information.",
                        "The prompt to be shown when candidate asks about the chatbot's general\ninformation. For example: are you a bot?",
                        "The prompt to be shown when candidate asks about the origin of bot.\nFor example: Who is your boss?",
                        "The prompt to be shown when candidate asks about bot's place.\nFor example: Where are you from?",
                        "The prompt to be shown when candidate asks about status of application.\nFor example: whats is my application status?",
                        "The prompt to be shown when candidate wants to talk to a human.\nFor example: can I talk to a human?",
                        "A prompt representing that the candidate has passed a job screen and is\nqualified to schedule an interview. The interview determination channel\nis started.",
                        "A prompt representing that the candidate has selected the interview\nchannel. The virtual recruiter will help find an interview time.",
                        "The prompt to be respond to why intent shown for general questions.\nFor example: After welcome, 'why should I talk to you?'",
                        "The prompt to be respond to why intent shown for screening question.\nFor example: After job screening question, 'why should I answer this?'",
                        "The prompt to ask candidate's rating about the whole conversation at the\nend.",
                        "The prompt to be shown when candidate wants to know about similar\nopportunities. For example: tell me about similar jobs.",
                        "The prompt to be shown when candidate wants to update profile\ninformation. For example: I want to update my address.",
                        "The prompt to be shown when candidate does not want to share the\ninformation. For example: I don't want to share.",
                        "The prompt to be shown when candidate asks about the recruiter\ninformation. For example: who is the recruiter for this job?",
                        "The prompt to be shown when candidate asks more information about the\njob. For example: tell me more about this job",
                        "The prompt to be shown when candidate wants to navigate to a different\nquestion For example: show me previous question",
                        "The prompt to be shown when candidate wants know about how the shared\ninformation is used. For example: who can access my data?"
                    ],
                    "items": {
                        "enum": [
                            "PROMPT_TEMPLATE_TYPE_UNSPECIFIED",
                            "WELCOME",
                            "QUESTION_AUTHENTICATION",
                            "QUESTION_GENERAL",
                            "QUESTION_CONFIRMATION",
                            "QUESTION_PROFILE_BUILDING",
                            "QUESTION_PREFERENCES",
                            "QUESTION_JOB_SCREEN",
                            "COMPLETION_FINAL",
                            "COMPLETION_CANDIDATE_TERMINATE",
                            "COMPLETION_NEXT_JOB",
                            "COMPLETION_JOB_LINKS",
                            "COMPLETION_FOLLOW_UP",
                            "COMPLETION_INTERVIEW_SCHEDULE",
                            "COMPLETION",
                            "QUESTION_CLARIFICATION",
                            "QUESTION_FALLBACK",
                            "LAST",
                            "QUESTION_SUCCESS",
                            "CONFIRM_RESPONSE",
                            "RE_ENGAGE",
                            "CONNECTING_RECRUITER",
                            "RESUME_EMAIL",
                            "NEGATIVE_SENTIMENT",
                            "ABUSE_RESPONSE",
                            "BUSY_RESPONSE",
                            "STOP_RESPONSE",
                            "GREETINGS_HELLO_RESPONSE",
                            "GREETINGS_QUESTION_RESPONSE",
                            "ABOUT_COMPANY_RESPONSE",
                            "ABOUT_BOT_RESPONSE",
                            "BOT_ORIGIN_RESPONSE",
                            "BOT_PLACE_RESPONSE",
                            "APPLICATION_STATUS_RESPONSE",
                            "CONTACT_HUMAN_RESPONSE",
                            "SCHEDULE_INTERVIEW_TYPE",
                            "SCHEDULE_INTERVIEW_TIME",
                            "GENERAL_WHY_RESPONSE",
                            "SCREENING_WHY_RESPONSE",
                            "CONVERSATION_RATING",
                            "SIMILAR_JOBS_RESPONSE",
                            "PROFILE_UPDATE_RESPONSE",
                            "DENY_SHARE_RESPONSE",
                            "RECRUITER_INFO_RESPONSE",
                            "JOB_INFO_RESPONSE",
                            "NAVIGATION_RESPONSE",
                            "DATA_SECURITY_RESPONSE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PromptTemplateCondition": {
            "description": "Universal prompt template condition.",
            "id": "PromptTemplateCondition",
            "properties": {
                "arrayOperator": {
                    "description": "Optional. Defines how to operate on the arrays if the specified json_path points to a\nrepeated field and the value is an array. Should be one of \"APPEND\",\n\"PREPEND\", \"REPLACE\".",
                    "type": "string"
                },
                "jsonPath": {
                    "description": "Required. The data schema field corresponding to where this prompt should be looking.\nThis may include a \"where\" condition, for example, \"use\nprofile.skills.level where skills.name=\"$param\"",
                    "type": "string"
                },
                "value": {
                    "description": "Required. The rule expression representing the value of this attribute that triggers\nthe \"follow-up\" condition, for example, \"true\", \"!=NULL\", and so on.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PromptTemplateText": {
            "description": "The text of the prompt template for specific surface(s).",
            "id": "PromptTemplateText",
            "properties": {
                "allowedContactType": {
                    "description": "Required. The surface(s) on which this prompt text can be used, which may be\nimportant for character limits or other space constraints.",
                    "enum": [
                        "CONTACT_TYPE_UNSPECIFIED",
                        "PHONE_CALL",
                        "SMS",
                        "WEB",
                        "EMAIL",
                        "OTHER_CONTACT_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Phone call.",
                        "SMS or Text Messaging.",
                        "Web-based conversations.",
                        "Email outreach.",
                        "Another contact type not specified here."
                    ],
                    "type": "string"
                },
                "conditions": {
                    "description": "Optional. If there are other conditions that predicate this version of the text. For\n example, \"use this version if we already have a profile name\".",
                    "items": {
                        "$ref": "PromptTemplateCondition"
                    },
                    "type": "array"
                },
                "conversationTypes": {
                    "description": "Optional. Conversation types that this prompt template is applied for. Default to\nbe applied for all conversation types.",
                    "enumDescriptions": [
                        "",
                        "The user started this conversation.",
                        "Reaching out to a candidate to gather information.",
                        "Following up to a previous outreach that hasn't been completed."
                    ],
                    "items": {
                        "enum": [
                            "CONVERSATION_TYPE_UNSPECIFIED",
                            "USER_INITIATED",
                            "OUTREACH",
                            "FOLLOW_UP"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "parameters": {
                    "description": "Optional. If parameters exist, what values should be suggested.",
                    "items": {
                        "$ref": "PromptTemplateTextParameter"
                    },
                    "type": "array"
                },
                "renderedText": {
                    "description": "The rendered text that has parameter fields replaced. For example,\n\"How many years experience do you have working with Java?\", where \"$param1\"\nis replaced by \"Java\".",
                    "type": "string"
                },
                "text": {
                    "description": "Required. The text of a prompt. Configurable parameters should be provided in the\nformat $param1, $param2, etc. For example, \"How many years experience do\nyou have working with $param1?\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PromptTemplateTextParameter": {
            "description": "Parameter for prompt template text.",
            "id": "PromptTemplateTextParameter",
            "properties": {
                "name": {
                    "description": "Required. The parameter name these values are for, for example, \"param1\".",
                    "type": "string"
                },
                "values": {
                    "description": "Optional. Parameter values or allowed parameter values, for example, \"java\",\n\"javascript\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "valuesSource": {
                    "description": "Optional. Parameter values as determined by the contents an existing field on the\n job or profile which is part of the conversation this prompt is used in,\n for example, \"job.skills.skillName\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Publication": {
            "description": "Resource that represents a publication resource of a candidate.",
            "id": "Publication",
            "properties": {
                "authors": {
                    "description": "A list of author names.\n\nNumber of characters allowed is 100.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "The description of the publication.\n\nNumber of characters allowed is 100,000.",
                    "type": "string"
                },
                "isbn": {
                    "description": "ISBN number.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "journal": {
                    "description": "The journal name of the publication.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "publicationDate": {
                    "$ref": "Date",
                    "description": "The publication date."
                },
                "publicationType": {
                    "description": "The publication type.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "publisher": {
                    "description": "The publisher of the journal.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "title": {
                    "description": "The title of the publication.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "volume": {
                    "description": "Volume number.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Rating": {
            "description": "The details of the score received for an assessment or interview.",
            "id": "Rating",
            "properties": {
                "interval": {
                    "description": "The steps within the score (for example, interval = 1 max = 5\nmin = 1 indicates that the score can be 1, 2, 3, 4, or 5)",
                    "format": "double",
                    "type": "number"
                },
                "max": {
                    "description": "The maximum value for the score.",
                    "format": "double",
                    "type": "number"
                },
                "min": {
                    "description": "The minimum value for the score.",
                    "format": "double",
                    "type": "number"
                },
                "overall": {
                    "description": "Overall score.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RecommendProfilesRequest": {
            "description": "Recommend profiles for job request.  This call returns the top 250 candidates\nfor the given\njob and\nprofile_query.",
            "id": "RecommendProfilesRequest",
            "properties": {
                "fieldMask": {
                    "description": "A field mask to specify the profile fields to be included in the\nSummarizedProfile in the results.  The field\nProfile.name is always included.\nYou can specify one or more of the following fields:\n\n* external_id\n* external_system\n* source\n* source_types\n* uri\n* source_note\n* group_id\n* field_update_metadata\n* is_hirable\n* create_time\n* update_time\n* candidate_update_time\n* resume_update_time\n* resume\n* primary_responsibilities\n* citizenships\n* work_authorizations\n* employee_types\n* language_code\n* qualification_summary\n* person_names\n* addresses\n* email_addresses\n* phone_numbers\n* personal_uris\n* additional_contact_info\n* allowed_contact_types\n* preferred_contact_types\n* contact_availability\n* employment_records\n* education_records\n* skills\n* language_fluencies\n* activities\n* publications\n* patents\n* certifications\n* applications\n* assignments\n* recruiting_notes\n* work_preference\n* industry_experiences\n* work_environment_experiences\n* work_availability\n* security_clearances\n* custom_attributes\n* tags\n* currently_placed\n* applied\n* previously_placed\n* summarized_employment_history\n\nYou may set the field mask by using the format: { fieldMask: { paths:[\n'email_addresses','addresses', 'person_names' ] } }",
                    "format": "google-fieldmask",
                    "type": "string"
                },
                "histogramQueries": {
                    "description": "A list of expressions specifies histogram requests against matching\nprofiles for RecommendProfilesRequest.",
                    "items": {
                        "$ref": "HistogramQuery"
                    },
                    "type": "array"
                },
                "offset": {
                    "description": "An integer that specifies the current offset (that is, starting result) in\nsearch results.\n\nIf offset is set, page_token must be unset.  Otherwise\nINVALID_ARGUMENT error will be returned.\n\nThe maximum allowed value is 250. Otherwise an error is thrown.\n\nFor example, 0 means to search from the first profile, and 10 means to\nsearch from the 11th profile. This can be used for pagination, for example\npageSize = 10 and offset = 10 means to search from the second page.",
                    "format": "int32",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "The maximum number of profiles to be returned per page of results.\n\nThe maximum allowed page size is 50.  Default is 10.",
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "description": "The starting point of a query result.\n\nIf page_token is set, then result_set_id must also be set, and\noffset must be unset.  Otherwise INVALID_ARGUMENT error will be\nreturned.",
                    "type": "string"
                },
                "profileQuery": {
                    "$ref": "ProfileQuery",
                    "description": "Profile query to filter profiles for recommendation.  Currently, only\nlocation_filters,\ncustom_attribute_filter, and\ncandidate_availability_filter\nare supported.\n\nCurrently, custom sort orders are not supported and results are returned in\ndescending order of relevance."
                },
                "recruiter": {
                    "description": "Required. The resource name of the recruiter.\n\nThe format is\n\"projects/{project_id}}/tenants/{tenant_id}/recruiters/{recruiter_id}\". For\nexample, \"projects/foo/tenants/bar/recruiters/baz\".",
                    "type": "string"
                },
                "requestMetadata": {
                    "$ref": "RequestMetadata",
                    "description": "The meta information collected about the user of the service. This is used\nto enable certain features and to improve the service quality. These\nvalues are provided by users, and must be precise and consistent."
                },
                "resultSetId": {
                    "description": "An id that uniquely identifies the result set of a\nRecommendProfiles call.\nThe id should be retrieved from the\nRecommendProfilesResponse message returned from a previous\ninvocation of RecommendProfiles.\n\n The use case for this feature is to ensure that the underlying results and\n the order of those results do not change during a usage session (an\n example usage session: an end user requesting recommendations, reviewing\n those recommendations by paging back & forth between the pages of results,\n and actioning each of those candidates).\n\n   We suggest that you provide a UX affordance to enable the end user to\n   refresh the results (in other words, compute a new result set).\n\n   A result_set_id is valid for up to 30 minutes, meaning that the\n   results set returned will be viewable for that time period.  Each time a\n   result_set_id is accessed, it is extended for 30 minutes. This\n   action adds a new 30 minute time block to the end of the existing time\n   block regardless of how much time as passed. For example, if a\n   result_set_id is created at minute 1, then accessed at minute 29,\n   the cursor will be available until minute 59, rather than expiring at\n   minute 30 had it not been accessed.  The maximum time that a\n   result_set_id can be valid is 12 hours from the initial creation.  A\n   NOT_FOUND error is thrown if the result_set_id is expired or\n   invalid.\n\n   The result_set_id only caches the [insert field name of profile ID].\n   That is, if a Profile in the result_set_id is updated, the page of\n   results containing that Profile will reflect any changes via the CUD\n   APIs when it is returned (although changes will NOT impact which results\n   are returned or the order of those results).  For example, if a\n   Profile's first_name was changed from \"ammy\" to \"amy\", the \"amy\" will be\n   returned in any subsequent calls.\n\n Without the use of this feature, the end user could experience a scenario\n in which the set of candidates displayed or the order of candidates\n displayed could change as they page back and forth. The jobs, profiles,\n applications, assignments, and other objects stored in CTS could be\n updated via the CUD APIs (for example updating candidate profiles,\n assignments, applications, and so on) and those changes would cause the\n set of candidates recommended for a given job to change.\n\n   Consider an example:\nAt T = 0, user requests recommendations for Job A with a page size of 5\n\nWITHOUT USE OF THIS FEATURE\n\nAt T = 0, user views the first page of results which shows\n\n* Candidate 1\n* 2\n* 3\n* 4\n* Candidate 5\n\nAt T = 1, user requests the second page of results\n\n* Candidate 6\n* 7\n* 8\n* 9\n* Candidate 10\n\nAt T = 2, profile for candidate #10 is updated via the CUD API (which\ncauses candidate #10 to become less relevant for Job A) At T = 3, profile\nfor candidate #2 is deleted via the CUD API\n\nAt T = 4, user requests the first page of results (again)\n\n* Candidate 1\n* 3\n* 4\n* 5\n* Candidate 6 <--- NOTE: Candidate 6 moves from page #2 to page #1\n\nAt T = 5, user requests the second page of results (again)\n\n* Candidate 7 <--- NOTE: Candidate 7 is now the first result on page #2\n* 8\n* 9\n* 11\n* Candidate 12 <--- NOTE: Candidate 10 is no longer on page #2 because they\nare now less relevant than candidate #12\n\nWITH USE OF THIS FEATURE\n\nAt T = 0, user views the first page of results which shows\n\n* Candidate 1\n* 2\n* 3\n* 4\n* Candidate 5\n\nAt T = 1, user requests the second page of results\n\n* Candidate 6\n* 7\n* 8\n* 9\n* Candidate 10\n\nAt T = 2, profile for candidate #10 is updated via the CUD API (which\ncauses candidate #10 to become less relevant for Job A) At T = 3, profile\nfor candidate #2 is deleted via the CUD API\n\nAt T = 4, user requests the first page of results (again)\n\n* Candidate 1\n* 3\n* 4\n* Candidate 5\n\nNote that the page shows only 4 results instead of 5, because candidate\n# 2 was deleted at T=2.\n\nAt T = 5, user requests the second page of results (again)\n\n* Candidate 6\n* 7\n* 8\n* 9\n* Candidate 10 <--- NOTE: Candidate 10 is still displayed in the original\nposition even though they are less relevant (although, the information\nreturned about Candidate 10 reflects all updates made at T = 2).\n\nAt T = 6, user presses the UI affordance to 'refresh' the results for this\nquery (which results in the same query being issued to the API with a blank\nresult_set_id)\n\nAt T = 7, user requests the first page of results (which reflect all\nchanges)\n\n* Candidate 1\n* 2\n* 3\n* 4\n* Candidate 5\n\nAt T = 8, user requests the second page of results (which reflect all\nchanges)\n\n* Candidate 7\n* 8\n* 9\n* 11\n* Candidate 12\n\nIf this field is not set, a new result set is computed based on the\nresource (for example job) and the profile_query.  A new\nresult_set_id is returned as a handle to access this result set.\n\nIf this field is set, the service will ignore the resource and\nprofile_query values, and simply retrieve a page of results from the\ncorresponding result set.  In this case, one and only one of page_token\nor offset must be set.\n\nA typical use case is to invoke RecommendProfilesRequest without this\nfield, then use the resulting result_set_id in\nRecommendProfilesResponse to page through the results.\n\nBecause candidates may be deleted after a result set is created, certain\npaging requests may receive a response with less number of results than\nrequested.  This is to guarantee that the same candidate always appear\non the same page even if some candidates are deleted.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RecommendProfilesResponse": {
            "description": "Recommend profiles for job response.",
            "id": "RecommendProfilesResponse",
            "properties": {
                "histogramQueryResults": {
                    "description": "The histogram results that match with specified\nRecommendProfilesRequest.histogram_queries.",
                    "items": {
                        "$ref": "HistogramQueryResult"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results.",
                    "type": "string"
                },
                "relevanceBucketCounts": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": "The number of profiles on this page that belong to each relevance bucket.\nThe key is the integer value of the corresponding relevance_bucket. For\nexample, the value associated with key 1 is the total number of profiles on\nthis page that have a relevance_bucket value of 1.",
                    "type": "object"
                },
                "relevanceBucketTotalCounts": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": "The number of profiles in the total result set that belong to each\nrelevance bucket. The key is the integer value of the corresponding\nrelevance_bucket. For example, the value associated with key 1 is the total\nnumber of profiles in the result set that have a relevance_bucket value\nof 1.",
                    "type": "object"
                },
                "relevanceBuckets": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": "The relevance bucket for each of the profiles returned on this page. The\nkey is the `name` of the Profile, and the value is the relevance bucket,\nfrom 1 to 3, with smaller numbers indicating greater relevance. For\nexample, results with a relevance_bucket of 1 are more relevant than\nresults with a relevance_bucket of 2, and results with a relevance_bucket\nof 2 are more relevant than results with a relevance_bucket of 3.",
                    "type": "object"
                },
                "resultSetId": {
                    "description": "An id that uniquely identifies the result set of a\nRecommendProfiles call.\nClients are expected to include this\nid in all subsequent paging requests.",
                    "type": "string"
                },
                "summarizedProfiles": {
                    "description": "The profiles recommended according to the criteria in the request.",
                    "items": {
                        "$ref": "SummarizedProfile"
                    },
                    "type": "array"
                },
                "totalSize": {
                    "description": "The total number of profiles in the result set.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Recruiter": {
            "description": "A resource that represents a recruiter.",
            "id": "Recruiter",
            "properties": {
                "customAttributes": {
                    "additionalProperties": {
                        "$ref": "CustomAttribute"
                    },
                    "description": "Optional. A map of fields to hold both filterable and non-filterable custom profile\nattributes that aren't covered by the provided structured fields. See\nCustomAttribute for more details.\n\nAt most 100 filterable and at most 100 unfilterable keys are supported. If\nlimit is exceeded, an error is thrown.\n\nNumeric custom attributes: each key can only map to one numeric value,\notherwise an error is thrown.\n\nString custom attributes: each key can map up to 50 string values. For\nfilterable string value, each value has a byte size of no more than 256B.\nFor unfilterable string values, the maximum byte size of a single key is\n64B. An error is thrown for any request exceeding the limit.\nThe maximum total byte size is 10KB.\n\nCurrently filterable numeric custom attributes are not supported, and\nthey automatically set to unfilterable.",
                    "type": "object"
                },
                "externalId": {
                    "description": "Required. Client side recruiter identifier, used to uniquely identify the\nrecruiter.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "externalOfficeId": {
                    "description": "Optional. Unique identifier of the office provided by the client.",
                    "type": "string"
                },
                "name": {
                    "description": "Required during recruiter update.\n\nResource name assigned to a recruiter by the API.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/recruiters/{recruiter_id}\",\nfor example, \"projects/api-test-project/tenants/foo/recruiters/bar\".",
                    "type": "string"
                },
                "profileTags": {
                    "description": "Output only. The profile tags this recruiter manages.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recruiterClassifications": {
                    "description": "Optional. The internal classifications for this recruiter, typically including\noperating company, region, division and so on.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "recruiterType": {
                    "description": "Optional. Type of this recruiter.",
                    "enum": [
                        "RECRUITER_TYPE_UNSPECIFIED",
                        "RECRUITER",
                        "SOURCER",
                        "HIRING_MANAGER",
                        "TEST_USER",
                        "OTHER_RECRUITER_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Recruiter",
                        "Sourcer",
                        "Hiring manager",
                        "Test user",
                        "The recruiter does not fit any of the other listed types."
                    ],
                    "type": "string"
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "Optional. Date that the recruiter started working."
                }
            },
            "type": "object"
        },
        "RecruitingNote": {
            "description": "RecruitingNote represents a note/comment regarding the recruiting for a\ncandidate. For example, \"This candidate is a potential match for a frontend\nengineer at SF\".",
            "id": "RecruitingNote",
            "properties": {
                "candidateContactState": {
                    "description": "The contact state of the candidate in the recruiting system.",
                    "enum": [
                        "CANDIDATE_CONTACT_STATE_UNSPECIFIED",
                        "NOT_CONTACTED",
                        "CONTACTED",
                        "AUTOMATED_CONTACTED",
                        "OTHER_CANDIDATE_CONTACT_STATE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Attempt to contact the candidate was not successful.",
                        "Attempt to contact the candidate was successful.",
                        "Candidate was contacted from an automated system.",
                        "Other contact state."
                    ],
                    "type": "string"
                },
                "createDate": {
                    "$ref": "Date",
                    "description": "Deprecated. Use create_time.\n\nThe create date of the note."
                },
                "createTime": {
                    "description": "The create time of the note.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "note": {
                    "description": "The content of note.\n\nNumber of characters allowed is 4,000.",
                    "type": "string"
                },
                "recruiter": {
                    "description": "The resource name of the person who wrote the notes, such as\n\"projects/foo/tenants/bar/recruiters/baz\".",
                    "type": "string"
                },
                "type": {
                    "description": "The note type.\n\nNumber of characters allowed is 100.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Reference": {
            "description": "Details of a reference check.",
            "id": "Reference",
            "properties": {
                "checkTime": {
                    "description": "Required. Customer provided timestamp of when the reference check was done took\nplace.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "notes": {
                    "description": "Notes captured by the recruiter while checking the reference.",
                    "type": "string"
                },
                "outcome": {
                    "description": "Required. The overall outcome resulting from this reference (passed, failed,\nnuetral / inconclusive).",
                    "enum": [
                        "OUTCOME_UNSPECIFIED",
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE",
                        "OUTCOME_NOT_AVAILABLE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A positive outcome / passing indicator (for example, candidate was\nrecommended for hiring or to be moved forward in the hiring process,\ncandidate passed a test).",
                        "A neutral outcome / no clear indicator (for example, no strong\nreccommendation either to move forward / not move forward, neutral score).",
                        "A negative outcome / failing indicator (for example, candidate was\nrecommended to NOT move forward in the hiring process, failed a test).",
                        "The assessment outcome is not available or otherwise unknown (for example,\ncandidate did not complete assessment)."
                    ],
                    "type": "string"
                },
                "referencePersonId": {
                    "description": "Unique identifier of the person who has provided the reference data.",
                    "type": "string"
                },
                "relationship": {
                    "description": "Required. What is the relationship of the candidate to the reference?",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RemoveProfileTagsRequest": {
            "description": "Remove tags request.",
            "id": "RemoveProfileTagsRequest",
            "properties": {
                "tags": {
                    "description": "Required. The tags from which this profile is removed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RemoveRecruiterProfileTagsRequest": {
            "description": "Remove profile tags request.",
            "id": "RemoveRecruiterProfileTagsRequest",
            "properties": {
                "profileTags": {
                    "description": "Required. The profile tags removed from the recruiter's list of profile tags.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportEmailContactRequest": {
            "description": "Report email contact request.",
            "id": "ReportEmailContactRequest",
            "properties": {
                "job": {
                    "description": "The resource name of the job to which this request is related.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}\",\nfor example, \"projects/foo/tenants/bar/jobs/baz\".",
                    "type": "string"
                },
                "notificationId": {
                    "description": "The outreach or followup notification ID, sent by Google in the Pub/Sub\nmessage, to\nwhich this request is related.",
                    "type": "string"
                },
                "profile": {
                    "description": "Required. The resource name of the candidate to be contacted.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}\",\nfor example, \"projects/foo/tenants/bar/profiles/baz\".",
                    "type": "string"
                },
                "recruiter": {
                    "description": "The resource name of the recruiter, if there exists, on whose behalf to\nsend the email.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/recruiter/{recruiter_id}\", for\nexample, \"projects/foo/tenants/bar/recruiter/baz\".",
                    "type": "string"
                },
                "sendTime": {
                    "description": "Required. The time when the email is sent out.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RequestMetadata": {
            "description": "Meta information related to the job searcher or entity\nconducting the job search. This information is used to improve the\nperformance of the service.",
            "id": "RequestMetadata",
            "properties": {
                "allowMissingIds": {
                    "description": "Only set when any of domain, session_id and user_id isn't\navailable for some reason. It is highly recommended not to set this field\nand provide accurate domain, session_id and user_id for the\nbest service experience.",
                    "type": "boolean"
                },
                "debugOptions": {
                    "$ref": "DebugOptions",
                    "description": "Enables debugging mode and controls various debug parameters in the search\nprocess. Internal only."
                },
                "delegatedUserInfo": {
                    "$ref": "DelegatedUserInfo",
                    "description": "Delegated user information only used for internal purpose."
                },
                "deviceInfo": {
                    "$ref": "DeviceInfo",
                    "description": "The type of device used by the job seeker at the time of the call to the\nservice."
                },
                "domain": {
                    "description": "Required if allow_missing_ids is unset or `false`.\n\nThe client-defined scope or source of the service call, which typically\nis the domain on\nwhich the service has been implemented and is currently being run.\n\nFor example, if the service is being run by client <em>Foo, Inc.</em>, on\njob board www.foo.com and career site www.bar.com, then this field is\nset to \"foo.com\" for use on the job board, and \"bar.com\" for use on the\ncareer site.\n\nNote that any improvements to the model for a particular tenant site rely\non this field being set correctly to a unique domain.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "sessionId": {
                    "description": "Required if allow_missing_ids is unset or `false`.\n\nA unique session identification string. A session is defined as the\nduration of an end user's interaction with the service over a certain\nperiod.\nObfuscate this field for privacy concerns before\nproviding it to the service.\n\nNote that any improvements to the model for a particular tenant site rely\non this field being set correctly to a unique session ID.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "userId": {
                    "description": "Required if allow_missing_ids is unset or `false`.\n\nA unique user identification string, as determined by the client.\nTo have the strongest positive impact on search quality\nmake sure the client-level is unique.\nObfuscate this field for privacy concerns before\nproviding it to the service.\n\nNote that any improvements to the model for a particular tenant site rely\non this field being set correctly to a unique user ID.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResponseMetadata": {
            "description": "Additional information returned to client, such as debugging information.",
            "id": "ResponseMetadata",
            "properties": {
                "debugInfo": {
                    "$ref": "DebugInfo"
                },
                "requestId": {
                    "description": "A unique id associated with this call.\nThis id is logged for tracking purposes.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Resume": {
            "description": "Resource that represents a resume.",
            "id": "Resume",
            "properties": {
                "resumeType": {
                    "description": "The format of structured_resume.",
                    "enum": [
                        "RESUME_TYPE_UNSPECIFIED",
                        "HRXML",
                        "OTHER_RESUME_TYPE"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The profile contents in HR-XML format.\nSee http://schemas.liquid-technologies.com/hr-xml/2007-04-15/ for more\ninformation about Human Resources XML.",
                        "Resume type not specified."
                    ],
                    "type": "string"
                },
                "structuredResume": {
                    "description": "Users can create a profile with only this field field, if resume_type\nis HRXML. For example, the API parses this field and\ncreates a profile\nwith all structured fields populated. EmploymentRecord,\nEducationRecord, and so on. An error is thrown if this field cannot be\nparsed.\n\nNote that the use of the functionality offered by this field to extract\ndata from resumes is an Alpha feature and as such is not covered by any\nSLA.",
                    "type": "string"
                },
                "unstructuredResume": {
                    "description": "The bytes of the resume file in common format, for example, PDF, TXT.\nUTF-8 encoding is required if the resume is text-based, otherwise an error\nis thrown.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchJobsRequest": {
            "description": "The Request body of the `SearchJobs` call.",
            "id": "SearchJobsRequest",
            "properties": {
                "customRankingInfo": {
                    "$ref": "CustomRankingInfo",
                    "description": "Controls over how job documents get ranked on top of existing relevance\nscore (determined by API algorithm)."
                },
                "disableKeywordMatch": {
                    "description": "Controls whether to disable exact keyword match on Job.title,\nJob.description, Job.company_display_name, Job.addresses,\nJob.qualifications. When disable keyword match is turned off, a\nkeyword match returns jobs that do not match given category filters when\nthere are matching keywords. For example, for the query \"program manager,\"\na result is returned even if the job posting has the title \"software\ndeveloper,\" which doesn't fall into \"program manager\" ontology, but does\nhave \"program manager\" appearing in its description.\n\nFor queries like \"cloud\" that don't contain title or\nlocation specific ontology, jobs with \"cloud\" keyword matches are returned\nregardless of this flag's value.\n\nUse Company.keyword_searchable_job_custom_attributes if\ncompany-specific globally matched custom field/attribute string values are\nneeded. Enabling keyword match improves recall of subsequent search\nrequests.\n\nDefaults to false.",
                    "type": "boolean"
                },
                "diversificationLevel": {
                    "description": "Controls whether highly similar jobs are returned next to each other in\nthe search results. Jobs are identified as highly similar based on\ntheir titles, job categories, and locations. Highly similar results are\nclustered so that only one representative job of the cluster is\ndisplayed to the job seeker higher up in the results, with the other jobs\nbeing displayed lower down in the results.\n\nDefaults to DiversificationLevel.SIMPLE if no value\nis specified.",
                    "enum": [
                        "DIVERSIFICATION_LEVEL_UNSPECIFIED",
                        "DISABLED",
                        "SIMPLE"
                    ],
                    "enumDescriptions": [
                        "The diversification level isn't specified.",
                        "Disables diversification. Jobs that would normally be pushed to the last\npage would not have their positions altered. This may result in highly\nsimilar jobs appearing in sequence in the search results.",
                        "Default diversifying behavior. The result list is ordered so that\nhighly similar results are pushed to the end of the last page of search\nresults."
                    ],
                    "type": "string"
                },
                "enableBroadening": {
                    "description": "Controls whether to broaden the search when it produces sparse results.\nBroadened queries append results to the end of the matching results\nlist.\n\nDefaults to false.",
                    "type": "boolean"
                },
                "enableDebugInfo": {
                    "description": "Controls whether to add search debug information\n(sortExpr, partial expressions) into SearchResponse.\n\nDefaults to false.",
                    "type": "boolean"
                },
                "histogramQueries": {
                    "description": "An expression specifies a histogram request against matching jobs.\n\nExpression syntax is an aggregation function call with histogram facets and\nother options.\n\nAvailable aggregation function calls are:\n* `count(string_histogram_facet)`: Count the number of matching entities,\nfor each distinct attribute value.\n* `count(numeric_histogram_facet, list of buckets)`: Count the number of\nmatching entities within each bucket.\n\nData types:\n\n* Histogram facet: facet names with format a-zA-Z+.\n* String: string like \"any string with backslash escape for quote(\\\").\"\n* Number: whole number and floating point number like 10, -1 and -0.01.\n* List: list of elements with comma(,) separator surrounded by square\nbrackets, for example, [1, 2, 3] and [\"one\", \"two\", \"three\"].\n\nBuilt-in constants:\n\n* MIN (minimum number similar to java Double.MIN_VALUE)\n* MAX (maximum number similar to java Double.MAX_VALUE)\n\nBuilt-in functions:\n\n* bucket(start, end[, label]): bucket built-in function creates a bucket\nwith range of start, end). Note that the end is exclusive, for example,\nbucket(1, MAX, \"positive number\") or bucket(1, 10).\n\nJob histogram facets:\n\n* company_display_name: histogram by [Job.company_display_name.\n* employment_type: histogram by Job.employment_types, for example,\n  \"FULL_TIME\", \"PART_TIME\".\n* company_size: histogram by CompanySize, for example, \"SMALL\",\n\"MEDIUM\", \"BIG\".\n* publish_time_in_month: histogram by the Job.posting_publish_time\n  in months.\n  Must specify list of numeric buckets in spec.\n* publish_time_in_year: histogram by the Job.posting_publish_time\n  in years.\n  Must specify list of numeric buckets in spec.\n* degree_types: histogram by the Job.degree_types, for example,\n  \"Bachelors\", \"Masters\".\n* job_level: histogram by the Job.job_level, for example, \"Entry\n  Level\".\n* country: histogram by the country code of jobs, for example, \"US\", \"FR\".\n* admin1: histogram by the admin1 code of jobs, which is a global\n  placeholder referring to the state, province, or the particular term a\n  country uses to define the geographic structure below the country level,\n  for example, \"CA\", \"IL\".\n* city: histogram by a combination of the \"city name, admin1 code\". For\n  example,  \"Mountain View, CA\", \"New York, NY\".\n* admin1_country: histogram by a combination of the \"admin1 code, country\",\n  for example, \"CA, US\", \"IL, US\".\n* city_coordinate: histogram by the city center's GPS coordinates (latitude\n  and longitude), for example, 37.4038522,-122.0987765. Since the\n  coordinates of a city center can change, customers may need to refresh\n  them periodically.\n* locale: histogram by the Job.language_code, for example, \"en-US\",\n  \"fr-FR\".\n* language: histogram by the language subtag of the Job.language_code,\n  for example, \"en\", \"fr\".\n* category: histogram by the JobCategory, for example,\n  \"COMPUTER_AND_IT\", \"HEALTHCARE\".\n* base_compensation_unit: histogram by the\n  CompensationInfo.CompensationUnit of base\n  salary, for example, \"WEEKLY\", \"MONTHLY\".\n* base_compensation: histogram by the base salary. Must specify list of\n  numeric buckets to group results by.\n* annualized_base_compensation: histogram by the base annualized salary.\n  Must specify list of numeric buckets to group results by.\n* annualized_total_compensation: histogram by the total annualized salary.\n  Must specify list of numeric buckets to group results by.\n* string_custom_attribute: histogram by string Job.custom_attributes.\n  Values can be accessed via square bracket notations like\n  string_custom_attribute[\"key1\"].\n* numeric_custom_attribute: histogram by numeric Job.custom_attributes.\n  Values can be accessed via square bracket notations like\n  numeric_custom_attribute[\"key1\"]. Must specify list of numeric buckets to\n  group results by.\n\nExample expressions:\n\n* `count(admin1)`\n* `count(base_compensation, [bucket(1000, 10000), bucket(10000, 100000),\nbucket(100000, MAX)])`\n* `count(string_custom_attribute[\"some-string-custom-attribute\"])`\n* `count(numeric_custom_attribute[\"some-numeric-custom-attribute\"],\n  [bucket(MIN, 0, \"negative\"), bucket(0, MAX, \"non-negative\"])`",
                    "items": {
                        "$ref": "HistogramQuery"
                    },
                    "type": "array"
                },
                "jobQuery": {
                    "$ref": "JobQuery",
                    "description": "Query used to search against jobs, such as keyword, location filters, etc."
                },
                "jobView": {
                    "description": "The desired job attributes returned for jobs in the search response.\nDefaults to JobView.JOB_VIEW_SMALL if no value is specified.",
                    "enum": [
                        "JOB_VIEW_UNSPECIFIED",
                        "JOB_VIEW_ID_ONLY",
                        "JOB_VIEW_MINIMAL",
                        "JOB_VIEW_SMALL",
                        "JOB_VIEW_FULL"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "A ID only view of job, with following attributes:\nJob.name, Job.requisition_id, Job.language_code.",
                        "A minimal view of the job, with the following attributes:\nJob.name, Job.requisition_id, Job.title,\nJob.company, Job.DerivedInfo.locations, Job.language_code.",
                        "A small view of the job, with the following attributes in the search\nresults: Job.name, Job.requisition_id, Job.title,\nJob.company, Job.DerivedInfo.locations, Job.visibility,\nJob.language_code, Job.description.",
                        "All available attributes are included in the search results."
                    ],
                    "type": "string"
                },
                "mendelDebugInput": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "This field allows us to pass in a MendelDebugInput proto to force mendel\nexperiment traffic in FORCEABLE experiments.",
                    "type": "object"
                },
                "offset": {
                    "description": "An integer that specifies the current offset (that is, starting result\nlocation, amongst the jobs deemed by the API as relevant) in search\nresults. This field is only considered if page_token is unset.\n\nFor example, 0 means to  return results starting from the first matching\njob, and 10 means to return from the 11th job. This can be used for\npagination, (for example, pageSize = 10 and offset = 10 means to return\nfrom the second page).",
                    "format": "int32",
                    "type": "integer"
                },
                "orderBy": {
                    "description": "The criteria determining how search results are sorted. Default is\n`\"relevance desc\"`.\n\nSupported options are:\n\n* `\"relevance desc\"`: By relevance descending, as determined by the API\n  algorithms. Relevance thresholding of query results is only available\n  with this ordering.\n* `\"posting_publish_time desc\"`: By Job.posting_publish_time\n  descending.\n* `\"posting_update_time desc\"`: By Job.posting_update_time\n  descending.\n* `\"title\"`: By Job.title ascending.\n* `\"title desc\"`: By Job.title descending.\n* `\"annualized_base_compensation\"`: By job's\n  CompensationInfo.annualized_base_compensation_range ascending. Jobs\n  whose annualized base compensation is unspecified are put at the end of\n  search results.\n* `\"annualized_base_compensation desc\"`: By job's\n  CompensationInfo.annualized_base_compensation_range descending. Jobs\n  whose annualized base compensation is unspecified are put at the end of\n  search results.\n* `\"annualized_total_compensation\"`: By job's\n  CompensationInfo.annualized_total_compensation_range ascending. Jobs\n  whose annualized base compensation is unspecified are put at the end of\n  search results.\n* `\"annualized_total_compensation desc\"`: By job's\n  CompensationInfo.annualized_total_compensation_range descending. Jobs\n  whose annualized base compensation is unspecified are put at the end of\n  search results.\n* `\"custom_ranking desc\"`: By the relevance score adjusted to the\n  SearchJobsRequest.CustomRankingInfo.ranking_expression with weight\n  factor assigned by\n  SearchJobsRequest.CustomRankingInfo.importance_level in descending\n  order.\n* Location sorting: Use the special syntax to order jobs by distance:<br>\n  `\"distance_from('Hawaii')\"`: Order by distance from Hawaii.<br>\n  `\"distance_from(19.89, 155.5)\"`: Order by distance from a coordinate.<br>\n  `\"distance_from('Hawaii'), distance_from('Puerto Rico')\"`: Order by\n  multiple locations. See details below.<br>\n  `\"distance_from('Hawaii'), distance_from(19.89, 155.5)\"`: Order by\n  multiple locations. See details below.<br>\n  The string can have a maximum of 256 characters. When multiple distance\n  centers are provided, a job that is close to any of the distance centers\n  would have a high rank. When a job has multiple locations, the job\n  location closest to one of the distance centers will be used. Jobs that\n  don't have locations will be ranked at the bottom. Distance is calculated\n  with a precision of 11.3 meters (37.4 feet). Diversification strategy is\n  still applied unless explicitly disabled in\n  diversification_level.",
                    "type": "string"
                },
                "pageSize": {
                    "description": "A limit on the number of jobs returned in the search results.\nIncreasing this value above the default value of 10 can increase search\nresponse time. The value can be between 1 and 100.",
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "description": "The token specifying the current offset within\nsearch results. See SearchJobsResponse.next_page_token for\nan explanation of how to obtain the next set of query results.",
                    "type": "string"
                },
                "requestMetadata": {
                    "$ref": "RequestMetadata",
                    "description": "Required. The meta information collected about the job searcher, used to improve the\nsearch quality of the service. The identifiers (such as `user_id`) are\nprovided by users, and must be unique and consistent."
                },
                "requirePreciseResultSize": {
                    "description": "Controls if the search job request requires the return of a precise\ncount of the first 300 results. Setting this to `true` ensures\nconsistency in the number of results per page. Best practice is to set this\nvalue to true if a client allows users to jump directly to a\nnon-sequential search results page.\n\nEnabling this flag may adversely impact performance.\n\nDefaults to false.",
                    "type": "boolean"
                },
                "searchMode": {
                    "description": "Mode of a search.\n\nDefaults to SearchMode.JOB_SEARCH.",
                    "enum": [
                        "SEARCH_MODE_UNSPECIFIED",
                        "JOB_SEARCH",
                        "FEATURED_JOB_SEARCH"
                    ],
                    "enumDescriptions": [
                        "The mode of the search method isn't specified. The default search\nbehavior is identical to JOB_SEARCH search behavior.",
                        "The job search matches against all jobs, and featured jobs\n(jobs with promotionValue > 0) are not specially handled.",
                        "The job search matches only against featured jobs (jobs with a\npromotionValue > 0). This method doesn't return any jobs having a\npromotionValue <= 0. The search results order is determined by the\npromotionValue (jobs with a higher promotionValue are returned higher up\nin the search results), with relevance being used as a tiebreaker."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SearchJobsResponse": {
            "description": "Response for SearchJob method.",
            "id": "SearchJobsResponse",
            "properties": {
                "broadenedQueryJobsCount": {
                    "description": "If query broadening is enabled, we may append additional results from the\nbroadened query. This number indicates how many of the jobs returned in the\njobs field are from the broadened query. These results are always at the\nend of the jobs list. In particular, a value of 0, or if the field isn't\nset, all the jobs in the jobs list are from the original\n(without broadening) query. If this field is non-zero, subsequent requests\nwith offset after this result set should contain all broadened results.",
                    "format": "int32",
                    "type": "integer"
                },
                "estimatedTotalSize": {
                    "description": "An estimation of the number of jobs that match the specified query.\n\nThis number isn't guaranteed to be accurate. For accurate results,\nsee SearchJobsRequest.require_precise_result_size.",
                    "format": "int32",
                    "type": "integer"
                },
                "histogramQueryResults": {
                    "description": "The histogram results that match with specified\nSearchJobsRequest.histogram_queries.",
                    "items": {
                        "$ref": "HistogramQueryResult"
                    },
                    "type": "array"
                },
                "locationFilters": {
                    "description": "The location filters that the service applied to the specified query. If\nany filters are lat-lng based, the Location.location_type is\nLocation.LocationType.LOCATION_TYPE_UNSPECIFIED.",
                    "items": {
                        "$ref": "Location"
                    },
                    "type": "array"
                },
                "matchingJobs": {
                    "description": "The Job entities that match the specified SearchJobsRequest.",
                    "items": {
                        "$ref": "MatchingJob"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "The token that specifies the starting position of the next page of results.\nThis field is empty if there are no more results.",
                    "type": "string"
                },
                "spellCorrection": {
                    "$ref": "SpellingCorrection",
                    "description": "The spell checking result, and correction."
                },
                "totalSize": {
                    "description": "The precise result count, which is available only if the client set\nSearchJobsRequest.require_precise_result_size to `true`, or if the\nresponse is the last page of results. Otherwise, the value is `-1`.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SearchProfilesRequest": {
            "description": "The request body of the `SearchProfiles` call.",
            "id": "SearchProfilesRequest",
            "properties": {
                "caseSensitiveSort": {
                    "description": "When sort by field is based on alphabetical order, sort values case\nsensitively (based on ASCII) when the value is set to true. Default value\nis case in-sensitive sort (false).",
                    "type": "boolean"
                },
                "disableSpellCheck": {
                    "description": "This flag controls the spell-check feature. If `false`, the\nservice attempts to correct a misspelled query.\n\nFor example, \"enginee\" is corrected to \"engineer\".",
                    "type": "boolean"
                },
                "histogramQueries": {
                    "description": "A list of expressions specifies histogram requests against matching\nprofiles for SearchProfilesRequest.\n\nThe expression syntax looks like a function definition with parameters.\n\nFunction syntax: function_name(histogram_facet[, list of buckets])\n\nData types:\n\n* Histogram facet: facet names with format a-zA-Z+.\n* String: string like \"any string with backslash escape for quote(\\\").\"\n* Number: whole number and floating point number like 10, -1 and -0.01.\n* List: list of elements with comma(,) separator surrounded by square\nbrackets. For example, [1, 2, 3] and [\"one\", \"two\", \"three\"].\n\nBuilt-in constants:\n\n* MIN (minimum number similar to java Double.MIN_VALUE)\n* MAX (maximum number similar to java Double.MAX_VALUE)\n\nBuilt-in functions:\n\n* bucket(start, end[, label])\nBucket build-in function creates a bucket with range of start, end). Note\nthat the end is exclusive.\nFor example, bucket(1, MAX, \"positive number\") or bucket(1, 10).\n\nHistogram Facets:\n\n* admin1: Admin1 is a global placeholder for referring to state, province,\nor the particular term a country uses to define the geographic structure\nbelow the country level. Examples include states codes such as \"CA\", \"IL\",\n\"NY\", and provinces, such as \"BC\".\n* locality: Locality is a global placeholder for referring to city, town,\nor the particular term a country uses to define the geographic structure\nbelow the admin1 level. Examples include city names such as\n\"Mountain View\" and \"New York\".\n* extended_locality: Extended locality is concatenated version of admin1\nand locality with comma separator. For example, \"Mountain View, CA\" and\n\"New York, NY\".\n* postal_code: Postal code of profile which follows locale code.\n* country: Country code (ISO-3166-1 alpha-2 code) of profile, such as US,\n JP, GB.\n* job_title: Normalized job titles specified in EmploymentHistory.\n* company_name: Normalized company name of profiles to match on.\n* institution: The school name. For example, \"MIT\",\n\"University of California, Berkeley\"\n* degree: Highest education degree in ISCED code. Each value in degree\ncovers a specific level of education, without any expansion to upper nor\nlower levels of education degree.\n* experience_in_months: experience in months. 0 means 0 month to 1 month\n(exclusive).\n* application_date: The application date specifies application start dates.\nSee [ApplicationDateFilter for more details.\n* application_outcome_notes: The application outcome reason specifies the\nreasons behind the outcome of the job application.\nSee ApplicationOutcomeNotesFilter for more details.\n* application_job_title: The application job title specifies the job\napplied for in the application.\nSee ApplicationJobFilter for more details.\n* hirable_status: Hirable status specifies the profile's hirable status.\n* string_custom_attribute: String custom attributes. Values can be accessed\nvia square bracket notation like string_custom_attribute[\"key1\"].\n* numeric_custom_attribute: Numeric custom attributes. Values can be\naccessed via square bracket notation like numeric_custom_attribute[\"key1\"].\n\nExample expressions:\n\n* count(admin1)\n* count(experience_in_months, [bucket(0, 12, \"1 year\"),\nbucket(12, 36, \"1-3 years\"), bucket(36, MAX, \"3+ years\")])\n* count(string_custom_attribute[\"assigned_recruiter\"])\n* count(numeric_custom_attribute[\"favorite_number\"],\n[bucket(MIN, 0, \"negative\"), bucket(0, MAX, \"non-negative\")])",
                    "items": {
                        "$ref": "HistogramQuery"
                    },
                    "type": "array"
                },
                "mendelDebugInput": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "This field allows us to pass in a MendelDebugInput proto to force mendel\nexperiment traffic in FORCEABLE experiments.",
                    "type": "object"
                },
                "offset": {
                    "description": "An integer that specifies the current offset (that is, starting result) in\nsearch results. This field is only considered if page_token is unset.\n\nThe maximum allowed value is 5000. Otherwise an error is thrown.\n\nFor example, 0 means to search from the first profile, and 10 means to\nsearch from the 11th profile. This can be used for pagination, for example\npageSize = 10 and offset = 10 means to search from the second page.",
                    "format": "int32",
                    "type": "integer"
                },
                "orderBy": {
                    "description": "The criteria that determines how search results are sorted.\nDefaults is \"relevance desc\" if no value is specified.\n\nSupported options are:\n\n* \"relevance desc\": By descending relevance, as determined by the API\n   algorithms.\n* \"update_date desc\": Sort by Profile.update_time in descending order\n  (recently updated profiles first).\n* \"create_date desc\": Sort by Profile.create_time in descending order\n  (recently created profiles first).\n* \"first_name\": Sort by PersonName.PersonStructuredName.given_name in\n  ascending order.\n* \"first_name desc\": Sort by PersonName.PersonStructuredName.given_name\n  in descending order.\n* \"last_name\": Sort by PersonName.PersonStructuredName.family_name in\n  ascending order.\n* \"last_name desc\": Sort by PersonName.PersonStructuredName.family_name\n  in ascending order.",
                    "type": "string"
                },
                "pageSize": {
                    "description": "A limit on the number of profiles returned in the search results.\nA value above the default value 10 can increase search response time.\n\nThe maximum value allowed is 100. Otherwise an error is thrown.",
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "description": "The pageToken, similar to offset enables users of the API to paginate\nthrough the search results. To retrieve the first page of results, set the\npageToken to empty. The search response includes a\nnextPageToken field that can be\nused to populate the pageToken field for the next page of results. Using\npageToken instead of offset increases the performance of the API,\nespecially compared to larger offset values.",
                    "type": "string"
                },
                "profileQuery": {
                    "$ref": "ProfileQuery",
                    "description": "Search query to execute. See ProfileQuery for more details."
                },
                "recruiter": {
                    "description": "The resource name of the recruiter.\n\nThe format is\n\"projects/{project_id}}/tenants/{tenant_id}/recruiters/{recruiter_id}\". For\nexample, \"projects/foo/tenants/bar/recruiters/baz\".",
                    "type": "string"
                },
                "requestMetadata": {
                    "$ref": "RequestMetadata",
                    "description": "Required. The meta information collected about the profile search user. This is used\nto improve the search quality of the service. These values are provided by\nusers, and must be precise and consistent."
                },
                "resultSetId": {
                    "description": "An id that uniquely identifies the result set of a\nSearchProfiles call. The id should be\nretrieved from the\nSearchProfilesResponse message returned from a previous\ninvocation of SearchProfiles.\n\nA result set is an ordered list of search results.\n\nIf this field is not set, a new result set is computed based on the\nprofile_query.  A new result_set_id is returned as a handle to\naccess this result set.\n\nIf this field is set, the service will ignore the resource and\nprofile_query values, and simply retrieve a page of results from the\ncorresponding result set.  In this case, one and only one of page_token\nor offset must be set.\n\nA typical use case is to invoke SearchProfilesRequest without this\nfield, then use the resulting result_set_id in\nSearchProfilesResponse to page through the results.",
                    "type": "string"
                },
                "strictKeywordsSearch": {
                    "description": "This flag is used to indicate whether the service will attempt to\nunderstand synonyms and terms related to the search query or treat the\nquery \"as is\" when it generates a set of results. By default this flag is\nset to false, thus allowing expanded results to also be returned. For\nexample a search for \"software engineer\" might also return candidates who\nhave experience in jobs similar to software engineer positions. By setting\nthis flag to true, the service will only attempt to deliver candidates has\nsoftware engineer in his/her global fields by treating \"software engineer\"\nas a keyword.\n\nIt is recommended to provide a feature in the UI (such as a checkbox) to\nallow recruiters to set this flag to true if they intend to search for\nlonger boolean strings.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SearchProfilesResponse": {
            "description": "Response of SearchProfiles method.",
            "id": "SearchProfilesResponse",
            "properties": {
                "estimatedTotalSize": {
                    "description": "An estimation of the number of profiles that match the specified query.\n\nThis number isn't guaranteed to be accurate.",
                    "format": "int64",
                    "type": "string"
                },
                "histogramQueryResults": {
                    "description": "The histogram results that match with specified\nSearchProfilesRequest.histogram_queries.",
                    "items": {
                        "$ref": "HistogramQueryResult"
                    },
                    "type": "array"
                },
                "metadata": {
                    "$ref": "ResponseMetadata",
                    "description": "Additional information for the API invocation, such as the request\ntracking id."
                },
                "nextPageToken": {
                    "description": "A token to retrieve the next page of results. This is empty if there are no\nmore results.",
                    "type": "string"
                },
                "resultSetId": {
                    "description": "An id that uniquely identifies the result set of a\nSearchProfiles call for consistent\nresults.",
                    "type": "string"
                },
                "spellCorrection": {
                    "$ref": "SpellingCorrection",
                    "description": "The spell checking result, and correction."
                },
                "summarizedProfiles": {
                    "description": "The profile entities that match the specified SearchProfilesRequest.",
                    "items": {
                        "$ref": "SummarizedProfile"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SecurityClearance": {
            "description": "Resource that represents a security clearance.",
            "id": "SecurityClearance",
            "properties": {
                "active": {
                    "description": "This is an active security clearance.",
                    "type": "boolean"
                },
                "expireDate": {
                    "$ref": "Date",
                    "description": "The expiration date of the security clearance issued."
                },
                "isActiveTwoYears": {
                    "description": "This is a clearance which was active in the last two years.",
                    "type": "boolean"
                },
                "level": {
                    "description": "The level or type of the security clearance.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SelectedJobPrompt": {
            "description": "Message contains basic information about selected JobPrompt in\nSetJobPromptRequest.",
            "id": "SelectedJobPrompt",
            "properties": {
                "knockoutCondition": {
                    "description": "Optional. A condition which, if met, will trigger interview knockout. For example,\n\"x>10\". Leaving it empty means disabling knockout for this job prompt.",
                    "type": "string"
                },
                "name": {
                    "description": "Required. The unique identifier for the selected job prompt. This should match the\nname field in JobPrompt.\n\nThe format is\n\"projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}/jobPrompts/{jobPrompt_id}\",\nfor example, \"projects/foo/tenants/bar/jobs/XXX/jobPrompts/YYY\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SetJobPromptsRequest": {
            "description": "Set job prompts request.",
            "id": "SetJobPromptsRequest",
            "properties": {
                "selectedJobPrompts": {
                    "description": "List of job prompts to set for the given job.\nAll job prompts for the given job will be removed if this is empty.",
                    "items": {
                        "$ref": "SelectedJobPrompt"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SetJobPromptsResponse": {
            "description": "Set job prompts response.",
            "id": "SetJobPromptsResponse",
            "properties": {
                "jobPrompts": {
                    "description": "List of job prompts set for the given job.",
                    "items": {
                        "$ref": "JobPrompt"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Skill": {
            "description": "Resource that represents a skill of a candidate.",
            "id": "Skill",
            "properties": {
                "canBeTested": {
                    "description": "Whether the person is willing to be tested on their proficiency in this\nskill.",
                    "type": "boolean"
                },
                "context": {
                    "description": "A paragraph describes context of this skill.\n\nNumber of characters allowed is 100,000.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Skill display name.\n\nFor example, \"Java\", \"Python\".\n\nNumber of characters allowed is 100.",
                    "type": "string"
                },
                "experienceYears": {
                    "description": "Years of experience with the skill.",
                    "format": "double",
                    "type": "number"
                },
                "importance": {
                    "description": "Importance describes how important this skill is as a requirement for\na position. Values for this field are omitted in Profile.skills.",
                    "enum": [
                        "IMPORTANCE_UNSPECIFIED",
                        "REQUIRED",
                        "PREFERRED",
                        "OPTIONAL"
                    ],
                    "enumDescriptions": [
                        "The skill importance is unspecified. Default value.",
                        "This skill is a hard requirement in order to perform a role.",
                        "This skill is preferred in order to perform a role, but not required.",
                        "This skill is optional or nice to have in order to perform a role, but\nnot required or preferred."
                    ],
                    "type": "string"
                },
                "lastUsedDate": {
                    "$ref": "Date",
                    "description": "The last time this skill was used."
                },
                "level": {
                    "description": "Skill proficiency level which indicates how proficient the candidate is at\nthis skill.",
                    "enum": [
                        "SKILL_PROFICIENCY_LEVEL_UNSPECIFIED",
                        "UNSKILLED",
                        "FUNDAMENTAL_AWARENESS",
                        "NOVICE",
                        "INTERMEDIATE",
                        "ADVANCED",
                        "EXPERT"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Lacks any proficiency in this skill.",
                        "Have a common knowledge or an understanding of basic techniques and\nconcepts.",
                        "Have the level of experience gained in a classroom and/or experimental\nscenarios or as a trainee on-the-job.",
                        "Be able to successfully complete tasks in this skill as requested. Help\nfrom an expert may be required from time to time, but can usually perform\nskill independently.",
                        "Can perform the actions associated with this skill without assistance.",
                        "Known as an expert in this area."
                    ],
                    "type": "string"
                },
                "skillNameSnippet": {
                    "description": "Output only. Skill name snippet shows how the display_name is related to a search\nquery. It's empty if the display_name isn't related to the search\nquery.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SkillFilter": {
            "description": "Skill filter of the search.",
            "id": "SkillFilter",
            "properties": {
                "negated": {
                    "description": "Whether to apply negation to the filter so profiles matching the filter\nare excluded.",
                    "type": "boolean"
                },
                "skill": {
                    "description": "Required. The skill name. For example, \"java\", \"j2ee\", and so on.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmsContactInfo": {
            "description": "The message containing the necessary contact information to contact a\ncandidate through SMS.",
            "id": "SmsContactInfo",
            "properties": {
                "countryCode": {
                    "description": "Required. The country calling code for this number, as defined by the International\nTelecommunication Union (ITU).\n\nFor example, the phone number +1 (650) 253-0000 has the value of  1 in this\nfield.",
                    "format": "int32",
                    "type": "integer"
                },
                "number": {
                    "description": "Required. The National (significant) Number, as defined in International\nTelecommunication Union (ITU) Recommendation E.164, without any leading\nzero, since this is an int64 and hence cannot store such information.\n\nFor countries which have the concept of an \"area code\" or \"national\ndestination code\", this is included in the National (significant) Number.\nThe maximum length of this field is 18 digits. Although the ITU says the\nmaximum length should be 15 digits, we have found longer numbers in some\ncountries, for example Germany.\n\nNote that the National (significant) Number does not contain the National\n(trunk) prefix. Obviously, as an int64, it will never contain any\nformatting (hyphens, spaces, parentheses), nor any alphanumeric spellings.\n\nFor example, the phone number +1 (650) 253-0000 has the value of\n6,502,530,000 in this field.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SpellingCorrection": {
            "description": "Spell check result.",
            "id": "SpellingCorrection",
            "properties": {
                "corrected": {
                    "description": "Indicates if the query was corrected by the spell checker.",
                    "type": "boolean"
                },
                "correctedHtml": {
                    "description": "Corrected output with html tags to highlight the corrected words.\nCorrected words are called out with the \"<b><i>...</i></b>\" html tags.\n\nFor example, the user input query is \"software enginear\", where the second\nword, \"enginear,\" is incorrect. It should be \"engineer\". When spelling\ncorrection is enabled, this value is\n\"software <b><i>engineer</i></b>\".",
                    "type": "string"
                },
                "correctedText": {
                    "description": "Correction output consisting of the corrected keyword string.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "id": "Status",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SuggestedReply": {
            "description": "Message for front-end to render suggest replies.",
            "id": "SuggestedReply",
            "properties": {
                "ordinal": {
                    "description": "Optional. The ordinal number of the choice. This is an easy way for SMS to map\nordinal number to actual text. This will be provided by CE server based on\nthe order of the text.",
                    "format": "int32",
                    "type": "integer"
                },
                "text": {
                    "description": "Required. The text of the suggested reply.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SummarizedProfile": {
            "description": "Profile entry with metadata inside SearchProfilesResponse.",
            "id": "SummarizedProfile",
            "properties": {
                "profiles": {
                    "description": "A list of profiles that are linked by Profile.group_id.",
                    "items": {
                        "$ref": "Profile"
                    },
                    "type": "array"
                },
                "summary": {
                    "$ref": "Profile",
                    "description": "A profile summary shows the profile summary and how the profile matches the\nsearch query.\n\nIn profile summary, the profiles with the same Profile.group_id are\nmerged together. Among profiles, same education/employment records may be\nslightly different but they are merged into one with best efforts.\n\nFor example, in one profile the school name is \"UC Berkeley\" and the field\nstudy is \"Computer Science\" and in another one the school name is\n\"University of California at Berkeley\" and the field study is \"CS\". The API\nmerges these two inputs into one and selects one value for each field. For\nexample, the school name in summary is set to \"University of California at\nBerkeley\" and the field of study is set to \"Computer Science\"."
                }
            },
            "type": "object"
        },
        "SwitchFeatureRequest": {
            "description": "Switch on/off a given feature for a given set of resources under this tenant.\nTo intend turn on feature_type, assign resources (for example profiles)\nwith control flags to that tenant, and include the assigned flag in\n[enabled_control_flags]. To intend turn off a feature_type, set\n[feature_control_flags] as empty.",
            "id": "SwitchFeatureRequest",
            "properties": {
                "enabledControlFlags": {
                    "description": "Required. The list of control flags defining the resource group to which the feature\nis applied.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "featureType": {
                    "description": "Required. The feature type to switch on or off.",
                    "enum": [
                        "CONTROLLABLE_FEATURE_TYPE_UNSPECIFIED",
                        "CE_OUTREACH",
                        "CE_SMS"
                    ],
                    "enumDescriptions": [
                        "Default feature type.",
                        "Allows CE Outreach. This feature applies to [Profile] resources only.\nSee the Profile.feature_control_flags field to enable/disable this\nfeature for each profile.",
                        "Allows CE Sms chat. This feature applies to [Profile] resources only.\nSee the Profile.feature_control_flags field to enable/disable this\nfeature for each profile."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Tenant": {
            "description": "A Tenant resource represents a tenant in the service. A tenant is a group or\nentity that shares common access with specific privileges for resources like\nprofiles. Customer may create multiple tenants to provide data isolation for\ndifferent groups.",
            "id": "Tenant",
            "properties": {
                "externalId": {
                    "description": "Required. Client side tenant identifier, used to uniquely identify the tenant.\n\nThe maximum number of allowed characters is 255.",
                    "type": "string"
                },
                "keywordSearchableProfileCustomAttributes": {
                    "description": "A list of keys of filterable Profile.custom_attributes, whose\ncorresponding `string_values` are used in keyword searches. Profiles with\n`string_values` under these specified field keys are returned if any\nof the values match the search keyword. Custom field values with\nparenthesis, brackets and special symbols are not searchable as-is,\nand must be surrounded by quotes.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Required during tenant update.\n\nThe resource name for a tenant. This is generated by the service when a\ntenant is created.\n\nThe format is \"projects/{project_id}/tenants/{tenant_id}\", for example,\n\"projects/foo/tenants/bar\".",
                    "type": "string"
                },
                "rolloutFeatures": {
                    "additionalProperties": {
                        "$ref": "FeatureConfig"
                    },
                    "description": "Output only. Map to represent rollout features enabled on this tenant. Key is the\n[ControllableFeatureType]. Note: this field can only be set by\nSwitchFeature\nAPI, CreateTenant or UpdateTenant method can not change this field.",
                    "type": "object"
                },
                "usageType": {
                    "description": "Indicates whether data owned by this tenant may be used to provide product\nimprovements across other tenants.\n\nDefaults behavior is DataUsageType.ISOLATED if it's unset.",
                    "enum": [
                        "DATA_USAGE_TYPE_UNSPECIFIED",
                        "AGGREGATED",
                        "ISOLATED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Data owned by this tenant is used to improve search/recommendation\nquality across tenants.",
                        "Data owned by this tenant is used to improve search/recommendation\nquality for this tenant only."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimeFilter": {
            "description": "Filter on create timestamp or update timestamp of profiles.",
            "id": "TimeFilter",
            "properties": {
                "endTime": {
                    "description": "End timestamp, matching profiles with the end time. If this field\nmissing, The API matches profiles with create / update timestamp after the\nstart timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "startTime": {
                    "description": "Start timestamp, matching profiles with the start time. If this field\nmissing, The API matches profiles with create / update timestamp before the\nend timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "timeField": {
                    "description": "Specifies which time field to filter profiles.\n\nDefaults to TimeField.CREATE_TIME.",
                    "enum": [
                        "TIME_FIELD_UNSPECIFIED",
                        "CREATE_TIME",
                        "UPDATE_TIME"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "Earliest profile create time.",
                        "Latest profile update time."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimeOfDay": {
            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
            "id": "TimeOfDay",
            "properties": {
                "hours": {
                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                    "format": "int32",
                    "type": "integer"
                },
                "minutes": {
                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                    "format": "int32",
                    "type": "integer"
                },
                "nanos": {
                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                    "format": "int32",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TimeSegment": {
            "description": "Time segment details. This is used to represent a candidate's available\ncontact time, working hours of a job, and so on.",
            "id": "TimeSegment",
            "properties": {
                "available": {
                    "description": "Required. This time segment is available for scheduling if true.",
                    "type": "boolean"
                },
                "dayOfWeek": {
                    "description": "The day of the week this time segment is for. Generally used for\nrepeating availability events, like work scheduling. If this isn't\nspecified, the time segment applies no matter the day of the week.",
                    "enumDescriptions": [
                        "The unspecified day-of-week.",
                        "The day-of-week of Monday.",
                        "The day-of-week of Tuesday.",
                        "The day-of-week of Wednesday.",
                        "The day-of-week of Thursday.",
                        "The day-of-week of Friday.",
                        "The day-of-week of Saturday.",
                        "The day-of-week of Sunday."
                    ],
                    "items": {
                        "enum": [
                            "DAY_OF_WEEK_UNSPECIFIED",
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "endDate": {
                    "$ref": "Date",
                    "description": "The date (inclusive) this time segment ends on. Generally used for\none-time availability events, like scheduling calls or interviews."
                },
                "endTime": {
                    "$ref": "TimeOfDay",
                    "description": "The time of day (exclusive) this time segment ends on. If this isn't\nspecified, the time segment applies until the end of the day."
                },
                "notes": {
                    "description": "Additional notes about this time segment.",
                    "type": "string"
                },
                "shifts": {
                    "description": "The shifts this time segment is available for, for example \"3rd shift\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "startDate": {
                    "$ref": "Date",
                    "description": "The date (inclusive) this time segment starts from. Generally used for\none-time availability events, like scheduling calls or interviews."
                },
                "startTime": {
                    "$ref": "TimeOfDay",
                    "description": "The time of day (inclusive) this time segment starts from. If this isn't\nspecified, the time segment applies from the beginning of the day."
                }
            },
            "type": "object"
        },
        "TimestampRange": {
            "description": "Message representing a period of time between two timestamps.",
            "id": "TimestampRange",
            "properties": {
                "endTime": {
                    "description": "End of the period (exclusive).",
                    "format": "google-datetime",
                    "type": "string"
                },
                "startTime": {
                    "description": "Begin of the period (inclusive).",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TouchProfileRequest": {
            "description": "Touch profile request.",
            "id": "TouchProfileRequest",
            "properties": {
                "fieldUpdateMetadata": {
                    "$ref": "FieldUpdateMetadata",
                    "description": "The profile update history for these reviewed fields. If this argument is\nnot sent, the default FieldUpdateMetadata.update_time is \"now\" and the\ndefault FieldUpdateMetadata.update_reason_note is unset."
                },
                "touchMask": {
                    "description": "The fields on the profile which have been reviewed. If this touch_mask is\nnot provided, all fields in Profile.field_update_metadata are regarded\nas touched.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateApplicationRequest": {
            "description": "Request for updating a specified application.",
            "id": "UpdateApplicationRequest",
            "properties": {
                "application": {
                    "$ref": "Application",
                    "description": "Required. The application resource to replace the current resource in the system."
                },
                "updateMask": {
                    "description": "Strongly recommended for the best service experience.\n\nIf update_mask is provided, only the specified fields in\napplication are updated. Otherwise all the fields are updated.\n\nA field mask to specify the application fields to be updated. Only\ntop level fields of Application are supported.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateAssignmentRequest": {
            "description": "Request for updating a specified assignment.",
            "id": "UpdateAssignmentRequest",
            "properties": {
                "assignment": {
                    "$ref": "Assignment",
                    "description": "Required. The assignment resource to replace the current resource in the system."
                },
                "updateMask": {
                    "description": "Strongly recommended for the best service experience.\n\nIf update_mask is provided, only the specified fields in\nassignment are updated. Otherwise all the fields are updated.\n\nA field mask to specify the assignment fields to be updated. Only\ntop level fields of Assignment are supported.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateCompanyRequest": {
            "description": "Request for updating a specified company.",
            "id": "UpdateCompanyRequest",
            "properties": {
                "company": {
                    "$ref": "Company",
                    "description": "Required. The company resource to replace the current resource in the system."
                },
                "updateMask": {
                    "description": "Strongly recommended for the best service experience.\n\nIf update_mask is provided, only the specified fields in\ncompany are updated. Otherwise all the fields are updated.\n\nA field mask to specify the company fields to be updated. Only\ntop level fields of Company are supported.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateConversationStatusRequest": {
            "description": "Update conversation status request.",
            "id": "UpdateConversationStatusRequest",
            "properties": {
                "status": {
                    "description": "New conversation status for conversation.",
                    "enum": [
                        "CONVERSATION_STATUS_UNSPECIFIED",
                        "SCHEDULED",
                        "IN_PROGRESS",
                        "IDLE",
                        "FINISHED",
                        "CANCELLED",
                        "EXPIRED"
                    ],
                    "enumDescriptions": [
                        "Default value.",
                        "The conversation is scheduled to occur.",
                        "The conversation is in active progress.",
                        "The conversation was in progress but hasn't been actively conversing for\n15 minutes.",
                        "The conversation has finished.",
                        "The conversation was cancelled.",
                        "The conversation was started but timed out waiting for a candidate\nresponse."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateJobRequest": {
            "description": "Update job request.",
            "id": "UpdateJobRequest",
            "properties": {
                "job": {
                    "$ref": "Job",
                    "description": "Required. The Job to be updated."
                },
                "updateMask": {
                    "description": "Strongly recommended for the best service experience.\n\nIf update_mask is provided, only the specified fields in\njob are updated. Otherwise all the fields are updated.\n\nA field mask to restrict the fields that are updated. Only\ntop level fields of Job are supported.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateProfileRequest": {
            "description": "Update profile request",
            "id": "UpdateProfileRequest",
            "properties": {
                "profile": {
                    "$ref": "Profile",
                    "description": "Required. Profile to be updated."
                },
                "updateMask": {
                    "description": "A field mask to specify the profile fields to update.\n\nA full update is performed if it is unset.\n\nValid values are:\n\n* external_id\n* source\n* source_types\n* uri\n* is_hirable\n* create_time\n* update_time\n* candidate_update_time\n* resume_update_time\n* resume\n* person_names\n* addresses\n* email_addresses\n* phone_numbers\n* personal_uris\n* additional_contact_info\n* employment_records\n* education_records\n* skills\n* activities\n* publications\n* patents\n* certifications\n* recruiting_notes\n* custom_attributes\n* group_id\n* external_system\n* source_note\n* primary_responsibilities\n* citizenships\n* work_authorizations\n* employee_types\n* language_code\n* qualification_summary\n* allowed_contact_types\n* preferred_contact_types\n* contact_availability\n* language_fluencies\n* work_preference\n* industry_experiences\n* work_environment_experiences\n* work_availability\n* security_clearances\n* references\n* assessments\n* interviews",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateRecruiterRequest": {
            "description": "Update recruiter request",
            "id": "UpdateRecruiterRequest",
            "properties": {
                "recruiter": {
                    "$ref": "Recruiter",
                    "description": "Required. Recruiter to be updated."
                },
                "updateMask": {
                    "description": "A field mask to specify the recruiter fields to update.\n\nA full update is performed if it is unset.\n\nValid values are:\n\n* customAttributes",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateTenantRequest": {
            "description": "Request for updating a specified tenant.",
            "id": "UpdateTenantRequest",
            "properties": {
                "tenant": {
                    "$ref": "Tenant",
                    "description": "Required. The tenant resource to replace the current resource in the system."
                },
                "updateMask": {
                    "description": "Strongly recommended for the best service experience.\n\nIf update_mask is provided, only the specified fields in\ntenant are updated. Otherwise all the fields are updated.\n\nA field mask to specify the tenant fields to be updated. Only\ntop level fields of Tenant are supported.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkExperienceFilter": {
            "description": "Work experience filter.\n\nThis filter is used to search for profiles with working experience length\nbetween min_experience and max_experience.",
            "id": "WorkExperienceFilter",
            "properties": {
                "maxExperience": {
                    "description": "The maximum duration of the work experience (exclusive).",
                    "format": "google-duration",
                    "type": "string"
                },
                "minExperience": {
                    "description": "The minimum duration of the work experience (inclusive).",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkPreference": {
            "description": "Resource that represents a work preference.",
            "id": "WorkPreference",
            "properties": {
                "canRelocate": {
                    "description": "The candidate is willing to relocate for work.",
                    "type": "boolean"
                },
                "commuteMethods": {
                    "description": "The preferred commute methods.",
                    "enumDescriptions": [
                        "Commute method isn't specified.",
                        "Commute time is calculated based on driving time.",
                        "Commute time is calculated based on public transit including bus, metro,\nsubway, and so on.",
                        "Commute time is calculated based on walking time.",
                        "Commute time is calculated based on biking time.",
                        "Commute time is calculated based on public transit that is wheelchair\naccessible."
                    ],
                    "items": {
                        "enum": [
                            "COMMUTE_METHOD_UNSPECIFIED",
                            "DRIVING",
                            "TRANSIT",
                            "WALKING",
                            "CYCLING",
                            "TRANSIT_ACCESSIBLE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "employeeTypes": {
                    "description": "A list of preferred employee types (e.g. W2, Vendor, Unknown) which can\nbe orthogonal to EmploymentType preferences.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "employmentTypes": {
                    "description": "A list of preferred employment types.",
                    "enumDescriptions": [
                        "The default value if the employment type isn't specified.",
                        "The job requires working a number of hours that constitute full\ntime employment, typically 40 or more hours per week.",
                        "The job entails working fewer hours than a full time job,\ntypically less than 40 hours a week.",
                        "The job is offered as a contracted, as opposed to a salaried employee,\nposition.",
                        "The job is offered as a contracted position with the understanding\nthat it's converted into a full-time position at the end of the\ncontract. Jobs of this type are also returned by a search for\nEmploymentType.CONTRACTOR jobs.",
                        "The job is offered as a temporary employment opportunity, usually\na short-term engagement.",
                        "The job is a fixed-term opportunity for students or entry-level job\nseekers to obtain on-the-job training, typically offered as a summer\nposition.",
                        "The is an opportunity for an individual to volunteer, where there's no\nexpectation of compensation for the provided services.",
                        "The job requires an employee to work on an as-needed basis with a\nflexible schedule.",
                        "The job involves employing people in remote areas and flying them\ntemporarily to the work site instead of relocating employees and their\nfamilies permanently.",
                        "This job is a permanent placement from a staffing agency at an\norganization.",
                        "This job is for a specific deliverable (\"gig\"), for example, delivering a\nspecific project.",
                        "The job does not fit any of the other listed types."
                    ],
                    "items": {
                        "enum": [
                            "EMPLOYMENT_TYPE_UNSPECIFIED",
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "CONTRACT_TO_HIRE",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "FLY_IN_FLY_OUT",
                            "PERMANENT",
                            "DELIVERABLE",
                            "OTHER_EMPLOYMENT_TYPE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "hasReliableTransportation": {
                    "description": "If true, the candidate has a reliable independent mode of transportation.\nFor example, automobile.",
                    "type": "boolean"
                },
                "jobAddresses": {
                    "description": "A list of preferred job addresses.",
                    "items": {
                        "$ref": "Address"
                    },
                    "type": "array"
                },
                "jobChangeReasons": {
                    "description": "A person's reason for changing jobs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "jobObjective": {
                    "description": "A paragraph displaying the persons' job objectives.",
                    "type": "string"
                },
                "jobRequirementInterests": {
                    "description": "The requirements making a person interested (or not) in a job.",
                    "items": {
                        "$ref": "JobRequirementInterest"
                    },
                    "type": "array"
                },
                "jobTitles": {
                    "description": "A list of preferred job titles.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxCommute": {
                    "description": "Maximum commute time candidate is willing to accept to the work location.",
                    "format": "google-duration",
                    "type": "string"
                },
                "maxCommuteDistanceMiles": {
                    "description": "Maximum distance candidate is willing to accept to the work location.",
                    "format": "double",
                    "type": "number"
                },
                "minCompensation": {
                    "$ref": "CompensationInfo",
                    "description": "Minimum acceptable compensation."
                },
                "otherPreferences": {
                    "description": "A list of preferred job attributes / responsibilities / qualifications /\ncompanies / and so on. as determined by the candidate.\nEffectively the candidate's answer to the question\n\"What is most important to you when considering a new job?\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "preferredCommute": {
                    "description": "Preferred commute time candidate is willing to\naccept to the work location.",
                    "format": "google-duration",
                    "type": "string"
                },
                "preferredCommuteDistanceMiles": {
                    "description": "Preferred distance candidate is willing to accept to the work location.",
                    "format": "double",
                    "type": "number"
                },
                "preferredCompensation": {
                    "description": "Preferred compensation. This is repeated if the candidate expressed\ncompensation preferences differently over time or for different jobs.",
                    "items": {
                        "$ref": "CompensationInfo"
                    },
                    "type": "array"
                },
                "requiresPublicTransportation": {
                    "description": "If true, the candidate requires job locations with readily accessible\nmodes of public transportation.",
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Cloud Talent Solution (Test version)",
    "version": "v4beta1",
    "version_module": true
}