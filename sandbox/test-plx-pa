{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/plx": {
                    "description": "View and manage your Plx resources"
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://test-plx-pa.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Plx",
    "description": "",
    "discoveryVersion": "v1",
    "documentationLink": "https://goto.google.com/plx-api",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "plx_pa:v2",
    "kind": "discovery#restDescription",
    "name": "plx_pa",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "alerts": {
            "resources": {
                "annotations": {
                    "methods": {
                        "search": {
                            "description": "Searches annotations that are considered relevant in the given scope.",
                            "flatPath": "v2/alerts/annotations:search",
                            "httpMethod": "POST",
                            "id": "plx_pa.alerts.annotations.search",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v2/alerts/annotations:search",
                            "request": {
                                "$ref": "GoogleInternalPlxV2AlertSearchAnnotationsRequest"
                            },
                            "response": {
                                "$ref": "GoogleInternalPlxV2AlertSearchAnnotationsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                }
            }
        },
        "dashboards": {
            "methods": {
                "delete": {
                    "description": "Deletes a dashboard.",
                    "flatPath": "v2/dashboards/{dashboardsId}",
                    "httpMethod": "DELETE",
                    "id": "plx_pa.dashboards.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. The name of the dashboard to delete.",
                            "location": "path",
                            "pattern": "^dashboards/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}",
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                }
            }
        },
        "executions": {
            "methods": {
                "cancel": {
                    "description": "Cancels a script execution. The ScriptExecution is still valid after\nthe cancellation for retrieving the status.",
                    "flatPath": "v2/executions/{executionsId}:cancel",
                    "httpMethod": "POST",
                    "id": "plx_pa.executions.cancel",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required: The name of the execution to cancel.",
                            "location": "path",
                            "pattern": "^executions/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "token": {
                            "description": "Required: The token of the execution to cancel.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}:cancel",
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "create": {
                    "description": "Creates a script execution. Returns a\n[google.internal.plx.v2.ScriptExecution] (../ScriptExecution)\nin the metadata of the\n[google.longrunning.Operation] (../executions#Operation). Response will not\ninclude results, use\n[google.internal.plx.v2.GetResults] (../executions.results/get) with the\nresult ids in the response.",
                    "flatPath": "v2/executions",
                    "httpMethod": "POST",
                    "id": "plx_pa.executions.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v2/executions",
                    "request": {
                        "$ref": "CreateScriptExecutionRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "get": {
                    "description": "Gets a script execution. Returns a\n[google.internal.plx.v2.ScriptExecution] (../ScriptExecution)\nin the metadata of the\n[google.longrunning.Operation] (../executions#Operation). Response will not\ninclude results, use\n[google.internal.plx.v2.GetResults] (../executions.results/get) with the\nresult ids in the response.",
                    "flatPath": "v2/executions/{executionsId}",
                    "httpMethod": "GET",
                    "id": "plx_pa.executions.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required: The name of the execution.",
                            "location": "path",
                            "pattern": "^executions/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "token": {
                            "description": "Required: The token of the execution to retrieve.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "validate": {
                    "description": "Validates a script.",
                    "flatPath": "v2/executions:validate",
                    "httpMethod": "POST",
                    "id": "plx_pa.executions.validate",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v2/executions:validate",
                    "request": {
                        "$ref": "ValidateScriptRequest"
                    },
                    "response": {
                        "$ref": "ExecutionStatus"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                }
            },
            "resources": {
                "results": {
                    "methods": {
                        "download": {
                            "description": "Downloads the results of the given result name.",
                            "flatPath": "v2/executions/{executionsId}/results/{resultsId}:download",
                            "httpMethod": "GET",
                            "id": "plx_pa.executions.results.download",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "downloadFilename": {
                                    "description": "Optional: A filename to set the HTTP Content-Disposition header to. This is\ncurrently the only way to set the name of the file that will be downloaded\nfrom this RPC.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "maxBytes": {
                                    "description": "Optional: The maximum number of bytes to return. This is measured by the\nnumber of raw bytes in the response (including the header), not the final\ntransmitted CSV size. If a single row spans this boundary, it will return\nthat entire row, regardless of its size. To decide if a result has been\ntruncated or not, compare the number of rows returned with the value in the\n[google.internal.plx.v2.ResultMetadata] (../ResultMetadata), which can be\ngathered from a [google.internal.plx.v2.GetScriptExecution]\n(../executions/get) call.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "maxRows": {
                                    "description": "Optional: The maximum number of rows to return. If this and max_bytes are\nboth set, then the response will be truncated by whichever limit is hit\nfirst.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Required: The name of the result to download. This can be found in the\nResultMetadata in ExecutionStatus for each script node that returned\nresults.",
                                    "location": "path",
                                    "pattern": "^executions/[^/]+/results/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "resultFormat": {
                                    "description": "Required: The type of result data.",
                                    "enum": [
                                        "RESULT_TYPE_UNSPECIFIED",
                                        "CSV"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "token": {
                                    "description": "Required: The token of the execution to retrieve.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "trackingData.resourceId": {
                                    "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "trackingData.sessionId": {
                                    "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}:download",
                            "response": {
                                "$ref": "HttpBody"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "export": {
                            "description": "Exports the results of the given result name to Drive. Returns the same\nmetadata in the response as Exports.GetExport.",
                            "flatPath": "v2/executions/{executionsId}/results/{resultsId}:export",
                            "httpMethod": "POST",
                            "id": "plx_pa.executions.results.export",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required: The name of the result.",
                                    "location": "path",
                                    "pattern": "^executions/[^/]+/results/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}:export",
                            "request": {
                                "$ref": "ExportResultsRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                }
            }
        },
        "scriptExecutions": {
            "methods": {
                "cancel": {
                    "description": "Cancels a script execution. The ScriptExecution is still valid after\nthe cancellation for retrieving the status.",
                    "flatPath": "v2/scriptExecutions/{scriptExecutionsId}:cancel",
                    "httpMethod": "POST",
                    "id": "plx_pa.scriptExecutions.cancel",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required: The name of the execution to cancel.",
                            "location": "path",
                            "pattern": "^scriptExecutions/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}:cancel",
                    "request": {
                        "$ref": "CancelScriptExecutionRequest"
                    },
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "create": {
                    "description": "Creates a script execution. Returns a\n[google.internal.plx.v2.ScriptExecution] (../ScriptExecution)\nin the metadata of the\n[google.longrunning.Operation] (../executions#Operation). Response will not\ninclude results, use\n[google.internal.plx.v2.GetResults] (../executions.results/get) with the\nresult ids in the response.",
                    "flatPath": "v2/scriptExecutions",
                    "httpMethod": "POST",
                    "id": "plx_pa.scriptExecutions.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v2/scriptExecutions",
                    "request": {
                        "$ref": "CreateScriptExecutionRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "get": {
                    "description": "Gets a script execution. Returns a\n[google.internal.plx.v2.ScriptExecution] (../ScriptExecution)\nin the metadata of the\n[google.longrunning.Operation] (../executions#Operation). Response will not\ninclude results, use\n[google.internal.plx.v2.GetResults] (../executions.results/get) with the\nresult ids in the response.",
                    "flatPath": "v2/scriptExecutions/{scriptExecutionsId}",
                    "httpMethod": "GET",
                    "id": "plx_pa.scriptExecutions.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required: The name of the execution.",
                            "location": "path",
                            "pattern": "^scriptExecutions/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "token": {
                            "description": "Required: The token of the execution to retrieve.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}",
                    "response": {
                        "$ref": "Operation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "validate": {
                    "description": "Validates a script.",
                    "flatPath": "v2/scriptExecutions:validate",
                    "httpMethod": "POST",
                    "id": "plx_pa.scriptExecutions.validate",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v2/scriptExecutions:validate",
                    "request": {
                        "$ref": "ValidateScriptRequest"
                    },
                    "response": {
                        "$ref": "ExecutionStatus"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                }
            },
            "resources": {
                "results": {
                    "methods": {
                        "download": {
                            "description": "Downloads the results of the given result name.",
                            "flatPath": "v2/scriptExecutions/{scriptExecutionsId}/results/{resultsId}:download",
                            "httpMethod": "GET",
                            "id": "plx_pa.scriptExecutions.results.download",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "downloadFilename": {
                                    "description": "Optional: A filename to set the HTTP Content-Disposition header to. This is\ncurrently the only way to set the name of the file that will be downloaded\nfrom this RPC.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "maxBytes": {
                                    "description": "Optional: The maximum number of bytes to return. This is measured by the\nnumber of raw bytes in the response (including the header), not the final\ntransmitted CSV size. If a single row spans this boundary, it will return\nthat entire row, regardless of its size. To decide if a result has been\ntruncated or not, compare the number of rows returned with the value in the\n[google.internal.plx.v2.ResultMetadata] (../ResultMetadata), which can be\ngathered from a [google.internal.plx.v2.GetScriptExecution]\n(../executions/get) call.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "maxRows": {
                                    "description": "Optional: The maximum number of rows to return. If this and max_bytes are\nboth set, then the response will be truncated by whichever limit is hit\nfirst.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Required: The name of the result to download. This can be found in the\nResultMetadata in ExecutionStatus for each script node that returned\nresults.",
                                    "location": "path",
                                    "pattern": "^scriptExecutions/[^/]+/results/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "resultFormat": {
                                    "description": "Required: The type of result data.",
                                    "enum": [
                                        "RESULT_TYPE_UNSPECIFIED",
                                        "CSV"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                },
                                "token": {
                                    "description": "Required: The token of the execution to retrieve.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "trackingData.resourceId": {
                                    "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "trackingData.sessionId": {
                                    "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}:download",
                            "response": {
                                "$ref": "HttpBody"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "export": {
                            "description": "Exports the results of the given result name to Drive. Returns the same\nmetadata in the response as Exports.GetExport.",
                            "flatPath": "v2/scriptExecutions/{scriptExecutionsId}/results/{resultsId}:export",
                            "httpMethod": "POST",
                            "id": "plx_pa.scriptExecutions.results.export",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required: The name of the result.",
                                    "location": "path",
                                    "pattern": "^scriptExecutions/[^/]+/results/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}:export",
                            "request": {
                                "$ref": "ExportResultsRequest"
                            },
                            "response": {
                                "$ref": "Operation"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                }
            }
        },
        "scripts": {
            "methods": {
                "delete": {
                    "description": "Deletes a script.",
                    "flatPath": "v2/scripts/{scriptsId}",
                    "httpMethod": "DELETE",
                    "id": "plx_pa.scripts.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the script to delete.",
                            "location": "path",
                            "pattern": "^scripts/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}",
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "initialize": {
                    "description": "Creates a script and an initial revision. Note that this takes the place of\na CreateScript method because a Script on its own is not useful and doesn't\nmean anything. We opted instead for a single call that will make a Script\n(the container object) and initialize it with a revision.",
                    "flatPath": "v2/scripts:initialize",
                    "httpMethod": "POST",
                    "id": "plx_pa.scripts.initialize",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v2/scripts:initialize",
                    "request": {
                        "$ref": "InitializeScriptRequest"
                    },
                    "response": {
                        "$ref": "ScriptRevision"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                }
            },
            "resources": {
                "revisions": {
                    "methods": {
                        "create": {
                            "description": "Creates a new published revision of a script.",
                            "flatPath": "v2/scripts/{scriptsId}/revisions",
                            "httpMethod": "POST",
                            "id": "plx_pa.scripts.revisions.create",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the script to create the revision on.",
                                    "location": "path",
                                    "pattern": "^scripts/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/revisions",
                            "request": {
                                "$ref": "CreateRevisionRequest"
                            },
                            "response": {
                                "$ref": "ScriptRevision"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "get": {
                            "description": "Gets a specific revision of a script.",
                            "flatPath": "v2/scripts/{scriptsId}/revisions/{revisionsId}",
                            "httpMethod": "GET",
                            "id": "plx_pa.scripts.revisions.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the revision to retrieve, in the form\n\"scripts/[scriptid]/revision/[revisionid]. Use \"latest\" for the revisionid\nto request the latest revision.",
                                    "location": "path",
                                    "pattern": "^scripts/[^/]+/revisions/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}",
                            "response": {
                                "$ref": "ScriptRevision"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "list": {
                            "description": "Gets revisions of a script.",
                            "flatPath": "v2/scripts/{scriptsId}/revisions",
                            "httpMethod": "GET",
                            "id": "plx_pa.scripts.revisions.list",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The name of the script to list revisions on.",
                                    "location": "path",
                                    "pattern": "^scripts/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Number of revisions to retrieve. If <=0 then defaults to 15.\nThe response/page may or may not have this amount.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "Token that specifies which page is requested. If empty then the first page\nis returned.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/revisions",
                            "response": {
                                "$ref": "ListRevisionsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                }
            }
        },
        "security": {
            "resources": {
                "bindings": {
                    "methods": {
                        "batchUpdate": {
                            "description": "Updates the role bindings for a resource by replacing all existing role\nbindings with new role bindings in the request.",
                            "flatPath": "v2/security/{securityId}/bindings:batchUpdate",
                            "httpMethod": "POST",
                            "id": "plx_pa.security.bindings.batchUpdate",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Resource name. Required.",
                                    "location": "path",
                                    "pattern": "^security/.+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/bindings:batchUpdate",
                            "request": {
                                "$ref": "BatchUpdateRoleBindingsRequest"
                            },
                            "response": {
                                "$ref": "BatchUpdateRoleBindingsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "create": {
                            "description": "Adds a role binding for a resource.",
                            "flatPath": "v2/security/{securityId}/bindings",
                            "httpMethod": "POST",
                            "id": "plx_pa.security.bindings.create",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Resource name. Required.",
                                    "location": "path",
                                    "pattern": "^security/.+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/bindings",
                            "request": {
                                "$ref": "CreateRoleBindingRequest"
                            },
                            "response": {
                                "$ref": "RoleBinding"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "list": {
                            "description": "Lists the role bindings for an entity, with optional filtering.",
                            "flatPath": "v2/security/{securityId}/bindings",
                            "httpMethod": "GET",
                            "id": "plx_pa.security.bindings.list",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Resource name. Required.",
                                    "location": "path",
                                    "pattern": "^security/.+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/bindings",
                            "response": {
                                "$ref": "ListRoleBindingsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "transferOwnership": {
                            "description": "Transfers ownership for given entity and removes the old owner from ACL.",
                            "flatPath": "v2/security/{securityId}/bindings:transferOwnership",
                            "httpMethod": "POST",
                            "id": "plx_pa.security.bindings.transferOwnership",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Resource name for ownership transfer. Required.",
                                    "location": "path",
                                    "pattern": "^security/.+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/bindings:transferOwnership",
                            "request": {
                                "$ref": "TransferOwnershipRequest"
                            },
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                },
                "dashboards": {
                    "resources": {
                        "bindings": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes a role binding for a resource.\nThis deletes all roles for the specified principal on the resource.",
                                    "flatPath": "v2/security/dashboards/{dashboardsId}/bindings/{bindingsId}",
                                    "httpMethod": "DELETE",
                                    "id": "plx_pa.security.dashboards.bindings.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/dashboards/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "get": {
                                    "description": "Gets a user's roles on the specified resource.",
                                    "flatPath": "v2/security/dashboards/{dashboardsId}/bindings/{bindingsId}",
                                    "httpMethod": "GET",
                                    "id": "plx_pa.security.dashboards.bindings.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/dashboards/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "update": {
                                    "description": "Updates a role binding for a resource.",
                                    "flatPath": "v2/security/dashboards/{dashboardsId}/bindings/{bindingsId}",
                                    "httpMethod": "PUT",
                                    "id": "plx_pa.security.dashboards.bindings.update",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/dashboards/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "roleBinding.name": {
                                            "description": "Resource name.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.principal": {
                                            "description": "The principal user or group.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.roles": {
                                            "description": "Roles for the principal on a resource.\nMust not be empty. Required.",
                                            "enum": [
                                                "UNSPECIFIED_ROLE",
                                                "PEEKER",
                                                "READER",
                                                "WRITER",
                                                "OWNER",
                                                "COMMENTER",
                                                "EXECUTER"
                                            ],
                                            "location": "query",
                                            "repeated": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                }
                            }
                        }
                    }
                },
                "dataSources": {
                    "resources": {
                        "bindings": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes a role binding for a resource.\nThis deletes all roles for the specified principal on the resource.",
                                    "flatPath": "v2/security/dataSources/{dataSourcesId}/bindings/{bindingsId}",
                                    "httpMethod": "DELETE",
                                    "id": "plx_pa.security.dataSources.bindings.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/dataSources/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "get": {
                                    "description": "Gets a user's roles on the specified resource.",
                                    "flatPath": "v2/security/dataSources/{dataSourcesId}/bindings/{bindingsId}",
                                    "httpMethod": "GET",
                                    "id": "plx_pa.security.dataSources.bindings.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/dataSources/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "update": {
                                    "description": "Updates a role binding for a resource.",
                                    "flatPath": "v2/security/dataSources/{dataSourcesId}/bindings/{bindingsId}",
                                    "httpMethod": "PUT",
                                    "id": "plx_pa.security.dataSources.bindings.update",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/dataSources/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "roleBinding.name": {
                                            "description": "Resource name.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.principal": {
                                            "description": "The principal user or group.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.roles": {
                                            "description": "Roles for the principal on a resource.\nMust not be empty. Required.",
                                            "enum": [
                                                "UNSPECIFIED_ROLE",
                                                "PEEKER",
                                                "READER",
                                                "WRITER",
                                                "OWNER",
                                                "COMMENTER",
                                                "EXECUTER"
                                            ],
                                            "location": "query",
                                            "repeated": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                }
                            }
                        }
                    }
                },
                "datasites": {
                    "resources": {
                        "bindings": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes a role binding for a resource.\nThis deletes all roles for the specified principal on the resource.",
                                    "flatPath": "v2/security/datasites/{datasitesId}/bindings/{bindingsId}",
                                    "httpMethod": "DELETE",
                                    "id": "plx_pa.security.datasites.bindings.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/datasites/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "get": {
                                    "description": "Gets a user's roles on the specified resource.",
                                    "flatPath": "v2/security/datasites/{datasitesId}/bindings/{bindingsId}",
                                    "httpMethod": "GET",
                                    "id": "plx_pa.security.datasites.bindings.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/datasites/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "update": {
                                    "description": "Updates a role binding for a resource.",
                                    "flatPath": "v2/security/datasites/{datasitesId}/bindings/{bindingsId}",
                                    "httpMethod": "PUT",
                                    "id": "plx_pa.security.datasites.bindings.update",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/datasites/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "roleBinding.name": {
                                            "description": "Resource name.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.principal": {
                                            "description": "The principal user or group.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.roles": {
                                            "description": "Roles for the principal on a resource.\nMust not be empty. Required.",
                                            "enum": [
                                                "UNSPECIFIED_ROLE",
                                                "PEEKER",
                                                "READER",
                                                "WRITER",
                                                "OWNER",
                                                "COMMENTER",
                                                "EXECUTER"
                                            ],
                                            "location": "query",
                                            "repeated": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                }
                            }
                        }
                    }
                },
                "explorations": {
                    "resources": {
                        "bindings": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes a role binding for a resource.\nThis deletes all roles for the specified principal on the resource.",
                                    "flatPath": "v2/security/explorations/{explorationsId}/bindings/{bindingsId}",
                                    "httpMethod": "DELETE",
                                    "id": "plx_pa.security.explorations.bindings.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/explorations/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "get": {
                                    "description": "Gets a user's roles on the specified resource.",
                                    "flatPath": "v2/security/explorations/{explorationsId}/bindings/{bindingsId}",
                                    "httpMethod": "GET",
                                    "id": "plx_pa.security.explorations.bindings.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/explorations/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "update": {
                                    "description": "Updates a role binding for a resource.",
                                    "flatPath": "v2/security/explorations/{explorationsId}/bindings/{bindingsId}",
                                    "httpMethod": "PUT",
                                    "id": "plx_pa.security.explorations.bindings.update",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/explorations/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "roleBinding.name": {
                                            "description": "Resource name.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.principal": {
                                            "description": "The principal user or group.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.roles": {
                                            "description": "Roles for the principal on a resource.\nMust not be empty. Required.",
                                            "enum": [
                                                "UNSPECIFIED_ROLE",
                                                "PEEKER",
                                                "READER",
                                                "WRITER",
                                                "OWNER",
                                                "COMMENTER",
                                                "EXECUTER"
                                            ],
                                            "location": "query",
                                            "repeated": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                }
                            }
                        }
                    }
                },
                "permissions": {
                    "methods": {
                        "test": {
                            "description": "Returns the permissions specified in the request that the caller has on the\nspecified resource.",
                            "flatPath": "v2/security/{securityId}/permissions:test",
                            "httpMethod": "POST",
                            "id": "plx_pa.security.permissions.test",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required.",
                                    "location": "path",
                                    "pattern": "^security/.+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/permissions:test",
                            "request": {
                                "$ref": "TestPermissionsRequest"
                            },
                            "response": {
                                "$ref": "TestPermissionsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                },
                "roles": {
                    "methods": {
                        "list": {
                            "description": "Lists the roles supported by the specified entity.",
                            "flatPath": "v2/security/{securityId}/roles",
                            "httpMethod": "GET",
                            "id": "plx_pa.security.roles.list",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Resource name. Required.",
                                    "location": "path",
                                    "pattern": "^security/.+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/roles",
                            "response": {
                                "$ref": "ListSupportedRolesResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                },
                "scripts": {
                    "resources": {
                        "bindings": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes a role binding for a resource.\nThis deletes all roles for the specified principal on the resource.",
                                    "flatPath": "v2/security/scripts/{scriptsId}/bindings/{bindingsId}",
                                    "httpMethod": "DELETE",
                                    "id": "plx_pa.security.scripts.bindings.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/scripts/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "get": {
                                    "description": "Gets a user's roles on the specified resource.",
                                    "flatPath": "v2/security/scripts/{scriptsId}/bindings/{bindingsId}",
                                    "httpMethod": "GET",
                                    "id": "plx_pa.security.scripts.bindings.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/scripts/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "update": {
                                    "description": "Updates a role binding for a resource.",
                                    "flatPath": "v2/security/scripts/{scriptsId}/bindings/{bindingsId}",
                                    "httpMethod": "PUT",
                                    "id": "plx_pa.security.scripts.bindings.update",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/scripts/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "roleBinding.name": {
                                            "description": "Resource name.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.principal": {
                                            "description": "The principal user or group.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "roleBinding.roles": {
                                            "description": "Roles for the principal on a resource.\nMust not be empty. Required.",
                                            "enum": [
                                                "UNSPECIFIED_ROLE",
                                                "PEEKER",
                                                "READER",
                                                "WRITER",
                                                "OWNER",
                                                "COMMENTER",
                                                "EXECUTER"
                                            ],
                                            "location": "query",
                                            "repeated": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                }
                            }
                        }
                    }
                },
                "workflows": {
                    "resources": {
                        "bindings": {
                            "methods": {
                                "delete": {
                                    "description": "Deletes a role binding for a resource.\nThis deletes all roles for the specified principal on the resource.",
                                    "flatPath": "v2/security/workflows/{workflowsId}/bindings/{bindingsId}",
                                    "httpMethod": "DELETE",
                                    "id": "plx_pa.security.workflows.bindings.delete",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/workflows/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "Empty"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "get": {
                                    "description": "Gets a user's roles on the specified resource.",
                                    "flatPath": "v2/security/workflows/{workflowsId}/bindings/{bindingsId}",
                                    "httpMethod": "GET",
                                    "id": "plx_pa.security.workflows.bindings.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/workflows/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                },
                                "update": {
                                    "description": "Updates a role binding for a resource.",
                                    "flatPath": "v2/security/workflows/{workflowsId}/bindings/{bindingsId}",
                                    "httpMethod": "PUT",
                                    "id": "plx_pa.security.workflows.bindings.update",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Resource name. Required.",
                                            "location": "path",
                                            "pattern": "^security/workflows/[^/]+/bindings/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v2/{+name}",
                                    "request": {
                                        "$ref": "UpdateRoleBindingRequest"
                                    },
                                    "response": {
                                        "$ref": "RoleBinding"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/plx"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "workflows": {
            "methods": {
                "create": {
                    "description": "Create a Workflow entity.",
                    "flatPath": "v2/workflows",
                    "httpMethod": "POST",
                    "id": "plx_pa.workflows.create",
                    "parameterOrder": [],
                    "parameters": {
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/workflows",
                    "request": {
                        "$ref": "Workflow"
                    },
                    "response": {
                        "$ref": "Workflow"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "delete": {
                    "description": "Delete existing Workflow entity.",
                    "flatPath": "v2/workflows/{workflowsId}",
                    "httpMethod": "DELETE",
                    "id": "plx_pa.workflows.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "hardDelete": {
                            "description": "If true, the Workflow will be permanently deleted (default is false).",
                            "location": "query",
                            "type": "boolean"
                        },
                        "name": {
                            "description": "Required. Workflow name.",
                            "location": "path",
                            "pattern": "^workflows/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}",
                    "response": {
                        "$ref": "Empty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "execute": {
                    "description": "Executes a workflow. This will create a WorkflowExecution.",
                    "flatPath": "v2/workflows/{workflowsId}:execute",
                    "httpMethod": "POST",
                    "id": "plx_pa.workflows.execute",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. Workflow name.",
                            "location": "path",
                            "pattern": "^workflows/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}:execute",
                    "request": {
                        "$ref": "ExecuteWorkflowRequest"
                    },
                    "response": {
                        "$ref": "WorkflowExecution"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "get": {
                    "description": "Retrieve a Workflow entity.",
                    "flatPath": "v2/workflows/{workflowsId}",
                    "httpMethod": "GET",
                    "id": "plx_pa.workflows.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. Workflow name.",
                            "location": "path",
                            "pattern": "^workflows/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}",
                    "response": {
                        "$ref": "Workflow"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "update": {
                    "description": "Update existing Workflow entity.",
                    "flatPath": "v2/workflows/{workflowsId}",
                    "httpMethod": "PUT",
                    "id": "plx_pa.workflows.update",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. Name of entity to update.",
                            "location": "path",
                            "pattern": "^workflows/[^/]+$",
                            "required": true,
                            "type": "string"
                        },
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/{+name}",
                    "request": {
                        "$ref": "Workflow"
                    },
                    "response": {
                        "$ref": "Workflow"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                },
                "validate": {
                    "description": "Validate a workflow.",
                    "flatPath": "v2/workflows/validate",
                    "httpMethod": "POST",
                    "id": "plx_pa.workflows.validate",
                    "parameterOrder": [],
                    "parameters": {
                        "trackingData.resourceId": {
                            "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                            "location": "query",
                            "type": "string"
                        },
                        "trackingData.sessionId": {
                            "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v2/workflows/validate",
                    "request": {
                        "$ref": "Workflow"
                    },
                    "response": {
                        "$ref": "ValidateWorkflowResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/plx"
                    ]
                }
            },
            "resources": {
                "executions": {
                    "methods": {
                        "cancel": {
                            "description": "Cancels a workflow execution.",
                            "flatPath": "v2/workflows/{workflowsId}/executions/{executionsId}:cancel",
                            "httpMethod": "POST",
                            "id": "plx_pa.workflows.executions.cancel",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. Workflow-specific execution name.",
                                    "location": "path",
                                    "pattern": "^workflows/[^/]+/executions/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}:cancel",
                            "request": {
                                "$ref": "CancelWorkflowExecutionRequest"
                            },
                            "response": {
                                "$ref": "Empty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "get": {
                            "description": "Returns full status for the specified workflow execution.",
                            "flatPath": "v2/workflows/{workflowsId}/executions/{executionsId}",
                            "httpMethod": "GET",
                            "id": "plx_pa.workflows.executions.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. Requested execution name.",
                                    "location": "path",
                                    "pattern": "^workflows/[^/]+/executions/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "trackingData.resourceId": {
                                    "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "trackingData.sessionId": {
                                    "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                                    "location": "query",
                                    "type": "string"
                                },
                                "view": {
                                    "description": "Used to control data returned in response.",
                                    "enum": [
                                        "UNSPECIFIED_VIEW",
                                        "FULL",
                                        "SUMMARY"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}",
                            "response": {
                                "$ref": "WorkflowExecution"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "list": {
                            "description": "Returns full status for multiple workflow executions.",
                            "flatPath": "v2/workflows/{workflowsId}/executions",
                            "httpMethod": "GET",
                            "id": "plx_pa.workflows.executions.list",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "earliestTime": {
                                    "description": "Start of time interval of interest.",
                                    "format": "google-datetime",
                                    "location": "query",
                                    "type": "string"
                                },
                                "latestTime": {
                                    "description": "End of time interval of interest.",
                                    "format": "google-datetime",
                                    "location": "query",
                                    "type": "string"
                                },
                                "maxResults": {
                                    "description": "Limit on number of returned results.",
                                    "format": "uint64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Required. The name of the stored workflow.",
                                    "location": "path",
                                    "pattern": "^workflows/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                },
                                "trackingData.resourceId": {
                                    "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "trackingData.sessionId": {
                                    "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                                    "location": "query",
                                    "type": "string"
                                },
                                "view": {
                                    "description": "Used to control data returned in response.",
                                    "enum": [
                                        "UNSPECIFIED_VIEW",
                                        "FULL",
                                        "SUMMARY"
                                    ],
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}/executions",
                            "response": {
                                "$ref": "ListWorkflowExecutionsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        },
                        "retry": {
                            "description": "Retries a workflow execution.  This will create another instance of the\nexecution.",
                            "flatPath": "v2/workflows/{workflowsId}/executions/{executionsId}:retry",
                            "httpMethod": "POST",
                            "id": "plx_pa.workflows.executions.retry",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. Execution name.",
                                    "location": "path",
                                    "pattern": "^workflows/[^/]+/executions/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v2/{+name}:retry",
                            "request": {
                                "$ref": "RetryWorkflowExecutionRequest"
                            },
                            "response": {
                                "$ref": "WorkflowExecution"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/plx"
                            ]
                        }
                    }
                }
            }
        }
    },
    "revision": "20190920",
    "rootUrl": "https://test-plx-pa.sandbox.googleapis.com/",
    "schemas": {
        "Annotation": {
            "description": "This message represents an Annotation.",
            "id": "Annotation",
            "properties": {
                "comments": {
                    "description": "User comments associated with this annotation.",
                    "items": {
                        "$ref": "Comment"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Text describing what was expected and what was observed.",
                    "type": "string"
                },
                "details": {
                    "$ref": "AnnotationAnnotationDetails",
                    "description": "Annotation type specific details."
                },
                "name": {
                    "description": "The name of this Annotation. Annotations are currently top-level\nentities and so are of the form alerts/annotations/<annotation_id>.",
                    "type": "string"
                },
                "referenceUri": {
                    "description": "An URI with more info about this Annotation.",
                    "type": "string"
                },
                "scope": {
                    "$ref": "Scope",
                    "description": "The scope in which the Annotation occurred."
                },
                "severity": {
                    "enum": [
                        "SEVERITY_UNSPECIFIED",
                        "SEVERITY_HIGH",
                        "SEVERITY_MEDIUM",
                        "SEVERITY_LOW"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "title": {
                    "description": "Title or display name of the Annotation.",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_ALERT",
                        "TYPE_ANOMALY",
                        "TYPE_USER_ADDED"
                    ],
                    "enumDescriptions": [
                        "",
                        "Machine-generated annotation based on Plx Alerts rules.",
                        "Machine-generated annotation based on data anomalies.",
                        "User-added annotation."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AnnotationAnnotationDetails": {
            "id": "AnnotationAnnotationDetails",
            "properties": {
                "alert": {
                    "$ref": "AnnotationAnnotationDetailsAlertDetails"
                }
            },
            "type": "object"
        },
        "AnnotationAnnotationDetailsAlertDetails": {
            "id": "AnnotationAnnotationDetailsAlertDetails",
            "properties": {
                "projectId": {
                    "description": "Plx Alerts project id associated with the alert annotation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AplosChartSpecification": {
            "id": "AplosChartSpecification",
            "properties": {
                "chartSpec": {
                    "description": "The aplos chart spec.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AugmentationDataSpec": {
            "description": "Data source definition for Augmentation.",
            "id": "AugmentationDataSpec",
            "properties": {
                "creatorToken": {
                    "description": "The creator's token, required to enable creator rights.",
                    "format": "byte",
                    "type": "string"
                },
                "dataSource": {
                    "$ref": "DataSource",
                    "description": "Required. Defines the data."
                },
                "label": {
                    "description": "Optional. Label for this data.",
                    "type": "string"
                },
                "projection": {
                    "$ref": "ProjectionSpec",
                    "description": "The projection to be used to subset the data backing this projection\nrequest."
                }
            },
            "type": "object"
        },
        "AugmentationMetrics": {
            "description": "Metrics associated with the Augmentation.",
            "id": "AugmentationMetrics",
            "properties": {
                "accuracy": {
                    "description": "Accuracy as reported by the underlying algorithm. For most algorithms\nit'll be a chi_squared (goodness of fit) metric. Normalized to be between\n0 and 1.",
                    "format": "double",
                    "type": "number"
                },
                "featureAnalysis": {
                    "$ref": "FeatureAnalysisMetrics",
                    "description": "Feature analysis metrics, either reported on data when training a model or\nthe result of classification."
                },
                "regressionMetrics": {
                    "$ref": "RegressionMetrics",
                    "description": "Any metrics available after estimating a regression model."
                },
                "trainerMetrics": {
                    "$ref": "TrainerMetrics",
                    "description": "Any metrics available after training a classification model."
                }
            },
            "type": "object"
        },
        "AugmentationNodeInput": {
            "description": "Specification for input data sources for the Augmentation Node.",
            "id": "AugmentationNodeInput",
            "properties": {
                "scriptName": {
                    "$ref": "FullyQualifiedName",
                    "description": "Required. Fully-qualified name of the script to retrieve and run."
                }
            },
            "type": "object"
        },
        "AugmentationNodeOutput": {
            "description": "Specification for output data destination for the Augmentation Node.",
            "id": "AugmentationNodeOutput",
            "properties": {
                "tableName": {
                    "$ref": "FullyQualifiedName",
                    "description": "Name of table that points to the materialized ColumnIO files."
                }
            },
            "type": "object"
        },
        "AutofocusAdvancedSpec": {
            "id": "AutofocusAdvancedSpec",
            "properties": {
                "aggregateName": {
                    "description": "Optional. If breakdown_field is specified, then this is the sentinel\nsignaling that the row corresponds to aggregated input.",
                    "type": "string"
                },
                "breakdownField": {
                    "description": "Optional. The name of the column that contains breakdown dimension values\nas strings.",
                    "type": "string"
                },
                "dataNormalization": {
                    "description": "Optional. Signals that Autofocus should internally normalize the input data\nusing the given function. Output values are always returned with respect\nto the original range.",
                    "enum": [
                        "NONE",
                        "AUTO",
                        "LOG"
                    ],
                    "enumDescriptions": [
                        "No transformation.",
                        "Autofocus automatically picks a suitable transformation.",
                        "Natural logarithm. (default)"
                    ],
                    "type": "string"
                },
                "numSamples": {
                    "description": "Optional. Number of samples drawn by the MCMC algorithm.\nSee ads/zoom/autofocus/autofocus.proto#AutofocusRequest\n        .n_samples",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AutofocusSimpleSpec": {
            "description": "Parameters for Time Series analysis of the data using Autofocus. This proto\ncontains the essential parameters that are most commonly used as compared to\nthe larger, fully specified proto below.",
            "id": "AutofocusSimpleSpec",
            "properties": {
                "anomalyField": {
                    "description": "Column that will identify anomalous data points.",
                    "type": "string"
                },
                "anomalyThreshold": {
                    "enum": [
                        "UNKNOWN_ANOMALY_THRESHOLD",
                        "DEFAULT_ANOMALY_THRESHOLD",
                        "LOW_THRESHOLD",
                        "MEDIUM_THRESHOLD",
                        "HIGH_THRESHOLD"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "country": {
                    "description": "Optional. Country for loading holiday regressors. If no country is\nspecified, international holidays are loaded.",
                    "type": "string"
                },
                "granularity": {
                    "enum": [
                        "UNKNOWN_GRANULARITY",
                        "AUTO_DETECT_GRANULARITY",
                        "PER_SECOND",
                        "PER_MINUTE",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "QUARTERLY",
                        "YEARLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "lowerBoundField": {
                    "description": "Column that will contain the lower confidence bound.",
                    "type": "string"
                },
                "meanField": {
                    "description": "Optional. Names of columns that will contain the respective data.\nColumn that will contain the mean.",
                    "type": "string"
                },
                "measureField": {
                    "description": "Required. The name of the column that contains measure values as floating\npoint numbers.",
                    "type": "string"
                },
                "timeField": {
                    "description": "Required. The name of the column that contains time stamp values.",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Required. Time zone used when converting timestamps to YYYY-MM-DD format\ncompatible with Autofocus. Valid time zone values can be found here:\n//depot/google3/i18n/identifiers/timezones.cc",
                    "type": "string"
                },
                "upperBoundField": {
                    "description": "Column that will contain the upper confidence bound.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AutofocusSpec": {
            "description": "Parameters required for Time Series analysis of the data using Autofocus.",
            "id": "AutofocusSpec",
            "properties": {
                "advanced": {
                    "$ref": "AutofocusAdvancedSpec",
                    "description": "Optional. The advanced set of parameters for Autofocus."
                },
                "anomalyField": {
                    "description": "Column that will identify anomalous data points.",
                    "type": "string"
                },
                "anomalyThreshold": {
                    "description": "Optional. Desired significance level of detected anomalies. '-1' loads the\nbackend default.\nSee ads/zoom/autofocus/autofocus.proto#AutofocusRequest\n        .anomaly_threshold",
                    "format": "double",
                    "type": "number"
                },
                "country": {
                    "description": "Optional. Country for loading holiday regressors. If no country is\nspecified, international holidays are loaded.",
                    "type": "string"
                },
                "data": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the data."
                },
                "forecastParameters": {
                    "$ref": "ForecastSpec",
                    "description": "Optional: Parameters required to configure Autofocus for forecasting."
                },
                "granularity": {
                    "enum": [
                        "UNKNOWN_GRANULARITY",
                        "AUTO_DETECT_GRANULARITY",
                        "PER_SECOND",
                        "PER_MINUTE",
                        "HOURLY",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY",
                        "QUARTERLY",
                        "YEARLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "lowerBoundField": {
                    "description": "Column that will contain the lower confidence bound.",
                    "type": "string"
                },
                "meanField": {
                    "description": "Optional. Names of columns that will contain the respective data.\nColumn that will contain the mean.",
                    "type": "string"
                },
                "measureField": {
                    "description": "Required. The name of the column that contains measure values as floating\npoint numbers.",
                    "type": "string"
                },
                "timeField": {
                    "description": "Required. The name of the column that contains time stamp values.",
                    "type": "string"
                },
                "timeZone": {
                    "description": "Required. Time zone used when converting timestamps to YYYY-MM-DD format\ncompatible with Autofocus. Valid time zone values can be found here:\n//depot/google3/i18n/identifiers/timezones.cc",
                    "type": "string"
                },
                "upperBoundField": {
                    "description": "Column that will contain the upper confidence bound.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchUpdateRoleBindingsRequest": {
            "id": "BatchUpdateRoleBindingsRequest",
            "properties": {
                "roleBindings": {
                    "description": "List of new role bindings to replace current role bindings.\nAll role bindings must be for the resource specified in name field above.\nThe resource name field in the role bindings can be empty, but principal\nmust be specified. The resource name will be filled in the response.",
                    "items": {
                        "$ref": "RoleBinding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BatchUpdateRoleBindingsResponse": {
            "id": "BatchUpdateRoleBindingsResponse",
            "properties": {
                "roleBindings": {
                    "description": "List of the new role bindings for the resource.",
                    "items": {
                        "$ref": "RoleBinding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BernoulliSampleSpec": {
            "id": "BernoulliSampleSpec",
            "properties": {
                "percentage": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "BigQueryDetails": {
            "id": "BigQueryDetails",
            "properties": {
                "jobId": {
                    "description": "The ID of the job (scoped to the project).\nGet detailed status from BQ Job:\nbq --format=prettyjson show -j project-id:job_id",
                    "type": "string"
                },
                "jobUuid": {
                    "description": "The unique job ID from the BigQuery Job Service (HelixJob).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BigQueryTransferNode": {
            "description": "Runs a BigQuery data transfer.",
            "id": "BigQueryTransferNode",
            "properties": {
                "bigqueryRegion": {
                    "description": "CloudRegion name for HelixJob's location.  Helix CloudRegion enum is not\nreplicated here since it frequently changes.",
                    "type": "string"
                },
                "cloudProjectId": {
                    "description": "The cloud project id to use for billing and table name resolution.",
                    "type": "string"
                },
                "destinationTable": {
                    "description": "The destination for the transfer.",
                    "type": "string"
                },
                "quotaAccountingOwner": {
                    "description": "Used for billing.",
                    "type": "string"
                },
                "sourceStorageSystem": {
                    "description": "The direction of the transfer to/from BiqQuery.",
                    "enum": [
                        "SOURCE_STORAGE_SYSTEM_UNSPECIFIED",
                        "BIG_QUERY",
                        "PLX_STORAGE"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sourceTable": {
                    "description": "The content source.",
                    "type": "string"
                },
                "ttl": {
                    "description": "The TTL of the Plx Storage table.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BigQueryTransferNodeStatus": {
            "description": "Stores information on the status of BigQuery (Helix) API calls.",
            "id": "BigQueryTransferNodeStatus",
            "properties": {
                "bigqueryJobId": {
                    "description": "The ID of the job (scoped to the user).\nGet detailed status from BQ Job:\nbq --format=prettyjson show -j project-id:job_id",
                    "type": "string"
                },
                "bigqueryJobState": {
                    "description": "Running state of the BigQuery job.",
                    "enum": [
                        "BIG_QUERY_JOB_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "The job has not yet started.",
                        "The job is currently running.",
                        "The job is no longer running."
                    ],
                    "type": "string"
                },
                "bigqueryJobUuid": {
                    "description": "Unique id, generated by the Helix backend for the job. No subsequent job\ncan ever have this uuid.",
                    "type": "string"
                },
                "bigqueryMarterializeViewJobState": {
                    "description": "Running state of the BigQuery Materialize View job.",
                    "enum": [
                        "BIG_QUERY_JOB_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "The job has not yet started.",
                        "The job is currently running.",
                        "The job is no longer running."
                    ],
                    "type": "string"
                },
                "bigqueryMaterializeViewJobId": {
                    "description": "The ID of the job (scoped to the user).\nGet detailed status from BQ Job:\nbq --format=prettyjson show -j project-id:job_id",
                    "type": "string"
                },
                "bigqueryMaterializeViewJobUuid": {
                    "description": "Unique id, generated by the Helix backend for the job. No subsequent job\ncan ever have this uuid.",
                    "type": "string"
                },
                "bigquerySourceTable": {
                    "description": "This is the BigQuery source table to export to Plx Storage. This can be:\n1) The value of BigQueryTransferNode::source_table if the value is a table.\n2) A temporary source table if BigQueryTransferNode::source_table is a\nview.  (Views must be materialized into temp tables before being exported)\nShould contain 3 parts: project-id, dataset-id, table-id.",
                    "type": "string"
                },
                "nodeState": {
                    "description": "Where the node was the last time the node state was updated.  Used to\ndetermine where to pick up after pipelines server restarts.",
                    "enum": [
                        "UNSPECIFIED",
                        "MATERIALIZING_VIEW",
                        "BIGQUERY_EXPORTING_TABLE",
                        "PLX_STORAGE_IMPORTING_TABLE",
                        "CLEANUP_AND_FINISH"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CancelScriptExecutionRequest": {
            "id": "CancelScriptExecutionRequest",
            "properties": {
                "token": {
                    "description": "Required: The token of the execution to cancel.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "CancelWorkflowExecutionRequest": {
            "description": "A request to cancel a workflow execution.",
            "id": "CancelWorkflowExecutionRequest",
            "properties": {
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "ChangeInfo": {
            "description": "Holds information about a creation/change operation.",
            "id": "ChangeInfo",
            "properties": {
                "timestamp": {
                    "description": "Time of the change.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "user": {
                    "description": "User who performed the change. This should be in IAM short form (see\nhttp://go/plx-principalrep for details). ",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CitcLocation": {
            "description": "Identifies how to find one or more objects stored in a CitC client.",
            "id": "CitcLocation",
            "properties": {
                "citcWorkspaceId": {
                    "description": "The CitC workspace identifier. There are two supported formats...\n\nThe first is \"<username>/<workspace_number>\" format. The <workspace_number>\nfor a given workspace is generated by CitC. It can be found by going to\nCodeSearch (http://cs/), clicking on \"CitC workspaces\" and hovering over\nthe link to the desired workspace.\n\nThe second is \"<username>:<workspace_name>:<workspace_number>:citc\". This\nformat is the one used by Piper and can be seen in Critique under \"Client\".\nThis option is provided for easier cut and pasting and compatibility with\nother APIs.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClassificationSpec": {
            "description": "Parameters required for applying a classifier.",
            "id": "ClassificationSpec",
            "properties": {
                "analyzeFeatures": {
                    "description": "Flag to return feature analysis metrics.",
                    "type": "boolean"
                },
                "classField": {
                    "description": "Name of the column in the results that will contain the class labels.",
                    "type": "string"
                },
                "classifierId": {
                    "description": "Required: The classifier model to be used.",
                    "type": "string"
                },
                "data": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the unlabeled data."
                },
                "feature": {
                    "description": "Required: Input columns representing features. Each row is a feature vector\nthat serves as a data point to be classified.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "scoreField": {
                    "description": "Name of the column in the results that will contain the classification\nscore per feature vector.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClassificationTrainerSpec": {
            "description": "Parameters required for training a classifier.",
            "id": "ClassificationTrainerSpec",
            "properties": {
                "analyzeFeatures": {
                    "description": "Flag to return feature analysis metrics.",
                    "type": "boolean"
                },
                "classField": {
                    "description": "Optional. The name of a column that contains a class label per row in\nstring format. This is required if only one input data set is provided.\nOmit this field if each input data set is  already labeled as belonging to\na distinct class.",
                    "type": "string"
                },
                "feature": {
                    "description": "Required. A set of expressions such that when each is evaluated will result\nin a feature with optional weights. The entire set defines the set of\nfeatures that make up the feature vector.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "gmmParameters": {
                    "$ref": "GaussianMixtureModelParameters"
                },
                "mixedNaiveBayes": {
                    "$ref": "MixedNaiveBayes"
                },
                "modelDisplayName": {
                    "description": "Optional. Human readable name for model. Note. Model id will be used as\ndisplay name if no explicit display name is provided.",
                    "type": "string"
                },
                "svmParameters": {
                    "$ref": "SVMParameters"
                },
                "trainingData": {
                    "description": "Required. Defines the training data. If one data set is provided, column\nin the data should identify class labels. If each data set represents a\nclass, the label column can be omitted.",
                    "items": {
                        "$ref": "AugmentationDataSpec"
                    },
                    "type": "array"
                },
                "validationParameters": {
                    "$ref": "ModelValidationParameters",
                    "description": "Optional. When provided, model will be validated against the given\ntest data."
                }
            },
            "type": "object"
        },
        "ClusteringSpec": {
            "description": "Parameters for building a set of clusters from the data.",
            "id": "ClusteringSpec",
            "properties": {
                "clusterField": {
                    "description": "Optional. Column name in which cluster labels are output.",
                    "type": "string"
                },
                "clusterScoreField": {
                    "description": "Optional. Column name in which cluster scores are output.",
                    "type": "string"
                },
                "data": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the data."
                },
                "feature": {
                    "description": "Required: Input columns representing features.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "kmeans": {
                    "$ref": "KMeansParams"
                }
            },
            "type": "object"
        },
        "Comment": {
            "id": "Comment",
            "properties": {
                "comment": {
                    "description": "Comment text entered by the user.",
                    "type": "string"
                },
                "createTime": {
                    "description": "Time at which the comment was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "user": {
                    "description": "LDAP of the person who made the comment (e.g. \"sergey\").",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ComponentAnalysisSpec": {
            "id": "ComponentAnalysisSpec",
            "properties": {
                "comparisonData": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the comparison data."
                },
                "contributionScoreField": {
                    "description": "Optional: Field (column) name in which contribution scores are output.\nComponent analysis data is returned in tabular form such that each row\ncontains the contribution by one set of sub-trees of the hierarchies to a\nparticular domain point. The table has one column for the domain values,\none for the contribution score, and a column for each dimension in the\nhierarchies identified in the request.",
                    "type": "string"
                },
                "dimensionHierarchy": {
                    "description": "Required: Set of fields organized by the hierarchical structure of the\ndimensions in the data. i.e. regional hierarchy: Region, country, city vs\nCustomer hierarchy: Company, division, product.",
                    "items": {
                        "$ref": "DimensionHierarchy"
                    },
                    "type": "array"
                },
                "domainField": {
                    "description": "Required: Name of the field or column in the data that contains the primary\ndomain values.",
                    "type": "string"
                },
                "domainValue": {
                    "description": "Optional: Primary domain values that actually have to be analyzed. If no\ndomain values are provided, component analysis will be run over all domain\npoints in the data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "metricAttributionField": {
                    "description": "Optional: Field (column) name in which metric attributions are output.\nFor each component, this is the actual amount of deviation of the top level\nmetric attributed to this component. Some components may get attribution\nvalues that are greater than the top level aggregation delta because\nanother component may have opposing impact.",
                    "type": "string"
                },
                "metricExpression": {
                    "description": "Required: Expression that defines the aggregating metric to be decomposed.",
                    "type": "string"
                },
                "referenceData": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the reference data."
                },
                "waterfall": {
                    "$ref": "WaterfallParameters"
                }
            },
            "type": "object"
        },
        "CreateAugmentationRequest": {
            "description": "An augmentation creation request.",
            "id": "CreateAugmentationRequest",
            "properties": {
                "autofocusSpec": {
                    "$ref": "AutofocusSpec",
                    "description": "Parameters for time-series analysis using Autofocus."
                },
                "classificationSpec": {
                    "$ref": "ClassificationSpec",
                    "description": "Parameters for classifying a set of feature vectors."
                },
                "clusteringSpec": {
                    "$ref": "ClusteringSpec",
                    "description": "Parameters for clustering input points."
                },
                "componentAnalysisSpec": {
                    "$ref": "ComponentAnalysisSpec",
                    "description": "Parameters for component analysis. Component analysis uses two data\nsets. The first one is used as the comparison data and the second data\nset will be used as the reference."
                },
                "predictionSpec": {
                    "$ref": "PredictionSpec",
                    "description": "Parameters for predicting output based on an existing regression model."
                },
                "regressionModelSpec": {
                    "$ref": "RegressionModelEstimationSpec",
                    "description": "Parameters for estimating a regression model."
                },
                "regressionSpec": {
                    "$ref": "RegressionSpec",
                    "description": "Parameters for ephemeral Regression estimates (no models are persisted)."
                },
                "securityToken": {
                    "description": "The security token that specifies the user credentials to use when creating\nthis analysis.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                },
                "trainerSpec": {
                    "$ref": "ClassificationTrainerSpec",
                    "description": "Parameters for model building."
                },
                "validationSpec": {
                    "$ref": "ModelValidationSpec",
                    "description": "Parameters for standalone validation."
                }
            },
            "type": "object"
        },
        "CreateDriveFileExportDestination": {
            "description": "New Drive file export job destination.",
            "id": "CreateDriveFileExportDestination",
            "properties": {
                "mimeType": {
                    "description": "The MIME type of the file. The following types are supported:\n  application/vnd.google-apps.spreadsheet - creates a Spreadsheet document\n  text/csv - creates a raw CSV file",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the file to create.",
                    "type": "string"
                },
                "parents": {
                    "description": "The IDs of the parent folders which contain the file. If not specified\nthe file will be placed directly in the My Drive folder.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CreateRevisionRequest": {
            "id": "CreateRevisionRequest",
            "properties": {
                "revision": {
                    "$ref": "ScriptRevision",
                    "description": "The revision to create."
                }
            },
            "type": "object"
        },
        "CreateRoleBindingRequest": {
            "id": "CreateRoleBindingRequest",
            "properties": {
                "roleBinding": {
                    "$ref": "RoleBinding",
                    "description": "Role binding to add to the resource. Required."
                }
            },
            "type": "object"
        },
        "CreateScriptExecutionRequest": {
            "id": "CreateScriptExecutionRequest",
            "properties": {
                "executionContext": {
                    "$ref": "ScriptExecutionContext",
                    "description": "Required: All the information needed to start an execution."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "CsvDataSource": {
            "description": "The object that contains inline data and the metadata for the fields\n(columns).",
            "id": "CsvDataSource",
            "properties": {
                "data": {
                    "description": "Inlined data in RFC 4180 compliant CSV format. First row must be a header\nrow with field names.",
                    "type": "string"
                },
                "fieldNameToType": {
                    "additionalProperties": {
                        "enum": [
                            "UNKNOWN_FIELD_TYPE",
                            "EMPTY",
                            "NUMBER",
                            "BOOLEAN",
                            "TEXT",
                            "TIMESTAMP_MS",
                            "TIMESTAMP_US",
                            "DATE_YYYYMMDD"
                        ],
                        "type": "string"
                    },
                    "description": "Field name to type mapping. If any field names are absent, text type\nis assumed. If the map is missing, all fields are treated as text.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "CustomFunction": {
            "description": "A message which contains a table value function (TVF) or user defined\nfunction (UDF).",
            "id": "CustomFunction",
            "properties": {
                "code": {
                    "description": "Required: The function code in the language/type specified.",
                    "type": "string"
                },
                "type": {
                    "description": "Required: The type/language of the code provided.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "LUA",
                        "JS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DasnavImportNode": {
            "description": "Triggers a DASNav import and waits for it to complete.",
            "id": "DasnavImportNode",
            "properties": {
                "autoreshard": {
                    "description": "Automatically reshard the Nav data to meet DASNav's sharding requirements.\nFor example, increase sharding if there over 2M rows per shard or decrease\nit if there are less than 100000 rows per shard. See\nhttp://go/dasnav/importing/columnio-and-csv-import",
                    "type": "boolean"
                },
                "cubeId": {
                    "description": "Identifier of the cube to import into. When empty, data will\nbe imported in the default cube. See http://go/dasnav-cube for more.",
                    "type": "string"
                },
                "dropExcessFiles": {
                    "description": "For APPEND imports into dremel-based Navs only, this will automatically\nremove just enough data files from the Dremel table to get under max-files\nquota. Files with older dates get removed first. Fails when more than\na certain percentage of the total number of files are about to be deleted.",
                    "type": "boolean"
                },
                "mode": {
                    "description": "Required. DASNav import mode.",
                    "enum": [
                        "MODE_UNSPECIFIED",
                        "APPEND",
                        "REPLACE"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Append.",
                        "Replace."
                    ],
                    "type": "string"
                },
                "navId": {
                    "description": "Required. Identifier of the navigator to import into. Will be directly\ncopied into the 'nav_id' field in the DASNav import request.",
                    "type": "string"
                },
                "sourcePath": {
                    "description": "Required. Source path for the import. Will be processed for variable\nreplacement, then copied into the 'source_path' field in the DASNav import\nrequest.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DasnavImportStatus": {
            "description": "Stores status information for DasnavImportNode.",
            "id": "DasnavImportStatus",
            "properties": {
                "description": {
                    "description": "Output only. Extended status description for the import. May contain\nunsafe characters and should be escaped before displaying on a web page.",
                    "type": "string"
                },
                "status": {
                    "description": "Output only. Status of the import.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DataSource": {
            "description": "The data definition that encapsulates the underlying data for projections and\naugmentations.",
            "id": "DataSource",
            "properties": {
                "csvSource": {
                    "$ref": "CsvDataSource",
                    "description": "Inlined data in RFC 4180 compliant CSV format."
                },
                "pdServingSource": {
                    "$ref": "PowerDrillDataSource",
                    "description": "PowerDrill data source."
                },
                "querySource": {
                    "$ref": "ProjectionDataSource"
                }
            },
            "type": "object"
        },
        "DimensionHierarchy": {
            "description": "A data hierarchy.",
            "id": "DimensionHierarchy",
            "properties": {
                "dimension": {
                    "description": "The fully qualified names of the dimension fields that form this hierarchy.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DocumentLocation": {
            "description": "Describes a location inside a document.",
            "id": "DocumentLocation",
            "properties": {
                "column": {
                    "description": "The column number within the document.\nStarts with 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "line": {
                    "description": "The line number within the document.\nStarts with 1.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DremelDetails": {
            "description": "Dremel-specific execution details",
            "id": "DremelDetails",
            "properties": {
                "cpuTime": {
                    "format": "double",
                    "type": "number"
                },
                "executionTimeS": {
                    "format": "double",
                    "type": "number"
                },
                "formattedStats": {
                    "description": "A pre-formatted string that contains detailed stats and debugging\ninformation. The contents of this field are analogous to the Dremel `stats`\ncommand and are for display purposes only. Clients must not depend on the\nexact format, which may change without warning.",
                    "type": "string"
                },
                "ioTime": {
                    "format": "double",
                    "type": "number"
                },
                "liveQueryUrl": {
                    "description": "Optional: The URL for viewing the live query page in Dremel.",
                    "type": "string"
                },
                "numBytesRead": {
                    "format": "double",
                    "type": "number"
                },
                "numBytesTransferred": {
                    "format": "double",
                    "type": "number"
                },
                "numMaterializedRows": {
                    "format": "int64",
                    "type": "string"
                },
                "numScannedRows": {
                    "format": "double",
                    "type": "number"
                },
                "queryLogUrl": {
                    "description": "Optional: The URL for viewing the logged query page in Dremel.",
                    "type": "string"
                },
                "queryQueueTimeS": {
                    "format": "double",
                    "type": "number"
                },
                "totalTimeS": {
                    "description": "Optional: Extracted from the dremel.QueryReplyStatistics proto.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DriveExport": {
            "description": "Drive destination export job status.",
            "id": "DriveExport",
            "properties": {
                "id": {
                    "description": "The id of the file to which the job exported data.",
                    "type": "string"
                },
                "viewLink": {
                    "description": "The link to view the file to which the job exported data.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DriveExportDestination": {
            "description": "Drive export job destination.",
            "id": "DriveExportDestination",
            "properties": {
                "create": {
                    "$ref": "CreateDriveFileExportDestination",
                    "description": "New drive file export destination."
                },
                "updateSheet": {
                    "$ref": "UpdateGoogleSheetExportDestination",
                    "description": "Existing Google Sheet export destination."
                }
            },
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "EntityMetadata": {
            "description": "Holds entity metadata that is common to all PlxDB entities.",
            "id": "EntityMetadata",
            "properties": {
                "creationInfo": {
                    "$ref": "ChangeInfo",
                    "description": "Output only. Entity creation metadata."
                },
                "lastModificationInfo": {
                    "$ref": "ChangeInfo",
                    "description": "Output only. Information about the last modification to the Entity."
                }
            },
            "type": "object"
        },
        "EntityUpdateTime": {
            "description": "Entity/update time pair.",
            "id": "EntityUpdateTime",
            "properties": {
                "name": {
                    "description": "Output only. The entity's name.",
                    "type": "string"
                },
                "updateTime": {
                    "description": "Output only. The entity's update time.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExecuteWorkflowRequest": {
            "description": "A request to delete a workflow.",
            "id": "ExecuteWorkflowRequest",
            "properties": {
                "nodesToStart": {
                    "description": "List of specific node identifiers within the pipeline to run. All other\nnodes will be skipped and marked with state SUCCESS. Dependency ordering\nwill be followed (Ex: Execution starts at the root node. If any node fails,\nits children will not run). Nodes may have at most one appearance in this\nlist. If this list is empty then the entire pipeline will run normally.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "parameterOverrides": {
                    "$ref": "ParameterOverride",
                    "description": "Parameters to override values for.  Values specified here that are also\ndefined as variables or variable sets evaluated at startup will use these\nvalues instead."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "ExecutionStatistics": {
            "description": "An object that contains query execution statistics.",
            "id": "ExecutionStatistics",
            "properties": {
                "endTimeMs": {
                    "description": "The time at which the current attempt entered the DONE state in\nmilliseconds since epoc.",
                    "format": "int64",
                    "type": "string"
                },
                "percentComplete": {
                    "description": "The percentage of work that has been performed.",
                    "format": "int32",
                    "type": "integer"
                },
                "startTimeMs": {
                    "description": "The time at which the current attempt entered the RUNNING state in\nmilliseconds since epoc.",
                    "format": "int64",
                    "type": "string"
                },
                "submittedTimeMs": {
                    "description": "The time at which the job was submitted in milliseconds since epoc.",
                    "format": "int64",
                    "type": "string"
                },
                "timeRemainingSec": {
                    "description": "The time remaining until 100%.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ExecutionStatus": {
            "description": "A tree-like structure which reports the status of a script execution.\nThe top-level node in the tree reports the overall (aggregate) status for\nthe script.  Each child node reports the status of a single statement.\n\"Run script\" statements have sub-statuses for each statement in the sub-\nscript.",
            "id": "ExecutionStatus",
            "properties": {
                "bigQueryDetails": {
                    "$ref": "BigQueryDetails",
                    "description": "Optional: Information about the BigQuery execution."
                },
                "childNode": {
                    "description": "Optional: Status of any child nodes.",
                    "items": {
                        "$ref": "ExecutionStatus"
                    },
                    "type": "array"
                },
                "dremelDetails": {
                    "$ref": "DremelDetails",
                    "description": "Optional: Dremel query details."
                },
                "endTime": {
                    "description": "Required when state = DONE: The time execution ended.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "f1Details": {
                    "$ref": "F1Details",
                    "description": "Optional: Full F1 Query Info as provided by the F1 service."
                },
                "logMessage": {
                    "description": "Optional: Log messages from plx and query engines.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                },
                "percentComplete": {
                    "description": "Required: The progress of the execution [0-100].",
                    "format": "int32",
                    "type": "integer"
                },
                "resultMetadata": {
                    "$ref": "GoogleInternalPlxV2ScriptResultMetadata",
                    "description": "Optional: Information about the result of the query."
                },
                "startTime": {
                    "description": "Required when state >= EXECUTING: The time execution started",
                    "format": "google-datetime",
                    "type": "string"
                },
                "state": {
                    "description": "Required: The current state of the execution.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "PENDING",
                        "EXECUTING",
                        "PROCESSING_RESULT",
                        "DONE"
                    ],
                    "enumDescriptions": [
                        "Unspecified.",
                        "Execution is queued and awaiting an executor.",
                        "Execution has been picked up and has been started.",
                        "Execution has completed, and the result is being processed.",
                        "Execution has finished.  See status_code to determine\nsuccess/failure."
                    ],
                    "type": "string"
                },
                "statement": {
                    "$ref": "Statement",
                    "description": "Required if this is a leaf/statement node: The statement being executed.\nThe statement contents may be truncated for efficiency reasons."
                },
                "statusCode": {
                    "description": "Required if state == DONE: The terminal status of the execution.\nThis is a coarse-grained indication of how the execution finished.\nWe use the Google3 canonical error space: go/canonical-errors",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Export": {
            "description": "A Plx export resource.",
            "id": "Export",
            "properties": {
                "drive": {
                    "$ref": "DriveExport",
                    "description": "The export resource created by exporting to Drive."
                }
            },
            "type": "object"
        },
        "ExportDestination": {
            "description": "An export job destination.",
            "id": "ExportDestination",
            "properties": {
                "drive": {
                    "$ref": "DriveExportDestination",
                    "description": "Drive export destination."
                }
            },
            "type": "object"
        },
        "ExportMetadata": {
            "id": "ExportMetadata",
            "properties": {
                "executionStatistics": {
                    "$ref": "ExecutionStatistics",
                    "description": "This export's execution statistics."
                },
                "logMessage": {
                    "description": "Non-fatal messages propagated from server.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                },
                "state": {
                    "description": "This export's state.",
                    "enum": [
                        "UNKNOWN_EXECUTION_STATE",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "An entity that has been submitted but not processed yet.",
                        "An entity that is currently being executed.",
                        "An entity that has been successfully or unsuccessfully completed."
                    ],
                    "type": "string"
                },
                "token": {
                    "description": "This export's token. This token may change with each request. The last\nreturned value must be sent with subsequent export get requests.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportResultsRequest": {
            "id": "ExportResultsRequest",
            "properties": {
                "destination": {
                    "$ref": "ExportDestination",
                    "description": "Required: The destination to export to."
                },
                "nullMarker": {
                    "description": "The string to use in place of top-level NULL values. Defaults to \"null\"\n(without the quotes).\n",
                    "type": "string"
                },
                "token": {
                    "description": "Required: The token of the execution to retrieve.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "ExpressionField": {
            "description": "An object that contains the unparsed string representation of an expression.",
            "id": "ExpressionField",
            "properties": {
                "expression": {
                    "description": "Required. String representation of a simple or custom expression used in\ndimensions, simple selected columns or measures.",
                    "type": "string"
                },
                "outputColumn": {
                    "description": "Required. The column name to output values as.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "F1Details": {
            "description": "F1-specific execution details.",
            "id": "F1Details",
            "properties": {
                "executionTimeMs": {
                    "description": "Extracted from the f1.QueryInfo proto.",
                    "format": "double",
                    "type": "number"
                },
                "numBytesRead": {
                    "format": "double",
                    "type": "number"
                },
                "numBytesTransferred": {
                    "format": "double",
                    "type": "number"
                },
                "numScannedRows": {
                    "format": "double",
                    "type": "number"
                },
                "parsingAndAnalysisTimeMs": {
                    "format": "double",
                    "type": "number"
                },
                "planningTimeMs": {
                    "format": "double",
                    "type": "number"
                },
                "schedulingTimeMs": {
                    "format": "double",
                    "type": "number"
                },
                "taskDetailsUrl": {
                    "description": "The F1 task details URL.",
                    "type": "string"
                },
                "workerCpuS": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Feature": {
            "id": "Feature",
            "properties": {
                "bucketingStrategy": {
                    "$ref": "FeatureBucketingStrategy",
                    "description": "Optional: Bucketing strategy for numerical features used in subset of\ntraining algorithms. Currently only MixedNaiveBayes."
                },
                "field": {
                    "description": "Required: The name of the column that contains values for a feature value.\nThis column name will be used as the feature name.",
                    "type": "string"
                },
                "weight": {
                    "description": "Optional: If the feature has weights, the weight for this feature as a\nnormalized number from 0 to 1.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FeatureAnalysisMetrics": {
            "description": "Metrics that result from feature analysis.",
            "id": "FeatureAnalysisMetrics",
            "properties": {
                "correlatedFeatures": {
                    "description": "Feature correlation scores.",
                    "items": {
                        "$ref": "ScoredFeatureTuple"
                    },
                    "type": "array"
                },
                "salientFeatureScores": {
                    "description": "Feature saliency weights returned.",
                    "items": {
                        "$ref": "ScoredFeatureTuple"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FeatureBucketingStrategy": {
            "description": "Bucketing strategy to convert numeric features into a low-cardinality\nnominal feature type.",
            "id": "FeatureBucketingStrategy",
            "properties": {
                "distribution": {
                    "$ref": "FeatureBucketingStrategyDistributionBased"
                },
                "entropy": {
                    "$ref": "FeatureBucketingStrategyEntropyBased"
                },
                "equalFrequency": {
                    "$ref": "FeatureBucketingStrategyEqualFrequency"
                },
                "fixedWidth": {
                    "$ref": "FeatureBucketingStrategyFixedWidth"
                }
            },
            "type": "object"
        },
        "FeatureBucketingStrategyDistributionBased": {
            "id": "FeatureBucketingStrategyDistributionBased",
            "properties": {
                "distributionType": {
                    "enum": [
                        "UNKNOWN_DISTRIBUTION",
                        "NORMAL"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FeatureBucketingStrategyEntropyBased": {
            "id": "FeatureBucketingStrategyEntropyBased",
            "properties": {
                "algorithm": {
                    "enum": [
                        "UNKNOWN_ENTROPY_ALGORITHM",
                        "MDLP"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FeatureBucketingStrategyEqualFrequency": {
            "id": "FeatureBucketingStrategyEqualFrequency",
            "properties": {
                "numBuckets": {
                    "description": "Indicates that the features should be divided into mixed-width buckets\nsuch that total frequency of all features in each bucket is equalized.\nTotal number of buckets is num_buckets (required).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FeatureBucketingStrategyFixedWidth": {
            "id": "FeatureBucketingStrategyFixedWidth",
            "properties": {
                "numBuckets": {
                    "description": "Indicates that features should be added to a set of fixed width buckets\nwith the total buckets set to num_buckets (required).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilterSpec": {
            "description": "A data filter specification.",
            "id": "FilterSpec",
            "properties": {
                "expression": {
                    "description": "Required: The expression that this filter is applied to. It can either be\na column name or a custom expression. Examples:\n<ul>\n<li>column_1\n<li>column_1 + column_2\n<li>FLOOR(column_1) * column_3\n<li>CONCAT('string', column_1)\n<li>MAX(column_1)\n</ul>\nIf the expression only contains non-aggregated input columns, it will be\napplied pre-aggregation (e.g. sql where clause). If it contains\naggregations it will be applied post aggregation (e.g. sql having clause).",
                    "type": "string"
                },
                "operation": {
                    "description": "Required: The filtering operation to perform.",
                    "enum": [
                        "UNKNOWN_OPERATION",
                        "EQ",
                        "NOT_EQ",
                        "LESS_THAN",
                        "LESS_THAN_OR_EQ",
                        "GREATER_THAN",
                        "GREATER_THAN_OR_EQ",
                        "IS_NULL",
                        "IS_NOT_NULL",
                        "IS_INF",
                        "IS_NOT_INF",
                        "IS_NAN",
                        "IS_NOT_NAN",
                        "IN",
                        "NOT_IN",
                        "BETWEEN",
                        "NOT_BETWEEN"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "inclusive at both ends.",
                        "exclusive at both ends."
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "Required: The values to be passed to the filter.\nIf more values are provided than the filter Operation requires, then they\nwill be ignored.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ForecastSpec": {
            "id": "ForecastSpec",
            "properties": {
                "duration": {
                    "description": "Optional: Duration (in ISO8601 format: i.e. P[n]Y[n]M[n]DT[n]H[n]M[n]S\n to forecast out to. When present, additional time points in the specified\ngranularity are extrapolated from the end of the input time values.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FullyQualifiedName": {
            "id": "FullyQualifiedName",
            "properties": {
                "nameParts": {
                    "description": "The name parts together comprise one fully qualified name (FQN).  Order is\nsignificant, so {\"a\", \"b\"} is a different FQN than {\"b\", \"a\"}.  In a query\nsuch as:\n\n  SELECT COUNT(*) FROM ads.AdQueries.yesterday;\n\nthe FullyQualifiedName for the table would look like:\n\n  table_name {\n    name_parts: \"ads\"\n    name_parts: \"AdQueries\"\n    name_parts: \"yesterday\"\n  }\n\nThe semantics of the name parts depend on how the FQN is used.  For\nexample, for tables, the last name part could be interpreted as a table\nsuffix, with the next-to-last name part being the table's local name.\nFor other entity types, the last name part is the entity's local name.\nFor all entity types, all name parts before the local name are namespace\nparts.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GaussianMixtureModelParameters": {
            "description": "Subset of parameters supported for GMM models. More details here:\nresearch/ocr/proto/gaussian_mixture_model_trainer.proto&l=48.",
            "id": "GaussianMixtureModelParameters",
            "properties": {
                "maxNumComponents": {
                    "description": "Maximum number of components per mixture.",
                    "format": "int32",
                    "type": "integer"
                },
                "mixtureMaxSamples": {
                    "description": "Maximum number of training samples to load in memory for each\nmixture model. This has to be non-zero and greater than\ntarget_min_component_samples. See comment below.",
                    "format": "int32",
                    "type": "integer"
                },
                "targetMinComponentSamples": {
                    "description": "Target minimum number of samples per component, should be non-zero.\nThis number should be less than mixture_max_samples/max_num_components.\nThis number should strictly less than mixture_max_samples. Invalid\nvalues will not be applied.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleCloudDatahubV2EnumType": {
            "description": "Describes the structure of an ENUM type.",
            "id": "GoogleCloudDatahubV2EnumType",
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "items": {
                        "$ref": "GoogleCloudDatahubV2EnumTypeValue"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleCloudDatahubV2EnumTypeValue": {
            "id": "GoogleCloudDatahubV2EnumTypeValue",
            "properties": {
                "name": {
                    "type": "string"
                },
                "number": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleCloudDatahubV2GoogleSqlType": {
            "description": "Represents a type in the schema.",
            "id": "GoogleCloudDatahubV2GoogleSqlType",
            "properties": {
                "arrayType": {
                    "$ref": "GoogleCloudDatahubV2GoogleSqlTypeArrayType",
                    "description": "For ARRAY only"
                },
                "enumName": {
                    "description": "For ENUM only",
                    "type": "string"
                },
                "messageName": {
                    "description": "For STRUCT & PROTO only",
                    "type": "string"
                },
                "typeKind": {
                    "enum": [
                        "KIND_UNSPECIFIED",
                        "INT32",
                        "INT64",
                        "UINT32",
                        "UINT64",
                        "BOOL",
                        "FLOAT",
                        "DOUBLE",
                        "STRING",
                        "BYTES",
                        "DATE",
                        "ENUM",
                        "ARRAY",
                        "STRUCT",
                        "PROTO",
                        "TIMESTAMP",
                        "TIME",
                        "DATETIME",
                        "GEOGRAPHY",
                        "NUMERIC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Message",
                        "Message",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudDatahubV2GoogleSqlTypeArrayType": {
            "description": "Describes the structure of an ARRAY type.",
            "id": "GoogleCloudDatahubV2GoogleSqlTypeArrayType",
            "properties": {
                "elementType": {
                    "$ref": "GoogleCloudDatahubV2GoogleSqlType"
                }
            },
            "type": "object"
        },
        "GoogleCloudDatahubV2MessageType": {
            "description": "Describes the structure of a PROTO message or GoogleSQL STRUCT type.",
            "id": "GoogleCloudDatahubV2MessageType",
            "properties": {
                "fields": {
                    "items": {
                        "$ref": "GoogleCloudDatahubV2MessageTypeField"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The full name of the message, including package.\nIn the case of STRUCT types, this will be an auto-generated name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleCloudDatahubV2MessageTypeField": {
            "id": "GoogleCloudDatahubV2MessageTypeField",
            "properties": {
                "isProto2Extension": {
                    "description": "Set to \"true\" if this field represents a proto2 extension.\nWhen true, proto2 extension syntax must be used in field path expressions\n- http://go/googlesqlprotos.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Optional: The name of the field.\nMay be empty in the case of anonymous struct fields.\nMay be non-unique in structs.\nMay or may not be a valid SQL identifier.\nMust be quoted/escaped prior to using in a sql expression.",
                    "type": "string"
                },
                "type": {
                    "$ref": "GoogleCloudDatahubV2GoogleSqlType",
                    "description": "Required. The type of the data contained within the field."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAlert": {
            "description": "This message represents an event of a type that someone has requested to be\nnotified of.",
            "id": "GoogleInternalPlxV2AlertAlert",
            "properties": {
                "anomalyTimeSeries": {
                    "$ref": "GoogleInternalPlxV2AlertAnomalyTimeSeries",
                    "description": "Data that was analyzed and outcome of the analysis."
                },
                "assignee": {
                    "description": "Username (without any prefixes or suffixes) of the person responsible for\nresolving this alert, e.g. \"sergey\".\n\nUnless the alert is linked to a Buganizer issue, the assignee must be\nalready in the \"alert_readers\" field of the Project. Eg: \"sergey\".\n\nChanging this field when the alert is not resolved will cause an email\nnotification to both the old and new assignees, in addition to the\nrecipients listed in the alert's cc field.",
                    "type": "string"
                },
                "cc": {
                    "description": "List of email addresses that, along with the assignee, will receive updates\nfor this alert.\n\nAt alert creation time this field is automatically populated from the\ncorresponding rule and email notification settings. Once the alert is\ncreated further changes to the rule or project email notification settings\nwill not be propagatated to it. The only way this field will then change is\nthrough user-initiated updates to the alert itself.\n\nAddresses can be individuals (e.g. \"page@google.com\"), gaia groups (e.g.\n\"plx-alerts-team@google.com\"), mdb groups (e.g.\n\"mdb.plx-alerts-jobs@google.com\") or Rotations aliases (e.g.\nplx-alerts-team@grotations.appspotmail.com).\n",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "changeHistoryEntries": {
                    "description": "Change history for this alert.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertChangeHistoryEntry"
                    },
                    "type": "array"
                },
                "customFields": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAlertCustomField"
                    },
                    "type": "array"
                },
                "duplicateOf": {
                    "description": "Name of the alert that this alert is a duplicate of. Empty if this alert is\nnot a duplicate. If set it must refer to a valid alert name within the same\nproject.\nSince describing this alert as a duplicate of another alert, any calls to\nupdate this alert should also mark it as resolved.",
                    "type": "string"
                },
                "issueId": {
                    "description": "Optional. This field represents the buganizer issue id linked to this\nalert. This field can only be set through the UpdateAlertBuganizerIssue\nmethod. An issue_id can only be linked to at most 1 alert across all Plx\nAlerts. See go/plx-alerts-user-guide#buganizer.",
                    "format": "int64",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "GoogleInternalPlxV2AlertBackendMetadata",
                    "description": "The most recent metadata about the source of this time series. This is a\nstripped-down version with only the parts that are used in the enclosing\nalert.  This is used for FE rendering only."
                },
                "name": {
                    "description": "Full and unique resource name of this alert, of the form\n\n  alerts/projects/<project_id>/alerts/<alert_id>\n\n<alert_id> is auto-generated by the Plx Alerts system and cannot be\nmodified.",
                    "type": "string"
                },
                "resolution": {
                    "enum": [
                        "RESOLUTION_UNSPECIFIED",
                        "USEFUL_OTHER",
                        "USEFUL_ACTIONABLE",
                        "USEFUL_INTERESTING",
                        "USEFUL_WORKS_AS_INTENDED",
                        "USEFUL_LATE_DATA",
                        "NOT_USEFUL_DUPLICATE",
                        "NOT_USEFUL_INSIGNIFICANT",
                        "NOT_USEFUL_INEXPLICABLE",
                        "NOT_USEFUL_LATE_DATA",
                        "NOT_USEFUL_RULE_ISSUE",
                        "NOT_USEFUL_OTHER",
                        "NEUTRAL_UNREVIEWED",
                        "NEUTRAL_AUTORESOLVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "ruleInstance": {
                    "$ref": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance",
                    "description": "The most recent snapshot of the rule instance that caused this alert. This\nis updated every time we re-analyze data."
                },
                "state": {
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "STATE_NEW",
                        "STATE_ASSIGNED",
                        "STATE_RESOLVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAlertCustomField": {
            "description": "These values are defined in custom_alert_fields of the corresponding\nproject.",
            "id": "GoogleInternalPlxV2AlertAlertCustomField",
            "properties": {
                "id": {
                    "type": "string"
                },
                "value": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAlertListingOptions": {
            "description": "Settings to control how the alerts listing in the web frontend looks like.",
            "id": "GoogleInternalPlxV2AlertAlertListingOptions",
            "properties": {
                "customFieldIds": {
                    "description": "Determines which of the set of all custom fields specified at the\nProject.rules level, to display as columns.\n\nCustom fields not present here will be shown only on the alert details\npage.\n\n*** WARNING ***\nIf the order of these fields is changed, alerts need to be re-indexed.\nPlease contact plx-alerts-team@ for assistance with that.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "defaultSortColumn": {
                    "description": "Determines which column to use for sorting by default. If unset, the alerts\nwill be sorted by alert fire time.\n\nCustomField developers: due to limitations in the underlying indexing\nservice, all numbers that round to the same integer are considered equal.\nThe smallest significant difference should therefore be at least 1, and all\nnumbers should not be much bigger than a billion (in magnitude).",
                    "enum": [
                        "SORT_COLUMN_UNSPECIFIED",
                        "CUSTOM_FIELD",
                        "STATE",
                        "ASSIGNEE",
                        "MONITORED_TIME",
                        "FIRE_TIME"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "defaultSortCustomField": {
                    "description": "Which custom field to use for default sorting. Ignored unless\ndefault_sort_column = SORT_COLUMN_CUSTOM_FIELD.",
                    "type": "string"
                },
                "sortOrder": {
                    "description": "If set, this overrides the default value that the Plx Alerts web frontend\nuses for the SearchRequest.sort_ascending used for retrieving alerts.",
                    "enum": [
                        "SORT_ORDER_UNSPECIFIED",
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "enumDescriptions": [
                        "Default value, do not use this.",
                        "Sort ascending.",
                        "Sort descending."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAlertMatchingParameters": {
            "description": "Allows the silence to target different alert properties.",
            "id": "GoogleInternalPlxV2AlertAlertMatchingParameters",
            "properties": {
                "ruleInstanceName": {
                    "description": "Name of the rule instance to be silenced.",
                    "type": "string"
                },
                "ruleName": {
                    "description": "Name of the rule to be silenced.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAnomaly": {
            "id": "GoogleInternalPlxV2AlertAnomaly",
            "properties": {
                "createTime": {
                    "description": "Time at which this anomaly was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "detectorResult": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorResult",
                    "description": "Detector specific details about the anomaly."
                },
                "monitoredTime": {
                    "description": "Time where the anomaly occurred. Identical to\ntime_series[len(time_series)-1].time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "observed": {
                    "description": "Observed time series value considered anomalous. Identical to\ntime_series[len(time_series)-1].value.",
                    "format": "double",
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "ANOMALY_TYPE_UNSPECIFIED",
                        "NOT_ANOMALOUS",
                        "ABOVE_EXPECTATIONS",
                        "BELOW_EXPECTATIONS",
                        "MISSING_DATA"
                    ],
                    "enumDescriptions": [
                        "",
                        "Last observed value is within acceptable range. This always\nrepresents situations where the monitored data changed between successive\nPlx Alerts checks.",
                        "Last observed value is above the acceptable range.",
                        "Last observed value is below the acceptable range.",
                        "There were no rows returned by the query engine for the monitored time."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAnomalyTimeSeries": {
            "id": "GoogleInternalPlxV2AlertAnomalyTimeSeries",
            "properties": {
                "anomaly": {
                    "$ref": "GoogleInternalPlxV2AlertAnomaly"
                },
                "timeSeries": {
                    "$ref": "GoogleInternalPlxV2AlertTimeSeries"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutobreakdownConfig": {
            "description": "Auto-breakdown automatically finds dimension values to monitor (see\ngo/plx-alerts-user-guide#autodiscovery).",
            "id": "GoogleInternalPlxV2AlertAutobreakdownConfig",
            "properties": {
                "dimensions": {
                    "description": "Set of dimensions to automatically break down. If more than 1 dimension is\nspecified, the monitored slices will be the cross products of all\ndimensions (e.g. for dimensions: \"Country\" and \"App\", every monitored slice\nwill have a restriction on those two dimensions).\n\n(DASNav) These must be dimension ids. Dimension titles aren't supported.\n\nAt least one entry is required.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "enabled": {
                    "description": "If enabled, we will expand the enclosing rule's measure dimensions.",
                    "type": "boolean"
                },
                "excludeDimensionFilters": {
                    "$ref": "GoogleInternalPlxV2AlertDimensionFilters",
                    "description": "Any slices matching these exclusion filters will not be monitored using\nauto-breakdown.\n\nFor example,\n\n    exclude {\n      matches_any {\n        dimension: \"Country\"\n        values: \"US\", \"UK\"\n      }\n    }\n    exclude {\n      dimension: \"Platform\"\n      matches_any {\n        dimension: \"Platform\"\n        values: \"Mobile\"\n      }\n    }\n\nis equivalent to the SQL statement\n\n    SELECT ...\n    FROM ...\n    WHERE Country NOT IN (\"US\", \"UK\")\n    AND Platform NOT IN (\"Mobile\")"
                },
                "lookback": {
                    "$ref": "TimePeriod",
                    "description": "Defines the amount of time that auto-breakdown will use to compute the\nmeasure used for ranking slices. If unset, the default lookback window is\n28 days."
                },
                "measureRelativeRestrictions": {
                    "$ref": "GoogleInternalPlxV2AlertDoubleBounds",
                    "description": "WARNING: please do not use. The feature is used for Zero Config\nmonitoring and is not supported by all backends.\n\nSame as measure_restrictions, but bounds are relative to the value of the\nmetric with no breakdowns.\n\nExamples:\n- to monitor all slices don't set this field.\n- to discard slices that are too thin, i.e. the ranking metric is too small\n  compared to the same metric with no breakdowns:\n    `discard_relative { lower: 0.05, upper: 1 }`\n- to discard slices that are too thick, i.e. the ranking metric is too\n  close to the same metric with no breakdowns:\n    `discard_relative { lower: 0, upper: 0.95 }`\n- to monitor slices that are significant enough, but not too close to the\n  close to the same metric with no breakdowns:\n    `discard_relative { lower: 0.05, upper: 0.95 }`"
                },
                "measureRestrictions": {
                    "$ref": "GoogleInternalPlxV2AlertDoubleBounds",
                    "description": "Don't monitor slices whose aggregated Configuration.measure value is\noutside of these bounds. If this field is unset, all top N values will be\nmonitored.\n\nExample:\n- Monitor all slices: (field unset)\n- Only monitor slices with measure strictly greater than 123:\n    measure { lower: 123, upper: inf }\n- Only monitor slices with measure between -51 and +51 (-51 and +51 not\n    included):\n    measure { lower: -51, upper: +51 }\n- Only monitor slices with measure strictly smaller than 123:\n    measure { lower: -inf, upper: 123 }\n"
                },
                "rankingMeasure": {
                    "description": "Measure to use when ranking slices when selecting the top N.",
                    "type": "string"
                },
                "topN": {
                    "description": "Maximum number of slices to monitor (value must be in [1, 2000]). If unset,\nPlx Alerts will use a small default value subject to change without notice.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutobreakdownRun": {
            "description": "The outcome of a single autobreakdown run.",
            "id": "GoogleInternalPlxV2AlertAutobreakdownRun",
            "properties": {
                "created": {
                    "description": "Rule instances that were newly created by this Autobreakdown job run.\n\nThe .rule field is not set in these rule instances.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance"
                    },
                    "type": "array"
                },
                "jobStartTime": {
                    "description": "Autobreakdown run start time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the autobreakdown run, in the form\n   alerts/projects/<id>/rules/<id>/autobreakdownRuns/<id>.",
                    "type": "string"
                },
                "newlyOrStillDisabled": {
                    "description": "Rule instances that fall into one of two categories:\n   1. The instance was enabled before the Autobreakdown run, and is now\n      disabled.\n   2. The instance was disabled before the Autobreakdown run, and remains\n      disabled.\n\nThe .rule field is not set in these rule instances.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance"
                    },
                    "type": "array"
                },
                "newlyOrStillEnabled": {
                    "description": "Rule instances that fall into one of two categories:\n   1. The instance was enabled before the Autobreakdown run, and remains\n      enabled.\n   2. The instance was disabled before the Autobreakdown run, and is now\n      enabled.\n\nThe .rule field is not set in these rule instances.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance"
                    },
                    "type": "array"
                },
                "status": {
                    "$ref": "StatusProto",
                    "description": "Status for this run."
                },
                "stillDisabled": {
                    "description": "Only those rule instances that were disabled before the run started, and\nremain disabled after.\n\nThe .rule field is not set in these rule instances.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutotunerConfig": {
            "description": "Configures Autotuner. See http://g3doc/company/teams/plx/alerts/autotuner.",
            "id": "GoogleInternalPlxV2AlertAutotunerConfig",
            "properties": {
                "executionMode": {
                    "enum": [
                        "EXECUTION_MODE_UNSPECIFIED",
                        "OFF",
                        "ANALYZE_ONLY",
                        "NOTIFY",
                        "UPDATE",
                        "DEFAULT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Autotuner is disabled.",
                        "Autotuner analyzes rule instances, but results are only available if\nretrieved manually through apiserver.",
                        "Autotuner analyzes rule instances, and proactively reaches out to users\nthrough the web frontend or email with recommended settings.",
                        "Autotuner analyzes rule instances, and directly applies the recommended\nsettings. We don't plan on initially surfacing tuning information, if\nyou need it please contact us.\n\nIf the rule doesn't have auto-breakdown enabled (the default), the\nsettings are applied to the rule directly. If auto-breakdown is enabled,\nthe settings are applied to individual rule instances, without affecting\nthe auto-breakdown rule itself.",
                        "Uses the system-wide default, which may change over time."
                    ],
                    "type": "string"
                },
                "strategy": {
                    "enum": [
                        "STRATEGY_UNSPECIFIED",
                        "STRATEGY_NEUTRAL",
                        "STRATEGY_FAVOR_RECALL",
                        "STRATEGY_FAVOR_PRECISION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Recall and precision are equally important, i.e. decreasing recall by 1%\nis as bad as decreasing precision by 1%.",
                        "Recall is twice as important as precision, i.e. decreasing recall by 1%\nis as bad as decreasing precision by 2%.",
                        "Precision is twice as important as rceall, i.e. decreasing recall by 1%\nis as bad as decreasing precision by 0.5%."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutotunerSimulationResult": {
            "description": "Contains the number of useful/not useful alerts etc. for a specific set of\nparameter values.",
            "id": "GoogleInternalPlxV2AlertAutotunerSimulationResult",
            "properties": {
                "params": {
                    "$ref": "GoogleInternalPlxV2AlertAutotunerTunableParams"
                },
                "stats": {
                    "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationStats"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutotunerSimulationStats": {
            "description": "Stats for a given set of parameters.\nUseful/not_useful/undefined represents the user's feedback (or lack thereof).\nAlert/non_alert tells whether an alert would have fired or not with the\nassociated simulation settings.",
            "id": "GoogleInternalPlxV2AlertAutotunerSimulationStats",
            "properties": {
                "notUsefulAlerts": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert"
                    },
                    "type": "array"
                },
                "notUsefulNonAlerts": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert"
                    },
                    "type": "array"
                },
                "undefinedAlerts": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert"
                    },
                    "type": "array"
                },
                "undefinedNonAlerts": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert"
                    },
                    "type": "array"
                },
                "usefulAlerts": {
                    "description": "Stats about monitored times that in the non-simulated configuration did\nresult in an alert.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert"
                    },
                    "type": "array"
                },
                "usefulNonAlerts": {
                    "description": "Stats about monitored times that in the non-simulated configuration did not\nresult in an alert.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert": {
            "id": "GoogleInternalPlxV2AlertAutotunerSimulationStatsSimulatedAlert",
            "properties": {
                "alertName": {
                    "description": "Set if the montitored time did actually have an alert name associated\nwith it.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutotunerTunableParams": {
            "description": "Contains values for all the parameters that Autotuner can tune.",
            "id": "GoogleInternalPlxV2AlertAutotunerTunableParams",
            "properties": {
                "autofocusFalsePositiveRate": {
                    "description": "Autofocus parameters.",
                    "format": "float",
                    "type": "number"
                },
                "pingScheduleMaxDataLatency": {
                    "description": "How long to tolerate missing data before alerting, if the rule is using\nping scheduling.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertAutotunerTuning": {
            "description": "Parameter tunings suggested by autotuner.",
            "id": "GoogleInternalPlxV2AlertAutotunerTuning",
            "properties": {
                "autotunerRunId": {
                    "description": "Autotuner run that produced this suggestion.",
                    "type": "string"
                },
                "best": {
                    "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationResult",
                    "description": "Recommended new parameters for the rule instance and associated stats."
                },
                "current": {
                    "$ref": "GoogleInternalPlxV2AlertAutotunerSimulationResult",
                    "description": "Parameters and performance stats of the rule instance."
                },
                "ruleInstanceName": {
                    "description": "Rule instance that this suggestion applies to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendBunyanColumnDefinition": {
            "description": "Defines a column in the Schema.",
            "id": "GoogleInternalPlxV2AlertBackendBunyanColumnDefinition",
            "properties": {
                "aggregationType": {
                    "description": "Required for METRIC columns.\nThe field defines how to aggregate numeric values in metric columns: SUM,\nMAX, MIN, etc.\nPlease note that DasNav handles aggregation according to nav's config and\nfor DasNav-based time series this setting will be ignored.",
                    "enum": [
                        "AGGREGATION_TYPE_UNSPECIFIED",
                        "SUM",
                        "MIN",
                        "MAX",
                        "MEDIAN",
                        "AVG"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "columnType": {
                    "description": "Required. Defines the column meaning: DIMENSION, METRIC or TIMESTAMP.",
                    "enum": [
                        "COLUMN_TYPE_UNSPECIFIED",
                        "DIMENSION",
                        "TIMESTAMP",
                        "METRIC"
                    ],
                    "enumDescriptions": [
                        "Ignored/skipped column.",
                        "Dimension columns, e.g. \"Pipeline\", \"Network\", \"RRName\".",
                        "Timestamp column, e.g. \"QueryDate\" with values like \"2016-02-03\". All\ntimestamps are assumed to be in Google Time (US/Los Angeles). If your data\nis not in DASNav and you need support for other timezones please contact\nplx-alerts-team@.",
                        "Metric columns, e.g. \"SpamCount\", \"SpamCost\"."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Required. Column name, e.g. \"Revenue\", \"ProductName\", \"Country\".",
                    "type": "string"
                },
                "timestampFormat": {
                    "description": "Required for TIMESTAMP columns.\nThis field specifies string format according to the format specified at\nstrftime.org. By default the format is \"%Y-%m-%d\"",
                    "type": "string"
                },
                "valueType": {
                    "description": "Required. For .column_type=DIMENSION columns, .value_type defines which values live\nin this column: strings, integers, or something else.",
                    "enum": [
                        "VALUE_TYPE_UNSPECIFIED",
                        "STRING",
                        "INTEGER",
                        "FLOAT",
                        "MONEY",
                        "TIMESTAMP_STR"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Timestamp strings like \"2016-02-01\" or \"2016-02-01 15:04\". The exact\ndate/time format is specified in the \".timestamp_format\" field of\ncolumn_def."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendBunyanConfig": {
            "description": "Config contains the configuration needed to retrieve data from Bunyan via\nPowerDrill. Powerdrill is the query engine, Bunyan is the data source and\nDatascape is the metadata service.",
            "id": "GoogleInternalPlxV2AlertBackendBunyanConfig",
            "properties": {
                "address": {
                    "description": "Address of the Bunyan instance, e.g. \"gslb:adspam-bunyan_main_prod\".",
                    "type": "string"
                },
                "schema": {
                    "$ref": "GoogleInternalPlxV2AlertBackendBunyanSchema",
                    "description": "Column definitions."
                },
                "signalName": {
                    "description": "Bunyan signal to query.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendBunyanSchema": {
            "description": "Schema defines Input layout/geometry of the table.",
            "id": "GoogleInternalPlxV2AlertBackendBunyanSchema",
            "properties": {
                "columnDefs": {
                    "description": "A set of column definitions fully defining columns in the input table.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertBackendBunyanColumnDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendConfig": {
            "id": "GoogleInternalPlxV2AlertBackendConfig",
            "properties": {
                "bunyan": {
                    "$ref": "GoogleInternalPlxV2AlertBackendBunyanConfig",
                    "description": "Deprecated. Restricted access."
                },
                "dasnav": {
                    "$ref": "GoogleInternalPlxV2AlertBackendDasnavConfig"
                },
                "plxQuery": {
                    "$ref": "GoogleInternalPlxV2AlertBackendPlxQueryConfig"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendDasnavConfig": {
            "id": "GoogleInternalPlxV2AlertBackendDasnavConfig",
            "properties": {
                "navId": {
                    "description": "Required, e.g. \"dnszgqx4\".",
                    "type": "string"
                },
                "viewId": {
                    "description": "If unset, \"default\" will be used.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendMetadata": {
            "description": "Holds metadata about a given data set.\n\nIn this message, 'name' refers to an identifier to be used internally while\n'display name' refers to a human readable string to be used in user-facing\ntext.",
            "id": "GoogleInternalPlxV2AlertBackendMetadata",
            "properties": {
                "allowAnyDimensions": {
                    "description": "If true, all dimension names are considered valid, and the name to display\nname mapping is the identity. Dimension values are treated as if\nallow_any_values == true and exclusive_values == false.\n\nIf false, all supported dimensions are listed in the 'dimensions' field.",
                    "type": "boolean"
                },
                "allowAnyMeasures": {
                    "description": "If true, all measure names are considered valid, i.e. measure names won't\nbe validated as part of a rule modification. The name -> display name\nmapping is the identity.\n\nIf false, all supported measures are listed in the 'measures' field.",
                    "type": "boolean"
                },
                "dimensions": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertBackendMetadataDimension"
                    },
                    "type": "array"
                },
                "displayName": {
                    "description": "Display name of the data set.",
                    "type": "string"
                },
                "measures": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertBackendMetadataMeasure"
                    },
                    "type": "array"
                },
                "timeDiscretizations": {
                    "description": "Supported time discretizations.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertTimeDiscretization"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendMetadataDimension": {
            "description": "Names and display names of all supported dimensions and dimension values.",
            "id": "GoogleInternalPlxV2AlertBackendMetadataDimension",
            "properties": {
                "allowAnyValues": {
                    "description": "If true, all value names are considered valid, i.e. value names won't\nbe validated as part of a rule modification. The name -> display name\nmapping is the identity.\n\nIf false, all supported values are listed in the 'values' field.",
                    "type": "boolean"
                },
                "displayName": {
                    "description": "The display name of the dimension, used for FE rendering.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the dimension, used for internal referencing.",
                    "type": "string"
                },
                "values": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertBackendMetadataDimensionValue"
                    },
                    "type": "array"
                },
                "valuesAreExclusive": {
                    "description": "If true, this dimension MUST have a filter set to a single value.\nThis concept only applies to DASNav data sources.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendMetadataDimensionValue": {
            "description": "Names and display names of all values supported by this dimension.",
            "id": "GoogleInternalPlxV2AlertBackendMetadataDimensionValue",
            "properties": {
                "displayName": {
                    "description": "A display-friendly version of the name.",
                    "type": "string"
                },
                "isLeaf": {
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendMetadataMeasure": {
            "description": "A measure such as \"revenue\" or \"28dau\".",
            "id": "GoogleInternalPlxV2AlertBackendMetadataMeasure",
            "properties": {
                "displayName": {
                    "description": "The display name of the measure, used for FE rendering.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the measure, used for internal referencing.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendPlxQueryConfig": {
            "id": "GoogleInternalPlxV2AlertBackendPlxQueryConfig",
            "properties": {
                "apiVersion": {
                    "description": "Required. Plx Api version to use.",
                    "enum": [
                        "API_VERSION_UNSPECIFIED",
                        "API_VERSION_1",
                        "API_VERSION_2"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "connection": {
                    "$ref": "GoogleInternalPlxV2AlertBackendPlxQueryConnection"
                },
                "dashboardId": {
                    "description": "ID of the Plx Dashboards dashboard where this rule was set up from. Used\nonly for linking back to the dashboard and other informational purposes.",
                    "type": "string"
                },
                "time": {
                    "description": "Required. An SQL expression that operates on any of the columns in plx_source\n(table, script, or query) to output something representing time.\n\n- For Google SQL, this expression should evaluate to a Timestamp type\n- For Dremel SQL, this expression should evaluate to microseconds since\n  epoch",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendPlxQueryConnection": {
            "id": "GoogleInternalPlxV2AlertBackendPlxQueryConnection",
            "properties": {
                "query": {
                    "$ref": "GoogleInternalPlxV2AlertBackendPlxQueryQuery",
                    "description": "SQL query (inlined in this proto)."
                },
                "script": {
                    "$ref": "GoogleInternalPlxV2AlertBackendPlxQueryScript",
                    "description": "Persisted script (by ID)."
                },
                "table": {
                    "$ref": "GoogleInternalPlxV2AlertBackendPlxQueryTable",
                    "description": "*** Sources that support API versions 1 and 2. *** //\nTable (by ID)."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendPlxQueryQuery": {
            "id": "GoogleInternalPlxV2AlertBackendPlxQueryQuery",
            "properties": {
                "queryEngine": {
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1",
                        "PROCELLA"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Only supported with PLX_API_V2."
                    ],
                    "type": "string"
                },
                "sql": {
                    "description": "SQL query, e.g. \"SELECT * FROM zoom.dnsncss5\".\n\nThe supported dialects depend on the chosen query engine:\n- For Dremel, the dialect can be DremelSQL or GoogleSQL.\n- For F1, the dialect must be GoogleSQL.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendPlxQueryQueryEngine": {
            "id": "GoogleInternalPlxV2AlertBackendPlxQueryQueryEngine",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendPlxQueryScript": {
            "id": "GoogleInternalPlxV2AlertBackendPlxQueryScript",
            "properties": {
                "id": {
                    "description": "ID of a Plx Script, e.g. \"script_b5._04c9ea_e962_4bd7_a320_58fa00752ab2\".\n\nSee scripts you have access to here:\nhttps://plx.corp.google.com/#/home?q=type:script",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBackendPlxQueryTable": {
            "id": "GoogleInternalPlxV2AlertBackendPlxQueryTable",
            "properties": {
                "id": {
                    "description": "ID of a table registed in Datascape e.g. \"zoom.dnsncss5\".\n\nSee tables you have access to here:\nhttps://plx.corp.google.com/#/home?q=type:table",
                    "type": "string"
                },
                "queryEngine": {
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1",
                        "PROCELLA"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "Only supported with PLX_API_V2."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBatchExecuteRulesRequest": {
            "id": "GoogleInternalPlxV2AlertBatchExecuteRulesRequest",
            "properties": {
                "names": {
                    "description": "Required. Names of the rule resources whose instances to monitor.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timestampsToMonitor": {
                    "description": "Timestamps to monitor.\n\nOptional if the above rule uses ping schedule, in which case the\ntimestamps to monitor can be meaningfully inferred. Required otherwise.\n\nThe given timestamps are truncated to the rule's time discretization.",
                    "items": {
                        "format": "google-datetime",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBatchExecuteRulesResponse": {
            "id": "GoogleInternalPlxV2AlertBatchExecuteRulesResponse",
            "properties": {
                "ruleInstanceExecutionNames": {
                    "description": "Names of all rule instance executions created by the BatchExecuteRule\ncall.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBatchUpdateAlertsRequest": {
            "id": "GoogleInternalPlxV2AlertBatchUpdateAlertsRequest",
            "properties": {
                "alert": {
                    "$ref": "GoogleInternalPlxV2AlertAlert",
                    "description": "Required. The new field values with which to update the existing alerts.\nOnly state, feedback, assignee, and comments can be updated; attempts to\nupdate other fields result in an RPC error."
                },
                "names": {
                    "description": "Required. Resource names of the alerts to update.\n",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "updateOptions": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateOptions",
                    "description": "Specifies which fields to update and how to reconcile existing with new\nproto values."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBatchUpdateAlertsResponse": {
            "id": "GoogleInternalPlxV2AlertBatchUpdateAlertsResponse",
            "properties": {
                "alerts": {
                    "description": "The updated alerts.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAlert"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBuganizerProjectConfig": {
            "id": "GoogleInternalPlxV2AlertBuganizerProjectConfig",
            "properties": {
                "componentId": {
                    "description": "Required. Default Buganizer component ID for issues created from alert\npages. The component must not have restricted access. If not set, alerts\ncan still be linked to existing issues, but new issues will not be able to\nbe created directly from Plx Alerts.",
                    "format": "int64",
                    "type": "string"
                },
                "includeAnomalyDetails": {
                    "description": "Set to true if data point values should be included in issues created from\nPlx Alerts. This is not recommended for sensitive data.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertBuganizerRuleConfig": {
            "id": "GoogleInternalPlxV2AlertBuganizerRuleConfig",
            "properties": {
                "componentId": {
                    "description": "Required. Buganizer component ID for issues created from alerts generated\nby this rule. The component must not have restricted access. If not set,\ndefault value is taken from Project.buganizer.component_id.",
                    "format": "int64",
                    "type": "string"
                },
                "includeAnomalyDetails": {
                    "description": "Set to true if data point values should be included in issues created from\nPlx Alerts. This is not recommended for sensitive data.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertChangeHistoryEntry": {
            "description": "Each ChangeHistoryEntry represents a modification to an alert.",
            "id": "GoogleInternalPlxV2AlertChangeHistoryEntry",
            "properties": {
                "changeType": {
                    "enum": [
                        "CHANGE_TYPE_UNSPECIFIED",
                        "CHANGE_TYPE_COMMENT_ADDED",
                        "CHANGE_TYPE_USEFULNESS_SET",
                        "CHANGE_TYPE_DATA_UPDATED",
                        "CHANGE_TYPE_ALERT_CREATED",
                        "CHANGE_TYPE_STATE_CHANGED",
                        "CHANGE_TYPE_ASSIGNEE_CHANGED",
                        "CHANGE_TYPE_MARKED_AS_DUPLICATE",
                        "CHANGE_TYPE_ISSUE_LINKED_COMMENT_ADDED",
                        "CHANGE_TYPE_ISSUE_UPDATED"
                    ],
                    "enumDescriptions": [
                        "",
                        "New comment added to an alert.",
                        "Alert owner marked the alert as useful or not useful.",
                        "Data has changed since the time the alert was fired.",
                        "Alert created.",
                        "Alert toggled from resolved to not resolved or vice versa.",
                        "Alert assignee changed.",
                        "Alert has been marked as duplicate of another alert.",
                        "New comment added to an alert while it was linked to a Buganizer issue.",
                        "A Buganizer issue was linked or unliked to the alert."
                    ],
                    "type": "string"
                },
                "createTime": {
                    "description": "Time when this change took place.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "description": {
                    "description": "Human-readable description of the modification, i.e. the actual\nuser-provided text for non-issue-linked comments or a human-readable\ndescription for other types of changes. E.g. \"user foo marked alert as\nuseful\".",
                    "type": "string"
                },
                "explainerType": {
                    "description": "For explainer-triggered changes, this is the type of explainer that\ngenerated the above link.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_USER",
                        "TYPE_LATE_DATA",
                        "TYPE_ALERT_SEQUENCE",
                        "TYPE_COMMON_ANCESTOR",
                        "TYPE_PUBLIC_EVENT",
                        "TYPE_FEYNMAN",
                        "TYPE_UNEXPLAINED_ANOMALY",
                        "TYPE_DEBUG_SUGGEST",
                        "TYPE_SHODAN"
                    ],
                    "enumDescriptions": [
                        "",
                        "A human-generated explanation. All other enum values represent\nexplanations generated algorithmically.",
                        "We checked the time series data some time after the corresponding alert\nfired and we found that the monitored point is no longer anomalous.",
                        "The alert's RuleInstance fired on the previous monitored time in the\nsame anomaly direction (above or below threshold) so we assume that both\nalerts have the same cause.",
                        "We check if the alert shares the same set of signatures with other alerts\nthat fired on the same monitored time and that come from the same\ndatasource. If so, the set of signatures will be used for explaining the\nmatching alerts.",
                        "The alert occurred during a public event.",
                        "The anomaly was caused by a specific slice of traffic.",
                        "Fall-back type necessary to represent alerts without any events in\nevents-space.",
                        "Suggests debugging information for Thor alerts. Contact jinwang@ for\nquestions.",
                        "We check changes to binary versions and experiment snapshots close to the\ntime of the alert, using Shodan (go/shodan)."
                    ],
                    "type": "string"
                },
                "explanationName": {
                    "description": "For explainer-triggered changes, this is the name of the explanation\nthat was generated.",
                    "type": "string"
                },
                "issueId": {
                    "description": "For changes such as an issue being linked or unlinked to the alert, this is\nthe ID of the issue that will be linked to the alert after this change.\nThis is set to 0 if an issue was unliked without a new issue to replace it.",
                    "format": "int64",
                    "type": "string"
                },
                "monitoredDataPoint": {
                    "$ref": "GoogleInternalPlxV2AlertPoint",
                    "description": "Stores a snapshot of this monitored value at the moment the entry is added\nto the alert. I.e. this holds the monitored data point before any (further)\nmodifications were applied to the alert."
                },
                "state": {
                    "description": "If the change type is CHANGE_TYPE_STATE_CHANGED, this field is updated to\ncontain the new value. If the change type is not CHANGE_TYPE_STATE_CHANGED,\nthis field is copied from the previous change history entry.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "STATE_NEW",
                        "STATE_ASSIGNED",
                        "STATE_RESOLVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "user": {
                    "description": "Username of the user who initiated this change.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertCreateProjectRequest": {
            "id": "GoogleInternalPlxV2AlertCreateProjectRequest",
            "properties": {
                "project": {
                    "$ref": "GoogleInternalPlxV2AlertProject",
                    "description": "Required. Project to be added to the database."
                },
                "validateOnly": {
                    "description": "Set to true to not actually create the project, but only validate the\nproject itself.\nhttps://cloud.google.com/apis/design/design_patterns#request_validation",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertCreateRuleRequest": {
            "id": "GoogleInternalPlxV2AlertCreateRuleRequest",
            "properties": {
                "parent": {
                    "description": "Required. The parent resource name, i.e. the project that the rule should\nbelong to, e.g. 'alerts/projects/myproject'.",
                    "type": "string"
                },
                "rule": {
                    "$ref": "GoogleInternalPlxV2AlertRule",
                    "description": "Required. The rule to create."
                },
                "validateOnly": {
                    "description": "If true, this request has no side effects.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertCreateSilenceRequest": {
            "id": "GoogleInternalPlxV2AlertCreateSilenceRequest",
            "properties": {
                "parent": {
                    "description": "Required. The parent resource name, i.e. the project that the silence\nshould should belong to, e.g. 'alerts/projects/myproject'.",
                    "type": "string"
                },
                "silence": {
                    "$ref": "GoogleInternalPlxV2AlertSilence",
                    "description": "Required. The silence to create."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertCustomField": {
            "description": "Custom fields are fields to add to alerts generated by a certain rule.",
            "id": "GoogleInternalPlxV2AlertCustomField",
            "properties": {
                "arguments": {
                    "description": "Required. Arguments to the function. Length must match the function.",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                },
                "function": {
                    "description": "Required. Function that computes the value of the custom field.",
                    "enum": [
                        "CUSTOM_FIELD_UNSPECIFIED",
                        "CONSTANT",
                        "ADSPAM_PRIORITY",
                        "ADSPAM_DEVIATION",
                        "WEIGHTED_DEVIATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "abs(actual-expected) * arg0; only for Autofocus rules."
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "Required. Must be unique within one rule. Custom fields of the same ID\nwithin one project are displayed in the same column.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDeleteProjectRequest": {
            "id": "GoogleInternalPlxV2AlertDeleteProjectRequest",
            "properties": {
                "name": {
                    "description": "Required. Project resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDeleteRuleRequest": {
            "id": "GoogleInternalPlxV2AlertDeleteRuleRequest",
            "properties": {
                "name": {
                    "description": "Required. Rule resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorAutofocusConfig": {
            "id": "GoogleInternalPlxV2AlertDetectorAutofocusConfig",
            "properties": {
                "dataPointsCount": {
                    "description": "Required. How many data points should be passed to autofocus.",
                    "format": "int32",
                    "type": "integer"
                },
                "dataTransformation": {
                    "description": "Tells Autofocus how to transform the data before looking for\nanomalies. Unset is equivalent to NONE.",
                    "enum": [
                        "DATA_TRANSFORMATION_UNSPECIFIED",
                        "DATA_TRANSFORMATION_NONE",
                        "DATA_TRANSFORMATION_NATURAL_LOG"
                    ],
                    "enumDescriptions": [
                        "",
                        "No transformation.",
                        "Natural logarithm."
                    ],
                    "type": "string"
                },
                "deviationPruner": {
                    "$ref": "GoogleInternalPlxV2AlertDeviationPruner",
                    "description": "If set, anomalies with observed value within the configured thresholds will\nbe discarded and no alerts will be generated. If unset, no anomalies are\ndiscarded for this reason."
                },
                "falsePositiveRate": {
                    "description": "Required. Value in (0, 1). Determines how improbable Autofocus requires\ndata to be in order to be considered anomalous. Smaller values mean that\nAutofocus requires points to be more improbable before considering them\nalerts.  Lower this value if you get too many bad alerts because your time\nseries is too variable.",
                    "format": "float",
                    "type": "number"
                },
                "spikeOrSlumpPruner": {
                    "description": "Determines which anomalies to filter, if any. If unset, it has no effect.",
                    "enum": [
                        "SPIKE_OR_SLUMP_PRUNER_UNSPECIFIED",
                        "PRUNE_SPIKES",
                        "PRUNE_SLUMPS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorAutofocusResult": {
            "description": "A representation of an anomaly as detected by autofocus.",
            "id": "GoogleInternalPlxV2AlertDetectorAutofocusResult",
            "properties": {
                "expected": {
                    "description": "Posterior predictive expectation.",
                    "format": "double",
                    "type": "number"
                },
                "lower": {
                    "description": "Lower bound of expected interval.",
                    "format": "double",
                    "type": "number"
                },
                "pValue": {
                    "description": "Tail-area probability (in (0, 1)).",
                    "format": "double",
                    "type": "number"
                },
                "upper": {
                    "description": "Upper bound of expected interval.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorBayesdlmConfig": {
            "id": "GoogleInternalPlxV2AlertDetectorBayesdlmConfig",
            "properties": {
                "dataPointsCount": {
                    "description": "Required. How many data points should be passed to BayesDLM.",
                    "format": "int32",
                    "type": "integer"
                },
                "deviationPruner": {
                    "$ref": "GoogleInternalPlxV2AlertDeviationPruner",
                    "description": "If set, anomalies with observed value within the configured thresholds will\nbe discarded and no alerts will be generated. If unset, no anomalies are\ndiscarded for this reason."
                },
                "falsePositiveRate": {
                    "description": "Required. Value in (0, 1). Determines how improbable BayesDLM requires\ndata to be in order to be considered anomalous. Smaller values mean that\nBayesDLM requires points to be more improbable before considering them\nalerts.  Lower this value if you get too many bad alerts because your time\nseries is too variable.",
                    "format": "float",
                    "type": "number"
                },
                "numRecurrentDataPoints": {
                    "description": "The number of times in a row an anomaly needs to occur before an\nalert is fired. If num_recurrent_data_points is zero, then an anomaly only\nneeds to occur once for an alert to be fired.",
                    "format": "int32",
                    "type": "integer"
                },
                "spikeOrSlumpPruner": {
                    "description": "Determines which anomalies to filter, if any. If unset, all anomalies will\nbe reported.",
                    "enum": [
                        "SPIKE_OR_SLUMP_PRUNER_UNSPECIFIED",
                        "PRUNE_SPIKES",
                        "PRUNE_SLUMPS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorBayesdlmResult": {
            "description": "A representation of an anomaly detected by BayesDLM.",
            "id": "GoogleInternalPlxV2AlertDetectorBayesdlmResult",
            "properties": {
                "expected": {
                    "description": "Posterior predictive expectation.",
                    "format": "double",
                    "type": "number"
                },
                "lower": {
                    "description": "Lower bound of expected interval.",
                    "format": "double",
                    "type": "number"
                },
                "pValue": {
                    "description": "Tail-area probability (in (0, 1)).",
                    "format": "double",
                    "type": "number"
                },
                "upper": {
                    "description": "Upper bound of expected interval.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorConfig": {
            "id": "GoogleInternalPlxV2AlertDetectorConfig",
            "properties": {
                "autofocus": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorAutofocusConfig",
                    "description": "Alerts if the most recent data point is unexpected given the historical\nbehavior of the time series. See go/autofocus."
                },
                "bayesdlm": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorBayesdlmConfig",
                    "description": "Alerts if the most recent data point is out of an expected range given\nthe historical pattern of the time series. It uses a similar Bayesian\nmodel as Autofocus. See go/bayesdlm."
                },
                "nOverN": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorNovernConfig",
                    "description": "Alerts if the difference between the most recent data point and a past\ndata point is outside of a defined range of values, allowing e.g. for\nweek over week analysis."
                },
                "staticThresholds": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorStaticThresholdsConfig",
                    "description": "Alerts if the most recent data point is outside of a defined range of\nvalues."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorDetectorType": {
            "id": "GoogleInternalPlxV2AlertDetectorDetectorType",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorNovernConfig": {
            "id": "GoogleInternalPlxV2AlertDetectorNovernConfig",
            "properties": {
                "bounds": {
                    "$ref": "GoogleInternalPlxV2AlertDoubleBounds",
                    "description": "Establishes range of acceptable relative differences. At least 1 bound must\nbe set. If a bound is missing (e.g. lower) it means that we will only do\none-sided anomaly detection (e.g. fire alerts only when the relative\ndifference between points is above the upper threshold)."
                },
                "growthOffset": {
                    "description": "The time lapse between the comparison points.",
                    "enum": [
                        "GROWTH_OFFSET_UNSPECIFIED",
                        "WEEK_OVER_WEEK",
                        "DAY_OVER_DAY",
                        "MONTH_OVER_MONTH",
                        "YEAR_OVER_YEAR",
                        "SEARCH_ADS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Week over week analysis. Compares a point to the analogous point 7 days\nearlier. It only works with HOURLY, DAILY, and WEEKLY granularity rules.",
                        "Day over day analysis. Compares a point to the analogous point 1 day\nbefore. It only works with HOURLY and DAILY granularity rules.",
                        "Month over Month analysis. Compares a point to the analogous point 28\ndays earlier for HOURLY, DAILY, and WEEKLY granularity rules. For MONTHLY\ngranularity rules, we compare the entire month to the entire month\nbefore.",
                        "Year over Year analysis. For DAILY, MONTHLY, and QUARTERLY granularity\nrules, compares a point to the analogous date/month/quarter a year ago.\nFor WEEKLY granularity rules, compares a point to the analogous week 52\nweeks ago.",
                        "WARNING: The following offset options are not general purpose, and are\nonly available on a whitelist-by-whitelist basis.\n\nA datapoint is anomalous if it's anomalous when compared against ALL of\nthe following points in the past:\n- week-over-week (WoW)\n- week-over-2-weeks (Wo2W)\n- week-over-week one year ago (WoW1Yr)\n- week-over-2-weeks one year ago (Wo2W1Yr)"
                    ],
                    "type": "string"
                },
                "numRecurrentDataPoints": {
                    "description": "The number of times in a row an anomaly needs to occur before an\nalert is fired. If num_recurrent_data_points = 0, then an anomaly only\nneeds to occur once for an alert to be fired.\n\nAnomaly results will always contain anomaly information associated with the\nmost recent monitored time regardless of the value of\nn_recurrent_data_points.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorNovernDelta": {
            "id": "GoogleInternalPlxV2AlertDetectorNovernDelta",
            "properties": {
                "referencePoint": {
                    "$ref": "GoogleInternalPlxV2AlertPoint",
                    "description": "The analogous data point for the anomaly, e.g. that of the past week."
                },
                "relativeDifference": {
                    "description": "Relative difference to the monitored data point, only populated if the\npast data point is not zero.\n(currentValue - analogousPastValue) / analogousPastValue.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorNovernResult": {
            "description": "A representation of the results detected by the N over N detector.",
            "id": "GoogleInternalPlxV2AlertDetectorNovernResult",
            "properties": {
                "referencePoint": {
                    "$ref": "GoogleInternalPlxV2AlertPoint"
                },
                "searchAds": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorNovernSearchAds",
                    "description": "Only used by Search Ads, i.e. when GROWTH_OFFSET = SEARCH_ADS."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorNovernSearchAds": {
            "id": "GoogleInternalPlxV2AlertDetectorNovernSearchAds",
            "properties": {
                "weekOverTwoWeeks": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorNovernDelta"
                },
                "weekOverTwoWeeksOneYearAgo": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorNovernDelta"
                },
                "weekOverWeek": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorNovernDelta"
                },
                "weekOverWeekOneYearAgo": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorNovernDelta"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorResult": {
            "description": "Holds the outputs of the detection stage, including annotated input time\nseries and any detected anomalies.",
            "id": "GoogleInternalPlxV2AlertDetectorResult",
            "properties": {
                "autofocus": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorAutofocusResult"
                },
                "bayesdlm": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorBayesdlmResult"
                },
                "nOverN": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorNovernResult"
                },
                "staticThresholds": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorStaticThresholdsResult"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorStaticThresholdsConfig": {
            "id": "GoogleInternalPlxV2AlertDetectorStaticThresholdsConfig",
            "properties": {
                "bounds": {
                    "$ref": "GoogleInternalPlxV2AlertDoubleBounds",
                    "description": "Establishes range of acceptable values. Both bounds must be set. If you\nonly care about one of the bounds, set the other one to +-/Inf."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDetectorStaticThresholdsResult": {
            "description": "A representation of an anomaly detected by the static thresholds detector.\nEmpty, because the anomaly is fully defined by the rule configuration and\nthe observed value.",
            "id": "GoogleInternalPlxV2AlertDetectorStaticThresholdsResult",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDeviationPruner": {
            "description": "DeviationPruner discards anomalies if deviation of the last time series\ndata point from the expected value computed by the detector is too small.",
            "id": "GoogleInternalPlxV2AlertDeviationPruner",
            "properties": {
                "maxTolerableDeviation": {
                    "description": "Required. An alert is discarded if deviation is too small. Discards an alert if\n\nabs(time series - expected(time series)) < max_tolerable_deviation\n\nThe exact meaning of \"deviation\" depends on the anomaly detection\nalgorithm, i.e. the below prune_by field.",
                    "format": "float",
                    "type": "number"
                },
                "pruneBy": {
                    "enum": [
                        "PRUNE_BY_UNSPECIFIED",
                        "PRUNE_BY_MEASURE_ABSOLUTE_DEVIATION",
                        "PRUNE_BY_NUMERATOR_ABSOLUTE_DEVIATION",
                        "PRUNE_BY_DENOMINATOR_ABSOLUTE_DEVIATION",
                        "PRUNE_BY_MEASURE_RELATIVE_DEVIATION"
                    ],
                    "enumDescriptions": [
                        "",
                        "Prunes on the measure itself.",
                        "",
                        "",
                        "An alert is discarded if relative deviation of the measure is too small:\ndiscard if abs((Timeseries - expected(Timeseries))/expected(Timeseries))\n< max_tolerable_relative_deviation. Relative deviation is not defined if\nexpected(Timeseries) is zero."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDimensionFilter": {
            "description": "Filter defines the slice of a time series to analyze as a collection of\nconditions on dimensions - it corresponds conceptually to an SQL WHERE\nclause.\n\nThe following example uses a MatchesAny filter that restricts the\nmonitored measure to the union of countries \"US\" and \"GB\".\n\nDimensionFilter {\n  MatchesAny {\n    dimension: \"country\"\n    values: [\"US\", \"GB\"]\n  }\n}",
            "id": "GoogleInternalPlxV2AlertDimensionFilter",
            "properties": {
                "matchesAny": {
                    "$ref": "GoogleInternalPlxV2AlertMatchesAny",
                    "description": "A time series filter equivalent to sql's \"col IN ()\" statement."
                },
                "matchesRegex": {
                    "$ref": "GoogleInternalPlxV2AlertMatchesRegex",
                    "description": "This field only has an effect as part of rule.autobreakdown.exclude.\n\nIf true, regex is interpreted as a RE2 regular expression (e.g.\n\"^d3v[14]$\" will match dimension value ids \"d3v1\" and \"d3v4\").\n\nPrefer MatchesAny if you only need string equality matching."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDimensionFilters": {
            "description": "A container message for multiple filters, such as those on e.g. country",
            "id": "GoogleInternalPlxV2AlertDimensionFilters",
            "properties": {
                "filters": {
                    "description": "Multiple filters correspond to multiple individual WHERE-clauses being\nAND-ed together. For instance, one filter might specify which countries to\nselect, and another which languages to select.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertDimensionFilter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertDoubleBounds": {
            "id": "GoogleInternalPlxV2AlertDoubleBounds",
            "properties": {
                "lower": {
                    "format": "double",
                    "type": "number"
                },
                "upper": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEmailSummary": {
            "id": "GoogleInternalPlxV2AlertEmailSummary",
            "properties": {
                "canonicalBodyTemplateId": {
                    "description": "Plx Alerts predefined templates that are commonly used by teams.",
                    "enum": [
                        "UNSPECIFIED_EMAIL_SUMMARY_CANONICAL_TEMPLATE_ID",
                        "DEFAULT"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "cronSchedule": {
                    "description": "Required. Times at which the email summary will be sent in crontab format\n('minute hour day_of_month month day_of_week', e.g. to run daily at\nmidnight enter '0 0 * * *', see go/borgcron-user-guide#borgcrontimespec).\nAll times are in MTV timezone.\n\nAll alerts that fired in the time window ending in the time when the email\nis being sent will be included.",
                    "type": "string"
                },
                "customBody": {
                    "description": "HTML Go template string (http://golang.org/pkg/html/template/). See\ngo/plx-alerts-user-guide#summary-emails for available variables and\nfunctions.",
                    "type": "string"
                },
                "id": {
                    "description": "Full and unique email summary resource name of the form\n\n  alerts/projects/<project_id>/email_summaries/<summary_id>\n\n<summary_id> must match [a-z0-9_]{3,100}.",
                    "type": "string"
                },
                "recipients": {
                    "description": "At least 1 recipient required. List of email addresses to automatically CC\non email notifications. Only emails with suffixes '@google.com' or\n'@grotations.appspotmail.com' are supported.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subject": {
                    "description": "Required. Template for the email title. See supported tokens at\ngo/plx-alerts-user-guide#summary-emails.",
                    "type": "string"
                },
                "trigger": {
                    "description": "Specifies the conditions that will cause an email summary to be sent.",
                    "enum": [
                        "EMAIL_SUMMARY_TRIGGER_UNSPECIFIED",
                        "HAS_ALERTS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Send summary if 1+ alerts match\nEmailSummary.trigger_config.has_alerts.query."
                    ],
                    "type": "string"
                },
                "triggerConfig": {
                    "$ref": "GoogleInternalPlxV2AlertEmailSummaryTriggerConfig"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEmailSummaryCanonicalTemplateId": {
            "id": "GoogleInternalPlxV2AlertEmailSummaryCanonicalTemplateId",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEmailSummaryTrigger": {
            "id": "GoogleInternalPlxV2AlertEmailSummaryTrigger",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEmailSummaryTriggerConfig": {
            "id": "GoogleInternalPlxV2AlertEmailSummaryTriggerConfig",
            "properties": {
                "hasAlerts": {
                    "$ref": "GoogleInternalPlxV2AlertHasAlerts",
                    "description": "Configuration for HAS_ALERTS trigger."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEvaluatePingScheduleRequest": {
            "description": "A message describing the inputs needed to compute the set of input time\nseries timestamps to monitor for missing and/or anomalous data.",
            "id": "GoogleInternalPlxV2AlertEvaluatePingScheduleRequest",
            "properties": {
                "pingSchedule": {
                    "$ref": "GoogleInternalPlxV2AlertPingSchedule",
                    "description": "The schedule to evaluate."
                },
                "pingTime": {
                    "description": "Optional. The time that the (maybe hypothetical) ping is/was received, for purposes\nof evaluating the below schedule. If left unset, the server assumes the\ncurrent time and returns the used timestamp in its response.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "timeDiscretization": {
                    "$ref": "GoogleInternalPlxV2AlertTimeDiscretization",
                    "description": "How to discretize time, e.g. daily, monthly, etc.\n\nIf the output timestamps in the response are intended as inputs for\nexecuting a rule or rule instance RPC, the discretization of that rule's\ntime series source and the value here should match."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEvaluatePingScheduleResponse": {
            "description": "A message describing containing the sets of timestamps that require\nmonitoring given the inputs in EvaluatePingScheduleRequest.",
            "id": "GoogleInternalPlxV2AlertEvaluatePingScheduleResponse",
            "properties": {
                "pingTime": {
                    "description": "The time we got pinged, as passed in the request, or as populated\nserver-side.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "timestampsToMonitorForAnomalousData": {
                    "description": "Ordered by most recent timestamp first.",
                    "items": {
                        "format": "google-datetime",
                        "type": "string"
                    },
                    "type": "array"
                },
                "timestampsToMonitorForMissingData": {
                    "description": "Ordered by most recent timestamp first.",
                    "items": {
                        "format": "google-datetime",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventAlertContext": {
            "description": "AlertContext gives context on how any given alert relates to other alerts and\nevents present in the Plx Alerts system.\n\nSpecifically, AlertContext contains\n  - possible causes, i.e. events, for the alert,\n  - why we think that this alert is related to that event, i.e. explanations,\n  - other alerts that are covered by the same event.",
            "id": "GoogleInternalPlxV2AlertEventAlertContext",
            "properties": {
                "alertName": {
                    "description": "The name of the alert that this context is for. E.g.\n  alerts/projects/myproject/alerts/alert123.",
                    "type": "string"
                },
                "eventsWithRelatedAlerts": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEventAlertContextEventWithRelatedAlerts"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventAlertContextEventWithRelatedAlerts": {
            "description": "Convenience wrapper of an Event, one of its Explanations, and the\ncorresponding alerts.",
            "id": "GoogleInternalPlxV2AlertEventAlertContextEventWithRelatedAlerts",
            "properties": {
                "alerts": {
                    "description": "List of alerts that are also explained by the above event. Events are\ncurrently restricted to be shared within a single project only, so all\nalerts listed here are guaranteed to originate from the same project.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAlert"
                    },
                    "type": "array"
                },
                "event": {
                    "$ref": "GoogleInternalPlxV2AlertEventEvent",
                    "description": "Any info we have about the event that we think is related to the\nenclosing alert as well as the alerts below."
                },
                "explanation": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplanation",
                    "description": "Info about why we think the alert (referenced by alert_name) is related\nto or part of the above event."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventEvent": {
            "description": "Event represents a generic event that can be either external to Google\n(holidays, lotteries, elections, Sports events), or internal (such as\nlaunches) that is highlighted in Plx Alerts.",
            "id": "GoogleInternalPlxV2AlertEventEvent",
            "properties": {
                "createTime": {
                    "description": "Time when this event was created. Note that this is independent of the\nevent's started/ended times. E.g. we may create an event for July 4th\n(start time: July 4th, 00:00) on July 7th at 07:31 whenever the code that\ngenerates it runs.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "endTime": {
                    "description": "End timestamp of the event (exclusive).",
                    "format": "google-datetime",
                    "type": "string"
                },
                "explainerSpecificResult": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerExplainerSpecificResult",
                    "description": "Output from explainer algorithm that created this event."
                },
                "explainerType": {
                    "description": "The explainer that generated this event.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_USER",
                        "TYPE_LATE_DATA",
                        "TYPE_ALERT_SEQUENCE",
                        "TYPE_COMMON_ANCESTOR",
                        "TYPE_PUBLIC_EVENT",
                        "TYPE_FEYNMAN",
                        "TYPE_UNEXPLAINED_ANOMALY",
                        "TYPE_DEBUG_SUGGEST",
                        "TYPE_SHODAN"
                    ],
                    "enumDescriptions": [
                        "",
                        "A human-generated explanation. All other enum values represent\nexplanations generated algorithmically.",
                        "We checked the time series data some time after the corresponding alert\nfired and we found that the monitored point is no longer anomalous.",
                        "The alert's RuleInstance fired on the previous monitored time in the\nsame anomaly direction (above or below threshold) so we assume that both\nalerts have the same cause.",
                        "We check if the alert shares the same set of signatures with other alerts\nthat fired on the same monitored time and that come from the same\ndatasource. If so, the set of signatures will be used for explaining the\nmatching alerts.",
                        "The alert occurred during a public event.",
                        "The anomaly was caused by a specific slice of traffic.",
                        "Fall-back type necessary to represent alerts without any events in\nevents-space.",
                        "Suggests debugging information for Thor alerts. Contact jinwang@ for\nquestions.",
                        "We check changes to binary versions and experiment snapshots close to the\ntime of the alert, using Shodan (go/shodan)."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Full and unique rule resource name of the form\n\n  alerts/event/<event_id>\n\n<event_id> is system-generated and immutable.",
                    "type": "string"
                },
                "startTime": {
                    "description": "Beginning of the event (inclusive).",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventEventWithRelatedAlerts": {
            "description": "Convenience wrapper of an Event, one of its Explanations, and the\ncorresponding alerts.",
            "id": "GoogleInternalPlxV2AlertEventEventWithRelatedAlerts",
            "properties": {
                "alerts": {
                    "description": "List of alerts that are also explained by the above event. Events are\ncurrently restricted to be shared within a single project only, so all\nalerts listed here are guaranteed to originate from the same project.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAlert"
                    },
                    "type": "array"
                },
                "event": {
                    "$ref": "GoogleInternalPlxV2AlertEventEvent",
                    "description": "Any info we have about the event that we think is related to the\nenclosing alert as well as the alerts below."
                },
                "explanation": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplanation",
                    "description": "Info about why we think the alert (referenced by alert_name) is related\nto or part of the above event."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerAlertSequenceResult": {
            "description": "Details for events output by the Alert Sequence explainer.",
            "id": "GoogleInternalPlxV2AlertEventExplainerAlertSequenceResult",
            "properties": {
                "headAlertName": {
                    "description": "Name of the current head of the sequence.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerCommonAncestorConfig": {
            "description": "Parameters for the Common Ancestor explainer.\n\nSee http://g3doc/company/teams/plx/alerts/userguide#common_ancestor.",
            "id": "GoogleInternalPlxV2AlertEventExplainerCommonAncestorConfig",
            "properties": {
                "maxExplanationCount": {
                    "description": "The explainer ranks the explanations and annotates a given alert by at most\nthis number of explanations.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxSliceDimensions": {
                    "description": "Value in [1, 5]. The explainer will discard explanations with more than\nthis number of dimension restrictions. We set a hard limit on 5 because\nexperimentally we have found that explanations for more than this number of\nslices are too noisy.",
                    "format": "int32",
                    "type": "integer"
                },
                "minAlertCount": {
                    "description": "Tells the explainer to run for alert X only if at least this many alerts\nfired for the same monitored time as alert X.",
                    "format": "int32",
                    "type": "integer"
                },
                "minSupportThreshold": {
                    "description": "Tells the explainer to output an explanation if at least this number of\nalerts share the same common ancestor (set of dimension value/pairs).",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerCommonAncestorResult": {
            "description": "Details for events output by the Common Ancestor explainer.",
            "id": "GoogleInternalPlxV2AlertEventExplainerCommonAncestorResult",
            "properties": {
                "dimensionFilters": {
                    "description": "The set of signatures shared among the alerts.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertMatchesAny"
                    },
                    "type": "array"
                },
                "headAlertName": {
                    "description": "Name of the head alert of the produced event.",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "GoogleInternalPlxV2AlertBackendMetadata",
                    "description": "Stripped-down version of Metadata with only the parts that are used in the\ngenerated event."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerConfig": {
            "description": "Configures an algorithm that tries to explain the causes of alerts.",
            "id": "GoogleInternalPlxV2AlertEventExplainerConfig",
            "properties": {
                "autoresolve": {
                    "description": "Alerts will be automatically resolved if all of the following apply:\n\n- enabled == true\n- autoresolve == true\n- alert.state == OPEN\n- explanation.confidence >= autoresolve_min_confidence\n\nautoresolve_min_confidence is a score between (0, 1] that an explanation\ngenerated by this explainer needs to have in order to autoresolve an alert.",
                    "type": "boolean"
                },
                "autoresolveMinConfidence": {
                    "format": "double",
                    "type": "number"
                },
                "enabled": {
                    "description": "If true, the explainer will run and annotate alerts if explanations are\nfound.\n\nIf false, the explainer won't run.",
                    "type": "boolean"
                },
                "specificConfig": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerExplainerSpecificConfig"
                },
                "type": {
                    "description": "All values are valid except TYPE_UNSPECIFIED, TYPE_USER, and\nTYPE_LATE_DATA.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_USER",
                        "TYPE_LATE_DATA",
                        "TYPE_ALERT_SEQUENCE",
                        "TYPE_COMMON_ANCESTOR",
                        "TYPE_PUBLIC_EVENT",
                        "TYPE_FEYNMAN",
                        "TYPE_UNEXPLAINED_ANOMALY",
                        "TYPE_DEBUG_SUGGEST",
                        "TYPE_SHODAN"
                    ],
                    "enumDescriptions": [
                        "",
                        "A human-generated explanation. All other enum values represent\nexplanations generated algorithmically.",
                        "We checked the time series data some time after the corresponding alert\nfired and we found that the monitored point is no longer anomalous.",
                        "The alert's RuleInstance fired on the previous monitored time in the\nsame anomaly direction (above or below threshold) so we assume that both\nalerts have the same cause.",
                        "We check if the alert shares the same set of signatures with other alerts\nthat fired on the same monitored time and that come from the same\ndatasource. If so, the set of signatures will be used for explaining the\nmatching alerts.",
                        "The alert occurred during a public event.",
                        "The anomaly was caused by a specific slice of traffic.",
                        "Fall-back type necessary to represent alerts without any events in\nevents-space.",
                        "Suggests debugging information for Thor alerts. Contact jinwang@ for\nquestions.",
                        "We check changes to binary versions and experiment snapshots close to the\ntime of the alert, using Shodan (go/shodan)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerDebugSuggestConfig": {
            "id": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestConfig",
            "properties": {
                "sstablePath": {
                    "description": "Directory to an sstable with string ruleId keys, and proto\nbuzz.analytics.plxalerts.proto.Debug values. The sstable is used by this\nexplainer to help identify alert root causes.\nThe directory specified here is a parent directory, the sstable file will\nbe stored in date sub-directories. For example:\n    <sstable_path>/<project_id>/2017/10/18/debug.sstable",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResult": {
            "description": "Details for events output by the Debug Suggest explainer.",
            "id": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResult",
            "properties": {
                "endpoints": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResultEndpoint"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResultEndpoint": {
            "id": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResultEndpoint",
            "properties": {
                "fields": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResultEndpointField"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResultEndpointField": {
            "description": "Field represents attribute defined on an endpoint, such as ids, duration,\nfailure reason, latency, quality, etc.",
            "id": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResultEndpointField",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerExplainer": {
            "description": "Describes the algorithm that tries to explain alert causes.",
            "id": "GoogleInternalPlxV2AlertEventExplainerExplainer",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerExplainerSpecificConfig": {
            "id": "GoogleInternalPlxV2AlertEventExplainerExplainerSpecificConfig",
            "properties": {
                "commonAncestor": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerCommonAncestorConfig",
                    "description": "Common Ancestor settings are not user-configurable. System-wide defaults\nfor Common Ancestor will always be used instead.\nPlx Alerts developers: System-wide defaults are defined here:\nads/zoom/alerts/config/explainer.proto"
                },
                "debugSuggest": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestConfig",
                    "description": "Non-general purpose explainers."
                },
                "publicEvent": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerPublicEventConfig"
                },
                "shodan": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerShodanConfig",
                    "description": "Experimental."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerExplainerSpecificResult": {
            "description": "SpecificResult encapsulates details for the events generated by explainers.",
            "id": "GoogleInternalPlxV2AlertEventExplainerExplainerSpecificResult",
            "properties": {
                "alertSequence": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerAlertSequenceResult"
                },
                "commonAncestor": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerCommonAncestorResult"
                },
                "debugSuggest": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerDebugSuggestResult"
                },
                "feynman": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerFeynmanResult"
                },
                "lateData": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerLateDataResult"
                },
                "publicEvent": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerPublicEventResult"
                },
                "shodan": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerShodanResult"
                },
                "userSuppliedDescription": {
                    "description": "User-readable plain-text string used if Explainer.Type is USER.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerFeynmanResult": {
            "description": "Details for events output by the Feynman explainer.",
            "id": "GoogleInternalPlxV2AlertEventExplainerFeynmanResult",
            "properties": {
                "response": {
                    "format": "byte",
                    "type": "string"
                },
                "url": {
                    "description": "URL to Feynman UI that displays the explanation. This field is set only for\ncertain alerts from the \"adspam-alerts\" project.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerLateDataResult": {
            "description": "Details for events output by the Late Data explainer.",
            "id": "GoogleInternalPlxV2AlertEventExplainerLateDataResult",
            "properties": {
                "newValue": {
                    "description": "Most recent value.",
                    "format": "double",
                    "type": "number"
                },
                "previousValue": {
                    "description": "Value present at the time the alert fired or was automatically reopened for\nthe last time.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerPublicEventConfig": {
            "id": "GoogleInternalPlxV2AlertEventExplainerPublicEventConfig",
            "properties": {
                "endShift": {
                    "format": "google-duration",
                    "type": "string"
                },
                "events": {
                    "description": "For now we are hardcoding the list of all supported public event.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEventExplainerPublicEventConfigEvent"
                    },
                    "type": "array"
                },
                "startShift": {
                    "description": "When checking if an alert happens within the bounds of a public_event,\napply these shifts to the event's start and end timestamps. Positive values\nshift are added to the event's start_datetime and end_datetime. Negative\nvalues are substracted.\n\nExamples:\n1) Effects of a holiday on monitored data on this pipeline manifest\n   themselves up to two days later.\n     - start_shift: {seconds: 0}\n     - end_shift:   {seconds: 172800} // 86400*2\n\n2) Effects of a holiday on monitored data on this pipeline manifest\n   themselves the day before the holiday and continue for one day after.\n     - start_shift: {seconds: -86400}\n     - end_shift:   {seconds: 86400}",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerPublicEventConfigEvent": {
            "id": "GoogleInternalPlxV2AlertEventExplainerPublicEventConfigEvent",
            "properties": {
                "countries": {
                    "description": "Two letter country codes for country-specific event.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "endTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "name": {
                    "description": "eg: \"Christmas 2018\"",
                    "type": "string"
                },
                "startTime": {
                    "description": "Inclusive start and exclusive end timestamps of the event.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerPublicEventResult": {
            "description": "Details for events output by the Public Event explainer.",
            "id": "GoogleInternalPlxV2AlertEventExplainerPublicEventResult",
            "properties": {
                "countries": {
                    "description": "Two letter country code for all the countries for which this event is\nrelevant. This is set only when an event affects a small set of countries.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of event chosen by this explainer.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerResult": {
            "id": "GoogleInternalPlxV2AlertEventExplainerResult",
            "properties": {
                "specificResult": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerExplainerSpecificResult"
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_USER",
                        "TYPE_LATE_DATA",
                        "TYPE_ALERT_SEQUENCE",
                        "TYPE_COMMON_ANCESTOR",
                        "TYPE_PUBLIC_EVENT",
                        "TYPE_FEYNMAN",
                        "TYPE_UNEXPLAINED_ANOMALY",
                        "TYPE_DEBUG_SUGGEST",
                        "TYPE_SHODAN"
                    ],
                    "enumDescriptions": [
                        "",
                        "A human-generated explanation. All other enum values represent\nexplanations generated algorithmically.",
                        "We checked the time series data some time after the corresponding alert\nfired and we found that the monitored point is no longer anomalous.",
                        "The alert's RuleInstance fired on the previous monitored time in the\nsame anomaly direction (above or below threshold) so we assume that both\nalerts have the same cause.",
                        "We check if the alert shares the same set of signatures with other alerts\nthat fired on the same monitored time and that come from the same\ndatasource. If so, the set of signatures will be used for explaining the\nmatching alerts.",
                        "The alert occurred during a public event.",
                        "The anomaly was caused by a specific slice of traffic.",
                        "Fall-back type necessary to represent alerts without any events in\nevents-space.",
                        "Suggests debugging information for Thor alerts. Contact jinwang@ for\nquestions.",
                        "We check changes to binary versions and experiment snapshots close to the\ntime of the alert, using Shodan (go/shodan)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerShodanConfig": {
            "description": "Configuration values for the Shodan explainer.",
            "id": "GoogleInternalPlxV2AlertEventExplainerShodanConfig",
            "properties": {
                "lookBackWindow": {
                    "description": "The duration of the look back window for an event, e.g. 12 hours.",
                    "format": "google-duration",
                    "type": "string"
                },
                "systems": {
                    "description": "The list of affecting systems that Shodan will use to determine the changes\nthat might explain the event, e.g. \"contentads\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerShodanResult": {
            "id": "GoogleInternalPlxV2AlertEventExplainerShodanResult",
            "properties": {
                "name": {
                    "description": "Name of type of this event, i.e., \u201cBorg Job\u201d.",
                    "type": "string"
                },
                "summaries": {
                    "description": "Summaries of each Shodan event connected to the Plx Alerts event.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEventExplainerShodanResultSummary"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplainerShodanResultSummary": {
            "description": "A summary of a particular Shodan event. For now we use 1 Plx Alerts event\nto group N Shodan events.",
            "id": "GoogleInternalPlxV2AlertEventExplainerShodanResultSummary",
            "properties": {
                "endTime": {
                    "description": "Timestamp of end of the event.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "startTime": {
                    "description": "Timestamp of start of the event.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "summary": {
                    "description": "The summary of the particular event.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplanation": {
            "description": "An explanation represents a link between an event (hypothesized to have\ncaused an alert) and an alert itself.",
            "id": "GoogleInternalPlxV2AlertEventExplanation",
            "properties": {
                "alertName": {
                    "description": "Alert associated with this explanation.",
                    "type": "string"
                },
                "author": {
                    "description": "This is \"plx-alerts-system\" for machine generated explanations and\na username in \"mdbuser/foo\" or \"gaiauaser/foo\" format for user-generated\nexplanations.",
                    "type": "string"
                },
                "autoresolve": {
                    "description": "If false then this explanation will never autoresolve its alert. Intended\nto be used by explainers that group alerts together and need to leave one\nof them unresolved. Temporary until we have incident protos (b/38336042).",
                    "type": "boolean"
                },
                "confidence": {
                    "description": "Value in (0, 1] where 0 means no confidence that the explanation is correct\non the part of the author and 1 means absolute certainty.\n\nFor user-entered explanations this value is always 1. For machine\ngenerated explanations this value depends on the underlying explanation\nengine.",
                    "format": "double",
                    "type": "number"
                },
                "createTime": {
                    "description": "Time at which the explanation was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "eventName": {
                    "description": "Event associated with this explanation.",
                    "type": "string"
                },
                "explainerResult": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplainerResult",
                    "description": "Additional details for this explanation in either free-form (\"generic\") or\nin structured format (all other types of details).\n\nThis field is optional and is intended to be used in\nFormatExplanationDetails. See \"summary\" for more details."
                },
                "feedback": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplanationFeedback"
                },
                "name": {
                    "description": "Full and unique explanation resource name of the form\n\n  alerts/projects/<project_id>/alerts/<alert_id>/explanations/<explanation_id>\n\n<explanation_id> is system-generated and immutable.",
                    "type": "string"
                },
                "summary": {
                    "description": "Short human-readable description of the cause of an alert. Must be <= 80\nchars and plain text.\n\nThis field is optional and is intended to be read in\nFormatExplanationSummary and used by explainers whose events always have 1\nalert and where the explanation details don't change based on time. Eg:\n- a holiday explainer would benefit from this\n- a \"sequence of alerts\" explainer wouldn't because we will want to show to\n  the user the beginning and at the time we generate explanations (when\n  alerts fire) we don't know when the sequence will stop.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertEventExplanationFeedback": {
            "id": "GoogleInternalPlxV2AlertEventExplanationFeedback",
            "properties": {
                "createTime": {
                    "description": "Time at which the feedback was provided.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "label": {
                    "enum": [
                        "UNSPECIFIED",
                        "USEFUL",
                        "NOT_USEFUL"
                    ],
                    "enumDescriptions": [
                        "",
                        "A human considers the explanation applicable to a given alert.",
                        "A human considers the explanation not applicable to a given alert."
                    ],
                    "type": "string"
                },
                "rater": {
                    "description": "MDB user or Gaia user of the person who provided the feedback. See\ngo/plx-principalrep for the exact format.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertFetchBackendMetadataRequest": {
            "id": "GoogleInternalPlxV2AlertFetchBackendMetadataRequest",
            "properties": {
                "backend": {
                    "$ref": "GoogleInternalPlxV2AlertBackendConfig",
                    "description": "Required. Backend to fetch metadata for."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertGetAlertContextRequest": {
            "id": "GoogleInternalPlxV2AlertGetAlertContextRequest",
            "properties": {
                "alertName": {
                    "description": "The alert whose context / explanations and events to return.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertGetAlertRequest": {
            "id": "GoogleInternalPlxV2AlertGetAlertRequest",
            "properties": {
                "name": {
                    "description": "Required. Alert resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertGetProjectRequest": {
            "id": "GoogleInternalPlxV2AlertGetProjectRequest",
            "properties": {
                "name": {
                    "description": "Required. Project resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertGetRuleRequest": {
            "id": "GoogleInternalPlxV2AlertGetRuleRequest",
            "properties": {
                "name": {
                    "description": "Required. Rule resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertGetSilenceRequest": {
            "id": "GoogleInternalPlxV2AlertGetSilenceRequest",
            "properties": {
                "name": {
                    "description": "Required. SilenceRule resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertHasAlerts": {
            "id": "GoogleInternalPlxV2AlertHasAlerts",
            "properties": {
                "query": {
                    "description": "Required. VanillaST query, e.g. \"rule:foo assignee:someone\".\nSee go/plx-alerts-user-guide#search for more details.\n\nThis field supports the following ADDITIONAL template functions. The\nexamples below assume that the time that the email summary is scheduled to\nrun is '2019-08-16 10:00'.\n\nSupported template functions\n- hours_ago: e.g. '{{4 | hours_ago}}' translates to: '2019-08-16T06:00'.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertLegacyAcl": {
            "id": "GoogleInternalPlxV2AlertLegacyAcl",
            "properties": {
                "alertReaders": {
                    "description": "Determines who can see alerts generated by this config. Users in this ACL\nare also able to see all the Project rules.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "projectEditors": {
                    "description": "Determines who can modify and delete a Project.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "projectExecutors": {
                    "description": "Determines which users are allowed to send execution requests that\nrun/evaluate rules and/or rule instances.. Groups are\nnot expanded. If set it must be of the form \"mdbuser/foo\" or\n\"mdbgroup/bar\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertLink": {
            "id": "GoogleInternalPlxV2AlertLink",
            "properties": {
                "displayName": {
                    "description": "E.g. Google.",
                    "type": "string"
                },
                "url": {
                    "description": "E.g. http://google.com.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListAutobreakdownRunsRequest": {
            "id": "GoogleInternalPlxV2AlertListAutobreakdownRunsRequest",
            "properties": {
                "parent": {
                    "description": "Required. The parent resource name, i.e. the rule for which to list\nautobreakdown runs. E.g. 'alerts/projects/myproject/rules/rule1'.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListAutobreakdownRunsResponse": {
            "id": "GoogleInternalPlxV2AlertListAutobreakdownRunsResponse",
            "properties": {
                "autobreakdownRuns": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAutobreakdownRun"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListProjectsRequest": {
            "id": "GoogleInternalPlxV2AlertListProjectsRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListProjectsResponse": {
            "id": "GoogleInternalPlxV2AlertListProjectsResponse",
            "properties": {
                "projects": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertProject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListRuleInstanceExecutionsRequest": {
            "id": "GoogleInternalPlxV2AlertListRuleInstanceExecutionsRequest",
            "properties": {
                "excludeTimeseriesData": {
                    "description": "Optional. If true, rule_instance.Execution.anomaly_time_series will not be\npopulated. The default behavior is to fetch the time series data along with\nthe rule instances executions, which can result in a large response proto\nif execution_count is large.",
                    "type": "boolean"
                },
                "executionCount": {
                    "description": "Required. Number of executions to return. The executions are returned in\nDESC fetcher_status.start_time order. If a point in time has more than 1\nexecution associated with it then the last 20 executions for that monitored\ntime will be returned.",
                    "format": "int32",
                    "type": "integer"
                },
                "parent": {
                    "description": "Required. The parent resource name, i.e. the rule instance for which to\nlist executions. E.g.\n'alerts/projects/projA/rules/ruleB/instances/instC'.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListRuleInstanceExecutionsResponse": {
            "id": "GoogleInternalPlxV2AlertListRuleInstanceExecutionsResponse",
            "properties": {
                "ruleInstanceExecutions": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRuleInstanceExecution"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListRuleInstancesRequest": {
            "id": "GoogleInternalPlxV2AlertListRuleInstancesRequest",
            "properties": {
                "parent": {
                    "description": "Required. The parent resource name, i.e. the rule for which to list\nthe rule instances. E.g. 'alerts/projects/myproject/rules/rule1'.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListRuleInstancesResponse": {
            "id": "GoogleInternalPlxV2AlertListRuleInstancesResponse",
            "properties": {
                "ruleInstances": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListRulesRequest": {
            "id": "GoogleInternalPlxV2AlertListRulesRequest",
            "properties": {
                "parent": {
                    "description": "Required. The parent resource name, i.e. the project for which to list\nrules. E.g. 'alerts/projects/myproject'.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListRulesResponse": {
            "id": "GoogleInternalPlxV2AlertListRulesResponse",
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListSilencesRequest": {
            "id": "GoogleInternalPlxV2AlertListSilencesRequest",
            "properties": {
                "parent": {
                    "description": "Required. The parent resource name, e.g. 'alerts/projects/myproject'.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListSilencesResponse": {
            "id": "GoogleInternalPlxV2AlertListSilencesResponse",
            "properties": {
                "silences": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertSilence"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListSuggestionsRequest": {
            "id": "GoogleInternalPlxV2AlertListSuggestionsRequest",
            "properties": {
                "parent": {
                    "description": "Required. The parent resource name, i.e. the project for which to list\nsuggestion. E.g. 'alerts/projects/myproject'.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertListSuggestionsResponse": {
            "id": "GoogleInternalPlxV2AlertListSuggestionsResponse",
            "properties": {
                "suggestions": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertSuggestionSuggestion"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertMatchesAny": {
            "description": "A time series filter equivalent to sql's \"col IN ()\" statement.",
            "id": "GoogleInternalPlxV2AlertMatchesAny",
            "properties": {
                "dimension": {
                    "description": "Required. - DASNav: These are dimension value ids or dimension value titles (in\n  this order of precedence).\n- PlxQuery and PowerDrill: These are dimension values.",
                    "type": "string"
                },
                "values": {
                    "description": "Required. Set of dimension values.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertMatchesRegex": {
            "description": "This field only has an effect as part of rule.autobreakdown.exclude.\n\nIf true, regex is interpreted as a RE2 regular expression (e.g.\n\"^d3v[14]$\" will match dimension value ids \"d3v1\" and \"d3v4\").\n\nPrefer MatchesAny if you only need string equality matching.",
            "id": "GoogleInternalPlxV2AlertMatchesRegex",
            "properties": {
                "dimension": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertNotifications": {
            "id": "GoogleInternalPlxV2AlertNotifications",
            "properties": {
                "recipients": {
                    "description": "List of email addresses to send email notifications to, e.g.\n'sergey@google.com'.\n\nOnly email addresses ending in '@google.com' or\n'@grotations.appspotmail.com' are supported.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subspace": {
                    "$ref": "GoogleInternalPlxV2AlertSubspaceConfig",
                    "description": "Configuration for sending Subspace notification from alerts."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertOffsetSchedule": {
            "description": "When and how to evaluate a rule.\n\nFor example, consider a rule with daily granularity and the following\nschedule:\n\n    offset_schedule {\n      entries {\n        offset {\n          iso_duration: '2h'\n        }\n        action: ALERT_IF_ANOMALY\n      }\n      entries {\n        offset {\n          iso_duration: '26h'\n        }\n        action: ALERT_IF_ANOMALY_OR_MISSING\n      }\n    }\n\nEvery day at 2:00 this rule will check the data of the preceding day and\ncreate an alert if it's anomalous. If the preceding day's data hasn't been\ngenerated yet (i.e. the table is missing a row for the given day or hour),\nit will do nothing.\n\nOne day later (at 2:00), it will check the data a second time and create an\nalert if it's anomalous (only if it didn't already create one the first\ntime). This time, it will also create an alert if the data has still not\nbeen generated.\n\nNote that the actual monitoring will happen between the requested offset\nand Plx Alerts's task latency SLO (see go/plx-alerts-slo).",
            "id": "GoogleInternalPlxV2AlertOffsetSchedule",
            "properties": {
                "entries": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertOffsetScheduleEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertOffsetScheduleEntry": {
            "id": "GoogleInternalPlxV2AlertOffsetScheduleEntry",
            "properties": {
                "action": {
                    "enum": [
                        "ACTION_UNSPECIFIED",
                        "ALERT_IF_ANOMALY",
                        "ALERT_IF_ANOMALY_OR_MISSING",
                        "RECORD_ONLY"
                    ],
                    "enumDescriptions": [
                        "",
                        "Creates an alert if data is anomalous.",
                        "Creates an alert if data is anomalous or missing.",
                        "Does not create any alerts, but keeps track of the data's state. This is\nintended to be used for automatically tuning the schedule through an\nupcoming Plx Alerts feature."
                    ],
                    "type": "string"
                },
                "offset": {
                    "$ref": "TimePeriod",
                    "description": "When to monitor. Measured from the *end* of the time interval to monitor.\nE.g. an offset of '4h' causes the data of Nov 23, 2:00 to be checked\non Nov 23, 7:00."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertPingSchedule": {
            "description": "PingSchedule specifies how data anomalies and absences should be treated\nwithin certain time intervals:\n\n             |                      |                      |\n             +- alerting horizon    +- max data latency    +- min data\n             |                      |                      | latency\n--time-------|----------------------|----------------------|-------------->\n             |                      |                      |\n             |                      |                      |\n- This data  | - Monitored for      | - Monitored for      | - This data is\n  is ignored |   anomalies          |   anomalies          |   ignored\n             | - Monitored for      | - Missing data is    |\n             |   missing data       |   ignored            |\n             |                      |                      |\n             |                      |                      |",
            "id": "GoogleInternalPlxV2AlertPingSchedule",
            "properties": {
                "alertingHorizon": {
                    "$ref": "TimePeriod",
                    "description": "Data older than alerting_horizon is ignored."
                },
                "maxDataLatency": {
                    "$ref": "TimePeriod",
                    "description": "Upper bound on how long it normally takes until the data for a given time\npoint is complete. It is up to the user to decide what they consider\nnormal.\nMissing data for times between max_data_latency and alerting_horizon\ntrigger an alert."
                },
                "minDataLatency": {
                    "$ref": "TimePeriod",
                    "description": "Lower bound on how long it normally takes until the data for a given time\npoint is complete.\n\nData more recent than min_data_latency is ignored.\n\nIf your data only contains produces complete time points, it is safe to set\nmin_data_latency to zero."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertPoint": {
            "description": "A measure's value at a point in time rounded to the time series' time\ndiscretization.",
            "id": "GoogleInternalPlxV2AlertPoint",
            "properties": {
                "lower": {
                    "description": "\"Confidence band\", only for Autofocus and BayesDLM.",
                    "format": "double",
                    "type": "number"
                },
                "time": {
                    "description": "The time for this point.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "upper": {
                    "format": "double",
                    "type": "number"
                },
                "value": {
                    "description": "The value associated with this timestamp.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertPreviewAutobreakdownRuleRequest": {
            "id": "GoogleInternalPlxV2AlertPreviewAutobreakdownRuleRequest",
            "properties": {
                "rule": {
                    "$ref": "GoogleInternalPlxV2AlertRule",
                    "description": "The rule whose dimension break down the user wants to preview."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertPreviewAutobreakdownRuleResponse": {
            "id": "GoogleInternalPlxV2AlertPreviewAutobreakdownRuleResponse",
            "properties": {
                "dimensionFilters": {
                    "description": "One set of dimension filters; one for each rule instance that would be\ngenerated by the supplied rule.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertDimensionFilters"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertPreviewExecutionRuleInstanceRequest": {
            "id": "GoogleInternalPlxV2AlertPreviewExecutionRuleInstanceRequest",
            "properties": {
                "ruleInstance": {
                    "$ref": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance"
                },
                "timestampsToMonitor": {
                    "description": "Timestamps to monitor.\n\nOptional if the above rule uses ping schedule, in which case the\ntimestamps to monitor can be meaningfully inferred. Required otherwise.",
                    "items": {
                        "format": "google-datetime",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertPreviewExecutionRuleInstanceResponse": {
            "id": "GoogleInternalPlxV2AlertPreviewExecutionRuleInstanceResponse",
            "properties": {
                "ruleInstanceExecutionNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertProject": {
            "description": "A project defines a set of monitoring rules, ACLs and other global options to\ncontrol the behavior of Plx Alerts.",
            "id": "GoogleInternalPlxV2AlertProject",
            "properties": {
                "accountingUser": {
                    "description": "Optional. The user that will be charged for resource usage.\n\nValidation follows Ganpati rules on valid group names\nhttp://screen/g8Z0Jj3AfcD\n\nAllowed: a-z, 0-9, dashes, underscores. At least one character.",
                    "type": "string"
                },
                "alertListingOptions": {
                    "$ref": "GoogleInternalPlxV2AlertAlertListingOptions",
                    "description": "Settings to control how the alerts listing in the web frontend looks like."
                },
                "allowPiperUpdates": {
                    "description": "If set to true then this Project can be modified by submitting CLs to\n//depot/google3/configs/ads/zoom/alerts/<mdbgroup>/<project_id>.pbtxt, in\naddition to being modifiable through stubby and through the Plx Alerts web\nfrontend. Plx Alerts will keep the two project copies in sync.\n\nTo make your Project editable only through piper, blank out\nacl.config_admins, once you have saved allow_piper_updates = true.\n\n*** WARNING ***\nProjects stored in piper are readable by anyone with piper access. Be\nmindful of any sensitive information that you may eventually want to store\nhere, e.g. thresholds for revenue, sensitive dimension names or metric\nnames.\n\nSee http://go/plx-alerts-piper-updates for more details.",
                    "type": "boolean"
                },
                "buganizer": {
                    "$ref": "GoogleInternalPlxV2AlertBuganizerProjectConfig",
                    "description": "Default configuration for creating new issues from alerts. This\nconfiguration can be overridden at the rule level."
                },
                "contactEmail": {
                    "description": "Required. Email address that Plx Alerts will use for important updates specific to\nthis project. For robustness we recommend using a team or rotation email\nalias.\n\nEmail notifications generated by rules will not be sent to this address.\nFor that please look at Project.notifications.\n\nOnly email addresses ending in '@google.com' or\n'@grotations.appspotmail.com' are supported.",
                    "type": "string"
                },
                "dataSourceReader": {
                    "description": "The user to use when reading data from data sources, such as DASNav or Plx\nQuery.\n\nFor projects with DASNav rules: if you want to use a group, which we\nrecommend, the group must be a Ganpati v2 production placeholder group\n(see go/plx-alerts-faq#dasnav-plx-query).\n\nFor security reasons, if this field is changed it can only be changed to\nbe the user that is issuing the modification request. It cannot be changed\nfrom piper.",
                    "type": "string"
                },
                "description": {
                    "description": "Description for this project, in markdown format.",
                    "type": "string"
                },
                "displayName": {
                    "description": "User-friendly version of Project.name. If empty, \"name\" will be used.",
                    "type": "string"
                },
                "emailSummaries": {
                    "description": "Optional. Specifies who to send alert summary emails not, what content to\ninclude in them, and when to send them.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEmailSummary"
                    },
                    "type": "array"
                },
                "explainers": {
                    "description": "Configures how explainers interact with this project's alerts. Any\nexplainers not defined here will use Plx Alerts' default for that\nexplainer (see google3/ads/zoom/alerts/config/prod.pbtxt).",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEventExplainerConfig"
                    },
                    "type": "array"
                },
                "legacyAcl": {
                    "$ref": "GoogleInternalPlxV2AlertLegacyAcl",
                    "description": "Legacy ACLs to use while users are transitioning to Plx Alerts API v2. This\nwill be removed in favor of Plx Alerts API-wide uniform authentication and\nauthorization handling."
                },
                "links": {
                    "description": "Set of links to render at the top of http://plx-alerts/ and on the footer\nof alert email notifications. A good practice is to link to documents\ndescribing how to handle the alerts, or what the team SLOs are.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertLink"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Required. Identifier for this project. It must be of the form\n\n  alerts/projects/<project_id>\n\nwhere <project_id> must match regexp \"^[a-z0-9_-]{1,50}$\". <project_id>\nmust be unique among all projects. It cannot be changed after creation. The\nbest practice is to choose a name based on your project or team name.",
                    "type": "string"
                },
                "notifications": {
                    "$ref": "GoogleInternalPlxV2AlertNotifications",
                    "description": "Required. Determines who to send alert email notifications to."
                },
                "rules": {
                    "description": "Monitoring rules in this project.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRule"
                    },
                    "type": "array"
                },
                "zeroConfig": {
                    "$ref": "GoogleInternalPlxV2AlertZeroconfigConfig",
                    "description": "Optional. Specifies configuration options to tell Plx alerts to\nautomatically manage rules for the given data sets."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertRule": {
            "description": "A rule specifies what data to monitor, when to monitor it, and what is\nconsidered an anomaly.",
            "id": "GoogleInternalPlxV2AlertRule",
            "properties": {
                "autobreakdown": {
                    "$ref": "GoogleInternalPlxV2AlertAutobreakdownConfig",
                    "description": "Auto-breakdown enables one rule to configure the top N subslices\nby automatically breaking down the configured dimensions. See\ngo/plx-alerts-autodiscovery for details.\n\nIf unset, this rule is not an autobreakdown rule."
                },
                "autotuner": {
                    "$ref": "GoogleInternalPlxV2AlertAutotunerConfig",
                    "description": "Configures Autotuner for this rule. If unset, Plx Alerts default\nsettings will be used."
                },
                "buganizer": {
                    "$ref": "GoogleInternalPlxV2AlertBuganizerRuleConfig",
                    "description": "Configuration for creating new issues from alerts that stem from this rule.\nThis configuration overrides any Buganizer configuration set at the project\nlevel."
                },
                "customAlertFields": {
                    "description": "Custom fields to add to alerts generated by this rule. Note that\nadding a new custom field will not automatically backfill past alerts.\nTo request a backfill please file a bug at\nhttp://go/plx-alerts-cf-backfill-request.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertCustomField"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Description or notes for this rule. Markdown is supported.",
                    "type": "string"
                },
                "detector": {
                    "$ref": "GoogleInternalPlxV2AlertDetectorConfig",
                    "description": "Defines what is considered an anomaly."
                },
                "displayName": {
                    "description": "User-friendly version of Rule.name. If empty, Rule.name or an\nautomatically generated string with key rule properties will be used,\ndepending on where the field is being rendered.",
                    "type": "string"
                },
                "links": {
                    "description": "{% verbatim %}\nSet of links to render below alert charts, and in alert emails. It's\nintended to be used to link to web tools that help debug alerts fired by\nthis rule, or to provide rule-specific playbooks.\n\nThe following Go template variables can be used in the link.url field and\nwill be replaced with their value at render time:\n\n{{.PROJECT_ID}}     string, project ID\n{{.RULE_ID}}        string, rule ID\n{{.ALERT}}          alert proto, alert\n{{.ALERT_ID}}       string, alert ID\n{{.SIG}}            alert signature, dimensions and values\n{{.FIRE_TIME}}      Go time, alert fire time\n{{.MONITORED_TIME}} Go time, alert monitored time\n{{.MEASURE0}}       string, monitored measure\n{{.START}}          Go time, time series start time\n{{.END}}            Go time, time series end time\n\nYou can use these tokens to generate specialized links to investigate\nalerts. The following Go template functions are supported to modify the\ntokens above:\n{{days_ago .END ndays}} returns Go time, (.END - ndays)\n{{yyyymmdd .END }} returns a string, e.g. formats .END as \"20170607\"\n{{hour .END}} returns monitored hour as string\n{{dim_first_value .SIG \"country\"}} returns a first value (string) from the\nalert dimension \"country\".\n{{dim_first_value_title .ALERT \"country\"}} returns a title value (string)\nfrom the alert dimension \"country\". This is useful for DASNav navigators\nwhere dimension value titles are more informative than value ids.\n\nExamples:\nhttp://pd/uniqueid={{.ALERTID}}&measure={{.MEASURE0}}&{{yyyymmdd .START}}\nhttp://pd/session=users.{{.ALERT.Assignee}}.scratch\nhttp://pd/table_name=processed_ads.AdEvents.{{days_ago .END 3 |\nyyyymmdd}}-{{yyyymmdd .END}}\n{% endverbatim %}",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertLink"
                    },
                    "type": "array"
                },
                "manager": {
                    "enum": [
                        "MANAGER_UNSPECIFIED",
                        "MANAGER_USER",
                        "MANAGER_ZERO_CONFIG"
                    ],
                    "enumDescriptions": [
                        "",
                        "This rule is controlled by an end user (whether programmatically or not\ndoesn't matter).",
                        "This rule is controlled by a Zero Config (automanaged) backend."
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Full and unique rule resource name of the form\n\n  alerts/projects/<project_id>/rules/<rule_id>\n\n<rule_id> must match [a-z0-9_]{3,100}.\n\n*** WARNING ***\nChanging the name of a rule after creating it will cause all alerts and\nother monitoring history to stop being associated with the rule.",
                    "type": "string"
                },
                "notifications": {
                    "$ref": "GoogleInternalPlxV2AlertNotifications",
                    "description": "Notification configurations. Currently, the only control option\nis which email addresses notifications are sent to."
                },
                "schedule": {
                    "$ref": "GoogleInternalPlxV2AlertSchedule",
                    "description": "Required. Determines when the rule is evaluated."
                },
                "state": {
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "STATE_ENABLED",
                        "STATE_DISABLED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The entity is being processed by Plx Alerts.",
                        "The entity has been disabled automatically by Plx Alerts or manually by a\nhuman and will need user intervention to go back to ACTIVE state. The\nentity is visible through config related methods and through the web fe\nbut it's ignored by the monitoring pipeline."
                    ],
                    "type": "string"
                },
                "timeSeriesSource": {
                    "$ref": "GoogleInternalPlxV2AlertTimeSeriesSource",
                    "description": "The single input to this rule, e.g. which DASNav Navigator data is fetched\nfrom, and how to interpret the fetched data."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertRuleInstanceExecution": {
            "description": "Result of a rule instance execution for a single monitored time stamp.\n\nThe monitored time stamp is found in anomaly_time_series.monitored_time.",
            "id": "GoogleInternalPlxV2AlertRuleInstanceExecution",
            "properties": {
                "alertName": {
                    "description": "If this task resulted in an alert, this is its name, else it will be empty.",
                    "type": "string"
                },
                "anomalyTimeSeries": {
                    "$ref": "GoogleInternalPlxV2AlertAnomalyTimeSeries",
                    "description": "Data that was analyzed and outcome of the analysis."
                },
                "completeTime": {
                    "description": "Time when the entire task was completed, nil if there are pending component\ntasks.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "detectorStageStatus": {
                    "$ref": "GoogleInternalPlxV2AlertRuleInstancePipelineStageStatus",
                    "description": "Status for the second stage of evaluating a rule instance: detecting\nanomalies.\n\nThe detector component status may be nil if data is the same as in the\nprevious monitoring attempt."
                },
                "explainerStageStatus": {
                    "$ref": "GoogleInternalPlxV2AlertRuleInstancePipelineStageStatus",
                    "description": "Status for the third stage of evaluating a rule instance: attempting to\nlink the anomaly to an existing event, or creating an event out of one or\nmore anomalies and then linking this anomaly to it.\n\nThis component status may be nil if data is not anomalous."
                },
                "explainerStageStatusDetails": {
                    "description": "Status information for each of the explainers that ran on the stage.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertRuleInstanceExecutionExplainerStageStatusDetails"
                    },
                    "type": "array"
                },
                "fetcherStageStatus": {
                    "$ref": "GoogleInternalPlxV2AlertRuleInstancePipelineStageStatus",
                    "description": "Status for the first stage of evaluating a rule instance: retrieving the\ndata to monitor from an external data source."
                },
                "name": {
                    "description": "Unique resource name of the rule run, of the form:\n\n  projects/<id>/rule/<id>/instances/<id>/executions/<id>.",
                    "type": "string"
                },
                "status": {
                    "$ref": "StatusProto",
                    "description": "Status for the entire task, nil if there are pending component tasks."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertRuleInstanceExecutionExplainerStageStatusDetails": {
            "id": "GoogleInternalPlxV2AlertRuleInstanceExecutionExplainerStageStatusDetails",
            "properties": {
                "endTime": {
                    "description": "Time when this explainer completed execution. Time start is\nexplainer_stage_status.start_time (all explainers are initiated in\nparallel).",
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "$ref": "StatusProto",
                    "description": "Status of this explainer's run. If status is DEADLINE_EXCEEDED it may\nbe either a deadline_exceeded error within the explainer's logic, or it\nmay be that the explainer itself took too long and explainerjob.go\nstopped waiting for it."
                },
                "type": {
                    "description": "Type of the explainer begin run.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_USER",
                        "TYPE_LATE_DATA",
                        "TYPE_ALERT_SEQUENCE",
                        "TYPE_COMMON_ANCESTOR",
                        "TYPE_PUBLIC_EVENT",
                        "TYPE_FEYNMAN",
                        "TYPE_UNEXPLAINED_ANOMALY",
                        "TYPE_DEBUG_SUGGEST",
                        "TYPE_SHODAN"
                    ],
                    "enumDescriptions": [
                        "",
                        "A human-generated explanation. All other enum values represent\nexplanations generated algorithmically.",
                        "We checked the time series data some time after the corresponding alert\nfired and we found that the monitored point is no longer anomalous.",
                        "The alert's RuleInstance fired on the previous monitored time in the\nsame anomaly direction (above or below threshold) so we assume that both\nalerts have the same cause.",
                        "We check if the alert shares the same set of signatures with other alerts\nthat fired on the same monitored time and that come from the same\ndatasource. If so, the set of signatures will be used for explaining the\nmatching alerts.",
                        "The alert occurred during a public event.",
                        "The anomaly was caused by a specific slice of traffic.",
                        "Fall-back type necessary to represent alerts without any events in\nevents-space.",
                        "Suggests debugging information for Thor alerts. Contact jinwang@ for\nquestions.",
                        "We check changes to binary versions and experiment snapshots close to the\ntime of the alert, using Shodan (go/shodan)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertRuleInstancePipelineStageStatus": {
            "description": "PipelineStageStatus summarizes the status of a rule instance execution on a\ngiven monitoring pipeline stage.",
            "id": "GoogleInternalPlxV2AlertRuleInstancePipelineStageStatus",
            "properties": {
                "completeTime": {
                    "description": "Time at which this stage completed.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "debugMessage": {
                    "description": "Stage-specific debugging string. See the corresponding entries in\nthe Status message for more information.",
                    "type": "string"
                },
                "startTime": {
                    "description": "Time at which this stage started processing.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "$ref": "StatusProto",
                    "description": "This field will only be set when a stage reaches a permanent state,\nsuch as success, permanent failure, or the maximum number of retries has\nbeen exhausted."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertRuleInstanceRuleInstance": {
            "description": "RuleInstance represents each of the monitoring rules that Plx Alerts\nevaluates. One Rule may expand into multiple RuleInstances, e.g. if using\nwildcards for dimensions.",
            "id": "GoogleInternalPlxV2AlertRuleInstanceRuleInstance",
            "properties": {
                "dimensionFilters": {
                    "$ref": "GoogleInternalPlxV2AlertDimensionFilters",
                    "description": "The dimension filters that define this rule instance.\n\nFor 'simple', non-autobreakdown rules, this is simply a copy of the filters\nlisted in rule.dimension_filters.\n\nFor autobreakdown rules, this specifies the exact dimensions\nthat were discovered. For example, this might specify the dimension names\nand values using the MatchesAny filter."
                },
                "disabled": {
                    "description": "Specifies whether this RuleInstance is enabled or disabled.\nTrue if this rule instance is not being evaluated. This happens e.g.\nif the corresponding rule has been disabled, or for autobreakdown rule\ninstances whose slice (as represented by dimension_filters) is no longer\nin the top N.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Full and unique resource name of this rule instance, of the form\n\n  alerts/projects/<project_id>/rules/<rule_id>/instances/<instance_id>\n\n<instance_id> is auto-generated by the Plx Alerts system and cannot be\nmodified. It's in the format 'ri[0-9]+'.",
                    "type": "string"
                },
                "rule": {
                    "$ref": "GoogleInternalPlxV2AlertRule",
                    "description": "A copy/snapshot of the Rule that generated this RuleInstance."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSchedule": {
            "id": "GoogleInternalPlxV2AlertSchedule",
            "properties": {
                "offsetSchedule": {
                    "$ref": "GoogleInternalPlxV2AlertOffsetSchedule",
                    "description": "The rule is evaluated on a static schedule, e.g. every day at 2AM."
                },
                "pingSchedule": {
                    "$ref": "GoogleInternalPlxV2AlertPingSchedule",
                    "description": "The rule is evaluated whenever a data source pings Plx Alerts to tell us\nthat its data has been updated.\n\nCurrently this is only supported for DASNav rules. The ping is achieved\nby DASNav calling the RegisterDasnavUpdate API endpoint.\n"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSearchAlertsRequest": {
            "id": "GoogleInternalPlxV2AlertSearchAlertsRequest",
            "properties": {
                "orderBy": {
                    "description": "Optional. For example 'assignee desc'.\n\nSupported alert fields to order by:\n  - Alerts.Assignee\n  - Alerts.FireTime\n  - Alerts.MonitoredTime\n  - Alerts.State\n\nFollowing\nhttps://cloud.google.com/apis/design/design_patterns#sorting_order.",
                    "type": "string"
                },
                "pageSize": {
                    "description": "Required. See\nhttps://cloud.google.com/apis/design/design_patterns#list_pagination.",
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "description": "Optional. See\nhttps://cloud.google.com/apis/design/design_patterns#list_pagination.",
                    "type": "string"
                },
                "parent": {
                    "description": "Required. The name of the parent resource, which in the case of alerts is\na project.",
                    "type": "string"
                },
                "query": {
                    "description": "Required. VanillaST query, e.g. \"rule:foo assignee:someone\".\nSee go/plx-alerts-user-guide#search for more details.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSearchAlertsResponse": {
            "id": "GoogleInternalPlxV2AlertSearchAlertsResponse",
            "properties": {
                "alerts": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertAlert"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Optional. Following\nhttps://cloud.google.com/apis/design/design_patterns#list_pagination.",
                    "type": "string"
                },
                "totalSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSearchAnnotationsRequest": {
            "id": "GoogleInternalPlxV2AlertSearchAnnotationsRequest",
            "properties": {
                "scope": {
                    "$ref": "Scope",
                    "description": "The scope of the requested annotations."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSearchAnnotationsResponse": {
            "id": "GoogleInternalPlxV2AlertSearchAnnotationsResponse",
            "properties": {
                "annotations": {
                    "items": {
                        "$ref": "Annotation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSearchEventsRequest": {
            "id": "GoogleInternalPlxV2AlertSearchEventsRequest",
            "properties": {
                "date": {
                    "description": "Required. Date in 'YYYY-MM' format to restrict the returned events to.",
                    "type": "string"
                },
                "parent": {
                    "description": "Required. The name of the parent resource, a Plx Alerts project.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSearchEventsResponse": {
            "id": "GoogleInternalPlxV2AlertSearchEventsResponse",
            "properties": {
                "events": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertEventEventWithRelatedAlerts"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSilence": {
            "description": "Public API for silencing alerts.",
            "id": "GoogleInternalPlxV2AlertSilence",
            "properties": {
                "comment": {
                    "description": "Optional plain-text comment provided by the user.",
                    "type": "string"
                },
                "creationTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "creator": {
                    "description": "Username of the person who last modified the silence (e.g. \"sergey\").",
                    "type": "string"
                },
                "endTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "lastModifier": {
                    "description": "Username of the person who last modified (including deleting) the silence\n(e.g. \"sergey\").",
                    "type": "string"
                },
                "modificationTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "name": {
                    "description": "ID of the silence, e.g. \"alerts/projects/pid/silences/silence1\"",
                    "type": "string"
                },
                "startTime": {
                    "description": "When to silence alerts.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "state": {
                    "description": "State of the silence (active or deleted).",
                    "enum": [
                        "SILENCE_STATE_UNSPECIFIED",
                        "SILENCE_ACTIVE",
                        "SILENCE_DELETED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "targetAlert": {
                    "$ref": "GoogleInternalPlxV2AlertAlertMatchingParameters",
                    "description": "Which alerts are silenced."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSpikeOrSlumpPruner": {
            "description": "Determines whether detector which construct expectation bounds around a time\nseries should discard violations of the upper bound (prune_spikes) or\nlower bound (prune_slumps).",
            "id": "GoogleInternalPlxV2AlertSpikeOrSlumpPruner",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSubspaceConfig": {
            "id": "GoogleInternalPlxV2AlertSubspaceConfig",
            "properties": {
                "includeAnomalyDetails": {
                    "description": "Set to true if anomaly details (i.e. data point values, metric, dimension\nfiltering, etc.) should be included in Subspace notification. Not\nrecommended for sensitive data.",
                    "type": "boolean"
                },
                "owners": {
                    "description": "Required. Subspace notification owners (mdb group), repeated entries are\nautomatically de-duplicated. See go/subspace/settings#receiversowners.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionAutotunerAdjustments": {
            "description": "A message for all suggested autotuner adjustments within a project.",
            "id": "GoogleInternalPlxV2AlertSuggestionAutotunerAdjustments",
            "properties": {
                "perRuleAdjustments": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertSuggestionAutotunerAdjustmentsPerRuleAdjustment"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionAutotunerAdjustmentsPerRuleAdjustment": {
            "id": "GoogleInternalPlxV2AlertSuggestionAutotunerAdjustmentsPerRuleAdjustment",
            "properties": {
                "ruleDisplayName": {
                    "type": "string"
                },
                "ruleName": {
                    "type": "string"
                },
                "tuning": {
                    "$ref": "GoogleInternalPlxV2AlertAutotunerTuning"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessMissingDataSettings": {
            "description": "A message for suggesting to edit missing data settings for rules where\nmissing data alerts have historically been not useful.",
            "id": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessMissingDataSettings",
            "properties": {
                "lowUsefulnessMissingDataSettings": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessMissingDataSettingsLowUsefulnessMissingDataSettings"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessMissingDataSettingsLowUsefulnessMissingDataSettings": {
            "id": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessMissingDataSettingsLowUsefulnessMissingDataSettings",
            "properties": {
                "missingDataAlertsRatedNotUsefulCount": {
                    "description": "The number of missing data alerts rated as not useful by the user.",
                    "format": "int32",
                    "type": "integer"
                },
                "missingDataAlertsRatedUsefulOrNotUsefulCount": {
                    "description": "The number of missing data alerts rated as either useful or not useful by\nthe user.",
                    "format": "int32",
                    "type": "integer"
                },
                "ruleDisplayName": {
                    "type": "string"
                },
                "ruleName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessRules": {
            "description": "A message for suggesting to edit or delete rules that have been not useful\nhistorically.",
            "id": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessRules",
            "properties": {
                "lowUsefulnessRules": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessRulesLowUsefulnessRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessRulesLowUsefulnessRule": {
            "id": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessRulesLowUsefulnessRule",
            "properties": {
                "alertsRatedNotUsefulCount": {
                    "description": "The number of alerts (of either missing data or anomaly kind) rated as\nnot useful by the user.",
                    "format": "int32",
                    "type": "integer"
                },
                "alertsRatedUsefulCount": {
                    "description": "The number of alerts (of either missing data or data anomaly kind) rated\nas useful by the user.",
                    "format": "int32",
                    "type": "integer"
                },
                "ruleDisplayName": {
                    "type": "string"
                },
                "ruleName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionEnableExplainerAutoResolution": {
            "description": "A message for suggesting to enable a certain explainer.",
            "id": "GoogleInternalPlxV2AlertSuggestionEnableExplainerAutoResolution",
            "properties": {
                "alertsRatedNotUsefulCount": {
                    "description": "The number of alerts (of either missing data or anomaly kind) rated as not\nuseful by the user.",
                    "format": "int32",
                    "type": "integer"
                },
                "alertsRatedUsefulOrNotUsefulCount": {
                    "description": "The number of alerts (of either missing data or data anomaly kind) rated as\neither useful or not useful by the user.",
                    "format": "int32",
                    "type": "integer"
                },
                "explainerType": {
                    "description": "The kind of explainer we're suggesting to set to auto resolve.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_USER",
                        "TYPE_LATE_DATA",
                        "TYPE_ALERT_SEQUENCE",
                        "TYPE_COMMON_ANCESTOR",
                        "TYPE_PUBLIC_EVENT",
                        "TYPE_FEYNMAN",
                        "TYPE_UNEXPLAINED_ANOMALY",
                        "TYPE_DEBUG_SUGGEST",
                        "TYPE_SHODAN"
                    ],
                    "enumDescriptions": [
                        "",
                        "A human-generated explanation. All other enum values represent\nexplanations generated algorithmically.",
                        "We checked the time series data some time after the corresponding alert\nfired and we found that the monitored point is no longer anomalous.",
                        "The alert's RuleInstance fired on the previous monitored time in the\nsame anomaly direction (above or below threshold) so we assume that both\nalerts have the same cause.",
                        "We check if the alert shares the same set of signatures with other alerts\nthat fired on the same monitored time and that come from the same\ndatasource. If so, the set of signatures will be used for explaining the\nmatching alerts.",
                        "The alert occurred during a public event.",
                        "The anomaly was caused by a specific slice of traffic.",
                        "Fall-back type necessary to represent alerts without any events in\nevents-space.",
                        "Suggests debugging information for Thor alerts. Contact jinwang@ for\nquestions.",
                        "We check changes to binary versions and experiment snapshots close to the\ntime of the alert, using Shodan (go/shodan)."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionOldUnresolvedAlerts": {
            "id": "GoogleInternalPlxV2AlertSuggestionOldUnresolvedAlerts",
            "properties": {
                "alertNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionProjectSettingsNotUsingGroups": {
            "description": "A message listing project setting fields that contain individuals rather than\ngroups.",
            "id": "GoogleInternalPlxV2AlertSuggestionProjectSettingsNotUsingGroups",
            "properties": {
                "fields": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionSuggestion": {
            "description": "Defines a suggestion to improve a project that is shown to the user.",
            "id": "GoogleInternalPlxV2AlertSuggestionSuggestion",
            "properties": {
                "archivalReason": {
                    "description": "If state != NEW, archival_reason is set.",
                    "enum": [
                        "ARCHIVAL_REASON_UNSPECIFIED",
                        "ARCHIVAL_REASON_TEMPORARILY_DISMISSED",
                        "ARCHIVAL_REASON_PERMANENTLY_DISMISSED",
                        "ARCHIVAL_REASON_OUTDATED",
                        "ARCHIVAL_REASON_APPLIED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The user selected to temporarily dismiss the suggestion.",
                        "The user requested to permanently dismiss the suggestion.",
                        "Suggestion is no longer relevant for reasons outside of the suggestion\nhaving been applied.",
                        "Suggestion was aplied and is no longer applicable."
                    ],
                    "type": "string"
                },
                "archiveTime": {
                    "description": "Time when the suggestion was archived. This is needed to calculate when\nthe suggestion should no longer be shown in the 'archived' section of the\nfrontend. Is set if archival_reason is set.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "createTime": {
                    "description": "Time when the suggestion was first created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "details": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionSuggestionDetails",
                    "description": "Details about the suggestion, dependent on suggestion type."
                },
                "firstShowTime": {
                    "description": "Time when the suggestion was first shown to the user. If suggestions\ndon't have a high priority, they may not be shown to the user immediately.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "name": {
                    "description": "Full and unique resource name of this suggestion, of the form\n\n  alerts/projects/<project_id>/suggestion/<suggestion_id>\n\n<suggestion_id> is auto-generated by the Plx Alerts system and cannot be\nmodified.",
                    "type": "string"
                },
                "priority": {
                    "description": "Priority of this suggestion as given by\nsuggest/suggestiontypes/registry.PriorityMap. Higher numbers mean higher\npriorities.",
                    "format": "int32",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the suggestion.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "STATE_NEW",
                        "STATE_ARCHIVED"
                    ],
                    "enumDescriptions": [
                        "",
                        "The suggestion was created and has not yet been archived.",
                        "The suggestion was either dismissed by the user, is no longer applicable\nto the project, or is outdated."
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "What the suggestion is about.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "TYPE_ALLOW_PIPER_UPDATES",
                        "TYPE_APPLY_PENDING_AUTOTUNER_ADJUSTMENTS",
                        "TYPE_RESOLVE_OLD_ALERTS",
                        "TYPE_USE_GROUPS_IN_PROJECT_SETTINGS",
                        "TYPE_USE_LINKS_FOR_PROJECT_OR_RULES",
                        "TYPE_ENABLE_EXPLAINER_AUTO_RESOLUTION",
                        "TYPE_EDIT_LOW_USEFULNESS_RULES",
                        "TYPE_EDIT_LOW_USEFULNESS_MISSING_DATA_SETTINGS"
                    ],
                    "enumDescriptions": [
                        "",
                        "Suggestion to set Project.allow_piper_updates to true.",
                        "Suggestion to accept or dismiss existing Autotuner adjustments.",
                        "Suggestion to resolve alerts open for too long.",
                        "Suggestion to use groups instead of individuals in project settings.",
                        "Suggestion to use project and/or rule level links.",
                        "Suggestion for enabling explainers in autoresolution mode.",
                        "Suggestion to edit or delete a noisy rule.",
                        "Suggestion to edit or delete alerting on missing data for rules\nwhere missing data has historically caused a lot of noise."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertSuggestionSuggestionDetails": {
            "id": "GoogleInternalPlxV2AlertSuggestionSuggestionDetails",
            "properties": {
                "editLowUsefulnessMissingDataSettings": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessMissingDataSettings"
                },
                "editLowUsefulnessRules": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionEditLowUsefulnessRules"
                },
                "enableExplainerAutoResolution": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionEnableExplainerAutoResolution"
                },
                "oldUnresolvedAlerts": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionOldUnresolvedAlerts"
                },
                "pendingAutotunerAdjustments": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionAutotunerAdjustments"
                },
                "projectSettingsNotUsingGroups": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionProjectSettingsNotUsingGroups"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeDiscretization": {
            "description": "A message describing how to discretize time.\n\nFor analyzing time series, we need to know what data to collapse into or\nconsider a single data point.",
            "id": "GoogleInternalPlxV2AlertTimeDiscretization",
            "properties": {
                "day": {
                    "$ref": "GoogleInternalPlxV2AlertTimeDiscretizationDay"
                },
                "hour": {
                    "$ref": "GoogleInternalPlxV2AlertTimeDiscretizationHour"
                },
                "month": {
                    "$ref": "GoogleInternalPlxV2AlertTimeDiscretizationMonth"
                },
                "quarter": {
                    "$ref": "GoogleInternalPlxV2AlertTimeDiscretizationQuarter"
                },
                "week": {
                    "$ref": "GoogleInternalPlxV2AlertTimeDiscretizationWeek"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeDiscretizationDay": {
            "id": "GoogleInternalPlxV2AlertTimeDiscretizationDay",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeDiscretizationHour": {
            "id": "GoogleInternalPlxV2AlertTimeDiscretizationHour",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeDiscretizationMonth": {
            "id": "GoogleInternalPlxV2AlertTimeDiscretizationMonth",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeDiscretizationQuarter": {
            "id": "GoogleInternalPlxV2AlertTimeDiscretizationQuarter",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeDiscretizationWeek": {
            "id": "GoogleInternalPlxV2AlertTimeDiscretizationWeek",
            "properties": {
                "firstDayOfTheWeek": {
                    "description": "Required. Which day should be considered the first day of the week.",
                    "enum": [
                        "DAY_OF_WEEK_UNSPECIFIED",
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY",
                        "SUNDAY"
                    ],
                    "enumDescriptions": [
                        "The unspecified day-of-week.",
                        "The day-of-week of Monday.",
                        "The day-of-week of Tuesday.",
                        "The day-of-week of Wednesday.",
                        "The day-of-week of Thursday.",
                        "The day-of-week of Friday.",
                        "The day-of-week of Saturday.",
                        "The day-of-week of Sunday."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeSeries": {
            "id": "GoogleInternalPlxV2AlertTimeSeries",
            "properties": {
                "points": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertPoint"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertTimeSeriesSource": {
            "id": "GoogleInternalPlxV2AlertTimeSeriesSource",
            "properties": {
                "backend": {
                    "$ref": "GoogleInternalPlxV2AlertBackendConfig"
                },
                "dimensionFilters": {
                    "$ref": "GoogleInternalPlxV2AlertDimensionFilters",
                    "description": "Specifies the slice of the measure to monitor.\nTo monitor the aggregate of all slices, leave this field unset."
                },
                "measureName": {
                    "description": "The measure to monitor.\n- DASNav: the ID of a measure\n- Powerdrill: the name of a numeric column\n- PlxQuery: a GoogleSQL expression including a suitable aggregation\n            function",
                    "type": "string"
                },
                "timeDiscretization": {
                    "$ref": "GoogleInternalPlxV2AlertTimeDiscretization",
                    "description": "Required. How to discretize the above measure; e.g. hourly, daily, etc."
                },
                "treatMissingDataAsZero": {
                    "description": "If set to true all missing data points will be converted to\n0 before passing the time series to the detector. The definition of\n\"missing\" depends on the query engine used:\n  - DASNav returns NaNs\n  - PowerDrill results have missing rows\n  - ",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueAction": {
            "id": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueAction",
            "properties": {
                "linkExistingIssue": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionLinkExistingIssue"
                },
                "linkNewIssue": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionLinkNewIssue"
                },
                "unlinkIssue": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionUnlinkIssue"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionLinkExistingIssue": {
            "description": "Sets the alert's issue_id field to the given issue.",
            "id": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionLinkExistingIssue",
            "properties": {
                "issueId": {
                    "description": "Required. The issue id to link with the alert (e.g. 1234).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionLinkNewIssue": {
            "description": "Creates a new Buganizer issue on the component configured at the rule or\nproject level, and links this alert to it.",
            "id": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionLinkNewIssue",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionUnlinkIssue": {
            "description": "Sets the alert's issue_id field to \"\".",
            "id": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueActionUnlinkIssue",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueRequest": {
            "id": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueRequest",
            "properties": {
                "action": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateAlertBuganizerIssueAction"
                },
                "name": {
                    "description": "Required. Alert resource name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateExplanationRequest": {
            "id": "GoogleInternalPlxV2AlertUpdateExplanationRequest",
            "properties": {
                "explanation": {
                    "$ref": "GoogleInternalPlxV2AlertEventExplanation",
                    "description": "Required. The explanation with updated field values."
                },
                "name": {
                    "description": "Required. Name of the explanation to update.",
                    "type": "string"
                },
                "updateOptions": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateOptions"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateOptions": {
            "description": "A common method for specifying how to perform updates on complex resources.",
            "id": "GoogleInternalPlxV2AlertUpdateOptions",
            "properties": {
                "replaceMessageFields": {
                    "description": "Optional. When merging message fields, the default behavior is to merge the\ncontent of two message fields together. If you instead want to use the\nfield from the source message to replace the corresponding field in the\ndestination message, set this flag to true. When this flag is set,\nspecified submessage fields that are missing in source will be cleared in\ndestination.",
                    "type": "boolean"
                },
                "replaceRepeatedFields": {
                    "description": "Optional. When merging repeated fields, the default behavior is to append\nentries from the source repeated field to the destination repeated field.\nIf you instead want to keep only the entries from the source repeated\nfield, set this flag to true.\n\nIf you want to replace a repeated field within a message field on the\ndestination message, you must set both replace_repeated_fields and\nreplace_message_fields to true, otherwise the repeated fields will be\nappended.",
                    "type": "boolean"
                },
                "updateMask": {
                    "description": "Required. Specifies which fields to update.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateProjectRequest": {
            "id": "GoogleInternalPlxV2AlertUpdateProjectRequest",
            "properties": {
                "name": {
                    "description": "Required. Project resource name.",
                    "type": "string"
                },
                "project": {
                    "$ref": "GoogleInternalPlxV2AlertProject",
                    "description": "Required. The new field values with which to update the existing project."
                },
                "updateOptions": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateOptions",
                    "description": "Specifies which fields to update and how to reconcile existing with new\nproto values."
                },
                "validateOnly": {
                    "description": "Set to true to not actually apply the updates, but simply validate that the\nupdate request is well-formed, and evaluate its effects before applying the\nchanges.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateRuleRequest": {
            "id": "GoogleInternalPlxV2AlertUpdateRuleRequest",
            "properties": {
                "name": {
                    "description": "Required. Rule resource name.",
                    "type": "string"
                },
                "rule": {
                    "$ref": "GoogleInternalPlxV2AlertRule",
                    "description": "Required. The new field values with which to update the existing rule."
                },
                "updateOptions": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateOptions",
                    "description": "Specifies which fields to update and how to reconcile existing with new\nproto values."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateSilenceRequest": {
            "id": "GoogleInternalPlxV2AlertUpdateSilenceRequest",
            "properties": {
                "silence": {
                    "$ref": "GoogleInternalPlxV2AlertSilence",
                    "description": "Required. The new field values with which to update the existing silence."
                },
                "updateMask": {
                    "description": "Required. Specifies which fields to update. The following fields can\nbe updated: target_alert (and its subfields), end_time, comment, state.",
                    "format": "google-fieldmask",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertUpdateSuggestionRequest": {
            "id": "GoogleInternalPlxV2AlertUpdateSuggestionRequest",
            "properties": {
                "name": {
                    "description": "Required. The name of the suggestion to update.",
                    "type": "string"
                },
                "suggestion": {
                    "$ref": "GoogleInternalPlxV2AlertSuggestionSuggestion",
                    "description": "Required. Proto containing new suggestion values."
                },
                "updateOptions": {
                    "$ref": "GoogleInternalPlxV2AlertUpdateOptions"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertZeroconfigConfig": {
            "description": "Describes the behavior of ZeroConfig for a given project.",
            "id": "GoogleInternalPlxV2AlertZeroconfigConfig",
            "properties": {
                "timeSeriesBackend": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertZeroconfigTimeSeriesBackend"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertZeroconfigSchema": {
            "description": "Specific requirements for the structure of the backend.\nThese may be provided by users or automatically suggested by a selection\nalgorithm.",
            "id": "GoogleInternalPlxV2AlertZeroconfigSchema",
            "properties": {
                "filters": {
                    "$ref": "GoogleInternalPlxV2AlertDimensionFilters",
                    "description": "Global filters that allow to specify a subset of the monitored source."
                },
                "ignoredDimensions": {
                    "description": "Dimensions that MUST be ignored.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ignoredMeasures": {
                    "description": "Measures that MUST be ignored, e.g. because they are know to contain\ngarbage. The algorithm will only monitor other measures.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rankingMeasure": {
                    "description": "One of the datasource measures used to rank slices by the number of\nentities. Used when a measure we monitor cannot be used as a ranking\nmeasure itself, e.g. we'd use `events_count` as the ranking measure if we\nmonitor `latency` measure.",
                    "type": "string"
                },
                "requiredDimensions": {
                    "description": "Dimensions that MUST be monitored.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "requiredMeasures": {
                    "description": "Measures that MUST be monitored. The algorithm may choose other measures\ntoo, but these ones a guaranteed to be monitored.\n\nThese may include valid measures that are not present in the schema,\ne.g. COUNT(1), SUM(measure_1) / SUM(measure_2).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2AlertZeroconfigTimeSeriesBackend": {
            "description": "Describes what is monitored automatically in a datasouce containing\nmeasures changing over time.\n\nIt's the input of the algorithm that simulates monitoring of the datasource\nand selects measures and slices to monitor.\n\nThe parameters such as hard constraints or targets may be provided by users.",
            "id": "GoogleInternalPlxV2AlertZeroconfigTimeSeriesBackend",
            "properties": {
                "backend": {
                    "$ref": "GoogleInternalPlxV2AlertBackendConfig",
                    "description": "Required. Datasource, e.g. DASNav or a Plx table to monitor."
                },
                "schema": {
                    "$ref": "GoogleInternalPlxV2AlertZeroconfigSchema",
                    "description": "Specific requirements for the structure of the backend."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceAssignParentRequest": {
            "description": "Request type for AssignParent.",
            "id": "GoogleInternalPlxV2DataSourceAssignParentRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the DataSource to update parent entity for. Set\nautomatically using the URI for OnePlatform calls.",
                    "type": "string"
                },
                "parentInfo": {
                    "$ref": "GoogleInternalPlxV2DataSourceParentInfo",
                    "description": "Required: Parent entity which this DataSource is to\nbecome a child of. Can only be set when associating an unparented child\nDataSource with a parent. The parent_entity field is case-sensitive and\ncannot be empty. Example: { parent_entity: 'dashboards/<id>' }"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceAssignParentResponse": {
            "description": "Response type for AssignParent.",
            "id": "GoogleInternalPlxV2DataSourceAssignParentResponse",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceBatchGetSchemaTypesRequest": {
            "description": "A request for getting types from a schema in batch.",
            "id": "GoogleInternalPlxV2DataSourceBatchGetSchemaTypesRequest",
            "properties": {
                "enumNames": {
                    "description": "The enum names of the types to get from the schema.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "messageNames": {
                    "description": "The message of the types to get from the schema.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "parent": {
                    "description": "The full name of the Schema the get the types from. Set automatically using\nthe URI for OnePlatform calls.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceBatchGetSchemaTypesResponse": {
            "description": "The response from BatchGetSchemaTypes.",
            "id": "GoogleInternalPlxV2DataSourceBatchGetSchemaTypesResponse",
            "properties": {
                "enumTypes": {
                    "items": {
                        "$ref": "GoogleCloudDatahubV2EnumType"
                    },
                    "type": "array"
                },
                "messageTypes": {
                    "description": "The catalog of types from the request.",
                    "items": {
                        "$ref": "GoogleCloudDatahubV2MessageType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceBigQueryOptions": {
            "description": "Request options for BigQuery queries.",
            "id": "GoogleInternalPlxV2DataSourceBigQueryOptions",
            "properties": {
                "cloudProjectId": {
                    "description": "The unique name or id number of the cloud project which will be billed for\nBigQuery usage. A cloud project id must be provided for all BigQuery\nrequests, either through this field or through some other mechanism.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceCachePolicy": {
            "description": "The properties that control how caching should be applied to this data\nsource.",
            "id": "GoogleInternalPlxV2DataSourceCachePolicy",
            "properties": {
                "cachedSince": {
                    "description": "A timestamp representing the earliest time that cached results can be\nfrom.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "hoursOfDay": {
                    "$ref": "GoogleInternalPlxV2DataSourceHoursOfDayPolicy",
                    "description": "A caching policy that limits the cached results based on specific times\nof day."
                },
                "maxCacheAge": {
                    "description": "A trailing window limiting how old cached results may be.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceColumnDefinition": {
            "description": "Defines how a DataSource column is produced.\n\nIn the simple case, a ColumnDefinition can just expose a raw Connection\ncolumn. However, it is also possible to provide more complex expressions\n(business logic) describing how to transform/aggregate/etc the underlying\ndata.\n\nCombined, these ColumnDefinitions for the \"menu of columns\" that viewers of\nthe DataSource can interact with when exploring or analyzing the data.",
            "id": "GoogleInternalPlxV2DataSourceColumnDefinition",
            "properties": {
                "expression": {
                    "description": "A GoogleSQL expression that describes how Connection columns are\nexposed in the DataSource.\n\nEach identifier in the expression must correspond to a column name in the\nConnection. As a convenience, the expression can be omitted. In which case,\nthe expression is implied to be the same as `id` (i.e. a pass-through\ncolumn).",
                    "type": "string"
                },
                "id": {
                    "description": "Required. Must be unique among the other column definitions. Must be a\nvalid GoogleSQL identifier or identifier path expression.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceConnection": {
            "description": "The Connection specifies where the data is queried or retrieved from.",
            "id": "GoogleInternalPlxV2DataSourceConnection",
            "properties": {
                "dasnavConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceDasNavConnection",
                    "description": "A DASNav navigator."
                },
                "externalConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceExternalConnection",
                    "description": "A connection loaded from an external URI."
                },
                "inMemoryConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceInMemoryConnection",
                    "description": "A blob of in-memory data."
                },
                "rastaConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceRastaConnection",
                    "description": "RASTA data, exposed as a URI."
                },
                "schemaId": {
                    "description": "Output only. Opaque ID of the connection schema. Allows client to detect\nchanges in the schema and re-fetch it only when needed.",
                    "type": "string"
                },
                "scriptConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceScriptConnection",
                    "description": "A SQL connection that references either a persisted script or an inline\nscript definition (i.e. raw SQL).\n\nThe script may contain multiple statements but must contain exactly one\noutput (SELECT) statement and must not have any side-effects."
                },
                "sheetsConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceSheetsConnection",
                    "description": "Data stored in a Google sheet."
                },
                "table": {
                    "$ref": "GoogleInternalPlxV2DataSourceTableConnection",
                    "description": "Connection that points to a registered table."
                },
                "templateConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceTemplatedConnection",
                    "description": "An ABI template connection. These were created to allow migration from\nABI."
                },
                "valueTableAlias": {
                    "description": "The alias to use for the GoogleSQL Value Table exposed by the connection.\nIf not specified, the default alias is `_t`.\n\nThe connection's value table is always available for use in\n\"internal\" parts of the DataSource. DataSource authors may configure\nFieldSelectors to expose the value table to DataSource users (Queries).\nSee `FieldSelector` for more details.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceCopyDataSourceRevisionRequest": {
            "id": "GoogleInternalPlxV2DataSourceCopyDataSourceRevisionRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the DataSource revision to copy. Set automatically\nusing the URI for OnePlatform calls.",
                    "type": "string"
                },
                "parentInfo": {
                    "$ref": "GoogleInternalPlxV2DataSourceParentInfo",
                    "description": "Parent entity association. If not set, the DataSource being created is\nstandalone."
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceCreateDataSourceRequest": {
            "description": "A request to create a new DataSource.",
            "id": "GoogleInternalPlxV2DataSourceCreateDataSourceRequest",
            "properties": {
                "connection": {
                    "$ref": "GoogleInternalPlxV2DataSourceConnection",
                    "description": "The connection to generate the DataSource with."
                },
                "dataSource": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSource",
                    "description": "The DataSource to validate and create."
                },
                "metadataBindings": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataBindings",
                    "description": "Metadata bindings for the DataSource."
                },
                "parentInfo": {
                    "$ref": "GoogleInternalPlxV2DataSourceParentInfo",
                    "description": "Optional: parent association. If not set, the DataSource being created is\nstandalone."
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                },
                "validateOnly": {
                    "description": "Required: Whether to only validate the given DataSource without saving it.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceCreateDataSourceRevisionRequest": {
            "description": "A request to update a DataSource by creating a new revision.",
            "id": "GoogleInternalPlxV2DataSourceCreateDataSourceRevisionRequest",
            "properties": {
                "dataSource": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSource",
                    "description": "Required: The DataSource to save."
                },
                "forceSchemaRefresh": {
                    "description": "Optional: This will force a refresh of the schema.",
                    "type": "boolean"
                },
                "metadataBindingRemove": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataKeys"
                },
                "metadataBindingUpdate": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataBindings",
                    "description": "Updates to metadata. The metadata updated here will be seen in\nthe updated Schema."
                },
                "mostRecentRevisionName": {
                    "description": "Required: Should be set to the value obtained by the most recent\nGetRevision/GetLatestRevision operation, to check for and prevent\nconflicting updates (i.e. optimistic locking).",
                    "type": "string"
                },
                "parent": {
                    "description": "Required: The name of the DataSource to create the revision on. Set\nautomatically using the URI for OnePlatform calls.",
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                },
                "validateOnly": {
                    "description": "Required: Whether to only validate the given DataSource without saving it.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceCreateDraftRequest": {
            "description": "Request type for creating or updating draft DataSource.",
            "id": "GoogleInternalPlxV2DataSourceCreateDraftRequest",
            "properties": {
                "dataSource": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSource",
                    "description": "Required: The draft DataSource to create."
                },
                "metadataBindingRemove": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataKeys",
                    "description": "In update mode, indicates which metadata bindings to remove."
                },
                "metadataBindingUpdate": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataBindings",
                    "description": "Initial or updated metadata bindings for the draft DataSource."
                },
                "mostRecentRevisionName": {
                    "description": "Required: Should be set to the value obtained by the most recent\nGetDraftRevision/GetRevision operation, to check for and prevent\nconflicting updates (i.e. optimistic locking). Examples:\n* 'dataSources/<id>/revisions/<id>' - to create initial draft off published\n  revision\n* 'dataSources/<id>/drafts/<id>' - to create next draft revision.",
                    "type": "string"
                },
                "parent": {
                    "description": "Required: The name of the DataSource to create the draft on. Set\nautomatically using the URI for OnePlatform calls.",
                    "type": "string"
                },
                "schemaUpdateMode": {
                    "description": "Optional: How and whether to update the schema.",
                    "enum": [
                        "UNSPECIFIED",
                        "AUTOMATIC",
                        "DO_NOT_UPDATE",
                        "FORCE_UPDATE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Schema must be updated if underlying connection change has been detected.",
                        "Schema is not to be updated.",
                        "Schema must be updated."
                    ],
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDasNavConnection": {
            "description": "A connection that points to an existing DASNav navigator.",
            "id": "GoogleInternalPlxV2DataSourceDasNavConnection",
            "properties": {
                "cubeId": {
                    "description": "The name of the cube in the nav config. Defaults to the first\ncube.",
                    "type": "string"
                },
                "defaultGranularity": {
                    "description": "The default granularity for queries.",
                    "type": "string"
                },
                "defaultPeriod": {
                    "description": "The default period for queries.",
                    "type": "string"
                },
                "navId": {
                    "description": "Required. The Nav ID for the navigator.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDataSource": {
            "description": "A DataSource is a curated view of a Connection.\n\nIt is like a SQL Logical View but much more dynamic and flexible, with rich\nmetadata for interactive data analysis & exploration tools. It provides a\nmenu of columns that behave like a query template, enabling analysts to ask\nmany types of questions quickly and easily.\n\nThe DataSource model is split into two parts:\n\n1.  The public interface to the DataSource (DataSource)\n2.  The internal details of the DataSource (DataSourceDefinition)\n\nThe public interface is intended for applications which only need to query\nthe DataSource (including inspecting the related metadata).\nThe DataSource definition is intended for the DataSource authors and many\ncontain sensitive information that should not generally be exposed to all\nviewers (e.g. security information).",
            "id": "GoogleInternalPlxV2DataSourceDataSource",
            "properties": {
                "columns": {
                    "description": "Required. The menu of columns exposed by the DataSource.\nOnly the columns listed here are queryable.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceColumnDefinition"
                    },
                    "type": "array"
                },
                "connection": {
                    "$ref": "GoogleInternalPlxV2DataSourceConnection",
                    "description": "Required. DataSources are views on top of other data. The Connection\ndescribes how to access it."
                },
                "definition": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSourceDefinition",
                    "description": "The details of how the DataSource is defined.\nOnly available to DataSource authors."
                },
                "fieldSelector": {
                    "$ref": "GoogleInternalPlxV2DataSourceFieldSelector",
                    "description": "Field selector patterns used to define DataSource from connection.\nMust not collide with |columns| definition."
                },
                "freshnessConfig": {
                    "$ref": "GoogleInternalPlxV2DataSourceFreshnessConfig",
                    "description": "The data freshness configuration of this DataSource."
                },
                "metadata": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSourceMetadata",
                    "description": "Metadata which applies to the DataSource as a whole."
                },
                "modules": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSourceModules",
                    "description": "Google SQL Modules attached to the DataSource."
                },
                "securityPolicy": {
                    "$ref": "GoogleInternalPlxV2DataSourceSecurityPolicy",
                    "description": "A description of the security policies to apply to this\nconnection."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDataSourceDefinition": {
            "description": "The details of the DataSource, as provided/curated by the DataSource author.\nVisible to authors only.",
            "id": "GoogleInternalPlxV2DataSourceDataSourceDefinition",
            "properties": {
                "columns": {
                    "description": "Required. The menu of columns exposed by the DataSource.\nOnly the columns listed here are queryable.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceColumnDefinition"
                    },
                    "type": "array"
                },
                "connection": {
                    "$ref": "GoogleInternalPlxV2DataSourceConnection",
                    "description": "Required. DataSources are views on top of other data. The Connection\ndescribes the underlying data and how to access it."
                },
                "securityPolicy": {
                    "$ref": "GoogleInternalPlxV2DataSourceSecurityPolicy",
                    "description": "A description of the security policies to apply to this\nconnection."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDataSourceMetadata": {
            "description": "Metadata which applies to the DataSource as a whole.\nFor message type- and field-specific metadata, see [MessageTypeMetadata] and\n[FieldMetadata] below.",
            "id": "GoogleInternalPlxV2DataSourceDataSourceMetadata",
            "properties": {
                "cachePolicy": {
                    "$ref": "GoogleInternalPlxV2DataSourceCachePolicy",
                    "description": "Optional. A hint to the applications consuming this connection about what\ncaching policy should be applied by default when querying it."
                },
                "description": {
                    "description": "Optional. Additional description on this DataSource, in markdown format.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Optional. Human-readable name of the DataSource. `display_name` is to be\nused primarily when referring to this DataSource in a UI.",
                    "type": "string"
                },
                "extensions": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSourceMetadataExtensions",
                    "description": "Optional. Application-specific extensions to this connection's metadata."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDataSourceMetadataExtensions": {
            "id": "GoogleInternalPlxV2DataSourceDataSourceMetadataExtensions",
            "properties": {
                "aplosApiVersion": {
                    "description": "Optional. The version of the API to use to fetch data for the connection.",
                    "type": "string"
                },
                "aplosPrefetch": {
                    "description": "Optional. If true, Aplos should attempt to preload the data for this\nconnection into memory and use client-side projection over it.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDataSourceModules": {
            "description": "Module definitions for DataSource.",
            "id": "GoogleInternalPlxV2DataSourceDataSourceModules",
            "properties": {
                "importPath": {
                    "$ref": "GoogleInternalPlxV2DataSourceModuleImportPath",
                    "description": "Version/location of imported modules."
                },
                "imports": {
                    "description": "Imported modules.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceImportedGoogleSqlModule"
                    },
                    "type": "array"
                },
                "inline": {
                    "$ref": "GoogleInternalPlxV2DataSourceInlineGoogleSqlModule",
                    "description": "Inline module."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDataSourceRevision": {
            "id": "GoogleInternalPlxV2DataSourceDataSourceRevision",
            "properties": {
                "dataSource": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSource",
                    "description": "The details of the DataSource at this revision."
                },
                "metadataBindings": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataBindings",
                    "description": "Metadata bound to individual elements of the schema."
                },
                "name": {
                    "description": "Required, if the DataSource is retrieved from persistent storage. May be\nempty when constructing a DataSource (before it is persisted) or when used\nonly transiently. Format: `datasources/<id>/revisions/<revision_number>`\n<id> must be unique and in the form: A-Za-z_*\n<revision_number> identifies a particular revision of the DataSource. The\nrevision will be increased each time a persisted update of a DataSource\noccurs.",
                    "type": "string"
                },
                "parent": {
                    "description": "The name of the DataSource resource (without revision). For example:\n\"datasources/<id>\"",
                    "type": "string"
                },
                "parentEntity": {
                    "description": "For child DataSource - name of the parent entity this DataSource belongs\nto, e.g. \"dashboards/<id>\". Not set for standalone DataSources.",
                    "type": "string"
                },
                "resolvedImportPath": {
                    "$ref": "GoogleInternalPlxV2DataSourceResolvedModuleImportPath",
                    "description": "Actual import path for modules used in the DataSource."
                },
                "symbolCatalogMetadata": {
                    "$ref": "GoogleInternalPlxV2DataSourceSymbolCatalogMetadata",
                    "description": "Symbols metadata."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDeclaredDataType": {
            "description": "Wrapped data type.",
            "id": "GoogleInternalPlxV2DataSourceDeclaredDataType",
            "properties": {
                "anyType": {
                    "description": "Templated type, depends on argument types.",
                    "type": "boolean"
                },
                "type": {
                    "$ref": "GoogleCloudDatahubV2GoogleSqlType",
                    "description": "Concrete type.\nNote: all non-trivial types will be available in DataSource schema graph."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDefinedFieldTemplate": {
            "description": "Metadata specific to \"Defined Fields\" templated function definitions with\nspecific \"UI_HINTS\" options.",
            "id": "GoogleInternalPlxV2DataSourceDefinedFieldTemplate",
            "properties": {
                "logMessages": {
                    "description": "If templated return type cannot be calculated, the field will contain\ninformation about all the errors encountered during analysis.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                },
                "paths": {
                    "description": "Binding paths for the function parameters. Number should match\nnumber of function parameters declared in the function.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "returnType": {
                    "$ref": "GoogleCloudDatahubV2GoogleSqlType",
                    "description": "- For declared return type, it is the same value as\nPublicFunction.return_type.\n- For templated return types (RETURNS ANY) or those that depend on types of\ninput parameters, it is a calculated type for given combination of paths.\nThis is a concrete type, not ANY.\nNote: all non-trivial types will be available in DataSource schema graph."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDeleteDataSourceRequest": {
            "id": "GoogleInternalPlxV2DataSourceDeleteDataSourceRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the DataSource to delete. Set automatically using the\nURI for OnePlatform calls.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDeleteDataSourceResponse": {
            "id": "GoogleInternalPlxV2DataSourceDeleteDataSourceResponse",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDeleteDraftRequest": {
            "description": "Request type for deleting draft DataSource.",
            "id": "GoogleInternalPlxV2DataSourceDeleteDraftRequest",
            "properties": {
                "name": {
                    "description": "Required. Name of the DataSource which draft is being deleted. Populated\nautomatically from URI.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDeleteDraftResponse": {
            "id": "GoogleInternalPlxV2DataSourceDeleteDraftResponse",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDraftDataSourceRevision": {
            "description": "Draft DataSource revision.",
            "id": "GoogleInternalPlxV2DataSourceDraftDataSourceRevision",
            "properties": {
                "dataSource": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSource",
                    "description": "The details of the DataSource at this revision."
                },
                "metadataBindings": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataBindings",
                    "description": "Metadata bound to individual elements of the schema."
                },
                "name": {
                    "description": "Required. Resource name for this draft.\nFormat: `dataSources/<id>/drafts/<revision_number>`\n<id> must be unique and in the form: A-Za-z_*\n<revision_number> identifies a particular draft of the DataSource. The\nrevision will be increased each time a persisted update of the draft\noccurs.",
                    "type": "string"
                },
                "parent": {
                    "description": "The name of the DataSource resource this draft is associated with. For\nexample: \"dataSources/<id>\"",
                    "type": "string"
                },
                "resolvedImportPath": {
                    "$ref": "GoogleInternalPlxV2DataSourceResolvedModuleImportPath",
                    "description": "Actual import path for modules used in the DataSource."
                },
                "status": {
                    "$ref": "GoogleInternalPlxV2DataSourceValidationStatus",
                    "description": "Result of validation."
                },
                "symbolCatalogMetadata": {
                    "$ref": "GoogleInternalPlxV2DataSourceSymbolCatalogMetadata",
                    "description": "Symbols metadata."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceDremelOptions": {
            "description": "Request options for Dremel queries.",
            "id": "GoogleInternalPlxV2DataSourceDremelOptions",
            "properties": {
                "sqlStatements": {
                    "description": "Query options as one or more semi-colon delimited statements.\n\nThese are typically SET and DEFINE TABLE statements.\n\nExample:\n\"SET accounting_group 'mygroup'; SET query_priority 100;\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceExternalConnection": {
            "description": "Describes externally hosted CSV/TSV/JSON data.",
            "id": "GoogleInternalPlxV2DataSourceExternalConnection",
            "properties": {
                "format": {
                    "description": "defaults to CSV. The format for the data.",
                    "enum": [
                        "EXTERNAL_CONNECTION_FORMAT_UNSPECIFIED",
                        "CSV"
                    ],
                    "enumDescriptions": [
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "parameterDefaults": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourcePlxParameterValue"
                    },
                    "description": "The default parameter values for this connection.",
                    "type": "object"
                },
                "ssoImageUri": {
                    "description": "If specified, the path to an image behind corplogin that\nshould be loaded to upgrade the user's SSO token.",
                    "type": "string"
                },
                "uri": {
                    "description": "Required. The path to the connection.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceF1QueryOptions": {
            "description": "Request options for F1 queries.",
            "id": "GoogleInternalPlxV2DataSourceF1QueryOptions",
            "properties": {
                "sqlStatements": {
                    "description": "Query options as one or more semi-colon delimited statements.\n\nThese are typically SET, USE, and DEFINE TABLE statements.\n\nExample:\n\"SET QueryRequest.num_workers=10; SET QueryRequest.timestamp.strong;\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceFieldFormat": {
            "description": "A format specification for how to render a field's values.",
            "id": "GoogleInternalPlxV2DataSourceFieldFormat",
            "properties": {
                "d3Format": {
                    "description": "A format string in the D3 style.",
                    "type": "string"
                },
                "fixedMappings": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Any predefined mappings from value to formatted value.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceFieldMetadata": {
            "description": "Field and field-path based metadata.",
            "id": "GoogleInternalPlxV2DataSourceFieldMetadata",
            "properties": {
                "defaultFormat": {
                    "$ref": "GoogleInternalPlxV2DataSourceFieldFormat",
                    "description": "Describes what format should be used for this field by default."
                },
                "description": {
                    "description": "Additional description in markdown format.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Human-readable name of the field.",
                    "type": "string"
                },
                "extensions": {
                    "$ref": "GoogleInternalPlxV2DataSourceFieldMetadataExtensions",
                    "description": "Application-specific metadata for this field."
                },
                "isAggregating": {
                    "description": "Indicates that the field already has an aggregating expression\napplied to it. In practical terms, this means that it must only be used as\na metric/measure (not a dimension) and must not have an additional\naggregation function applied.",
                    "type": "boolean"
                },
                "semanticType": {
                    "description": "DEPRECATED, use semantic_type_2 instead.",
                    "enum": [
                        "SEMANTIC_TYPE_UNSPECIFIED",
                        "STRING",
                        "DECIMAL",
                        "INTEGER",
                        "TIMESTAMP",
                        "TIME_USEC",
                        "MESSAGE",
                        "BOOLEAN",
                        "IP_ADDRESS",
                        "HLL_SKETCH",
                        "DATETIME",
                        "DATE",
                        "ARRAY",
                        "KLL_INT64",
                        "KLL_DOUBLE"
                    ],
                    "enumDescriptions": [
                        "Fallback type for unsupported wire type (client behavior is unspecified).",
                        "String values or string representation of an enum.",
                        "Numerical values to be interpreted as decimal numbers.",
                        "Numerical values to be interpreted as integers.",
                        "Timestamp of a moment in time, represented as a TIMESTAMP column.",
                        "Timestamp of a moment in time, represented as epoch microseconds.",
                        "A sub message (proto or struct), contains other fields.",
                        "Boolean values.",
                        "IP addresses (GoogleSQL byte representation).",
                        "Cardinality estimate sketch (GoogleSQL byte representation).",
                        "Calendar date and time (not attached to a time zone).",
                        "Calendar date (not attached to a time zone).",
                        "An array containing elements of other types. Arrays containing elements\nof type ARRAY are not supported.",
                        "A KLL (approximate quantiles) INT64 sketch.",
                        "A KLL (approximate quantiles) DOUBLE sketch."
                    ],
                    "type": "string"
                },
                "semanticType2": {
                    "$ref": "GoogleInternalPlxV2DataSourceSemanticType",
                    "description": "The UI-level semantic type as well as metadata to convert the wire type to\nthe semantic type.\n\n"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceFieldMetadataExtensions": {
            "description": "Field metadata intended to be used by applications as opposed to core parts\nof the field model.",
            "id": "GoogleInternalPlxV2DataSourceFieldMetadataExtensions",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceFieldSelector": {
            "description": "Field selector patterns for DataSource definition\nConnection fields to be exposed by the DataSource.\n\nThese fields will become visible in the DataSource schema and queryable\nby users of the DataSource.\n\nWhen individual (but not all) fields of a proto/struct are included in the\nfield selector, the containing type is \"split\" into a new type, which\nwill be added to DataSource schema.\n\nTo include a connection field, use the dotted path to the field within the\nconnection schema.\nTo include all connection fields, use '*'.\nTo include a connection pseudo column, use the name of the pseudo column.\nUse backticks to escape non-identifiers.\n\nExamples:\n  field1\n  field1.field2\n  `my field`\n  _PARTITION_DATE\n\nA field can refer to a proto extension, or to a subfield in an extension.\nExtension must be fully qualified with the package name, and must be\nenclosed in parentheses. Note that extension types are not \"split\" as\ndescribed above.\n\nExamples:\nfield1.(package.extension_type)\nfield2.(package.extension-type).subtype.field2",
            "id": "GoogleInternalPlxV2DataSourceFieldSelector",
            "properties": {
                "include": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includeValueTable": {
                    "description": "When `true`, the value table of the *connection* will be available for use\nin query expressions. See security note below when considering if/when to\nuse this option.\n\nThe value table alias is a hidden/pseudo-column. As such, it will not show\nup in the public schema of the DataSource. However, it is still queryable\nusing standard GoogleSQL syntax:\n\n```\n{value_table_alias}.field1.field2\n```\n\nWhere `{value_table_alias}` is the alias of the value table, as configured\nin the Connection. Note that GoogleSQL identifier quoting (backticks) must\nbe applied the alias if it is not a valid identifier.\n\nOther field selectors (include/exclude) do not affect the behavior of this\noption. If `include_value_table` is `true`, the full value table of the\nconnection will be available to queries regardless of the include/exclude\npatterns.\n\nColumnDefinitions and other DataSource internals may always use the value\ntable alias, regardless of this setting.\n\nWARNING: This option will return an error when using owner delegated\nsharing since it bypasses the security policies of the DataSource.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceFreshnessConfig": {
            "description": "Data freshness configuration.",
            "id": "GoogleInternalPlxV2DataSourceFreshnessConfig",
            "properties": {
                "expression": {
                    "description": "A non-aggregating GoogleSQL expression for retrieving data freshness\ninformation.",
                    "type": "string"
                },
                "externalConnection": {
                    "$ref": "GoogleInternalPlxV2DataSourceConnection",
                    "description": "The data freshness information is from an external connection."
                },
                "format": {
                    "$ref": "GoogleInternalPlxV2DataSourceFieldFormat",
                    "description": "The format string. This is only applicable if the freshness column\nis a timestamp."
                },
                "fromConnection": {
                    "description": "The data freshness information is from the underlying connection.",
                    "type": "boolean"
                },
                "fromDataSource": {
                    "description": "The data freshness information is from the data source.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceGetDataSourceRevisionRequest": {
            "description": "A request for a specific DataSource.",
            "id": "GoogleInternalPlxV2DataSourceGetDataSourceRevisionRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the DataSource to get.\nFormat: `dataSources/<id>/revisions/<revision_number>` or\n`dashboards/<id>/dataSources/<id>/revisions/<revision_number>`. <id> must\nbe unique and in the form: A-Za-z_* <revision_number> must\nbe an int64. However, if set to `latest`, call will return the latest\nrevision.",
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not\naffect the request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceGetDraftRevisionRequest": {
            "description": "Request type for reading draft DataSource.",
            "id": "GoogleInternalPlxV2DataSourceGetDraftRevisionRequest",
            "properties": {
                "name": {
                    "description": "Required. Name of the DataSource which draft is being read. Populated\nautomatically from URI.",
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceGetSchemaRequest": {
            "description": "A request for getting the public schema (DataSource schema) or the private\nschema (Connection schema).",
            "id": "GoogleInternalPlxV2DataSourceGetSchemaRequest",
            "properties": {
                "name": {
                    "description": "Required: The full resource name of the schema to get. Set automatically\nusing the URI for OnePlatform calls.",
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceGoogleSqlConstant": {
            "description": "Metadata for an object created via CREATE PUBLIC CONSTANT statement.",
            "id": "GoogleInternalPlxV2DataSourceGoogleSqlConstant",
            "properties": {
                "description": {
                    "description": "Comments associated with the constant.\nTBD: if supported",
                    "type": "string"
                },
                "name": {
                    "description": "Normalized name of the constant.",
                    "type": "string"
                },
                "source": {
                    "$ref": "GoogleInternalPlxV2DataSourceSymbolSource",
                    "description": "Where this symbol came from."
                },
                "type": {
                    "$ref": "GoogleCloudDatahubV2GoogleSqlType",
                    "description": "Constant type.\nNote: all non-trivial types will be available in DataSource schema graph."
                },
                "value": {
                    "description": "Serialized content of constant value.\nTODO (b/133355647) replace with dedicated structured type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceGoogleSqlFunction": {
            "description": "Metadata for an object created via CREATE PUBLIC FUNCTION statement.",
            "id": "GoogleInternalPlxV2DataSourceGoogleSqlFunction",
            "properties": {
                "body": {
                    "description": "Function code.",
                    "type": "string"
                },
                "definedFields": {
                    "description": "List of templated defined fields declared for this function. Each entry\ncorresponds to a single 'paths' list in UI_HINTS options.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceDefinedFieldTemplate"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Comments associated with the function.\nTBD: if supported",
                    "type": "string"
                },
                "fieldMetadata": {
                    "$ref": "GoogleInternalPlxV2DataSourceFieldMetadata",
                    "description": "This field is populated directly from PROTO field of this type in\nOPTIONS struct. If multiple fields of this type are found, the last\none is used. Name of the field does not matter."
                },
                "isAggregate": {
                    "description": "True if function is declared AGGREGATE.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Normalized name of the function : UdaNotAggregate -> UDANOTAGGREGATE.",
                    "type": "string"
                },
                "options": {
                    "description": "List of options attached to the function.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceGoogleSqlFunctionOption"
                    },
                    "type": "array"
                },
                "parameters": {
                    "description": "List of function parameters.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceGoogleSqlFunctionParameter"
                    },
                    "type": "array"
                },
                "returnType": {
                    "$ref": "GoogleInternalPlxV2DataSourceDeclaredDataType",
                    "description": "Return type."
                },
                "source": {
                    "$ref": "GoogleInternalPlxV2DataSourceSymbolSource",
                    "description": "Where this symbol came from."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceGoogleSqlFunctionOption": {
            "id": "GoogleInternalPlxV2DataSourceGoogleSqlFunctionOption",
            "properties": {
                "key": {
                    "description": "Option key.",
                    "type": "string"
                },
                "type": {
                    "$ref": "GoogleCloudDatahubV2GoogleSqlType",
                    "description": "Type of option\nNote: all non-trivial types will be available in DataSource schema graph."
                },
                "value": {
                    "description": "Serialized contents of option value.\nTODO (b/133355647) replace with dedicated structured type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceGoogleSqlFunctionParameter": {
            "id": "GoogleInternalPlxV2DataSourceGoogleSqlFunctionParameter",
            "properties": {
                "name": {
                    "description": "Name of parameter (TBD: if available)",
                    "type": "string"
                },
                "notAggregate": {
                    "description": "True if the parameter is marked as NOT AGGREGATE (only valid for\naggregate functions).",
                    "type": "boolean"
                },
                "type": {
                    "$ref": "GoogleInternalPlxV2DataSourceDeclaredDataType",
                    "description": "Parameter type."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceHoursOfDayPolicy": {
            "description": "A caching policy that limits the cached results based on specific times\nof day",
            "id": "GoogleInternalPlxV2DataSourceHoursOfDayPolicy",
            "properties": {
                "hours": {
                    "description": "Required. Cached results can be no earlier than one of these hours\nin the Pacific time zone. For example. [6, 18] would imply that\nthe table is refreshed at 6 AM and 6 PM, and that caches should\nclear automatically at those times.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceImportedGoogleSqlModule": {
            "description": "Imported (non-inline) GSQL module definition.",
            "id": "GoogleInternalPlxV2DataSourceImportedGoogleSqlModule",
            "properties": {
                "alias": {
                    "description": "Alias used for the imported module (... AS alias).",
                    "type": "string"
                },
                "path": {
                    "description": "Fully qualified module path relative to base directory (specified\nseparately).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceInMemoryConnection": {
            "description": "A connection that inlines the data directly into the connection definition.",
            "id": "GoogleInternalPlxV2DataSourceInMemoryConnection",
            "properties": {
                "csvData": {
                    "description": "Required. The data, encoded as RFC 4180 CSV.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceInlineDataSource": {
            "description": "A simplified DataSource definition that contains only the necessary fields to\nexecute queries against it.\n\nThis is intended to be a sub-set of the main DataSource model for cases where\nthe DataSource is not persisted and exists only in the scope of a query\nrequest.",
            "id": "GoogleInternalPlxV2DataSourceInlineDataSource",
            "properties": {
                "columns": {
                    "description": "The menu of columns exposed by the InlineDataSource.\nOnly the columns listed here are queryable. If omitted, all columns\nexposed by the Connection are available via the identity transform.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceColumnDefinition"
                    },
                    "type": "array"
                },
                "connection": {
                    "$ref": "GoogleInternalPlxV2DataSourceConnection",
                    "description": "Required. DataSources are views on top of other data. The Connection\ndescribes the underlying data and how to access it."
                },
                "name": {
                    "description": "Required. Identifier, must be unique in the context of a particular set of inlined\ndata sources. Must match `A-Za-z_*`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceInlineGoogleSqlModule": {
            "description": "Inline GSQL module definition.",
            "id": "GoogleInternalPlxV2DataSourceInlineGoogleSqlModule",
            "properties": {
                "alias": {
                    "description": "Alias used for the inline module",
                    "type": "string"
                },
                "body": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceListDraftRevisionsRequest": {
            "description": "Request type for getting a list of draft DataSources.",
            "id": "GoogleInternalPlxV2DataSourceListDraftRevisionsRequest",
            "properties": {
                "name": {
                    "description": "Required. Name of the DataSource which drafts are to be listed. Populated\nautomatically from URI.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceListDraftRevisionsResponse": {
            "description": "List of drafts returned.",
            "id": "GoogleInternalPlxV2DataSourceListDraftRevisionsResponse",
            "properties": {
                "revisions": {
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceDraftDataSourceRevision"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceMessageTypeMetadata": {
            "description": "Message type based metadata",
            "id": "GoogleInternalPlxV2DataSourceMessageTypeMetadata",
            "properties": {
                "description": {
                    "description": "Additional description in markdown format.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Human-readable name of the type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceMetadataBindings": {
            "description": "Metadata bindings for message types, fields, paths, etc.",
            "id": "GoogleInternalPlxV2DataSourceMetadataBindings",
            "properties": {
                "fieldMetadata": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourceFieldMetadata"
                    },
                    "description": "Mapping from public schema {message_name}.{field_name} to metadata.",
                    "type": "object"
                },
                "fieldPathMetadata": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourceFieldMetadata"
                    },
                    "description": "Mapping from field path {col1.col2...} to metadata.",
                    "type": "object"
                },
                "messageTypeMetadata": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourceMessageTypeMetadata"
                    },
                    "description": "Mapping from Message type {message_name} to metadata.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceMetadataKeys": {
            "description": "This message is used for metadata removal operations.",
            "id": "GoogleInternalPlxV2DataSourceMetadataKeys",
            "properties": {
                "fieldMetadataKeys": {
                    "description": "Keys for field metadata: {message_name}.{field_name}",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fieldPathMetadataKeys": {
                    "description": "Keys for field path metadata: {col1.col2...}",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "messageTypeMetadataKeys": {
                    "description": "Keys for message type metadata: {message_name}",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceModuleImportPath": {
            "description": "This message specifies what import path for GSQL modules and proto\ndefinitions should be used when building a DataSource.",
            "id": "GoogleInternalPlxV2DataSourceModuleImportPath",
            "properties": {
                "cl": {
                    "description": "A specific, possibly non-submitted, CL.",
                    "format": "int64",
                    "type": "string"
                },
                "mpmInfo": {
                    "$ref": "GoogleInternalPlxV2DataSourceModuleImportPathMpmInfo",
                    "description": "Modules and proto descriptors are in MPM."
                },
                "piperHead": {
                    "description": "Fetch at current Piper HEAD of google3 depot.",
                    "type": "boolean"
                },
                "snapshotHead": {
                    "description": "\"Relaxed\" head which is guaranteed to be within N-minutes of actual HEAD.\nTime interval is specified by command line flag.",
                    "type": "boolean"
                },
                "versionToken": {
                    "description": "This is empty for the first request in a session. Subsequent calls should\npopulate this with the value returned on the first request to ensure\nconsistency.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceModuleImportPathMpmInfo": {
            "description": "For MPM-based modules.",
            "id": "GoogleInternalPlxV2DataSourceModuleImportPathMpmInfo",
            "properties": {
                "label": {
                    "type": "string"
                },
                "packageName": {
                    "description": "Full package name, e.g.\n\"ads/spam/sql_pipelines/main/malware/daily_buckets/daily_buckets\"",
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceParentInfo": {
            "description": "Parenting related information for DataSource.",
            "id": "GoogleInternalPlxV2DataSourceParentInfo",
            "properties": {
                "parentEntity": {
                    "description": "The resource name of the parent of the DataSource. This should be\nleft empty for stand-alone DataSources. Example: 'dashboards/<id>'.",
                    "type": "string"
                },
                "unassignedParentEntity": {
                    "description": "When true, the DataSource is being created as a child DataSource\nand the parent will be assigned/linked later. If a parent is never\nassigned, the DataSource will be garbage collected.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourcePlxParameterValue": {
            "description": "A value for a parameter. See go/plx-query-api-parameters for full details.",
            "id": "GoogleInternalPlxV2DataSourcePlxParameterValue",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourcePublishDraftRequest": {
            "description": "Request type for publishing draft DataSource.",
            "id": "GoogleInternalPlxV2DataSourcePublishDraftRequest",
            "properties": {
                "name": {
                    "description": "Required. Name of the DataSource which draft is being published. Populated\nautomatically from URI.",
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceRastaConnection": {
            "description": "Data from Rasta.",
            "id": "GoogleInternalPlxV2DataSourceRastaConnection",
            "properties": {
                "uri": {
                    "description": "Required. The URL for the Rasta data.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceResolvedModuleImportPath": {
            "description": "This message is used in DataSource API responses to indicate actual import\npath used to fetch the module contents used in constructing the DataSource.\nThis is the \"concrete\" path which fully resolved all dynamic parameters of\nCreate/Update requests: at HEAD, at snapshot HEAD, from MPM label.",
            "id": "GoogleInternalPlxV2DataSourceResolvedModuleImportPath",
            "properties": {
                "cl": {
                    "description": "If created at HEAD or at CL, concrete CL number.",
                    "format": "int64",
                    "type": "string"
                },
                "mpmInfo": {
                    "$ref": "GoogleInternalPlxV2DataSourceResolvedModuleImportPathMpmInfo",
                    "description": "Complete MPM info for MPM-based modules."
                },
                "versionToken": {
                    "description": "Required. Token built for the concrete module revision.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceResolvedModuleImportPathMpmInfo": {
            "description": "For MPM-based modules.",
            "id": "GoogleInternalPlxV2DataSourceResolvedModuleImportPathMpmInfo",
            "properties": {
                "packageName": {
                    "description": "Full package name (required for MPM-based modules).",
                    "type": "string"
                },
                "version": {
                    "description": "MPM version (required for MPM-based modules)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSchema": {
            "description": "Schema with Metadata",
            "id": "GoogleInternalPlxV2DataSourceSchema",
            "properties": {
                "metadataBindings": {
                    "$ref": "GoogleInternalPlxV2DataSourceMetadataBindings",
                    "description": "Metadata bound to individual elements of the schema."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSchemaUpdateMode": {
            "description": "Describes condition when schema is to be updated on revision creation.",
            "id": "GoogleInternalPlxV2DataSourceSchemaUpdateMode",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSchemaView": {
            "description": "A list of options for modifying the Schema returned in responses.",
            "id": "GoogleInternalPlxV2DataSourceSchemaView",
            "properties": {
                "pathMetadataLimitMode": {
                    "description": "The mode in which path based metadata is limited in the response.",
                    "enum": [
                        "UNSPECIFIED",
                        "NO_LIMIT"
                    ],
                    "enumDescriptions": [
                        "",
                        "Path based metadata will not be limited."
                    ],
                    "type": "string"
                },
                "schemaTypesLimit": {
                    "description": "Limits the number of types returned in the schema. If not set or set to 0,\nthere will be no limit. This number represents an approximate number of\nfields to return in the schema. This is a more deterministic way of\nlimiting the size of the schema, since the size of types vary greatly. This\nwill return at least one type.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSchemaViewPathMetadataLimitMode": {
            "description": "The mode in which path based metadata is limited.",
            "id": "GoogleInternalPlxV2DataSourceSchemaViewPathMetadataLimitMode",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceScriptConnection": {
            "description": "A Connection for a user-provided SQL block or a named script.",
            "id": "GoogleInternalPlxV2DataSourceScriptConnection",
            "properties": {
                "inlineScript": {
                    "$ref": "Script",
                    "description": "A script model representing the inline SQL to execute."
                },
                "parameterDefaults": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourcePlxParameterValue"
                    },
                    "description": "The default values to use for script parameters if they are not overridden\nby the query.",
                    "type": "object"
                },
                "scriptName": {
                    "description": "The fully qualified unique ID of a persistent script.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSecurityPolicy": {
            "description": "The security-related policies to apply to this connection.",
            "id": "GoogleInternalPlxV2DataSourceSecurityPolicy",
            "properties": {
                "filters": {
                    "description": "Filter expressions that should also be applied to queries over\nthis data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSemanticType": {
            "description": "Describes the UI-level semantic type as well as metadata to convert the wire\ntype to the semantic type. Later, this will also be extended to contain\ngranularity information which can be used to further filter down functions,\nprovide appropriate filter UIs and corectly interpolate data points.",
            "id": "GoogleInternalPlxV2DataSourceSemanticType",
            "properties": {
                "arrayElementType": {
                    "description": "The semantic type of each element of an array.\nMust be set if the type is ARRAY.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "STRING",
                        "INTEGER",
                        "DECIMAL",
                        "TIMESTAMP",
                        "BOOLEAN",
                        "HLL_SKETCH",
                        "KLL_DOUBLE",
                        "KLL_INT64",
                        "ARRAY",
                        "MESSAGE",
                        "DATE",
                        "DATETIME"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Requires array_element_type to be set.",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "dateCoercion": {
                    "$ref": "GoogleInternalPlxV2DataSourceSemanticTypeDateCoercion"
                },
                "timestampCoercion": {
                    "$ref": "GoogleInternalPlxV2DataSourceSemanticTypeTimestampCoercion"
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "STRING",
                        "INTEGER",
                        "DECIMAL",
                        "TIMESTAMP",
                        "BOOLEAN",
                        "HLL_SKETCH",
                        "KLL_DOUBLE",
                        "KLL_INT64",
                        "ARRAY",
                        "MESSAGE",
                        "DATE",
                        "DATETIME"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Requires array_element_type to be set.",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSemanticTypeDateCoercion": {
            "description": "Coercion definitions for the DATE semantic type.",
            "id": "GoogleInternalPlxV2DataSourceSemanticTypeDateCoercion",
            "properties": {
                "integerUnit": {
                    "enum": [
                        "UNIT_UNSPECIFIED",
                        "DATE_ID",
                        "EPOCH_DAYS",
                        "DATE_DECIMAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "Days since Jan 1, 2000",
                        "Days since the unix epoch",
                        "Date as a decimal number, e.g. 20180902"
                    ],
                    "type": "string"
                },
                "stringFormat": {
                    "description": "Format specifier compatible with GoogleSQL's PARSE_DATE for coercions\nfrom the data type STRING.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSemanticTypeTimestampCoercion": {
            "description": "Coercion definitions for the TIMESTAMP semantic type.",
            "id": "GoogleInternalPlxV2DataSourceSemanticTypeTimestampCoercion",
            "properties": {
                "integerUnit": {
                    "enum": [
                        "UNIT_UNSPECIFIED",
                        "EPOCH_MICROS",
                        "EPOCH_MILLIS",
                        "EPOCH_SECONDS"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "stringFormat": {
                    "description": "Format specifier compatible with GoogleSQL's PARSE_TIMESTAMP for\ncoercions from the data type STRING.",
                    "type": "string"
                },
                "timezone": {
                    "description": "Timezone to use when parsing string formatted timestamps.\nUses the session default bucketing timezone if unspecified.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSheetsConnection": {
            "id": "GoogleInternalPlxV2DataSourceSheetsConnection",
            "properties": {
                "id": {
                    "description": "The sheet ID (not the full URL)",
                    "type": "string"
                },
                "uri": {
                    "description": "The URI of the sheet.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSymbolCatalogMetadata": {
            "description": "Catalog of public symbols that can be referenced in DataSource.",
            "id": "GoogleInternalPlxV2DataSourceSymbolCatalogMetadata",
            "properties": {
                "constants": {
                    "description": "List of public constants visible to DataSource.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceGoogleSqlConstant"
                    },
                    "type": "array"
                },
                "functions": {
                    "description": "List of public function visible to DataSource.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceGoogleSqlFunction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceSymbolSource": {
            "id": "GoogleInternalPlxV2DataSourceSymbolSource",
            "properties": {
                "isBuiltIn": {
                    "description": "True if the symbol comes from built-in (common or engine-specific)\nlibrary.",
                    "type": "boolean"
                },
                "moduleAlias": {
                    "description": "Alias of the module where the symbol is defined, matches one of the\nentries returned in modules.inline.alias or modules.imports[].alias\nfields.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceTableConnection": {
            "description": "A Connection for a user-provided table name.",
            "id": "GoogleInternalPlxV2DataSourceTableConnection",
            "properties": {
                "bigQueryOptions": {
                    "$ref": "GoogleInternalPlxV2DataSourceBigQueryOptions",
                    "description": "BigQuery specific query options."
                },
                "dremelOptions": {
                    "$ref": "GoogleInternalPlxV2DataSourceDremelOptions",
                    "description": "Dremel specific query options"
                },
                "f1Options": {
                    "$ref": "GoogleInternalPlxV2DataSourceF1QueryOptions",
                    "description": "F1 specific query options."
                },
                "id": {
                    "description": "Required. The unique table name, as defined by the query engine.",
                    "type": "string"
                },
                "queryEngine": {
                    "description": "Required. The query engine used for querying the table.",
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1",
                        "POWERDRILL_DREMEL",
                        "PROCELLA",
                        "AUTO",
                        "WARPFLOW",
                        "BIG_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceTemplateField": {
            "description": "Metadata for a template field.",
            "id": "GoogleInternalPlxV2DataSourceTemplateField",
            "properties": {
                "id": {
                    "description": "Required. The id of this field. The metadata with id matching a\ntemplate token will be used for replacing the token. Each token\ndefined on the templated_query needs to have a field with matching\nid. The field ids are also the output column names of the query\ngenerated from the template.",
                    "type": "string"
                },
                "outputType": {
                    "description": "Required. The output data type of this field. This is essentially\nthe data type that the query_expression would produce.",
                    "enum": [
                        "UNKNOWN_FIELD_DATA_TYPE",
                        "TYPE_INT32",
                        "TYPE_INT64",
                        "TYPE_UINT32",
                        "TYPE_UINT64",
                        "TYPE_BOOL",
                        "TYPE_FLOAT",
                        "TYPE_DOUBLE",
                        "TYPE_STRING",
                        "TYPE_BYTES",
                        "TYPE_DATE",
                        "TYPE_TIMESTAMP",
                        "TYPE_TIMESTAMP_MICROS",
                        "TYPE_TIMESTAMP_MILLIS",
                        "TYPE_TIMESTAMP_SECONDS",
                        "TYPE_TIMESTAMP_NANOS",
                        "TYPE_ENUM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Consistent with GoogleSql timestamp in micros.",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "queryExpression": {
                    "description": "Required. The expression in the language of the template's query\nengine that will be used to select the values for this field.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceTemplatedConnection": {
            "description": "Describes a templated connection.",
            "id": "GoogleInternalPlxV2DataSourceTemplatedConnection",
            "properties": {
                "field": {
                    "description": "Metadata for the template fields. All template tokens defined in the\ntemplated_query need to have a field with a matching id.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceTemplateField"
                    },
                    "type": "array"
                },
                "parameterDefaults": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourcePlxParameterValue"
                    },
                    "description": "The default parameter values for this template.",
                    "type": "object"
                },
                "queryEngine": {
                    "description": "Required. The query engine which the templated query is written for.",
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1",
                        "POWERDRILL_DREMEL",
                        "PROCELLA",
                        "AUTO",
                        "WARPFLOW",
                        "BIG_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "templatedQuery": {
                    "description": "Required. Query which contains template keyword tokens to be replaced\nbased on a projection spec.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceUndeleteDataSourceRequest": {
            "id": "GoogleInternalPlxV2DataSourceUndeleteDataSourceRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the DataSource to undelete. Set automatically using\nthe URI for OnePlatform calls.",
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceUndeleteDraftRequest": {
            "description": "Request type for restoring deleted draft DataSource.",
            "id": "GoogleInternalPlxV2DataSourceUndeleteDraftRequest",
            "properties": {
                "name": {
                    "description": "Required. Name of the DataSource whose draft is being undeleted. Populated\nautomatically from URI.",
                    "type": "string"
                },
                "schemaView": {
                    "$ref": "GoogleInternalPlxV2DataSourceSchemaView",
                    "description": "Optional information for modifying the returned SchemaGraph."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceValidationError": {
            "description": "The validation details that were found when trying to create or update a\nDataSource.",
            "id": "GoogleInternalPlxV2DataSourceValidationError",
            "properties": {
                "columnDefinitionErrors": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourceValidationErrorColumnDefinitionError"
                    },
                    "description": "Errors related to the ColumnDefinitions.\nColumn ID is mapped to its errors.",
                    "type": "object"
                },
                "connectionErrors": {
                    "description": "Errors related to the Connection.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dataSourceErrors": {
                    "description": "Errors related to the entire DataSource.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hasError": {
                    "description": "Whether the DataSource being validated actually contains at least one\nerror. This should be set in the application code.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceValidationErrorColumnDefinitionError": {
            "description": "Errors for a specific column",
            "id": "GoogleInternalPlxV2DataSourceValidationErrorColumnDefinitionError",
            "properties": {
                "errors": {
                    "description": "One or more errors",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceValidationStatus": {
            "description": "Result of validating a DataSource.",
            "id": "GoogleInternalPlxV2DataSourceValidationStatus",
            "properties": {
                "columnDefinitionErrors": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourceValidationStatusColumnDefinitionError"
                    },
                    "description": "Errors related to the ColumnDefinitions.\nColumn ID is mapped to its errors.",
                    "type": "object"
                },
                "connectionErrors": {
                    "description": "Errors related to the Connection.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                },
                "dataSourceErrors": {
                    "description": "Errors related to the entire DataSource.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                },
                "hasErrors": {
                    "description": "True if any errors were detected",
                    "type": "boolean"
                },
                "metadataErrors": {
                    "description": "Errors detected in metadata bindings.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2DataSourceValidationStatusColumnDefinitionError": {
            "description": "Errors for a specific column",
            "id": "GoogleInternalPlxV2DataSourceValidationStatusColumnDefinitionError",
            "properties": {
                "errors": {
                    "description": "One or more errors",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerBaseline": {
            "description": "Baseline analysis: show slices as percentage of another slice or of the sum\nacross all slices.\nNext Tag: 4",
            "id": "GoogleInternalPlxV2ExplorerBaseline",
            "properties": {
                "filters": {
                    "description": "Baseline filters.\nWhen not set, will show slices as % of the sum for all slices.\nWhen set, will show slices as % of the corresponding slice. If there is\nno corresponding slice, baseline analysis is disabled.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerFilter"
                    },
                    "type": "array"
                },
                "showBaselineSlice": {
                    "description": "Whether to show the baseline slice in the chart. Defaults to false.",
                    "type": "boolean"
                },
                "sliceId": {
                    "description": "Deprecated, use filters instead.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerBreakdown": {
            "description": "Breakdowns define how data is sliced in a chart.\nA Breakdown has two sets of slices:\n - User-defined custom slices, defined in `custom_slices`.\n - Generated slices based on ordered field values defined by `expression`.\nNext Tag: 8",
            "id": "GoogleInternalPlxV2ExplorerBreakdown",
            "properties": {
                "customSlices": {
                    "description": "Fixed user-defined slices.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerSlice"
                    },
                    "type": "array"
                },
                "expression": {
                    "description": "Non-aggregating expression used to generate slices (each slice\nfilters on one of the values returned by this expression).\nIf not set, no slices are generated.",
                    "type": "string"
                },
                "hasTailBucket": {
                    "description": "Whether to generate a slice for the tail bucket (all other values).\nDefaults to false.\nHas no effect if `expression` is not set.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Generated if not set.",
                    "type": "string"
                },
                "limit": {
                    "description": "Maximum number of slices to generate (excluding the \"other\" slice).\nDefaults to an application-defined limit if not set.\nHas no effect if `expression` is not set.",
                    "format": "int32",
                    "type": "integer"
                },
                "orderingExpression": {
                    "description": "Aggregating expression used to order values before selecting slices.\nIf not set, values are ordered based on context (by the first chart measure\nor alphabetically).\nHas no effect if `expression` is not set.",
                    "type": "string"
                },
                "sortOrder": {
                    "description": "Sort order.\nDefaults to ascending when unspecified.\nHas no effect if `ordering_expression` is not set.",
                    "enum": [
                        "SORT_ORDER_UNSPECIFIED",
                        "ASC",
                        "DESC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChart": {
            "description": "Charts define how data is visualized in the Pages of an Exploration.\nNext Tag: 7",
            "id": "GoogleInternalPlxV2ExplorerChart",
            "properties": {
                "baseline": {
                    "$ref": "GoogleInternalPlxV2ExplorerBaseline",
                    "description": "Configuration of baseline analysis. Has no effect if not set."
                },
                "breakdown": {
                    "$ref": "GoogleInternalPlxV2ExplorerBreakdown",
                    "description": "Slicing information for the chart. Defaults to no slicing if not set."
                },
                "displayName": {
                    "description": "The human-readable name for the Chart.",
                    "type": "string"
                },
                "hidden": {
                    "description": "Hide the chart. Visible if not set.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Generated if not set.",
                    "type": "string"
                },
                "visualization": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualization",
                    "description": "Required. The visualization type the chart is using for displaying data."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChartVisualization": {
            "description": "Defines the visualization type for the chart. Every Visualization type has\na set of \"roles\" that take expression elements to compute the data series\nfor the visualization.\nNext Tag: 6",
            "id": "GoogleInternalPlxV2ExplorerChartVisualization",
            "properties": {
                "barChart": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationBarChart"
                },
                "heatmap": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationHeatmap"
                },
                "lineChart": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationLineChart"
                },
                "scorecard": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationScorecard"
                },
                "table": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationTable"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChartVisualizationBarChart": {
            "description": "A bar chart shows one or more series of aggregating values (measures) for\nevery distinct value of a categorical variable (dimension).\nNext Tag: 3",
            "id": "GoogleInternalPlxV2ExplorerChartVisualizationBarChart",
            "properties": {
                "dimension": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement",
                    "description": "Required. The expression that is used for the categorical variable.\nE.g. \"country\"."
                },
                "measures": {
                    "description": "Required. List of aggregating expressions to show values for per\ndimension value. E.g. \"SUM(revenue)\".",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChartVisualizationHeatmap": {
            "description": "A heatmap shows a grid of fields colored by the aggregating value of a\nmeasure for each distinct value of the dimensions set for the X and Y\naxis.\nNext tag: 4",
            "id": "GoogleInternalPlxV2ExplorerChartVisualizationHeatmap",
            "properties": {
                "measure": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement",
                    "description": "Required. The aggregated expression used to determine the value of\na single field on the grid. E.g. \"COUNT(clicks)\"."
                },
                "x": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement",
                    "description": "Required. The expression that is used for the x-axis.\nE.g. \"click.pos.x\"."
                },
                "y": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement",
                    "description": "Required. The expression that is used for the y-axis.\nE.g. \"click.pos.y\"."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChartVisualizationLineChart": {
            "description": "A line chart shows one or more series of aggregating values (measures)\nfor every value of a (bucketed) continuous variable (dimension).\nNext Tag: 3",
            "id": "GoogleInternalPlxV2ExplorerChartVisualizationLineChart",
            "properties": {
                "dimension": {
                    "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement",
                    "description": "Required. The expression that is used for the x-axis. Should be a\ncontinuous variable.\nE.g. \"time\"."
                },
                "measures": {
                    "description": "Required. The aggregating expressions to show values for per\ndimension value. E.g. \"COUNT_DISTINCT(query)\".",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement": {
            "description": "A role element wraps a GoogleSQL expression to be used as input for a\nchart visualization. See Visualization type.\nNext Tag: 3",
            "id": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement",
            "properties": {
                "expression": {
                    "description": "Required. A GoogleSQL expression to evaluate as input for a\nvisualization's role. E.g. \"SUM(revenue)\", \"COUNT(*)\" or\n\"LENGTH(query)\"",
                    "type": "string"
                },
                "id": {
                    "description": "Generated if not set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChartVisualizationScorecard": {
            "description": "A scorecard shows aggregated values for quick ingestion of totals in a\nslice of data.\nNext Tag: 2",
            "id": "GoogleInternalPlxV2ExplorerChartVisualizationScorecard",
            "properties": {
                "measures": {
                    "description": "Required. List of aggregating expressions to show single values for.\nE.g. \"COUNT_DISTINCT(query)\".",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerChartVisualizationTable": {
            "description": "A table shows either:\n  a. one or more series of aggregating values (measures) for every\n     (unique) combination of the (bucketed) domain variables\n     (dimensions), or,\n  b. if no measures are provided, the raw values of the dimensions for\n     each row in the DataSource (flat table).\nNext Tag: 3",
            "id": "GoogleInternalPlxV2ExplorerChartVisualizationTable",
            "properties": {
                "dimensions": {
                    "description": "The expressions that are used for the columns that determine the rows.\nE.g. \"product\".",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement"
                    },
                    "type": "array"
                },
                "measures": {
                    "description": "The aggregating expressions to show values for per unique dimension\nvalue combination. E.g. \"COUNT_DISTINCT(query)\".",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerChartVisualizationRoleElement"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerCopyRevisionRequest": {
            "id": "GoogleInternalPlxV2ExplorerCopyRevisionRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the Exploration revision to copy.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerCreateExplorationRequest": {
            "description": "A request to create a new Exploration.",
            "id": "GoogleInternalPlxV2ExplorerCreateExplorationRequest",
            "properties": {
                "exploration": {
                    "$ref": "GoogleInternalPlxV2ExplorerExploration",
                    "description": "Required: The Exploration to create."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerCreateRevisionRequest": {
            "description": "A request to update an Exploration by creating a new revision.",
            "id": "GoogleInternalPlxV2ExplorerCreateRevisionRequest",
            "properties": {
                "exploration": {
                    "$ref": "GoogleInternalPlxV2ExplorerExploration",
                    "description": "Required: The Exploration to save."
                },
                "mostRecentRevisionName": {
                    "description": "Should be set to the value obtained by the most recent\nGetRevision operation, to check for and prevent\nconflicting updates (i.e. optimistic locking).",
                    "type": "string"
                },
                "parent": {
                    "description": "The name of the Exploration to create the revision on.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                },
                "validateOnly": {
                    "description": "Required: Whether to validate the Exploration without saving it.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerDataSourceRef": {
            "description": "Reference to a DataSource either by revision name or inline.",
            "id": "GoogleInternalPlxV2ExplorerDataSourceRef",
            "properties": {
                "inline": {
                    "$ref": "GoogleInternalPlxV2DataSourceDataSource",
                    "description": "Deprecated."
                },
                "name": {
                    "description": "The fully qualified unique ID of a DataSourceRevision.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerDeleteExplorationRequest": {
            "id": "GoogleInternalPlxV2ExplorerDeleteExplorationRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the Exploration to delete. Set automatically using\nthe URI for OnePlatform calls.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerExploration": {
            "description": "Represents an application state of Plx Explorer.\nNext Tag: 5",
            "id": "GoogleInternalPlxV2ExplorerExploration",
            "properties": {
                "dataSource": {
                    "$ref": "GoogleInternalPlxV2ExplorerDataSourceRef",
                    "description": "Required. A reference to the explored DataSource."
                },
                "displayName": {
                    "description": "The human-readable name for the Exploration.",
                    "type": "string"
                },
                "pages": {
                    "description": "All pages of the exploration in display order.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerPage"
                    },
                    "type": "array"
                },
                "sourceControlInfo": {
                    "$ref": "SourceControlInfo",
                    "description": "Storage information (e.g. Piper paths) for the Exploration."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerExplorationRevision": {
            "id": "GoogleInternalPlxV2ExplorerExplorationRevision",
            "properties": {
                "exploration": {
                    "$ref": "GoogleInternalPlxV2ExplorerExploration",
                    "description": "The details of the Exploration at this revision."
                },
                "name": {
                    "description": "Required, if the Exploration is retrieved from persistent storage.\nMay be empty when constructing a Exploration (before it is persisted)\nor when used only transiently.\nFormat: `explorations/<id>/revisions/<revision_number>`\n<id> must be unique and in the form: A-Za-z_*\n<revision_number> identifies a particular revision of the Exploration. The\nrevision will be increased each time a persisted update of an Exploration\noccurs.",
                    "type": "string"
                },
                "parent": {
                    "description": "The name of the Exploration (without revision). For example:\n\"explorations/<id>\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerFilter": {
            "description": "A Filter defines a logical predicate by applying a {unary, binary} relational\noperator on the given expression. Used to specify slices of data for\nquerying.\nIf both `operator` and `value` are omitted, the expression must evaluate to\na boolean value.\nNext Tag: 4",
            "id": "GoogleInternalPlxV2ExplorerFilter",
            "properties": {
                "expression": {
                    "description": "Required. The left-hand-side of the predicate. This is usually a reference\nto a field from the DataSource of the Exploration.",
                    "type": "string"
                },
                "operator": {
                    "description": "The operator of the predicate.",
                    "enum": [
                        "UNKNOWN_OPERATOR",
                        "EQUALS",
                        "GREATER_THAN",
                        "LESS_THAN",
                        "GREATER_THAN_EQUALS",
                        "LESS_THAN_EQUALS",
                        "NOT_EQUALS",
                        "IN",
                        "NOT_IN",
                        "BETWEEN",
                        "NOT_BETWEEN",
                        "IS_NULL",
                        "IS_NOT_NULL",
                        "IS_INFINITY",
                        "IS_NOT_INFINITY",
                        "IS_NAN",
                        "IS_NOT_NAN",
                        "CONTAINS",
                        "DOES_NOT_CONTAIN",
                        "REGEX"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "value": {
                    "$ref": "ValueProto",
                    "description": "The right-hand-side of the predicate. Ignored if the operator is unary.\nExamples:\n```\n{\n  expression: \"country\"\n  operator: EQUALS\n  value: {\n    string_value: \"ch\"\n  }\n}\n\n{\n  expression: \"ARRAY_LENGTH(events)\"\n  operator: BETWEEN\n  value {\n    array_value: {\n      element: { int64_value: 5 }\n      element: { int64_value: 23 }\n    }\n  }\n}\n\n{\n  expression: \"product\"\n  operator: IN\n  value {\n    array_value {\n      element: { string_value: \"gmail\" }\n      element: { string_value: \"inbox\" }\n    }\n  }\n}\n\n{\n  expression: \"user\"\n  operator: IS_NULL\n}\n\n{\n  expression: \"is_valid(session)\"\n}\n```"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerGetRevisionRequest": {
            "description": "A request for a specific Exploration.",
            "id": "GoogleInternalPlxV2ExplorerGetRevisionRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the Exploration to get.\nFormat: `explorations/<id>/revisions/<revision_number>`\n<id> must be unique and in the form: A-Za-z_*\n<revision_number> must be an int64. However, if set to `latest`, call will\nreturn the latest revision.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerPage": {
            "description": "A Page groups a set of Charts together.\nNext Tag: 9",
            "id": "GoogleInternalPlxV2ExplorerPage",
            "properties": {
                "charts": {
                    "description": "The list of Charts that belong to the Page.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerChart"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "The description for the Page.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The human-readable name for the Page.",
                    "type": "string"
                },
                "filters": {
                    "description": "Deprecated. Use scenarios instead.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerFilter"
                    },
                    "type": "array"
                },
                "flattening": {
                    "description": "The flattening path used by the Page. Example: `person.addresses`.",
                    "type": "string"
                },
                "id": {
                    "description": "Generated if not set.",
                    "type": "string"
                },
                "referenceScenarioId": {
                    "description": "The ID of the reference scenario. May be empty if none is set.",
                    "type": "string"
                },
                "scenarios": {
                    "description": "The scenarios applied to the Page. If empty, equivalent to a single\nscenario without any filters.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerScenario"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerScenario": {
            "description": "A Scenario is a named set of filters.\nNext Tag: 5",
            "id": "GoogleInternalPlxV2ExplorerScenario",
            "properties": {
                "displayName": {
                    "description": "A human-readable name.",
                    "type": "string"
                },
                "filters": {
                    "description": "A list of Filters to apply to the charts.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerFilter"
                    },
                    "type": "array"
                },
                "hidden": {
                    "description": "Hide the scenario. Visible if not set.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Generated if not set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerSlice": {
            "description": "Slices define a set of filters used to isolate a specific slice of data.\nNext Tag: 5",
            "id": "GoogleInternalPlxV2ExplorerSlice",
            "properties": {
                "color": {
                    "description": "CSS color value for the slice. Selected from a default color palette if not\nset.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The human-readable name for the Slice (overrides the default description\nof its filters).",
                    "type": "string"
                },
                "filters": {
                    "description": "The Filters applied to this slice.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2ExplorerFilter"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Generated if not set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ExplorerUndeleteExplorationRequest": {
            "id": "GoogleInternalPlxV2ExplorerUndeleteExplorationRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the Exploration to undelete. Set automatically using\nthe URI for OnePlatform calls.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryAggregatingQuery": {
            "description": "A query which models a normal SQL \"aggregating\"/\"group by\" query, plus\nextensions.\n\nThese extensions provide syntactic sugar for operations that\nare frequently needed by data analysis, exploration, and dashboarding tools\nbut hard to express directly in SQL.",
            "id": "GoogleInternalPlxV2QueryAggregatingQuery",
            "properties": {
                "approximationPolicy": {
                    "$ref": "GoogleInternalPlxV2QueryApproximationPolicy",
                    "description": "How the query should be approximated, if at all."
                },
                "dimensions": {
                    "description": "Dimensions are columns that determine the grouping key for the query.\nIn SQL terms, these columns would be part of both the SELECT and GROUP BY\nclauses.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryDimension"
                    },
                    "type": "array"
                },
                "filters": {
                    "description": "Pre-aggregation row filters.\nIf multiple filters are specified, they are logically ANDed together.\nAnalogous to a SQL WHERE clause.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryFilter"
                    },
                    "type": "array"
                },
                "flatteningLevels": {
                    "description": "Flattens repeated structures, applied pre-filtering.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryFlatteningLevel"
                    },
                    "type": "array"
                },
                "limit": {
                    "$ref": "GoogleInternalPlxV2QueryLimit",
                    "description": "Truncation of the results, applied post-aggreation\nAnalogous to a SQL LIMIT clause."
                },
                "measures": {
                    "description": "Measures are columns that return aggregated values\n(e.g. SUM, MIN, MAX, etc).",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryMeasure"
                    },
                    "type": "array"
                },
                "orderings": {
                    "description": "Sort order for the result rows, applied post-aggregation.\nAnalagous to a SQL ORDER BY clause.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryOrdering"
                    },
                    "type": "array"
                },
                "postAggregationFilters": {
                    "description": "Post-aggregation filters.\nApplied after grouping/aggregation but before ordering. Expressions may\nreference either 1) dimension and measure ids, or 2) query source fields,\nbut not both. When referencing query source fields, expressions must be\naggregated.\n\nFor example:\n * `dimension1 != \"foo\"`\n * `measure1 > 100`\n * `SUM(source_col1) > 100`\n\nIf multiple filters are specified, they are logically ANDed together.\nAnalogous to a SQL HAVING clause.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryFilter"
                    },
                    "type": "array"
                },
                "source": {
                    "$ref": "GoogleInternalPlxV2QueryQuerySource",
                    "description": "The logical source of data for this query. Can be either a\nDataSource or sub-query.\nAnalogous to a SQL FROM clause."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryApproximationPolicy": {
            "description": "Defines whether the use of sampling/approximation is allowed for a query.\nThis is a message to prepare for the time when we have some parameters for\ndifferent policies (e.g. querying samples of various sizes incrementally),\nalthough we don't currently have any policies that allow parameters right\nnow.",
            "id": "GoogleInternalPlxV2QueryApproximationPolicy",
            "properties": {
                "mode": {
                    "enum": [
                        "EXACT",
                        "APPROXIMATE"
                    ],
                    "enumDescriptions": [
                        "The default mode, the same as EXACT.\nDefault",
                        "Approximate results (how approximate is data source dependent) are OK."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryArrayFilter": {
            "description": "Structured filter for array.",
            "id": "GoogleInternalPlxV2QueryArrayFilter",
            "properties": {
                "alias": {
                    "description": "The unique alias to use in the filter expression below.\nThis name identifies the current element in the array.",
                    "type": "string"
                },
                "expressions": {
                    "description": "GoogleSQL boolean expressions where the array filter operator applies.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "operator": {
                    "description": "Applies to the array filter expressions.",
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        "CONTAINS_ANY",
                        "CONTAINS_ALL",
                        "CONTAINS_NONE",
                        "CONTAINS_EXACT"
                    ],
                    "enumDescriptions": [
                        "Default operator.",
                        "The row matches if any filter expression matches a value in the array.",
                        "The row matches if all filter expressions match values in the array.",
                        "The row matches if none of the filter expressions match values in the\narray.",
                        "The row matches if all of the filter expressions match values in the\narray and there are no non-matching values."
                    ],
                    "type": "string"
                },
                "path": {
                    "description": "A GoogleSQL field path expression which identifies the target array.\nThe type of the final component of the path expression must be ARRAY.\n\nOther components of the path may also be ARRAY types. When multiple ARRAYs\nare present, all leaf values within the row are treated as one logical\narray by the ArrayFilter `operator`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryBucketingStrategy": {
            "description": "A bucketing strategy defines how to reduce the cardinality of a dimension.\nFor example, by converting millisecond-level data into daily data.",
            "id": "GoogleInternalPlxV2QueryBucketingStrategy",
            "properties": {
                "time": {
                    "$ref": "TimeGranularity",
                    "description": "Bucket by time."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryColumn": {
            "description": "Defines a simple column for flat queries.",
            "id": "GoogleInternalPlxV2QueryColumn",
            "properties": {
                "expression": {
                    "description": "A GoogleSql expression defining the column. If no expression is provided,\nthe definition will be hydrated from the QuerySource (DataSource only)\nusing the column id.",
                    "type": "string"
                },
                "id": {
                    "description": "Required: The unique name for the column. This is the name that will be\noutput in the results.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryCreateExecutionRequest": {
            "description": "This message contains the definition of the query to be executed,\nwith associated policies and metadata.\nQueries must not refer to different revisions of the same DataSource as\nsource.",
            "id": "GoogleInternalPlxV2QueryCreateExecutionRequest",
            "properties": {
                "definitions": {
                    "description": "Optional:\nQuery definitions are building blocks which can be referred to from other\nqueries. No results are returned from these queries to the caller.\nMay depend on other queries defined in `output` and/or `definitions`.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryQuery"
                    },
                    "type": "array"
                },
                "inlineDataSources": {
                    "description": "Optional:\nData source definitions that can be referred to from the Queries.\nIf a query refers to a data source and it is not present in this list, it\nwill be looked up from storage. Each data source must have a unique id\nwithin all inline data sources.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2DataSourceInlineDataSource"
                    },
                    "type": "array"
                },
                "longPollDeadline": {
                    "description": "Optional: Causes the CreateExecution operation to block until the execution\nhas finished or the specified amount of time has elapsed, whichever comes\nfirst. Must not be greater than the RPC deadline.",
                    "format": "google-duration",
                    "type": "string"
                },
                "outputs": {
                    "description": "Required: (one or more)\nResults from output queries will be returned to the caller.\nMay depend on other queries defined in `output` and/or `definitions`.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryQuery"
                    },
                    "type": "array"
                },
                "settings": {
                    "$ref": "GoogleInternalPlxV2QueryExecutionSettings",
                    "description": "Optional: Additional settings"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryDataSourceStatistics": {
            "description": "Statistics related to a DataSource.",
            "id": "GoogleInternalPlxV2QueryDataSourceStatistics",
            "properties": {
                "buildDataSourceEnd": {
                    "description": "Time when DataSource finished building.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "buildDataSourceStart": {
                    "description": "Time when DataSource started building.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "dataSourceName": {
                    "description": "Unique identifier of the DataSource.",
                    "type": "string"
                },
                "retrieveDataSourceEnd": {
                    "description": "Time when DataSource finished retrieval from PlxDb.\n(Omitted for inline DataSource)",
                    "format": "google-datetime",
                    "type": "string"
                },
                "retrieveDataSourceStart": {
                    "description": "Time when DataSource started retrieval from PlxDb.\n(Omitted for inline DataSource)",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryDimension": {
            "description": "Defines a column that will be grouped-by.",
            "id": "GoogleInternalPlxV2QueryDimension",
            "properties": {
                "bucketing": {
                    "$ref": "GoogleInternalPlxV2QueryBucketingStrategy",
                    "description": "Optional: Bucket the dimension values, prior to grouping/aggregation."
                },
                "expression": {
                    "description": "Optional: A GoogleSql expression defining the column.\n\nIf the QuerySource is a DataSource, the input columns referenced within the\nexpression will be replaced with their definitions from the DataSource.",
                    "type": "string"
                },
                "id": {
                    "description": "Required: The unique name to use for the dimension. This is the output name\nof the column and is visible in the results or as input to other queries.\n\nIf `id` is not a valid GoogleSQL identifier, any expressions which\ndepend on this column must back-tick quote + escape `id` in accordance with\nGoogleSQL rules.\n\nMust not be empty. Must be unique within a query.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryExecution": {
            "description": "Contains the details of a query execution.",
            "id": "GoogleInternalPlxV2QueryExecution",
            "properties": {
                "executionStatistics": {
                    "$ref": "GoogleInternalPlxV2QueryExecutionStatistics",
                    "description": "Optional: Statistics related to the query."
                },
                "id": {
                    "description": "Required: The unique execution ID of the requested query group.",
                    "type": "string"
                },
                "queryDetails": {
                    "description": "Required: The execution details of `output` queries, such as status and\nresult.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryQueryDetails"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryExecutionSettings": {
            "description": "Policies and other settings which affect query execution.",
            "id": "GoogleInternalPlxV2QueryExecutionSettings",
            "properties": {
                "timeZone": {
                    "$ref": "TimeZone",
                    "description": "Optional: All time-related concepts in the query will be in this time\nzone.\n\nCurrently, this defaults to GoogleStandardTime. In the future, this\nwill be a required field and not have a default.\n\n\nThis will override any default time zone settings in a Script."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryExecutionStatistics": {
            "description": "Statistics related to the Query request.",
            "id": "GoogleInternalPlxV2QueryExecutionStatistics",
            "properties": {
                "dataSourceStatistics": {
                    "description": "Details regarding all data sources referenced by the queries. If a data\nsource was loaded by multiple queries, there will be only one entry.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryDataSourceStatistics"
                    },
                    "type": "array"
                },
                "queryEngineStatistics": {
                    "description": "Details regarding queries sent to the query engines.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryQueryEngineStatistics"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryExportQueryResultRequest": {
            "description": "Contains the export source and destination.",
            "id": "GoogleInternalPlxV2QueryExportQueryResultRequest",
            "properties": {
                "destination": {
                    "$ref": "ExportDestination",
                    "description": "Required: The destination to export to."
                },
                "name": {
                    "description": "Required: The name of the `output` query result.",
                    "type": "string"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryFilter": {
            "description": "A filter is a predicate which includes/excludes rows of data.\nOnly the rows where the predicate evaluates to `true` will be included.\nAll others are excluded.",
            "id": "GoogleInternalPlxV2QueryFilter",
            "properties": {
                "arrayFilter": {
                    "$ref": "GoogleInternalPlxV2QueryArrayFilter",
                    "description": "Structured filter for array."
                },
                "expression": {
                    "description": "A GoogleSQL boolean expression defining the filter predicate.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryFlatQuery": {
            "description": "A simple non-aggregating query.",
            "id": "GoogleInternalPlxV2QueryFlatQuery",
            "properties": {
                "columns": {
                    "description": "Columns in the query. These are part of the SELECT clause.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryColumn"
                    },
                    "type": "array"
                },
                "filters": {
                    "description": "Row filters.\nIf multiple filters are specified, they are logically ANDed together.\nAnalogous to a SQL WHERE clause.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryFilter"
                    },
                    "type": "array"
                },
                "flatteningLevels": {
                    "description": "Flattens repeated structures, applied pre-filtering.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryFlatteningLevel"
                    },
                    "type": "array"
                },
                "limit": {
                    "$ref": "GoogleInternalPlxV2QueryLimit",
                    "description": "Truncation of the results. Analogous to a SQL LIMIT clause."
                },
                "orderings": {
                    "description": "Sort order for the result rows. Analagous to a SQL ORDER BY clause.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2QueryOrdering"
                    },
                    "type": "array"
                },
                "source": {
                    "$ref": "GoogleInternalPlxV2QueryQuerySource",
                    "description": "Required: The logical source of data for this query. Can be either a\nDataSource or sub-query. Analogous to a SQL FROM clause."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryFlatteningLevel": {
            "description": "Flattening transforms a single row with repeated values (i.e. an ARRAY) into\nmultiple rows, one per repeated value. This process repeats for every row in\nthe input.\n\nThis is roughly equivalent to\n`CROSS JOIN UNNEST(<path_expression>) as <alias>` in GoogleSQL.\n\nThe key differences are:\n *   Field path expressions which do not start with a flattening alias refer\n     unambiguously to input table fields\n *   Flattened fields are only addressable under the `alias` name\n\nExample:\n\ncol1 | col2\n-----|-----\na    | [1, 2]\nb    | [3]\n\nWith Flattening Level\n\n```\npath_expression: \"col2\"\nalias: \"_f\"\n```\n\nResults in:\n\ncol1 | col2   | _f\n-----|--------|----\na    | [1, 2] | 1\na    | [1, 2] | 2\nb    | [3]    | 3",
            "id": "GoogleInternalPlxV2QueryFlatteningLevel",
            "properties": {
                "alias": {
                    "description": "Required: All new fields introduced by flattening `path_expression` will be\navailable under this name.\n\nThis `alias` must be unique among other columns and flattening levels in\nthe query to avoid ambiguous naming issues.",
                    "type": "string"
                },
                "pathExpression": {
                    "description": "Required: A GoogleSQL expression which identifies the column or field path\nto be flattened.\n\nThe last component of the path must be an ARRAY. The data will be flattened\nto the level specified by the full path.  It is valid to reference any\ncolumn/field projected by the QuerySource so long as it meets the criteria\nabove. This includes complex path expressions like those needed to\nreference proto2 extension fields. However, it is not valid to call\nfunctions, use sub-queries, etc.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryGetExecutionResultChunkResponse": {
            "description": "Contains a chunk of the requested data.",
            "id": "GoogleInternalPlxV2QueryGetExecutionResultChunkResponse",
            "properties": {
                "tsv": {
                    "$ref": "GoogleInternalPlxV2QueryTsvData",
                    "description": "Data chunk in tsv format. Each row in `tsv` should be complete."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryGetExecutionResultRequest": {
            "description": "Same as `GetHttpExecutionResultRequest`, but for stubby call.",
            "id": "GoogleInternalPlxV2QueryGetExecutionResultRequest",
            "properties": {
                "name": {
                    "description": "Required: The name of the `output` query result.\n(e.g. from query_detailds.result.id)",
                    "type": "string"
                },
                "view": {
                    "description": "The format of the response stream.",
                    "enum": [
                        "TSV"
                    ],
                    "enumDescriptions": [
                        "RFC 4180 CSV with tab characters (\\t) as the delimiter."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryGetHttpExecutionResultRequest": {
            "description": "Identifies an `output` query of a particular execution.",
            "id": "GoogleInternalPlxV2QueryGetHttpExecutionResultRequest",
            "properties": {
                "downloadFilename": {
                    "description": "Optional: A filename to set the HTTP Content-Disposition header to. This is\ncurrently the only way to set the name of the file that will be downloaded\nfrom this RPC.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download.",
                    "type": "string"
                },
                "name": {
                    "description": "Required: The name of the `output` query result.",
                    "type": "string"
                },
                "view": {
                    "description": "Optional: The format of the response stream.",
                    "enum": [
                        "TSV"
                    ],
                    "enumDescriptions": [
                        "RFC 4180 CSV with tab characters (\\t) as the delimiter."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryLimit": {
            "description": "Defines the number of rows to be returned",
            "id": "GoogleInternalPlxV2QueryLimit",
            "properties": {
                "numRows": {
                    "description": "Maximum number of rows to return (inclusive).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryMeasure": {
            "description": "Defines a column that will be aggregated.",
            "id": "GoogleInternalPlxV2QueryMeasure",
            "properties": {
                "expression": {
                    "description": "Optional: A GoogleSql expression defining the column.\n\nIf the QuerySource is a DataSource, the input columns referenced within the\nexpression will be replaced with their definitions from the DataSource.\n\nRegardless of where the definition comes from, it must ultimately perform\naggregation (e.g. SUM, MIN, MAX, COUNT(DISTINCT), etc).",
                    "type": "string"
                },
                "filter": {
                    "$ref": "GoogleInternalPlxV2QueryFilter",
                    "description": "When aggregating, only consider rows that pass this filter.\nThis is syntactic sugar to make it easy to express conditional aggregation\nin the form: SUM(IF(<filter>, value, NULL))."
                },
                "id": {
                    "description": "Required: The unique name to use for the measure. This is the output name\nof the column and is visible in the results or as input to other queries.\n\nIf `id` is not a valid GoogleSQL identifier, any expressions which\ndepend on this column must back-tick quote + escape `id` in accordance with\nGoogleSQL rules.\n\nMust not be empty. Must be unique within a query.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryOrdering": {
            "description": "Defines how rows should be ordered.",
            "id": "GoogleInternalPlxV2QueryOrdering",
            "properties": {
                "direction": {
                    "description": "Required: The direction of the sort.",
                    "enum": [
                        "DIRECTION_UNSPECIFIED",
                        "ASCENDING",
                        "DESCENDING"
                    ],
                    "enumDescriptions": [
                        "An error. Ordering must be specified.",
                        "Sort ascending",
                        "Sort descending"
                    ],
                    "type": "string"
                },
                "expression": {
                    "description": "Required: An expression which produces the data to be sorted.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryQuery": {
            "description": "Defines the different types of queries that are currently supported.",
            "id": "GoogleInternalPlxV2QueryQuery",
            "properties": {
                "aggregatingQuery": {
                    "$ref": "GoogleInternalPlxV2QueryAggregatingQuery",
                    "description": "A query which performs aggregation."
                },
                "flatQuery": {
                    "$ref": "GoogleInternalPlxV2QueryFlatQuery",
                    "description": "A simple SQL query."
                },
                "id": {
                    "description": "Required: Must be unique within the context in which its being used\n(e.g. a request)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryQueryDetails": {
            "description": "Execution details of a query.",
            "id": "GoogleInternalPlxV2QueryQueryDetails",
            "properties": {
                "id": {
                    "description": "Required: The unique ID of the query, from the request.",
                    "type": "string"
                },
                "result": {
                    "$ref": "GoogleInternalPlxV2QueryQueryResult",
                    "description": "Optional: The result of the query.\nCan be empty if only query status is requested."
                },
                "status": {
                    "$ref": "GoogleInternalPlxV2QueryQueryStatus",
                    "description": "Required: The status of the query."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryQueryEngineStatistics": {
            "description": "Statistics related to an individual query engine query.",
            "id": "GoogleInternalPlxV2QueryQueryEngineStatistics",
            "properties": {
                "associatedQueries": {
                    "description": "plx.v2.query.Query ids associated with this query engine query.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "executionEnd": {
                    "description": "Time the query engine finished the request. Note: This does not include\nresult streaming from the engine.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "executionStart": {
                    "description": "Time the request was sent to the query engine for execution.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "queryEngine": {
                    "description": "The query engine on which the query executed.",
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1",
                        "POWERDRILL_DREMEL",
                        "PROCELLA",
                        "AUTO",
                        "WARPFLOW",
                        "BIG_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "queryEngineUrl": {
                    "description": "Url for query run on the query engine.",
                    "type": "string"
                },
                "resultStorageEnd": {
                    "description": "Time the results finished streaming from the query engine.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "resultStorageStart": {
                    "description": "Time the results started streaming from the query engine.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryQueryResult": {
            "description": "Execution result of a query.\nThe resulting data is structured as a table with rows of fields/columns.\nIn streaming mode, rows of fields are returned in top-to-bottom order.",
            "id": "GoogleInternalPlxV2QueryQueryResult",
            "properties": {
                "id": {
                    "description": "Optional: A relative resource name pointing to the query result.\n\nIn the case when the query completes successfully but no rows match the\nrequest, the `id` will be omitted since there is nothing to be retrieved.\n\nFormat: `query/executions/<execution_id>/queries/<query_id>/result`",
                    "type": "string"
                },
                "tsv": {
                    "$ref": "GoogleInternalPlxV2QueryTsvData",
                    "description": "Data in TSV format."
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryQuerySource": {
            "description": "Defines the source of data for a query.",
            "id": "GoogleInternalPlxV2QueryQuerySource",
            "properties": {
                "dataSourceName": {
                    "description": "Resource name of DataSource revision or name of inline datasource.\n\nFor example:\n\n*  Persisted DataSource at a specific revision:\n   \"dataSources/xyz/revisions/123\"\n*  Persisted DataSource at the latest revision:\n   \"dataSources/xyz/revisions/latest\"\n*  Inline DataSource: \"my_inline_data_source\"",
                    "type": "string"
                },
                "moduleVersionToken": {
                    "description": "Version token associated with GSQL modules attached to the DataSource.",
                    "type": "string"
                },
                "parameters": {
                    "additionalProperties": {
                        "$ref": "GoogleInternalPlxV2DataSourcePlxParameterValue"
                    },
                    "description": "Any parameter arguments to run the QuerySource with.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryQueryState": {
            "description": "Execution state of a query.",
            "id": "GoogleInternalPlxV2QueryQueryState",
            "properties": {},
            "type": "object"
        },
        "GoogleInternalPlxV2QueryQueryStatus": {
            "description": "Status of a query.",
            "id": "GoogleInternalPlxV2QueryQueryStatus",
            "properties": {
                "logMessages": {
                    "description": "Optional: Status messages generated during query execution.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                },
                "percentComplete": {
                    "description": "Optional: An estimate of how close the query is to completion.",
                    "format": "int64",
                    "type": "string"
                },
                "state": {
                    "description": "Required: The current state of the query.",
                    "enum": [
                        "QUERY_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "enumDescriptions": [
                        "Unknown/unspecified. An error.",
                        "Query has not yet started.",
                        "Query is running.",
                        "Query has finished (success or failure)."
                    ],
                    "type": "string"
                },
                "statusCode": {
                    "description": "Optional: A status code indicating how the query finished.\nOnly provided when the state == DONE.",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2QueryTsvData": {
            "description": "Query result data in TSV format.",
            "id": "GoogleInternalPlxV2QueryTsvData",
            "properties": {
                "data": {
                    "description": "Required: Inlined data in TSV (CSV in RFC4180 using tab as delimiter)\nformat. First row must be a header row with field names. Subsequent rows\ncontain the actual data.\n\nString encoding of different data types:\n\nINT32, INT64, UINT32, UINT64 -> integer number\nBOOL -> \"true\" or \"false\"\nFLOAT, DOUBLE -> decimal number, may use scientific notation\nSTRING -> UTF-8 string\nENUM -> string name of enumeration value (e.g. \"FOO\")\nTIMESTAMP -> integer number of microseconds since Unix epoch\nBYTES -> TBD\nDATE -> TBD\nTIME -> TBD\nDATETIME -> TBD",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleInternalPlxV2ScriptResultMetadata": {
            "description": "A message which contains information about a result.",
            "id": "GoogleInternalPlxV2ScriptResultMetadata",
            "properties": {
                "numRows": {
                    "description": "The number of output rows.",
                    "format": "int64",
                    "type": "string"
                },
                "resultName": {
                    "description": "The name of the result.",
                    "type": "string"
                },
                "sizeBytes": {
                    "description": "The size of the results in bytes.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GvizChartSpecification": {
            "id": "GvizChartSpecification",
            "properties": {
                "gvizSpecification": {
                    "description": "Optional. Settings provided to gviz chart API to configure chart.",
                    "type": "string"
                },
                "visibleColumns": {
                    "description": "Optional. These column indices are displayed in rendered chart.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HttpBody": {
            "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody) returns\n      (google.protobuf.Empty);\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged.",
            "id": "HttpBody",
            "properties": {
                "contentType": {
                    "description": "The HTTP Content-Type header value specifying the content type of the body.",
                    "type": "string"
                },
                "data": {
                    "description": "The HTTP request/response body as raw binary.",
                    "format": "byte",
                    "type": "string"
                },
                "extensions": {
                    "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "InitializeScriptRequest": {
            "id": "InitializeScriptRequest",
            "properties": {
                "entity": {
                    "$ref": "ScriptEntity",
                    "description": "The script entity to create as the first revision."
                }
            },
            "type": "object"
        },
        "KMeansParams": {
            "id": "KMeansParams",
            "properties": {
                "numClusters": {
                    "description": "Number of clusters to generate. Most kinds of clustering allow you to\nspecify the number of clusters a priori.",
                    "format": "int32",
                    "type": "integer"
                },
                "numIterations": {
                    "description": "Number of iterations.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LaunchWorkflowNode": {
            "description": "The launch workflow node allows the user to start one workflow from inside\nanother workflow.",
            "id": "LaunchWorkflowNode",
            "properties": {
                "id": {
                    "description": "Required. Id of the pipeline to start.",
                    "type": "string"
                },
                "nodesToStart": {
                    "description": "List of specific node identifiers within the pipeline to run. All other\nnodes will be skipped and marked with state SUCCESS. Dependency ordering\nwill be followed (Ex: Execution starts at the root node. If any node fails,\nits children will not run). Nodes may have at most one appearance in this\nlist. If this list is empty then the entire pipeline will run normally.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LaunchWorkflowNodeStatus": {
            "description": "Stores the status information for the LaunchWorkflowNode",
            "id": "LaunchWorkflowNodeStatus",
            "properties": {
                "executionId": {
                    "description": "Output only. Hex format. Unique execution instance identifier for the\nworkflow.",
                    "type": "string"
                },
                "id": {
                    "description": "Output only. id of the workflow.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListRevisionsResponse": {
            "id": "ListRevisionsResponse",
            "properties": {
                "nextPageToken": {
                    "description": "The token for the next page. If empty, this is the last page.",
                    "type": "string"
                },
                "revisions": {
                    "description": "The list of revisions of a script.  The revisions will be ordered from\nnewest to oldest.",
                    "items": {
                        "$ref": "ScriptRevision"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListRoleBindingsResponse": {
            "id": "ListRoleBindingsResponse",
            "properties": {
                "roleBindings": {
                    "items": {
                        "$ref": "RoleBinding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListSupportedRolesResponse": {
            "id": "ListSupportedRolesResponse",
            "properties": {
                "roles": {
                    "enumDescriptions": [
                        "",
                        "Access only to public metadata about underlying object.",
                        "Full read access to object.",
                        "Read and write access to object.",
                        "Full access, including ability to change ACL.",
                        "May add comments to associated object.",
                        "May execute the associated object."
                    ],
                    "items": {
                        "enum": [
                            "UNSPECIFIED_ROLE",
                            "PEEKER",
                            "READER",
                            "WRITER",
                            "OWNER",
                            "COMMENTER",
                            "EXECUTER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListWorkflowExecutionsResponse": {
            "description": "The response from a ListWorkflowExecutionRequest call.",
            "id": "ListWorkflowExecutionsResponse",
            "properties": {
                "executions": {
                    "description": "List of workflow execution instances sorted in ascending order according\nto start_time.\nWill always contain at least one workflow execution.",
                    "items": {
                        "$ref": "WorkflowExecution"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LogMessage": {
            "description": "An object that contains non-fatal warning or info messages produced\nwhile executing a particular request or fetching results.",
            "id": "LogMessage",
            "properties": {
                "extensions": {
                    "$ref": "LogMessageExtensions",
                    "description": "Additional application-specific information about the log message."
                },
                "message": {
                    "description": "Text of the message.",
                    "type": "string"
                },
                "severity": {
                    "description": "Severity level of the message.",
                    "enum": [
                        "UNKNOWN_LOG_SEVERITY",
                        "INFO",
                        "WARNING",
                        "SEVERE"
                    ],
                    "enumDescriptions": [
                        "",
                        "Information level log data.",
                        "Warning level log data.",
                        "Severe level log data."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LogMessageExtensions": {
            "id": "LogMessageExtensions",
            "properties": {
                "location": {
                    "$ref": "DocumentLocation",
                    "description": "Location information about the log message."
                },
                "quickFix": {
                    "$ref": "QuickFixInformation",
                    "description": "\"Quick Fix\" information about the log message."
                }
            },
            "type": "object"
        },
        "ManualTriggerNode": {
            "description": "Waits for the workflow to be triggered manually, from the UI, CLI, or other\nmethods.",
            "id": "ManualTriggerNode",
            "properties": {},
            "type": "object"
        },
        "MessageSet": {
            "description": "This is proto2's version of MessageSet.",
            "id": "MessageSet",
            "properties": {},
            "type": "object"
        },
        "MixedNaiveBayes": {
            "description": "Parameters for MixedNaiveBayes classifier. All the parameters are optional.",
            "id": "MixedNaiveBayes",
            "properties": {
                "defaultBucketing": {
                    "$ref": "FeatureBucketingStrategy",
                    "description": "Default bucketing strategy to use for numeric features (if any)."
                },
                "normalization": {
                    "enum": [
                        "UNKNOWN_SCORE_NORMALIZATION",
                        "NONE",
                        "PERCENT_OF_TOTAL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "Scores will be normalized such that the total score is 1."
                    ],
                    "type": "string"
                },
                "smoothingFactor": {
                    "description": "Smoothing factor that indicates level of interpolation when training data\ndoes not contain certain feature combinations. A value close to 0 will do\nminimal interpolation, not assigning labels to any unseen combinations at\nprediction time, whereas values close to 1 will interpolate for missing\ndata.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ModelBuildingNode": {
            "description": "Runs a #plx augmentation in order to train and/or validate a model. One or\nboth of the fields below must be present.",
            "id": "ModelBuildingNode",
            "properties": {
                "modelId": {
                    "description": "The identifier of an existing model.",
                    "type": "string"
                },
                "trainingDetails": {
                    "$ref": "ModelBuildingNodeTrainingInput",
                    "description": "The details for training a new model or re-training an existing model."
                },
                "validatingDetails": {
                    "$ref": "ModelBuildingNodeValidatingInput",
                    "description": "Presence indicates the desire to validate a model."
                }
            },
            "type": "object"
        },
        "ModelBuildingNodeDataSource": {
            "id": "ModelBuildingNodeDataSource",
            "properties": {
                "classField": {
                    "description": "The name of a column that contains a class label per row in\nstring format.",
                    "type": "string"
                },
                "dependentVariableField": {
                    "description": "The name of a column that contains output values that will be\nused to fit the Regression model.",
                    "type": "string"
                },
                "features": {
                    "description": "Required. A set of expressions such that when each is evaluated will result\nin a feature with optional weights. The entire set defines the set of\nfeatures that make up the feature vector.\nNote that for regressions, this is a list of independent variables.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "scriptName": {
                    "description": "Required. Name of the script.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ModelBuildingNodeStatus": {
            "id": "ModelBuildingNodeStatus",
            "properties": {
                "accuracyMetric": {
                    "description": "Output only. Only present when validation is requested. It doesn't matter\nif we're validating a newly built model or one that already exists.",
                    "format": "double",
                    "type": "number"
                },
                "jobStatus": {
                    "$ref": "PlxJobStatus",
                    "description": "Output only. Generic status applicable to all job types."
                },
                "request": {
                    "$ref": "CreateAugmentationRequest",
                    "description": "Output only. Specification of the Augmentation request issued."
                },
                "trainingStatus": {
                    "$ref": "ModelBuildingNodeTrainingStatus",
                    "description": "Optional. Output only. Only present if the training activity was\nperformed."
                }
            },
            "type": "object"
        },
        "ModelBuildingNodeTrainingInput": {
            "description": "Training parameters for a model building node.",
            "id": "ModelBuildingNodeTrainingInput",
            "properties": {
                "modelConfiguration": {
                    "$ref": "ModelConfiguration"
                },
                "modelStoreOptions": {
                    "$ref": "ModelStoreOptions",
                    "description": "If not present, the model will be stored in a canonical format\nand registered. It will be retrieved by referencing the model_id."
                },
                "regressionModel": {
                    "$ref": "RegressionModelConfiguration"
                },
                "trainingData": {
                    "$ref": "ModelBuildingNodeDataSource",
                    "description": "Required. Datasource for training data."
                }
            },
            "type": "object"
        },
        "ModelBuildingNodeTrainingStatus": {
            "id": "ModelBuildingNodeTrainingStatus",
            "properties": {
                "featureAnalysis": {
                    "$ref": "FeatureAnalysisMetrics",
                    "description": "Output only. Feature analysis metrics, reported on data when\ntraining a model. Only present if the model built successfully."
                },
                "modelId": {
                    "description": "Output only. Id of the model created.  Only present if the model built\nsuccessfully.",
                    "type": "string"
                },
                "trainerMetrics": {
                    "$ref": "TrainerMetrics",
                    "description": "Output only. Holds metrics available after training a classification model.\nOnly present if the model built successfully."
                }
            },
            "type": "object"
        },
        "ModelBuildingNodeValidatingInput": {
            "description": "Validation parameters for a model building node.",
            "id": "ModelBuildingNodeValidatingInput",
            "properties": {
                "errorThreshold": {
                    "description": "Pass/Fail criteria. If present, will be used to determine if the\nvalidation was successful. If absent, validation will succeed if it runs\nto completion regardless of accuracy.",
                    "format": "double",
                    "type": "number"
                },
                "testData": {
                    "$ref": "ModelBuildingNodeDataSource",
                    "description": "Required. Datasource for test data."
                }
            },
            "type": "object"
        },
        "ModelConfiguration": {
            "description": "Most fields borrowed from ClassifierTrainerSpec",
            "id": "ModelConfiguration",
            "properties": {
                "analyzeFeatures": {
                    "description": "Optional. Flag to return feature analysis metrics.",
                    "type": "boolean"
                },
                "gmmParameters": {
                    "$ref": "GaussianMixtureModelParameters"
                },
                "mixedNaiveBayes": {
                    "$ref": "MixedNaiveBayes"
                },
                "modelDisplayName": {
                    "description": "Human readable name for model. Note. Model id will be used as\ndisplay name if no explicit display name is provided. Note that this is not\na unique identifier. Multiple models can share the same model_display_name.",
                    "type": "string"
                },
                "modelId": {
                    "description": "If present, the existing model will be replaced by the new\nmodel, assuming one is created successfully.",
                    "type": "string"
                },
                "svmParameters": {
                    "$ref": "SVMParameters"
                }
            },
            "type": "object"
        },
        "ModelStoreOptions": {
            "description": "Model store parameters.",
            "id": "ModelStoreOptions",
            "properties": {
                "mdbGroup": {
                    "description": "If not present, mdb identity of the caller will be used.",
                    "type": "string"
                },
                "path": {
                    "description": "Required. Models are still registered by their id. Only difference is that\nmodels are persisted in an external location.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ModelValidationParameters": {
            "description": "Parameters necessary to validate a model.",
            "id": "ModelValidationParameters",
            "properties": {
                "classField": {
                    "description": "The name of a column that contains a class label per row in string\nformat within the test data. Used to validate classification models.",
                    "type": "string"
                },
                "regressionOutputField": {
                    "description": "The name of a column that contains output values within the test data.",
                    "type": "string"
                },
                "testData": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the test data.\nCurrently all test data sets must have an embedded column that identifies\nthe class (classification tests) or output values (regression tests)."
                }
            },
            "type": "object"
        },
        "ModelValidationSpec": {
            "description": "Parameters to request a standalone model validation request.",
            "id": "ModelValidationSpec",
            "properties": {
                "features": {
                    "description": "Required. A set of expressions such that when each is evaluated will result\nin a feature. The entire set defines the set of features that make up the\nfeature vector.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "modelId": {
                    "description": "Required. Validation is happening as a distinct request from Training.",
                    "type": "string"
                },
                "parameters": {
                    "$ref": "ModelValidationParameters",
                    "description": "Required. Defines the validation parameters, including the test data."
                }
            },
            "type": "object"
        },
        "NodeAttempt": {
            "description": "Holds information about a particular execution attempt for a node.",
            "id": "NodeAttempt",
            "properties": {
                "attemptNumber": {
                    "description": "Output only. The execution attempt for this node.  The initial run and\nrestarts will be 1.  If a workflow is retried(MANUAL_RETRY) then this will\nbe incremented on each retry so we can properly group status fields.",
                    "format": "int32",
                    "type": "integer"
                },
                "bigqueryTransferNodeStatus": {
                    "$ref": "BigQueryTransferNodeStatus",
                    "description": "Additional status for a BigQueryTransferNodeStatus."
                },
                "dasnavImportStatus": {
                    "$ref": "DasnavImportStatus",
                    "description": "Additional status for a DasnavImportNode."
                },
                "errorMessages": {
                    "description": "Output only. Any error messages generated while running.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lastUpdateTime": {
                    "description": "Output only. Timestamp of the most recent node status update. Present if\nother than NOT_RUN.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "launchWorkflowNodeStatus": {
                    "$ref": "LaunchWorkflowNodeStatus",
                    "description": "Additional status for a LaunchWorkflowNode."
                },
                "modelBuildingNodeStatus": {
                    "$ref": "ModelBuildingNodeStatus",
                    "description": "Additional status for a ModelBuildingNode."
                },
                "runAugmentationStatus": {
                    "$ref": "RunAugmentationStatus",
                    "description": "Additional status for a RunAugmentationNode."
                },
                "runBuildTargetStatus": {
                    "$ref": "RunBuildTargetStatus",
                    "description": "Additional status for a RunBuildTargetNode."
                },
                "runRScriptStatus": {
                    "$ref": "RunRScriptStatus",
                    "description": "Additional status for a RunRScriptNode."
                },
                "runScriptStatus": {
                    "$ref": "RunScriptStatus",
                    "description": "Additional status for a RunScriptNode."
                },
                "runShellCommandStatus": {
                    "$ref": "RunShellCommandStatus",
                    "description": "Additional status for a RunShellCommandNode."
                },
                "runXenonFeedStatus": {
                    "$ref": "RunXenonFeedStatus",
                    "description": "Additional status for a RunXenonFeedNode."
                },
                "startTime": {
                    "description": "Output only. Time that the node started executing. Present if other than\nNOT_RUN.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "state": {
                    "description": "Output only. The node's current execution state.",
                    "enum": [
                        "NODE_ATTEMPT_STATE_UNSPECIFIED",
                        "NOT_RUN",
                        "SUCCESS",
                        "RUNNING",
                        "FAILURE",
                        "SKIPPED",
                        "CONDITION_NOT_MET",
                        "WAITING_FOR_RETRY"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Node has not been run, it might or might not be in the future.",
                        "Node has completed successfully. A terminal state.",
                        "The node is currently running. A transient state.",
                        "An error was encountered while the node was running. A terminal state.",
                        "Node was traversed and skipped.  This is considered a SUCCESS when\nevaluating node transitions.",
                        "Node was traversed and skipped because the condition specified for\nexecution was not met.",
                        "Node has failed a previous execution and is waiting to be retried."
                    ],
                    "type": "string"
                },
                "status": {
                    "description": "Output only. Provides additional information about the node's final state.\nMay be used to determine whether the node can be restarted. Present when\nthe node is in a terminal state (SUCCESS, FAILURE).",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                },
                "timerNodeStatus": {
                    "$ref": "TimerNodeStatus",
                    "description": "Additional status for a TimerNode."
                },
                "waitForTablesStatus": {
                    "$ref": "WaitForTablesStatus",
                    "description": "Additional status for a WaitForTablesNode."
                },
                "waitForWorkflowsStatus": {
                    "$ref": "WaitForWorkflowsStatus",
                    "description": "Additional status for a WaitForWorkflowsNode."
                },
                "waitForXenonFeedStatus": {
                    "$ref": "WaitForXenonFeedStatus",
                    "description": "Additional status for a WaitForXenonFeedNode."
                },
                "warningMessages": {
                    "description": "Output only. Any warning messages generated while running.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NodeStatus": {
            "description": "Holds information about execution of a workflow node.",
            "id": "NodeStatus",
            "properties": {
                "attempts": {
                    "description": "Output only. Keeps track of node execution attempts. Entries are added with\neach successive attempt, with the first at index 0 and the last attempt at\nindex attempt_size() - 1.",
                    "items": {
                        "$ref": "NodeAttempt"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Output only. Node identifier. Unique within the workflow. Must refer to an\nexisting WorkflowNode in the graph.",
                    "type": "string"
                },
                "shardCount": {
                    "description": "Output only. Records the total number of node shards.",
                    "format": "int32",
                    "type": "integer"
                },
                "shardIdx": {
                    "description": "Output only. Records this node's position in the list of node shards.",
                    "format": "int32",
                    "type": "integer"
                },
                "variables": {
                    "description": "Output only. Variable bindings that the node is actually using.",
                    "items": {
                        "$ref": "ScalarBinding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
            "id": "Operation",
            "properties": {
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "error": {
                    "$ref": "Status",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "metadata": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "type": "object"
                },
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
                    "type": "string"
                },
                "response": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "OrderingSpec": {
            "description": "A data ordering specification.",
            "id": "OrderingSpec",
            "properties": {
                "columnName": {
                    "description": "Required: The name of the column to sort by. Only output columns are\ncurrently supported.",
                    "type": "string"
                },
                "order": {
                    "description": "Required: The filtering operation to perform.",
                    "enum": [
                        "UNKNOWN_ORDER",
                        "ASC",
                        "DESC"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ParameterOverride": {
            "description": "Parameters to override values for.",
            "id": "ParameterOverride",
            "properties": {
                "variableSets": {
                    "description": "Collection of variable sets that should be overridden.  Note the id\nmust match the variable_set this is overriding in order stop those from\nbeing evaluated.  For workflow parameters that is normally 'sql_0',\n'sql_1' or 'sql_2'.",
                    "items": {
                        "$ref": "VariableSetBinding"
                    },
                    "type": "array"
                },
                "variables": {
                    "description": "Collection of variables that should be overridden.",
                    "items": {
                        "$ref": "ScalarBinding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PlxJobStatus": {
            "description": "Stores job status information for requests to plxApi.",
            "id": "PlxJobStatus",
            "properties": {
                "jobId": {
                    "description": "Output only. The job's id.",
                    "type": "string"
                },
                "jobLocator": {
                    "description": "Output only. Locator where job status and results are retrieved from.",
                    "type": "string"
                },
                "state": {
                    "description": "Output only. The job's state.",
                    "enum": [
                        "UNKNOWN_EXECUTION_STATE",
                        "PENDING",
                        "RUNNING",
                        "DONE"
                    ],
                    "enumDescriptions": [
                        "",
                        "An entity that has been submitted but not processed yet.",
                        "An entity that is currently being executed.",
                        "An entity that has been successfully or unsuccessfully completed."
                    ],
                    "type": "string"
                },
                "statistics": {
                    "$ref": "ExecutionStatistics",
                    "description": "Output only. The job's execution statistics."
                }
            },
            "type": "object"
        },
        "PowerDrillAnnotation": {
            "description": "Powerdrill query options that are represented by name/value pairs, opaquely\npassed through to the PD serving backend. Enumerated annotations found here:\njava/com/google/analysis/powerdrill/exec/ast/Annotation.java",
            "id": "PowerDrillAnnotation",
            "properties": {
                "name": {
                    "description": "The name of the annotation.",
                    "type": "string"
                },
                "value": {
                    "description": "The value of the annotation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PowerDrillDataSource": {
            "description": "Specification of a data source that can be queried via Powerdrill.",
            "id": "PowerDrillDataSource",
            "properties": {
                "options": {
                    "$ref": "PowerDrillQueryOptions",
                    "description": "Parameters to embed in the PowerDrill query."
                },
                "pdqlDatasource": {
                    "description": "Specification of PD serving data source passed through opaquely.\nFor example: bunyan(...) or pd(...).\nMore information here: sites/powerdrill/data-sources",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PowerDrillQueryOptions": {
            "description": "Powerdrill query options.",
            "id": "PowerDrillQueryOptions",
            "properties": {
                "allowApproximations": {
                    "description": "PowerDrill query parameter for allowing approximations.",
                    "type": "boolean"
                },
                "annotation": {
                    "description": "Name/value pairs of annotations.",
                    "items": {
                        "$ref": "PowerDrillAnnotation"
                    },
                    "type": "array"
                },
                "minCompletionRatio": {
                    "description": "PowerDrill parameter controlling minimum completion ratio for the query on\na scale from 0.0 to 1.0.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PredictionSpec": {
            "id": "PredictionSpec",
            "properties": {
                "data": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the data."
                },
                "independentVariable": {
                    "description": "Required. A set of expressions such that when each is evaluated will result\nin a independent variables with optional weights.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "modelId": {
                    "description": "Required. The id of the model to use.",
                    "type": "string"
                },
                "modelOutputField": {
                    "description": "Name of the column in the results that will contain the output values.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProjectionDataSource": {
            "description": "The request object that specifies the base data that will be subsetted by\nthis projection.",
            "id": "ProjectionDataSource",
            "properties": {
                "cacheControl": {
                    "$ref": "QueryCacheControl",
                    "description": "Query result cache control."
                },
                "parameter": {
                    "description": "Query parameters.",
                    "items": {
                        "$ref": "QueryParameter"
                    },
                    "type": "array"
                },
                "query": {
                    "$ref": "QuerySpec",
                    "description": "The raw query specification that returns the base data for this\nprojection."
                },
                "script": {
                    "$ref": "ScriptSpec",
                    "description": "The saved script specification that returns the base data for this\nprojection."
                },
                "template": {
                    "$ref": "TemplateSpec",
                    "description": "The templated data source specification."
                }
            },
            "type": "object"
        },
        "ProjectionSpec": {
            "description": "A data projection specification.",
            "id": "ProjectionSpec",
            "properties": {
                "bernoulli": {
                    "$ref": "BernoulliSampleSpec",
                    "description": "All rows have equal probability of being included in the sample. Whether\neach row is included or not is independent of one another."
                },
                "field": {
                    "description": "String expressions that represent dimensions or measures. For example:\nfields : {output: \"output_col1\" expression:\"col1\"},\n{output:\"output_col2\" expression: \"col2\"},\n{output: \"output_col3\" expression: \"SUM(col3 + col4)\" }\nwill result in two dimensions and one aggregation.",
                    "items": {
                        "$ref": "ExpressionField"
                    },
                    "type": "array"
                },
                "filter": {
                    "description": "Optional: Any filters which are to be applied to the input.",
                    "items": {
                        "$ref": "FilterSpec"
                    },
                    "type": "array"
                },
                "isGrouped": {
                    "description": "Optional: Flag to indicate whether dimensions should be grouped in the\nabsence of any aggregations.",
                    "type": "boolean"
                },
                "limitToNumRows": {
                    "description": "Optional: Number of rows to limit the output to.",
                    "format": "int32",
                    "type": "integer"
                },
                "ordering": {
                    "description": "Optional: The ordering to be applied, if any.",
                    "items": {
                        "$ref": "OrderingSpec"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QueryCacheControl": {
            "description": "Controls the use of cached query results.",
            "id": "QueryCacheControl",
            "properties": {
                "minCacheTimestampMs": {
                    "description": "If 0 or not set result cache may be used at the service's discretion.\nIf -1 result cache may not be used.\nOtherwise cached query results may be used if newer than the given time\nin milliseconds since epoch (1970-01-01).",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryDefault": {
            "id": "QueryDefault",
            "properties": {
                "engine": {
                    "description": "Required: The query engine that these defaults apply to.",
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1",
                        "POWERDRILL_DREMEL",
                        "PROCELLA",
                        "AUTO",
                        "WARPFLOW",
                        "BIG_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "sql": {
                    "description": "Optional: Plx Scripts commands to effectively prepend to a Script before\nvalidating or executing on the specified query engine.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryParameter": {
            "description": "A query parameter.",
            "id": "QueryParameter",
            "properties": {
                "name": {
                    "description": "The name of this query parameter.",
                    "type": "string"
                },
                "value": {
                    "description": "The value of this query parameter.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuerySpec": {
            "description": "A raw query specification.",
            "id": "QuerySpec",
            "properties": {
                "defaultSqlDialect": {
                    "description": "The default sql dialect that will be used to start the query.",
                    "type": "string"
                },
                "engine": {
                    "description": "The query engine that will be used to execute this query.",
                    "type": "string"
                },
                "text": {
                    "description": "The text of this query.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuickFixInformation": {
            "description": "Describes requisite information to suggest a \"Quick Fix\" for an error.",
            "id": "QuickFixInformation",
            "properties": {
                "found": {
                    "description": "The actual token that was found at the error location.",
                    "type": "string"
                },
                "suggestions": {
                    "description": "Possible tokens that would have been expected to be in place of the found\ntoken.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RandomForestRegression": {
            "description": "Parameters for Random Forest based regression. Features may be either numeric\nor categorical. Corresponds to the abe::Rifle training. See\nlearning/lib/abe/models/rifle_serial_classifier_trainer.h.",
            "id": "RandomForestRegression",
            "properties": {
                "featuresPerSplit": {
                    "description": "Number of randomly selected features to consider per split. If not\nset, (number of features)/3 will be used.",
                    "format": "int32",
                    "type": "integer"
                },
                "minimumLeafNodeSize": {
                    "description": "Minimum number of leaf nodes.",
                    "format": "int32",
                    "type": "integer"
                },
                "numberOfTrees": {
                    "description": "Number of trees to instantiate.",
                    "format": "int32",
                    "type": "integer"
                },
                "seed": {
                    "description": "If set, model generated will be reproducible by using this seed for all\nrandomness in Random forest.",
                    "format": "uint32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RegressionMetrics": {
            "description": "Metrics returned from Regression model estimation.",
            "id": "RegressionMetrics",
            "properties": {
                "meanSquaredError": {
                    "description": "Regression model error.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "RegressionModelConfiguration": {
            "id": "RegressionModelConfiguration",
            "properties": {
                "modelDisplayName": {
                    "description": "Optional. Human readable name for model. Note. Model id will be used as\ndisplay name if no explicit display name is provided. Note that this is not\na unique identifier. Multiple models can share the same model_display_name.",
                    "type": "string"
                },
                "modelId": {
                    "description": "Optional. If present, the existing model will be replaced by the new\nmodel, assuming one is created successfully.",
                    "type": "string"
                },
                "randomForest": {
                    "$ref": "RandomForestRegression",
                    "description": "Do not reuse 4."
                },
                "svmParameters": {
                    "$ref": "SVMParameters"
                }
            },
            "type": "object"
        },
        "RegressionModelEstimationSpec": {
            "id": "RegressionModelEstimationSpec",
            "properties": {
                "dependentVariableField": {
                    "description": "Required. The name of a column that contains output values that will be\nused to fit the Regression model.",
                    "type": "string"
                },
                "independentVariable": {
                    "description": "Required. A set of expressions such that when each is evaluated will result\nin a independent variables with optional weights.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "modelDisplayName": {
                    "description": "Optional. Human readable name for model.",
                    "type": "string"
                },
                "randomForest": {
                    "$ref": "RandomForestRegression"
                },
                "svmParameters": {
                    "$ref": "SVMParameters"
                },
                "trainingData": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the training data."
                },
                "validationParameters": {
                    "$ref": "ModelValidationParameters",
                    "description": "Validation parameters for the model."
                }
            },
            "type": "object"
        },
        "RegressionSpec": {
            "description": "Parameters for ephemeral regression data. No models are persisted",
            "id": "RegressionSpec",
            "properties": {
                "data": {
                    "$ref": "AugmentationDataSpec",
                    "description": "Required. Defines the input data."
                },
                "dependentVariableField": {
                    "description": "Required. The name of a column that contains output values that will be\nused to fit the Regression model.",
                    "type": "string"
                },
                "independentVariable": {
                    "description": "Required. A set of expressions such that when each is evaluated will result\nin a independent variables with optional weights.",
                    "items": {
                        "$ref": "Feature"
                    },
                    "type": "array"
                },
                "outputField": {
                    "description": "Name of the column in the results that will contain the output values.",
                    "type": "string"
                },
                "svmParameters": {
                    "$ref": "SVMParameters",
                    "description": "Only SVM based regression is supported. If not initialized, default\nparameters will be used."
                }
            },
            "type": "object"
        },
        "RetryWorkflowExecutionRequest": {
            "description": "A request to retry a workflow execution.",
            "id": "RetryWorkflowExecutionRequest",
            "properties": {
                "nodesToStart": {
                    "description": "List of specific node identifiers within the pipeline\nto run.  If the node is sharded you can specify specific shards\nwith the dot operator (node.shard).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "RoleBinding": {
            "id": "RoleBinding",
            "properties": {
                "name": {
                    "description": "Resource name.",
                    "type": "string"
                },
                "principal": {
                    "description": "The principal user or group.",
                    "type": "string"
                },
                "roles": {
                    "description": "Roles for the principal on a resource.\nMust not be empty. Required.",
                    "enumDescriptions": [
                        "",
                        "Access only to public metadata about underlying object.",
                        "Full read access to object.",
                        "Read and write access to object.",
                        "Full access, including ability to change ACL.",
                        "May add comments to associated object.",
                        "May execute the associated object."
                    ],
                    "items": {
                        "enum": [
                            "UNSPECIFIED_ROLE",
                            "PEEKER",
                            "READER",
                            "WRITER",
                            "OWNER",
                            "COMMENTER",
                            "EXECUTER"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RunAugmentationNode": {
            "description": "Runs a #plx augmentation using a script as the input data source and writes\nout the data according to the output format and destination specified.",
            "id": "RunAugmentationNode",
            "properties": {
                "autofocus": {
                    "$ref": "AutofocusSimpleSpec",
                    "description": "Specification for time-series analysis using autofocus."
                },
                "input": {
                    "$ref": "AugmentationNodeInput",
                    "description": "Required. Specification for input data source."
                },
                "output": {
                    "$ref": "AugmentationNodeOutput",
                    "description": "Required. Specification for where the data will be output."
                }
            },
            "type": "object"
        },
        "RunAugmentationStatus": {
            "description": "Stores status information for RunAugmentationNode.",
            "id": "RunAugmentationStatus",
            "properties": {
                "jobStatus": {
                    "$ref": "PlxJobStatus",
                    "description": "Output only. Job status fields that are relevant to all jobs executed via\nplxApi."
                },
                "metrics": {
                    "$ref": "AugmentationMetrics",
                    "description": "Output only. The augmentation's metrics as reported by plx Api."
                },
                "outputFiles": {
                    "description": "Output only. List of files created as part of the augmentation.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "outputTables": {
                    "description": "Output only. List of tables created or updated as part of the augmentation.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "request": {
                    "$ref": "CreateAugmentationRequest",
                    "description": "Output only. Specification of the Augmentation request issued."
                }
            },
            "type": "object"
        },
        "RunBuildTargetNode": {
            "description": "Builds and runs the binary built from the specified BUILD target.",
            "id": "RunBuildTargetNode",
            "properties": {
                "args": {
                    "description": "Arguments to pass to the BUILD target binary.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "buildRabbitToolTag": {
                    "description": "BuildRabbit build priority value.  See go/buildqueue-transition-guide for\nmore information.  If not specified \"plx_workflows\" will be used.",
                    "type": "string"
                },
                "location": {
                    "$ref": "SourceLocationScope",
                    "description": "Required. Where to find the BUILD target."
                },
                "target": {
                    "description": "Required. Fully-qualified path of the BUILD target.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunBuildTargetStatus": {
            "description": "Stores status information for RunBuildTargetNode.",
            "id": "RunBuildTargetStatus",
            "properties": {
                "exitCode": {
                    "description": "Output only. The build target's exit code.",
                    "format": "int32",
                    "type": "integer"
                },
                "stderr": {
                    "description": "Output only. Contents of the standard error output stream from the build\ntarget. Limited to 2KB total size. May contain unsafe characters and should\nbe escaped before displaying on a web page.",
                    "type": "string"
                },
                "stdout": {
                    "description": "Output only. Contents of the standard output stream from the build target.\nLimited to 2KB total size. May contain unsafe characters and should be\nescaped before displaying on a web page.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunRScriptNode": {
            "description": "Loads and runs the .R script from the specified location.",
            "id": "RunRScriptNode",
            "properties": {
                "args": {
                    "description": "Arguments to pass to the R script.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "location": {
                    "$ref": "SourceLocationScope",
                    "description": "Required. Where to find the .R script."
                },
                "path": {
                    "description": "Required. Fully-qualified path to the .R script.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunRScriptStatus": {
            "description": "Stores status information for RunRScriptNode.",
            "id": "RunRScriptStatus",
            "properties": {
                "exitCode": {
                    "description": "Output only. The R script's exit code.",
                    "format": "int32",
                    "type": "integer"
                },
                "stderr": {
                    "description": "Output only. Contents of the standard error output stream from the R\nscript. Limited to 2KB total size. May contain unsafe characters and should\nbe escaped before displaying on a web page.",
                    "type": "string"
                },
                "stdout": {
                    "description": "Output only. Contents of the standard output stream from the R script.\nLimited to 2KB total size. May contain unsafe characters and should be\nescaped before displaying on a web page.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunScriptJobStatus": {
            "description": "Status of a script execution as reported by JobService and persisted\nas part of the RunScriptStatus. This proto definition is based on\ndatawarehouse.plx.ExecutionStatus.",
            "id": "RunScriptJobStatus",
            "properties": {
                "childNodes": {
                    "description": "Output only. Status of any child nodes.",
                    "items": {
                        "$ref": "RunScriptJobStatus"
                    },
                    "type": "array"
                },
                "dremelDetails": {
                    "$ref": "RunScriptJobStatusDremelStatementDetails",
                    "description": "Output only. Details about the Dremel statement."
                },
                "endTime": {
                    "description": "Output only. The time execution ended. Present when state = DONE.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "logMessages": {
                    "description": "Output only. Messages from the query engines.",
                    "items": {
                        "$ref": "LogMessage"
                    },
                    "type": "array"
                },
                "percentComplete": {
                    "description": "Output only. The progress of the execution [0-100].",
                    "format": "int32",
                    "type": "integer"
                },
                "remainingTime": {
                    "description": "Output only. Estimated remaining time to completion.\nA negative number means that the remaining time is unknown.",
                    "format": "google-duration",
                    "type": "string"
                },
                "startTime": {
                    "description": "Output only. The time execution started. Present when state >= EXECUTING.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "state": {
                    "description": "Output only. The current state of the execution.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "PENDING",
                        "EXECUTING",
                        "PROCESSING_RESULT",
                        "DONE"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Execution is queued and awaiting an executor.",
                        "Execution has been picked up and has been started.",
                        "Execution has completed, and the result is being processed.",
                        "Execution has finished.  See status_code to determine\nsuccess/failure."
                    ],
                    "type": "string"
                },
                "statement": {
                    "$ref": "Statement",
                    "description": "Output only. Positional information about the statement being executed.\nThe statement contents is filled with a snippet instead of\nthe entire statement to save space.\nPresent if this is a leaf/statement node."
                },
                "statusCode": {
                    "description": "Output only. The terminal status of the execution.\nThis is a coarse-grained indication of how the execution finished.",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunScriptJobStatusDremelStatementDetails": {
            "id": "RunScriptJobStatusDremelStatementDetails",
            "properties": {
                "clientQueryHexId": {
                    "description": "Output only. The Dremel query id as a hex string.",
                    "type": "string"
                },
                "clientQueryId": {
                    "description": "Output only. The Dremel query id.  Used for joining with the\ndremel.DremelQueries.* logs.",
                    "format": "uint64",
                    "type": "string"
                },
                "dremelLiveUrl": {
                    "description": "For the running queries: URL to live query status.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunScriptNode": {
            "description": "Runs a #plx script. Script parameters will be automatically matched and\nfilled in from workflow variables (by name). Any parameter that does not have\na corresponding workflow variable will cause the node to fail.",
            "id": "RunScriptNode",
            "properties": {
                "scriptName": {
                    "description": "Required. Name of the script to retrieve and run.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunScriptStatus": {
            "description": "Stores status information for RunScriptNode.",
            "id": "RunScriptStatus",
            "properties": {
                "outputTables": {
                    "description": "Output only. List of tables created or updated as part of the script.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "percentComplete": {
                    "description": "Output only. Query completion percentage.",
                    "format": "int32",
                    "type": "integer"
                },
                "script": {
                    "$ref": "Script",
                    "description": "Output only. Contains the script that was retrieved when the node began\nexecuting. This same script will be reused on subsequent execution\nattempts. Only the first NodeAttempt entry for a RunScriptNode is\nguaranteed to contain the script."
                },
                "scriptDisplayName": {
                    "description": "Output only. The script's display name.\nMay contain malicious data and should be escaped before displaying.",
                    "type": "string"
                },
                "scriptStatus": {
                    "$ref": "RunScriptJobStatus",
                    "description": "Output only. Status of the script."
                },
                "scriptVersion": {
                    "$ref": "VersionIdentifier",
                    "description": "Contains the script version that was retrieved from when the node began\nexecuting. This same script will be reused on subsequent execution\nattempts."
                }
            },
            "type": "object"
        },
        "RunShellCommandMpmInfo": {
            "description": "Stores information about an MPM package that should be loaded for the\nworkflow. It will be referenced by the containing RunShellCommand node.\nDuplicates will be identified by the \"{ mpm_pkg_name, mpm_version }\" tuple\nand will not be loaded twice.",
            "id": "RunShellCommandMpmInfo",
            "properties": {
                "fileGroups": {
                    "description": "Filegroups to load from the MPM package.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pkgName": {
                    "description": "Required. Name of the MPM package that contains the shell command binary.",
                    "type": "string"
                },
                "shellCommandPath": {
                    "description": "Path to the shell command within the package. Required for the\nRunShellCommandMpmInfo entry that contains the shell command to run.\nNote: Most MPMs store their executable files at the root.\nEx: For the 'fileutil' MPM this would be 'fileutil'.",
                    "type": "string"
                },
                "version": {
                    "description": "Required. Version of the MPM package to load.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunShellCommandNode": {
            "description": "Runs a shell command with the specified arguments. Shell command must be\na binary located inside the specified MPM.\nNote: Workflows that contain a RunShellCommandNode *must* be launched with a\nsecure configuration. We will not run arbitrary shell commands under the\n# plx workflow MDB account.",
            "id": "RunShellCommandNode",
            "properties": {
                "mpms": {
                    "description": "List of MPMs to load for this node.",
                    "items": {
                        "$ref": "RunShellCommandMpmInfo"
                    },
                    "type": "array"
                },
                "shellArgs": {
                    "description": "Arguments to pass to the shell command.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RunShellCommandStatus": {
            "description": "Stores status information for RunShellCommandNode.",
            "id": "RunShellCommandStatus",
            "properties": {
                "exitCode": {
                    "description": "Output only. The command's exit code.",
                    "format": "int32",
                    "type": "integer"
                },
                "stderr": {
                    "description": "Output only. Contents of the standard error output stream from the shell\ncommand. Limited to 2KB total size. May contain unsafe characters and\nshould be escaped before displaying on a web page.",
                    "type": "string"
                },
                "stdout": {
                    "description": "Output only. Contents of the standard output stream from the shell command.\nLimited to 2KB total size. May contain unsafe characters and should be\nescaped before displaying on a web page.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunXenonFeedNode": {
            "description": "Runs a Xenon feed and waits for it to complete.",
            "id": "RunXenonFeedNode",
            "properties": {
                "feed": {
                    "$ref": "XenonFeed",
                    "description": "Xenon feed to run. Required"
                }
            },
            "type": "object"
        },
        "RunXenonFeedStatus": {
            "description": "Stores status information for RunXenonFeedNode",
            "id": "RunXenonFeedStatus",
            "properties": {},
            "type": "object"
        },
        "SVMParameters": {
            "id": "SVMParameters",
            "properties": {
                "bias": {
                    "description": "Bias in kernel functions.",
                    "format": "double",
                    "type": "number"
                },
                "complexityFactor": {
                    "description": "Term that penalizes more complex models. Reasonable defaults for\nRBF : c = 1\nPOLYNOMIAL : c = .1\nLINEAR: c = .05",
                    "format": "double",
                    "type": "number"
                },
                "degree": {
                    "description": "Degree in kernel function (default 3 when model is polynomial).",
                    "format": "int32",
                    "type": "integer"
                },
                "epsilon": {
                    "description": "If the error delta between iterations falls below this level iterations\nwill terminate.",
                    "format": "double",
                    "type": "number"
                },
                "gamma": {
                    "description": "Gamma in kernel functions above (default 1/num_features if not present).",
                    "format": "double",
                    "type": "number"
                },
                "kernelType": {
                    "enum": [
                        "UNKNOWN_TYPE",
                        "LINEAR",
                        "POLYNOMIAL",
                        "RADIAL_BASIS_FUNCTION",
                        "SIGMOID"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ScalarBinding": {
            "description": "Represents a variable binding where the variable can take on a single value.",
            "id": "ScalarBinding",
            "properties": {
                "name": {
                    "description": "Output only. The variable's name.",
                    "type": "string"
                },
                "value": {
                    "description": "Output only. The variable's value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Scope": {
            "description": "A scope represents the context for its enclosing Annotation.",
            "id": "Scope",
            "properties": {
                "dataSourceId": {
                    "description": "Required. The data source ID that the enclosing Annotation refers to.",
                    "type": "string"
                },
                "endTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "measureAndFilters": {
                    "description": "Required. List of measures and filters to return annotations for. If unset,\nan error will be returned.",
                    "items": {
                        "$ref": "ScopeMeasureAndFilters"
                    },
                    "type": "array"
                },
                "startTime": {
                    "description": "Required. The [start_time, end_time) of the enclosing Annotation.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ScopeMeasureAndFilters": {
            "id": "ScopeMeasureAndFilters",
            "properties": {
                "filters": {
                    "description": "The filters that constrain the scope of the annotations. If multiple\nfilters are specified, only annotations matching all the filters will be\nreturned.",
                    "items": {
                        "$ref": "GoogleInternalPlxV2AlertMatchesAny"
                    },
                    "type": "array"
                },
                "measure": {
                    "description": "Required. The name of the measure column that the annotations refer to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ScoredFeatureTuple": {
            "description": "Contains scores for either a single feature (i.e. its saliency score) or a\nset of features together (i.e. their grouped correlation score).",
            "id": "ScoredFeatureTuple",
            "properties": {
                "featureName": {
                    "description": "Names of features (either one or more) which are paired up to report\ncorrelation.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "score": {
                    "description": "Saliency or correlation score for features.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Script": {
            "id": "Script",
            "properties": {
                "body": {
                    "description": "Optional: A user-provided blob of text. May contain multiple independent\nSQL statements and other directives. May be empty.",
                    "type": "string"
                },
                "customFunction": {
                    "description": "Optional: TVF/UDF functions that can be used in the Script.",
                    "items": {
                        "$ref": "CustomFunction"
                    },
                    "type": "array"
                },
                "defaultSqlDialect": {
                    "description": "Optional: The requested dialect to start the Script off with.",
                    "enum": [
                        "DIALECT_UNSPECIFIED",
                        "DREMEL_SQL",
                        "GOOGLE_SQL",
                        "WFL"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "queryEngine": {
                    "description": "Required: The requested engine to run the statements in.",
                    "enum": [
                        "QUERY_ENGINE_UNSPECIFIED",
                        "DREMEL",
                        "F1",
                        "POWERDRILL_DREMEL",
                        "PROCELLA",
                        "AUTO",
                        "WARPFLOW",
                        "BIG_QUERY"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ScriptArgument": {
            "description": "Represents an argument for the run script statement.",
            "id": "ScriptArgument",
            "properties": {
                "name": {
                    "description": "Required: The name of the parameter.",
                    "type": "string"
                },
                "value": {
                    "description": "Required: The argument itself.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ScriptEntity": {
            "id": "ScriptEntity",
            "properties": {
                "depotPath": {
                    "description": "The path that indicates the \"source of truth\" for the script text. When\nset, indicates that the script is source-controlled in Piper. Multiple\nentries are permitted if the script is sourced from several files (ie: SQL\nscript, LUA script).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "displayName": {
                    "description": "Optional: A human-readable name for the script.",
                    "type": "string"
                },
                "extensions": {
                    "$ref": "ScriptEntityExtensions",
                    "description": "Optional:  Additional application-specific configuration/metadata stored\nwith the entity."
                },
                "metadata": {
                    "$ref": "EntityMetadata",
                    "description": "Optional: Metadata about the script."
                },
                "name": {
                    "description": "Required: The name of the script.",
                    "type": "string"
                },
                "parameter": {
                    "description": "Optional: Parameters to the script.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "scheduleWorkflowId": {
                    "description": "Optional: Workflow specifically representing this Script's scheduled\nexecution. This is expected to be the entity ID, not the resource name\n(e.g. 'abc123' and not 'workflows/abc123'). Note that one of the primary\nuses for this field is to allow the system to clean up the associated\nWorkflow when a scheduled Script is removed, meaning that the Workflow\nspecified here will be removed along with the Script.",
                    "type": "string"
                },
                "script": {
                    "$ref": "Script",
                    "description": "Required: The script."
                }
            },
            "type": "object"
        },
        "ScriptEntityExtensions": {
            "id": "ScriptEntityExtensions",
            "properties": {
                "aplosChartSpecifications": {
                    "description": "Optional: Set of Aplos chart visualizations to display with script\nexecution results.",
                    "items": {
                        "$ref": "AplosChartSpecification"
                    },
                    "type": "array"
                },
                "chartSpecifications": {
                    "description": "Optional: Set of chart visualizations to display with script execution\nresults. This is here only because we have to support ScriptsV1 being on\nthe V2 API for a while. ",
                    "items": {
                        "$ref": "GvizChartSpecification"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ScriptExecutionContext": {
            "id": "ScriptExecutionContext",
            "properties": {
                "arguments": {
                    "description": "Arguments to parameters specified in the body.",
                    "items": {
                        "$ref": "ScriptArgument"
                    },
                    "type": "array"
                },
                "enableGooglesqlModules": {
                    "description": "Allow importing GoogleSQL Modules. This is a feature that is experimental\nand likely to change drastically - use at your own risk. For details,\nplease see go/plx-piper-gsqlm-dd.",
                    "type": "boolean"
                },
                "engineDefaults": {
                    "description": "These settings will be applied before the script is executed.  Do not send\nmore than QueryDefault one per query engine.",
                    "items": {
                        "$ref": "QueryDefault"
                    },
                    "type": "array"
                },
                "script": {
                    "$ref": "Script",
                    "description": "Required: The script model."
                }
            },
            "type": "object"
        },
        "ScriptRevision": {
            "id": "ScriptRevision",
            "properties": {
                "entity": {
                    "$ref": "ScriptEntity",
                    "description": "Required: The revision of the script."
                },
                "name": {
                    "description": "Required: The name of the revision.",
                    "type": "string"
                },
                "revisionToken": {
                    "description": "Required: An opaque token used for optimistic locking. Responses will\ncontain this token and update requests must provide the value originally\nreturned to the client. If another update has been made to the database\nbetween the two, an ABORTED error will be returned.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ScriptSpec": {
            "description": "A saved script specification.",
            "id": "ScriptSpec",
            "properties": {
                "name": {
                    "description": "The fully qualified name of this saved script.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SecureLaunchConfig": {
            "description": "Stores BorgMint signed launch configurations that are used to run secure\nworkflows in the user's own MDB account.",
            "id": "SecureLaunchConfig",
            "properties": {
                "borgConfig": {
                    "description": "Required. Content of the .borg file that was used to generate this\nconfiguration.",
                    "type": "string"
                },
                "borgService": {
                    "description": "ThinMint signed borg.clients.backend.BorgService proto that will be passed\nto the Borg client library to launch the workflow.\n\nThis field type is bytes to make the type opaque to F1. This avoids any\npotential schema update failures that could be caused by changes to\nborgservice.proto that happen to fail F1 schema validation despite\nbeing a backward compatible proto change.",
                    "format": "byte",
                    "type": "string"
                },
                "cell": {
                    "description": "Required. Identifies the cell that this launch configuration will use.",
                    "type": "string"
                },
                "expirationTimestampSec": {
                    "description": "Epoch timestamp in seconds for when the signed configuration will expire.\nThis will be used in the frontend for warning of upcoming or expired\nworkflows. In the future this could be used for proactive email\nnotifications.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SendEmailNode": {
            "description": "Sends a status email to a group of recipients.",
            "id": "SendEmailNode",
            "properties": {
                "bccAddresses": {
                    "description": "List of blind carbon copy recipients.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "body": {
                    "description": "Required. Contents of the email body.",
                    "type": "string"
                },
                "bodyIsHtml": {
                    "description": "Is the body of the message in HTML instead of plain text",
                    "type": "boolean"
                },
                "ccAddresses": {
                    "description": "List of carbon copy recipients.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "replyToAddress": {
                    "description": "Address to use in \"reply-to:\" field.",
                    "type": "string"
                },
                "subject": {
                    "description": "Required. Subject line of the email.",
                    "type": "string"
                },
                "toAddresses": {
                    "description": "List of destination email addresses. At least one of the three recipient\naddress fields must be non-empty.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SourceControlInfo": {
            "description": "The storage information for a Plx entity.\nCurrently, this supports only Piper paths.\nThis message should be kept in sync with datawarehouse.plx.db.StorageInfo",
            "id": "SourceControlInfo",
            "properties": {
                "piperPath": {
                    "description": "The google3 depot paths for entity (depot source of truth).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SourceLocationScope": {
            "description": "Qualifies where to look for a particular object or set of objects.",
            "id": "SourceLocationScope",
            "properties": {
                "citc": {
                    "$ref": "CitcLocation",
                    "description": "Located in Citc."
                },
                "srcfs": {
                    "$ref": "SrcfsLocation",
                    "description": "Located in SrcFS."
                }
            },
            "type": "object"
        },
        "SrcfsLocation": {
            "description": "Identifies how to find one or more objects stored in SrcFS.",
            "id": "SrcfsLocation",
            "properties": {},
            "type": "object"
        },
        "Statement": {
            "description": "A single SQL statement or client command, with positional information.",
            "id": "Statement",
            "properties": {
                "beginColumn": {
                    "description": "Optional: The column number on which the statement starts.\nStarts with 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "beginLine": {
                    "description": "Optional: The line number of the statement within the overall script.\nStarts with 1.",
                    "format": "int32",
                    "type": "integer"
                },
                "contents": {
                    "description": "Required: The contents of the statement in its original form.",
                    "type": "string"
                },
                "number": {
                    "description": "Optional: Relative position of the statement within the whole script.\nStarts with 1.  This will be omitted for statements that are not part of\nthe script (e.g. session state).",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "id": "Status",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StatusProto": {
            "description": "Wire-format for a Status object",
            "id": "StatusProto",
            "properties": {
                "canonicalCode": {
                    "description": "The canonical error code (see codes.proto) that most closely\ncorresponds to this status. May be missing.",
                    "format": "int32",
                    "type": "integer"
                },
                "code": {
                    "description": "Numeric code drawn from the space specified below. Often, this is the\ncanonical error space, and code is drawn from google3/util/task/codes.proto",
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "description": "Detail message",
                    "type": "string"
                },
                "messageSet": {
                    "$ref": "MessageSet",
                    "description": "message_set associates an arbitrary proto message with the status."
                },
                "payload": {
                    "$ref": "TypedMessage",
                    "description": "DEPRECATED.\n\nThis field was deprecated in 2011 with cl/20297133.  Java support\nfor the field was moved to a proto1 backward compatibility class\nin April 2017 with cl/142615857 and cl/154123203.  There was\nnever support for this field in Go; if set Go will ignore it.\nC++ stopped setting StatusProto::payload in October 2015 with cl/106347055,\nand stopped reading the field in October 2017 with cl/173324114.\n\nIn general, newly written code should use only \"message_set\". If you need\nto maintain backward compatibility with code written before 3/25/2011, do\nthe following:\n\n- During the transition period, either (1) set both \"payload\" and\n  \"message_set\", or (2) write the consumer of StatusProto so that it can\n  forge a MessageSet object from \"payload\" if \"message_set\" is missing.\n  The C++ util::Status implementation does (2).\n\n- Once all the consumers are converted to accept \"message_set\", then\n  remove the use of \"payload\" on the producer side."
                },
                "space": {
                    "description": "The following are usually only present when code != 0\nSpace to which this status belongs",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TemplateFieldSpec": {
            "description": "Metadata for a template field.",
            "id": "TemplateFieldSpec",
            "properties": {
                "id": {
                    "description": "Required: The id of this field. The metadata with id matching a template\ntoken will be used for replacing the token. Each token defined on the\ntemplated_query needs to have a field with matching id. The field ids\nare also the output column names of the query generated from the\ntemplate.",
                    "type": "string"
                },
                "outputType": {
                    "description": "Required: The output data type of this field. This is essentially the\ndata type that the query_expression would produce.",
                    "enum": [
                        "UNKNOWN_FIELD_DATA_TYPE",
                        "TYPE_INT32",
                        "TYPE_INT64",
                        "TYPE_UINT32",
                        "TYPE_UINT64",
                        "TYPE_BOOL",
                        "TYPE_FLOAT",
                        "TYPE_DOUBLE",
                        "TYPE_STRING",
                        "TYPE_BYTES",
                        "TYPE_DATE",
                        "TYPE_TIMESTAMP",
                        "TYPE_TIMESTAMP_MICROS",
                        "TYPE_TIMESTAMP_MILLIS",
                        "TYPE_TIMESTAMP_SECONDS",
                        "TYPE_TIMESTAMP_NANOS",
                        "TYPE_ENUM"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "Consistent with GoogleSql timestamp in micros.",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "queryExpression": {
                    "description": "Required: The expression in the language of the template's query engine\nthat will be used select the values for this field.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TemplateSpec": {
            "description": "Templated data source spec.",
            "id": "TemplateSpec",
            "properties": {
                "engine": {
                    "description": "Required: The query engine which the templated query is written for.",
                    "type": "string"
                },
                "field": {
                    "description": "Metadata for the template fields. All template tokens defined in the\ntemplated_query need to have a field with a matching id.",
                    "items": {
                        "$ref": "TemplateFieldSpec"
                    },
                    "type": "array"
                },
                "templatedQuery": {
                    "description": "Required: Query which contains template keyword tokens to be replaced\nbased on a projection spec.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TestPermissionsRequest": {
            "id": "TestPermissionsRequest",
            "properties": {
                "permissions": {
                    "description": "The set of permissions to check for the resource. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. Required.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TestPermissionsResponse": {
            "id": "TestPermissionsResponse",
            "properties": {
                "permissions": {
                    "description": "The subset of permissions from TestPermissionsRequest that the caller\nis allowed on the resource.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TimeGranularity": {
            "description": "A time granularity divides the time line into discrete time periods.\nThis is useful for defining buckets over which filtering and aggregation\nshould be performed.\n\nGranularities are always aligned on \"natural\" boundaries. For example,\n\n*   1 day means [midnight to midnight)\n*   1 hour means [1am to 2am)\n*   (and so on)\n\nThe default starting day of a week is Sunday.",
            "id": "TimeGranularity",
            "properties": {
                "timeZone": {
                    "$ref": "TimeZone",
                    "description": "Optional: The time zone to use when interpreting time-zone specific time\nUnits (hour, day, week, etc). Required unless specified at a higher-level."
                },
                "width": {
                    "$ref": "TimePeriod",
                    "description": "Required: The size of the granularity bucket.\nMust be a single unit (e.g. 1d, 1w, 1m). Multiple and mixed units are not\nsupported (e.g. 2d, 1w1d)."
                }
            },
            "type": "object"
        },
        "TimePeriod": {
            "description": "A date-based amount of time (e.g. 2 years, 3 months and 4 days). This is\nsimilar to the concept as a google.protobuf.Duration, but on the human\ntimeline.",
            "id": "TimePeriod",
            "properties": {
                "isoDuration": {
                    "description": "An [ISO 8601 Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)\nspecification.\nQuarter (Q) is also supported as an extension. One quarter equals to three\nmonths. For example, \"P1Q1W1D\" is a duration of one quarter one week one\nday.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimeZone": {
            "description": "A time zone specification.",
            "id": "TimeZone",
            "properties": {
                "definition": {
                    "description": "A GoogleSQL time zone definition.\nFormat: \"(+|-)HH]\" or international time zone identifier",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimerNode": {
            "description": "The timer node simply waits the specified number of seconds before it\nfinishes.",
            "id": "TimerNode",
            "properties": {
                "boundDuration": {
                    "description": "Variable to bind to for waiting duration.",
                    "type": "string"
                },
                "timeToWait": {
                    "description": "Time to wait before finishing.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TimerNodeStatus": {
            "description": "Stores status information for TimerNode.",
            "id": "TimerNodeStatus",
            "properties": {
                "percentComplete": {
                    "description": "Output only. Node progress indicator.",
                    "format": "int32",
                    "type": "integer"
                },
                "startTime": {
                    "description": "Output only. Node start time.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TrackingData": {
            "description": "Information about the source of the request. This is strictly for metrics and\ndebugging purposes.",
            "id": "TrackingData",
            "properties": {
                "resourceId": {
                    "description": "A client-defined identifier of the resource that generated this request.\nFor example, a dashboard ID.",
                    "type": "string"
                },
                "sessionId": {
                    "description": "A client-defined identifier which groups together multiple requests by a\nsingle user.\nFor example, a UUID generated at initial dashboard load",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TrainerMetrics": {
            "description": "Metrics returned from the Training execution.",
            "id": "TrainerMetrics",
            "properties": {
                "chiSquared": {
                    "additionalProperties": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": "If test data was provided, this measures whether the model over-fit the\nthe data. The lower the number, the better the model. A good number should\nbe less than 1. This set of scores is reported as one score for each class.\nSee learning/lib/abe/analysis/overtrain_evaluator.h for more information.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "TransferOwnershipRequest": {
            "id": "TransferOwnershipRequest",
            "properties": {
                "newOwners": {
                    "description": "List of new owner principals to be added as owners to the ACL.\nAccepted formats:\n1. user:username@google.com\n2. user:username@prod.google.com\n3. group:groupname@google.com\n4. mdb:groupname",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "oldOwners": {
                    "description": "List of old owner principals to be removed from ACL.\nAccepted formats:\n1. user:username@google.com\n2. user:username@prod.google.com\n3. group:groupname@google.com\n4. mdb:groupname\nThe ownership transfer bug template allows specifying only a single\nuser LDAP for the old owner. The command line tool then checks if the old\nowner has an MDB account. If yes, it passes in his/her GAIA as well as MDB\nprincipals for ownership transfer.\nThis field is optional. If no old owners are specified, new owners will be\nadded without removing any old owners.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "reason": {
                    "description": "Reason for ownership transfer. Used for logging purposes.\nRequired.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TriggeringRateLimit": {
            "description": "Allows the workflow trigger condition to be limited by various conditions.\nIf no rate limit is provided a default de-bounce policy of\nnot_more_often_than = 60 seconds is applied.",
            "id": "TriggeringRateLimit",
            "properties": {
                "notMoreOftenThan": {
                    "description": "At least this much time must have elapsed since the last triggering of this\ncondition before it can trigger again.  This is useful when triggers come\nin bursts but you don't need to act more often than a certain time.  Or\nyou might want your workflow to run once every 28 days.  You can set the\nscheduler trigger to once a day and this to 28 days.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TypedMessage": {
            "description": "Message that groups a protocol type_id (as defined by MessageSet),\nwith an encoded message of that type.  Its use is similar to\nMessageSet, except it represents a single (type, encoded message)\ninstead of a set.\n\nTo fill for known protocol type:\n  MyProtocolMsg proto;\n  TypedMessage typed_msg;\n  typed_msg.set_type_id(MyProtocolMsg::MESSAGE_TYPE_ID);\n  proto.AppendToCord(typed_msg.mutable_message());\n\nTo fill for unknown protocol type:\n  ProtocolMessage proto;\n  TypedMessage typed_msg;\n  typed_msg.set_type_id(proto.GetMapper()->type_id());\n  proto.AppendToCord(typed_msg.mutable_message());",
            "id": "TypedMessage",
            "properties": {
                "message": {
                    "description": "Message bytes.",
                    "format": "byte",
                    "type": "string"
                },
                "typeId": {
                    "description": "Identifier for the type.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UpdateGoogleSheetExportDestination": {
            "description": "Update Google Sheet export job destination.",
            "id": "UpdateGoogleSheetExportDestination",
            "properties": {
                "id": {
                    "description": "The ID of the Google Sheet to which to export. See\nhttps://developers.google.com/sheets/guides/concepts#spreadsheet_id for how\nto locate the Sheet ID.",
                    "type": "string"
                },
                "omitHeader": {
                    "description": "Whether or not to omit the header when writing the data.",
                    "type": "boolean"
                },
                "outputRange": {
                    "description": "The A1 range to which to write the data (e.g. 'MySheet!A1:Z'). Before\nwriting the data, this range will also be cleared of all existing data.\nSee https://developers.google.com/sheets/guides/concepts#a1_notation for an\nexplanation of A1 notation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UpdateRoleBindingRequest": {
            "id": "UpdateRoleBindingRequest",
            "properties": {
                "roleBinding": {
                    "$ref": "RoleBinding",
                    "description": "New role binding for the specified resource. Required."
                }
            },
            "type": "object"
        },
        "ValidateScriptRequest": {
            "id": "ValidateScriptRequest",
            "properties": {
                "compileOnly": {
                    "description": "If true, just expand and compile the Script, without sending it to the\nquery engines for validation.",
                    "type": "boolean"
                },
                "executionContext": {
                    "$ref": "ScriptExecutionContext",
                    "description": "Required: All the information needed to start a validation."
                },
                "trackingData": {
                    "$ref": "TrackingData",
                    "description": "Optional information about the origin of the request. This does not affect\nthe request and is only for metrics and debugging purposes."
                }
            },
            "type": "object"
        },
        "ValidateWorkflowResponse": {
            "description": "The response from a ValidateWorkflowRequest call.",
            "id": "ValidateWorkflowResponse",
            "properties": {
                "entries": {
                    "description": "Validation errors generated while validating the workflow.",
                    "items": {
                        "$ref": "ValidationEntry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ValidationEntry": {
            "description": "Refers to a problem in the workflow definition.",
            "id": "ValidationEntry",
            "properties": {
                "components": {
                    "description": "Output only. The workflow component(s) that caused the error. Could be\nmultiple components as in the case of a graph cycle.",
                    "items": {
                        "$ref": "WorkflowComponent"
                    },
                    "type": "array"
                },
                "text": {
                    "description": "Output only. The contents of the validation message.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ValueProto": {
            "description": "\nValueProto represents the serialized form of the googlesql::Value.\nUnlike googlesql::Value, ValueProto does not carry full type information with\nevery instance, and therefore can only be fully interpreted with accompanying\nTypeProto.",
            "id": "ValueProto",
            "properties": {
                "ValueProtoSwitchMustHaveADefault": {
                    "description": "User code that switches on this oneoff enum must have a default case so\nbuilds won't break when new fields are added.",
                    "type": "boolean"
                },
                "arrayValue": {
                    "$ref": "ValueProtoArray"
                },
                "boolValue": {
                    "type": "boolean"
                },
                "bytesValue": {
                    "format": "byte",
                    "type": "string"
                },
                "dateValue": {
                    "format": "int32",
                    "type": "integer"
                },
                "datetimeValue": {
                    "$ref": "ValueProtoDatetime"
                },
                "doubleValue": {
                    "format": "double",
                    "type": "number"
                },
                "enumValue": {
                    "description": "Tag 11 was used for specifying micros timestamps as int64, now obsolete.",
                    "format": "int32",
                    "type": "integer"
                },
                "floatValue": {
                    "format": "float",
                    "type": "number"
                },
                "geographyValue": {
                    "description": "Geography encoded using ::stlib::STGeographyEncoder",
                    "format": "byte",
                    "type": "string"
                },
                "int32Value": {
                    "format": "int32",
                    "type": "integer"
                },
                "int64Value": {
                    "format": "int64",
                    "type": "string"
                },
                "numericValue": {
                    "description": "Encoded numeric value. For the encoding format see documentation for\nNumericValue::SerializeAsProtoBytes().",
                    "format": "byte",
                    "type": "string"
                },
                "protoValue": {
                    "description": "Stores a serialized protocol message.",
                    "format": "byte",
                    "type": "string"
                },
                "stringValue": {
                    "type": "string"
                },
                "structValue": {
                    "$ref": "ValueProtoStruct"
                },
                "timeValue": {
                    "description": "Bit field encoding of hour/minute/second/nanos. See TimeWrapper class for\ndetails.",
                    "format": "int64",
                    "type": "string"
                },
                "timestampValue": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "uint32Value": {
                    "format": "uint32",
                    "type": "integer"
                },
                "uint64Value": {
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ValueProtoArray": {
            "description": "An ordered collection of elements of arbitrary count.",
            "id": "ValueProtoArray",
            "properties": {
                "element": {
                    "items": {
                        "$ref": "ValueProto"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ValueProtoDatetime": {
            "id": "ValueProtoDatetime",
            "properties": {
                "bitFieldDatetimeSeconds": {
                    "description": "Represents bit field encoding of year/month/day/hour/minute/second.\nSee DatetimeWrapper for details of encoding.",
                    "format": "int64",
                    "type": "string"
                },
                "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ValueProtoStruct": {
            "description": "A collection of fields. The count, order, and type of the fields is\ndetermined by the type associated with this value.",
            "id": "ValueProtoStruct",
            "properties": {
                "field": {
                    "items": {
                        "$ref": "ValueProto"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "VariableSetBinding": {
            "description": "Represents a variable binding where there can be multiple variables grouped\nlike rows.",
            "id": "VariableSetBinding",
            "properties": {
                "columns": {
                    "description": "Values obtained from the variable set. All entries in this list must have\nthe same length. Required.",
                    "items": {
                        "$ref": "VectorBinding"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "A string to uniquely identify the variable set. Required.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VectorBinding": {
            "description": "Represents a variable binding where the variable can take on multiple values.",
            "id": "VectorBinding",
            "properties": {
                "name": {
                    "description": "Output only. Variable name.",
                    "type": "string"
                },
                "values": {
                    "description": "Output only. Variable values.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "VersionIdentifier": {
            "description": "Identifies a PlxDb entity instance.",
            "id": "VersionIdentifier",
            "properties": {
                "name": {
                    "description": "The name of the entity.",
                    "type": "string"
                },
                "versionId": {
                    "description": "The version id of the entity to use.  The version id is a micro second\ntimestamp assigned by the Database.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaitForScheduleNode": {
            "description": "Waits for a periodic schedule specified in #plx cron format. Please see\nhttp://go/plxcrontab for a full discussion of the supported syntax.",
            "id": "WaitForScheduleNode",
            "properties": {
                "cronSchedule": {
                    "description": "Required. The schedule specified in cron format.",
                    "type": "string"
                },
                "rateLimit": {
                    "$ref": "TriggeringRateLimit",
                    "description": "Triggering rate limit"
                },
                "timezone": {
                    "description": "NOTE: THIS IS NOT HONORED AT THIS TIME! All times will be considered\n'America/Los_Angeles'",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaitForTablesNode": {
            "description": "Waits for several tables to update within a time window.",
            "id": "WaitForTablesNode",
            "properties": {
                "rateLimit": {
                    "$ref": "TriggeringRateLimit",
                    "description": "Triggering rate limit"
                },
                "relation": {
                    "description": "Determines how to evaluate the trigger condition when two or more entities\nare present in the above list.",
                    "enum": [
                        "WAIT_FOR_ENTITIES_RELATION_UNSPECIFIED",
                        "ALL",
                        "ANY"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "All entities must be satisfied to satisfy the relation.",
                        "Any individual entity may be satisfied to satisfy the relation."
                    ],
                    "type": "string"
                },
                "tableIds": {
                    "description": "List of tables to watch. Must have at least one entry.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timeWindow": {
                    "description": "Time window within which all of the above tables must be updated.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaitForTablesStatus": {
            "description": "Stores status information for WaitForTablesNode.",
            "id": "WaitForTablesStatus",
            "properties": {
                "entityUpdates": {
                    "description": "Output only. A list of the tables and times they were updated that\nsatisfied this wait condition. Must have a corresponding entry for every\ntable in the wait list (when the relation is ALL).",
                    "items": {
                        "$ref": "EntityUpdateTime"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WaitForWorkflowsNode": {
            "description": "Waits for one or more workflows to complete successfully within a\ntime window.",
            "id": "WaitForWorkflowsNode",
            "properties": {
                "rateLimit": {
                    "$ref": "TriggeringRateLimit",
                    "description": "Triggering rate limit"
                },
                "relation": {
                    "description": "Determines how to evaluate the trigger condition when two or more entities\nare present in the above list.",
                    "enum": [
                        "WAIT_FOR_ENTITIES_RELATION_UNSPECIFIED",
                        "ALL",
                        "ANY"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "All entities must be satisfied to satisfy the relation.",
                        "Any individual entity may be satisfied to satisfy the relation."
                    ],
                    "type": "string"
                },
                "timeWindow": {
                    "description": "Required. Time window within which the required number of workflows must\ncomplete successfully, as specified by the 'relation' field.",
                    "format": "google-duration",
                    "type": "string"
                },
                "workflowNames": {
                    "description": "List of workflows to watch. Must have at least one entry.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WaitForWorkflowsStatus": {
            "description": "Stores status information for WaitForWorkflowsNode.",
            "id": "WaitForWorkflowsStatus",
            "properties": {
                "entityUpdates": {
                    "description": "Output only. A list of the workflows and times they were completed that\nsatisfied this wait condition. Must have a corresponding entry for every\nworkflow in the wait list (when the relation is ALL).",
                    "items": {
                        "$ref": "EntityUpdateTime"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WaitForXenonFeedNode": {
            "description": "Waits for several Xenon feeds to complete within a time window.",
            "id": "WaitForXenonFeedNode",
            "properties": {
                "feed": {
                    "description": "List of feeds to watch. Must have at least one entry.",
                    "items": {
                        "$ref": "XenonFeed"
                    },
                    "type": "array"
                },
                "rateLimit": {
                    "$ref": "TriggeringRateLimit",
                    "description": "Triggering rate limit"
                },
                "relation": {
                    "description": "Determines how to evaluate the trigger condition when two or more\nfeeds are present in the above list.",
                    "enum": [
                        "WAIT_FOR_ENTITIES_RELATION_UNSPECIFIED",
                        "ALL",
                        "ANY"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "All entities must be satisfied to satisfy the relation.",
                        "Any individual entity may be satisfied to satisfy the relation."
                    ],
                    "type": "string"
                },
                "timeWindow": {
                    "description": "Time window within which all of the above feeds must be updated.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WaitForXenonFeedStatus": {
            "description": "Stores status information for WaitForXenonFeedNode.",
            "id": "WaitForXenonFeedStatus",
            "properties": {
                "feedUpdate": {
                    "description": "A list of the feeds and times they were updated that satisfied this wait\ncondition. Must have a corresponding entry for every feed in the wait\nlist (when the relation is ALL).",
                    "items": {
                        "$ref": "XenonFeedUpdateTime"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WaterfallParameters": {
            "id": "WaterfallParameters",
            "properties": {
                "boxCoxLambda": {
                    "description": "Weight used to regularize the delta change between the reference and\ncomparison values. Valid values range [0, 1].\nGiven lambda as l:\n(reference_value^(1 - l) - comparison_value^(1 - l))/(1 - l);\nin the limit as l -> 1:  log(reference_value) - log(comparison_value)",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Workflow": {
            "description": "The static stored workflow resource independent of any execution.",
            "id": "Workflow",
            "properties": {
                "blockParameterOverrides": {
                    "description": "Should this workflow block the ability to start with parameter overrides\nprovided at startup.  Set this to true if you want to prohibit this\nbehaviour.",
                    "type": "boolean"
                },
                "creationInfo": {
                    "$ref": "ChangeInfo",
                    "description": "Output only. Workflow creation metadata."
                },
                "description": {
                    "description": "A short description of the Workflow.",
                    "type": "string"
                },
                "displayName": {
                    "description": "The name of Workflow shown to users.",
                    "type": "string"
                },
                "edges": {
                    "description": "The set of all edges in the Workflow.",
                    "items": {
                        "$ref": "WorkflowEdge"
                    },
                    "type": "array"
                },
                "enabled": {
                    "description": "True if this workflow is enabled for automated execution. This will cause\nthe workflow to run whenever its triggering conditions are satisfied\n(ex: WaitForSchedule, WaitForTables).",
                    "type": "boolean"
                },
                "executeAs": {
                    "description": "Required. The Prod/Ganpati/MDB principal to authorize as when running the\npipeline, in \"IAM short form\".\n\nExamples:\n\n*   MDB person user: \"user:{user_name}@prod.google.com\"\n*   MDB group role: \"mdb:{user_name}\"\n\nNote: This field must be a Prod/Ganpati/MDB principal. Use of any other\nprincipal type is deprecated.",
                    "type": "string"
                },
                "frontEndRole": {
                    "description": "The front end representation in place for this workflow.",
                    "enum": [
                        "FRONTEND_ROLE_UNSPECIFIED",
                        "PLX_WORKFLOW",
                        "PLX_SCHEDULED_SCRIPT"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "A full-featured #plx Workflow.",
                        "A Scheduled Script. Scheduled script workflows must have exactly two\nnodes. The first node must be a WaitFor<X>Node type and the second must\nbe a RunScriptNode. Scheduled script workflows do not appear in the #plx\nHome page search results."
                    ],
                    "type": "string"
                },
                "gaiaExecuteAs": {
                    "description": "An additional GAIA principal to authorize as when running the pipeline,\nin \"IAM short form\".\n\nTo use this field, `execute_as` must be a MDB person user.\nThe `gaia_execute_as` principal must correspond to the google.com GAIA\naccount for the `execute_as` user.\n\n\nExamples:\n\n*   GAIA user ID: \"userId:{obfuscated gaia id}\"\n*   GAIA email: \"user:{user_name}@google.com\"",
                    "type": "string"
                },
                "lastModificationInfo": {
                    "$ref": "ChangeInfo",
                    "description": "Output only. Information about the last modification to the workflow."
                },
                "launchConfigs": {
                    "description": "If the workflow should be run in a secure configuration, this will contain\nThinMint signed BorgService protos to launch it. One entry per Borg cell\nwhere the workflow is allowed to run.",
                    "items": {
                        "$ref": "SecureLaunchConfig"
                    },
                    "type": "array"
                },
                "maxNodeParallelism": {
                    "description": "Maximum number of nodes to run in parallel.\nThis is useful to limit the amount of nodes that may be contending for\nthe same data and therefore slowing down the completion of the nodes.",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "Required. The workflow resource name.",
                    "type": "string"
                },
                "nodes": {
                    "description": "The set of all nodes in the Workflow.",
                    "items": {
                        "$ref": "WorkflowNode"
                    },
                    "type": "array"
                },
                "sourceControlInfo": {
                    "$ref": "SourceControlInfo",
                    "description": "Optional. Storage information (e.g. Piper paths) for the Workflow."
                },
                "statusEmails": {
                    "description": "A list of status email settings.",
                    "items": {
                        "$ref": "WorkflowStatusEmailInfo"
                    },
                    "type": "array"
                },
                "tags": {
                    "description": "Tags applied to the workflow.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "variableSets": {
                    "description": "Global workflow variable sets. Evaluated at workflow startup. Nodes that\nreference variables from a variable set will be sharded according to the\nnumber of unique bindings of those variables. Nodes referencing variables\nfrom more than one set will be sharded as the cross product of the\nvariable bindings.",
                    "items": {
                        "$ref": "WorkflowVariableSet"
                    },
                    "type": "array"
                },
                "variables": {
                    "description": "Global workflow variables. Evaluated at workflow startup.",
                    "items": {
                        "$ref": "WorkflowVariable"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WorkflowAttemptStatus": {
            "description": "Status information for a specific attempt.",
            "id": "WorkflowAttemptStatus",
            "properties": {
                "attemptNumber": {
                    "description": "Output only. The attempt number these messages belong to.",
                    "format": "int32",
                    "type": "integer"
                },
                "errorMessages": {
                    "description": "Output only. Any error messages generated",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "statusCode": {
                    "description": "Output only. Provides additional information about this attempt's\nfinal state.",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                },
                "warningMessages": {
                    "description": "Output only. Any warning messages generated",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WorkflowComponent": {
            "description": "Used to identify the workflow component that raised the validation message.",
            "id": "WorkflowComponent",
            "properties": {
                "ids": {
                    "description": "Output only. Identifier for a workflow component for those that support it\n(ie: node, edge, variable). Absent when referring to all components of the\nindicated type. Will have exactly one entry when referencing a workflow\nnode or a workflow variable. Will have exactly two entries when referencing\na workflow edge (id(0) = edge.source(), id(1) = edge.target()).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Output only. Workflow component type where the validation entry was raised.",
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        "WORKFLOW",
                        "NODE",
                        "EDGE",
                        "VARIABLE",
                        "STATUS_EMAIL",
                        "EXECUTE_AS",
                        "LAUNCH_CONFIG",
                        "VARIABLE_SET",
                        "WORKFLOW_INSTANCE",
                        "WORKFLOW_STATUS",
                        "NODE_STATUS"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Refers to the entire workflow.",
                        "Refers to one or all of the workflow nodes.",
                        "Refers to one or all of the workflow edges.",
                        "Refers to one or all of the workflow variables.",
                        "Refers to one or all of the status email entries.",
                        "Refers to the execute_as field.",
                        "Refers to one or all of the secure launch configurations.",
                        "Refers to one or all of the workflow variable sets.",
                        "Refers to a WorkflowInstance object.",
                        "Refers to the WorkflowStatus member.",
                        "Refers to a NodeStatus entry."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowEdge": {
            "description": "Models the dependency relationship between workflow stages. An edge becomes\nsatisfied when the source Node completes in accordance with the edge's label.",
            "id": "WorkflowEdge",
            "properties": {
                "condition": {
                    "description": "Source node condition that will cause this edge to become satisfied.",
                    "enum": [
                        "CONDITION_UNSPECIFIED",
                        "SUCCESS",
                        "FAILURE",
                        "COMPLETE"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Source node has finished successfully.",
                        "Source node has failed for some reason.",
                        "Source node has finished. Final state does not matter."
                    ],
                    "type": "string"
                },
                "source": {
                    "description": "Required. Identifier of the node that the edge originates from.",
                    "type": "string"
                },
                "target": {
                    "description": "Required. Identifier of the node that the edge is pointing to.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowExecution": {
            "description": "Holds information about the execution of a particular snapshot of a workflow.\nNote executions may have multiple \"attempts\", all with the same execution_id.",
            "id": "WorkflowExecution",
            "properties": {
                "executionId": {
                    "description": "Output only. Hex format.\nUnique execution instance identifier for the workflow. 0 and 1\nare reserved identifiers and must not be used/stored in production. For now\n0 represents the invalid execution identifier and 1 represents the most\nrecent execution identifier for a given workflow.",
                    "type": "string"
                },
                "launchInfo": {
                    "description": "Output only. Stores location information for each workflow execution\nattempt. Entries are added with each successive attempt, with the first at\nindex 0 and the last attempt at index attempt_size() - 1. Beyond a certain\nnumber of launch attempts the workflow execution will be considered a\nzombie and killed.",
                    "items": {
                        "$ref": "WorkflowLaunchInfo"
                    },
                    "type": "array"
                },
                "nodesToStart": {
                    "description": "Output only. A list of specific nodes to run when the workflow starts. Any\nother nodes will be assumed to have completed successfully. Dependencies\nare still checked among the nodes in this list. So some nodes may not be\nrun if their ancestors fail.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "parameterOverrides": {
                    "$ref": "ParameterOverride",
                    "description": "Parameters to override values for.  Values specified here that are also\ndefined as variables or variable sets evaluated at startup will use these\nvalues instead."
                },
                "status": {
                    "$ref": "WorkflowExecutionStatus",
                    "description": "Output only. Execution status."
                },
                "workflow": {
                    "$ref": "Workflow",
                    "description": "Output only. A snapshot of the workflow when execution was started."
                },
                "workflowVersion": {
                    "$ref": "VersionIdentifier",
                    "description": "The workflow instance to use.  This refers to the specific version of the\nworkflow used with this execution."
                }
            },
            "type": "object"
        },
        "WorkflowExecutionStatus": {
            "description": "Holds status information for the workflow execution.",
            "id": "WorkflowExecutionStatus",
            "properties": {
                "bindings": {
                    "description": "Output only. Variable bindings obtained when the workflow was started.",
                    "items": {
                        "$ref": "WorkflowVariableBinding"
                    },
                    "type": "array"
                },
                "creationTime": {
                    "description": "Output only. Time that the workflow instance was created.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "executionStatuses": {
                    "description": "Output only. Warning and Error messages generated for each attempt_number",
                    "items": {
                        "$ref": "WorkflowAttemptStatus"
                    },
                    "type": "array"
                },
                "lastUpdateTime": {
                    "description": "Output only. Time of the most recent workflow status update.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "nodeStatuses": {
                    "description": "Output only. Status of workflow nodes. One entry for each WorkflowNode in\nthe graph.",
                    "items": {
                        "$ref": "NodeStatus"
                    },
                    "type": "array"
                },
                "setBindings": {
                    "description": "Output only. Correlated variable bindings obtained at the start of the\nworkflow.",
                    "items": {
                        "$ref": "WorkflowVariableSetBinding"
                    },
                    "type": "array"
                },
                "startTime": {
                    "description": "Output only. Time that the workflow started executing.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "state": {
                    "description": "Output only. The workflow execution's current state.",
                    "enum": [
                        "STATE_UNSPECIFIED",
                        "SUCCESS",
                        "RUNNING",
                        "FAILURE"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Workflow has completed successfully. A terminal state.",
                        "The workflow is currently running. A transient state.",
                        "An error was encountered while the workflow was running. A terminal\nstate."
                    ],
                    "type": "string"
                },
                "statusCode": {
                    "description": "Output only. Provides additional information about the workflow's final\nstate. Present when the workflow is in a terminal state (SUCCESS, FAILURE).",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowLaunchInfo": {
            "description": "Stores information about where the workflow is currently running.",
            "id": "WorkflowLaunchInfo",
            "properties": {
                "attemptNumber": {
                    "description": "Output only. The execution attempt for this workflow.  The initial run and\nits restarts will be 1.  If a workflow is retried(MANUAL_RETRY) then this\nwill be incremented on each retry so we can properly group fields.",
                    "format": "int32",
                    "type": "integer"
                },
                "borgCell": {
                    "description": "Output only. If the workflow is running in its own Borg job, the Borg cell\nwill be stored here. Filled in by the #plx MP server. When launched as a\nsigned workflow use this field to look up the actual SecureLaunchConfig\nentry.",
                    "type": "string"
                },
                "borgConfig": {
                    "description": "Output only. If the workflow is running in its own Borg job, the borg\nconfig file that was used to launch this workflow instance will be stored\nhere. May reference external files as long as they are available to the\nbinary that is launching the workflow (ex: provided in an MPM when running\non Borg).",
                    "type": "string"
                },
                "borgService": {
                    "description": "Output only. If the workflow is running in its own Borg job, the\nBorgService proto that was generated from the above Borg config file will\nbe stored here. This is what is actually used to launch the workflow.",
                    "format": "byte",
                    "type": "string"
                },
                "borgUid": {
                    "description": "Output only. If the workflow is running in its own Borg job, the job's UID\nwill be stored here. Filled in by the #plx MP server.",
                    "format": "int64",
                    "type": "string"
                },
                "executor": {
                    "description": "Output only. If the workflow is running as a child of an ExecutorService\nserver, the server's address will be stored here.",
                    "type": "string"
                },
                "launchPrincipal": {
                    "description": "Output only. If launch_reason is MANUAL or PUBSUB, contains the Principal\nof the end user who started the workflow.",
                    "type": "string"
                },
                "launchReason": {
                    "description": "Output only. What caused the workflow to start.",
                    "enum": [
                        "LAUNCH_REASON_UNSPECIFIED",
                        "AUTOMATED",
                        "MANUAL",
                        "PUBSUB",
                        "ABANDONED_RESTART",
                        "MANUAL_RETRY"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Workflow was started automatically by its root node.",
                        "Workflow was manually started by a user.",
                        "Workflow was triggered by a pubsub message.",
                        "Workflow was abandoned and has been automatically restarted.",
                        "Workflow is being manually retried."
                    ],
                    "type": "string"
                },
                "nodesToRetry": {
                    "description": "Output only. List of specific node identifiers within the workflow\nto start when launching as MANUAL_RETRY.  If the node is sharded you can\nspecify specific shards with the dot operator (node.shard).  This must be\na subset of the initially run nodes.  This may be left out in which case\nthe nodes to retry will be auto-selected.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ppLauncher": {
                    "description": "Output only. Address of the plxmp_pp_launcher process. Will be filled in by\nthe binary itself once its port is known.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowNode": {
            "description": "Represents a stage in the workflow execution.",
            "id": "WorkflowNode",
            "properties": {
                "bigqueryTransferNode": {
                    "$ref": "BigQueryTransferNode",
                    "description": "Runs a BigQuery data transfer."
                },
                "conditionExpression": {
                    "description": "An optional GoogleSQL expression that returns a boolean result.  If it\nevaluates to true the node will be executed.  If it evaluates to false the\nnode will be marked CONDITION_NOT_MET and skipped over.\nSee: go/conditional-node-design",
                    "type": "string"
                },
                "dasnavImportNode": {
                    "$ref": "DasnavImportNode",
                    "description": "Triggers a DASNav import and waits for it to complete."
                },
                "id": {
                    "description": "Required. Node identifier. Unique within the workflow. Node identifiers are\nrestricted to alphanumeric characters plus the underscore. The first\ncharacter may not be a number. 64 character limit.",
                    "type": "string"
                },
                "label": {
                    "description": "Node label to use for display and debugging. May contain characters that\nare not permitted in an EntityName (ex: spaces, quotes etc).",
                    "type": "string"
                },
                "launchWorkflowNode": {
                    "$ref": "LaunchWorkflowNode",
                    "description": "Launches a #plx workflow."
                },
                "manualTriggerNode": {
                    "$ref": "ManualTriggerNode",
                    "description": "Waits for the workflow to be triggered manually."
                },
                "maxRetries": {
                    "description": "Number of retries to attempt for the node.\nValue of 0 requests service to choose appropriate value.",
                    "format": "int32",
                    "type": "integer"
                },
                "modelBuildingNode": {
                    "$ref": "ModelBuildingNode",
                    "description": "Trains and/or validates a model."
                },
                "runAugmentationNode": {
                    "$ref": "RunAugmentationNode",
                    "description": "Runs a #plx augmentation."
                },
                "runBuildTargetNode": {
                    "$ref": "RunBuildTargetNode",
                    "description": "Builds and runs the binary built from the specified BUILD target."
                },
                "runRScriptNode": {
                    "$ref": "RunRScriptNode",
                    "description": "Loads and runs the .R script from the specified location."
                },
                "runScriptNode": {
                    "$ref": "RunScriptNode",
                    "description": "Runs a #plx script."
                },
                "runShellCommandNode": {
                    "$ref": "RunShellCommandNode",
                    "description": "Stores information about an MPM package that should be loaded for the\nworkflow."
                },
                "runXenonFeedNode": {
                    "$ref": "RunXenonFeedNode",
                    "description": "Runs a Xenon feed"
                },
                "sendEmailNode": {
                    "$ref": "SendEmailNode",
                    "description": "Sends a status email to a group of recipients."
                },
                "skipOnEmptyVariableSet": {
                    "description": "Allow empty variable sets, default is false.  If true and the variable set\nis empty the node will be skipped and considered to have run successfully.",
                    "type": "boolean"
                },
                "testNode": {
                    "$ref": "WorkflowTestNode",
                    "description": "A node used for testing workflow execution infrastructure."
                },
                "timeout": {
                    "description": "Amount of time to wait in seconds before giving up.\nValue of 0 requests service to choose appropriate value.",
                    "format": "google-duration",
                    "type": "string"
                },
                "timerNode": {
                    "$ref": "TimerNode",
                    "description": "Waits the specified number of seconds before it finishes."
                },
                "waitForScheduleNode": {
                    "$ref": "WaitForScheduleNode",
                    "description": "Waits for a periodic schedule specified in #plx cron format."
                },
                "waitForTablesNode": {
                    "$ref": "WaitForTablesNode",
                    "description": "Waits for several tables to update within a time window."
                },
                "waitForWorkflowsNode": {
                    "$ref": "WaitForWorkflowsNode",
                    "description": "Waits for one or more workflows to complete successfully within a\ntime window."
                },
                "waitForXenonFeedNode": {
                    "$ref": "WaitForXenonFeedNode",
                    "description": "Waits for several Xenon feeds to complete within a time window."
                }
            },
            "type": "object"
        },
        "WorkflowStatusEmailInfo": {
            "description": "Describes emails that should be sent under various workflow status\nconditions.",
            "id": "WorkflowStatusEmailInfo",
            "properties": {
                "bccAddresses": {
                    "description": "List of blind carbon copy recipients.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ccAddresses": {
                    "description": "List of carbon copy recipients.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "conditions": {
                    "description": "A list of workflow conditions that will cause a status email to be sent to\nthe above recipients. Must be non-empty.",
                    "enumDescriptions": [
                        "Not specified.",
                        "Workflow has completed successfully.",
                        "Workflow has started.",
                        "Workflow has failed for some reason."
                    ],
                    "items": {
                        "enum": [
                            "CONDITION_UNSPECIFIED",
                            "SUCCESS",
                            "STARTED",
                            "FAILURE"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "customBody": {
                    "description": "Body of the status email message. Only set this if the html formatted\nstatus email doesn't work for you and you want full control over the\ncontent of the status email message.",
                    "type": "string"
                },
                "replyToAddress": {
                    "description": "The email address to place in the reply-to field. Leave blank for no\nreply-to address.",
                    "type": "string"
                },
                "sendAsPlainText": {
                    "description": "Should the email should be sent as text/plain instead of text/html.\nThe default is to use text/html.",
                    "type": "boolean"
                },
                "toAddresses": {
                    "description": "List of destination email addresses. At least one of the three recipient\naddress fields must be non-empty.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WorkflowTestNode": {
            "description": "A node that pretends to do something. Used for testing workflow execution\ninfrastructure.",
            "id": "WorkflowTestNode",
            "properties": {
                "failureStatusCode": {
                    "description": "Indicates the status code to return if final_exec_state is not SUCCESS(1)",
                    "enum": [
                        "OK",
                        "CANCELLED",
                        "UNKNOWN",
                        "INVALID_ARGUMENT",
                        "DEADLINE_EXCEEDED",
                        "NOT_FOUND",
                        "ALREADY_EXISTS",
                        "PERMISSION_DENIED",
                        "UNAUTHENTICATED",
                        "RESOURCE_EXHAUSTED",
                        "FAILED_PRECONDITION",
                        "ABORTED",
                        "OUT_OF_RANGE",
                        "UNIMPLEMENTED",
                        "INTERNAL",
                        "UNAVAILABLE",
                        "DATA_LOSS"
                    ],
                    "enumDescriptions": [
                        "Not an error; returned on success\n\nHTTP Mapping: 200 OK",
                        "The operation was cancelled, typically by the caller.\n\nHTTP Mapping: 499 Client Closed Request",
                        "Unknown error.  For example, this error may be returned when\na `Status` value received from another address space belongs to\nan error space that is not known in this address space.  Also\nerrors raised by APIs that do not return enough error information\nmay be converted to this error.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The client specified an invalid argument.  Note that this differs\nfrom `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments\nthat are problematic regardless of the state of the system\n(e.g., a malformed file name).\n\nHTTP Mapping: 400 Bad Request",
                        "The deadline expired before the operation could complete. For operations\nthat change the state of the system, this error may be returned\neven if the operation has completed successfully.  For example, a\nsuccessful response from a server could have been delayed long\nenough for the deadline to expire.\n\nHTTP Mapping: 504 Gateway Timeout",
                        "Some requested entity (e.g., file or directory) was not found.\n\nNote to server developers: if a request is denied for an entire class\nof users, such as gradual feature rollout or undocumented whitelist,\n`NOT_FOUND` may be used. If a request is denied for some users within\na class of users, such as user-based access control, `PERMISSION_DENIED`\nmust be used.\n\nHTTP Mapping: 404 Not Found",
                        "The entity that a client attempted to create (e.g., file or directory)\nalready exists.\n\nHTTP Mapping: 409 Conflict",
                        "The caller does not have permission to execute the specified\noperation. `PERMISSION_DENIED` must not be used for rejections\ncaused by exhausting some resource (use `RESOURCE_EXHAUSTED`\ninstead for those errors). `PERMISSION_DENIED` must not be\nused if the caller can not be identified (use `UNAUTHENTICATED`\ninstead for those errors). This error code does not imply the\nrequest is valid or the requested entity exists or satisfies\nother pre-conditions.\n\nHTTP Mapping: 403 Forbidden",
                        "The request does not have valid authentication credentials for the\noperation.\n\nHTTP Mapping: 401 Unauthorized",
                        "Some resource has been exhausted, perhaps a per-user quota, or\nperhaps the entire file system is out of space.\n\nHTTP Mapping: 429 Too Many Requests",
                        "The operation was rejected because the system is not in a state\nrequired for the operation's execution.  For example, the directory\nto be deleted is non-empty, an rmdir operation is applied to\na non-directory, etc.\n\nService implementors can use the following guidelines to decide\nbetween `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:\n (a) Use `UNAVAILABLE` if the client can retry just the failing call.\n (b) Use `ABORTED` if the client should retry at a higher level\n     (e.g., when a client-specified test-and-set fails, indicating the\n     client should restart a read-modify-write sequence).\n (c) Use `FAILED_PRECONDITION` if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     fails because the directory is non-empty, `FAILED_PRECONDITION`\n     should be returned since the client should not retry unless\n     the files are deleted from the directory.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation was aborted, typically due to a concurrency issue such as\na sequencer check failure or transaction abort.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 409 Conflict",
                        "The operation was attempted past the valid range.  E.g., seeking or\nreading past end-of-file.\n\nUnlike `INVALID_ARGUMENT`, this error indicates a problem that may\nbe fixed if the system state changes. For example, a 32-bit file\nsystem will generate `INVALID_ARGUMENT` if asked to read at an\noffset that is not in the range [0,2^32-1], but it will generate\n`OUT_OF_RANGE` if asked to read from an offset past the current\nfile size.\n\nThere is a fair bit of overlap between `FAILED_PRECONDITION` and\n`OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific\nerror) when it applies so that callers who are iterating through\na space can easily look for an `OUT_OF_RANGE` error to detect when\nthey are done.\n\nHTTP Mapping: 400 Bad Request",
                        "The operation is not implemented or is not supported/enabled in this\nservice.\n\nHTTP Mapping: 501 Not Implemented",
                        "Internal errors.  This means that some invariants expected by the\nunderlying system have been broken.  This error code is reserved\nfor serious errors.\n\nHTTP Mapping: 500 Internal Server Error",
                        "The service is currently unavailable.  This is most likely a\ntransient condition, which can be corrected by retrying with\na backoff. Note that it is not always safe to retry\nnon-idempotent operations.\n\nSee the guidelines above for deciding between `FAILED_PRECONDITION`,\n`ABORTED`, and `UNAVAILABLE`.\n\nHTTP Mapping: 503 Service Unavailable",
                        "Unrecoverable data loss or corruption.\n\nHTTP Mapping: 500 Internal Server Error"
                    ],
                    "type": "string"
                },
                "finalExecState": {
                    "description": "Required. Final execution state that should be reported.",
                    "enum": [
                        "NODE_ATTEMPT_STATE_UNSPECIFIED",
                        "NOT_RUN",
                        "SUCCESS",
                        "RUNNING",
                        "FAILURE",
                        "SKIPPED",
                        "CONDITION_NOT_MET",
                        "WAITING_FOR_RETRY"
                    ],
                    "enumDescriptions": [
                        "Not specified.",
                        "Node has not been run, it might or might not be in the future.",
                        "Node has completed successfully. A terminal state.",
                        "The node is currently running. A transient state.",
                        "An error was encountered while the node was running. A terminal state.",
                        "Node was traversed and skipped.  This is considered a SUCCESS when\nevaluating node transitions.",
                        "Node was traversed and skipped because the condition specified for\nexecution was not met.",
                        "Node has failed a previous execution and is waiting to be retried."
                    ],
                    "type": "string"
                },
                "runTime": {
                    "description": "Required. Amount of time the node should run before finishing.",
                    "format": "google-duration",
                    "type": "string"
                },
                "statusReportPeriod": {
                    "description": "Required. Time between status reports.",
                    "format": "google-duration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowVariable": {
            "description": "Declares a variable that may be used elsewhere in the managed workflow.",
            "id": "WorkflowVariable",
            "properties": {
                "expression": {
                    "description": "Expression must be a valid Dremel SQL function as found in\n  https://www.corp.google.com/eng/doc/devguide/dremel/functions.shtml.",
                    "type": "string"
                },
                "googlesqlExpression": {
                    "description": "Expression must be a valid GoogleSQL expression.  These will have no\nfrom clause or select keyword.  The result will be assigned to the value\nname above.  For example:\n  EXTRACT(DAYOFWEEK FROM CURRENT_TIMESTAMP())\nRaw strings should be quoted:\n  \"/cns/path/to/data\"",
                    "type": "string"
                },
                "name": {
                    "description": "Required. Variable's name. Must be unique within the workflow. Follows a\nC-style\nidentifier convention:\n  - first character must be a letter (upper or lower case) or underscore\n  - subsequent characters may be a letter, number or underscore",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowVariableBinding": {
            "description": "Binds a workflow variable to its actual evaluated value.",
            "id": "WorkflowVariableBinding",
            "properties": {
                "value": {
                    "description": "Output only. Actual value of the variable.",
                    "type": "string"
                },
                "variable": {
                    "$ref": "WorkflowVariable",
                    "description": "Output only. Variable definition."
                }
            },
            "type": "object"
        },
        "WorkflowVariableSet": {
            "description": "Declares a set of correlated variables that may be used elsewhere in the\nworkflow. Unlike the variables declared in a WorkflowVariable proto, these\nvariables collectively evaluate to a 'table'. Any node referencing one or\nmore of the variables in a variable set will be sharded to run over every\nunique binding combination.\n\nExample:\n Assume we wanted to generate a list of the Borg cells that are not\n currently in PCR and that data was available in a table called\n ActiveCells. We further wanted to limit the results to only the cells in\n which we have quota. The query might resemble the following...\n\n  SELECT borg_cell cell_name, region cell_location\n      FROM ActiveCells\n      WHERE borg_cell IN ('ib', 'ic', 'ob', 'qa');\n\n This query would return two columns (cell_name and cell_location) with\n zero or more rows. Each row will become a potential binding for the\n variables.\n\n Now assume the workflow containing this VariableSet runs a script that\n references the \"cell_name\" variable.\n Since this variable evaluates to\n multiple values the workflow will create copies of the RunScript node,\n one copy for each value of \"cell_name\".\n These copies are called \"node\n shards\" and each shard will run the script with a different bound value.\n This provides a powerful way to express large computations with minimal\n effort.",
            "id": "WorkflowVariableSet",
            "properties": {
                "id": {
                    "description": "Required. A string to uniquely identify the variable set.",
                    "type": "string"
                },
                "script": {
                    "$ref": "Script",
                    "description": "Sql expression to evaluate to provide values for this variable set."
                },
                "sql": {
                    "description": "A Dremel SQL SELECT statement that will be evaluated to obtain\nthe bindings for variables in the set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkflowVariableSetBinding": {
            "description": "Binds a workflow variable set to its actual values.",
            "id": "WorkflowVariableSetBinding",
            "properties": {
                "columns": {
                    "description": "Output only. Values obtained from the variable set. All entries in this\nlist must have the same length.",
                    "items": {
                        "$ref": "VectorBinding"
                    },
                    "type": "array"
                },
                "variableSet": {
                    "$ref": "WorkflowVariableSet",
                    "description": "Output only. Variable definition."
                }
            },
            "type": "object"
        },
        "XenonFeed": {
            "id": "XenonFeed",
            "properties": {
                "bindingFeedName": {
                    "description": "Variable to bind to for the name of the feed.  May not be used if\nthis is the root node.",
                    "type": "string"
                },
                "feedName": {
                    "description": "Name of the feed.",
                    "type": "string"
                },
                "variableName": {
                    "description": "Store as a variable.",
                    "type": "string"
                },
                "variableSetName": {
                    "description": "Store in a variable set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XenonFeedUpdateTime": {
            "description": "Maps a Xenon feed to the time that it was updated.",
            "id": "XenonFeedUpdateTime",
            "properties": {
                "destinationUrl": {
                    "description": "Value received for the destination_url.",
                    "type": "string"
                },
                "feedName": {
                    "description": "Name of the feed.",
                    "type": "string"
                },
                "time": {
                    "description": "Time of the update that satisfied the wait condition. Required.",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Plx Private API (Test)",
    "version": "v2",
    "version_module": true
}