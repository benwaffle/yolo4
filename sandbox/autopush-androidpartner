{
    "basePath": "",
    "baseUrl": "https://autopush-androidpartner.sandbox.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Android Partner Services",
    "description": "API for accessing Android Partner Front End data.",
    "discoveryVersion": "v1",
    "documentationLink": "https://developers.google.com/android-partner",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "autopush_androidpartner_sandbox:v1",
    "kind": "discovery#restDescription",
    "name": "autopush_androidpartner_sandbox",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "build": {
            "methods": {
                "get": {
                    "description": "Get a build",
                    "flatPath": "v1/build/{buildId}",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.build.get",
                    "parameterOrder": [
                        "buildId"
                    ],
                    "parameters": {
                        "buildId": {
                            "format": "int64",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/build/{buildId}",
                    "response": {
                        "$ref": "GetBuildResponse"
                    }
                }
            }
        },
        "compatibility": {
            "methods": {
                "bulkAssignWaivers": {
                    "description": "Bulk assigns multiple waivers. Creates new waivers and updates existing\nones.",
                    "flatPath": "v1/compatibility/bulkAssignWaivers",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.compatibility.bulkAssignWaivers",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/compatibility/bulkAssignWaivers",
                    "request": {
                        "$ref": "BulkAssignWaiversRequest"
                    },
                    "response": {
                        "$ref": "BulkAssignWaiversResponse"
                    }
                }
            },
            "resources": {
                "build": {
                    "methods": {
                        "createNote": {
                            "description": "Creates a note in a build.",
                            "flatPath": "v1/compatibility/build:createNote",
                            "httpMethod": "POST",
                            "id": "autopush_androidpartner_sandbox.compatibility.build.createNote",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/build:createNote",
                            "request": {
                                "$ref": "CreateNoteRequest"
                            },
                            "response": {
                                "$ref": "CreateNoteResponse"
                            }
                        },
                        "updatePriority": {
                            "description": "Updates priority of a build.",
                            "flatPath": "v1/compatibility/build:priority",
                            "httpMethod": "PUT",
                            "id": "autopush_androidpartner_sandbox.compatibility.build.updatePriority",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/build:priority",
                            "request": {
                                "$ref": "UpdateBuildPriorityRequest"
                            },
                            "response": {
                                "$ref": "UpdateBuildPriorityResponse"
                            }
                        }
                    }
                },
                "builds": {
                    "methods": {
                        "list": {
                            "description": "Lists all builds.",
                            "flatPath": "v1/compatibility/builds",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.builds.list",
                            "parameterOrder": [],
                            "parameters": {
                                "filter": {
                                    "description": "The filter.\nUser can specify the filter to retrieve a sub list of builds, for example,\nfilter by approval status.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Size of each page.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The next_page_token value returned from a previous List request, if any.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Parent name, for example,\ndevices/136D60F1/products/87826ABE/builds",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/compatibility/builds",
                            "response": {
                                "$ref": "ListBuildsResponse"
                            }
                        }
                    }
                },
                "companies": {
                    "resources": {
                        "uploads": {
                            "methods": {
                                "get": {
                                    "description": "Gets uploaded data as a base64 string.\nFor example, GTS screenshot images can be retrieved by\nReport.screenshot_upload_id",
                                    "flatPath": "v1/compatibility/companies/{companyId}/uploads/{id}",
                                    "httpMethod": "GET",
                                    "id": "autopush_androidpartner_sandbox.compatibility.companies.uploads.get",
                                    "parameterOrder": [
                                        "companyId",
                                        "id"
                                    ],
                                    "parameters": {
                                        "companyId": {
                                            "description": "the company id associated with that item",
                                            "format": "int64",
                                            "location": "path",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "The uuid of the uploaded metadata item.",
                                            "location": "path",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/compatibility/companies/{companyId}/uploads/{id}",
                                    "response": {
                                        "$ref": "Base64Response"
                                    }
                                }
                            }
                        }
                    }
                },
                "cpus": {
                    "methods": {
                        "list": {
                            "description": "Lists CPUs.",
                            "flatPath": "v1/compatibility/cpus",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.cpus.list",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/cpus",
                            "response": {
                                "$ref": "ListCpusResponse"
                            }
                        }
                    }
                },
                "device_names": {
                    "methods": {
                        "get": {
                            "description": "Gets a device.",
                            "flatPath": "v1/compatibility/device_names/{device_namesId}",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.device_names.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "companyId": {
                                    "description": "The APFE company_id of the company this device belongs to.\nplease contact TAM if you're unsure what your company ID is.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The resource name, for example, devices/136D60F1",
                                    "location": "path",
                                    "pattern": "^device_names/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/compatibility/{+name}",
                            "response": {
                                "$ref": "Device"
                            }
                        }
                    },
                    "resources": {
                        "product_names": {
                            "methods": {
                                "get": {
                                    "description": "Gets a product.",
                                    "flatPath": "v1/compatibility/device_names/{device_namesId}/product_names/{product_namesId}",
                                    "httpMethod": "GET",
                                    "id": "autopush_androidpartner_sandbox.compatibility.device_names.product_names.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "companyId": {
                                            "description": "The APFE company_id of the company this product belongs to.\nplease contact TAM if you're unsure what your company ID is.",
                                            "format": "int64",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The resource name, for example, devices/136D60F1/products/87826ABE",
                                            "location": "path",
                                            "pattern": "^device_names/[^/]+/product_names/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/compatibility/{+name}",
                                    "response": {
                                        "$ref": "Product"
                                    }
                                }
                            },
                            "resources": {
                                "build_fingerprints": {
                                    "methods": {
                                        "get": {
                                            "description": "Gets a build.",
                                            "flatPath": "v1/compatibility/device_names/{device_namesId}/product_names/{product_namesId}/build_fingerprints/{build_fingerprintsId}",
                                            "httpMethod": "GET",
                                            "id": "autopush_androidpartner_sandbox.compatibility.device_names.product_names.build_fingerprints.get",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "The resource name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C",
                                                    "location": "path",
                                                    "pattern": "^device_names/[^/]+/product_names/[^/]+/build_fingerprints/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+name}",
                                            "response": {
                                                "$ref": "Build"
                                            }
                                        },
                                        "getAnalysis": {
                                            "description": "Gets analysis for a build.",
                                            "flatPath": "v1/compatibility/device_names/{device_namesId}/product_names/{product_namesId}/build_fingerprints/{build_fingerprintsId}:analysis",
                                            "httpMethod": "GET",
                                            "id": "autopush_androidpartner_sandbox.compatibility.device_names.product_names.build_fingerprints.getAnalysis",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "The resource name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C",
                                                    "location": "path",
                                                    "pattern": "^device_names/[^/]+/product_names/[^/]+/build_fingerprints/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+name}:analysis",
                                            "response": {
                                                "$ref": "BuildAnalysis"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "devices": {
                    "methods": {
                        "get": {
                            "description": "Gets a device.",
                            "flatPath": "v1/compatibility/devices/{devicesId}",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.devices.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "companyId": {
                                    "description": "The APFE company_id of the company this device belongs to.\nplease contact TAM if you're unsure what your company ID is.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The resource name, for example, devices/136D60F1",
                                    "location": "path",
                                    "pattern": "^devices/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/compatibility/{+name}",
                            "response": {
                                "$ref": "Device"
                            }
                        },
                        "list": {
                            "description": "Lists devices.",
                            "flatPath": "v1/compatibility/devices",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.devices.list",
                            "parameterOrder": [],
                            "parameters": {
                                "companyId": {
                                    "description": "The APFE company_id of the company that devices must belong to.\nNote: This value is 0 by default.\nNote: If this value is 0, all devices will be returned.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "filter": {
                                    "description": "The filter.\nUser can specify the filter to retrieve a sub list of devices.\neg: company=Samsung",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Size of each page.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The next_page_token value returned from a previous List request, if any.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/compatibility/devices",
                            "response": {
                                "$ref": "ListDevicesResponse"
                            }
                        },
                        "update": {
                            "description": "Updates a given device.",
                            "flatPath": "v1/compatibility/devices/{devicesId}",
                            "httpMethod": "PUT",
                            "id": "autopush_androidpartner_sandbox.compatibility.devices.update",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "The unique resource name.",
                                    "location": "path",
                                    "pattern": "^devices/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/compatibility/{+name}",
                            "request": {
                                "$ref": "Device"
                            },
                            "response": {
                                "$ref": "Device"
                            }
                        }
                    },
                    "resources": {
                        "products": {
                            "methods": {
                                "get": {
                                    "description": "Gets a product.",
                                    "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}",
                                    "httpMethod": "GET",
                                    "id": "autopush_androidpartner_sandbox.compatibility.devices.products.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "companyId": {
                                            "description": "The APFE company_id of the company this product belongs to.\nplease contact TAM if you're unsure what your company ID is.",
                                            "format": "int64",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The resource name, for example, devices/136D60F1/products/87826ABE",
                                            "location": "path",
                                            "pattern": "^devices/[^/]+/products/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/compatibility/{+name}",
                                    "response": {
                                        "$ref": "Product"
                                    }
                                },
                                "list": {
                                    "description": "Lists products.",
                                    "flatPath": "v1/compatibility/devices/{devicesId}/products",
                                    "httpMethod": "GET",
                                    "id": "autopush_androidpartner_sandbox.compatibility.devices.products.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "filter": {
                                            "description": "The filter\nWe can filter by the product launch\nstatus. There are three options: \"filter=launched=all\",\n\"filter=launched=true\", \"filter=launched=false\" which lists all products,\nlaunched product and not launched products accordingly.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "orderBy": {
                                            "description": "The order in which products are returned.\nUser can specifiy the return order by modificationInfo. The options are by\ncreation time or last modified time in ascending order. Descending order\ncan be specify by \"desc\" suffix: \"order_by=creationTimeSec\",\norder_by=\"lastModifiedTimeSec desc\"",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "Size of each page.",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "The next_page_token value returned from a previous List request, if any.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Parent name, for example, devices/136D60F1/products. If parent is specified\nwith device_id, then only products belonging to the specified device will\nbe returned. Otherwise, the response will contain all products the user\nhas access to view.",
                                            "location": "path",
                                            "pattern": "^devices/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/compatibility/{+parent}/products",
                                    "response": {
                                        "$ref": "ListProductsResponse"
                                    }
                                },
                                "update": {
                                    "description": "Updates a given product.",
                                    "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}",
                                    "httpMethod": "PUT",
                                    "id": "autopush_androidpartner_sandbox.compatibility.devices.products.update",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "The unique resource name.",
                                            "location": "path",
                                            "pattern": "^devices/[^/]+/products/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/compatibility/{+name}",
                                    "request": {
                                        "$ref": "Product"
                                    },
                                    "response": {
                                        "$ref": "Product"
                                    }
                                }
                            },
                            "resources": {
                                "builds": {
                                    "methods": {
                                        "get": {
                                            "description": "Gets a build.",
                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}",
                                            "httpMethod": "GET",
                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.get",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "The resource name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+name}",
                                            "response": {
                                                "$ref": "Build"
                                            }
                                        },
                                        "getAnalysis": {
                                            "description": "Gets analysis for a build.",
                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}:analysis",
                                            "httpMethod": "GET",
                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.getAnalysis",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "The resource name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+name}:analysis",
                                            "response": {
                                                "$ref": "BuildAnalysis"
                                            }
                                        },
                                        "list": {
                                            "description": "Lists builds.",
                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds",
                                            "httpMethod": "GET",
                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.list",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "filter": {
                                                    "description": "The filter.\nUser can specify the filter to retrieve a sub list of builds, for example,\nfilter by approval status.",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "pageSize": {
                                                    "description": "Size of each page.",
                                                    "format": "int32",
                                                    "location": "query",
                                                    "type": "integer"
                                                },
                                                "pageToken": {
                                                    "description": "The next_page_token value returned from a previous List request, if any.",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "parent": {
                                                    "description": "Parent name, for example,\ndevices/136D60F1/products/87826ABE/builds",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/products/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+parent}/builds",
                                            "response": {
                                                "$ref": "ListBuildsResponse"
                                            }
                                        },
                                        "update": {
                                            "description": "Updates a given build.",
                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}",
                                            "httpMethod": "PUT",
                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.update",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "The unique resource name, same as APFE Build.apfeId",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+name}",
                                            "request": {
                                                "$ref": "Build"
                                            },
                                            "response": {
                                                "$ref": "Build"
                                            }
                                        }
                                    },
                                    "resources": {
                                        "nreports": {
                                            "methods": {
                                                "list": {
                                                    "description": "Lists the n most recent reports per report type.",
                                                    "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}/nreports",
                                                    "httpMethod": "GET",
                                                    "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.nreports.list",
                                                    "parameterOrder": [
                                                        "parent"
                                                    ],
                                                    "parameters": {
                                                        "excludeReportTypes": {
                                                            "description": "The specific report types to include. Includes all types if unset.",
                                                            "enum": [
                                                                "REPORT_TYPE_UNKNOWN",
                                                                "CTS",
                                                                "CTS_VERIFIER",
                                                                "GTS",
                                                                "CAT",
                                                                "WTS",
                                                                "WTS_VERIFIER",
                                                                "TVTS",
                                                                "CRT",
                                                                "PCTS",
                                                                "VTS",
                                                                "ATS",
                                                                "ATS_VERIFIER",
                                                                "GOTS",
                                                                "BTS",
                                                                "BTS_V2",
                                                                "STS",
                                                                "CTS_INSTANT"
                                                            ],
                                                            "location": "query",
                                                            "repeated": true,
                                                            "type": "string"
                                                        },
                                                        "excludeTestProblems": {
                                                            "description": "Exclude listing unsuccessful tests in ListNReportsResponse.",
                                                            "location": "query",
                                                            "type": "boolean"
                                                        },
                                                        "includeReportTypes": {
                                                            "description": "The specific report types to include. Includes all types if unset.",
                                                            "enum": [
                                                                "REPORT_TYPE_UNKNOWN",
                                                                "CTS",
                                                                "CTS_VERIFIER",
                                                                "GTS",
                                                                "CAT",
                                                                "WTS",
                                                                "WTS_VERIFIER",
                                                                "TVTS",
                                                                "CRT",
                                                                "PCTS",
                                                                "VTS",
                                                                "ATS",
                                                                "ATS_VERIFIER",
                                                                "GOTS",
                                                                "BTS",
                                                                "BTS_V2",
                                                                "STS",
                                                                "CTS_INSTANT"
                                                            ],
                                                            "location": "query",
                                                            "repeated": true,
                                                            "type": "string"
                                                        },
                                                        "n": {
                                                            "description": "The number of reports of each ReportType to return.",
                                                            "format": "int32",
                                                            "location": "query",
                                                            "type": "integer"
                                                        },
                                                        "parent": {
                                                            "description": "Parent name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C/reports",
                                                            "location": "path",
                                                            "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+$",
                                                            "required": true,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "path": "v1/compatibility/{+parent}/nreports",
                                                    "response": {
                                                        "$ref": "ListNReportsResponse"
                                                    }
                                                }
                                            }
                                        },
                                        "reports": {
                                            "methods": {
                                                "get": {
                                                    "description": "Gets a report.",
                                                    "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}/reports/{reportsId}",
                                                    "httpMethod": "GET",
                                                    "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.reports.get",
                                                    "parameterOrder": [
                                                        "name"
                                                    ],
                                                    "parameters": {
                                                        "name": {
                                                            "description": "The resource name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C/reports/4D08A640",
                                                            "location": "path",
                                                            "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+/reports/[^/]+$",
                                                            "required": true,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "path": "v1/compatibility/{+name}",
                                                    "response": {
                                                        "$ref": "Report"
                                                    }
                                                },
                                                "list": {
                                                    "description": "Lists reports.",
                                                    "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}/reports",
                                                    "httpMethod": "GET",
                                                    "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.reports.list",
                                                    "parameterOrder": [
                                                        "parent"
                                                    ],
                                                    "parameters": {
                                                        "excludeTestProblems": {
                                                            "description": "Exclude listing unsuccessful tests in ListReportsResponse.",
                                                            "location": "query",
                                                            "type": "boolean"
                                                        },
                                                        "filter": {
                                                            "description": "The filter.\nUser can specify the filter to retrieve a sub list of reports, for example,\nfilter by test_suite_type.",
                                                            "location": "query",
                                                            "type": "string"
                                                        },
                                                        "pageSize": {
                                                            "description": "Size of each page.",
                                                            "format": "int32",
                                                            "location": "query",
                                                            "type": "integer"
                                                        },
                                                        "pageToken": {
                                                            "description": "The next_page_token value returned from a previous List request, if any.",
                                                            "location": "query",
                                                            "type": "string"
                                                        },
                                                        "parent": {
                                                            "description": "Parent name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C/reports",
                                                            "location": "path",
                                                            "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+$",
                                                            "required": true,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "path": "v1/compatibility/{+parent}/reports",
                                                    "response": {
                                                        "$ref": "ListReportsResponse"
                                                    }
                                                }
                                            },
                                            "resources": {
                                                "tests": {
                                                    "methods": {
                                                        "get": {
                                                            "description": "Gets a test.",
                                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}/reports/{reportsId}/tests/{testsId}",
                                                            "httpMethod": "GET",
                                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.reports.tests.get",
                                                            "parameterOrder": [
                                                                "name"
                                                            ],
                                                            "parameters": {
                                                                "name": {
                                                                    "description": "The resource name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C/reports/4D08A640/tests\n/android.webkit.cts.WebViewTest.testSetInitialScale",
                                                                    "location": "path",
                                                                    "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+/reports/[^/]+/tests/.+$",
                                                                    "required": true,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "path": "v1/compatibility/{+name}",
                                                            "response": {
                                                                "$ref": "TestResult"
                                                            }
                                                        }
                                                    }
                                                },
                                                "waivers": {
                                                    "methods": {
                                                        "get": {
                                                            "description": "Gets a waiver.",
                                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}/reports/{reportsId}/waivers/{waiversId}",
                                                            "httpMethod": "GET",
                                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.reports.waivers.get",
                                                            "parameterOrder": [
                                                                "name"
                                                            ],
                                                            "parameters": {
                                                                "name": {
                                                                    "description": "The resource name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C/reports/4D08A640/waivers/9E5A4A6E",
                                                                    "location": "path",
                                                                    "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+/reports/[^/]+/waivers/[^/]+$",
                                                                    "required": true,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "path": "v1/compatibility/{+name}",
                                                            "response": {
                                                                "$ref": "Waiver"
                                                            }
                                                        },
                                                        "list": {
                                                            "description": "Lists waivers.",
                                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}/reports/{reportsId}/waivers",
                                                            "httpMethod": "GET",
                                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.reports.waivers.list",
                                                            "parameterOrder": [
                                                                "parent"
                                                            ],
                                                            "parameters": {
                                                                "filter": {
                                                                    "description": "The filter.\nUser can specify the filter to retrieve a sub list of waivers, for example,\nfilter by test IDs.",
                                                                    "location": "query",
                                                                    "type": "string"
                                                                },
                                                                "pageSize": {
                                                                    "description": "Size of each page.",
                                                                    "format": "int32",
                                                                    "location": "query",
                                                                    "type": "integer"
                                                                },
                                                                "pageToken": {
                                                                    "description": "The next_page_token value returned from a previous List request, if any.",
                                                                    "location": "query",
                                                                    "type": "string"
                                                                },
                                                                "parent": {
                                                                    "description": "Parent name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C/reports/4D08A640/waivers",
                                                                    "location": "path",
                                                                    "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+/reports/[^/]+$",
                                                                    "required": true,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "path": "v1/compatibility/{+parent}/waivers",
                                                            "response": {
                                                                "$ref": "ListWaiversResponse"
                                                            }
                                                        },
                                                        "update": {
                                                            "description": "Updates a waiver.",
                                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/builds/{buildsId}/reports/{reportsId}/waivers/{waiversId}",
                                                            "httpMethod": "PUT",
                                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.builds.reports.waivers.update",
                                                            "parameterOrder": [
                                                                "name"
                                                            ],
                                                            "parameters": {
                                                                "name": {
                                                                    "description": "The unique resource name.",
                                                                    "location": "path",
                                                                    "pattern": "^devices/[^/]+/products/[^/]+/builds/[^/]+/reports/[^/]+/waivers/[^/]+$",
                                                                    "required": true,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "path": "v1/compatibility/{+name}",
                                                            "request": {
                                                                "$ref": "Waiver"
                                                            },
                                                            "response": {
                                                                "$ref": "Waiver"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "otas": {
                                    "methods": {
                                        "create": {
                                            "description": "Creates a new OTA deployment group.",
                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/otas",
                                            "httpMethod": "POST",
                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.otas.create",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Parent name of the resource, ex. \"devices/0A8598B6/products/8C7D015F/otas\"",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/products/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+parent}/otas",
                                            "request": {
                                                "$ref": "CreateNewOtaDeploymentRequest"
                                            },
                                            "response": {
                                                "$ref": "OtaDeploymentGroup"
                                            }
                                        },
                                        "list": {
                                            "description": "Returns the list of OTA deployment groups for a product.",
                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/otas",
                                            "httpMethod": "GET",
                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.otas.list",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "parent": {
                                                    "description": "Parent name of the resource, ex. \"devices/0A8598B6/products/8C7D015F/otas\"",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/products/[^/]+/otas$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+parent}",
                                            "response": {
                                                "$ref": "ListOtaDeploymentGroupsForProductResponse"
                                            }
                                        },
                                        "update": {
                                            "description": "Updates user permissions for an OTA deployment group.",
                                            "flatPath": "v1/compatibility/devices/{devicesId}/products/{productsId}/otas/{otasId}",
                                            "httpMethod": "PUT",
                                            "id": "autopush_androidpartner_sandbox.compatibility.devices.products.otas.update",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "The resource name for OTA deployment\nOTA deployment name have the form\n`devices/{device_id}/products/{product_id}/otas/{ota_deployment_group_name}`\nThis group name is auto-assigned during CreateNewOtaDeployment",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/products/[^/]+/otas/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/compatibility/{+name}",
                                            "request": {
                                                "$ref": "OtaDeploymentGroup"
                                            },
                                            "response": {
                                                "$ref": "OtaDeploymentGroup"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "formfactors": {
                    "methods": {
                        "list": {
                            "description": "List FormFactor options for a certain company",
                            "flatPath": "v1/compatibility/formfactors",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.formfactors.list",
                            "parameterOrder": [],
                            "parameters": {
                                "companyId": {
                                    "description": "The Unique identifier of the company.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/compatibility/formfactors",
                            "response": {
                                "$ref": "ListFormFactorsResponse"
                            }
                        }
                    }
                },
                "odms": {
                    "methods": {
                        "list": {
                            "description": "Lists Original Design Manufacturers (ODMs).",
                            "flatPath": "v1/compatibility/odms",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.odms.list",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/odms",
                            "response": {
                                "$ref": "ListOdmsResponse"
                            }
                        }
                    }
                },
                "products": {
                    "methods": {
                        "list": {
                            "description": "Lists all products.",
                            "flatPath": "v1/compatibility/products",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.products.list",
                            "parameterOrder": [],
                            "parameters": {
                                "filter": {
                                    "description": "The filter\nWe can filter by the product launch\nstatus. There are three options: \"filter=launched=all\",\n\"filter=launched=true\", \"filter=launched=false\" which lists all products,\nlaunched product and not launched products accordingly.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "orderBy": {
                                    "description": "The order in which products are returned.\nUser can specifiy the return order by modificationInfo. The options are by\ncreation time or last modified time in ascending order. Descending order\ncan be specify by \"desc\" suffix: \"order_by=creationTimeSec\",\norder_by=\"lastModifiedTimeSec desc\"",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Size of each page.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The next_page_token value returned from a previous List request, if any.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Parent name, for example, devices/136D60F1/products. If parent is specified\nwith device_id, then only products belonging to the specified device will\nbe returned. Otherwise, the response will contain all products the user\nhas access to view.",
                                    "location": "query",
                                    "type": "string"
                                }
                            },
                            "path": "v1/compatibility/products",
                            "response": {
                                "$ref": "ListProductsResponse"
                            }
                        }
                    }
                },
                "report": {
                    "methods": {
                        "create": {
                            "description": "Creates a new report.",
                            "flatPath": "v1/compatibility/report",
                            "httpMethod": "POST",
                            "id": "autopush_androidpartner_sandbox.compatibility.report.create",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/report",
                            "request": {
                                "$ref": "CreateReportRequest"
                            },
                            "response": {
                                "$ref": "Report"
                            }
                        },
                        "downloadReport": {
                            "description": "Downloads an Apk for a given play auto install ID.",
                            "flatPath": "v1/compatibility/report:downloadReport",
                            "httpMethod": "POST",
                            "id": "autopush_androidpartner_sandbox.compatibility.report.downloadReport",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/report:downloadReport",
                            "request": {
                                "$ref": "DownloadReportRequest"
                            },
                            "response": {
                                "$ref": "DownloadReportResponse"
                            }
                        },
                        "startUploadReport": {
                            "description": "Creates an upload session to start uploading apk data. The resource name\nof the returned ApkDataRef is used in creating play auto install.",
                            "flatPath": "v1/compatibility/report:startUploadReport",
                            "httpMethod": "POST",
                            "id": "autopush_androidpartner_sandbox.compatibility.report.startUploadReport",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/report:startUploadReport",
                            "request": {
                                "$ref": "Empty"
                            },
                            "response": {
                                "$ref": "StartUploadReportResponse"
                            }
                        }
                    }
                },
                "retailbrandings": {
                    "methods": {
                        "list": {
                            "description": "Lists retail brandingss.",
                            "flatPath": "v1/compatibility/retailbrandings",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.compatibility.retailbrandings.list",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/retailbrandings",
                            "response": {
                                "$ref": "ListRetailBrandingsResponse"
                            }
                        }
                    }
                },
                "waiver": {
                    "methods": {
                        "create": {
                            "description": "Creates a new waiver.",
                            "flatPath": "v1/compatibility/waiver",
                            "httpMethod": "POST",
                            "id": "autopush_androidpartner_sandbox.compatibility.waiver.create",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/compatibility/waiver",
                            "request": {
                                "$ref": "CreateWaiverRequest"
                            },
                            "response": {
                                "$ref": "Waiver"
                            }
                        }
                    }
                }
            }
        },
        "connectivity": {
            "methods": {
                "convertConnectivityConfigInApk": {
                    "description": "Convert the connectivity config in an uploaded config APK",
                    "flatPath": "v1/connectivity:convertConnectivityConfigInApk",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.connectivity.convertConnectivityConfigInApk",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/connectivity:convertConnectivityConfigInApk",
                    "request": {
                        "$ref": "ConvertConnectivityConfigInApkRequest"
                    },
                    "response": {
                        "$ref": "ConvertConnectivityConfigInApkResponse"
                    }
                },
                "startUploadApk": {
                    "description": "Creates an upload session to start uploading config APK. The resource name\nof the returned ApkDataRef is used in conversion.",
                    "flatPath": "v1/connectivity:startUploadApk",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.connectivity.startUploadApk",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/connectivity:startUploadApk",
                    "request": {
                        "$ref": "Empty"
                    },
                    "response": {
                        "$ref": "StartUploadConfigApkResponse"
                    }
                }
            }
        },
        "dynamicconfig": {
            "resources": {
                "suites": {
                    "resources": {
                        "modules": {
                            "resources": {
                                "version": {
                                    "methods": {
                                        "get": {
                                            "description": "Retrieves the dynamic configuration corresponding to the suite, module,\nand version specified in the DynamicConfigRequest.",
                                            "flatPath": "v1/dynamicconfig/suites/{suitesId}/modules/{modulesId}/version/{versionId}",
                                            "httpMethod": "GET",
                                            "id": "autopush_androidpartner_sandbox.dynamicconfig.suites.modules.version.get",
                                            "parameterOrder": [
                                                "name"
                                            ],
                                            "parameters": {
                                                "name": {
                                                    "description": "Relative resource name.\nExample for dynamic config of cts module CtsSampleDeviceTestCases, v1:\n\"dynamicconfig/suites/cts/modules/CtsSampleDeviceTestCases/1\".",
                                                    "location": "path",
                                                    "pattern": "^dynamicconfig/suites/[^/]+/modules/[^/]+/version/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1/{+name}",
                                            "response": {
                                                "$ref": "DynamicConfig"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "firmware": {
            "methods": {
                "get": {
                    "description": "Get a firmware",
                    "flatPath": "v1/firmware/{firmwareId}",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.firmware.get",
                    "parameterOrder": [
                        "firmwareId"
                    ],
                    "parameters": {
                        "firmwareId": {
                            "format": "int64",
                            "location": "path",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/firmware/{firmwareId}",
                    "response": {
                        "$ref": "GetFirmwareResponse"
                    }
                }
            }
        },
        "firmwares": {
            "methods": {
                "list": {
                    "description": "List firmwares",
                    "flatPath": "v1/firmwares",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.firmwares.list",
                    "parameterOrder": [],
                    "parameters": {
                        "pageSize": {
                            "description": "Size of each page.\nNote: This value is 29 by default.\nNote: This value must be positive number.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/firmwares",
                    "response": {
                        "$ref": "ListFirmwaresResponse"
                    }
                }
            },
            "resources": {
                "companies": {
                    "methods": {
                        "list": {
                            "description": "Lists all companies user has access to.",
                            "flatPath": "v1/firmwares/companies",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.firmwares.companies.list",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/firmwares/companies",
                            "response": {
                                "$ref": "FirmwareListAllCompaniesResponse"
                            }
                        }
                    }
                },
                "create": {
                    "methods": {
                        "create": {
                            "description": "Create firmware.\nWorkflow: First UploadFirmware, then CreateFirmware with the returned\nupload ref.",
                            "flatPath": "v1/firmwares/create",
                            "httpMethod": "POST",
                            "id": "autopush_androidpartner_sandbox.firmwares.create.create",
                            "parameterOrder": [],
                            "parameters": {},
                            "path": "v1/firmwares/create",
                            "request": {
                                "$ref": "CreateFirmwareRequest"
                            },
                            "response": {
                                "$ref": "CreateFirmwareResponse"
                            }
                        }
                    }
                }
            }
        },
        "keyboxcohorts": {
            "methods": {
                "create": {
                    "description": "Creates a KeyboxCohort which contains a collection of Keyboxes.\n\nTo create a KeyboxCohort, the client needs to provide device name,\nkeybox type and a list of device IDs in form of a CSV file.\nFor each device ID, one keybox will be generated.\n\nThe service returns a `google.longrunning.Operation` that can be used\nto retrieve the status of the Keybox generation.\n\nPlease note [CreateKeyboxCohort] and [StreamCreateKeyboxCohort] both\ncreate KeyboxCohort the same way, but they receive device IDs from\nrequests in different formats.",
                    "flatPath": "v1/keyboxcohorts",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.keyboxcohorts.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/keyboxcohorts",
                    "request": {
                        "$ref": "CreateKeyboxCohortRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    }
                },
                "get": {
                    "description": "Gets a KeyboxCohort.",
                    "flatPath": "v1/keyboxcohorts/{keyboxcohortsId}",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.keyboxcohorts.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "creatorCompanyId": {
                            "description": "Creator company ID.",
                            "format": "int64",
                            "location": "query",
                            "type": "string"
                        },
                        "deviceName": {
                            "description": "Device name.\nFor example, \"shamu\" is the device name for Nexus 6.\nIt is an error if the value of device_name does not\nmatch the device_name of provided when creating the\nKeyboxCohort.",
                            "location": "query",
                            "type": "string"
                        },
                        "name": {
                            "description": "Unique resource name for a given KeyboxCohort.",
                            "location": "path",
                            "pattern": "^keyboxcohorts/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "KeyboxCohort"
                    }
                },
                "list": {
                    "description": "Lists KeyboxCohorts.",
                    "flatPath": "v1/keyboxcohorts",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.keyboxcohorts.list",
                    "parameterOrder": [],
                    "parameters": {
                        "filter": {
                            "description": "The filter.\nUser can specify the filter to retrieve a sublist of KeyboxCohorts.\nCurrently we can filter by companyId. There are two options:\n\"filter=company=all\" will list all KeyboxCohorts;\n\"filter=company=12345\" will list only KeyboxCohorts owned\nthe company whose id is 12345.",
                            "location": "query",
                            "type": "string"
                        },
                        "orderBy": {
                            "description": "The list is ordered by creation time in descending order.\nIf order_by = \"asc\", the list will be returned in ascending order.",
                            "location": "query",
                            "type": "string"
                        },
                        "pageSize": {
                            "description": "Size of each page.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "The next_page_token value returned from a previous List request, if any.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/keyboxcohorts",
                    "response": {
                        "$ref": "ListKeyboxCohortsResponse"
                    }
                },
                "streamCreateKeyboxCohort": {
                    "description": "StreamCreateKeyboxCohort creates a KeyboxCohort and a collection of\nKeyboxes from a stream of device IDs.\n\nTo create a KeyboxCohort, the client streams\n`StreamCreateKeyboxCohortRequest` messages to the server, each of which\ncontains multiple device_ids. Each message in the stream must not exceed\nthe message size limitation enforced by the server which is 1M bytes.\nIt is an error for messages in the stream to have different values for the\n'device_name' or 'type' fields.\"\n\nThe service returns a `google.longrunning.Operation` that can be used\nto retrieve the status of the Keybox generation. For more information,\nsee Operations at\nhttps://cloud.google.com/appengine/docs/admin-pi/reference/rpc/google.longrunning#operation",
                    "flatPath": "v1/keyboxcohorts:streamCreateKeyboxCohort",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.keyboxcohorts.streamCreateKeyboxCohort",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/keyboxcohorts:streamCreateKeyboxCohort",
                    "request": {
                        "$ref": "StreamCreateKeyboxCohortRequest"
                    },
                    "response": {
                        "$ref": "Operation"
                    }
                }
            },
            "resources": {
                "keyboxes": {
                    "methods": {
                        "list": {
                            "description": "List the Keyboxes for a given KeyboxCohort.",
                            "flatPath": "v1/keyboxcohorts/{keyboxcohortsId}/keyboxes",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.keyboxcohorts.keyboxes.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "creatorCompanyId": {
                                    "description": "Creator company ID.",
                                    "format": "int64",
                                    "location": "query",
                                    "type": "string"
                                },
                                "deviceName": {
                                    "description": "Device name.\nFor example, \"shamu\" is the device name for Nexus 6.\nIt is an error if the value of device_name does not\nmatch the device_name of the parent KeyboxCohort.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "pageSize": {
                                    "description": "Size of each page.",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "The next_page_token value returned from a previous List request, if any.",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Parent name.",
                                    "location": "path",
                                    "pattern": "^keyboxcohorts/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+parent}/keyboxes",
                            "response": {
                                "$ref": "ListKeyboxesResponse"
                            }
                        }
                    }
                }
            }
        },
        "media": {
            "methods": {
                "download": {
                    "description": "Downloads media. Download is supported\non the URI `/v1/media/{+name}?alt=media`.",
                    "flatPath": "v1/media/{mediaId}",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.media.download",
                    "parameterOrder": [
                        "resourceName"
                    ],
                    "parameters": {
                        "resourceName": {
                            "description": "Name of the media that is being downloaded.  See\nReadRequest.resource_name.",
                            "location": "path",
                            "pattern": "^.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/media/{+resourceName}",
                    "response": {
                        "$ref": "Media"
                    },
                    "supportsMediaDownload": true
                },
                "upload": {
                    "description": "Uploads media. Upload is supported on\nthe URI `/upload/v1/media/{+name}`.",
                    "flatPath": "v1/media/{mediaId}",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.media.upload",
                    "mediaUpload": {
                        "accept": [
                            "*/*"
                        ],
                        "protocols": {
                            "simple": {
                                "multipart": true,
                                "path": "/upload/v1/media/{+resourceName}"
                            }
                        }
                    },
                    "parameterOrder": [
                        "resourceName"
                    ],
                    "parameters": {
                        "resourceName": {
                            "description": "Name of the media that is being downloaded.  See\nReadRequest.resource_name.",
                            "location": "path",
                            "pattern": "^.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/media/{+resourceName}",
                    "request": {
                        "$ref": "Media"
                    },
                    "response": {
                        "$ref": "Media"
                    },
                    "supportsMediaUpload": true
                }
            }
        },
        "operations": {
            "methods": {
                "cancel": {
                    "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.",
                    "flatPath": "v1/operations/{operationsId}:cancel",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.operations.cancel",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource to be cancelled.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:cancel",
                    "request": {
                        "$ref": "CancelOperationRequest"
                    },
                    "response": {
                        "$ref": "Empty"
                    }
                },
                "delete": {
                    "description": "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.",
                    "flatPath": "v1/operations/{operationsId}",
                    "httpMethod": "DELETE",
                    "id": "autopush_androidpartner_sandbox.operations.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource to be deleted.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Empty"
                    }
                },
                "get": {
                    "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
                    "flatPath": "v1/operations/{operationsId}",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.operations.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "The name of the operation resource.",
                            "location": "path",
                            "pattern": "^operations/.+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Operation"
                    }
                },
                "list": {
                    "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
                    "flatPath": "v1/operations",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.operations.list",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "filter": {
                            "description": "The standard list filter.",
                            "location": "query",
                            "type": "string"
                        },
                        "name": {
                            "description": "The name of the operation's parent resource.",
                            "location": "path",
                            "pattern": "^operations$",
                            "required": true,
                            "type": "string"
                        },
                        "pageSize": {
                            "description": "The standard list page size.",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "The standard list page token.",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "ListOperationsResponse"
                    }
                }
            }
        },
        "playAutoInstallGroups": {
            "methods": {
                "get": {
                    "description": "Gets the play auto install group definition.",
                    "flatPath": "v1/playAutoInstallGroups/{playAutoInstallGroupsId}",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.playAutoInstallGroups.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Relative resource name,\nfor example: \"playautoinstalls/play_auto_install_id\".",
                            "location": "path",
                            "pattern": "^playAutoInstallGroups/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "GetPlayAutoInstallGroupsResponse"
                    }
                }
            }
        },
        "playAutoInstalls": {
            "methods": {
                "create": {
                    "description": "Creates a new play auto install.\nClient must only fill out `config` in request. CreatePlayAutoInstall will\nreturn `id` and a list of `application` along with `config` back to client.",
                    "flatPath": "v1/playAutoInstalls",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.create",
                    "parameterOrder": [],
                    "parameters": {
                        "apkRef": {
                            "description": "An uniqe id that references an already uploaded APK.\nThe `apk_ref` is returned by server by calling\nStartUploadPlayAutoInstallApk.",
                            "location": "query",
                            "type": "string"
                        },
                        "isCopy": {
                            "description": "Indicates if this create request was made from a copy",
                            "location": "query",
                            "type": "boolean"
                        }
                    },
                    "path": "v1/playAutoInstalls",
                    "request": {
                        "$ref": "PlayAutoInstall"
                    },
                    "response": {
                        "$ref": "PlayAutoInstall"
                    }
                },
                "delete": {
                    "description": "Deletes a play auto install.",
                    "flatPath": "v1/playAutoInstalls/{playAutoInstallsId}",
                    "httpMethod": "DELETE",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.delete",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Relative resource name,\nfor example: \"playautoinstalls/play_auto_install\".",
                            "location": "path",
                            "pattern": "^playAutoInstalls/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "Empty"
                    }
                },
                "downloadApk": {
                    "description": "Downloads an Apk for a given play auto install ID.",
                    "flatPath": "v1/playAutoInstalls:downloadApk",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.downloadApk",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/playAutoInstalls:downloadApk",
                    "request": {
                        "$ref": "DownloadPlayAutoInstallApkRequest"
                    },
                    "response": {
                        "$ref": "DownloadPlayAutoInstallApkResponse"
                    }
                },
                "downloadAtvCustomizationFile": {
                    "description": "Downloads the customization file for a given play auto install ID.",
                    "flatPath": "v1/playAutoInstalls:downloadAtvCustomizationFile",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.downloadAtvCustomizationFile",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/playAutoInstalls:downloadAtvCustomizationFile",
                    "request": {
                        "$ref": "DownloadAtvCustomizationFileRequest"
                    },
                    "response": {
                        "$ref": "DownloadAtvCustomizationFileResponse"
                    }
                },
                "downloadHardwareIdsFile": {
                    "description": "Downloads the hardwareIds file for a given play auto install ID.",
                    "flatPath": "v1/playAutoInstalls:downloadHardwareIdsFile",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.downloadHardwareIdsFile",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/playAutoInstalls:downloadHardwareIdsFile",
                    "request": {
                        "$ref": "DownloadHardwareIdsFileRequest"
                    },
                    "response": {
                        "$ref": "DownloadHardwareIdsFileResponse"
                    }
                },
                "get": {
                    "description": "Gets an existing play auto install.",
                    "flatPath": "v1/playAutoInstalls/{playAutoInstallsId}",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Relative resource name,\nfor example: \"playautoinstalls/play_auto_install_id\".",
                            "location": "path",
                            "pattern": "^playAutoInstalls/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "response": {
                        "$ref": "PlayAutoInstall"
                    }
                },
                "list": {
                    "description": "Lists play auto installs for a product.",
                    "flatPath": "v1/playAutoInstalls",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.list",
                    "parameterOrder": [],
                    "parameters": {
                        "productId": {
                            "description": "Relative resource name,\nfor example: \"product/product_id\".",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1/playAutoInstalls",
                    "response": {
                        "$ref": "ListPlayAutoInstallResponse"
                    }
                },
                "publish": {
                    "description": "Pushes a play auto install to play store.",
                    "flatPath": "v1/playAutoInstalls/{playAutoInstallsId}:publish",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.publish",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Relative resource name, client must specify product_id in URL.\nfor example: \"playautoinstalls/AE9E187D\".",
                            "location": "path",
                            "pattern": "^playAutoInstalls/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}:publish",
                    "request": {
                        "$ref": "PublishPlayAutoInstallRequest"
                    },
                    "response": {
                        "$ref": "PublishPlayAutoInstallResponse"
                    }
                },
                "startAtvUploadCustomizationFile": {
                    "description": "Creates an upload session to start uploading a customization file.",
                    "flatPath": "v1/playAutoInstalls:startAtvUploadCustomizationFile",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.startAtvUploadCustomizationFile",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/playAutoInstalls:startAtvUploadCustomizationFile",
                    "request": {
                        "$ref": "Empty"
                    },
                    "response": {
                        "$ref": "StartUploadAtvCustomizationFileResponse"
                    }
                },
                "startUploadApk": {
                    "description": "Creates an upload session to start uploading apk data. The resource name\nof the returned ApkDataRef is used in creating play auto install.",
                    "flatPath": "v1/playAutoInstalls:startUploadApk",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.startUploadApk",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/playAutoInstalls:startUploadApk",
                    "request": {
                        "$ref": "Empty"
                    },
                    "response": {
                        "$ref": "StartUploadPlayAutoInstallApkResponse"
                    }
                },
                "startUploadHardwareIdsFile": {
                    "description": "Creates an upload session to start uploading hardwareIds file.",
                    "flatPath": "v1/playAutoInstalls:startUploadHardwareIdsFile",
                    "httpMethod": "POST",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.startUploadHardwareIdsFile",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/playAutoInstalls:startUploadHardwareIdsFile",
                    "request": {
                        "$ref": "Empty"
                    },
                    "response": {
                        "$ref": "StartUploadHardwareIdsFileResponse"
                    }
                },
                "update": {
                    "description": "Updates a play auto install.",
                    "flatPath": "v1/playAutoInstalls/{playAutoInstallsId}",
                    "httpMethod": "PUT",
                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.update",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Relative resource name,\nfor example: \"playautoinstalls/play_auto_install_id\".",
                            "location": "path",
                            "pattern": "^playAutoInstalls/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1/{+name}",
                    "request": {
                        "$ref": "PlayAutoInstallConfig"
                    },
                    "response": {
                        "$ref": "UpdatePlayAutoInstallResponse"
                    }
                }
            },
            "resources": {
                "fingerprint": {
                    "resources": {
                        "country": {
                            "resources": {
                                "carrier": {
                                    "resources": {
                                        "roOemKey1": {
                                            "methods": {
                                                "simulate": {
                                                    "description": "Simulates matching a play auto install configuration.",
                                                    "flatPath": "v1/playAutoInstalls/{playAutoInstallsId}/fingerprint/{fingerprintId}/country/{countryId}/carrier/{carrierId}/roOemKey1/{roOemKey1Id}:simulate",
                                                    "httpMethod": "POST",
                                                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.fingerprint.country.carrier.roOemKey1.simulate",
                                                    "parameterOrder": [
                                                        "name"
                                                    ],
                                                    "parameters": {
                                                        "name": {
                                                            "description": "Relative resource name,\nclient must specify product_id, fingerprint, country code and carrier ID\nin URL. for example:\n\"playautoinstalls/AE9E187D/fingerprint/google/country/US/carrier/12345\".",
                                                            "location": "path",
                                                            "pattern": "^playAutoInstalls/[^/]+/fingerprint/[^/]+/country/[^/]+/carrier/[^/]+/roOemKey1/[^/]+$",
                                                            "required": true,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "path": "v1/{+name}:simulate",
                                                    "request": {
                                                        "$ref": "SimulatePlayAutoInstallRequest"
                                                    },
                                                    "response": {
                                                        "$ref": "SimulatePlayAutoInstallResponse"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "productId": {
                    "resources": {
                        "newOrder": {
                            "methods": {
                                "changeorder": {
                                    "description": "Changes order of a play auto install.",
                                    "flatPath": "v1/playAutoInstalls/{playAutoInstallsId}/productId/{productIdId}/newOrder/{newOrderId}:changeorder",
                                    "httpMethod": "POST",
                                    "id": "autopush_androidpartner_sandbox.playAutoInstalls.productId.newOrder.changeorder",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Relative resource name,\nclient must specify play auto install id, new evaluation order and\nproduct id in URL. for example:\n\"playautoinstalls/CD9AE9D/productId/AE9E187D/newOrder/2\".",
                                            "location": "path",
                                            "pattern": "^playAutoInstalls/[^/]+/productId/[^/]+/newOrder/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1/{+name}:changeorder",
                                    "request": {
                                        "$ref": "ChangePlayAutoInstallOrderRequest"
                                    },
                                    "response": {
                                        "$ref": "ChangePlayAutoInstallOrderResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "playAutoInstallsCarriers": {
            "methods": {
                "list": {
                    "description": "Lists carriers and country code.",
                    "flatPath": "v1/playAutoInstallsCarriers",
                    "httpMethod": "GET",
                    "id": "autopush_androidpartner_sandbox.playAutoInstallsCarriers.list",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1/playAutoInstallsCarriers",
                    "response": {
                        "$ref": "ListCarriersResponse"
                    }
                }
            }
        },
        "xtsBusinessLogic": {
            "resources": {
                "suites": {
                    "methods": {
                        "get": {
                            "description": "Retrieves the business logic for the test suite.",
                            "flatPath": "v1/xtsBusinessLogic/suites/{suitesId}",
                            "httpMethod": "GET",
                            "id": "autopush_androidpartner_sandbox.xtsBusinessLogic.suites.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Relative resource name of the business logic.\nFor example: \"xtsBusinessLogic/suites/gts\".",
                                    "location": "path",
                                    "pattern": "^xtsBusinessLogic/suites/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}",
                            "response": {
                                "$ref": "XtsBusinessLogic"
                            }
                        },
                        "select": {
                            "description": "Custom method that retrieves a subset of business logic for the test suite\nby applying filters on BusinessLogicRules.",
                            "flatPath": "v1/xtsBusinessLogic/suites/{suitesId}:select",
                            "httpMethod": "POST",
                            "id": "autopush_androidpartner_sandbox.xtsBusinessLogic.suites.select",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Relative resource name of the business logic. Required.\nFor example: \"xtsBusinessLogic/suites/gts\".",
                                    "location": "path",
                                    "pattern": "^xtsBusinessLogic/suites/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1/{+name}:select",
                            "request": {
                                "$ref": "SelectXtsBusinessLogicRequest"
                            },
                            "response": {
                                "$ref": "XtsBusinessLogic"
                            }
                        }
                    }
                }
            }
        }
    },
    "revision": "20190919",
    "rootUrl": "https://autopush-androidpartner.sandbox.googleapis.com/",
    "schemas": {
        "AndroidAttestationCertificate": {
            "description": "Android Attestation certificate.",
            "id": "AndroidAttestationCertificate",
            "properties": {
                "format": {
                    "description": "Android Attestation certificate format, for example: pem.",
                    "type": "string"
                },
                "key": {
                    "description": "Android Attestation certificate value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AndroidAttestationCertificateChain": {
            "description": "Android Attestation certificate chain.",
            "id": "AndroidAttestationCertificateChain",
            "properties": {
                "certificate": {
                    "description": "A list of Android Attestation certificates.",
                    "items": {
                        "$ref": "AndroidAttestationCertificate"
                    },
                    "type": "array"
                },
                "numberOfCertificates": {
                    "description": "Number of Android Attestation certificate.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AndroidAttestationKey": {
            "description": "Android Attestation key.",
            "id": "AndroidAttestationKey",
            "properties": {
                "algorithm": {
                    "description": "Android Attestation key algorithm name.",
                    "type": "string"
                },
                "certificateChain": {
                    "$ref": "AndroidAttestationCertificateChain",
                    "description": "Android Attestation cerfificate chain."
                },
                "privateKey": {
                    "$ref": "AndroidAttestationPrivateKey",
                    "description": "Android Attestation private key."
                }
            },
            "type": "object"
        },
        "AndroidAttestationKeybox": {
            "description": "Android Attestation Keybox.",
            "id": "AndroidAttestationKeybox",
            "properties": {
                "deviceId": {
                    "description": "The ID of the device which can use this Keybox.",
                    "type": "string"
                },
                "keys": {
                    "description": "Android Attestation keys.",
                    "items": {
                        "$ref": "AndroidAttestationKey"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AndroidAttestationPrivateKey": {
            "description": "Android Attestation private key.",
            "id": "AndroidAttestationPrivateKey",
            "properties": {
                "format": {
                    "description": "Android Attestation private key format, for example: pem.",
                    "type": "string"
                },
                "key": {
                    "description": "Android Attestation private key value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Application": {
            "description": "An Android application.",
            "id": "Application",
            "properties": {
                "groupId": {
                    "description": "If not provided, this package will be presented at the \u201ctop level\u201d.\nIf provided, this package should be displayed within the indicated group.",
                    "format": "int64",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "Document.image (HIRES_PREVIEW image type) from App documents.\nSee google3/wireless/android/finsky/proto/document.proto and\ngoogle3/wireless/android/vending/common/protos/android_app.proto",
                    "type": "string"
                },
                "installBeforeSetupComplete": {
                    "description": "If true, the package must be installed before setup wizard is completed.",
                    "type": "boolean"
                },
                "installByDefault": {
                    "description": "If not provided or true, the initial state should be \u201cdo install\u201d.\nIf false, the initial state should be \u201cdo not install\u201d.",
                    "type": "boolean"
                },
                "packageName": {
                    "description": "The full package name of the apk.",
                    "type": "string"
                },
                "requiredPreload": {
                    "description": "If not provided or false, this package is optional (user choice).\nOtherwise it is required (always / immediately installed.)",
                    "type": "boolean"
                },
                "utmCampaign": {
                    "description": "The UTM (Urchin Tracking Module) campaign associated with this preload.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AtvTurnkeyConfig": {
            "description": "Contains dynamically defined configuration for Android TV Turnkey devices",
            "id": "AtvTurnkeyConfig",
            "properties": {
                "nrdpModelgroup": {
                    "description": "Dynamically set modelgroup value for metrics.",
                    "type": "string"
                },
                "nrdpTokenhandlerPackagename": {
                    "description": "Name of the package that will handle token exchange process on device.",
                    "type": "string"
                },
                "nrdpTokenhandlerSignature": {
                    "description": "Signature of the app that will handle token exchange process on device.",
                    "type": "string"
                },
                "tvAppPackageName": {
                    "description": "Name of the package name that will be used as operator TV app",
                    "type": "string"
                },
                "tvAppSignature": {
                    "description": "Signature of the app that will be used as operator TV app",
                    "type": "string"
                },
                "tvOperator": {
                    "description": "Operator identifier for internal and tracking purposes.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AutoApproveDebugInfo": {
            "description": "Auto approve debug info.",
            "id": "AutoApproveDebugInfo",
            "properties": {
                "analysisSec": {
                    "description": "The time at which build analysis occurred (in seconds since the epoch).",
                    "format": "int64",
                    "type": "string"
                },
                "error": {
                    "description": "The list of build approval error msg discovered by the Build Approver",
                    "items": {
                        "$ref": "Finding"
                    },
                    "type": "array"
                },
                "warning": {
                    "description": "A list of build approval warning msg discovered by the Build Approver",
                    "items": {
                        "$ref": "Finding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Base64Response": {
            "description": "A base64 string of data. eg: an encoded image.",
            "id": "Base64Response",
            "properties": {
                "data": {
                    "description": "Base64 encoded string of data",
                    "type": "string"
                },
                "id": {
                    "description": "The uploaded item metadata object's id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Battery": {
            "description": "Battery information.",
            "id": "Battery",
            "properties": {
                "capacity": {
                    "description": "Capacity, in milliamp hour.",
                    "format": "int32",
                    "type": "integer"
                },
                "standbyTime": {
                    "description": "Standby time, in hours.",
                    "format": "double",
                    "type": "number"
                },
                "talkTime": {
                    "description": "Talk time, in hours.",
                    "format": "double",
                    "type": "number"
                },
                "type": {
                    "description": "Type.",
                    "enum": [
                        "BATTERY_TYPE_UNSPECIFIED",
                        "NO_BATTERY",
                        "LITHIUM_POLYMER",
                        "LITHIUM_ION",
                        "NICKEL_CADMIUM",
                        "NICKEL_METAL_HYDRIDE"
                    ],
                    "enumDescriptions": [
                        "Battery type unspecified.",
                        "No battery.",
                        "Lithium polymer.",
                        "Lithium ion.",
                        "Nickel cadium.",
                        "Nick metal hydride."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Blobstore2Info": {
            "description": "Information to read/write to blobstore2.",
            "id": "Blobstore2Info",
            "properties": {
                "blobGeneration": {
                    "description": "The blob generation id.",
                    "format": "int64",
                    "type": "string"
                },
                "blobId": {
                    "description": "The blob id, e.g., /blobstore/prod/playground/scotty",
                    "type": "string"
                },
                "downloadReadHandle": {
                    "description": "Read handle passed from Bigstore -> Scotty for a GCS download.\nThis is a signed, serialized blobstore2.ReadHandle proto which must never\nbe set outside of Bigstore, and is not applicable to non-GCS media\ndownloads.",
                    "format": "byte",
                    "type": "string"
                },
                "readToken": {
                    "description": "The blob read token. Needed to read blobs that have not been\nreplicated. Might not be available until the final call.",
                    "type": "string"
                },
                "uploadMetadataContainer": {
                    "description": "Metadata passed from Blobstore -> Scotty for a new GCS upload.\nThis is a signed, serialized blobstore2.BlobMetadataContainer proto which\nmust never be consumed outside of Bigstore, and is not applicable to\nnon-GCS media uploads.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Build": {
            "description": "This represents an Android build and its information.\nNext ID: 25",
            "id": "Build",
            "properties": {
                "androidVersion": {
                    "description": "Android version, for example, 4.1, 5.0, 6.0.1, 7.0.",
                    "type": "string"
                },
                "approvalStatus": {
                    "description": "Approval status.",
                    "enum": [
                        "APPROVAL_STATUS_UNSPECIFIED",
                        "NEW",
                        "APPROVED",
                        "PENDING",
                        "REJECTED",
                        "HISTORICAL",
                        "OBSOLETE",
                        "REVIEWED"
                    ],
                    "enumDescriptions": [
                        "Unknown or unspecified state.",
                        "New build.",
                        "Approved build.",
                        "Pending build.",
                        "Rejected build.",
                        "Historical build.",
                        "Obsolete build.",
                        "Reviewed build."
                    ],
                    "type": "string"
                },
                "approvalStatusChange": {
                    "additionalProperties": {
                        "$ref": "StatusChange"
                    },
                    "description": "Approval status change info.",
                    "type": "object"
                },
                "buildImageUrl": {
                    "description": "The image url of the build.",
                    "type": "string"
                },
                "canBeReferenceBuild": {
                    "description": "Whether the build can be used as a reference build. go/apfe-reference-build",
                    "type": "boolean"
                },
                "companyId": {
                    "description": "The unique company identifier.",
                    "format": "int64",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company name.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "The name of the device which this build belongs to.",
                    "type": "string"
                },
                "experienceTypes": {
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "UNDEFINED_EXPERIENCE_TYPE",
                            "GO_DEVICE",
                            "SEARCH_SELECTOR"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "financialAgreements": {
                    "enumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "items": {
                        "enum": [
                            "UNDEFINED_FINANCIAL_TYPE",
                            "AGSA_BOUNTY",
                            "CHROME_BOUNTY"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "fingerprint": {
                    "description": "The official name for this build which is the build fingerprint.\nFor example, google/angler/angler:6.0.1/MHC19T/2741998:user/release-keys",
                    "type": "string"
                },
                "latestBuildAnalysis": {
                    "$ref": "AutoApproveDebugInfo",
                    "description": "Latest build analysis information, if available."
                },
                "licensingAgreementType": {
                    "description": "LINT.ThenChange(//depot/google3/wireless/android/partner/certification/\\\nagreements/proto/conditionMapping.proto:agreements)",
                    "enum": [
                        "UNDEFINED_LICENSE_TYPE",
                        "AOSP",
                        "CN_GMS",
                        "MADA",
                        "EMADA",
                        "COUNTRY_RUSSIA",
                        "TMADA_AMEND"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                },
                "manufacturer": {
                    "description": "The manufacturer of this build.",
                    "type": "string"
                },
                "modelName": {
                    "description": "Model name, for example, Nexus 6.",
                    "type": "string"
                },
                "modificationInfo": {
                    "$ref": "ModificationInfo",
                    "description": "The build's modification information. This field is ignored on update\nprocedures."
                },
                "name": {
                    "description": "The unique resource name, same as APFE Build.apfeId",
                    "type": "string"
                },
                "notes": {
                    "description": "Notes about this build. ",
                    "items": {
                        "$ref": "Note"
                    },
                    "type": "array"
                },
                "priority": {
                    "description": "Whether the build is a priority build.",
                    "type": "boolean"
                },
                "productName": {
                    "description": "The name of the product which this build belongs to.",
                    "type": "string"
                },
                "releaseType": {
                    "description": "Release type of the build.",
                    "enum": [
                        "UNKNOWN",
                        "IR",
                        "LR",
                        "MR",
                        "SMR"
                    ],
                    "enumDescriptions": [
                        "Unknown release type.",
                        "Initial release as new product.",
                        "Letter upgrade release.",
                        "Maintenance release.",
                        "Security maintenance release."
                    ],
                    "type": "string"
                },
                "representationFingerprints": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map from representative type to build fingerprint referenced.\nKeys should match values of RepresentationType enum defined in:\n//depot/google3/wireless/android/partner/certification/agreements/proto/conditionMapping.proto",
                    "type": "object"
                },
                "sdkBuildId": {
                    "description": "Android SDK build ID either a changelist number or a label,\nfor example, \"M4-rc20\".",
                    "type": "string"
                },
                "securityPatch": {
                    "description": "The build security patch.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BuildAnalysis": {
            "description": "Build level analysis of tests.",
            "id": "BuildAnalysis",
            "properties": {
                "testAnalysis": {
                    "additionalProperties": {
                        "$ref": "TestAnalysis"
                    },
                    "description": "Aggregated test analysis result for this build for each ReportType enum.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BuildIdentifier": {
            "id": "BuildIdentifier",
            "properties": {
                "buildFingerprint": {
                    "type": "string"
                },
                "variantKey": {
                    "$ref": "VariantKey"
                }
            },
            "type": "object"
        },
        "BuildMetadata": {
            "id": "BuildMetadata",
            "properties": {
                "buildIdentifiers": {
                    "items": {
                        "$ref": "BuildIdentifier"
                    },
                    "type": "array"
                },
                "completionTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "extractionRunId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BuildScan": {
            "id": "BuildScan",
            "properties": {
                "buildId": {
                    "format": "int64",
                    "type": "string"
                },
                "buildScanResult": {
                    "$ref": "BuildScanResult"
                },
                "requestTime": {
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BuildScanResult": {
            "description": "Scan result for one Build.",
            "id": "BuildScanResult",
            "properties": {
                "findings": {
                    "items": {
                        "$ref": "FirmwareFinding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BulkAssignWaiversRequest": {
            "description": "A request to bulk assign waivers.",
            "id": "BulkAssignWaiversRequest",
            "properties": {
                "waivers": {
                    "description": "List of waivers to create or update.\nWaivers must have at least the following set: report_id, test_id, bug_url.\nIf the Waiver#name is set, then this is assumed to be an update call.",
                    "items": {
                        "$ref": "Waiver"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BulkAssignWaiversResponse": {
            "description": "A response from bulk assigning waivers.",
            "id": "BulkAssignWaiversResponse",
            "properties": {
                "waivers": {
                    "description": "List of waivers.",
                    "items": {
                        "$ref": "Waiver"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BusinessLogicRule": {
            "description": "A business logic rule.",
            "id": "BusinessLogicRule",
            "properties": {
                "ignoredSuiteVersions": {
                    "description": "The name of test suite version(s) for which the rule is ignored.\nFormat: <suite_name><suite_version>, For example: gts5.1_r1",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxSuiteVersion": {
                    "description": "The maximum test suite version for which the rule is applied.",
                    "type": "string"
                },
                "minSuiteVersion": {
                    "description": "The minimum test suite version for which the rule is applied.",
                    "type": "string"
                },
                "ruleActions": {
                    "description": "The actions taken if the conditions for this rule apply.",
                    "items": {
                        "$ref": "BusinessLogicRuleAction"
                    },
                    "type": "array"
                },
                "ruleConditions": {
                    "description": "The conditions under which this rule applies to a test.",
                    "items": {
                        "$ref": "BusinessLogicRuleCondition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BusinessLogicRuleAction": {
            "description": "A business logic rule action.",
            "id": "BusinessLogicRuleAction",
            "properties": {
                "methodArgs": {
                    "description": "The string arguments for the method.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "methodName": {
                    "description": "The fully qualified method name of the action, visible to the client.\nFor instance, client GTS can invoke the method name \"com.android.\ncompatibility.common.util.MediaUtils.skipTest(String tag, String reason)\".\nMethods must take only String arguments.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BusinessLogicRuleCondition": {
            "description": "A business logic rule condition.",
            "id": "BusinessLogicRuleCondition",
            "properties": {
                "methodArgs": {
                    "description": "The string arguments for the method.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "methodName": {
                    "description": "The fully qualified method name of the condition, visible to the client.\nFor instance, client GTS can invoke the method name \"com.android.\ncompatibility.common.util.ApiLevelUtil.codenameEquals(String name)\".\nMethods must return type boolean and take only String arguments.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BusinessLogicRuleList": {
            "description": "An ordered list of business logic rules.",
            "id": "BusinessLogicRuleList",
            "properties": {
                "businessLogicRules": {
                    "description": "An ordered list of business logic rules.",
                    "items": {
                        "$ref": "BusinessLogicRule"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "A short (<20 chars, no whitespace) description of this rule list instance.\nIntended to differentiate rule lists with the same test_name.\nExample: \"testSystemApp\" might use description \"google_duo\" or \"chrome\"",
                    "type": "string"
                },
                "testName": {
                    "description": "The name of the test to which the business logic rules apply. For example,\n\"com.google.android.placement.gts.UiPlacementTest#testSearchWidget\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Camera": {
            "description": "Camera information.",
            "id": "Camera",
            "properties": {
                "frontCameraResolution": {
                    "description": "Front camera resolution, in Mega pixels.",
                    "format": "double",
                    "type": "number"
                },
                "rearCameraResolution": {
                    "description": "Rear camera resolution, in Mega pixels.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "CancelOperationRequest": {
            "description": "The request message for Operations.CancelOperation.",
            "id": "CancelOperationRequest",
            "properties": {},
            "type": "object"
        },
        "Carrier": {
            "description": "Contains the mapped carrier name along with the persisted carrier id.",
            "id": "Carrier",
            "properties": {
                "countryCode": {
                    "description": "The 2-letter country code.",
                    "type": "string"
                },
                "deviceAttributes": {
                    "description": "Attributes identifying device as operated by the carrier. If multiple\ndevice_attributes are set, a device that matches any of the\ndevice_attributes maps to the carrier.",
                    "items": {
                        "$ref": "CarrierDeviceAttribute"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Carrier ID from carriers, client use ListCarriers api to retrieve this\nvalue. This ID is unique and returned by server.",
                    "format": "int64",
                    "type": "string"
                },
                "mccMncTuples": {
                    "description": "A list of the MCC and MNC parts of the IMSI that map to this carrier\nsubsidiary.",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The human readable name of the carrier, client use ListCarriers to\nretrieve this value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CarrierDeviceAttribute": {
            "description": "Attributes used to match device to carrier.\nFor each field within this message:\n  - if not set, the attribute is ignored;\n  - if set, the device must have one of the specified values to match.",
            "id": "CarrierDeviceAttribute",
            "properties": {
                "apns": {
                    "description": "Sample values:\nfast.t-mobile.com, internet",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gid1s": {
                    "description": "Sample values: 6D, BAE0000000000000",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "imsiPrefixXpatterns": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "imsiRanges": {
                    "description": "Sample value: { start: \"262020000000000\", end: \"262021913599999\"}.\nSample value: { start: \"26202\", end: \"2620219135\"}.\nBoth sample values are valid and equivalent.",
                    "items": {
                        "$ref": "ImsiRange"
                    },
                    "type": "array"
                },
                "isBlanketAttributesWithoutMccMnc": {
                    "type": "boolean"
                },
                "mccMncTuples": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "spns": {
                    "description": "Sample values: C Spire, LeclercMobile",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ChangePlayAutoInstallOrderRequest": {
            "description": "Play auto install change order request message.",
            "id": "ChangePlayAutoInstallOrderRequest",
            "properties": {},
            "type": "object"
        },
        "ChangePlayAutoInstallOrderResponse": {
            "description": "Play auto install change order response message.",
            "id": "ChangePlayAutoInstallOrderResponse",
            "properties": {
                "playAutoInstall": {
                    "description": "The play auto install list after order change.",
                    "items": {
                        "$ref": "PlayAutoInstall"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompositeMedia": {
            "description": "A sequence of media data references representing composite data.\nIntroduced to support Bigstore composite objects. For details, visit\nhttp://go/bigstore-composites.",
            "id": "CompositeMedia",
            "properties": {
                "blobRef": {
                    "description": "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF\nThis should be the byte representation of a blobstore.BlobRef.\nSince Blobstore is deprecating v1, use blobstore2_info instead.\nFor now, any v2 blob will also be represented in this field as\nv1 BlobRef.",
                    "format": "byte",
                    "type": "string"
                },
                "blobstore2Info": {
                    "$ref": "Blobstore2Info",
                    "description": "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers\nto a v2 blob."
                },
                "cosmoBinaryReference": {
                    "description": "A binary data reference for a media download. Serves as a\ntechnology-agnostic binary reference in some Google infrastructure.\nThis value is a serialized storage_cosmo.BinaryReference proto. Storing\nit as bytes is a hack to get around the fact that the cosmo proto\n(as well as others it includes) doesn't support JavaScript. This\nprevents us from including the actual type of this field.",
                    "format": "byte",
                    "type": "string"
                },
                "crc32cHash": {
                    "description": "crc32.c hash for the payload.",
                    "format": "uint32",
                    "type": "integer"
                },
                "inline": {
                    "description": "Media data, set if reference_type is INLINE",
                    "format": "byte",
                    "type": "string"
                },
                "length": {
                    "description": "Size of the data, in bytes",
                    "format": "int64",
                    "type": "string"
                },
                "md5Hash": {
                    "description": "MD5 hash for the payload.",
                    "format": "byte",
                    "type": "string"
                },
                "objectId": {
                    "$ref": "ObjectId",
                    "description": "Reference to a TI Blob, set if reference_type is BIGSTORE_REF."
                },
                "path": {
                    "description": "Path to the data, set if reference_type is PATH",
                    "type": "string"
                },
                "referenceType": {
                    "description": "Describes what the field reference contains.",
                    "enum": [
                        "PATH",
                        "BLOB_REF",
                        "INLINE",
                        "BIGSTORE_REF",
                        "COSMO_BINARY_REFERENCE"
                    ],
                    "enumDescriptions": [
                        "Reference contains a GFS path or a local path.",
                        "Reference points to a blobstore object. This could be either\na v1 blob_ref or a v2 blobstore2_info. Clients should check\nblobstore2_info first, since v1 is being deprecated.",
                        "Data is included into this proto buffer",
                        "Reference points to a bigstore object",
                        "Indicates the data is stored in cosmo_binary_reference."
                    ],
                    "type": "string"
                },
                "sha1Hash": {
                    "description": "SHA-1 hash for the payload.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConfigValueList": {
            "description": "An ordered list of values used in the dynamic configuration.",
            "id": "ConfigValueList",
            "properties": {
                "configValues": {
                    "description": "An ordered list of value strings.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ContentTypeInfo": {
            "description": "Detailed Content-Type information from Scotty. The Content-Type of the media\nwill typically be filled in by the header or Scotty's best_guess, but this\nextended information provides the backend with more information so that it\ncan make a better decision if needed. This is only used on media upload\nrequests from Scotty.",
            "id": "ContentTypeInfo",
            "properties": {
                "bestGuess": {
                    "description": "Scotty's best guess of what the content type of the file is.",
                    "type": "string"
                },
                "fromBytes": {
                    "description": "The content type of the file derived by looking at specific\nbytes (i.e. \"magic bytes\") of the actual file.",
                    "type": "string"
                },
                "fromFileName": {
                    "description": "The content type of the file derived from the file extension of\nthe original file name used by the client.",
                    "type": "string"
                },
                "fromHeader": {
                    "description": "The content type of the file as specified in the request headers,\nmultipart headers, or RUPIO start request.",
                    "type": "string"
                },
                "fromUrlPath": {
                    "description": "The content type of the file derived from the file extension of the\nURL path.  The URL path is assumed to represent a file name (which\nis typically only true for agents that are providing a REST API).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConvertConnectivityConfigInApkRequest": {
            "description": "Convert connectivity config APK request message",
            "id": "ConvertConnectivityConfigInApkRequest",
            "properties": {
                "apkRef": {
                    "description": "A reference returned from server, used to convert connectivity config\nafter the APK uploaded.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConvertConnectivityConfigInApkResponse": {
            "description": "Convert connectivity config APK response message",
            "id": "ConvertConnectivityConfigInApkResponse",
            "properties": {
                "fileRef": {
                    "description": "A reference returned from server, should be used in next stream download.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Cpu": {
            "description": "CPU information.",
            "id": "Cpu",
            "properties": {
                "clockSpeed": {
                    "description": "The maximum clock speed, in Giga Hertz.",
                    "format": "double",
                    "type": "number"
                },
                "make": {
                    "description": "Make name.\nPlease query ListCpus to retrieve\nthe supported make list.",
                    "type": "string"
                },
                "model": {
                    "description": "Model name.\nPlease query ListCpus to retrieve\nthe supported model list.",
                    "type": "string"
                },
                "supportsTrustZone": {
                    "description": "True if device supports ARM trust zone; false otherwise.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CreateFirmwareRequest": {
            "id": "CreateFirmwareRequest",
            "properties": {
                "companyId": {
                    "format": "int64",
                    "type": "string"
                },
                "firmwareMetadata": {
                    "$ref": "FirmwareMetadata"
                },
                "uploadRef": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateFirmwareResponse": {
            "id": "CreateFirmwareResponse",
            "properties": {},
            "type": "object"
        },
        "CreateKeyboxCohortRequest": {
            "description": "A request message to create a KeyboxCohort.",
            "id": "CreateKeyboxCohortRequest",
            "properties": {
                "creatorCompanyId": {
                    "description": "Creator company ID.",
                    "format": "int64",
                    "type": "string"
                },
                "csr": {
                    "description": "new field for CSR, only valid when KeyboxType is X509_ICA",
                    "type": "string"
                },
                "deviceIdFilePath": {
                    "description": "This is a file that has been uploaded to Google storage and\ncontains a list of device ids.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "Device name.\nFor example, \"shamu\" is the device name for Nexus 6.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of Keybox that will make up the KeyboxCohort.",
                    "enum": [
                        "KEYBOX_TYPE_UNSPECIFIED",
                        "WIDEVINE_DRM",
                        "ANDROID_ATTESTATION",
                        "X509_ICA"
                    ],
                    "enumDescriptions": [
                        "Unspecified type.",
                        "Widevine DRM Keybox.",
                        "Android Attestation Keybox.",
                        "X509 ICA."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateNewOtaDeploymentRequest": {
            "description": "Request to create an OTA deployment group",
            "id": "CreateNewOtaDeploymentRequest",
            "properties": {
                "buildPrefix": {
                    "description": "The desired build prefix",
                    "type": "string"
                },
                "buildType": {
                    "description": "The type of build",
                    "enum": [
                        "UNKNOWN_BUILD_TYPE",
                        "RELEASE",
                        "TEST",
                        "DEV"
                    ],
                    "enumDescriptions": [
                        "Unknown build type",
                        "Release Keys",
                        "Test Keys",
                        "Dev keys"
                    ],
                    "type": "string"
                },
                "productId": {
                    "description": "The APFE product id",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateNoteRequest": {
            "description": "A request to create a build note.",
            "id": "CreateNoteRequest",
            "properties": {
                "name": {
                    "description": "name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C",
                    "type": "string"
                },
                "note": {
                    "description": "The note to create. The note ID is autogenerated by the server.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateNoteResponse": {
            "description": "A response from creating a build note.",
            "id": "CreateNoteResponse",
            "properties": {
                "name": {
                    "description": "The resource name of the created note, for example:\ndevices/136D60F1/products/87826ABE/builds/797EE92C/notes/286960D1",
                    "type": "string"
                },
                "note": {
                    "$ref": "Note",
                    "description": "Note about the build."
                }
            },
            "type": "object"
        },
        "CreateReportRequest": {
            "description": "A request to create a report.",
            "id": "CreateReportRequest",
            "properties": {
                "companyId": {
                    "description": "The APFE company_id of the company this report will be created under.\nNote: This is a required field,\nplease contact TAM if you're unsure what your company ID is.",
                    "format": "int64",
                    "type": "string"
                },
                "reportRef": {
                    "$ref": "ReportRef",
                    "description": "The resource name."
                }
            },
            "type": "object"
        },
        "CreateWaiverRequest": {
            "description": "A request to create a waiver.",
            "id": "CreateWaiverRequest",
            "properties": {
                "bugUrl": {
                    "description": "Bug url for the waiver.",
                    "type": "string"
                },
                "note": {
                    "description": "Waiver notes.",
                    "type": "string"
                },
                "reportId": {
                    "description": "ID of the test report.",
                    "type": "string"
                },
                "testDescription": {
                    "$ref": "TestDescription",
                    "description": "Description of the test being waived."
                },
                "testId": {
                    "description": "A string which uniquely identifies a test within a test report.\ne.g. \"android.webkit.cts.WebViewTest.testSetInitialScale\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Device": {
            "description": "This represents an Android device and its information.\nnext id: 18",
            "id": "Device",
            "properties": {
                "battery": {
                    "$ref": "Battery",
                    "description": "Battery."
                },
                "camera": {
                    "$ref": "Camera",
                    "description": "Camera."
                },
                "companyId": {
                    "description": "The unique company identifier.",
                    "format": "int64",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company name, for example: Google.",
                    "type": "string"
                },
                "cpu": {
                    "$ref": "Cpu",
                    "description": "CPU."
                },
                "deviceName": {
                    "description": "The device name, for example, angler.",
                    "type": "string"
                },
                "display": {
                    "$ref": "Display",
                    "description": "Display."
                },
                "drmFeatures": {
                    "$ref": "DrmFeatures",
                    "description": "DRM"
                },
                "drmLevel": {
                    "description": "DRM level",
                    "enum": [
                        "DRM_NO_LEVEL",
                        "DRM_LEVEL_1",
                        "DRM_LEVEL_2",
                        "DRM_LEVEL_3"
                    ],
                    "enumDescriptions": [
                        "No DRM Level",
                        "DRM Level 1",
                        "DRM Level 2",
                        "DRM Level 3"
                    ],
                    "type": "string"
                },
                "formFactor": {
                    "description": "Form factor.",
                    "enum": [
                        "FORM_FACTOR_UNSPECIFIED",
                        "PHONE",
                        "TABLET",
                        "SET_TOP_BOX",
                        "TV",
                        "AUTO_PROJECTED",
                        "AUTO_EMBEDDED",
                        "OTHER_FORM_FACTOR",
                        "WEARABLE",
                        "OVER_THE_TOP_TV",
                        "PC",
                        "GOOGLE_CAST",
                        "GOOGLE_C4A"
                    ],
                    "enumDescriptions": [
                        "Unknown form factor.",
                        "Phone.",
                        "Tablet.",
                        "Set-top box.",
                        "TV.",
                        "Automotive Projected.",
                        "Automotive Embedded.",
                        "Other form factor.",
                        "Wearable.",
                        "Over The Top (OTT).",
                        "PC.",
                        "Google Cast Devices.",
                        "Google Cast 4 Audio."
                    ],
                    "type": "string"
                },
                "manufacturer": {
                    "description": "Manufacturer name, for example: Huawei.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "memory": {
                    "$ref": "Memory",
                    "description": "Memory."
                },
                "name": {
                    "description": "The unique resource name.",
                    "type": "string"
                },
                "orientation": {
                    "description": "Orientation.",
                    "enum": [
                        "ORIENTATION_UNSPECIFIED",
                        "PORTRAIT",
                        "LANDSCAPE"
                    ],
                    "enumDescriptions": [
                        "Unspecified orientation.",
                        "Portrait.",
                        "Landscape."
                    ],
                    "type": "string"
                },
                "storage": {
                    "$ref": "Storage",
                    "description": "Storage."
                },
                "trustedOs": {
                    "description": "The trust OS on this device",
                    "enum": [
                        "UNKNOWN_OS",
                        "BEANPOD",
                        "BROADCOM",
                        "DISCRETIX",
                        "GOOGLE_TRUSTY",
                        "GD",
                        "INTEL",
                        "MICROTRUST",
                        "OBERTHUR",
                        "OPTEE",
                        "QUALCOMM",
                        "TRUSTCORE",
                        "TRUSTED_LOGIC",
                        "TRUSTONIC",
                        "TRUSTKERNEL"
                    ],
                    "enumDescriptions": [
                        "Unknown OS",
                        "Beanpod TEE",
                        "Broadcom",
                        "Discretix Technologies",
                        "Google Trusty",
                        "G&D",
                        "Intel",
                        "Microtrust",
                        "Oberthur Technologies",
                        "OP-TEE",
                        "Qualcomm",
                        "TrustCore",
                        "Trusted Logic",
                        "Trustonic",
                        "TrustKernel"
                    ],
                    "type": "string"
                },
                "trustedOutput": {
                    "description": "True if device supports content protection via a trusted output mechanism;\nFalse otherwise.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DiffChecksumsResponse": {
            "description": "Backend response for a Diff get checksums response.\nFor details on the Scotty Diff protocol,\nvisit http://go/scotty-diff-protocol.",
            "id": "DiffChecksumsResponse",
            "properties": {
                "checksumsLocation": {
                    "$ref": "CompositeMedia",
                    "description": "Exactly one of these fields must be populated.\n\nIf checksums_location is filled, the server will return the corresponding\ncontents to the user.  If object_location is filled, the server will\ncalculate the checksums based on the content there and return that to the\nuser.\nFor details on the format of the checksums,\nsee http://go/scotty-diff-protocol."
                },
                "chunkSizeBytes": {
                    "description": "The chunk size of checksums.  Must be a multiple of 256KB.",
                    "format": "int64",
                    "type": "string"
                },
                "objectLocation": {
                    "$ref": "CompositeMedia",
                    "description": "If set, calculate the checksums based on the contents and return them to\nthe caller."
                },
                "objectSizeBytes": {
                    "description": "The total size of the server object.",
                    "format": "int64",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "The object version of the object the checksums are being returned for.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiffDownloadResponse": {
            "description": "Backend response for a Diff download response.\nFor details on the Scotty Diff protocol,\nvisit http://go/scotty-diff-protocol.",
            "id": "DiffDownloadResponse",
            "properties": {
                "objectLocation": {
                    "$ref": "CompositeMedia",
                    "description": "The original object location."
                }
            },
            "type": "object"
        },
        "DiffUploadRequest": {
            "description": "A Diff upload request.\nFor details on the Scotty Diff protocol,\nvisit http://go/scotty-diff-protocol.",
            "id": "DiffUploadRequest",
            "properties": {
                "checksumsInfo": {
                    "$ref": "CompositeMedia",
                    "description": "The location of the checksums for the new object.\nAgents must clone the object located here, as the upload server will\ndelete the contents once a response is received.\nFor details on the format of the checksums,\nsee http://go/scotty-diff-protocol."
                },
                "objectInfo": {
                    "$ref": "CompositeMedia",
                    "description": "The location of the new object.\nAgents must clone the object located here, as the upload server will\ndelete the contents once a response is received."
                },
                "objectVersion": {
                    "description": "The object version of the object that is the base version the incoming\ndiff script will be applied to.\nThis field will always be filled in.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DiffUploadResponse": {
            "description": "Backend response for a Diff upload request.\nFor details on the Scotty Diff protocol,\nvisit http://go/scotty-diff-protocol.",
            "id": "DiffUploadResponse",
            "properties": {
                "objectVersion": {
                    "description": "The object version of the object at the server. Must be included in the\nend notification response.\nThe version in the end notification response must correspond to the new\nversion of the object that is now stored at the server, after the upload.",
                    "type": "string"
                },
                "originalObject": {
                    "$ref": "CompositeMedia",
                    "description": "The location of the original file for a diff upload request. Must be\nfilled in if responding to an upload start notification."
                }
            },
            "type": "object"
        },
        "DiffVersionResponse": {
            "description": "Backend response for a Diff get version response.\nFor details on the Scotty Diff protocol,\nvisit http://go/scotty-diff-protocol.",
            "id": "DiffVersionResponse",
            "properties": {
                "objectSizeBytes": {
                    "description": "The total size of the server object.",
                    "format": "int64",
                    "type": "string"
                },
                "objectVersion": {
                    "description": "The version of the object stored at the server.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Display": {
            "description": "Display information.",
            "id": "Display",
            "properties": {
                "maxHorizontalResolution": {
                    "description": "Max horizontal resolution",
                    "format": "int32",
                    "type": "integer"
                },
                "maxVerticalResolution": {
                    "description": "Max vertical resolution",
                    "format": "int32",
                    "type": "integer"
                },
                "size": {
                    "description": "The diagonal size of the screen in inches.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DownloadAtvCustomizationFileRequest": {
            "description": "Download ATV customization file request message.\nClient send this request to retrieve resource name of the customization file.",
            "id": "DownloadAtvCustomizationFileRequest",
            "properties": {
                "id": {
                    "description": "The ATV customization file containing target hardware Ids for the\nconfiguration will be downloaded.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadAtvCustomizationFileResponse": {
            "description": "Download customization file response message.",
            "id": "DownloadAtvCustomizationFileResponse",
            "properties": {
                "ref": {
                    "description": "A reference returned from server, should be used in next stream download.",
                    "type": "string"
                },
                "uploadedAtvCustomizationFileName": {
                    "description": "Name of the uploaded atv customization file.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadHardwareIdsFileRequest": {
            "description": "Download hardwareIds file request message.\nClient send this request to retrieve resource name of the hardwareIds file.",
            "id": "DownloadHardwareIdsFileRequest",
            "properties": {
                "id": {
                    "description": "The hardwareIds file containing target hardware Ids for the configuration\nwill be downloaded.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadHardwareIdsFileResponse": {
            "description": "Download hardwareIds response message.",
            "id": "DownloadHardwareIdsFileResponse",
            "properties": {
                "ref": {
                    "description": "A reference returned from server, should be used in next stream download.",
                    "type": "string"
                },
                "uploadedHardwareIdsFileName": {
                    "description": "Name of the uploaded hardware IDs file",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadParameters": {
            "description": "Parameters specific to media downloads.",
            "id": "DownloadParameters",
            "properties": {
                "allowGzipCompression": {
                    "description": "A boolean to be returned in the response to Scotty. Allows/disallows gzip\nencoding of the payload content when the server thinks it's\nadvantageous (hence, does not guarantee compression) which allows\nScotty to GZip the response to the client.",
                    "type": "boolean"
                },
                "ignoreRange": {
                    "description": "Determining whether or not Apiary should skip the inclusion\nof any Content-Range header on its response to Scotty.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DownloadPlayAutoInstallApkRequest": {
            "description": "Download an apk request message.\nClient send this request to retrieve resource name of the apk.",
            "id": "DownloadPlayAutoInstallApkRequest",
            "properties": {
                "id": {
                    "description": "An apk belongs to the given play auto install will be downloaded.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadPlayAutoInstallApkResponse": {
            "description": "Download apk response message.",
            "id": "DownloadPlayAutoInstallApkResponse",
            "properties": {
                "ref": {
                    "$ref": "PlayAutoInstallApkRef",
                    "description": "A reference returned from server, should be used in next stream download."
                }
            },
            "type": "object"
        },
        "DownloadReportRequest": {
            "description": "A quest to download a report.\nClient sends this request to retrieve resource name of a report.",
            "id": "DownloadReportRequest",
            "properties": {
                "name": {
                    "description": "The report unique resource name that will be downloaded.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DownloadReportResponse": {
            "description": "Download report response message.",
            "id": "DownloadReportResponse",
            "properties": {
                "reportRef": {
                    "$ref": "ReportRef",
                    "description": "A reference returned from server, should be used in next stream download."
                }
            },
            "type": "object"
        },
        "DrmFeatures": {
            "description": "Device DRM features",
            "id": "DrmFeatures",
            "properties": {
                "frameProtection": {
                    "description": "True if device supports protection of decrypted frames\ne.g secure video path",
                    "type": "boolean"
                },
                "keyProtection": {
                    "description": "True if device supports protection of cryptographic keys\ne.g. hardware supported AES",
                    "type": "boolean"
                },
                "outputProtection": {
                    "description": "True if device has trusted output protection mechanism - HDMI/HDCP",
                    "type": "boolean"
                },
                "secureBoot": {
                    "description": "True if device supports secure boot and chain of trust",
                    "type": "boolean"
                },
                "securePlayback": {
                    "description": "True if device supports secure play back",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DynamicConfig": {
            "description": "A mapping of configuration attributes to ConfigValueLists.",
            "id": "DynamicConfig",
            "properties": {
                "dynamicConfigEntries": {
                    "additionalProperties": {
                        "$ref": "ConfigValueList"
                    },
                    "description": "A map from strings representing attributes of the configuration\nto ordered lists of values.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Empty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "id": "Empty",
            "properties": {},
            "type": "object"
        },
        "FastbootOptions": {
            "id": "FastbootOptions",
            "properties": {},
            "type": "object"
        },
        "Finding": {
            "description": "Auto approve findings.",
            "id": "Finding",
            "properties": {
                "description": {
                    "description": "Description of the error / warning for UI display.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Firmware": {
            "id": "Firmware",
            "properties": {
                "companyId": {
                    "format": "int64",
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "creatorEmail": {
                    "type": "string"
                },
                "firmwareId": {
                    "format": "int64",
                    "type": "string"
                },
                "firmwareScans": {
                    "items": {
                        "$ref": "FirmwareScan"
                    },
                    "type": "array"
                },
                "uploadTime": {
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FirmwareCompany": {
            "description": "This represents a Athena Company",
            "id": "FirmwareCompany",
            "properties": {
                "companyId": {
                    "format": "int64",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company name, for example: Google.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FirmwareFinding": {
            "id": "FirmwareFinding",
            "properties": {
                "analysisModule": {
                    "type": "string"
                },
                "findingId": {
                    "type": "string"
                },
                "result": {
                    "enum": [
                        "RESULT_UNSPECIFIED",
                        "OK",
                        "VULNERABLE",
                        "ERROR",
                        "PENDING"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FirmwareListAllCompaniesResponse": {
            "description": "A response from listing accessible companies by user",
            "id": "FirmwareListAllCompaniesResponse",
            "properties": {
                "companies": {
                    "description": "The list of APFE companies",
                    "items": {
                        "$ref": "FirmwareCompany"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FirmwareMetadata": {
            "id": "FirmwareMetadata",
            "properties": {
                "builds": {
                    "items": {
                        "$ref": "UploadedBuildMetadata"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FirmwareScan": {
            "id": "FirmwareScan",
            "properties": {
                "buildScans": {
                    "description": "Scan results for different builds.",
                    "items": {
                        "$ref": "BuildScan"
                    },
                    "type": "array"
                },
                "firmwareId": {
                    "format": "int64",
                    "type": "string"
                },
                "requestTime": {
                    "format": "google-datetime",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "UNKNOWN",
                        "EXTRACTING",
                        "ANALYZING",
                        "COMPLETED",
                        "FAILED"
                    ],
                    "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetBuildResponse": {
            "id": "GetBuildResponse",
            "properties": {
                "buildId": {
                    "format": "int64",
                    "type": "string"
                },
                "buildMetadatas": {
                    "items": {
                        "$ref": "BuildMetadata"
                    },
                    "type": "array"
                },
                "buildScans": {
                    "items": {
                        "$ref": "BuildScan"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetFirmwareResponse": {
            "id": "GetFirmwareResponse",
            "properties": {
                "firmware": {
                    "$ref": "Firmware"
                }
            },
            "type": "object"
        },
        "GetPlayAutoInstallGroupsResponse": {
            "description": "Play auto install groups get response message.",
            "id": "GetPlayAutoInstallGroupsResponse",
            "properties": {
                "installGroups": {
                    "description": "The play auto install groups for a given play auto install id.",
                    "items": {
                        "$ref": "InstallGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ImeiRange": {
            "description": "LINT.IfChange(imei_range)",
            "id": "ImeiRange",
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ImsiRange": {
            "description": "Range of IMSI-s.",
            "id": "ImsiRange",
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InstallGroup": {
            "description": "An auto install group.",
            "id": "InstallGroup",
            "properties": {
                "groupId": {
                    "description": "The group identifier used to attribute an application to a group.",
                    "format": "int64",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the group (e.g. \u201cGOOGLE\u201c, \u201cOEM\u201c, \u201cCARRIER\u201c).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Keybox": {
            "description": "A Keybox containing data and information to decrypt DRM protected contents.",
            "id": "Keybox",
            "properties": {
                "androidAttestationKeybox": {
                    "$ref": "AndroidAttestationKeybox",
                    "description": "Android Attestation Keybox."
                },
                "widevineKeybox": {
                    "$ref": "WidevineKeybox",
                    "description": "Widevine DRM Keybox."
                }
            },
            "type": "object"
        },
        "KeyboxCohort": {
            "description": "A KeyboxCohort contains information about a collection of Keyboxes.",
            "id": "KeyboxCohort",
            "properties": {
                "creationStatus": {
                    "$ref": "Status",
                    "description": "KeyboxCohort creation status."
                },
                "creationTime": {
                    "description": "KeyboxCohort creation timestamp.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "creatorCompany": {
                    "description": "KeyboxCohort creator company.",
                    "type": "string"
                },
                "creatorCompanyId": {
                    "description": "KeyboxCohort creator company ID.\nThis is a unique ID of the creator company,\ne.g. if `creator_company` is Google, `creator_company_id` is 1.",
                    "format": "int64",
                    "type": "string"
                },
                "creatorEmail": {
                    "description": "KeyboxCohort creator email.",
                    "type": "string"
                },
                "csrDownloadUrl": {
                    "description": "URL to download the CSR used to create this KeyboxCohort.",
                    "type": "string"
                },
                "deviceIdFileDownloadUrl": {
                    "description": "URL to download the set of device IDs used to create this KeyboxCohort.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "The name of the device that the Keyboxes will be installed on.\nFor example, \"shamu\" is the device name for Nexus 6.",
                    "type": "string"
                },
                "keyboxCohortDownloadUrl": {
                    "description": "URL to download the list of keyboxes generated as part of this\nKeyboxCohort.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the resource. This field is generated by the server\nin response to a StreamCreateKeyboxCohort method call.",
                    "type": "string"
                },
                "numKeys": {
                    "description": "The number of keys in the cohort.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "Each KeyboxCohort contains only one type of Keybox, either Widevine of\nAndroid Attestation. The client must specify which Keybox type will be\ngenerated.",
                    "enum": [
                        "KEYBOX_TYPE_UNSPECIFIED",
                        "WIDEVINE_DRM",
                        "ANDROID_ATTESTATION",
                        "X509_ICA"
                    ],
                    "enumDescriptions": [
                        "Unspecified type.",
                        "Widevine DRM Keybox.",
                        "Android Attestation Keybox.",
                        "X509 ICA."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListBuildsResponse": {
            "description": "A response from list builds query.",
            "id": "ListBuildsResponse",
            "properties": {
                "builds": {
                    "description": "A list of builds.",
                    "items": {
                        "$ref": "Build"
                    },
                    "type": "array"
                },
                "curPageToken": {
                    "description": "Token to retrieve the current page of results.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "prevPageToken": {
                    "description": "Token to retrieve the previous page of results, or empty if there are no\nprevious page.",
                    "type": "string"
                },
                "totalSize": {
                    "description": "Total count of existing builds.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListCarriersResponse": {
            "description": "Play auto install list carrier response message.",
            "id": "ListCarriersResponse",
            "properties": {
                "carrier": {
                    "description": "A list of supported wireless carriers.",
                    "items": {
                        "$ref": "Carrier"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListCpusResponse": {
            "description": "A response from list CPUs query.",
            "id": "ListCpusResponse",
            "properties": {
                "cpus": {
                    "description": "A list of CPUs.",
                    "items": {
                        "$ref": "Cpu"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListDevicesResponse": {
            "description": "A response from list devices query.",
            "id": "ListDevicesResponse",
            "properties": {
                "devices": {
                    "description": "A list of devices.",
                    "items": {
                        "$ref": "Device"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListFirmwaresResponse": {
            "id": "ListFirmwaresResponse",
            "properties": {
                "curPageToken": {
                    "type": "string"
                },
                "firmware": {
                    "items": {
                        "$ref": "Firmware"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "type": "string"
                },
                "prevPageToken": {
                    "type": "string"
                },
                "totalSize": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListFormFactorsResponse": {
            "description": "A response from list formFactors request.",
            "id": "ListFormFactorsResponse",
            "properties": {
                "formFactors": {
                    "description": "The list of formFactor options.",
                    "enumDescriptions": [
                        "Unknown form factor.",
                        "Phone.",
                        "Tablet.",
                        "Set-top box.",
                        "TV.",
                        "Automotive Projected.",
                        "Automotive Embedded.",
                        "Other form factor.",
                        "Wearable.",
                        "Over The Top (OTT).",
                        "PC.",
                        "Google Cast Devices.",
                        "Google Cast 4 Audio."
                    ],
                    "items": {
                        "enum": [
                            "FORM_FACTOR_UNSPECIFIED",
                            "PHONE",
                            "TABLET",
                            "SET_TOP_BOX",
                            "TV",
                            "AUTO_PROJECTED",
                            "AUTO_EMBEDDED",
                            "OTHER_FORM_FACTOR",
                            "WEARABLE",
                            "OVER_THE_TOP_TV",
                            "PC",
                            "GOOGLE_CAST",
                            "GOOGLE_C4A"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListKeyboxCohortsResponse": {
            "description": "ListKeyboxCohorts response.",
            "id": "ListKeyboxCohortsResponse",
            "properties": {
                "keyboxCohorts": {
                    "description": "A list of existing KeyboxCohorts.",
                    "items": {
                        "$ref": "KeyboxCohort"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "totalSize": {
                    "description": "Total KeyboxCohort list size.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListKeyboxesResponse": {
            "description": "A request to list Keyboxes.",
            "id": "ListKeyboxesResponse",
            "properties": {
                "keyboxes": {
                    "description": "A list of Keybox.",
                    "items": {
                        "$ref": "Keybox"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListNReportsResponse": {
            "description": "A response from list n reports query.",
            "id": "ListNReportsResponse",
            "properties": {
                "reports": {
                    "description": "A list of reports.",
                    "items": {
                        "$ref": "Report"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListOdmsResponse": {
            "description": "A response from listing ODMs query.",
            "id": "ListOdmsResponse",
            "properties": {
                "odms": {
                    "description": "A list of ODMs.",
                    "items": {
                        "$ref": "Odm"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListOperationsResponse": {
            "description": "The response message for Operations.ListOperations.",
            "id": "ListOperationsResponse",
            "properties": {
                "nextPageToken": {
                    "description": "The standard List next-page token.",
                    "type": "string"
                },
                "operations": {
                    "description": "A list of operations that matches the specified filter in the request.",
                    "items": {
                        "$ref": "Operation"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListOtaDeploymentGroupsForProductResponse": {
            "description": "The result of a ListOtaDeploymentGroupsForProductRequest",
            "id": "ListOtaDeploymentGroupsForProductResponse",
            "properties": {
                "otaDeploymentGroups": {
                    "description": "list of OTA deployment groups",
                    "items": {
                        "$ref": "OtaDeploymentGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListPlayAutoInstallResponse": {
            "description": "Play auto install list response message.",
            "id": "ListPlayAutoInstallResponse",
            "properties": {
                "playAutoInstall": {
                    "description": "The play auto installs for a given product id.",
                    "items": {
                        "$ref": "PlayAutoInstall"
                    },
                    "type": "array"
                },
                "publishState": {
                    "description": "The publish state of the auto play install.",
                    "enum": [
                        "PUBLISH_STATE_UNSPECIFIED",
                        "UNPUBLISHED",
                        "PUBLISH_STARTED",
                        "PUBLISHED",
                        "PUBLISHED_FAILED",
                        "NEW_CHANGES_UNPUBLISHED",
                        "PUBLISHED_INCOMPLETE"
                    ],
                    "enumDescriptions": [
                        "Unknown or unspecified state.",
                        "Never published.",
                        "Publishing in progress.",
                        "Published with no changes.",
                        "Publish failed.",
                        "Published, but there are unpublished changed.",
                        "Published, but incomplete because of an error.\nThis typically means not all auto install configurations for a\nproduct have been publish, client needs to re-publish again."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListProductsResponse": {
            "description": "A response from list products query.",
            "id": "ListProductsResponse",
            "properties": {
                "curPageToken": {
                    "description": "Token to retrieve the current page of results.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "prevPageToken": {
                    "description": "Token to retrieve the previous page of results, or empty if there are no\nprevious page.",
                    "type": "string"
                },
                "products": {
                    "description": "A list of products.",
                    "items": {
                        "$ref": "Product"
                    },
                    "type": "array"
                },
                "totalSize": {
                    "description": "Total count of existing builds.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListReportsResponse": {
            "description": "A response from list reports query.",
            "id": "ListReportsResponse",
            "properties": {
                "curPageToken": {
                    "description": "Token to retrieve the current page of results.",
                    "type": "string"
                },
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "prevPageToken": {
                    "description": "Token to retrieve the previous page of results, or empty if there are no\nprevious page.",
                    "type": "string"
                },
                "reports": {
                    "description": "A list of reports.",
                    "items": {
                        "$ref": "Report"
                    },
                    "type": "array"
                },
                "totalSize": {
                    "description": "Total count of existing reports.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ListRetailBrandingsResponse": {
            "description": "A response from listing retail brandings.",
            "id": "ListRetailBrandingsResponse",
            "properties": {
                "retailBrandings": {
                    "description": "A list of retail brandings.",
                    "items": {
                        "$ref": "RetailBranding"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ListWaiversResponse": {
            "description": "A response from list waivers query.",
            "id": "ListWaiversResponse",
            "properties": {
                "nextPageToken": {
                    "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
                    "type": "string"
                },
                "waivers": {
                    "description": "A list of waviers.",
                    "items": {
                        "$ref": "Waiver"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Media": {
            "description": "Media resource.",
            "id": "Media",
            "properties": {
                "resourceName": {
                    "description": "Name of the media resource.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MediaRequestInfo": {
            "description": "Extra information added to operations that support Scotty media requests.",
            "id": "MediaRequestInfo",
            "properties": {
                "currentBytes": {
                    "description": "The number of current bytes uploaded or downloaded.",
                    "format": "int64",
                    "type": "string"
                },
                "customData": {
                    "description": "Data to be copied to backend requests. Custom data is returned to Scotty in\nthe agent_state field, which Scotty will then provide in subsequent upload\nnotifications.",
                    "type": "string"
                },
                "diffObjectVersion": {
                    "description": "Set if the http request info is diff encoded. The value of\nthis field is the version number of the base revision.\nThis is corresponding to Apiary's mediaDiffObjectVersion\n(//depot/google3/java/com/google/api/server/media/variable/DiffObjectVersionVariable.java).\nSee go/esf-scotty-diff-upload for more information.",
                    "type": "string"
                },
                "notificationType": {
                    "description": "The type of notification received from Scotty.",
                    "enum": [
                        "START",
                        "PROGRESS",
                        "END",
                        "RESPONSE_SENT",
                        "ERROR"
                    ],
                    "enumDescriptions": [
                        "Such requests signals the start of a request containing media\nupload. Only the media field(s) in the inserted/updated resource\nare set.\n\nThe response should either return an error or succeed. On success,\nresponses don't need to contain anything.",
                        "Such requests signals that the upload has progressed and that\nthe backend might want to access the media file specified in\nrelevant fields in the resource. Only the media field(s) in the\ninserted/updated resource are set.\n\nThe response should either return an error or succeed. On success,\nresponses don't need to contain anything.",
                        "Such requests signals the end of a request containing media\nupload. END should be handled just like normal Insert/Upload\nrequests, that is, they should process the request and return a\ncomplete resource in the response.\n\nPointers to media data (a GFS path usually) appear in the\nrelevant fields in the inserted/updated resource. See\ngdata.Media in data.proto.",
                        "Such requests occur after an END and signal that the response has\nbeen sent back to the client. RESPONSE_SENT is only sent to\nthe backend if it is configured to receive them.\n\nThe response does not need to contain anything.",
                        "Such requests indicate that an error occurred while processing\nthe request. ERROR is only sent to the backend if it is configured\nto receive them.  It is not guaranteed that all errors will result\nin this notification to the backend, even if the backend requests\nthem.\n\nSince these requests are just for informational purposes, the\nresponse does not need to contain anything."
                    ],
                    "type": "string"
                },
                "requestId": {
                    "description": "The Scotty request ID.",
                    "type": "string"
                },
                "totalBytes": {
                    "description": "The total size of the file.",
                    "format": "int64",
                    "type": "string"
                },
                "totalBytesIsEstimated": {
                    "description": "Whether the total bytes field contains an estimated data.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MediaResponseInfo": {
            "description": "This message is for backends to pass their scotty media specific fields to\nESF. Backend will include this in their response message to ESF.\nExample:\n ExportFile is an rpc defined for upload using scotty from ESF.\n\n  rpc ExportFile(ExportFileRequest) returns (ExportFileResponse)\n\nMessage ExportFileResponse will include apiserving.MediaResponseInfo to tell\nESF about data like dynamic_dropzone it needs to pass to Scotty.\n\n  message ExportFileResponse {\n   optional gdata.Media blob = 1;\n   optional apiserving.MediaResponseInfo media_response_info = 2\n }",
            "id": "MediaResponseInfo",
            "properties": {
                "customData": {
                    "description": "Data to copy from backend response to the next backend requests. Custom\ndata is returned to Scotty in the agent_state field, which Scotty will then\nprovide in subsequent upload notifications.",
                    "type": "string"
                },
                "dataStorageTransform": {
                    "description": "Specifies any transformation to be applied to data before persisting it or\nretrieving from storage. E.g., encryption options for blobstore2.\nThis should be of the form uploader_service.DataStorageTransform.",
                    "format": "byte",
                    "type": "string"
                },
                "dynamicDropTarget": {
                    "description": "Specifies the Scotty Drop Target to use for uploads. If present in a media\nresponse, Scotty does not upload to a standard drop zone. Instead, Scotty\nsaves the upload directly to the location specified in this drop target.\nUnlike drop zones, the drop target is the final storage location for an\nupload. So, the agent does not need to clone the blob at the end of the\nupload. The agent is responsible for garbage collecting any orphaned blobs\nthat may occur due to aborted uploads. For more information, see the drop\ntarget design doc here: http://goto/ScottyDropTarget This field will be\npreferred to dynamicDropzone. If provided, the identified field in the\nresponse must be of the type uploader.agent.DropTarget.",
                    "format": "byte",
                    "type": "string"
                },
                "dynamicDropzone": {
                    "description": "Specifies the Scotty dropzone to use for uploads.",
                    "type": "string"
                },
                "mediaForDiff": {
                    "$ref": "_Media",
                    "description": "Diff Updates must respond to a START notification with this Media proto to\ntell Scotty to decode the diff encoded payload and apply the diff against\nthis field.\nIf the request was diff encoded, but this field is not set, Scotty will\ntreat the encoding as identity.\nThis is corresponding to Apiary's DiffUploadResponse.original_object\n(//depot/google3/gdata/rosy/proto/data.proto?l=413).\nSee go/esf-scotty-diff-upload for more information."
                },
                "trafficClassField": {
                    "description": "Specifies the TrafficClass that Scotty should use for any RPCs to fetch the\nresponse bytes. Will override the traffic class GTOS of the incoming http\nrequest. This is a temporary field to facilitate whitelisting and\nexperimentation by the bigstore agent only. For instance, this does not\napply to RTMP reads.\nWARNING: DO NOT USE WITHOUT PERMISSION FROM THE SCOTTY TEAM.",
                    "enum": [
                        "BE1",
                        "AF1",
                        "AF2",
                        "AF3",
                        "AF4",
                        "NC1",
                        "NC0",
                        "BE0",
                        "LLQ",
                        "LLQ1",
                        "LLQ2"
                    ],
                    "enumDescriptions": [
                        "Application-selectable traffic classes\nBest effort",
                        "Assured forwarding priority 1",
                        "Assured forwarding priority 2",
                        "Assured forwarding priority 3",
                        "Assured forwarding priority 4",
                        "Network control",
                        "Network control",
                        "Best effort at high packet loss",
                        "Low-latency queue (LLQ) best effort (go/llq)",
                        "LLQ best effort (go/llq2)",
                        "LLQ assured forwarding priority 2 (go/llq2)"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Memory": {
            "description": "Memory information.",
            "id": "Memory",
            "properties": {
                "ramSize": {
                    "description": "RAM size in Mega bytes.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ModificationInfo": {
            "description": "Modification information.",
            "id": "ModificationInfo",
            "properties": {
                "creationTimeSec": {
                    "description": "Unix time in seconds when the entity was created.",
                    "format": "int64",
                    "type": "string"
                },
                "creator": {
                    "description": "Email address of the person who created this entity",
                    "type": "string"
                },
                "lastModifiedBy": {
                    "description": "Email address of the last person modified this entity. For newly created\nentity, should be equal to creator.",
                    "type": "string"
                },
                "lastModifiedTimeSec": {
                    "description": "Unix time in seconds when the entity was last modified. For newly created\nentity, should be equal to creation time.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Note": {
            "description": "Note information which is currently used in Build.",
            "id": "Note",
            "properties": {
                "creationInfo": {
                    "$ref": "ModificationInfo",
                    "description": "Note modification info."
                },
                "id": {
                    "description": "The unique id of this note.",
                    "format": "int32",
                    "type": "integer"
                },
                "text": {
                    "description": "Note context.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ObjectId": {
            "description": "This is a copy of the tech.blob.ObjectId proto, which could not\nbe used directly here due to transitive closure issues with\nJavaScript support; see http://b/8801763.",
            "id": "ObjectId",
            "properties": {
                "bucketName": {
                    "description": "The name of the bucket to which this object belongs.",
                    "type": "string"
                },
                "generation": {
                    "description": "Generation of the object. Generations are monotonically increasing\nacross writes, allowing them to be be compared to determine which\ngeneration is newer. If this is omitted in a request, then you are\nrequesting the live object.\nSee https://go/bigstore-versions",
                    "format": "int64",
                    "type": "string"
                },
                "objectName": {
                    "description": "The name of the object.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Odm": {
            "description": "Original Design Manufacturer(ODM) information.",
            "id": "Odm",
            "properties": {
                "name": {
                    "description": "The ODM name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
            "id": "Operation",
            "properties": {
                "done": {
                    "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
                    "type": "boolean"
                },
                "error": {
                    "$ref": "Status",
                    "description": "The error result of the operation in case of failure or cancellation."
                },
                "metadata": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
                    "type": "object"
                },
                "name": {
                    "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
                    "type": "string"
                },
                "response": {
                    "additionalProperties": {
                        "description": "Properties of the object. Contains field @type with type URL.",
                        "type": "any"
                    },
                    "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "OtaDeploymentGroup": {
            "description": "OTA Deployment Group",
            "id": "OtaDeploymentGroup",
            "properties": {
                "name": {
                    "description": "The resource name for OTA deployment\nOTA deployment name have the form\n`devices/{device_id}/products/{product_id}/otas/{ota_deployment_group_name}`\nThis group name is auto-assigned during CreateNewOtaDeployment",
                    "type": "string"
                },
                "otaUsers": {
                    "description": "OTA Users",
                    "items": {
                        "$ref": "OtaUser"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "OtaUser": {
            "description": "A user with OTA permissions",
            "id": "OtaUser",
            "properties": {
                "full": {
                    "description": "Full OTA permission",
                    "type": "boolean"
                },
                "groupsOnly": {
                    "description": "Groups-only OTA permission",
                    "type": "boolean"
                },
                "readOnly": {
                    "description": "Read-only OTA permission",
                    "type": "boolean"
                },
                "userEmail": {
                    "description": "OTA User Email",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PlayAutoInstall": {
            "description": "A PlayAutoInstall contains configuration and information generated by server,\nfor example, the play auto install id and application information.\nNext ID: 12",
            "id": "PlayAutoInstall",
            "properties": {
                "apns": {
                    "description": "The raw apns.xml",
                    "type": "string"
                },
                "applications": {
                    "description": "The list of packages to be preinstalled on matching devices.\nThis filed is returned by server.",
                    "items": {
                        "$ref": "Application"
                    },
                    "type": "array"
                },
                "atvTurnkeyConfig": {
                    "$ref": "AtvTurnkeyConfig",
                    "description": "ATV Turnkey config properties"
                },
                "carrierConfig": {
                    "description": "The raw carrierconfig.xml",
                    "type": "string"
                },
                "clientId": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Configured K/V client IDs",
                    "type": "object"
                },
                "config": {
                    "$ref": "PlayAutoInstallConfig",
                    "description": "Configuration for this play auto install.\nThis filed must be filled out by client in CreatePlayAutoInstall request."
                },
                "id": {
                    "description": "Unique id of each play auto install, for example. 83CF797E.\nThis field is returned by server.",
                    "type": "string"
                },
                "name": {
                    "description": "Resource name of Play Auto Install.\nThis field is assigned by server.",
                    "type": "string"
                },
                "packageName": {
                    "description": "The package name found in the uploaded apk.\nThis field is for display purposes only and not needed for create or\nupdate requests.",
                    "type": "string"
                },
                "published": {
                    "description": "True if this configuration is currently published.\nThis field is assigned by server.",
                    "type": "boolean"
                },
                "rros": {
                    "description": "The list of RRO apks",
                    "items": {
                        "$ref": "RRO"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PlayAutoInstallApkRef": {
            "description": "Represents a reference to the data for a apk.",
            "id": "PlayAutoInstallApkRef",
            "properties": {
                "name": {
                    "description": "The resource name will be used in ByteStream write or read for a apk.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PlayAutoInstallConfig": {
            "description": "Key information represents play auto install configuration.\nNext ID: 20",
            "id": "PlayAutoInstallConfig",
            "properties": {
                "atvCustomizationFileBlobRef": {
                    "description": "Optional. Represents a reference to the atv customization file data.",
                    "type": "string"
                },
                "buildFingerprint": {
                    "description": "A build fingerprint, or build fingerprint prefix.\ne.g. google/shamu/shamu:5.1.1/LMY48X/2289732:user/release-keys or\ngoogle/shamu/shamu.",
                    "type": "string"
                },
                "carrierId": {
                    "description": "The list of carrier ids where this play auto install is enforced.",
                    "items": {
                        "format": "int64",
                        "type": "string"
                    },
                    "type": "array"
                },
                "countryCode": {
                    "description": "The list of countries where this play auto install should be enforced",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deviceIdType": {
                    "description": "Optional. Type of device ID used for targeting configurations, either\nIMEI or Serial Number. All of the target hardware IDs will be parsed into\nthe device ID type specified by this field. Therefore, the hardware IDs\nfield should be populated with the device ID of the type specified by this\nfield. Use \"imei\" to specify IMEI number or \"serial\" to specify device IDs\nare valid serial numbers",
                    "type": "string"
                },
                "enabled": {
                    "description": "Optional. If this play auto install should be enforced.",
                    "type": "boolean"
                },
                "evaluationOrder": {
                    "description": "Optional. The order in which this configuration is evaluated at runtime.",
                    "format": "int32",
                    "type": "integer"
                },
                "hardwareId": {
                    "description": "Optional. A list of device hardware ids for which this play auto install\nrule is enforced.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hardwareIdsFileBlobRef": {
                    "description": "Optional. Represents a reference to the hardware Ids file data.",
                    "type": "string"
                },
                "hardwareIdsFileHash": {
                    "description": "Optional. The base64-encoded sha1 has of hardware ids file. Use to check\nfor duplicate file uploads",
                    "type": "string"
                },
                "imeiRanges": {
                    "description": "Optional. A list of IMEI ranges that specifies the set of targeted devices\nfor this configuration.",
                    "items": {
                        "$ref": "ImeiRange"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name for this configuration.",
                    "type": "string"
                },
                "orderOfEvaluation": {
                    "description": "Optional. The order in which this configuration is evaluated at runtime.",
                    "format": "int32",
                    "type": "integer"
                },
                "productId": {
                    "description": "The related product id.",
                    "type": "string"
                },
                "roOemKey1": {
                    "description": "Optional. The value of ro.oem.key1 (an RO build property) that a device\nshould contain in order to match this configuration.",
                    "type": "string"
                },
                "roOemKey2": {
                    "description": "Optional. The value of ro.oem.key2 (an RO build property) that a device\nshould contain in order to match this configuration.",
                    "type": "string"
                },
                "uploadedAtvCustomizationFileName": {
                    "description": "Optional. The file name of the uploaded atv customization file.",
                    "type": "string"
                },
                "uploadedHardwareIdsFileName": {
                    "description": "Optional. The file name of the uploaded hardware IDs file.",
                    "type": "string"
                },
                "zeroRatingEnabled": {
                    "description": "Optional. If this configuration should enforce zero rating.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Product": {
            "description": "This represents an Android product and its information.\nNext ID: 19",
            "id": "Product",
            "properties": {
                "autoApproved": {
                    "description": "Product is eligible for automatic approval\ndefault is true so companies that have already been set to auto approve\ndo not require review for each product",
                    "type": "boolean"
                },
                "buildCount": {
                    "description": "Number of builds belonging to this product",
                    "format": "int32",
                    "type": "integer"
                },
                "companyId": {
                    "description": "The unique company identifier.",
                    "format": "int64",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company name.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "The name of the device which this product belongs to.",
                    "type": "string"
                },
                "firstApprovedTimestamp": {
                    "description": "The timestamp of first approved build of current product",
                    "format": "google-datetime",
                    "type": "string"
                },
                "image": {
                    "$ref": "ProductImages",
                    "description": "Product image URLs"
                },
                "launchTime": {
                    "description": "The product public launch time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "launched": {
                    "description": "Launched status.",
                    "type": "boolean"
                },
                "marketName": {
                    "description": "Marketing name.",
                    "type": "string"
                },
                "modificationInfo": {
                    "$ref": "ModificationInfo",
                    "description": "The product's modification information. This field is ignored on update\nprocedures."
                },
                "name": {
                    "description": "The unique resource name.",
                    "type": "string"
                },
                "odm": {
                    "$ref": "Odm",
                    "description": "Original Design Manufacturer(ODM)."
                },
                "parent": {
                    "description": "The parent device resource name.",
                    "type": "string"
                },
                "playAutoInstallModificationInfo": {
                    "$ref": "ModificationInfo",
                    "description": "The product's Play Auto Install modification information. This field is\nignored on update procedures."
                },
                "productName": {
                    "description": "The product name, for example: aosp_angler.",
                    "type": "string"
                },
                "retailBranding": {
                    "$ref": "RetailBranding",
                    "description": "Retail branding."
                },
                "salesVolume": {
                    "description": "Forecast sale volume for initial 12 months.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProductImages": {
            "description": "Image URLs for a product with 4 views",
            "id": "ProductImages",
            "properties": {
                "backViewUrl": {
                    "description": "The back view product image url",
                    "type": "string"
                },
                "frontViewUrl": {
                    "description": "The front view product image url",
                    "type": "string"
                },
                "leftViewUrl": {
                    "description": "The left view product image url",
                    "type": "string"
                },
                "rightViewUrl": {
                    "description": "The right view product image url",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublishPlayAutoInstallRequest": {
            "description": "Play auto install publish request message.",
            "id": "PublishPlayAutoInstallRequest",
            "properties": {},
            "type": "object"
        },
        "PublishPlayAutoInstallResponse": {
            "description": "Play auto install publish response message.",
            "id": "PublishPlayAutoInstallResponse",
            "properties": {
                "playAutoInstall": {
                    "description": "The list of play auto installs that have been published.",
                    "items": {
                        "$ref": "PlayAutoInstall"
                    },
                    "type": "array"
                },
                "state": {
                    "description": "The publish state.",
                    "enum": [
                        "PUBLISH_STATE_UNSPECIFIED",
                        "UNPUBLISHED",
                        "PUBLISH_STARTED",
                        "PUBLISHED",
                        "PUBLISHED_FAILED",
                        "NEW_CHANGES_UNPUBLISHED",
                        "PUBLISHED_INCOMPLETE"
                    ],
                    "enumDescriptions": [
                        "Unknown or unspecified state.",
                        "Never published.",
                        "Publishing in progress.",
                        "Published with no changes.",
                        "Publish failed.",
                        "Published, but there are unpublished changed.",
                        "Published, but incomplete because of an error.\nThis typically means not all auto install configurations for a\nproduct have been publish, client needs to re-publish again."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QfilOptions": {
            "id": "QfilOptions",
            "properties": {},
            "type": "object"
        },
        "RRO": {
            "description": "A runtime resource overlay\nNext ID: 9",
            "id": "RRO",
            "properties": {
                "packageName": {
                    "description": "Required. The package name found in the uploaded apk.",
                    "type": "string"
                },
                "rroApkBlobRef": {
                    "description": "Required. The base 64 encoded blobstore ref for the uploaded RRO apk.",
                    "type": "string"
                },
                "rroApkRef": {
                    "description": "An uniqe id that references an already uploaded APK.\nThe `rro_apk_ref` is returned by server by calling\nStartUploadPlayAutoInstallApk.",
                    "type": "string"
                },
                "rroId": {
                    "description": "Unique id of each rro, for example. 83CF797E.\nThis field is returned by server.",
                    "type": "string"
                },
                "rroMetadata": {
                    "$ref": "Application",
                    "description": "The RRO package to be preinstalled on matching devices."
                },
                "rroType": {
                    "description": "Required. Type of the RRO.",
                    "enum": [
                        "UNSPECIFIED",
                        "RINGTONE",
                        "WALLPAPER",
                        "START_ANIMATION",
                        "SHUTDOWN_ANIMATION",
                        "NOTIFICATION",
                        "ALARM",
                        "OTHER"
                    ],
                    "enumDescriptions": [
                        "RRO type is unspecified. This should never happen.",
                        "Ringtone",
                        "Wallpaper",
                        "Start Animation",
                        "Shutdown Animation",
                        "Notification",
                        "Alarm",
                        "Other"
                    ],
                    "type": "string"
                },
                "versionCode": {
                    "description": "Required. The version code found in the uploaded apk.",
                    "type": "string"
                },
                "zeroRatingEnabled": {
                    "description": "If enabled, RRO here qualify for zero-rating transfers.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Report": {
            "description": "This represents a test report. It could be Android Compatibility test\nsuite, CTS etc., or Google internal test, GMS Core test suite, GTS etc., or\ntest report for other devices. Next ID: 16",
            "id": "Report",
            "properties": {
                "buildFingerprint": {
                    "description": "Build fingerprint.",
                    "type": "string"
                },
                "companyId": {
                    "description": "The unique company identifier.",
                    "format": "int64",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company name.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "The name of the device which this build belongs to.",
                    "type": "string"
                },
                "fileName": {
                    "description": "The uploaded file which created this report.",
                    "type": "string"
                },
                "fileSize": {
                    "description": "The size of the uploaded file which created this report.",
                    "type": "string"
                },
                "mimeType": {
                    "description": "The MIME type of the uploaded file which created this report.",
                    "type": "string"
                },
                "modelName": {
                    "description": "Model name, for example, Nexus 6.",
                    "type": "string"
                },
                "modificationInfo": {
                    "$ref": "ModificationInfo",
                    "description": "Modification info."
                },
                "name": {
                    "description": "The unique resource name.",
                    "type": "string"
                },
                "productName": {
                    "description": "The name of the product which this build belongs to.",
                    "type": "string"
                },
                "roOemKey1": {
                    "description": "Report ro.oem.key1 value.",
                    "type": "string"
                },
                "screenshotUploadId": {
                    "description": "Ids of any screenshots uploaded with this report. Currently, the GTS report\ncontains screenshots.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sdkBuildId": {
                    "description": "The SDK build ID associated with the report.",
                    "type": "string"
                },
                "testSummary": {
                    "$ref": "TestSummary",
                    "description": "Test summary of this report."
                },
                "type": {
                    "description": "Report type, for example, CTS.",
                    "enum": [
                        "REPORT_TYPE_UNKNOWN",
                        "CTS",
                        "CTS_VERIFIER",
                        "GTS",
                        "CAT",
                        "WTS",
                        "WTS_VERIFIER",
                        "TVTS",
                        "CRT",
                        "PCTS",
                        "VTS",
                        "ATS",
                        "ATS_VERIFIER",
                        "GOTS",
                        "BTS",
                        "BTS_V2",
                        "STS",
                        "CTS_INSTANT"
                    ],
                    "enumDescriptions": [
                        "Unknown test report.",
                        "Android Compatibility Test Suite.",
                        "Android Compatibility Test Suite Verifier.",
                        "GMS Core Test Suite.",
                        "CTS Auto Test Suite.",
                        "Wearable Test Suite.",
                        "Wearable Test Suite Verifier.",
                        "TV Test Suite.",
                        "Cast Ready Test.",
                        "Automotive Projected Test Suite.",
                        "Vendor Test Suite (Treble).",
                        "Automotive Test Suite.",
                        "Automotive Test Suite Verifier.",
                        "Android Go Test Suite",
                        "Build Test Suite",
                        "Athena Report (BTS v2)",
                        "Security Test Suite",
                        "Instant App mode of CTS"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportRef": {
            "description": "Represents a reference to the data for a report.",
            "id": "ReportRef",
            "properties": {
                "name": {
                    "description": "The resource name will be used in ByteStream write or read for a report.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RetailBranding": {
            "description": "Retail branding information.",
            "id": "RetailBranding",
            "properties": {
                "name": {
                    "description": "The retail branding name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SamsungOptions": {
            "id": "SamsungOptions",
            "properties": {},
            "type": "object"
        },
        "SelectXtsBusinessLogicRequest": {
            "description": "The request message for retrieving the filtered XTS Business Logic for a\ngiven suite.",
            "id": "SelectXtsBusinessLogicRequest",
            "properties": {
                "deviceInfo": {
                    "description": "List of key value pair delimited by \":\".\nExample: \"fileName:total_memory:536870912\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "features": {
                    "description": "The system features of the DUT.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "moduleVersion": {
                    "description": "The module version to be configured. Service requests from\nsuite-agnostic tools (i.e. ATest) may attempt to invoke test cases from\nlegacy suite versions, in which case the service relies on this version\nto filter on the configuration.",
                    "type": "string"
                },
                "oem": {
                    "description": "The OEM of the device under testing (DUT).",
                    "type": "string"
                },
                "packages": {
                    "description": "Installed package names in the DUT.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "description": "The read-only properties of the DUT. Format = {key}:{value}\nexample: \"ro.build.brand:Google\".",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "suiteVersion": {
                    "description": "The suite version to be configured. For example, \"5.0_r1\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SimulatePlayAutoInstallRequest": {
            "description": "Play auto install simulate request message.",
            "id": "SimulatePlayAutoInstallRequest",
            "properties": {},
            "type": "object"
        },
        "SimulatePlayAutoInstallResponse": {
            "description": "Play auto install simulate response message.",
            "id": "SimulatePlayAutoInstallResponse",
            "properties": {
                "found": {
                    "description": "Simulate result, true if a play auto install is found, else false.",
                    "type": "boolean"
                },
                "playAutoInstall": {
                    "$ref": "PlayAutoInstall",
                    "description": "A play auto install after simulation."
                }
            },
            "type": "object"
        },
        "StartUploadAtvCustomizationFileResponse": {
            "description": "Start ATV customization file upload response message.",
            "id": "StartUploadAtvCustomizationFileResponse",
            "properties": {
                "ref": {
                    "description": "A reference returned from the server, should be used in next stream\ndownload.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StartUploadConfigApkResponse": {
            "description": "Start uploading APK response message.",
            "id": "StartUploadConfigApkResponse",
            "properties": {
                "apkRef": {
                    "description": "A reference returned from server, should be used in next stream upload.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StartUploadHardwareIdsFileResponse": {
            "description": "Start HardwareIds upload response message.",
            "id": "StartUploadHardwareIdsFileResponse",
            "properties": {
                "ref": {
                    "description": "A reference returned from the server, should be used in next stream\ndownload.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StartUploadPlayAutoInstallApkResponse": {
            "description": "Start uploading APK response message.",
            "id": "StartUploadPlayAutoInstallApkResponse",
            "properties": {
                "ref": {
                    "$ref": "PlayAutoInstallApkRef",
                    "description": "A reference returned from server, should be used in next stream upload."
                }
            },
            "type": "object"
        },
        "StartUploadReportResponse": {
            "description": "Start uploading report response message.",
            "id": "StartUploadReportResponse",
            "properties": {
                "ref": {
                    "$ref": "ReportRef",
                    "description": "A reference returned from server, should be used in next stream upload."
                }
            },
            "type": "object"
        },
        "Status": {
            "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
            "id": "Status",
            "properties": {
                "code": {
                    "description": "The status code, which should be an enum value of google.rpc.Code.",
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StatusChange": {
            "description": "Status change information.",
            "id": "StatusChange",
            "properties": {
                "changedBy": {
                    "description": "Email address of the person who made this change.",
                    "type": "string"
                },
                "changedTimeSec": {
                    "description": "Timestamp of when the change was made.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Storage": {
            "description": "Storage information.",
            "id": "Storage",
            "properties": {
                "flashStorageSizes": {
                    "description": "A list of flash storage sizes in Giga bytes.",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StreamCreateKeyboxCohortRequest": {
            "description": "A request message to create a KeyboxCohort.",
            "id": "StreamCreateKeyboxCohortRequest",
            "properties": {
                "creatorCompanyId": {
                    "description": "Creator company ID.",
                    "format": "int64",
                    "type": "string"
                },
                "deviceIds": {
                    "description": "The list of device ids for which to create Keyboxes.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deviceName": {
                    "description": "Device name.\nFor example, \"shamu\" is the device name for Nexus 6.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of Keybox that will make up the KeyboxCohort.",
                    "enum": [
                        "KEYBOX_TYPE_UNSPECIFIED",
                        "WIDEVINE_DRM",
                        "ANDROID_ATTESTATION",
                        "X509_ICA"
                    ],
                    "enumDescriptions": [
                        "Unspecified type.",
                        "Widevine DRM Keybox.",
                        "Android Attestation Keybox.",
                        "X509 ICA."
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Test": {
            "description": "A record of an unsuccessful test.\nNext Id: 14",
            "id": "Test",
            "properties": {
                "abi": {
                    "description": "The human readable value of the architecture that ran this test.",
                    "type": "string"
                },
                "reportId": {
                    "description": "ID of the report which has the most recent unsuccessful test run.",
                    "type": "string"
                },
                "testId": {
                    "description": "A string which uniquely identifies a test within a test report.\ne.g. \"android.webkit.cts.WebViewTest.testSetInitialScale\"",
                    "type": "string"
                },
                "testName": {
                    "description": "The human readable name of the test",
                    "type": "string"
                },
                "waiverStatus": {
                    "description": "The status of a waiver",
                    "enum": [
                        "WAIVER_STATUS_UNSPECIFIED",
                        "WAIVER_STATUS_PROPOSED",
                        "WAIVER_STATUS_APPROVED",
                        "WAIVER_STATUS_REJECTED"
                    ],
                    "enumDescriptions": [
                        "default",
                        "A Waiver that is proposed by OEM, but has not been accepted by TAM",
                        "A waiver that is previously proposed and accepted by TAM, or directly\nproposed by TAM",
                        "A waiver that is previously proposed but rejected by TAM"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TestAnalysis": {
            "description": "Per-build aggregated test analysis result.",
            "id": "TestAnalysis",
            "properties": {
                "failed": {
                    "description": "Tests found to be failing for the build, w/o waiver proposed, may be\ntruncated if test list is too long.",
                    "items": {
                        "$ref": "Test"
                    },
                    "type": "array"
                },
                "failedTestCount": {
                    "description": "Actual count of tests found to be failing for the build, w/o waiver\nproposed.",
                    "format": "int32",
                    "type": "integer"
                },
                "notExecuted": {
                    "description": "Tests found to be not executed for the build, may be truncated if test list\nis too long.",
                    "items": {
                        "$ref": "Test"
                    },
                    "type": "array"
                },
                "notExecutedTestCount": {
                    "description": "Actual count of tests found to be not executed for the build.",
                    "format": "int32",
                    "type": "integer"
                },
                "passPreviouslyTestCount": {
                    "description": "Actual count of tests found to be passing in a previous attachment for the\nbuild.",
                    "format": "int32",
                    "type": "integer"
                },
                "passedPreviously": {
                    "description": "Tests found to be passing in a previous attachment for the build, may be\ntruncated if test list is too long.",
                    "items": {
                        "$ref": "Test"
                    },
                    "type": "array"
                },
                "passedRerun": {
                    "description": "Tests found to be passing in a rerun attachment for the build, may be\ntruncated if test list is too long.",
                    "items": {
                        "$ref": "Test"
                    },
                    "type": "array"
                },
                "passedRerunTestCount": {
                    "description": "Actual count of tests found to be passing in a rerun attachment for the\nbuild.",
                    "format": "int32",
                    "type": "integer"
                },
                "uniqueTestCount": {
                    "description": "Actual count of unique tests.",
                    "format": "int32",
                    "type": "integer"
                },
                "waived": {
                    "description": "Tests found to be waived for the build, may be truncated if test list is\ntoo long.",
                    "items": {
                        "$ref": "Test"
                    },
                    "type": "array"
                },
                "waivedTestCount": {
                    "description": "Actual count of tests found to be waived for the build.",
                    "format": "int32",
                    "type": "integer"
                },
                "warning": {
                    "description": "Tests found to have warnings for this build, may be truncated if test list\nis too long.",
                    "items": {
                        "$ref": "Test"
                    },
                    "type": "array"
                },
                "warningTestCount": {
                    "description": "Actual count of tests found to have warnings for this build.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TestDescription": {
            "description": "TestDescription represents information of a test case in report.\nNext id: 5",
            "id": "TestDescription",
            "properties": {
                "abi": {
                    "description": "Abi runtime information of a test in report.",
                    "type": "string"
                },
                "caseName": {
                    "description": "Case name of a test in report.\ne.g. case name is BannedFilesTest\nwhere the full test name is android.security.cts.BannedFilesTest.testNoSu",
                    "type": "string"
                },
                "suiteName": {
                    "description": "Suite name of a test in report.\ne.g. suite name is android.security.cts\nwhere the full test name is android.security.cts.BannedFilesTest.testNoSu",
                    "type": "string"
                },
                "testName": {
                    "description": "Test name of a test in report.\ne.g. test name is testNoSu\nwhere the full test name is android.security.cts.BannedFilesTest.testNoSu",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TestResult": {
            "description": "Test result of a single test.",
            "id": "TestResult",
            "properties": {
                "details": {
                    "description": "Detailed information about the result, for example stack trace information.",
                    "type": "string"
                },
                "result": {
                    "description": "The result of a test.\nCurrently the result is one of \"pass\", \"fail\" and \"not_executed\".",
                    "type": "string"
                },
                "testDescription": {
                    "$ref": "TestDescription",
                    "description": "Description of the test."
                },
                "testId": {
                    "description": "Unique identifier for the test, for example:\ncom.android.cts.verifier.bluetooth.BluetoothTestActivity",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TestSummary": {
            "description": "Summary of tests in a given test report.\nNext ID: 10",
            "id": "TestSummary",
            "properties": {
                "androidVersion": {
                    "description": "Version of Android platform running this test.",
                    "type": "string"
                },
                "filePaths": {
                    "description": "List of file paths that were included in the report.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "testResults": {
                    "description": "Detailed information of each test problem that occurred.",
                    "items": {
                        "$ref": "TestResult"
                    },
                    "type": "array"
                },
                "testSuiteVersion": {
                    "description": "Version of the test suite program.",
                    "type": "string"
                },
                "testsFailed": {
                    "description": "Number of tests that have failed.",
                    "format": "int32",
                    "type": "integer"
                },
                "testsNotExecuted": {
                    "description": "Number of tests that were not executed.",
                    "format": "int32",
                    "type": "integer"
                },
                "testsPassed": {
                    "description": "Number of tests that have passed.",
                    "format": "int32",
                    "type": "integer"
                },
                "testsTimedOut": {
                    "description": "Number of tests that timed out.",
                    "format": "int32",
                    "type": "integer"
                },
                "testsWarning": {
                    "description": "Number of tests that have warnings.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UpdateBuildPriorityRequest": {
            "description": "A request to update build priority",
            "id": "UpdateBuildPriorityRequest",
            "properties": {
                "name": {
                    "description": "name, for example,\ndevices/136D60F1/products/87826ABE/builds/797EE92C",
                    "type": "string"
                },
                "priority": {
                    "description": "The priority value.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UpdateBuildPriorityResponse": {
            "description": "A response of build priority",
            "id": "UpdateBuildPriorityResponse",
            "properties": {
                "priority": {
                    "description": "Priority returned from server.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "UpdatePlayAutoInstallResponse": {
            "description": "Play auto install update response message.",
            "id": "UpdatePlayAutoInstallResponse",
            "properties": {
                "playAutoInstall": {
                    "$ref": "PlayAutoInstall",
                    "description": "Updated play auto install."
                }
            },
            "type": "object"
        },
        "UploadFirmwareRequest": {
            "description": "Request message",
            "id": "UploadFirmwareRequest",
            "properties": {
                "blob": {
                    "$ref": "_Media",
                    "description": "Blob returned by Scotty."
                },
                "mediaRequestInfo": {
                    "$ref": "MediaRequestInfo",
                    "description": "Contains info relating to the Scotty upload task."
                }
            },
            "type": "object"
        },
        "UploadFirmwareResponse": {
            "description": "Response message",
            "id": "UploadFirmwareResponse",
            "properties": {
                "mediaResponseInfo": {
                    "$ref": "MediaResponseInfo",
                    "description": "Used to send info back to Scotty."
                },
                "uploadRef": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UploadedBuildMetadata": {
            "id": "UploadedBuildMetadata",
            "properties": {
                "buildIdentifiers": {
                    "items": {
                        "$ref": "BuildIdentifier"
                    },
                    "type": "array"
                },
                "fastbootOptions": {
                    "$ref": "FastbootOptions"
                },
                "qfilOptions": {
                    "$ref": "QfilOptions"
                },
                "samsungOptions": {
                    "$ref": "SamsungOptions"
                }
            },
            "type": "object"
        },
        "VariantKey": {
            "id": "VariantKey",
            "properties": {
                "oemKey": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Waiver": {
            "description": "This represents a waiver for a given test.",
            "id": "Waiver",
            "properties": {
                "androidVersion": {
                    "description": "Android version, for example, 4.1, 5.0, 6.0.1, 7.0.",
                    "type": "string"
                },
                "bugUrl": {
                    "description": "The bug associated with this waiver.",
                    "type": "string"
                },
                "buildFingerprint": {
                    "description": "The build fingerprint of the report which this waiver belongs to.",
                    "type": "string"
                },
                "companyId": {
                    "description": "Company ID.",
                    "format": "int64",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company name.",
                    "type": "string"
                },
                "deviceName": {
                    "description": "The name of the device which this waiver belongs to.",
                    "type": "string"
                },
                "name": {
                    "description": "The unique resource name.",
                    "type": "string"
                },
                "notes": {
                    "description": "The notes for this wavier.",
                    "type": "string"
                },
                "productName": {
                    "description": "The name of the product which this waiver belongs to.",
                    "type": "string"
                },
                "reportId": {
                    "description": "Report ID",
                    "type": "string"
                },
                "testDescription": {
                    "$ref": "TestDescription",
                    "description": "The description of the test being waived"
                },
                "testId": {
                    "description": "The test ID is the test case name with additional information that\nis waived by Google Android Partner team, for example,\nandroid.security.cts.EncryptionTest.testEncryption.",
                    "type": "string"
                },
                "testSuiteVersion": {
                    "description": "The test suite version.",
                    "type": "string"
                },
                "type": {
                    "description": "Report type, for example, CTS.",
                    "enum": [
                        "REPORT_TYPE_UNKNOWN",
                        "CTS",
                        "CTS_VERIFIER",
                        "GTS",
                        "CAT",
                        "WTS",
                        "WTS_VERIFIER",
                        "TVTS",
                        "CRT",
                        "PCTS",
                        "VTS",
                        "ATS",
                        "ATS_VERIFIER",
                        "GOTS",
                        "BTS",
                        "BTS_V2",
                        "STS",
                        "CTS_INSTANT"
                    ],
                    "enumDescriptions": [
                        "Unknown test report.",
                        "Android Compatibility Test Suite.",
                        "Android Compatibility Test Suite Verifier.",
                        "GMS Core Test Suite.",
                        "CTS Auto Test Suite.",
                        "Wearable Test Suite.",
                        "Wearable Test Suite Verifier.",
                        "TV Test Suite.",
                        "Cast Ready Test.",
                        "Automotive Projected Test Suite.",
                        "Vendor Test Suite (Treble).",
                        "Automotive Test Suite.",
                        "Automotive Test Suite Verifier.",
                        "Android Go Test Suite",
                        "Build Test Suite",
                        "Athena Report (BTS v2)",
                        "Security Test Suite",
                        "Instant App mode of CTS"
                    ],
                    "type": "string"
                },
                "updateTime": {
                    "description": "Waiver update time.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "updateUser": {
                    "description": "Waiver update time.",
                    "type": "string"
                },
                "waiverStatus": {
                    "description": "The status of a waiver",
                    "enum": [
                        "WAIVER_STATUS_UNSPECIFIED",
                        "WAIVER_STATUS_PROPOSED",
                        "WAIVER_STATUS_APPROVED",
                        "WAIVER_STATUS_REJECTED"
                    ],
                    "enumDescriptions": [
                        "default",
                        "A Waiver that is proposed by OEM, but has not been accepted by TAM",
                        "A waiver that is previously proposed and accepted by TAM, or directly\nproposed by TAM",
                        "A waiver that is previously proposed but rejected by TAM"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WidevineKeybox": {
            "description": "A Widevine Keybox for a single device.",
            "id": "WidevineKeybox",
            "properties": {
                "crc": {
                    "description": "Widevine key crc value.",
                    "type": "string"
                },
                "deviceId": {
                    "description": "The ID of the device which can use this Keybox.",
                    "type": "string"
                },
                "id": {
                    "description": "Widevine key id.",
                    "type": "string"
                },
                "key": {
                    "description": "Widevine key value.",
                    "type": "string"
                },
                "magic": {
                    "description": "Widevine key magic value.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "XtsBusinessLogic": {
            "description": "A mapping of test names to XtsBusinessLogicRuleLists.",
            "id": "XtsBusinessLogic",
            "properties": {
                "authenticationStatus": {
                    "description": "Authentication status",
                    "enum": [
                        "UNKNOWN",
                        "NOT_AUTHENTICATED",
                        "NOT_AUTHORIZED",
                        "AUTHORIZED"
                    ],
                    "enumDescriptions": [
                        "Not set.",
                        "Credentials not supplied for valid.",
                        "User can not access requested data.",
                        "Authorized to access requested data."
                    ],
                    "type": "string"
                },
                "businessLogicRulesLists": {
                    "description": "A collection of BusinessLogicRuleLists, each consisting of rules for a\nclient-side test.",
                    "items": {
                        "$ref": "BusinessLogicRuleList"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Resource name of the XTS business logic. It must follow format\n\"xtsBusinessLogic/suites/*\". For example, the resource used by GTS is\nnamed \"xtsBusinessLogic/suites/gts\".",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Time of the server response",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "_Media": {
            "description": "A reference to data stored on the filesystem, on GFS or in blobstore.",
            "id": "_Media",
            "properties": {
                "algorithm": {
                    "description": "Deprecated, use one of explicit hash type fields instead.\nAlgorithm used for calculating the hash.\nAs of 2011/01/21, \"MD5\" is the only possible value for this field.\nNew values may be added at any time.",
                    "type": "string"
                },
                "bigstoreObjectRef": {
                    "description": "Use object_id instead.",
                    "format": "byte",
                    "type": "string"
                },
                "blobRef": {
                    "description": "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF\nThis should be the byte representation of a blobstore.BlobRef.\nSince Blobstore is deprecating v1, use blobstore2_info instead.\nFor now, any v2 blob will also be represented in this field as\nv1 BlobRef.",
                    "format": "byte",
                    "type": "string"
                },
                "blobstore2Info": {
                    "$ref": "Blobstore2Info",
                    "description": "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers\nto a v2 blob."
                },
                "compositeMedia": {
                    "description": "A composite media composed of one or more media objects, set if\nreference_type is COMPOSITE_MEDIA. The media length field must be set\nto the sum of the lengths of all composite media objects.\n\nNote: All composite media must have length specified.",
                    "items": {
                        "$ref": "CompositeMedia"
                    },
                    "type": "array"
                },
                "contentType": {
                    "description": "MIME type of the data",
                    "type": "string"
                },
                "contentTypeInfo": {
                    "$ref": "ContentTypeInfo",
                    "description": "Extended content type information provided for Scotty uploads."
                },
                "cosmoBinaryReference": {
                    "description": "A binary data reference for a media download. Serves as a\ntechnology-agnostic binary reference in some Google infrastructure.\nThis value is a serialized storage_cosmo.BinaryReference proto. Storing\nit as bytes is a hack to get around the fact that the cosmo proto\n(as well as others it includes) doesn't support JavaScript. This\nprevents us from including the actual type of this field.",
                    "format": "byte",
                    "type": "string"
                },
                "crc32cHash": {
                    "description": "For Scotty Uploads:\nScotty-provided hashes for uploads\n\nFor Scotty Downloads:\n(WARNING: DO NOT USE WITHOUT PERMISSION FROM THE SCOTTY TEAM.)\nA Hash provided by the agent to be used to verify the data being\ndownloaded. Currently only supported for inline payloads.\nFurther, only crc32c_hash is currently supported.",
                    "format": "uint32",
                    "type": "integer"
                },
                "diffChecksumsResponse": {
                    "$ref": "DiffChecksumsResponse",
                    "description": "Set if reference_type is DIFF_CHECKSUMS_RESPONSE."
                },
                "diffDownloadResponse": {
                    "$ref": "DiffDownloadResponse",
                    "description": "Set if reference_type is DIFF_DOWNLOAD_RESPONSE."
                },
                "diffUploadRequest": {
                    "$ref": "DiffUploadRequest",
                    "description": "Set if reference_type is DIFF_UPLOAD_REQUEST."
                },
                "diffUploadResponse": {
                    "$ref": "DiffUploadResponse",
                    "description": "Set if reference_type is DIFF_UPLOAD_RESPONSE."
                },
                "diffVersionResponse": {
                    "$ref": "DiffVersionResponse",
                    "description": "Set if reference_type is DIFF_VERSION_RESPONSE."
                },
                "downloadParameters": {
                    "$ref": "DownloadParameters",
                    "description": "Parameters for a media download."
                },
                "filename": {
                    "description": "Original file name",
                    "type": "string"
                },
                "hash": {
                    "description": "Deprecated, use one of explicit hash type fields instead.\nThese two hash related fields will only be populated on Scotty based media\nuploads and will contain the content of the hash group in the\nNotificationRequest:\nhttps://cs/#google3/uploader/service/proto/upload_listener.proto&q=class:Hash\nHex encoded hash value of the uploaded media.",
                    "type": "string"
                },
                "hashVerified": {
                    "description": "For Scotty uploads only. If a user sends a hash code and the backend has\nrequested that Scotty verify the upload against the client hash,\nScotty will perform the check on behalf of the backend and will reject it\nif the hashes don't match. This is set to true if Scotty performed\nthis verification.",
                    "type": "boolean"
                },
                "inline": {
                    "description": "Media data, set if reference_type is INLINE",
                    "format": "byte",
                    "type": "string"
                },
                "isPotentialRetry": {
                    "description": "|is_potential_retry| is set false only when Scotty is\ncertain that it has not sent the request before. When a client resumes\nan upload, this field must be set true in agent calls, because Scotty\ncannot be certain that it has never sent the request before due\nto potential failure in the session state persistence.",
                    "type": "boolean"
                },
                "length": {
                    "description": "Size of the data, in bytes",
                    "format": "int64",
                    "type": "string"
                },
                "md5Hash": {
                    "description": "Scotty-provided MD5 hash for an upload.",
                    "format": "byte",
                    "type": "string"
                },
                "mediaId": {
                    "description": "Media id to forward to the operation GetMedia.\nCan be set if reference_type is GET_MEDIA.",
                    "format": "byte",
                    "type": "string"
                },
                "objectId": {
                    "$ref": "ObjectId",
                    "description": "Reference to a TI Blob, set if reference_type is BIGSTORE_REF."
                },
                "path": {
                    "description": "Path to the data, set if reference_type is PATH",
                    "type": "string"
                },
                "referenceType": {
                    "description": "Describes what the field reference contains.",
                    "enum": [
                        "PATH",
                        "BLOB_REF",
                        "INLINE",
                        "GET_MEDIA",
                        "COMPOSITE_MEDIA",
                        "BIGSTORE_REF",
                        "DIFF_VERSION_RESPONSE",
                        "DIFF_CHECKSUMS_RESPONSE",
                        "DIFF_DOWNLOAD_RESPONSE",
                        "DIFF_UPLOAD_REQUEST",
                        "DIFF_UPLOAD_RESPONSE",
                        "COSMO_BINARY_REFERENCE",
                        "ARBITRARY_BYTES"
                    ],
                    "enumDescriptions": [
                        "Reference contains a GFS path or a local path.",
                        "Reference points to a blobstore object. This could be either\na v1 blob_ref or a v2 blobstore2_info. Clients should check\nblobstore2_info first, since v1 is being deprecated.",
                        "Data is included into this proto buffer",
                        "Data should be accessed from the current service\nusing the operation GetMedia.",
                        "The content for this media object is stored across\nmultiple partial media objects under the\ncomposite_media field.",
                        "Reference points to a bigstore object",
                        "Indicates the data is stored in diff_version_response.",
                        "Indicates the data is stored in diff_checksums_response.",
                        "Indicates the data is stored in diff_download_response.",
                        "Indicates the data is stored in diff_upload_request.",
                        "Indicates the data is stored in diff_upload_response.",
                        "Indicates the data is stored in cosmo_binary_reference.",
                        "Informs Scotty to generate a response payload with the size specified\nin the length field. The contents of the payload are generated by\nScotty and are undefined. This is useful for testing download speeds\nbetween the user and Scotty without involving a real payload source.\n\nNote: range is not supported when using arbitrary_bytes."
                    ],
                    "type": "string"
                },
                "sha1Hash": {
                    "description": "Scotty-provided SHA1 hash for an upload.",
                    "format": "byte",
                    "type": "string"
                },
                "sha256Hash": {
                    "description": "Scotty-provided SHA256 hash for an upload.",
                    "format": "byte",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Time at which the media data was last updated,\nin milliseconds since UNIX epoch",
                    "format": "uint64",
                    "type": "string"
                },
                "token": {
                    "description": "A unique fingerprint/version id for the media data",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Android Partner API",
    "version": "v1",
    "version_module": true
}